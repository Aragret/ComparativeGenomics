%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxUUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAG\
) } def
/len { sequence length } bind def

/coor [
[61.28295517 609.37500000]
[47.43895340 603.45574951]
[35.12837982 594.78723145]
[24.88940048 583.74835205]
[17.16962051 570.82171631]
[12.30651474 556.57232666]
[10.51267815 541.62322998]
[11.86652851 526.62786865]
[16.30888176 512.24182129]
[23.64553642 499.09390259]
[33.55576706 487.75897217]
[45.60633850 478.73248291]
[59.27045441 472.40905762]
[73.95077515 469.06512451]
[73.72744751 454.06680298]
[73.50411987 439.06845093]
[73.28079224 424.07012939]
[73.05746460 409.07177734]
[72.83413696 394.07345581]
[62.44979477 404.89773560]
[47.55128098 406.63967896]
[34.95000076 398.50286865]
[30.40709305 384.20733643]
[35.99950790 370.28881836]
[49.17047501 363.11068726]
[63.89839935 365.95468140]
[73.45050049 377.52227783]
[60.59017944 369.96731567]
[52.25108719 357.52670288]
[50.13174057 342.63812256]
[54.70552063 328.24713135]
[65.11629486 317.22430420]
[79.33808136 311.79272461]
[80.67631531 296.85253906]
[82.01454926 281.91235352]
[83.35278320 266.97216797]
[84.46843719 252.01371765]
[85.36125183 237.04031372]
[86.25406647 222.06690979]
[87.14688110 207.09350586]
[88.03969574 192.12010193]
[88.93251038 177.14668274]
[89.71383667 162.16705322]
[90.38362122 147.18200684]
[91.05340576 132.19697571]
[91.72319031 117.21193695]
[82.02297211 106.44847870]
[82.66996765 91.97340393]
[93.29177094 82.11827850]
[93.96155548 67.13323975]
[94.63134003 52.14820099]
[80.26310730 47.56681442]
[67.58026123 39.42857742]
[57.44411087 28.29330635]
[50.54114914 14.92409420]
[47.33660507 0.23503169]
[48.04304123 -14.77129745]
[52.60631180 -29.07224655]
[60.70962906 -41.69478989]
[71.79556274 -51.78174210]
[85.10437775 -58.64994431]
[99.72610474 -61.83655930]
[100.39589691 -76.82159424]
[101.06568146 -91.80663300]
[86.67471313 -99.39833832]
[77.06950378 -112.45910645]
[74.13214111 -128.34407043]
[78.40080261 -143.86381531]
[88.97193909 -155.92468262]
[103.69103241 -162.14552307]
[104.13764191 -177.13888550]
[104.58424377 -192.13223267]
[105.03085327 -207.12557983]
[105.47745514 -222.11892700]
[105.92406464 -237.11227417]
[106.37066650 -252.10563660]
[106.81727600 -267.09896851]
[107.26387787 -282.09231567]
[107.71048737 -297.08569336]
[93.14062500 -300.89688110]
[79.79067993 -307.85153198]
[68.32867432 -317.59799194]
[59.32739639 -329.64498901]
[53.23569489 -343.38644409]
[50.35614777 -358.13186646]
[50.83001709 -373.14111328]
[54.63031387 -387.66152954]
[61.56334305 -400.96572876]
[71.27854156 -412.38790894]
[83.28620911 -421.35733032]
[96.98222351 -427.42675781]
[111.67837524 -430.29467773]
[112.12497711 -445.28802490]
[101.56673431 -456.74057007]
[102.23323822 -471.93960571]
[113.21657562 -481.93469238]
[113.66317749 -496.92803955]
[114.10978699 -511.92141724]
[114.55638885 -526.91473389]
[100.67767334 -533.11553955]
[90.23196411 -544.15887451]
[84.81217957 -558.36077881]
[85.24478149 -573.55560303]
[91.46379852 -587.42614746]
[102.52088928 -597.85729980]
[116.72991943 -603.25842285]
[131.92411804 -602.80578613]
[145.78646851 -596.56854248]
[156.20309448 -585.49774170]
[161.58549500 -571.28161621]
[161.11291504 -556.08801270]
[154.85742188 -542.23388672]
[143.77293396 -531.83184814]
[129.54974365 -526.46813965]
[129.10313416 -511.47479248]
[128.65652466 -496.48144531]
[128.20991516 -481.48809814]
[138.57885742 -470.85699463]
[138.33952332 -455.64523315]
[127.11833191 -444.84140015]
[126.67172241 -429.84805298]
[141.17111206 -426.11050415]
[154.48158264 -419.23663330]
[165.93409729 -409.56842041]
[174.95220947 -397.58822632]
[181.08106995 -383.89495850]
[184.01036072 -369.17407227]
[183.59002686 -354.16323853]
[179.83792114 -339.61535645]
[172.93910217 -326.26083374]
[163.23674011 -314.77096558]
[151.21493530 -305.72399902]
[137.47471619 -299.57629395]
[122.70383453 -296.63906860]
[122.25723267 -281.64572144]
[121.81062317 -266.65237427]
[121.36402130 -251.65902710]
[120.91741180 -236.66567993]
[120.47080994 -221.67231750]
[120.02420044 -206.67897034]
[119.57759857 -191.68562317]
[119.13098907 -176.69227600]
[118.68437958 -161.69892883]
[131.29837036 -155.92349243]
[140.78831482 -145.74444580]
[145.69728088 -132.67611694]
[145.25321960 -118.67991638]
[139.49015808 -105.87004852]
[129.24810791 -96.19406891]
[116.05072021 -91.13684845]
[115.38093567 -76.15180969]
[114.71114349 -61.16677475]
[128.99028015 -56.68838120]
[141.63327026 -48.66020966]
[151.77508545 -37.62444305]
[158.71995544 -24.32929230]
[161.98916626 -9.67825699]
[161.35398865 5.33125782]
[156.85171509 19.67584991]
[148.78355408 32.37590027]
[137.69438171 42.56246567]
[124.33604431 49.53673935]
[109.61637878 52.81798935]
[108.94659424 67.80302429]
[108.27680969 82.78806305]
[117.97702789 93.55152130]
[117.33003235 108.02659607]
[106.70822906 117.88172150]
[106.03844452 132.86676025]
[105.36865997 147.85179138]
[104.69887543 162.83683777]
[107.44197083 171.54965210]
[103.90592194 178.03950500]
[103.01310730 193.01290894]
[102.12028503 207.98631287]
[101.22747040 222.95971680]
[100.33465576 237.93312073]
[99.44184113 252.90653992]
[102.05454254 258.97985840]
[101.31840515 264.61502075]
[98.29296875 268.31039429]
[96.95473480 283.25057983]
[95.61650085 298.19076538]
[94.27826691 313.13095093]
[107.30836487 321.00357056]
[115.59443665 333.70111084]
[117.53784180 348.67587280]
[112.80624390 362.95077515]
[102.38896179 373.71133423]
[88.39068604 378.86050415]
[87.83247375 393.85012817]
[88.05580139 408.84844971]
[88.27913666 423.84680176]
[88.50246429 438.84512329]
[88.72579193 453.84347534]
[88.94911957 468.84179688]
[103.72248840 471.74716187]
[117.56882477 477.66094971]
[129.88279724 486.32464600]
[140.12612915 497.35949707]
[147.85098267 510.28311157]
[152.71969604 524.53057861]
[154.51942444 539.47894287]
[153.17146301 554.47485352]
[148.73477173 568.86267090]
[141.40328979 582.01342773]
[131.49752808 593.35229492]
[119.45050049 602.38354492]
[105.78887177 608.71228027]
[91.10986328 612.06201172]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 196]
[15 195]
[16 194]
[17 193]
[18 192]
[19 191]
[27 190]
[33 184]
[34 183]
[35 182]
[36 181]
[37 178]
[38 177]
[39 176]
[40 175]
[41 174]
[42 173]
[43 171]
[44 170]
[45 169]
[46 168]
[49 165]
[50 164]
[51 163]
[62 152]
[63 151]
[64 150]
[70 143]
[71 142]
[72 141]
[73 140]
[74 139]
[75 138]
[76 137]
[77 136]
[78 135]
[79 134]
[92 121]
[93 120]
[96 117]
[97 116]
[98 115]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
