%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAACUAACAAUCGCCACACCAGCCCACACAAUAAUAAGACUUAAAACCCCCUCCAAUAUACCCAAAUUAUCAAAAAAAUUAAAUAAAUCCCCCUUACUACxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[73.12092590 623.49389648]
[59.05973816 628.75573730]
[44.53203964 632.54388428]
[29.69183731 634.81817627]
[14.69644356 635.55450439]
[-0.29518199 634.74505615]
[-15.12411976 632.39843750]
[-29.63317490 628.53948975]
[-43.66854095 623.20916748]
[-57.08143997 616.46392822]
[-69.72968292 608.37530518]
[-81.47919464 599.02899170]
[-92.20542145 588.52416992]
[-101.79466248 576.97210693]
[-110.14526367 564.49523926]
[-117.16870117 551.22589111]
[-122.79052734 537.30474854]
[-126.95114899 522.87927246]
[-129.60646057 508.10250854]
[-130.72830200 493.13101196]
[-130.30479431 478.12353516]
[-128.34043884 463.23913574]
[-124.85602570 448.63558960]
[-119.88851929 434.46774292]
[-113.49056244 420.88577271]
[-105.72998810 408.03363037]
[-96.68905640 396.04757690]
[-86.46360779 385.05465698]
[-75.16204071 375.17141724]
[-62.90415192 366.50262451]
[-49.81988144 359.14013672]
[-36.04793930 353.16204834]
[-21.73430634 348.63171387]
[-7.03072071 345.59713745]
[7.90695381 344.09051514]
[22.92036819 344.12780762]
[37.85037613 345.70861816]
[40.95448303 331.03332520]
[44.05859375 316.35803223]
[37.72529602 306.05191040]
[40.19128036 293.80026245]
[50.66925430 286.27865601]
[53.99151230 271.65118408]
[57.31377411 257.02371216]
[60.63603210 242.39627075]
[52.50563049 229.96919250]
[55.66650009 215.08753967]
[68.75628662 206.64389038]
[72.07854462 192.01643372]
[75.40080261 177.38896179]
[78.72306061 162.76150513]
[82.04532623 148.13404846]
[75.95904541 131.67427063]
[88.58148193 118.26697540]
[91.68559265 103.59166718]
[90.06130219 100.09394836]
[89.98663330 95.89724731]
[91.73920441 91.70970154]
[95.26989746 88.33715820]
[99.02619934 73.81509399]
[102.78249359 59.29303741]
[106.53879547 44.77097702]
[110.29509735 30.24892044]
[113.94318390 15.69929886]
[104.08706665 27.00667953]
[91.36763763 34.95753860]
[76.88526154 38.86404800]
[61.89281082 38.38825607]
[47.68727875 33.57132339]
[35.49758530 24.82995987]
[26.37826347 12.92038441]
[21.11822701 -1.12710667]
[20.17251778 -16.09726524]
[23.62295151 -30.69502258]
[31.17103004 -43.65752411]
[42.16377258 -53.86338806]
[55.65018845 -60.42970657]
[70.46357727 -62.78842163]
[85.32242584 -60.73548126]
[98.94129944 -54.44849014]
[110.14202881 -44.47133255]
[117.95564270 -31.66713142]
[121.70616913 -17.14358139]
[121.06983185 -2.16056800]
[128.53758240 -15.16952038]
[136.00531006 -28.17847252]
[143.47305298 -41.18742371]
[150.94079590 -54.19637680]
[158.40853882 -67.20532990]
[165.87628174 -80.21427917]
[158.28472900 -93.49267578]
[158.35833740 -108.68778229]
[165.97718811 -121.71926880]
[179.00869751 -129.13787842]
[193.90351868 -129.03826904]
[201.37126160 -142.04722595]
[208.83900452 -155.05618286]
[216.30673218 -168.06512451]
[204.29795837 -177.08560181]
[193.48873901 -187.51347351]
[184.04295349 -199.19065857]
[176.10379028 -211.94013977]
[169.79161072 -225.56864929]
[165.20210266 -239.86955261]
[162.40483093 -254.62606812]
[161.44221497 -269.61450195]
[162.32884216 -284.60760498]
[165.05128479 -299.37811279]
[169.56825256 -313.70211792]
[175.81127930 -327.36242676]
[183.68571472 -340.15197754]
[193.07218933 -351.87692261]
[203.82839966 -362.35943604]
[215.79130554 -371.44064331]
[228.77954102 -378.98291016]
[242.59619141 -384.87185669]
[257.03182983 -389.01821899]
[271.86758423 -391.35913086]
[286.87857056 -391.85910034]
[301.83721924 -390.51055908]
[316.51675415 -387.33398438]
[330.69464111 -382.37747192]
[344.15594482 -375.71618652]
[356.69662476 -367.45114136]
[368.12652588 -357.70758057]
[378.27239990 -346.63323975]
[386.98040771 -334.39599609]
[394.11859131 -321.18136597]
[399.57867432 -307.18969727]
[403.27795410 -292.63308716]
[405.16027832 -277.73220825]
[405.19714355 -262.71292114]
[403.38800049 -247.80297852]
[399.76025391 -233.22837830]
[394.36892700 -219.21006775]
[387.29574585 -205.96055603]
[378.64791870 -193.68070984]
[368.55654907 -182.55668640]
[357.17462158 -172.75712585]
[344.67468262 -164.43058777]
[331.24624634 -157.70329285]
[317.09286499 -152.67723083]
[302.42907715 -149.42858887]
[287.47723389 -148.00662231]
[272.46398926 -148.43289185]
[257.61691284 -150.70094299]
[243.16110229 -154.77636719]
[229.31568909 -160.59739685]
[221.84794617 -147.58843994]
[214.38020325 -134.57948303]
[206.91246033 -121.57053375]
[214.50981140 -108.75859070]
[214.67527771 -93.76430511]
[207.26428223 -80.61350250]
[194.17991638 -72.88717651]
[178.88523865 -72.74654388]
[171.41749573 -59.73758698]
[163.94975281 -46.72863770]
[156.48200989 -33.71968460]
[149.01426697 -20.71073151]
[141.54652405 -7.70177937]
[134.07878113 5.30717325]
[128.51956177 19.23897171]
[129.99586487 26.48067665]
[124.81716156 34.00521851]
[121.06085968 48.52727890]
[117.30455780 63.04933929]
[113.54825592 77.57139587]
[109.79195404 92.09346008]
[106.36089325 106.69577789]
[103.25678253 121.37107849]
[109.62537384 132.58731079]
[106.73783112 144.74650574]
[96.67278290 151.45629883]
[93.35052490 166.08377075]
[90.02826691 180.71122742]
[86.70600891 195.33868408]
[83.38374329 209.96614075]
[91.54191589 223.23573303]
[87.96429443 238.02273560]
[75.26348877 245.71852112]
[71.94123077 260.34597778]
[68.61897278 274.97344971]
[65.29671478 289.60089111]
[71.14984131 307.06005859]
[58.73389816 319.46212769]
[55.62978745 334.13745117]
[52.52567673 348.81274414]
[66.81704712 353.41281128]
[80.55968475 359.45797729]
[93.60790253 366.88415527]
[105.82337952 375.61260986]
[117.07662964 385.55084229]
[127.24835968 396.59350586]
[136.23074341 408.62350464]
[143.92855835 421.51330566]
[150.26022339 435.12631226]
[155.15859985 449.31823730]
[158.57176208 463.93856812]
[160.46353149 478.83236694]
[160.81385803 493.84173584]
[159.61903381 508.80758667]
[156.89170837 523.57122803]
[152.66081238 537.97619629]
[146.97117615 551.86981201]
[139.88311768 565.10473633]
[131.47178650 577.54071045]
[121.82633972 589.04589844]
[111.04902649 599.49835205]
[99.25408173 608.78723145]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 188]
[38 187]
[39 186]
[42 184]
[43 183]
[44 182]
[45 181]
[48 178]
[49 177]
[50 176]
[51 175]
[52 174]
[54 171]
[55 170]
[59 169]
[60 168]
[61 167]
[62 166]
[63 165]
[64 163]
[84 162]
[85 161]
[86 160]
[87 159]
[88 158]
[89 157]
[90 156]
[95 151]
[96 150]
[97 149]
[98 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
