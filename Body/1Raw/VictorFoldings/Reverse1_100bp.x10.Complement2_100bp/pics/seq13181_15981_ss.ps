%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGAUAAUACUCAGGAUCAACUGAACUUCACCUCUUCCGAUGCUAAAAAAACUACAGUAAAACACAUUCCCGCGUCUGACGACGCUUGUCUCACCACUAUxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[39.69837570 372.07839966]
[38.49139786 387.13562012]
[33.08991241 401.24237061]
[23.93179703 413.25509644]
[11.75945663 422.19998169]
[-2.44035220 427.35186768]
[-17.51651382 428.29315186]
[-32.24687195 424.94754028]
[-45.43730164 417.58618164]
[-56.01851273 406.80590820]
[-63.13273621 393.48056030]
[-66.20325470 378.69042969]
[-64.98114777 363.63442993]
[-59.56549835 349.53311157]
[-50.39531708 337.52957153]
[-38.21399689 328.59692383]
[-24.00901985 323.45928955]
[-8.93192005 322.53314209]
[-5.60966110 307.90570068]
[-2.28740144 293.27822876]
[1.03485811 278.65078735]
[4.35711765 264.02331543]
[-8.28825569 272.09143066]
[-23.17706680 270.26843262]
[-33.50235367 259.38778687]
[-34.54353333 244.42398071]
[-25.82459259 232.21824646]
[-11.33171272 228.35089111]
[2.30915523 234.59001160]
[8.86178875 248.08502197]
[13.68778706 233.88256836]
[18.51378441 219.68011475]
[23.33978271 205.47766113]
[12.35082150 215.68759155]
[-1.33102107 221.83634949]
[-16.26186752 223.27502441]
[-30.86603165 219.85180664]
[-43.60229874 211.92796326]
[-53.12658310 200.33969116]
[-58.43376160 186.30993652]
[-58.96375656 171.31930542]
[-54.66063690 156.94978333]
[-45.97851944 144.71781921]
[-33.83364868 135.91429138]
[-19.50770378 131.46824646]
[-4.51253462 131.84889221]
[9.56938362 137.01606750]
[21.25195122 146.42443848]
[29.30227852 159.08114624]
[32.87079620 173.65048218]
[31.58086395 188.59510803]
[39.80967331 176.05371094]
[48.03847885 163.51231384]
[49.07961655 156.19535828]
[56.48432922 150.84671021]
[64.89894867 138.42921448]
[73.31356812 126.01171875]
[81.72818756 113.59422302]
[77.56933594 96.05952454]
[87.45550537 80.99217224]
[105.19644165 77.82661438]
[113.23760986 65.16408539]
[121.27878571 52.50156403]
[122.14517212 36.70409775]
[135.49957275 30.10793495]
[143.54074097 17.44540977]
[151.58190918 4.78288507]
[141.40171814 -6.34360123]
[134.45396423 -19.71574211]
[131.20693970 -34.41923523]
[131.87609863 -49.45050049]
[136.40985107 -63.78516769]
[144.49342346 -76.44791412]
[155.57069397 -86.57878113]
[168.88253784 -93.49162292]
[183.51873779 -96.72053528]
[198.48031616 -96.05129242]
[212.74766541 -91.53550720]
[220.78883362 -104.19803619]
[228.83001709 -116.86055756]
[236.87118530 -129.52308655]
[244.91235352 -142.18560791]
[245.77874756 -157.98307800]
[259.13314819 -164.57923889]
[266.30850220 -177.75170898]
[272.58587646 -191.37503052]
[278.86322021 -204.99835205]
[285.14059448 -218.62165833]
[291.41793823 -232.24497986]
[297.69531250 -245.86828613]
[303.97268677 -259.49160767]
[310.25003052 -273.11492920]
[297.38632202 -280.86010742]
[285.45272827 -289.97344971]
[274.59414673 -300.34426880]
[264.94235229 -311.84671021]
[256.61453247 -324.34112549]
[249.71174622 -337.67587280]
[244.31784058 -351.68902588]
[240.49826050 -366.21054077]
[238.29936218 -381.06408691]
[237.74786377 -396.06939697]
[238.85044861 -411.04428101]
[241.59373474 -425.80697632]
[245.94441223 -440.17831421]
[251.84968567 -453.98376465]
[259.23785400 -467.05581665]
[268.01922607 -479.23574829]
[278.08721924 -490.37570190]
[289.31964111 -500.34045410]
[301.58007812 -509.00903320]
[314.71975708 -516.27624512]
[328.57913208 -522.05383301]
[342.98999023 -526.27172852]
[357.77737427 -528.87866211]
[372.76181030 -529.84295654]
[387.76138306 -529.15301514]
[402.59402466 -526.81713867]
[417.07965088 -522.86370850]
[431.04244995 -517.34069824]
[444.31289673 -510.31515503]
[456.72991943 -501.87234497]
[468.14279175 -492.11480713]
[478.41296387 -481.16098022]
[487.41577148 -469.14379883]
[495.04190063 -456.20913696]
[501.19882202 -442.51403809]
[505.81176758 -428.22476196]
[508.82473755 -413.51470947]
[510.20117188 -398.56250000]
[509.92437744 -383.54962158]
[507.99768066 -368.65832520]
[504.44445801 -354.06933594]
[499.30789185 -339.95980835]
[492.65029907 -326.50100708]
[484.55252075 -313.85629272]
[475.11282349 -302.17913818]
[464.44583130 -291.61135864]
[452.68103027 -282.28115845]
[439.96118164 -274.30184937]
[426.44076538 -267.77029419]
[412.28387451 -262.76577759]
[397.66232300 -259.34902954]
[382.75369263 -257.56152344]
[367.73886108 -257.42498779]
[352.80017090 -258.94104004]
[338.11892700 -262.09133911]
[323.87335205 -266.83755493]
[317.59597778 -253.21424866]
[311.31863403 -239.59092712]
[305.04125977 -225.96762085]
[298.76391602 -212.34429932]
[292.48654175 -198.72097778]
[286.20919800 -185.09767151]
[279.93182373 -171.47434998]
[293.31295776 -178.25265503]
[308.24499512 -176.82649231]
[320.10110474 -167.63777161]
[325.20755005 -153.53372192]
[321.98199463 -138.88462830]
[311.42398071 -128.22967529]
[296.80496216 -124.87042236]
[282.65484619 -129.84776306]
[273.35815430 -141.61941528]
[271.79565430 -156.53807068]
[271.50442505 -141.64630127]
[257.57489014 -134.14443970]
[249.53370667 -121.48191071]
[241.49253845 -108.81938934]
[233.45137024 -96.15686035]
[225.41018677 -83.49433899]
[235.56439209 -72.50153351]
[242.53237915 -59.24468613]
[245.83386230 -44.62467575]
[245.23791504 -29.63677406]
[240.77915955 -15.30289364]
[232.75581360 -2.60191202]
[221.70971680 7.59718037]
[208.38978577 14.59473324]
[193.70117188 17.90843010]
[178.64384460 17.30653000]
[164.24444580 12.82405853]
[156.20326233 25.48658371]
[148.16209412 38.14910889]
[147.87086487 53.04086685]
[133.94131470 60.54273605]
[125.90013885 73.20526123]
[117.85896301 85.86778259]
[122.44821167 96.16076660]
[121.54048920 107.39387512]
[115.35806274 116.81642151]
[105.41484833 122.12106323]
[94.14568329 122.00884247]
[85.73106384 134.42633057]
[77.31644440 146.84382629]
[68.90182495 159.26132202]
[60.57987976 171.74111938]
[52.35107422 184.28251648]
[44.12226486 196.82391357]
[37.54223633 210.30364990]
[32.71623993 224.50610352]
[27.89024162 238.70857239]
[23.06424522 252.91102600]
[18.98457718 267.34558105]
[15.66231823 281.97302246]
[12.34005833 296.60049438]
[9.01779938 311.22796631]
[5.69553995 325.85540771]
[18.89335823 333.20349121]
[29.48539543 343.97314453]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 208]
[19 207]
[20 206]
[21 205]
[22 204]
[30 203]
[31 202]
[32 201]
[33 200]
[51 199]
[52 198]
[53 197]
[55 196]
[56 195]
[57 194]
[58 193]
[61 188]
[62 187]
[63 186]
[65 184]
[66 183]
[67 182]
[78 171]
[79 170]
[80 169]
[81 168]
[82 167]
[84 165]
[85 155]
[86 154]
[87 153]
[88 152]
[89 151]
[90 150]
[91 149]
[92 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
