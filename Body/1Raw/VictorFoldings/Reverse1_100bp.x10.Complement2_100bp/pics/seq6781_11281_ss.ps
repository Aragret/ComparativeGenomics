%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[248.50726318 507.43930054]
[243.68125916 493.23684692]
[238.85527039 479.03439331]
[234.02926636 464.83193970]
[228.88731384 450.74081421]
[223.43194580 436.76800537]
[211.59571838 427.72628784]
[213.78417969 412.05715942]
[208.32881165 398.08435059]
[202.87345886 384.11157227]
[197.41810608 370.13876343]
[191.96273804 356.16598511]
[177.09320068 357.85308838]
[162.28228760 355.63195801]
[148.54048157 349.64804077]
[136.80693054 340.30374146]
[127.88519287 328.23132324]
[122.38828278 314.25015259]
[120.69648743 299.31109619]
[122.93109894 284.43179321]
[128.94572449 270.62744141]
[138.33589172 258.84143066]
[150.46618652 249.88088989]
[145.01083374 235.90809631]
[139.55546570 221.93530273]
[134.10011292 207.96249390]
[128.64476013 193.98970032]
[116.80851746 184.94798279]
[118.99697876 169.27885437]
[107.16074371 160.23713684]
[109.34919739 144.56802368]
[103.89384460 130.59523010]
[87.97544861 128.40139771]
[75.32107544 118.49812317]
[69.36572266 103.57358551]
[71.72592926 87.67900848]
[81.76104736 75.12892914]
[76.09825897 61.23890305]
[70.43547058 47.34887314]
[64.77268219 33.45884705]
[59.10989761 19.56882095]
[52.30921173 32.93858719]
[38.08985138 37.71454620]
[24.59731483 31.16081619]
[19.56073570 17.03166580]
[25.86529922 3.42091632]
[39.89946365 -1.87457597]
[53.62316132 4.17800283]
[49.22216415 -10.16184425]
[35.45392609 -22.38956261]
[40.04746246 -39.32669067]
[35.43345261 -53.59942627]
[30.81944275 -67.87215424]
[26.17684555 -72.57936859]
[24.81311798 -78.09636688]
[26.28739548 -82.63899994]
[22.10038567 -97.04278564]
[17.80626106 -111.41500092]
[13.29863262 -125.72168732]
[8.68462372 -139.99441528]
[4.07061434 -154.26715088]
[-0.64952004 -168.50514221]
[-5.47551775 -182.70759583]
[-10.30151558 -196.91004944]
[-15.12751293 -211.11250305]
[-29.77003670 -207.79374695]
[-44.67925644 -206.02374268]
[-59.69181824 -205.82191467]
[-74.64323425 -207.19044495]
[-89.36968994 -210.11434937]
[-103.70983124 -214.56158447]
[-117.50654602 -220.48344421]
[-130.60865784 -227.81503296]
[-142.87263489 -236.47602844]
[-154.16409302 -246.37152100]
[-164.35929871 -257.39309692]
[-173.34657288 -269.42001343]
[-181.02745056 -282.32046509]
[-187.31774902 -295.95315552]
[-192.14857483 -310.16867065]
[-195.46697998 -324.81127930]
[-197.23661804 -339.72052002]
[-197.43809509 -354.73309326]
[-196.06919861 -369.68447876]
[-193.14492798 -384.41085815]
[-188.69734192 -398.75091553]
[-182.77514648 -412.54745483]
[-175.44323730 -425.64941406]
[-166.78195190 -437.91317749]
[-156.88618469 -449.20437622]
[-145.86434937 -459.39932251]
[-133.83721924 -468.38632202]
[-120.93657684 -476.06686401]
[-107.30374908 -482.35684204]
[-93.08811951 -487.18731689]
[-78.44543457 -490.50537109]
[-63.53612518 -492.27465820]
[-48.52355576 -492.47576904]
[-33.57220840 -491.10650635]
[-18.84589386 -488.18188477]
[-4.50596619 -483.73394775]
[9.29045963 -477.81140137]
[22.39222145 -470.47918701]
[34.65577316 -461.81759644]
[45.94674301 -451.92153931]
[56.14142227 -440.89947510]
[65.12812042 -428.87213135]
[72.80835724 -415.97128296]
[79.09799957 -402.33831787]
[83.92813110 -388.12255859]
[87.24582672 -373.47979736]
[89.01473999 -358.57043457]
[89.21548462 -343.55786133]
[87.84586334 -328.60656738]
[84.92088318 -313.88031006]
[80.47259521 -299.54049683]
[74.54972839 -285.74420166]
[67.21718597 -272.64263916]
[58.55530548 -260.37930298]
[48.65898514 -249.08856201]
[37.63666153 -238.89414978]
[25.60909653 -229.90774536]
[12.70807362 -222.22781372]
[-0.92505735 -215.93850708]
[3.90094018 -201.73605347]
[8.72693825 -187.53359985]
[13.55293560 -173.33113098]
[18.68131065 -168.00933838]
[18.34334755 -158.88116455]
[22.95735741 -144.60842896]
[27.57136536 -130.33569336]
[32.61993790 -124.93812561]
[32.14610672 -115.81599426]
[37.11375809 -110.34386444]
[36.50416565 -101.22979736]
[40.69117737 -86.82601166]
[45.09217453 -72.48616791]
[49.70618439 -58.21343231]
[54.32019424 -43.94070053]
[64.94372559 -38.15561676]
[68.90454102 -26.30252647]
[63.56201172 -14.56284237]
[67.96301270 -0.22299504]
[72.99992371 13.90603447]
[78.66271210 27.79606056]
[84.32550049 41.68608856]
[89.98828888 55.57611465]
[95.65106964 69.46614075]
[109.19463348 70.56043243]
[120.95359802 77.36868286]
[128.64564514 88.56948853]
[130.77781677 101.98885345]
[126.93627930 115.02220154]
[117.86663818 125.13986206]
[123.32199860 139.11267090]
[135.54843140 149.15380859]
[132.96977234 163.82350159]
[145.19621277 173.86465454]
[142.61755371 188.53434753]
[148.07290649 202.50714111]
[153.52827454 216.47993469]
[158.98362732 230.45274353]
[164.43898010 244.42553711]
[179.43170166 242.79652405]
[194.32362366 245.10215759]
[208.10054016 251.17935181]
[219.82575989 260.60833740]
[228.70378113 272.74169922]
[234.13424683 286.74880981]
[235.75257874 301.67266846]
[233.45445251 316.49533081]
[227.40245056 330.20727539]
[218.01460266 341.87628174]
[205.93554688 350.71060181]
[211.39089966 364.68341064]
[216.84625244 378.65621948]
[222.30162048 392.62899780]
[227.75697327 406.60180664]
[239.98341370 416.64294434]
[237.40475464 431.31265259]
[242.86010742 445.28543091]
[246.93649292 448.54583740]
[249.13481140 452.63491821]
[249.45388794 456.69857788]
[248.23171997 460.00595093]
[253.05772400 474.20840454]
[257.88372803 488.41085815]
[262.70971680 502.61331177]
[277.74667358 501.45529175]
[292.59902954 504.07400513]
[306.33322144 510.30480957]
[318.08584595 519.75610352]
[327.11816406 531.83367920]
[332.86236572 545.77838135]
[334.95739746 560.71362305]
[333.27154541 575.70056152]
[327.91076660 589.79711914]
[319.21206665 602.11718750]
[307.72225952 611.88629150]
[294.16357422 618.49029541]
[279.38836670 621.51416016]
[264.32537842 620.76770020]
[249.92147827 616.29791260]
[237.08213806 608.38574219]
[226.61444092 597.52862549]
[219.17639160 584.40893555]
[215.23554993 569.85144043]
[215.03962708 554.77124023]
[218.60096741 540.11627197]
[225.69567871 526.80780029]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 188]
[2 187]
[3 186]
[4 185]
[5 181]
[6 180]
[8 178]
[9 177]
[10 176]
[11 175]
[12 174]
[23 163]
[24 162]
[25 161]
[26 160]
[27 159]
[29 157]
[31 155]
[32 154]
[37 148]
[38 147]
[39 146]
[40 145]
[41 144]
[48 143]
[49 142]
[51 139]
[52 138]
[53 137]
[56 136]
[57 135]
[58 133]
[59 131]
[60 130]
[61 129]
[62 127]
[63 126]
[64 125]
[65 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
