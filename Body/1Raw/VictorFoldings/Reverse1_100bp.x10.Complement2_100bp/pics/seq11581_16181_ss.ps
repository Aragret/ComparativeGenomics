%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCCCCCAAACCUACUCUUACCGACAAUGAUGCUCCCGAUACACCGACUAACUUCUCAUACGUUACUCGCUAAAAUCCAGACAAACAGCAUCCGUCUAxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[-6.84526682 766.02447510]
[-19.30203629 774.41412354]
[-32.67926025 781.24108887]
[-46.78186417 786.40576172]
[-61.40418625 789.83282471]
[-76.33299255 791.47241211]
[-91.35057831 791.30047607]
[-106.23793793 789.31958008]
[-120.77796936 785.55865479]
[-134.75865173 780.07244873]
[-147.97607422 772.94110107]
[-160.23751831 764.26843262]
[-171.36416626 754.18109131]
[-181.19375610 742.82604980]
[-189.58293152 730.36895752]
[-196.40937805 716.99151611]
[-201.57353210 702.88867188]
[-205.00009155 688.26623535]
[-206.63908386 673.33740234]
[-206.46659851 658.31982422]
[-204.48516846 643.43249512]
[-200.72367859 628.89263916]
[-195.23696899 614.91217041]
[-188.10508728 601.69500732]
[-179.43200684 589.43383789]
[-169.34420776 578.30761719]
[-157.98881531 568.47845459]
[-145.53141785 560.08972168]
[-132.15368652 553.26379395]
[-118.05069733 548.10015869]
[-103.42811584 544.67413330]
[-88.49919128 543.03570557]
[-73.48162079 543.20874023]
[-58.59440613 545.19073486]
[-54.83810806 530.66870117]
[-51.08180618 516.14660645]
[-47.32550430 501.62454224]
[-43.56920242 487.10250854]
[-39.81290436 472.58044434]
[-41.11770248 470.09939575]
[-41.51833725 466.95199585]
[-40.75609207 463.48004150]
[-38.70063400 460.11260986]
[-35.37656784 457.31893921]
[-30.76255798 443.04620361]
[-26.14854813 428.77346802]
[-21.53453827 414.50073242]
[-16.92053032 400.22802734]
[-12.30652046 385.95529175]
[-13.64489365 381.37075806]
[-12.11750889 375.89682007]
[-7.33681870 371.32992554]
[-2.29990244 357.20089722]
[2.73701382 343.07186890]
[1.53573203 338.44952393]
[3.22541952 333.02346802]
[8.13996315 328.60095215]
[13.59532070 314.62814331]
[19.05067825 300.65536499]
[24.50603485 286.68255615]
[24.01045799 279.30853271]
[30.14803123 272.54333496]
[35.81081772 258.65328979]
[41.47360611 244.76327515]
[47.13639069 230.87324524]
[52.38311005 216.82077026]
[57.20910645 202.61831665]
[62.03510666 188.41586304]
[58.80397797 173.87594604]
[70.56986237 163.29887390]
[75.39585876 149.09642029]
[80.22186279 134.89396667]
[85.04785919 120.69150543]
[89.87385559 106.48905182]
[94.48786163 92.21631622]
[98.88886261 77.87646484]
[95.54105377 62.41352081]
[106.67201233 52.51650238]
[111.07300568 38.17665482]
[115.47400665 23.83680725]
[112.12619781 8.37386036]
[123.25715637 -1.52315879]
[127.65814972 -15.86300564]
[132.05915833 -30.20285225]
[128.71133423 -45.66579819]
[139.84230042 -55.56282043]
[144.24330139 -69.90266418]
[148.64430237 -84.24251556]
[148.17047119 -93.36464691]
[153.21903992 -98.76221466]
[157.72666931 -113.06890106]
[162.12767029 -127.40874481]
[166.52865601 -141.74859619]
[169.19445801 -156.50981140]
[170.08728027 -171.48321533]
[163.18508911 -185.71945190]
[171.66621399 -197.96362305]
[172.55903625 -212.93702698]
[173.45184326 -227.91044617]
[159.53164673 -233.91075134]
[148.50527954 -244.31243896]
[141.70425415 -257.85946655]
[139.94981384 -272.91595459]
[143.45382690 -287.66375732]
[151.79316711 -300.32199097]
[163.96080017 -309.36215210]
[178.48744202 -313.69256592]
[193.61892700 -312.79034424]
[207.52804565 -306.76437378]
[218.53521729 -296.34237671]
[225.31126404 -282.78286743]
[227.03794861 -267.72317505]
[223.50677490 -252.98184204]
[215.14411926 -240.33897400]
[202.95985413 -231.32125854]
[188.42524719 -227.01762390]
[187.53244019 -212.04421997]
[186.63961792 -197.07081604]
[193.60566711 -183.90557861]
[185.06068420 -170.59039307]
[184.16786194 -155.61698914]
[192.19433594 -168.28883362]
[204.02838135 -177.50596619]
[218.27975464 -182.18553162]
[233.27421570 -181.77780151]
[247.25022888 -176.33068848]
[258.56588745 -166.48408508]
[265.89187622 -153.39477539]
[268.36752319 -138.60047913]
[265.70199585 -123.83921051]
[258.20843506 -110.84511566]
[246.76718140 -101.14472198]
[232.72233582 -95.87762451]
[217.72387695 -95.66259766]
[203.53379822 -100.52490234]
[191.81916809 -109.89331055]
[183.95617676 -122.66724396]
[180.86851501 -137.34759521]
[176.46751404 -123.00774384]
[172.06651306 -108.66790009]
[173.10917664 -101.35116577]
[167.49177551 -94.14820099]
[162.98414612 -79.84151459]
[158.58314514 -65.50167084]
[154.18214417 -51.16182327]
[157.84474182 -36.72455597]
[146.39900208 -25.80185509]
[141.99800110 -11.46200752]
[137.59700012 2.87783933]
[141.25959778 17.31510353]
[129.81385803 28.23780632]
[125.41285706 42.57765198]
[121.01185608 56.91749954]
[124.67446136 71.35476685]
[113.22870636 82.27746582]
[108.82771301 96.61731720]
[110.17238617 101.68740082]
[108.58065796 107.14997864]
[104.07630920 111.31504822]
[99.25031281 125.51750183]
[94.42431641 139.71995544]
[89.59832001 153.92240906]
[84.77231598 168.12486267]
[87.65825653 183.68063354]
[76.23756409 193.24185181]
[71.41156006 207.44432068]
[66.58556366 221.64677429]
[67.58245087 225.87289429]
[67.21920776 229.80133057]
[65.75643158 233.04103088]
[63.55494690 235.32579041]
[61.02641678 236.53602600]
[55.36363220 250.42605591]
[49.70084381 264.31607056]
[44.03805923 278.20611572]
[38.47883224 292.13790894]
[33.02347565 306.11071777]
[27.56811905 320.08349609]
[22.11276054 334.05630493]
[16.86604309 348.10876465]
[11.82912731 362.23779297]
[6.79221106 376.36682129]
[1.96621323 390.56927490]
[-2.64779615 404.84201050]
[-7.26180553 419.11474609]
[-11.87581444 433.38748169]
[-16.48982430 447.66021729]
[-21.10383224 461.93295288]
[-25.29084396 476.33673096]
[-29.04714584 490.85879517]
[-32.80344391 505.38085938]
[-36.55974579 519.90289307]
[-40.31604767 534.42498779]
[-44.07234955 548.94702148]
[-30.09126472 554.43218994]
[-16.87329865 561.56256104]
[-4.61120749 570.23425293]
[6.51619148 580.32080078]
[16.34662819 591.67510986]
[24.73674583 604.13159180]
[31.56419182 617.50854492]
[36.72940063 631.61096191]
[40.15705109 646.23315430]
[41.79715729 661.16186523]
[41.62579727 676.17950439]
[39.64547729 691.06689453]
[35.88507080 705.60711670]
[30.39941597 719.58795166]
[23.26851273 732.80566406]
[14.59634876 745.06744385]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 194]
[35 193]
[36 192]
[37 191]
[38 190]
[39 189]
[44 188]
[45 187]
[46 186]
[47 185]
[48 184]
[49 183]
[52 182]
[53 181]
[54 180]
[57 179]
[58 178]
[59 177]
[60 176]
[62 175]
[63 174]
[64 173]
[65 172]
[66 167]
[67 166]
[68 165]
[70 163]
[71 162]
[72 161]
[73 160]
[74 159]
[75 156]
[76 155]
[78 153]
[79 152]
[80 151]
[82 149]
[83 148]
[84 147]
[86 145]
[87 144]
[88 143]
[90 142]
[91 140]
[92 139]
[93 138]
[94 121]
[95 120]
[97 118]
[98 117]
[99 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
