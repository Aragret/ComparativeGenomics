%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxAUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[91.76372528 797.81158447]
[77.57451630 792.86340332]
[64.25700378 785.90197754]
[52.09506989 777.07556152]
[41.34793472 766.57238770]
[32.24467850 754.61627197]
[24.97933960 741.46209717]
[19.70677376 727.39019775]
[16.53937149 712.70056152]
[15.54464245 697.70629883]
[16.74379158 682.72698975]
[20.11125755 668.08190918]
[25.57526207 654.08325195]
[33.01934052 641.02935791]
[42.28482437 629.19854736]
[53.17421722 618.84289551]
[65.45540619 610.18322754]
[78.86662292 603.40405273]
[93.12200928 598.64990234]
[107.91770172 596.02209473]
[107.47109985 581.02874756]
[107.02449036 566.03540039]
[106.57788849 551.04205322]
[106.13127899 536.04870605]
[95.60878754 528.61187744]
[91.22550201 516.28839111]
[94.79280853 503.50225830]
[105.22417450 494.98162842]
[105.00084686 479.98327637]
[104.77751923 464.98495483]
[104.55419159 449.98660278]
[104.21921539 434.99035645]
[103.77261353 419.99700928]
[103.32600403 405.00366211]
[102.87939453 390.01031494]
[102.43279266 375.01693726]
[101.98618317 360.02359009]
[101.53958130 345.03024292]
[90.55624390 335.03515625]
[89.88973999 319.83612061]
[100.44799042 308.38357544]
[100.00138092 293.39022827]
[99.55477905 278.39685059]
[99.10816956 263.40350342]
[98.66156769 248.41017151]
[98.21495819 233.41680908]
[85.49257660 222.41773987]
[84.64495087 205.28308105]
[96.68441010 192.59170532]
[96.01462555 177.60667419]
[95.34484100 162.62162781]
[94.67504883 147.63659668]
[86.37716675 135.26750183]
[93.49053955 121.13560486]
[92.82075500 106.15056610]
[89.85165405 101.82640076]
[89.51665497 96.14651489]
[92.36084747 90.71076202]
[92.13751984 75.71242523]
[83.44288635 66.18529510]
[83.56565094 53.68854904]
[91.89460754 44.91614532]
[91.89460754 29.91614532]
[91.89460754 14.91614532]
[91.89460754 -0.08385476]
[91.89460754 -15.08385468]
[82.01956940 -3.79299164]
[67.41992950 -0.35054052]
[53.54098892 -6.04045105]
[45.55925369 -18.74052620]
[46.45171356 -33.71395493]
[55.88550186 -45.37601471]
[70.34204865 -49.37704849]
[84.42942047 -44.22476578]
[92.89370728 -31.83972549]
[94.67617035 -46.73344421]
[96.45864105 -61.62716293]
[98.24110413 -76.52088165]
[96.15363312 -85.41358948]
[100.16258240 -91.62245941]
[102.16659546 -106.48799133]
[104.17061615 -121.35351562]
[106.17462921 -136.21903992]
[108.17864227 -151.08457947]
[110.18265533 -165.95010376]
[112.18666840 -180.81562805]
[114.19068146 -195.68115234]
[108.36646271 -210.39132690]
[117.73477173 -221.97079468]
[119.73878479 -236.83631897]
[121.63208008 -251.71635437]
[123.41454315 -266.61007690]
[125.19700623 -281.50378418]
[110.84152222 -286.00207520]
[97.55712891 -293.06179810]
[85.79629517 -302.44247437]
[75.95959473 -313.82464600]
[68.38205719 -326.82064819]
[63.32176971 -340.98779297]
[60.95108795 -355.84359741]
[61.35075378 -370.88201904]
[64.50715637 -385.59094238]
[70.31278992 -399.46929932]
[78.56990814 -412.04446411]
[88.99729156 -422.88809204]
[101.23977661 -431.63088989]
[114.88039398 -437.97503662]
[129.45454407 -441.70446777]
[144.46585083 -442.69216919]
[159.40301514 -440.90451050]
[173.75729370 -436.40234375]
[187.03977966 -429.33905029]
[198.79808044 -419.95520020]
[208.63171387 -408.57037354]
[216.20574951 -395.57232666]
[221.26220703 -381.40383911]
[223.62889099 -366.54739380]
[223.22517395 -351.50906372]
[220.06480408 -336.80099487]
[214.25543213 -322.92419434]
[205.99491882 -310.35125732]
[195.56462097 -299.51043701]
[183.31977844 -290.77096558]
[169.67744446 -284.43048096]
[155.10229492 -280.70498657]
[140.09072876 -279.72131348]
[138.30825806 -264.82760620]
[136.52580261 -249.93388367]
[138.85218811 -242.91893005]
[134.60430908 -234.83230591]
[132.60029602 -219.96678162]
[138.56785583 -206.31988525]
[129.05621338 -193.67713928]
[127.05219269 -178.81161499]
[125.04817963 -163.94609070]
[123.04416656 -149.08056641]
[121.04015350 -134.21502686]
[119.03614044 -119.34950256]
[117.03212738 -104.48397827]
[115.02811432 -89.61844635]
[113.13481903 -74.73841095]
[111.35235596 -59.84469604]
[109.56989288 -44.95097733]
[107.78742218 -30.05726051]
[106.89460754 -15.08385468]
[106.89460754 -0.08385476]
[106.89460754 14.91614532]
[106.89460754 29.91614532]
[106.89460754 44.91614532]
[116.47530365 59.61911392]
[107.13585663 75.48909760]
[107.35918427 90.48743439]
[107.80579376 105.48078156]
[108.47557831 120.46582031]
[116.82137299 133.90673828]
[109.66008759 146.96681213]
[110.32987976 161.95184326]
[110.99966431 176.93688965]
[111.66944885 191.92192078]
[122.58947754 199.80656433]
[126.91149902 212.35768127]
[123.26949310 224.92024231]
[113.20830536 232.97021484]
[113.65491486 247.96356201]
[114.10151672 262.95690918]
[114.54812622 277.95025635]
[114.99472809 292.94360352]
[115.44133759 307.93695068]
[126.66253662 318.74078369]
[126.90187073 333.95251465]
[116.53292847 344.58364868]
[116.97953796 359.57699585]
[117.42613983 374.57034302]
[117.87274933 389.56369019]
[118.31935120 404.55703735]
[118.76596069 419.55038452]
[119.21256256 434.54373169]
[122.59609222 443.02841187]
[119.55252838 449.76327515]
[119.77585602 464.76162720]
[119.99918365 479.75994873]
[120.22251129 494.75830078]
[132.99603271 506.71057129]
[133.16976929 523.86529541]
[121.12462616 535.60211182]
[121.57123566 550.59545898]
[122.01783752 565.58880615]
[122.46444702 580.58215332]
[122.91105652 595.57550049]
[137.83692932 597.31799316]
[152.35000610 601.21520996]
[166.14094543 607.18414307]
[178.91580200 615.09747314]
[190.40226746 624.78656006]
[200.35549927 636.04492188]
[208.56336975 648.63256836]
[214.85089111 662.28118896]
[219.08407593 676.69989014]
[221.17268372 691.58123779]
[221.07220459 706.60815430]
[218.78475952 721.46026611]
[214.35911560 735.82104492]
[207.88960266 749.38433838]
[199.51412964 761.86108398]
[189.41120911 772.98535156]
[177.79618835 782.51995850]
[164.91665649 790.26177979]
[151.04710388 796.04571533]
[136.48320007 799.74847412]
[121.53536224 801.29113770]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 189]
[21 188]
[22 187]
[23 186]
[24 185]
[28 182]
[29 181]
[30 180]
[31 179]
[32 177]
[33 176]
[34 175]
[35 174]
[36 173]
[37 172]
[38 171]
[41 168]
[42 167]
[43 166]
[44 165]
[45 164]
[46 163]
[49 159]
[50 158]
[51 157]
[52 156]
[54 154]
[55 153]
[58 152]
[59 151]
[62 149]
[63 148]
[64 147]
[65 146]
[66 145]
[75 144]
[76 143]
[77 142]
[78 141]
[80 140]
[81 139]
[82 138]
[83 137]
[84 136]
[85 135]
[86 134]
[87 133]
[89 131]
[90 130]
[91 128]
[92 127]
[93 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
