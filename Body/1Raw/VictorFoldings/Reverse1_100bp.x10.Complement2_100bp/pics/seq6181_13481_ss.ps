%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[-22.12934875 396.97540283]
[-15.97438335 410.68731689]
[-11.98477364 425.17813110]
[-10.25404453 440.10812378]
[-10.82276440 455.12734985]
[-13.67760372 469.88372803]
[-18.75163841 484.03131104]
[-25.92593002 497.23852539]
[-35.03229904 509.19570923]
[-45.85727692 519.62261963]
[-58.14711761 528.27478027]
[-71.61372375 534.94946289]
[-85.94142151 539.49011230]
[-100.79434967 541.79028320]
[-115.82433319 541.79614258]
[-130.67904663 539.50750732]
[-145.01028442 534.97802734]
[-158.48208618 528.31384277]
[-170.77865601 519.67126465]
[-181.61175537 509.25277710]
[-190.72741699 497.30267334]
[-197.91198730 484.10107422]
[-202.99703979 469.95742798]
[-205.86337280 455.20327759]
[-206.44378662 440.18450928]
[-204.72468567 425.25317383]
[-200.74635315 410.75924683]
[-194.60206604 397.04254150]
[-186.43585205 384.42456055]
[-176.43911743 373.20111084]
[-164.84623718 363.63528442]
[-151.92892456 355.95129395]
[-137.99002075 350.32925415]
[-123.35623169 346.90100098]
[-108.37062836 345.74688721]
[-93.38447571 346.89392090]
[-78.74908447 350.31527710]
[-64.80751038 355.93069458]
[-57.14691544 343.03439331]
[-49.48631668 330.13806152]
[-41.82571793 317.24172974]
[-48.21932220 305.52148438]
[-47.98490143 292.06454468]
[-41.07676315 280.38775635]
[-29.20727158 273.59558105]
[-15.42361641 273.55496216]
[-7.57186127 260.77410889]
[0.27989444 247.99327087]
[8.13164997 235.21243286]
[15.98340511 222.43157959]
[12.28349590 208.04943848]
[20.06422424 194.97599792]
[35.17463303 191.19270325]
[43.02639008 178.41186523]
[50.87814713 165.63101196]
[50.94762421 150.73657227]
[64.76394653 143.02813721]
[72.61569977 130.24729919]
[80.46745300 117.46646118]
[88.31921387 104.68561554]
[95.88359070 91.73262024]
[103.15682220 78.61392212]
[110.43005371 65.49523163]
[99.55564117 56.35525513]
[90.56079102 45.36603165]
[83.75425720 32.90729523]
[79.36924744 19.40917206]
[77.55536652 5.33734751]
[78.37357330 -8.82300758]
[81.79408264 -22.58396530]
[87.69748688 -35.47165298]
[95.87889099 -47.04257202]
[106.05503845 -56.89885712]
[117.87413025 -64.70195770]
[130.92796326 -70.18427277]
[144.76603699 -73.15830994]
[158.91111755 -73.52312469]
[172.87565613 -71.26772308]
[186.17864990 -66.47138977]
[193.83924866 -79.36772156]
[201.49984741 -92.26404572]
[209.16044617 -105.16036987]
[216.82102966 -118.05670166]
[224.48162842 -130.95301819]
[231.75486755 -144.07171631]
[238.63427734 -157.40115356]
[245.51368713 -170.73057556]
[252.39309692 -184.06001282]
[258.77169800 -197.63621521]
[264.64065552 -211.44038391]
[270.50961304 -225.24456787]
[276.37860107 -239.04875183]
[282.24755859 -252.85292053]
[288.11651611 -266.65710449]
[291.65618896 -281.23345947]
[292.77182007 -296.19192505]
[293.88748169 -311.15039062]
[295.00314331 -326.10882568]
[296.11877441 -341.06729126]
[282.19427490 -347.01596069]
[270.95739746 -357.16543579]
[263.62710571 -370.41479492]
[260.99850464 -385.32684326]
[263.35675049 -400.28402710]
[270.44598389 -413.66390991]
[281.49725342 -424.01513672]
[295.31179810 -430.21490479]
[310.39114380 -431.59066772]
[325.09951782 -427.99322510]
[337.84155273 -419.81280518]
[347.23504639 -407.93673706]
[352.26107788 -393.65325928]
[352.37445068 -378.51171875]
[347.56286621 -364.15460205]
[338.34823608 -352.13922119]
[325.73013306 -343.76889038]
[311.07723999 -339.95162964]
[309.96157837 -324.99319458]
[308.84594727 -310.03472900]
[307.73028564 -295.07626343]
[306.61462402 -280.11782837]
[314.31323242 -292.99151611]
[325.04437256 -303.47207642]
[338.09634399 -310.86437988]
[352.60342407 -314.67813110]
[367.60342407 -314.66040039]
[382.10140991 -310.81231689]
[395.13583374 -303.38909912]
[405.84216309 -292.88317871]
[413.51025391 -279.99130249]
[417.63153076 -265.56857300]
[417.93264771 -250.57159424]
[414.39361572 -235.99505615]
[407.24917603 -222.80578613]
[396.97317505 -211.87855530]
[384.24722290 -203.93815613]
[369.91537476 -199.51121521]
[354.92819214 -198.89138794]
[340.27972412 -202.11975098]
[326.94155884 -208.98220825]
[315.79833984 -219.02359009]
[307.58923340 -231.57786560]
[302.85864258 -245.81239319]
[301.92068481 -260.78814697]
[296.05172729 -246.98396301]
[290.18276978 -233.17977905]
[284.31381226 -219.37561035]
[278.44485474 -205.57142639]
[272.57589722 -191.76725769]
[287.25112915 -194.87165833]
[298.92462158 -185.45202637]
[298.99111938 -170.45217896]
[287.40158081 -160.92942810]
[272.69940186 -163.90359497]
[265.72253418 -177.18058777]
[258.84310913 -163.85116577]
[251.96369934 -150.52174377]
[245.08428955 -137.19230652]
[245.80717468 -134.48387146]
[245.50076294 -131.32591248]
[243.98846436 -128.10902405]
[241.23822021 -125.28047943]
[237.37796021 -123.29242706]
[229.71736145 -110.39610291]
[222.05676270 -97.49977112]
[214.39616394 -84.60344696]
[206.73556519 -71.70712280]
[199.07498169 -58.81079483]
[210.79763794 -48.16923141]
[220.07054138 -35.32982635]
[226.49127197 -20.84588623]
[229.78041077 -5.34217167]
[229.79365540 10.51206493]
[226.52816772 26.03195572]
[220.12280273 40.54661560]
[210.85220337 53.42812729]
[199.11497498 64.11871338]
[185.41664124 72.15490723]
[170.34777832 77.18759918]
[154.55862427 78.99725342]
[138.73097229 77.50344849]
[123.54874420 72.76845551]
[116.27551270 85.88715363]
[109.00228882 99.00584412]
[109.52886200 102.82620239]
[108.36892700 106.86010742]
[105.46486664 110.34915161]
[101.10005188 112.53736877]
[93.24829865 125.31821442]
[85.39654541 138.09906006]
[77.54478455 150.87989807]
[76.91369629 166.68850708]
[63.65898895 173.48277283]
[55.80723190 186.26361084]
[47.95547867 199.04446411]
[51.41061020 214.23326111]
[43.26574707 227.08300781]
[28.76424789 230.28334045]
[20.91249275 243.06417847]
[13.06073666 255.84503174]
[5.20898151 268.62585449]
[-2.64277387 281.40670776]
[4.02472258 296.95150757]
[0.15144420 313.24563599]
[-12.54343510 323.91342163]
[-28.92939186 324.90231323]
[-36.58998871 337.79864502]
[-44.25058746 350.69497681]
[-51.91118622 363.59130859]
[-40.31084824 373.14813232]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 209]
[39 208]
[40 207]
[41 206]
[46 202]
[47 201]
[48 200]
[49 199]
[50 198]
[53 195]
[54 194]
[55 193]
[57 191]
[58 190]
[59 189]
[60 188]
[61 184]
[62 183]
[63 182]
[79 168]
[80 167]
[81 166]
[82 165]
[83 164]
[84 163]
[85 158]
[86 157]
[87 156]
[88 155]
[89 149]
[90 148]
[91 147]
[92 146]
[93 145]
[94 144]
[95 121]
[96 120]
[97 119]
[98 118]
[99 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
