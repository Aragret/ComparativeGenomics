%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxAUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[34.70141983 520.73254395]
[26.27861786 533.15679932]
[16.77601051 544.77606201]
[6.27010727 555.49670410]
[-5.15450144 565.23242188]
[-17.40583038 573.90484619]
[-30.38523674 581.44415283]
[-43.98821640 587.78967285]
[-58.10524368 592.89025879]
[-72.62265778 596.70483398]
[-87.42356110 599.20269775]
[-102.38879395 600.36376953]
[-117.39785767 600.17864990]
[-132.32991028 598.64892578]
[-147.06471252 595.78680420]
[-161.48364258 591.61535645]
[-175.47059631 586.16821289]
[-188.91294861 579.48919678]
[-201.70249939 571.63208008]
[-213.73623657 562.66021729]
[-224.91728210 552.64569092]
[-235.15560913 541.66918945]
[-244.36878967 529.81915283]
[-252.48265076 517.19097900]
[-259.43185425 503.88626099]
[-265.16043091 490.01220703]
[-269.62228394 475.68048096]
[-272.78146362 461.00650024]
[-274.61254883 446.10839844]
[-275.10079956 431.10614014]
[-274.24227905 416.12051392]
[-272.04391479 401.27215576]
[-268.52337646 386.68066406]
[-263.70901489 372.46347046]
[-257.63961792 358.73507690]
[-250.36402893 345.60601807]
[-241.94085693 333.18200684]
[-232.43789673 321.56304932]
[-221.93165588 310.84274292]
[-210.50675964 301.10736084]
[-198.25515747 292.43527222]
[-185.27552795 284.89636230]
[-171.67234802 278.55130005]
[-157.55516052 273.45117188]
[-143.03764343 269.63702393]
[-128.23666382 267.13958740]
[-113.27139282 265.97897339]
[-98.26232910 266.16455078]
[-83.33032990 267.69476318]
[-68.59561157 270.55731201]
[-54.17681122 274.72918701]
[-40.19002533 280.17675781]
[-26.74786758 286.85617065]
[-18.89611244 274.07534790]
[-11.04435635 261.29449463]
[-13.54917812 249.46011353]
[-7.11235046 238.74792480]
[5.28294373 235.18148804]
[13.32411671 222.51896667]
[21.36528969 209.85644531]
[29.40646172 197.19390869]
[29.69769096 182.30215454]
[43.62724686 174.80029297]
[51.66841888 162.13775635]
[59.70959091 149.47523499]
[67.75076294 136.81271362]
[75.79193878 124.15018463]
[76.08316803 109.25843048]
[90.01272583 101.75656128]
[91.33192444 93.80468750]
[98.26906586 88.96661377]
[106.49787140 76.42520905]
[107.25556946 69.85729980]
[110.69946289 65.33661652]
[115.16305542 63.63795853]
[123.76161957 51.34712219]
[132.36018372 39.05628204]
[133.53134155 20.67939949]
[149.71054077 13.88232231]
[158.12516785 1.46482646]
[166.53977966 -10.95266914]
[167.87612915 -26.71733665]
[181.42100525 -32.91296387]
[189.83561707 -45.33045959]
[198.25024414 -57.74795532]
[206.66485596 -70.16545105]
[194.93955994 -79.53302765]
[183.98539734 -89.79169464]
[173.86987305 -100.87819672]
[164.65539551 -112.72418213]
[156.39874268 -125.25660706]
[149.15083313 -138.39822388]
[142.95635986 -152.06799316]
[137.85350037 -166.18162537]
[133.87371826 -180.65213013]
[131.04156494 -195.39027405]
[129.37448120 -210.30520630]
[128.88275146 -225.30494690]
[129.56942749 -240.29702759]
[131.43025208 -255.18902588]
[134.45376587 -269.88909912]
[138.62130737 -284.30664062]
[143.90721130 -298.35275269]
[150.27886963 -311.94085693]
[157.69699097 -324.98712158]
[166.11585999 -337.41116333]
[175.48356628 -349.13638306]
[185.74234009 -360.09045410]
[196.82894897 -370.20584106]
[208.67501831 -379.42019653]
[221.20753479 -387.67672729]
[234.34921265 -394.92449951]
[248.01904297 -401.11883545]
[262.13275146 -406.22155762]
[276.60330200 -410.20117188]
[291.34146118 -413.03320312]
[306.25640869 -414.70013428]
[321.25616455 -415.19168091]
[336.24822998 -414.50488281]
[351.14019775 -412.64389038]
[365.84024048 -409.62023926]
[380.25775146 -405.45254517]
[394.30383301 -400.16650391]
[407.89184570 -393.79470825]
[420.93804932 -386.37643433]
[433.36199951 -377.95742798]
[445.08709717 -368.58963013]
[456.04107666 -358.33071899]
[466.15634155 -347.24401855]
[475.37060547 -335.39785767]
[483.62698364 -322.86526489]
[490.87463379 -309.72351074]
[497.06881714 -296.05361938]
[502.17141724 -281.93984985]
[506.15087891 -267.46926880]
[508.98275757 -252.73106384]
[510.64950562 -237.81611633]
[511.14093018 -222.81636047]
[510.45394897 -207.82429504]
[508.59283447 -192.93232727]
[505.56903076 -178.23231506]
[501.40118408 -163.81484985]
[496.11499023 -149.76884460]
[489.74304199 -136.18089294]
[482.32464600 -123.13475800]
[473.90554810 -110.71089172]
[464.53759766 -98.98588562]
[454.27859497 -88.03202820]
[443.19180298 -77.91685486]
[431.34552002 -68.70272827]
[418.81283569 -60.44646072]
[405.67102051 -53.19895554]
[392.00103760 -47.00489426]
[377.88723755 -41.90246964]
[363.41662598 -37.92313385]
[348.67840576 -35.09142685]
[333.76342773 -33.42480469]
[318.76367188 -32.93354034]
[303.77160645 -33.62067032]
[288.87966919 -35.48195267]
[274.17965698 -38.50590897]
[259.76226807 -42.67390060]
[245.71629333 -47.96023178]
[232.12840271 -54.33230209]
[219.08235168 -61.75083160]
[210.66773987 -49.33333588]
[202.25311279 -36.91584015]
[193.83850098 -24.49834442]
[193.10401917 -9.62186050]
[178.95727539 -2.53805041]
[170.54266357 9.87944508]
[162.12803650 22.29693985]
[164.10192871 34.23135757]
[157.19319153 44.64544296]
[144.65101624 47.65484619]
[136.05245972 59.94568634]
[127.45388794 72.23652649]
[119.03926849 84.65402222]
[110.81046295 97.19541931]
[102.67524719 109.79772949]
[101.80886078 125.59519958]
[88.45446014 132.19136047]
[80.41329193 144.85388184]
[72.37211609 157.51640320]
[64.33094788 170.17893982]
[56.28977203 182.84146118]
[55.42338562 198.63893127]
[42.06898880 205.23509216]
[34.02781296 217.89761353]
[25.98664093 230.56013489]
[17.94546890 243.22265625]
[17.59604836 261.63351440]
[1.73648643 269.14624023]
[-6.11526918 281.92709351]
[-13.96702480 294.70794678]
[-1.93301260 303.67950439]
[9.24834156 313.69366455]
[19.48700905 324.66979980]
[28.70055389 336.51956177]
[36.81479263 349.14752197]
[43.76439285 362.45202637]
[49.49340057 376.32589722]
[53.95568466 390.65747070]
[57.11531830 405.33135986]
[58.94686508 420.22940063]
[59.43557358 435.23165894]
[58.57751083 450.21731567]
[56.37958527 465.06573486]
[52.85949326 479.65734863]
[48.04557800 493.87466431]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 195]
[54 194]
[55 193]
[58 191]
[59 190]
[60 189]
[61 188]
[63 186]
[64 185]
[65 184]
[66 183]
[67 182]
[69 180]
[71 179]
[72 178]
[75 177]
[76 176]
[77 175]
[79 172]
[80 171]
[81 170]
[83 168]
[84 167]
[85 166]
[86 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
