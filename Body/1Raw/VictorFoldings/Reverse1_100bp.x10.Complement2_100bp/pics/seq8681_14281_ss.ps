%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[81.24720001 577.63366699]
[80.80059052 562.64031982]
[80.35398865 547.64697266]
[79.90737915 532.65362549]
[79.34917450 517.66400146]
[78.67938232 502.67895508]
[78.00959778 487.69393921]
[77.22827911 472.71429443]
[76.33546448 457.74087524]
[75.44264984 442.76748657]
[74.54982758 427.79406738]
[73.65701294 412.82067871]
[72.54136658 397.86221313]
[71.20313263 382.92202759]
[69.86489868 367.98184204]
[68.52666473 353.04165649]
[67.18843079 338.10147095]
[58.36008835 350.22833252]
[44.12578583 354.95956421]
[29.79456520 350.53054810]
[20.71161461 338.59323120]
[20.26465225 323.59988403]
[28.62038231 311.14270020]
[42.66232681 305.86785889]
[57.15318680 309.74276733]
[66.68865967 321.32327271]
[67.13526154 306.32992554]
[67.58187103 291.33657837]
[68.02847290 276.34323120]
[65.46360779 272.31454468]
[65.40231323 266.63180542]
[68.71820831 260.91198730]
[69.61102295 245.93858337]
[70.50383759 230.96517944]
[58.59507751 240.08557129]
[43.70772934 238.25067139]
[34.36994171 226.51159668]
[35.93082047 211.59303284]
[47.49622726 202.04100037]
[62.44097137 203.32733154]
[72.20372009 214.71426392]
[74.42884064 199.88023376]
[76.65395355 185.04618835]
[78.87907410 170.21214294]
[81.10419464 155.37809753]
[79.54835510 153.04624939]
[78.82245636 149.95761108]
[79.21936035 146.42520142]
[80.91333771 142.86221313]
[83.92872620 139.73788452]
[87.03283691 125.06258392]
[90.13694763 110.38728333]
[85.98612213 97.03578949]
[95.18775177 86.50860596]
[98.29186249 71.83330536]
[101.39597321 57.15800476]
[104.50007629 42.48270035]
[107.38535309 27.76280975]
[102.22378540 12.80725002]
[112.09980011 1.65765238]
[114.76559448 -13.10356522]
[117.43138885 -27.86478233]
[119.21385956 -42.75849915]
[120.10667419 -57.73190689]
[120.99948883 -72.70531464]
[121.89230347 -87.67871857]
[122.78512573 -102.65212250]
[112.16513062 -109.24633026]
[105.39579010 -119.66960144]
[103.71026611 -131.91044617]
[107.36763000 -143.63754272]
[115.61523438 -152.64364624]
[126.84263611 -157.26109314]
[128.18086243 -172.20127869]
[129.51910400 -187.14146423]
[130.85733032 -202.08164978]
[132.19557190 -217.02183533]
[129.84425354 -225.84844971]
[133.66656494 -232.17393494]
[135.22709656 -247.09252930]
[121.05997467 -252.22851562]
[108.54139709 -260.60095215]
[98.39663696 -271.71954346]
[91.21218109 -284.93505859]
[87.40184784 -299.47723389]
[87.18291473 -314.49963379]
[90.56378174 -329.12899780]
[97.34367371 -342.51589966]
[107.12462616 -353.88412476]
[119.33478546 -362.57571411]
[133.26188660 -368.08895874]
[148.09475708 -370.10745239]
[149.65527344 -385.02606201]
[151.21580505 -399.94467163]
[151.88558960 -414.92968750]
[151.66226196 -429.92803955]
[151.43893433 -444.92636108]
[151.21560669 -459.92471313]
[137.19609070 -465.87222290]
[126.81243134 -477.01223755]
[121.86368561 -491.41464233]
[123.20723724 -506.58416748]
[130.61030579 -519.89263916]
[142.79028320 -529.03417969]
[157.63690186 -532.42504883]
[172.57788086 -529.47772217]
[185.02462769 -520.70288086]
[192.82066345 -507.62072754]
[194.61528015 -492.49792480]
[190.09753418 -477.95455933]
[180.05017090 -466.51031494]
[166.21394348 -460.14804077]
[166.43727112 -445.14968872]
[166.66059875 -430.15136719]
[166.88392639 -415.15301514]
[176.58976746 -426.58966064]
[191.13653564 -430.24908447]
[205.09864807 -424.76644897]
[213.26858521 -412.18661499]
[212.59915161 -397.20156860]
[203.34004211 -385.40032959]
[188.94467163 -381.18450928]
[174.78215027 -386.12649536]
[166.13441467 -398.38412476]
[164.57388306 -383.46551514]
[163.01336670 -368.54693604]
[177.10745239 -363.50262451]
[189.59216309 -355.22662354]
[199.73936462 -344.19638062]
[206.95603943 -331.05017090]
[210.81889343 -316.55001831]
[211.09915161 -301.53768921]
[207.77621460 -286.88577271]
[201.03898621 -273.44689941]
[191.27523804 -262.00421143]
[179.04917908 -253.22564697]
[165.06900024 -247.62506104]
[150.14569092 -245.53201294]
[148.58517456 -230.61340332]
[147.13575745 -215.68359375]
[145.79751587 -200.74340820]
[144.45928955 -185.80322266]
[143.12104797 -170.86303711]
[141.78282166 -155.92286682]
[155.61248779 -144.94050598]
[160.12083435 -127.70317841]
[153.32008362 -111.06498718]
[137.75852966 -101.75930786]
[136.86570740 -86.78590393]
[135.97290039 -71.81249237]
[135.08007812 -56.83908844]
[134.18727112 -41.86568451]
[144.71684265 -52.54875565]
[159.49549866 -55.11611938]
[173.01115417 -48.61020660]
[180.22282410 -35.45756531]
[178.44070435 -20.56380653]
[168.32951355 -9.48393059]
[153.66044617 -6.35046053]
[139.90472412 -12.33210087]
[132.19261169 -25.19898605]
[129.52680969 -10.43776989]
[126.86101532 4.32344770]
[132.21325684 18.22318649]
[122.14656830 30.42860603]
[124.08544159 34.79321671]
[123.30307007 40.42215347]
[119.17538452 45.58681107]
[116.07127380 60.26211548]
[112.96716309 74.93741608]
[109.86305237 89.61271667]
[114.01387787 102.96421051]
[104.81224823 113.49139404]
[101.70813751 128.16668701]
[98.60402679 142.84199524]
[95.93823242 157.60321045]
[93.71311951 172.43725586]
[91.48799896 187.27130127]
[89.26288605 202.10534668]
[87.03776550 216.93939209]
[85.47724152 231.85798645]
[84.58442688 246.83140564]
[83.69161224 261.80480957]
[83.02182770 276.78985596]
[82.57521820 291.78320312]
[82.12861633 306.77655029]
[81.68200684 321.76989746]
[82.12861633 336.76324463]
[83.46685028 351.70343018]
[84.80508423 366.64361572]
[86.14331818 381.58380127]
[87.48155212 396.52398682]
[90.96627045 402.14254761]
[91.07420349 407.82455444]
[88.63042450 411.92785645]
[89.52323914 426.90127563]
[90.41605377 441.87466431]
[91.30886841 456.84808350]
[92.20168304 471.82147217]
[95.83633423 480.20162964]
[92.99463654 487.02413940]
[93.66442108 502.00918579]
[94.33421326 516.99420166]
[97.84368896 525.42755127]
[94.90073395 532.20703125]
[95.34733582 547.20037842]
[95.79394531 562.19372559]
[96.24054718 577.18707275]
[102.75579834 592.83917236]
[89.51899719 603.43273926]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 208]
[2 207]
[3 206]
[4 205]
[5 203]
[6 202]
[7 201]
[8 199]
[9 198]
[10 197]
[11 196]
[12 195]
[13 192]
[14 191]
[15 190]
[16 189]
[17 188]
[26 187]
[27 186]
[28 185]
[29 184]
[32 183]
[33 182]
[34 181]
[41 180]
[42 179]
[43 178]
[44 177]
[45 176]
[50 175]
[51 174]
[52 173]
[54 171]
[55 170]
[56 169]
[57 168]
[58 165]
[60 163]
[61 162]
[62 161]
[63 152]
[64 151]
[65 150]
[66 149]
[67 148]
[73 144]
[74 143]
[75 142]
[76 141]
[77 140]
[79 139]
[80 138]
[92 126]
[93 125]
[94 124]
[95 115]
[96 114]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
