%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxCGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAG\
) } def
/len { sequence length } bind def

/coor [
[132.35227966 798.72753906]
[117.27884674 798.05377197]
[102.89369965 793.50079346]
[90.17762756 785.37896729]
[79.99765778 774.24206543]
[73.04785919 760.84942627]
[69.80208588 746.11419678]
[70.48164368 731.04101562]
[75.04019165 716.65759277]
[83.16693115 703.94470215]
[94.30775452 693.76898193]
[107.70307922 686.82440186]
[122.43956757 683.58428955]
[123.10935211 668.59924316]
[123.77914429 653.61419678]
[124.44892883 638.62915039]
[125.11871338 623.64416504]
[125.78849792 608.65911865]
[125.56517029 593.66076660]
[116.90268707 581.54418945]
[123.59214783 567.20678711]
[122.47650146 552.24835205]
[121.36084747 537.28985596]
[120.24520111 522.33142090]
[119.12955475 507.37298584]
[118.01390839 492.41452026]
[116.89825439 477.45605469]
[115.78260803 462.49761963]
[114.66696167 447.53915405]
[113.32872772 432.59896851]
[111.76820374 417.68035889]
[110.20767975 402.76177979]
[108.64715576 387.84317017]
[96.95084381 378.69265747]
[95.15573120 363.58529663]
[104.83293152 351.37918091]
[103.27240753 336.46057129]
[101.18220520 334.59262085]
[99.70597839 331.78417969]
[99.20565033 328.26492310]
[99.95340729 324.39126587]
[102.09032440 320.61135864]
[101.42053986 305.62634277]
[92.70818329 297.23458862]
[92.02753448 284.75579834]
[100.28808594 274.84991455]
[99.84148407 259.85656738]
[99.39487457 244.86322021]
[98.94827271 229.86987305]
[98.50166321 214.87652588]
[98.05505371 199.88317871]
[97.60845184 184.88983154]
[97.16184235 169.89646912]
[96.71524048 154.90312195]
[95.93391418 139.92349243]
[94.70693970 124.97375488]
[93.36870575 110.03356934]
[91.80818176 95.11496735]
[90.02571869 80.22125244]
[88.24325562 65.32752991]
[84.11624908 57.17856216]
[86.54682159 50.19901276]
[77.41580963 37.27867508]
[83.78704834 23.81551743]
[82.22652435 8.89691257]
[80.66600037 -6.02169228]
[78.99446106 -20.92826653]
[76.99044800 -35.79379272]
[74.76532745 -50.62783813]
[72.54021454 -65.46188354]
[70.31509399 -80.29592896]
[61.46997452 -68.18131256]
[46.93774796 -64.46453857]
[33.36235046 -70.84487152]
[26.95027351 -84.40529633]
[30.63302994 -98.94618225]
[42.72691345 -107.81962585]
[57.70276260 -106.96880341]
[68.71468353 -96.78106689]
[68.04489136 -111.76610565]
[67.37510681 -126.75114441]
[66.59378815 -141.73077393]
[65.70097351 -156.70419312]
[62.06632233 -165.08435059]
[64.90802002 -171.90686035]
[64.23822784 -186.89189148]
[63.56844711 -201.87693787]
[62.89866257 -216.86196899]
[54.55286789 -230.30288696]
[61.71414948 -243.36296082]
[61.04436493 -258.34799194]
[46.23887634 -261.15768433]
[32.48067474 -267.30654907]
[20.51172447 -276.46301270]
[10.97749233 -288.13327026]
[4.39214754 -301.68798828]
[1.11083090 -316.39614868]
[1.31049919 -331.46453857]
[4.98038435 -346.08056641]
[11.92257500 -359.45602417]
[21.76268578 -370.86956787]
[33.97005463 -379.70568848]
[47.88634872 -385.48785400]
[62.76108551 -387.90423584]
[77.79208374 -386.82455444]
[92.16874695 -382.30697632]
[105.11575317 -374.59521484]
[115.93489075 -364.10507202]
[124.04270172 -351.40231323]
[129.00193787 -337.17196655]
[130.54513550 -322.18145752]
[128.58911133 -307.23919678]
[123.23931122 -293.15103149]
[114.78427124 -280.67669678]
[103.67994690 -270.48892212]
[90.52518463 -263.13714600]
[76.02940369 -259.01779175]
[76.69918823 -244.03274536]
[84.99707031 -231.66365051]
[77.88369751 -217.53175354]
[78.55348206 -202.54672241]
[79.22326660 -187.56167603]
[79.89305878 -172.57664490]
[80.67437744 -157.59700012]
[81.56719208 -142.62359619]
[85.10324860 -136.13374329]
[82.36014557 -127.42092896]
[83.02993011 -112.43589020]
[83.69972229 -97.45085144]
[85.14913940 -82.52104187]
[87.37425232 -67.68699646]
[89.59937286 -52.85295486]
[91.82448578 -38.01891327]
[95.06451416 -34.51016617]
[96.13475800 -28.92880249]
[93.88817596 -22.71073151]
[97.80424500 -16.44285965]
[95.58460236 -7.58221531]
[97.14512634 7.33638954]
[98.70565033 22.25499344]
[107.72504425 34.10825348]
[101.46543121 48.63849258]
[103.13697052 63.54506683]
[104.91943359 78.43878174]
[106.70190430 93.33249664]
[109.98439789 97.42385864]
[110.74092102 103.06309509]
[108.30889130 108.69533539]
[109.64712524 123.63552094]
[113.52967072 131.90374756]
[110.89237213 138.80784607]
[113.83275604 143.12075806]
[114.73458862 147.67486572]
[113.84734344 151.65328979]
[111.70858765 154.45652771]
[112.15519714 169.44987488]
[112.60179901 184.44322205]
[113.04840851 199.43656921]
[113.49501038 214.42991638]
[113.94161987 229.42326355]
[114.38822174 244.41662598]
[114.83483124 259.40997314]
[115.28144073 274.40332031]
[125.32019806 289.84045410]
[116.40557861 304.95654297]
[117.07536316 319.94158936]
[118.19100952 334.90005493]
[119.75153351 349.81863403]
[131.74520874 359.75793457]
[133.11528015 374.90975952]
[123.56575775 386.28265381]
[125.12628174 401.20123291]
[126.68680573 416.11984253]
[128.24732971 431.03845215]
[131.81532288 436.60452271]
[132.00782776 442.28430176]
[129.62541199 446.42352295]
[130.74105835 461.38195801]
[131.85670471 476.34042358]
[132.97235107 491.29885864]
[134.08801270 506.25732422]
[135.20365906 521.21575928]
[136.31930542 536.17425537]
[137.43495178 551.13269043]
[138.55059814 566.09112549]
[147.29287720 579.27758789]
[140.52362061 592.54510498]
[149.53153992 580.55102539]
[163.83470154 576.03228760]
[178.09838867 580.67413330]
[187.00260925 592.74536133]
[187.22628784 607.74371338]
[178.68601990 620.07513428]
[164.56709290 625.14031982]
[150.13552856 621.05004883]
[140.77352905 609.32885742]
[140.10374451 624.31390381]
[139.43395996 639.29895020]
[138.76417542 654.28399658]
[138.09439087 669.26904297]
[137.42460632 684.25408936]
[151.81327820 688.79595947]
[164.53561401 696.90795898]
[174.72418213 708.03698730]
[181.68432617 721.42425537]
[184.94146729 736.15698242]
[184.27355957 751.23071289]
[179.72610474 765.61761475]
[171.60919189 778.33679199]
[160.47622681 788.52105713]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 201]
[14 200]
[15 199]
[16 198]
[17 197]
[18 196]
[19 187]
[21 185]
[22 184]
[23 183]
[24 182]
[25 181]
[26 180]
[27 179]
[28 178]
[29 177]
[30 174]
[31 173]
[32 172]
[33 171]
[36 168]
[37 167]
[42 166]
[43 165]
[46 163]
[47 162]
[48 161]
[49 160]
[50 159]
[51 158]
[52 157]
[53 156]
[54 155]
[55 151]
[56 149]
[57 148]
[58 145]
[59 144]
[60 143]
[62 142]
[64 140]
[65 139]
[66 138]
[67 136]
[68 133]
[69 132]
[70 131]
[71 130]
[79 129]
[80 128]
[81 127]
[82 125]
[83 124]
[85 123]
[86 122]
[87 121]
[88 120]
[90 118]
[91 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
