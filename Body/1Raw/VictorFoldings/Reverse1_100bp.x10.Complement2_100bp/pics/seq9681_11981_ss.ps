%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGGCAGCCUUUACCACUUCCCUCUGAGCUUCAUGAGACUCCGAACAUCCUCCCAUUUUAUCUCUGGGUCAUUUUAACAUUAUUCGUCACGAACUUAAUxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[110.45445251 553.44927979]
[110.18159485 568.60516357]
[104.73867798 582.75262451]
[94.78295898 594.18322754]
[81.51662445 601.51672363]
[66.54166412 603.86755371]
[51.66637421 600.95184326]
[38.68701553 593.12164307]
[29.17090797 581.32250977]
[24.26717186 566.97924805]
[24.56795311 551.82385254]
[30.03693390 537.68646240]
[40.01370621 526.27423096]
[53.29352951 518.96514893]
[68.27279663 516.64196777]
[71.15806580 501.92205811]
[74.04334259 487.20214844]
[76.92861176 472.48226929]
[78.82190704 457.60223389]
[79.71472168 442.62881470]
[80.60753632 427.65542603]
[81.50035095 412.68200684]
[82.39317322 397.70861816]
[67.29122925 386.69842529]
[61.83303833 368.66687012]
[68.39741516 350.84780884]
[84.50162506 340.50424194]
[84.72495270 325.50588989]
[84.94828033 310.50753784]
[85.17160797 295.50921631]
[76.97418213 286.61376953]
[77.03749084 274.11657715]
[85.87300873 264.71997070]
[86.31961060 249.72662354]
[86.76622009 234.73326111]
[76.70503235 226.68330383]
[73.06302643 214.12074280]
[77.38504791 201.56962585]
[88.30508423 193.68498230]
[88.97486877 178.69995117]
[89.64465332 163.71490479]
[90.31443787 148.72985840]
[90.98422241 133.74482727]
[83.82294464 120.68476105]
[92.16873169 107.24384308]
[91.38741302 92.26420593]
[89.16229248 77.43016052]
[86.93717957 62.59611511]
[82.56938171 54.57363892]
[84.79106903 47.52481461]
[82.78705597 32.65928650]
[73.27540588 20.01654053]
[79.24296570 6.36965609]
[77.23895264 -8.49587154]
[75.23493958 -23.36140060]
[73.23092651 -38.22692871]
[71.22691345 -53.09245682]
[59.53683090 -57.52075577]
[50.88896561 -66.44728851]
[46.88037109 -78.13534546]
[48.21371460 -90.34694672]
[54.57496643 -100.77130890]
[64.70453644 -107.46213531]
[63.14401245 -122.38073730]
[61.58348846 -137.29934692]
[52.45247650 -150.21968079]
[58.82371140 -163.68284607]
[57.26318741 -178.60144043]
[55.70266342 -193.52005005]
[54.14213943 -208.43865967]
[51.47634506 -223.19987488]
[47.72004318 -237.72192383]
[43.96374512 -252.24398804]
[40.20744324 -266.76605225]
[36.45114136 -281.28811646]
[23.11576271 -289.33828735]
[19.51321030 -304.11923218]
[27.27000809 -316.78286743]
[23.51370621 -331.30493164]
[19.75740623 -345.82699585]
[16.00110626 -360.34906006]
[0.98446977 -359.40185547]
[-13.94001579 -361.31399536]
[-28.23284149 -366.01629639]
[-41.37732697 -373.33880615]
[-52.89831161 -383.01678467]
[-62.37931824 -394.70040894]
[-69.47761536 -407.96731567]
[-73.93659973 -422.33789062]
[-75.59508514 -437.29269409]
[-74.39311218 -452.29107666]
[-70.37414551 -466.79089355]
[-63.68345261 -480.26794434]
[-54.56290817 -492.23507690]
[-43.34220886 -502.25967407]
[-30.42697906 -509.97933960]
[-16.28409576 -515.11505127]
[-1.42481267 -517.48107910]
[13.61371326 -516.99200439]
[28.28785133 -513.66540527]
[42.06713867 -507.62158203]
[54.45346451 -499.07901001]
[64.99906921 -488.34649658]
[73.32273102 -475.81204224]
[79.12356567 -461.92871094]
[82.19187164 -447.19839478]
[82.41673279 -432.15359497]
[79.79001617 -417.33816528]
[74.40667725 -403.28768921]
[66.46132660 -390.51004028]
[56.24117279 -379.46719360]
[44.11567688 -370.55825806]
[30.52316475 -364.10534668]
[34.27946472 -349.58328247]
[38.03576660 -335.06121826]
[41.79206848 -320.53915405]
[54.71637344 -313.22494507]
[58.73266602 -298.55102539]
[50.97320175 -285.04440308]
[54.72950363 -270.52233887]
[58.48580170 -256.00030518]
[62.24210358 -241.47822571]
[65.99840546 -226.95617676]
[71.53282928 -240.89784241]
[83.23503113 -250.28178406]
[98.04609680 -252.65505981]
[112.09443665 -247.39729309]
[121.70785522 -235.88285828]
[124.37342834 -221.12161255]
[119.39437866 -206.97207642]
[108.07221985 -197.13293457]
[93.36653137 -194.17611694]
[79.12135315 -198.87449646]
[69.06074524 -209.99917603]
[70.62126923 -195.08056641]
[72.18179321 -180.16197205]
[73.74231720 -165.24336243]
[82.76171112 -153.39010620]
[76.50209045 -138.85986328]
[78.06261444 -123.94126129]
[79.62313843 -109.02265930]
[95.30702209 -100.90554810]
[103.04681396 -84.85729218]
[99.57344055 -67.22166443]
[86.09243774 -55.09646988]
[88.09645081 -40.23094177]
[90.10046387 -25.36541367]
[92.10447693 -10.49988556]
[94.10848999 4.36564255]
[103.47680664 15.94510651]
[97.65258026 30.65527344]
[99.65660095 45.52080154]
[101.77122498 60.37099838]
[103.99633789 75.20503998]
[106.22145844 90.03908539]
[112.09104156 76.23517609]
[123.01204681 65.95258331]
[137.14408875 60.92410660]
[152.10565186 61.99713135]
[165.37547302 68.99082947]
[174.71734619 80.72665405]
[178.55699158 95.22689819]
[176.24739075 110.04801941]
[168.17771912 122.69239807]
[155.70787048 131.02923584]
[140.93923950 133.65364075]
[126.36058807 130.12333679]
[114.42868805 121.03324127]
[107.15377045 107.91362762]
[114.26714325 122.04552460]
[105.96926117 134.41461182]
[105.29947662 149.39965820]
[104.62969208 164.38468933]
[103.95990753 179.36973572]
[103.29012299 194.35476685]
[115.32957458 207.04614258]
[114.48194885 224.18078613]
[101.75956726 235.17987061]
[101.31296539 250.17321777]
[100.86635590 265.16656494]
[109.96848297 281.17385864]
[100.16994476 295.73254395]
[99.94661713 310.73086548]
[99.72328949 325.72921753]
[99.49996185 340.72756958]
[109.72908783 345.90243530]
[117.25440979 354.48205566]
[121.01754761 365.20169067]
[120.51097107 376.50003052]
[115.84610748 386.74649048]
[107.73174286 394.47662354]
[97.36657715 398.60144043]
[96.47376251 413.57482910]
[95.58094025 428.54824829]
[94.68812561 443.52163696]
[93.79531097 458.49505615]
[103.79489136 447.31433105]
[118.22307587 443.21218872]
[132.60913086 447.45971680]
[142.49537659 458.74075317]
[144.81846619 473.55978394]
[138.85855103 487.32492065]
[126.46237946 495.77093506]
[111.47104645 496.28070068]
[98.52976990 488.69628906]
[91.64850616 475.36755371]
[88.76322937 490.08743286]
[85.87796021 504.80731201]
[82.99269104 519.52722168]
[95.98645782 527.33349609]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 209]
[16 208]
[17 207]
[18 206]
[19 196]
[20 195]
[21 194]
[22 193]
[23 192]
[27 185]
[28 184]
[29 183]
[30 182]
[33 180]
[34 179]
[35 178]
[39 175]
[40 174]
[41 173]
[42 172]
[43 171]
[45 169]
[46 155]
[47 154]
[48 153]
[50 152]
[51 151]
[53 149]
[54 148]
[55 147]
[56 146]
[57 145]
[63 141]
[64 140]
[65 139]
[67 137]
[68 136]
[69 135]
[70 134]
[71 123]
[72 122]
[73 121]
[74 120]
[75 119]
[78 116]
[79 115]
[80 114]
[81 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
