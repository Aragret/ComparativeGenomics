%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACAGUCUAAGUGUUAGACUACAAAACCAAUUUGAUAUAAAUGUUCUCCUUUUGGGCCAUUACUACAGCCCCAACUCCCUAUCCUCCUCUUACCCCCUAxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[65.61415863 748.05926514]
[50.93321228 751.17633057]
[36.04904938 753.10198975]
[21.05820084 753.82366943]
[6.05789328 753.33673096]
[-8.85459137 751.64434814]
[-23.58253860 748.75750732]
[-38.03042984 744.69488525]
[-52.10456467 739.48291016]
[-65.71366119 733.15527344]
[-78.76946259 725.75311279]
[-91.18730164 717.32434082]
[-102.88663483 707.92370605]
[-113.79158020 697.61218262]
[-123.83142853 686.45654297]
[-132.94105530 674.52923584]
[-141.06138611 661.90753174]
[-148.13975525 648.67340088]
[-154.13026428 634.91253662]
[-158.99404907 620.71429443]
[-162.69955444 606.17077637]
[-165.22277832 591.37615967]
[-166.54734802 576.42651367]
[-166.66465759 561.41876221]
[-165.57395935 546.45025635]
[-163.28233337 531.61804199]
[-159.80461121 517.01831055]
[-155.16339111 502.74578857]
[-149.38873291 488.89297485]
[-142.51811218 475.54980469]
[-134.59608459 462.80273438]
[-125.67403412 450.73443604]
[-115.80980682 439.42324829]
[-105.06739044 428.94247437]
[-93.51644135 419.36007690]
[-81.23189545 410.73825073]
[-68.29339600 403.13287354]
[-54.78488159 396.59329224]
[-40.79394531 391.16189575]
[-26.41132927 386.87390137]
[-11.73031235 383.75717163]
[3.15389371 381.83187866]
[18.14475632 381.11053467]
[33.14505386 381.59777832]
[48.05749893 383.29049683]
[50.94277191 368.57058716]
[53.82804489 353.85070801]
[56.71331787 339.13079834]
[59.59859085 324.41091919]
[57.80039597 317.24237061]
[62.63795471 309.49407959]
[65.74206543 294.81878662]
[68.62733459 280.09887695]
[71.29312897 265.33767700]
[65.94088745 251.43792725]
[76.00758362 239.23251343]
[78.67337799 224.47129822]
[81.33917236 209.71006775]
[83.45379639 194.85987854]
[85.01432037 179.94126892]
[73.87548065 167.34107971]
[75.32466125 150.24678040]
[88.95175934 139.27766418]
[90.28999329 124.33748627]
[91.62822723 109.39730072]
[92.63249207 94.43095398]
[93.30227661 79.44591522]
[93.97206116 64.46087646]
[86.85868835 50.32898331]
[95.15657043 37.95989227]
[95.49154663 22.96363449]
[95.49154663 7.96363497]
[95.49154663 -7.03636503]
[95.49154663 -22.03636551]
[87.75424957 -35.83653641]
[95.49154663 -48.56380844]
[95.49154663 -63.56380844]
[95.37988281 -78.56339264]
[95.15655518 -93.56172943]
[94.82157898 -108.55799103]
[94.37496948 -123.55133820]
[93.92836761 -138.54469299]
[79.57054138 -143.34867859]
[67.74482727 -152.75741577]
[59.86648178 -165.62022400]
[56.86991501 -180.37457275]
[59.09788132 -195.23585510]
[66.26239014 -208.41326904]
[77.48177338 -218.32560730]
[91.38913727 -223.79098511]
[90.94253540 -238.78434753]
[90.49592590 -253.77769470]
[90.04932404 -268.77102661]
[89.60271454 -283.76440430]
[89.15611267 -298.75775146]
[88.70950317 -313.75109863]
[74.30948639 -318.48556519]
[62.39910507 -327.86206055]
[54.41659164 -340.74829102]
[51.32587814 -355.58822632]
[53.50018311 -370.58984375]
[60.67694473 -383.94161987]
[71.98954010 -394.03125000]
[86.07191467 -399.64041138]
[101.22354889 -400.09173584]
[115.61481476 -395.33071899]
[127.50789642 -385.93231201]
[135.46664429 -373.03137207]
[138.53001404 -358.18576050]
[136.32806396 -343.18820190]
[129.12670898 -329.84967041]
[117.79553986 -319.78088379]
[103.70285797 -314.19769287]
[104.14945984 -299.20434570]
[104.59606934 -284.21099854]
[105.04267120 -269.21765137]
[105.48928070 -254.22428894]
[105.93588257 -239.23094177]
[106.38249207 -224.23759460]
[120.59050751 -219.60969543]
[132.37998962 -210.38270569]
[140.31613159 -197.65509033]
[143.42471313 -182.95277405]
[141.31164551 -168.04623413]
[134.21287537 -154.73730469]
[122.96814728 -144.64135742]
[108.92171478 -138.99130249]
[109.36832428 -123.99794769]
[109.81492615 -109.00459290]
[113.15618896 -102.41234589]
[110.15489197 -93.78505707]
[110.37821960 -78.78672028]
[113.62095642 -72.14545441]
[110.49154663 -63.56380844]
[110.49154663 -48.56380844]
[118.22885132 -35.83653641]
[110.49154663 -22.03636551]
[110.49154663 -7.03636503]
[110.49154663 7.96363497]
[110.49154663 22.96363449]
[112.71281433 25.70193863]
[113.71811676 29.65218163]
[112.95228577 34.23113251]
[110.14160919 38.62968063]
[117.30289459 51.68974686]
[108.95709991 65.13066101]
[108.28731537 80.11569977]
[107.61753082 95.10073853]
[109.79038239 98.28681946]
[110.54830933 102.41518402]
[109.50196838 106.83244324]
[106.56841278 110.73553467]
[105.23017883 125.67572021]
[103.89194489 140.61590576]
[113.66069031 149.88877869]
[116.26712036 162.90481567]
[110.97940063 174.86817932]
[99.93292236 181.50180054]
[98.37239838 196.42039490]
[111.49095154 189.14691162]
[125.41442108 194.72697449]
[129.87893677 209.04716492]
[121.59343719 221.55119324]
[106.66567230 223.02153015]
[96.10038757 212.37586975]
[93.43459320 227.13708496]
[90.76879883 241.89830017]
[95.93036652 256.85385132]
[86.05435181 268.00344849]
[83.38855743 282.76467896]
[85.26104736 289.10543823]
[83.86048889 294.61322021]
[80.41736603 297.92288208]
[77.31325531 312.59817505]
[74.31848145 327.29620361]
[71.43321228 342.01608276]
[68.54793549 356.73596191]
[65.66266632 371.45587158]
[62.77739334 386.17575073]
[77.22537231 390.23803711]
[91.29962158 395.44973755]
[104.90885925 401.77706909]
[117.96482849 409.17895508]
[130.38284302 417.60742188]
[142.08238220 427.00781250]
[152.98756409 437.31912231]
[163.02764893 448.47451782]
[172.13754272 460.40164185]
[180.25816345 473.02313232]
[187.33682251 486.25714111]
[193.32762146 500.01782227]
[198.19171143 514.21594238]
[201.89755249 528.75946045]
[204.42111206 543.55395508]
[205.74600220 558.50360107]
[205.86364746 573.51135254]
[204.77326965 588.47985840]
[202.48196411 603.31213379]
[199.00457764 617.91192627]
[194.36366272 632.18457031]
[188.58932495 646.03753662]
[181.71899414 659.38085938]
[173.79724121 672.12811279]
[164.87545776 684.19659424]
[155.01147461 695.50799561]
[144.26928711 705.98901367]
[132.71855164 715.57165527]
[120.43419647 724.19378662]
[107.49587250 731.79943848]
[93.98749542 738.33929443]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 179]
[46 178]
[47 177]
[48 176]
[49 175]
[51 174]
[52 173]
[53 170]
[54 169]
[56 167]
[57 166]
[58 165]
[59 159]
[60 158]
[63 154]
[64 153]
[65 152]
[66 148]
[67 147]
[68 146]
[70 144]
[71 140]
[72 139]
[73 138]
[74 137]
[76 135]
[77 134]
[78 132]
[79 131]
[80 129]
[81 128]
[82 127]
[90 119]
[91 118]
[92 117]
[93 116]
[94 115]
[95 114]
[96 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
