%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUACUCCCCGUAAACCAUUUAUACUAAUAGUAUUAAAUUACUCAGCUUUAGUAAGCAAAACAAAUUUGAUAUAUGGUUAAGCCAAGUCAGAUUAGGAAAAxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[75.34018707 288.68768311]
[78.39514160 303.39556885]
[79.50412750 318.37640381]
[78.64817810 333.37380981]
[75.84193420 348.13119507]
[71.13342285 362.39599609]
[64.60321045 375.92416382]
[56.36302948 388.48422241]
[46.55388641 399.86120605]
[35.34363174 409.86044312]
[22.92407990 418.31088257]
[9.50775051 425.06790161]
[-4.67578554 430.01583862]
[-19.38383102 433.07009888]
[-34.36470795 434.17837524]
[-49.36207962 433.32171631]
[-64.11931610 430.51477051]
[-78.38391113 425.80557251]
[-91.91176605 419.27471924]
[-104.47140503 411.03393555]
[-115.84792328 401.22424316]
[-125.84664917 390.01351929]
[-134.29649353 377.59356689]
[-141.05285645 364.17691040]
[-146.00013733 349.99313354]
[-149.05369568 335.28494263]
[-150.16125488 320.30401611]
[-149.30387878 305.30670166]
[-146.49623108 290.54959106]
[-141.78636169 276.28521729]
[-135.25485229 262.75769043]
[-127.01348114 250.19842529]
[-117.20325470 238.82237244]
[-105.99205017 228.82418823]
[-93.57169342 220.37493896]
[-80.15471649 213.61921692]
[-65.97071075 208.67260742]
[-51.26237869 205.61975098]
[-36.28139114 204.51290894]
[-21.28410339 205.37098694]
[-6.52713156 208.17933655]
[7.73701048 212.88989258]
[21.26424408 219.42204285]
[29.49305153 206.88063049]
[37.72185898 194.33923340]
[45.85707474 181.73692322]
[53.89825058 169.07440186]
[61.46262741 156.12139893]
[68.53973389 142.89587402]
[75.61683655 129.67034912]
[82.69394684 116.44481659]
[76.34164429 103.19592285]
[78.95092010 88.73643494]
[89.53339386 78.54348755]
[104.08052826 76.47807312]
[111.15763092 63.25254822]
[118.23474121 50.02701950]
[125.31184387 36.80149078]
[132.38894653 23.57596588]
[139.46604919 10.35043716]
[146.54316711 -2.87509012]
[146.23219299 -18.69323921]
[159.05899048 -26.26438713]
[166.13610840 -39.48991394]
[173.21321106 -52.71544266]
[180.29031372 -65.94097137]
[187.36741638 -79.16649628]
[194.44451904 -92.39202118]
[201.52162170 -105.61755371]
[208.59873962 -118.84307861]
[215.67584229 -132.06860352]
[222.75294495 -145.29412842]
[229.83004761 -158.51966858]
[235.59608459 -172.36714172]
[239.99708557 -186.70700073]
[244.39808655 -201.04684448]
[243.27580261 -205.24142456]
[243.52192688 -209.17892456]
[244.88760376 -212.46073914]
[247.02008057 -214.81002808]
[249.51145935 -216.09501648]
[254.75817871 -230.14749146]
[260.00488281 -244.19996643]
[265.25161743 -258.25244141]
[251.73323059 -264.77761841]
[238.87460327 -272.52233887]
[226.78543091 -281.42044067]
[215.56884766 -291.39605713]
[205.32055664 -302.36407471]
[196.12799072 -314.23089600]
[188.06959534 -326.89529419]
[181.21411133 -340.24917603]
[175.62001038 -354.17868042]
[171.33505249 -368.56491089]
[168.39578247 -383.28515625]
[166.82727051 -398.21380615]
[166.64291382 -413.22348022]
[167.84426880 -428.18615723]
[170.42109680 -442.97415161]
[174.35140991 -457.46127319]
[179.60168457 -471.52398682]
[186.12710571 -485.04223633]
[193.87202454 -497.90072632]
[202.77033997 -509.98977661]
[212.74613953 -521.20617676]
[223.71432495 -531.45428467]
[235.58129883 -540.64666748]
[248.24581909 -548.70483398]
[261.59985352 -555.56011963]
[275.52941895 -561.15399170]
[289.91574097 -565.43865967]
[304.63601685 -568.37774658]
[319.56469727 -569.94598389]
[334.57437134 -570.13006592]
[349.53701782 -568.92846680]
[364.32498169 -566.35137939]
[378.81204224 -562.42083740]
[392.87466431 -557.17034912]
[406.39282227 -550.64471436]
[419.25119019 -542.89959717]
[431.34005737 -534.00103760]
[442.55630493 -524.02508545]
[452.80422974 -513.05670166]
[461.99639893 -501.18957520]
[470.05438232 -488.52493286]
[476.90942383 -475.17077637]
[482.50305176 -461.24108887]
[486.78753662 -446.85473633]
[489.72631836 -432.13439941]
[491.29431152 -417.20568848]
[491.47817993 -402.19601440]
[490.27633667 -387.23336792]
[487.69900513 -372.44546509]
[483.76821899 -357.95846558]
[478.51745605 -343.89593506]
[471.99160767 -330.37789917]
[464.24624634 -317.51965332]
[455.34753418 -305.43093872]
[445.37136841 -294.21484375]
[434.40283203 -283.96710205]
[422.53555298 -274.77514648]
[409.87075806 -266.71737671]
[396.51651001 -259.86254883]
[382.58673096 -254.26914978]
[368.20028687 -249.98490906]
[353.47991943 -247.04637146]
[338.55117798 -245.47860718]
[323.54150391 -245.29499817]
[308.57888794 -246.49710083]
[293.79101562 -249.07467651]
[279.30407715 -253.00570679]
[274.05737305 -238.95324707]
[268.81063843 -224.90077209]
[263.56393433 -210.84829712]
[258.73791504 -196.64584351]
[254.33692932 -182.30599976]
[249.93592834 -167.96615601]
[261.19247437 -177.88029480]
[275.48376465 -182.43655396]
[290.40142822 -180.86711121]
[303.43161011 -173.43646240]
[312.37847900 -161.39680481]
[315.73431396 -146.77702332]
[312.93365479 -132.04080200]
[304.44839478 -119.67145538]
[291.70849609 -111.75344086]
[276.86083984 -109.62108612]
[262.40750122 -113.63372040]
[250.78416443 -123.11515045]
[243.94950867 -136.46759033]
[243.05557251 -151.44255066]
[235.97846985 -138.21702576]
[228.90136719 -124.99150085]
[221.82426453 -111.76597595]
[214.74716187 -98.54044342]
[207.67004395 -85.31491852]
[200.59294128 -72.08939362]
[193.51583862 -58.86386490]
[186.43873596 -45.63833618]
[179.36163330 -32.41280746]
[172.28453064 -19.18728065]
[173.10169983 -4.31510925]
[159.76869202 4.20201540]
[152.69158936 17.42754364]
[145.61447144 30.65307045]
[138.53736877 43.87859726]
[131.46026611 57.10412598]
[124.38316345 70.32965088]
[117.30605316 83.55518341]
[123.65835571 96.80407715]
[121.04907990 111.26356506]
[110.46660614 121.45651245]
[95.91947174 123.52192688]
[88.84236908 136.74745178]
[81.76525879 149.97297668]
[74.68815613 163.19850159]
[89.58184052 161.41574097]
[100.36841583 171.83926392]
[99.09642029 186.78523254]
[86.70352173 195.23603821]
[72.32530212 190.96206665]
[66.56077576 177.11557007]
[58.51959991 189.77809143]
[56.56091690 198.70005798]
[50.26325989 202.56803894]
[42.03445435 215.10945129]
[33.80564499 227.65084839]
[45.18309402 237.45944214]
[55.18288422 248.66921997]
[63.63390732 261.08837891]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 207]
[44 206]
[45 205]
[46 203]
[47 202]
[48 196]
[49 195]
[50 194]
[51 193]
[55 189]
[56 188]
[57 187]
[58 186]
[59 185]
[60 184]
[61 183]
[63 181]
[64 180]
[65 179]
[66 178]
[67 177]
[68 176]
[69 175]
[70 174]
[71 173]
[72 172]
[73 171]
[74 157]
[75 156]
[76 155]
[81 154]
[82 153]
[83 152]
[84 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
