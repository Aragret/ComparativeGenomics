%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[21.21893120 672.22802734]
[15.17949677 658.47369385]
[10.98708248 644.04876709]
[8.71342468 629.20001221]
[8.39742947 614.18151855]
[10.04450321 599.25030518]
[13.62646389 584.66180420]
[19.08201790 570.66564941]
[26.31781387 557.50134277]
[35.21003723 545.39422607]
[45.60653305 534.55133057]
[57.32939911 525.15826416]
[70.17804718 517.37579346]
[83.93261719 511.33700562]
[79.74560547 496.93322754]
[75.55859375 482.52941895]
[71.37158203 468.12564087]
[67.18457031 453.72186279]
[62.99755859 439.31808472]
[58.81054688 424.91430664]
[54.62353516 410.51052856]
[51.79107666 425.24066162]
[44.97465897 438.60241699]
[34.71184921 449.54202271]
[21.81201935 457.19671631]
[7.29250383 460.96282959]
[-7.70162964 460.54336548]
[-21.98788071 455.97137451]
[-34.43957520 447.60745239]
[-44.07472229 436.11117554]
[-50.13344955 422.38925171]
[-52.13794708 407.52377319]
[-49.93013000 392.68716431]
[-43.68410873 379.04943848]
[-33.89248276 367.68615723]
[-21.32744980 359.49346924]
[-6.97994614 355.11752319]
[8.01852512 354.90335083]
[22.48512077 358.86788940]
[35.27894974 366.69845581]
[45.39102936 377.77752686]
[52.02496719 391.23464966]
[52.24829483 376.23632812]
[52.47162247 361.23797607]
[44.92467117 348.39691162]
[52.86657715 334.71347046]
[53.08990479 319.71514893]
[40.67257309 328.13000488]
[26.30680275 323.81439209]
[20.58249855 309.94958496]
[27.71940994 296.75625610]
[42.45646667 293.95999146]
[53.92937851 303.62060547]
[55.26761246 288.68041992]
[56.60584641 273.74023438]
[45.76286316 284.10504150]
[30.91432190 286.23126221]
[17.59835625 279.32583618]
[10.78149605 265.96429443]
[13.00626087 251.13020325]
[23.44286728 240.35629272]
[38.19871902 237.66096497]
[51.77025223 244.04949951]
[59.09584808 257.14031982]
[62.19995880 242.46499634]
[65.30406952 227.78970337]
[68.40818024 213.11439514]
[71.51229095 198.43910217]
[74.61639404 183.76379395]
[77.72050476 169.08848572]
[80.82461548 154.41319275]
[83.92872620 139.73788452]
[87.03283691 125.06258392]
[90.13694763 110.38728333]
[85.98612213 97.03578949]
[95.18775177 86.50860596]
[98.29186249 71.83330536]
[92.17943573 54.46322250]
[104.40936279 41.87767792]
[107.29463196 27.15778732]
[105.87435150 18.13444901]
[110.33399200 12.24094486]
[113.43810272 -2.43435764]
[116.54221344 -17.10965919]
[119.64632416 -31.78496170]
[113.53390503 -49.15504456]
[125.76382446 -61.74058914]
[120.82549286 -76.77133942]
[130.86642456 -87.77266693]
[133.75169373 -102.49255371]
[136.63696289 -117.21244812]
[139.52223206 -131.93234253]
[137.96966553 -135.98739624]
[137.80482483 -139.92913818]
[138.82165527 -143.33523560]
[140.69816589 -145.89361572]
[143.04232788 -147.43083191]
[146.79862976 -161.95288086]
[150.55493164 -176.47494507]
[137.03671265 -183.09632874]
[125.12830353 -192.30364990]
[115.31734467 -203.71986389]
[108.00558472 -216.87748718]
[103.49243164 -231.23771667]
[101.96270752 -246.21252441]
[103.47904205 -261.18869019]
[107.97935486 -275.55294800]
[115.27935028 -288.71710205]
[125.08010101 -300.14208984]
[136.98027039 -309.36004639]
[150.49255371 -315.99353027]
[165.06364441 -319.77087402]
[180.09684753 -320.53741455]
[194.97657776 -318.26174927]
[209.09350586 -313.03707886]
[221.86956787 -305.07736206]
[232.78157043 -294.70849609]
[241.38270569 -282.35513306]
[247.32072449 -268.52313232]
[250.35249329 -253.77885437]
[250.35386658 -238.72612000]
[247.32476807 -223.98130798]
[241.38925171 -210.14820862]
[232.79037476 -197.79328918]
[221.88024902 -187.42247009]
[209.10563660 -179.46041870]
[194.98965454 -174.23320007]
[180.11033630 -171.95483398]
[165.07699585 -172.71864319]
[161.32069397 -158.19657898]
[157.56439209 -143.67453003]
[154.24212646 -129.04705811]
[151.35685730 -114.32717133]
[148.47158813 -99.60728455]
[145.58630371 -84.88739014]
[150.73101807 -70.90950775]
[140.48371887 -58.85531998]
[146.96975708 -48.64464188]
[144.68646240 -36.35764694]
[134.32162476 -28.68085289]
[131.21751404 -14.00554943]
[128.11340332 0.66975260]
[125.00930023 15.34505463]
[122.01452637 30.04305840]
[119.12924957 44.76295090]
[125.61528778 54.97362518]
[123.33198547 67.26062012]
[112.96716309 74.93741608]
[109.86305237 89.61271667]
[114.01387787 102.96421051]
[104.81224823 113.49139404]
[101.70813751 128.16668701]
[98.60402679 142.84199524]
[95.49992371 157.51730347]
[92.39581299 172.19259644]
[89.29170227 186.86790466]
[86.18759155 201.54321289]
[83.08348083 216.21850586]
[79.97937012 230.89381409]
[76.87525940 245.56910706]
[73.77114868 260.24441528]
[71.54603577 275.07846069]
[70.20780182 290.01864624]
[68.86956024 304.95883179]
[68.08824158 319.93847656]
[67.86491394 334.93679810]
[75.39588928 348.85064697]
[67.46996307 361.46130371]
[67.24663544 376.45965576]
[67.02330780 391.45797729]
[69.02732086 406.32351685]
[73.21433258 420.72729492]
[77.40134430 435.13107300]
[81.58834839 449.53485107]
[85.77536011 463.93862915]
[89.96237183 478.34240723]
[94.14938354 492.74621582]
[98.33639526 507.14999390]
[113.18482971 504.87420654]
[128.20327759 504.55606079]
[143.13475037 506.20101929]
[157.72377014 509.78088379]
[171.72070312 515.23443604]
[184.88601685 522.46838379]
[196.99444580 531.35882568]
[207.83880615 541.75378418]
[217.23352051 553.47534180]
[225.01785278 566.32287598]
[231.05860901 580.07653809]
[235.25239563 594.50109863]
[237.52746582 609.34960938]
[237.84487915 624.36810303]
[236.19923401 639.29949951]
[232.61866760 653.88836670]
[227.16444397 667.88500977]
[219.92990112 681.04998779]
[211.03883362 693.15802002]
[200.64337158 704.00183105]
[188.92138672 713.39599609]
[176.07348633 721.17974854]
[162.31948853 727.21984863]
[147.89476013 731.41296387]
[133.04611206 733.68731689]
[118.02763367 734.00402832]
[103.09630585 732.35766602]
[88.50762939 728.77636719]
[74.51123047 723.32147217]
[61.34660339 716.08630371]
[49.23901749 707.19470215]
[38.39564896 696.79870605]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 178]
[15 177]
[16 176]
[17 175]
[18 174]
[19 173]
[20 172]
[21 171]
[42 170]
[43 169]
[44 168]
[46 166]
[47 165]
[53 164]
[54 163]
[55 162]
[64 161]
[65 160]
[66 159]
[67 158]
[68 157]
[69 156]
[70 155]
[71 154]
[72 153]
[73 152]
[74 151]
[76 149]
[77 148]
[79 145]
[80 144]
[82 143]
[83 142]
[84 141]
[85 140]
[87 137]
[89 135]
[90 134]
[91 133]
[92 132]
[97 131]
[98 130]
[99 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
