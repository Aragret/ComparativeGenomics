%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxGACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGG\
) } def
/len { sequence length } bind def

/coor [
[97.91676331 673.32781982]
[89.47332764 660.87695312]
[83.46171570 647.08660889]
[80.08666992 632.42633057]
[79.46315002 617.39544678]
[81.61238861 602.50604248]
[86.46118164 588.26513672]
[93.84439087 575.15777588]
[103.51053619 563.63037109]
[115.13040161 554.07562256]
[128.30821228 546.81890869]
[142.59513855 542.10736084]
[140.59112549 527.24188232]
[138.58711243 512.37634277]
[136.58309937 497.51080322]
[134.35798645 482.67675781]
[131.91224670 467.87750244]
[129.46652222 453.07821655]
[125.27449036 446.99145508]
[127.09626770 438.04052734]
[124.87114716 423.20651245]
[122.64603424 408.37246704]
[120.42091370 393.53842163]
[118.19579315 378.70437622]
[103.78610992 377.57794189]
[89.98336792 373.26406860]
[77.48381042 365.97686768]
[66.91873169 356.08044434]
[58.82257080 344.07086182]
[53.60592651 330.55114746]
[51.53467941 316.20114136]
[52.71647644 301.74310303]
[57.09513474 287.90557861]
[64.45330048 275.38656616]
[74.42322540 264.81838989]
[86.50516510 256.73559570]
[100.09243011 251.54817200]
[98.08841705 236.68264771]
[96.08440399 221.81712341]
[87.05989075 233.79869080]
[72.47393799 237.29869080]
[58.99504471 230.71694946]
[52.78556824 217.06256104]
[56.68441010 202.57812500]
[68.90906525 193.88572693]
[83.87059021 194.95941162]
[94.72960663 205.30998230]
[94.28299713 190.31661987]
[93.83639526 175.32327271]
[85.24993896 166.80274963]
[84.75515747 154.31520081]
[93.16227722 144.53341675]
[92.93894958 129.53507996]
[92.71562195 114.53674316]
[83.74431610 100.36310577]
[92.07379150 85.80301666]
[91.62718201 70.80966949]
[82.79167175 61.41304779]
[82.72835541 48.91585922]
[90.92578125 40.02042389]
[90.70245361 25.02208519]
[90.47912598 10.02374744]
[90.25579834 -4.97458982]
[89.14015198 -19.93304253]
[87.13613892 -34.79857254]
[85.13212585 -49.66410065]
[83.12811279 -64.52962494]
[81.12409973 -79.39515686]
[75.68495941 -65.41603851]
[65.84482574 -54.09474182]
[52.75970078 -46.76128387]
[37.96682358 -44.27718735]
[23.20403862 -46.93428802]
[10.20566463 -54.42042542]
[0.49873748 -65.85614014]
[-4.77638197 -79.89797211]
[-4.99997807 -94.89630890]
[-0.14578375 -109.08914948]
[9.21593571 -120.80914307]
[21.98537445 -128.67942810]
[36.66239166 -131.77542114]
[51.52274704 -129.73339844]
[64.82066345 -122.79325867]
[74.99390411 -111.77032471]
[80.84769440 -97.95803070]
[82.40821838 -112.87663269]
[83.96874237 -127.79524231]
[85.52926636 -142.71385193]
[86.64491272 -157.67230225]
[87.31469727 -172.65733337]
[87.98448181 -187.64237976]
[80.87110901 -201.77427673]
[89.16899109 -214.14335632]
[89.83877563 -229.12840271]
[90.50856781 -244.11343384]
[91.17835236 -259.09848022]
[84.06497955 -273.23037720]
[92.36286163 -285.59945679]
[93.03264618 -300.58450317]
[79.12696075 -306.66696167]
[68.36029053 -317.36477661]
[62.18874359 -331.23117065]
[61.44696426 -346.39077759]
[66.23527527 -360.79342651]
[75.90609741 -372.49127197]
[89.15152740 -379.90228271]
[104.18023682 -382.02416992]
[118.95970917 -378.56994629]
[131.49114990 -370.00680542]
[140.07977295 -357.49282837]
[143.56405640 -342.72039795]
[141.47274780 -327.68740845]
[134.08871460 -314.42691040]
[122.41056824 -304.73233032]
[108.01768494 -299.91470337]
[107.34790039 -284.92968750]
[114.50917816 -271.86959839]
[106.16339111 -258.42868042]
[105.49360657 -243.44364929]
[104.82382202 -228.45861816]
[104.15402985 -213.47357178]
[111.31531525 -200.41351318]
[102.96952057 -186.97259521]
[102.29973602 -171.98754883]
[101.62995148 -157.00251770]
[103.41993713 -154.84518433]
[104.46322632 -151.84881592]
[104.43596649 -148.29429626]
[103.12185669 -144.57438660]
[100.44786835 -141.15332031]
[98.88734436 -126.23471832]
[97.32682037 -111.31610870]
[95.76629639 -96.39750671]
[95.98962402 -81.39916992]
[97.99363708 -66.53363800]
[99.99765015 -51.66811371]
[102.00167084 -36.80258560]
[104.00568390 -21.93705750]
[112.28372192 -34.44601440]
[126.29256439 -39.80812836]
[140.80726624 -36.02346802]
[150.41418457 -24.50361252]
[151.53018188 -9.54518509]
[143.73902893 3.27269006]
[129.94662476 9.16926289]
[115.29719543 5.94525719]
[105.25413513 -5.19791746]
[105.47746277 9.80041981]
[105.70079041 24.79875755]
[105.92412567 39.79709625]
[115.72265625 54.35578918]
[106.62053680 70.36306763]
[107.06713867 85.35641479]
[115.04737091 93.83917236]
[115.30745697 105.48278046]
[107.71395874 114.31341553]
[107.93728638 129.31175232]
[108.16061401 144.31008911]
[117.96842194 159.89497375]
[108.82974243 174.87666321]
[109.27634430 189.87002563]
[109.72295380 204.86337280]
[110.94992828 219.81311035]
[112.95394135 234.67863464]
[114.95795441 249.54415894]
[130.46241760 251.17588806]
[145.12025452 256.46044922]
[158.08447266 265.08807373]
[168.60704041 276.55587769]
[176.08195496 290.19732666]
[180.08023071 305.22085571]
[180.37448120 320.75576782]
[176.95185852 335.90289307]
[170.01449585 349.78637695]
[159.96768188 361.60455322]
[147.39610291 370.67608643]
[133.02984619 376.47924805]
[135.25495911 391.31329346]
[137.48007202 406.14733887]
[139.70518494 420.98138428]
[141.93031311 435.81542969]
[144.26579285 450.63247681]
[146.71151733 465.43176270]
[149.15725708 480.23104858]
[153.05021667 485.57485962]
[153.58045959 491.23312378]
[151.44862366 495.50680542]
[153.45263672 510.37231445]
[155.45664978 525.23785400]
[157.46066284 540.10339355]
[172.48521423 540.86340332]
[187.11422729 544.37152100]
[200.84944153 550.50817871]
[213.22303772 559.06439209]
[223.81358337 569.74871826]
[232.26037598 582.19726562]
[238.27571106 595.98602295]
[241.65470886 610.64538574]
[242.28228760 625.67608643]
[240.13705444 640.56610107]
[235.29209900 654.80828857]
[227.91242981 667.91766357]
[218.24938965 679.44763184]
[206.63209534 689.00555420]
[193.45623779 696.26580811]
[179.17059326 700.98114014]
[164.26168823 702.99102783]
[149.23735046 702.22692871]
[134.60929871 698.71490479]
[120.87573242 692.57452393]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 190]
[13 189]
[14 188]
[15 187]
[16 184]
[17 183]
[18 182]
[20 181]
[21 180]
[22 179]
[23 178]
[24 177]
[37 165]
[38 164]
[39 163]
[47 162]
[48 161]
[49 160]
[52 158]
[53 157]
[54 156]
[56 153]
[57 152]
[60 150]
[61 149]
[62 148]
[63 147]
[64 138]
[65 137]
[66 136]
[67 135]
[68 134]
[85 133]
[86 132]
[87 131]
[88 130]
[89 125]
[90 124]
[91 123]
[93 121]
[94 120]
[95 119]
[96 118]
[98 116]
[99 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
