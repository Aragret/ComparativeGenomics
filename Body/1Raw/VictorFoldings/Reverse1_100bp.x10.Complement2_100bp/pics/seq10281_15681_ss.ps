%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCAGUGAGUAUCCGGUCUGAAUCCCGAUCCUACUACUAAUUAUUCUCCCUACUGUAUUGAUAAUCACCGUCCAAUCAACAAACAUCCCGAGUACCAUxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[131.52597046 410.57632446]
[144.38815308 402.42254639]
[142.16304016 387.58850098]
[132.62336731 376.14978027]
[138.22793579 361.35455322]
[136.00280762 346.52050781]
[133.77769470 331.68646240]
[129.67674255 325.53796387]
[131.63159180 316.61514282]
[129.62757874 301.74963379]
[127.62355804 286.88409424]
[125.39843750 272.05004883]
[122.95271301 257.25079346]
[120.28691864 242.48956299]
[117.40164185 227.76966858]
[114.51637268 213.04977417]
[111.63110352 198.32987976]
[108.74582672 183.61000061]
[105.86055756 168.89010620]
[102.97528076 154.17021179]
[100.09001160 139.45031738]
[90.04908752 128.44900513]
[94.98741913 113.41825104]
[85.94354248 102.75523376]
[90.29269409 89.46702576]
[87.40741730 74.74713135]
[84.52214813 60.02724075]
[80.65784454 45.53354645]
[75.83184814 31.33109283]
[71.00584412 17.12863731]
[66.17984772 2.92618108]
[61.35385132 -11.27627468]
[56.52785492 -25.47873116]
[51.70185471 -39.68118668]
[45.83289719 -53.48536301]
[38.95348358 -66.81478882]
[32.07406998 -80.14421844]
[25.19465828 -93.47364807]
[25.43956184 -78.47564697]
[22.79355049 -63.71087265]
[17.35554695 -49.73131180]
[9.32885265 -37.05960464]
[-0.98644716 -26.16949081]
[-13.20470715 -17.46810341]
[-26.86913872 -11.28075314]
[-41.46888733 -7.83875704]
[-56.45812988 -7.27079725]
[-71.27648163 -9.59810638]
[-85.36995697 -14.73367786]
[-98.21164703 -22.48551369]
[-109.32146454 -32.56380463]
[-118.28405762 -44.59177017]
[-124.76435089 -58.11973190]
[-128.52008057 -72.64193726]
[-129.41084290 -87.61547089]
[-127.40330505 -102.48052216]
[-122.57255554 -116.68135834]
[-115.09917450 -129.68707275]
[-105.26256561 -141.01142883]
[-93.43048096 -150.23107910]
[-80.04527283 -157.00131226]
[-65.60734558 -161.06903076]
[-50.65648270 -162.28216553]
[-35.75162888 -160.59535217]
[-21.45001602 -156.07165527]
[-8.28631496 -148.88020325]
[3.24733520 -139.28984070]
[12.71974182 -127.65913391]
[19.77443695 -114.42851257]
[19.32783127 -129.42185974]
[18.88122368 -144.41522217]
[18.43461800 -159.40856934]
[15.68974495 -163.84846497]
[14.99217033 -168.43832397]
[16.05617332 -172.37315369]
[18.31796455 -175.07807922]
[18.54129219 -190.07641602]
[18.76461983 -205.07475281]
[18.98794746 -220.07308960]
[19.21127510 -235.07142639]
[9.16922569 -223.92884827]
[-5.48005056 -220.70414734]
[-19.27273560 -226.60006714]
[-27.06449890 -239.41757202]
[-25.94920731 -254.37603760]
[-16.34283447 -265.89636230]
[-1.82832062 -269.68170166]
[12.18077850 -264.32025146]
[20.45973206 -251.81057739]
[22.46374702 -266.67608643]
[24.46776009 -281.54162598]
[26.47177315 -296.40716553]
[12.12266541 -300.90283203]
[-1.26019371 -307.75900269]
[-13.29175186 -316.77841187]
[-23.62583733 -327.70153809]
[-31.96511841 -340.21411133]
[-38.06965637 -353.95611572]
[-41.76381302 -368.53216553]
[-42.94129944 -383.52285767]
[-41.56823349 -398.49694824]
[-37.68412781 -413.02352905]
[-31.40073013 -426.68466187]
[-22.89883041 -439.08731079]
[-12.42304134 -449.87463379]
[-0.27477446 -458.73620605]
[13.19644070 -465.41708374]
[27.60301018 -469.72509766]
[42.53042603 -471.53622437]
[57.54920197 -470.79837036]
[72.22721863 -467.53280640]
[86.14215088 -461.83346558]
[98.89364624 -453.86431885]
[110.11481476 -443.85464478]
[119.48280334 -432.09246826]
[126.72807312 -418.91619873]
[131.64216614 -404.70495605]
[134.08369446 -389.86758423]
[133.98242188 -374.83105469]
[131.34123230 -360.02792358]
[126.23615265 -345.88418579]
[118.81404114 -332.80670166]
[109.28845215 -321.17178345]
[97.93346405 -311.31417847]
[85.07576752 -303.51754761]
[71.08532715 -298.00613403]
[56.36465454 -294.93859863]
[41.33730316 -294.40313721]
[39.33329010 -279.53762817]
[37.32927322 -264.67208862]
[35.32526016 -249.80656433]
[34.20961380 -234.84809875]
[33.98628616 -219.84976196]
[33.76295853 -204.85142517]
[33.53963089 -189.85308838]
[33.31630325 -174.85475159]
[33.42796707 -159.85517883]
[33.87457275 -144.86181641]
[34.32117844 -129.86846924]
[34.76778793 -114.87512207]
[38.52408600 -100.35306549]
[45.40349960 -87.02363586]
[52.28291321 -73.69420624]
[59.16232300 -60.36477661]
[61.47143555 -75.18597412]
[70.80461121 -86.92871094]
[84.72218323 -92.52345276]
[99.58613586 -90.50775909]
[111.51105499 -81.40851593]
[117.37980652 -67.60424805]
[115.65830994 -52.70336151]
[106.79656219 -40.60091019]
[93.11100006 -34.46044159]
[78.17899323 -35.88706589]
[65.90431213 -44.50718307]
[70.73030853 -30.30472755]
[75.55630493 -16.10227203]
[80.38230133 -1.89981663]
[85.20830536 12.30263901]
[90.03430176 26.50509453]
[94.86029816 40.70755005]
[99.89899445 26.57915497]
[111.71087646 17.33364868]
[126.63591003 15.83585262]
[140.04940796 22.54987526]
[147.79504395 35.39530182]
[147.47276306 50.39183807]
[139.18241882 62.89264679]
[125.49286652 69.02421570]
[110.64596558 66.88660431]
[99.24204254 57.14196777]
[102.12731171 71.86186218]
[105.01258087 86.58174896]
[114.05645752 97.24476624]
[109.70730591 110.53297424]
[119.95460510 122.58716583]
[114.80989838 136.56504822]
[117.69517517 151.28494263]
[120.58044434 166.00483704]
[123.46572113 180.72471619]
[126.35099030 195.44461060]
[129.23626709 210.16450500]
[132.12153625 224.88439941]
[135.00680542 239.60429382]
[139.05714417 244.82983398]
[139.75561523 250.46978760]
[137.75198364 254.80505371]
[140.19770813 269.60430908]
[144.09066772 274.94815063]
[144.62091064 280.60638428]
[142.48908997 284.88006592]
[144.49310303 299.74560547]
[146.49711609 314.61114502]
[148.61174011 329.46133423]
[150.83685303 344.29537964]
[153.06196594 359.12942505]
[162.76080322 371.62915039]
[156.99708557 385.36337280]
[159.22219849 400.19741821]
[173.91062927 404.21859741]
[185.68951416 413.87145996]
[192.51806641 427.48361206]
[193.21322632 442.69665527]
[187.65454102 456.87484741]
[176.80508423 467.56170654]
[162.54458618 472.90570068]
[147.34378052 471.98092651]
[133.83627319 464.94760132]
[124.36235046 453.02432251]
[120.56340790 438.27685547]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 199]
[3 198]
[5 196]
[6 195]
[7 194]
[9 193]
[10 192]
[11 191]
[12 188]
[13 187]
[14 184]
[15 183]
[16 182]
[17 181]
[18 180]
[19 179]
[20 178]
[21 177]
[23 175]
[25 173]
[26 172]
[27 171]
[28 161]
[29 160]
[30 159]
[31 158]
[32 157]
[33 156]
[34 155]
[35 144]
[36 143]
[37 142]
[38 141]
[69 140]
[70 139]
[71 138]
[72 137]
[76 136]
[77 135]
[78 134]
[79 133]
[80 132]
[89 131]
[90 130]
[91 129]
[92 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
