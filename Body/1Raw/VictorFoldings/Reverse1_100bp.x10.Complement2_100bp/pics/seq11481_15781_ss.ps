%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCGAACAAUAUUAAUACGGAGUAUCCCUAUCAUGUUCCUUCCCCAUCCGAUACACAAAACAGUCCCCCAACUCUUACUCACACUCCGCAUAAUAUGGUxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[84.46971893 576.12298584]
[95.31851196 564.63037109]
[94.64872742 549.64532471]
[93.97894287 534.66033936]
[93.30915833 519.67529297]
[92.30489349 504.70892334]
[90.96665955 489.76873779]
[89.62842560 474.82855225]
[88.29019165 459.88836670]
[86.95195770 444.94818115]
[79.21842957 457.80090332]
[66.14278412 465.15124512]
[51.14296341 465.07785034]
[38.13988495 457.59988403]
[30.53252411 444.67208862]
[30.30942154 429.67373657]
[37.52890015 416.52539062]
[50.30380630 408.66397095]
[65.29480743 408.14443970]
[78.58329010 415.10263062]
[86.69541168 427.71881104]
[87.58822632 412.74539185]
[88.48104095 397.77197266]
[89.37385559 382.79858398]
[90.04364014 367.81353760]
[90.49024963 352.82019043]
[90.93685150 337.82684326]
[91.38346100 322.83349609]
[91.83006287 307.84014893]
[92.27667236 292.84680176]
[92.50000000 277.84844971]
[92.50000000 262.84844971]
[92.50000000 247.84844971]
[92.50000000 232.84844971]
[78.43607330 227.79957581]
[66.92653656 218.22567749]
[59.37286377 205.26741028]
[56.70340729 190.47904968]
[59.25935364 175.64202881]
[66.75123596 162.55035400]
[78.29158020 152.79368591]
[92.50000000 147.56434631]
[92.50000000 132.56434631]
[92.50000000 117.56434631]
[82.32884216 107.24475861]
[82.32884216 92.75524139]
[92.50000000 82.43565369]
[92.50000000 67.43565369]
[92.50000000 52.43565369]
[92.50000000 37.43565369]
[84.76270294 23.63548088]
[92.50000000 10.90820980]
[89.37059021 2.32656527]
[92.61332703 -4.31470251]
[92.83665466 -19.31303978]
[93.05998230 -34.31137848]
[86.22228241 -20.96050453]
[76.52619934 -9.51559544]
[64.48036957 -0.57702905]
[50.71669006 5.38629675]
[35.95718765 8.06155682]
[20.97610664 7.30841303]
[6.55932713 3.16637397]
[-6.53687429 -4.14727783]
[-17.62549782 -14.24888229]
[-26.12485695 -26.60853004]
[-31.58909225 -40.57785797]
[-33.73155975 -55.42406464]
[-32.43987274 -70.36834717]
[-27.78178596 -84.62675476]
[-20.00165749 -97.45132446]
[-9.50761509 -108.16930389]
[3.14984441 -116.21845245]
[17.30673599 -121.17651367]
[32.22041702 -122.78341675]
[47.10854340 -120.95485687]
[61.19012070 -115.78675842]
[73.72644806 -107.55022430]
[84.05990601 -96.67733765]
[91.64840698 -83.73845673]
[96.09388733 -69.41233826]
[97.16307068 -54.44884109]
[102.82585907 -68.33886719]
[108.48863983 -82.22889709]
[114.15142822 -96.11891937]
[119.81421661 -110.00894928]
[115.02335358 -119.77400208]
[116.36986542 -130.34599304]
[123.16969299 -138.26499939]
[132.99443054 -141.07350159]
[139.06826782 -154.78877258]
[145.14208984 -168.50404358]
[151.21592712 -182.21929932]
[149.72930908 -197.97052002]
[161.95747375 -206.47470093]
[168.03131104 -220.18997192]
[174.10514832 -233.90524292]
[180.17898560 -247.62049866]
[178.69236755 -263.37170410]
[190.92053223 -271.87591553]
[178.29653931 -280.03564453]
[167.10450745 -290.06982422]
[157.62005615 -301.73138428]
[150.07675171 -314.73309326]
[144.66035461 -328.75485229]
[141.50425720 -343.45129395]
[140.68615723 -358.46051025]
[142.22621155 -373.41293335]
[146.08650208 -387.94030762]
[152.17196655 -401.68490601]
[160.33274841 -414.30822754]
[170.36785889 -425.49942017]
[182.03018188 -434.98291016]
[195.03254700 -442.52514648]
[209.05473328 -447.94036865]
[223.75143433 -451.09527588]
[238.76074219 -451.91213989]
[253.71302795 -450.37084961]
[268.24008179 -446.50933838]
[281.98416138 -440.42276001]
[294.60681152 -432.26092529]
[305.79718018 -422.22491455]
[315.27972412 -410.56179810]
[322.82086182 -397.55880737]
[328.23495483 -383.53619385]
[331.38864136 -368.83920288]
[332.20425415 -353.82983398]
[330.66174316 -338.87768555]
[326.79904175 -324.35095215]
[320.71130371 -310.60736084]
[312.54846191 -297.98538208]
[302.51150513 -286.79583740]
[290.84759521 -277.31427002]
[277.84399414 -269.77420044]
[263.82092285 -264.36126709]
[249.12368774 -261.20880127]
[234.11425781 -260.39440918]
[219.16221619 -261.93817139]
[204.63580322 -265.80206299]
[206.55685425 -251.03186035]
[193.89425659 -241.54666138]
[187.82041931 -227.83140564]
[181.74658203 -214.11613464]
[175.67274475 -200.40086365]
[177.59379578 -185.63066101]
[164.93119812 -176.14547729]
[158.85736084 -162.43020630]
[152.78352356 -148.71493530]
[146.70968628 -134.99966431]
[150.16990662 -115.97563171]
[133.70423889 -104.34616089]
[128.04145813 -90.45613098]
[122.37866974 -76.56610870]
[116.71588135 -62.67608261]
[111.05309296 -48.78605270]
[108.05831909 -34.08805084]
[107.83499146 -19.08971214]
[107.61166382 -4.09137487]
[107.50000000 10.90820980]
[115.23729706 23.63548088]
[107.50000000 37.43565369]
[107.50000000 52.43565369]
[107.50000000 67.43565369]
[107.50000000 82.43565369]
[117.67115784 92.75524139]
[117.67115784 107.24475861]
[107.50000000 117.56434631]
[107.50000000 132.56434631]
[107.50000000 147.56434631]
[121.70841980 152.79368591]
[133.24876404 162.55035400]
[140.74064636 175.64202881]
[143.29658508 190.47904968]
[140.62713623 205.26741028]
[133.07347107 218.22567749]
[121.56392670 227.79957581]
[107.50000000 232.84844971]
[107.50000000 247.84844971]
[107.50000000 262.84844971]
[107.50000000 277.84844971]
[110.46956635 283.75549316]
[110.07013702 289.42449951]
[107.27001953 293.29339600]
[106.82341766 308.28674316]
[106.37680817 323.28009033]
[105.93020630 338.27343750]
[105.48359680 353.26678467]
[105.03699493 368.26016235]
[107.82936096 374.25299072]
[107.26132965 379.90759277]
[104.34725952 383.69140625]
[103.45444489 398.66479492]
[102.56163025 413.63821411]
[101.66881561 428.61160278]
[101.89214325 443.60995483]
[103.23037720 458.55014038]
[104.56861115 473.49032593]
[105.90684509 488.43051147]
[107.24507904 503.37069702]
[110.24935150 507.63934326]
[111.21888733 512.17956543]
[110.39097595 516.17071533]
[108.29419708 519.00549316]
[108.96398163 533.99053955]
[109.63376617 548.97558594]
[110.30355072 563.96063232]
[122.13439178 574.43945312]
[123.00698090 590.21966553]
[112.40361786 601.93902588]
[96.61508942 602.64471436]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 206]
[3 205]
[4 204]
[5 203]
[6 199]
[7 198]
[8 197]
[9 196]
[10 195]
[21 194]
[22 193]
[23 192]
[24 191]
[25 188]
[26 187]
[27 186]
[28 185]
[29 184]
[30 183]
[31 180]
[32 179]
[33 178]
[34 177]
[42 169]
[43 168]
[44 167]
[47 164]
[48 163]
[49 162]
[50 161]
[52 159]
[54 158]
[55 157]
[56 156]
[82 155]
[83 154]
[84 153]
[85 152]
[86 151]
[90 149]
[91 148]
[92 147]
[93 146]
[95 144]
[96 143]
[97 142]
[98 141]
[100 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
