%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[125.70162201 319.30233765]
[112.75947571 326.96209717]
[98.68377686 332.25793457]
[83.90227509 335.02890015]
[68.86415863 335.19079590]
[54.02642441 332.73870850]
[39.83996964 327.74716187]
[26.73590851 320.36782837]
[15.11245441 310.82495117]
[5.32283401 299.40853882]
[-2.33545804 286.46551514]
[-7.62969446 272.38922119]
[-10.39898968 257.60739136]
[-10.55918789 242.56927490]
[-8.10542107 227.73181152]
[-3.11225653 213.54592896]
[4.26856995 200.44270325]
[13.81276226 188.82032776]
[25.23028374 179.03199768]
[38.17417145 171.37518311]
[52.25106812 166.08253479]
[67.03320312 163.31492615]
[82.07135010 163.15643311]
[84.51708221 148.35716248]
[86.96280670 133.55789185]
[89.40853119 118.75861359]
[91.85426331 103.95934296]
[90.07540894 100.53764343]
[89.81342316 96.34845734]
[91.37726593 92.08683777]
[94.75383759 88.55999756]
[97.85794830 73.88469696]
[100.96205902 59.20939636]
[104.06616974 44.53409195]
[107.17028046 29.85878944]
[110.27439117 15.18348789]
[113.37850189 0.50818521]
[111.88648224 -3.56953955]
[111.78033447 -7.51330137]
[112.84777069 -10.90387440]
[114.76215363 -13.43403912]
[117.12895203 -14.93617630]
[121.10105133 -29.40069962]
[125.07314301 -43.86522293]
[129.04524231 -58.32974625]
[114.77105713 -62.94752121]
[100.71842957 -68.20104980]
[86.91564178 -74.07976532]
[73.39051056 -80.57181549]
[60.17025757 -87.66413116]
[47.28151321 -95.34243774]
[34.75023270 -103.59125519]
[22.60165215 -112.39398956]
[10.86023903 -121.73290253]
[-0.45036215 -131.58918762]
[-11.30737305 -141.94299316]
[-21.68892860 -152.77348328]
[-31.57412338 -164.05882263]
[-40.94304657 -175.77630615]
[-49.77683640 -187.90231323]
[-58.05769730 -200.41244507]
[-65.76895142 -213.28150940]
[-72.89507294 -226.48356628]
[-79.42171478 -239.99205017]
[-85.33572388 -253.77973938]
[-90.62519836 -267.81887817]
[-95.27947235 -282.08120728]
[-99.28919220 -296.53796387]
[-102.64627075 -311.16009521]
[-105.34394836 -325.91809082]
[-107.37679291 -340.78225708]
[-108.74071503 -355.72265625]
[-109.43296051 -370.70922852]
[-109.45214081 -385.71173096]
[-108.79821777 -400.70001221]
[-107.47250366 -415.64385986]
[-105.47766876 -430.51318359]
[-102.81773376 -445.27804565]
[-99.49804688 -459.90869141]
[-95.52530670 -474.37567139]
[-90.90750885 -488.64984131]
[-85.65395355 -502.70245361]
[-79.77521515 -516.50524902]
[-73.28313446 -530.03033447]
[-66.19079590 -543.25061035]
[-58.51246643 -556.13934326]
[-50.26361847 -568.67059326]
[-41.46086502 -580.81915283]
[-32.12193298 -592.56054688]
[-22.26562500 -603.87115479]
[-11.91179466 -614.72808838]
[-1.08129227 -625.10968018]
[10.20407104 -634.99481201]
[21.92156792 -644.36370850]
[34.04759979 -653.19750977]
[46.55774689 -661.47833252]
[59.42681885 -669.18957520]
[72.62889099 -676.31567383]
[86.13738251 -682.84228516]
[99.92509460 -688.75622559]
[113.96424866 -694.04571533]
[128.22657776 -698.69995117]
[142.68334961 -702.70965576]
[157.30546570 -706.06671143]
[172.06347656 -708.76434326]
[186.92764282 -710.79718018]
[201.86805725 -712.16107178]
[216.85461426 -712.85327148]
[231.85714722 -712.87243652]
[246.84541321 -712.21844482]
[261.78924561 -710.89270020]
[276.65856934 -708.89788818]
[291.42343140 -706.23791504]
[306.05404663 -702.91821289]
[320.52102661 -698.94543457]
[334.79519653 -694.32757568]
[348.84780884 -689.07403564]
[362.65057373 -683.19525146]
[376.17568970 -676.70312500]
[389.39590454 -669.61077881]
[402.28460693 -661.93243408]
[414.81585693 -653.68353271]
[426.96441650 -644.88079834]
[438.70578003 -635.54180908]
[450.01635742 -625.68548584]
[460.87332153 -615.33166504]
[471.25485229 -604.50109863]
[481.13998413 -593.21575928]
[490.50888062 -581.49822998]
[499.34262085 -569.37219238]
[507.62341309 -556.86199951]
[515.33465576 -543.99291992]
[522.46069336 -530.79083252]
[528.98730469 -517.28234863]
[534.90124512 -503.49459839]
[540.19067383 -489.45544434]
[544.84490967 -475.19311523]
[548.85455322 -460.73632812]
[552.21160889 -446.11419678]
[554.90917969 -431.35620117]
[556.94201660 -416.49200439]
[558.30584717 -401.55160522]
[558.99804688 -386.56503296]
[559.01715088 -371.56253052]
[558.36315918 -356.57424927]
[557.03741455 -341.63040161]
[555.04254150 -326.76107788]
[552.38250732 -311.99624634]
[549.06280518 -297.36563110]
[545.09002686 -282.89865112]
[540.47216797 -268.62451172]
[535.21856689 -254.57189941]
[529.33972168 -240.76914978]
[522.84759521 -227.24404907]
[515.75524902 -214.02383423]
[508.07684326 -201.13514709]
[499.82794189 -188.60391235]
[491.02514648 -176.45538330]
[481.68618774 -164.71401978]
[471.82983398 -153.40347290]
[461.47595215 -142.54652405]
[450.64541626 -132.16502380]
[439.36001587 -122.27989197]
[427.64248657 -112.91103363]
[415.51641846 -104.07731628]
[403.00622559 -95.79653168]
[390.13714600 -88.08535004]
[376.93502808 -80.95929718]
[363.42651367 -74.43273926]
[349.63879395 -68.51880646]
[335.59960938 -63.22941589]
[321.33728027 -58.57521439]
[306.88046265 -54.56557846]
[292.25833130 -51.20858383]
[277.50033569 -48.51099014]
[262.63613892 -46.47822952]
[247.69572449 -45.11439514]
[232.70916748 -44.42223358]
[217.70664978 -44.40313721]
[202.71836853 -45.05714798]
[187.77453613 -46.38294983]
[172.90522766 -48.37786865]
[158.14039612 -51.03788757]
[143.50976562 -54.35765076]
[139.53767395 -39.89312744]
[135.56556702 -25.42860413]
[131.59347534 -10.96407986]
[128.05380249 3.61229539]
[124.94969177 18.28759766]
[121.84558105 32.96289825]
[118.74147034 47.63820267]
[115.63735962 62.31350327]
[112.53325653 76.98880768]
[109.42914581 91.66410828]
[106.65353394 106.40507507]
[104.20780182 121.20434570]
[101.76207733 136.00361633]
[99.31635284 150.80288696]
[96.87062073 165.60215759]
[111.05820465 170.59049988]
[124.16394806 177.96685791]
[135.78956604 187.50709534]
[145.58177185 198.92129517]
[153.24299622 211.86256409]
[158.54043579 225.93766785]
[161.31307983 240.71885681]
[161.47668457 255.75695801]
[159.02629089 270.59497070]
[154.03633118 284.78198242]
[146.65847778 297.88690186]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 199]
[24 198]
[25 197]
[26 196]
[27 195]
[31 194]
[32 193]
[33 192]
[34 191]
[35 190]
[36 189]
[37 188]
[42 187]
[43 186]
[44 185]
[45 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
