%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGGAUUCGUAUCACAAUCUCAAACCUAAUCACCCGAUAAAAGACGAUCCCCCACCUUCGCCUACUCAUUCUUCUAAGGACGAUGUUGAUAUCACGAACxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[63.54272079 505.79339600]
[50.05572891 512.59619141]
[35.19824600 515.32232666]
[20.17469597 513.75079346]
[6.20297146 508.00909424]
[-5.58430052 498.56256104]
[-14.23157978 486.17703247]
[-19.03787041 471.85653687]
[-19.61354637 456.76199341]
[-15.91194153 442.11703491]
[-8.23312855 429.10885620]
[2.80040622 418.79199219]
[16.29422379 412.00277710]
[31.15443993 409.29156494]
[32.71496201 394.37295532]
[34.27548599 379.45434570]
[35.83600998 364.53573608]
[29.46477318 351.07260132]
[38.59578705 338.15225220]
[40.15631104 323.23364258]
[41.71683502 308.31503296]
[31.65547943 319.44021606]
[17.41015816 324.13815308]
[2.70456338 321.18087769]
[-8.61729908 311.34140015]
[-13.59592056 297.19174194]
[-10.92990208 282.43054199]
[-1.31613362 270.91641235]
[12.73236847 265.65908813]
[27.54335785 268.03280640]
[39.24528122 277.41708374]
[44.77917480 291.35806274]
[48.53547668 276.83599854]
[52.29177475 262.31393433]
[56.04807663 247.79187012]
[59.80437851 233.26980591]
[63.45246506 218.72018433]
[66.99213409 204.14381409]
[70.53180695 189.56744385]
[59.66019058 179.38542175]
[55.31588745 165.03330994]
[58.76147079 150.33657837]
[69.16907501 139.26506042]
[83.81658173 134.86074829]
[87.35625458 120.28437042]
[90.89592743 105.70799255]
[91.78874207 90.73458862]
[90.00627136 75.84086609]
[88.22380829 60.94715118]
[86.44134521 46.05343246]
[84.65887451 31.15971565]
[81.22781372 16.55739403]
[76.19090271 2.42836452]
[71.15398407 -11.70066547]
[66.01202393 -25.79180527]
[60.76530457 -39.84427643]
[56.73791122 -43.16499710]
[54.60071945 -47.28636932]
[54.34218216 -51.35431671]
[55.61344910 -54.64311981]
[50.99943924 -68.91585541]
[46.38543320 -83.18859100]
[41.77142334 -97.46131897]
[37.15741348 -111.73405457]
[32.54340363 -126.00679016]
[26.92600250 -133.20974731]
[27.96866035 -140.52648926]
[23.56766319 -154.86633301]
[19.16666412 -169.20617676]
[14.76566696 -183.54602051]
[10.36466885 -197.88587952]
[5.96367073 -212.22572327]
[-8.84922981 -209.72912598]
[-23.86127663 -209.18742371]
[-38.81559753 -210.60986328]
[-53.45629883 -213.97213745]
[-67.53285980 -219.21670532]
[-80.80442047 -226.25379944]
[-93.04387665 -234.96302795]
[-104.04179382 -245.19537354]
[-113.60999298 -256.77572632]
[-121.58474731 -269.50595093]
[-127.82958984 -283.16818237]
[-132.23767090 -297.52868652]
[-134.73356628 -312.34170532]
[-135.27455139 -327.35375977]
[-133.85139465 -342.30801392]
[-130.48843384 -356.94857788]
[-125.24320221 -371.02487183]
[-118.20546722 -384.29611206]
[-109.49565125 -396.53512573]
[-99.26278687 -407.53256226]
[-87.68198395 -417.10021973]
[-74.95138550 -425.07437134]
[-61.28884506 -431.31857300]
[-46.92813873 -435.72595215]
[-32.11500168 -438.22116089]
[-17.10290337 -438.76141357]
[-2.14872026 -437.33755493]
[12.49166107 -433.97387695]
[26.56772614 -428.72799683]
[39.83861160 -421.68963623]
[52.07723999 -412.97921753]
[63.07418442 -402.74584961]
[72.64128113 -391.16458130]
[80.61482239 -378.43359375]
[86.85836792 -364.77075195]
[91.26508331 -350.40985107]
[93.75956726 -335.59658813]
[94.29912567 -320.58447266]
[92.87454224 -305.63034058]
[89.51017761 -290.99014282]
[84.26361084 -276.91430664]
[77.22461700 -263.64376831]
[68.51363373 -251.40554810]
[58.27972412 -240.40908813]
[46.69800568 -230.84254456]
[33.96665192 -222.86961365]
[20.30351830 -216.62672424]
[24.70451546 -202.28686523]
[29.10551453 -187.94702148]
[33.50651169 -173.60717773]
[37.90750885 -159.26733398]
[42.30850983 -144.92749023]
[46.81613541 -130.62080383]
[51.43014526 -116.34806061]
[56.04415512 -102.07533264]
[60.65816498 -87.80259705]
[65.27217102 -73.52986145]
[69.88618469 -59.25712967]
[74.81777954 -45.09099579]
[80.06449127 -31.03852463]
[85.34904480 -25.87177277]
[85.28301239 -16.73758125]
[90.31993103 -2.60855174]
[95.35684204 11.52047729]
[97.97187042 -3.24981785]
[105.68354034 -16.11567307]
[117.47724152 -25.38436127]
[131.80131531 -29.83642960]
[146.77117920 -28.88613129]
[160.41729736 -22.65849304]
[170.94429016 -11.97286892]
[176.96713257 1.76486373]
[177.69343567 16.74726868]
[173.02763367 31.00315666]
[163.58358765 42.65691376]
[150.60383606 50.17529678]
[135.79608154 52.56912613]
[121.10854340 49.52345276]
[108.47361755 41.43899155]
[99.55259705 29.37725067]
[101.33506012 44.27096939]
[103.11752319 59.16468430]
[104.89999390 74.05840302]
[106.68245697 88.95211792]
[111.69354248 74.81391144]
[119.90132141 62.25873566]
[130.84159851 51.99665451]
[143.89566040 44.60803604]
[158.32521057 40.51074600]
[173.31422424 39.93650055]
[188.01496887 42.91778183]
[201.59605408 49.28598022]
[213.28941345 58.68094254]
[222.43373108 70.57134247]
[228.51184082 84.28471375]
[231.17999268 99.04550171]
[230.28730774 114.01891327]
[225.88426208 128.35813904]
[218.21986389 141.25219727]
[207.72756958 151.97189331]
[195.00079346 159.91098022]
[180.75926208 164.62043762]
[165.80844116 165.83393860]
[150.99383545 163.48286438]
[137.15330505 157.70016479]
[125.06958771 148.81286621]
[115.42608643 137.32362366]
[108.76818085 123.88217926]
[105.47229767 109.24766541]
[101.93262482 123.82403564]
[98.39295197 138.40042114]
[109.38920593 149.03195190]
[113.55999756 163.64364624]
[109.88151550 178.28382874]
[99.43877411 189.04510498]
[85.10818481 193.10711670]
[81.56851196 207.68348694]
[78.02883911 222.25985718]
[79.04479218 231.33761597]
[74.32643890 237.02610779]
[70.57013702 251.54817200]
[66.81383514 266.07022095]
[63.05753326 280.59228516]
[59.30123520 295.11434937]
[56.63543701 309.87557983]
[55.07491684 324.79415894]
[53.51439285 339.71276855]
[59.77400970 354.24301147]
[50.75461197 366.09628296]
[49.19409180 381.01489258]
[47.63356781 395.93347168]
[46.07304382 410.85208130]
[60.05052948 416.57980347]
[71.84728241 426.01446533]
[80.50700378 438.39129639]
[85.32767487 452.70693970]
[85.91851807 467.80090332]
[82.23162842 482.44958496]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 204]
[15 203]
[16 202]
[17 201]
[19 199]
[20 198]
[21 197]
[32 196]
[33 195]
[34 194]
[35 193]
[36 192]
[37 190]
[38 189]
[39 188]
[44 183]
[45 182]
[46 181]
[47 156]
[48 155]
[49 154]
[50 153]
[51 152]
[52 136]
[53 135]
[54 134]
[55 132]
[56 131]
[60 130]
[61 129]
[62 128]
[63 127]
[64 126]
[65 125]
[67 124]
[68 123]
[69 122]
[70 121]
[71 120]
[72 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
