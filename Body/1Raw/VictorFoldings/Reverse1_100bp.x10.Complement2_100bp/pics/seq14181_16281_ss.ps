%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGUCCCAACUAAGCCCUCCUAGGAUAACCACGCCCCCGAAACAUACUAAUACCCGCAACUAAUCAUCAUCAAUGACCAACUUGUAACAAACAACCACAUxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[60.60591125 591.08367920]
[60.33306122 606.23956299]
[54.89014053 620.38702393]
[44.93441772 631.81768799]
[31.66808701 639.15118408]
[16.69312668 641.50201416]
[1.81783557 638.58624268]
[-11.16152382 630.75604248]
[-20.67762947 618.95690918]
[-25.58136749 604.61364746]
[-25.28058434 589.45831299]
[-19.81160355 575.32092285]
[-9.83483124 563.90863037]
[3.44499040 556.59960938]
[18.42425728 554.27636719]
[21.30953026 539.55645752]
[24.19480324 524.83660889]
[27.08007622 510.11669922]
[29.96534729 495.39678955]
[32.85062027 480.67691040]
[35.51641464 465.91567993]
[37.96214294 451.11642456]
[40.40787125 436.31713867]
[42.85359955 421.51788330]
[40.84276581 414.40603638]
[45.44748306 406.51715088]
[48.11328125 391.75595093]
[42.76103592 377.85620117]
[52.82772827 365.65078735]
[55.49352646 350.88955688]
[46.81633377 338.83792114]
[49.30955124 323.82998657]
[62.00925064 314.81027222]
[64.67504883 300.04904175]
[67.23088074 285.26837158]
[69.45599365 270.43435669]
[71.46000671 255.56881714]
[73.46401978 240.70329285]
[67.49645996 227.05639648]
[77.00811768 214.41365051]
[79.01213074 199.54812622]
[81.01614380 184.68260193]
[83.02015686 169.81707764]
[73.81348419 158.16491699]
[75.63407898 143.06060791]
[87.91835785 133.48280334]
[89.92237091 118.61727905]
[81.09319305 109.52336121]
[79.04158783 97.01558685]
[84.50299835 85.57763672]
[95.51965332 79.30970764]
[97.74476624 64.47566223]
[99.96988678 49.64162064]
[94.36532593 34.84637070]
[103.90499878 23.40767097]
[106.13011169 8.57362652]
[97.00759888 -4.05243444]
[99.47550201 -19.06456566]
[111.56874084 -27.68368340]
[113.79385376 -42.51772690]
[103.88469696 -31.25679588]
[90.10488892 -25.33084869]
[75.11508942 -25.88409233]
[61.80960846 -32.80970383]
[52.75751495 -44.77045441]
[49.70662689 -59.45691681]
[53.24602890 -74.03335571]
[62.69231033 -85.68529510]
[76.22154999 -92.16293335]
[91.22145844 -92.21553040]
[104.79578400 -85.83293152]
[114.32354736 -74.24752045]
[117.96511841 -59.69498444]
[122.79111481 -73.89743805]
[127.61711121 -88.09989166]
[127.41509247 -97.23209381]
[132.62213135 -102.47694397]
[137.65904236 -116.60597992]
[142.69596863 -130.73500061]
[146.56027222 -145.22869873]
[149.22605896 -159.98991394]
[144.06449890 -174.94548035]
[153.94050598 -186.09507751]
[156.60630798 -200.85629272]
[147.86375427 -213.74836731]
[150.77754211 -228.68035889]
[163.12203979 -236.93559265]
[165.78782654 -251.69682312]
[168.45362854 -266.45803833]
[161.82673645 -283.63842773]
[173.67652893 -296.58251953]
[176.12225342 -311.38180542]
[178.56797791 -326.18106079]
[181.01370239 -340.98034668]
[183.12832642 -355.83053589]
[184.91079712 -370.72424316]
[186.69326782 -385.61798096]
[188.47572327 -400.51168823]
[174.46472168 -406.11117554]
[162.38096619 -415.14694214]
[153.04835510 -427.00296021]
[147.10319519 -440.87081909]
[144.95083618 -455.80499268]
[146.73803711 -470.78726196]
[152.34292603 -484.79611206]
[161.38337708 -496.87637329]
[173.24298096 -506.20440674]
[187.11312866 -512.14422607]
[202.04814148 -514.29077148]
[217.02972412 -512.49780273]
[231.03639221 -506.88751221]
[243.11315918 -497.84240723]
[252.43661499 -485.97918701]
[258.37106323 -472.10675049]
[260.51190186 -457.17089844]
[258.71313477 -442.19003296]
[253.09741211 -428.18551636]
[244.04765320 -416.11224365]
[232.18084717 -406.79336548]
[218.30610657 -400.86428833]
[203.36944580 -398.72921753]
[201.58697510 -383.83551025]
[199.80451965 -368.94177246]
[198.02204895 -354.04806519]
[199.90217590 -351.06521606]
[200.43095398 -347.02349854]
[199.12641907 -342.56799316]
[195.81297302 -338.53460693]
[193.36724854 -323.73535156]
[190.92152405 -308.93606567]
[188.47579956 -294.13681030]
[195.26296997 -284.12374878]
[193.34651184 -271.77423096]
[183.21484375 -263.79223633]
[180.54904175 -249.03102112]
[177.88325500 -234.26980591]
[186.56044006 -222.21817017]
[184.06723022 -207.21022034]
[171.36752319 -198.19049072]
[168.70173645 -183.42927551]
[174.05397034 -169.52954102]
[163.98727417 -157.32412720]
[161.32148743 -142.56291199]
[171.84635925 -153.25061035]
[186.10409546 -157.91076660]
[200.90946960 -155.50228882]
[212.95492554 -146.56321716]
[219.54949951 -133.09059143]
[219.21990967 -118.09421539]
[212.03982544 -104.92431641]
[199.61326599 -96.52308655]
[184.71636963 -94.76737976]
[170.67713928 -100.04943085]
[160.63197327 -111.18920898]
[156.82499695 -125.69808960]
[151.78807068 -111.56906128]
[146.75115967 -97.44003296]
[141.81956482 -83.27389526]
[136.99356079 -69.07144165]
[132.16757202 -54.86898422]
[128.62789917 -40.29261017]
[126.40277863 -25.45856667]
[135.43495178 -13.67062378]
[133.38967896 1.40490377]
[120.96415710 10.79874420]
[118.73904419 25.63278770]
[124.50276184 39.36700821]
[114.80393219 51.86673737]
[112.57881165 66.70078278]
[110.35369873 81.53482819]
[120.46397400 94.57898712]
[118.13738251 110.91773224]
[104.78790283 120.62129211]
[102.78388214 135.48681641]
[112.09337616 147.97566223]
[109.84925842 163.02287292]
[97.88568115 171.82109070]
[95.88166809 186.68661499]
[93.87765503 201.55213928]
[91.87364197 216.41766357]
[97.69786072 231.12783813]
[88.32955170 242.70730591]
[86.32553864 257.57281494]
[84.32152557 272.43835449]
[86.47528076 278.68917847]
[85.32205200 284.25399780]
[82.03015137 287.71411133]
[83.71846008 296.69116211]
[79.43626404 302.71484375]
[76.77046967 317.47604370]
[85.51301575 330.36813354]
[82.59924316 345.30014038]
[70.25474548 353.55535889]
[67.58894348 368.31658936]
[72.75051880 383.27212524]
[62.87449646 394.42172241]
[60.20870209 409.18295288]
[57.65287018 423.96359253]
[55.20714188 438.76287842]
[52.76141357 453.56213379]
[50.31568527 468.36141968]
[52.28237534 474.67361450]
[50.96397400 480.20159912]
[47.57051086 483.56219482]
[44.68523788 498.28207397]
[41.79996490 513.00195312]
[38.91469574 527.72186279]
[36.02942276 542.44177246]
[33.14414978 557.16162109]
[46.13791656 564.96789551]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 209]
[16 208]
[17 207]
[18 206]
[19 205]
[20 204]
[21 201]
[22 200]
[23 199]
[24 198]
[26 197]
[27 196]
[29 194]
[30 193]
[33 190]
[34 189]
[35 187]
[36 184]
[37 183]
[38 182]
[40 180]
[41 179]
[42 178]
[43 177]
[46 174]
[47 173]
[51 170]
[52 169]
[53 168]
[55 166]
[56 165]
[59 162]
[60 161]
[73 160]
[74 159]
[75 158]
[77 157]
[78 156]
[79 155]
[80 143]
[81 142]
[83 140]
[84 139]
[87 136]
[88 135]
[89 134]
[91 131]
[92 130]
[93 129]
[94 128]
[95 124]
[96 123]
[97 122]
[98 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
