%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGCGUCCGCCGUUUCUGAUCAUACCGUUAUCCGUGUUAUAACCGAUUCUCCCUCACCCACAACUCCCAAUACUCUCAUCGAUAUUACUUGUCGCUAUxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[-33.22989273 608.79644775]
[-25.66942596 621.82666016]
[-21.19851303 636.21276855]
[-20.04141426 651.23303223]
[-22.25617027 666.13409424]
[-27.73168945 680.16857910]
[-36.19332123 692.63250732]
[-47.21663284 702.90063477]
[-60.24869919 710.45794678]
[-74.63584137 714.92535400]
[-89.65640259 716.07879639]
[-104.55696106 713.86041260]
[-118.59010315 708.38153076]
[-131.05194092 699.91687012]
[-141.31739807 688.89105225]
[-148.87155151 675.85717773]
[-153.33549500 661.46893311]
[-154.48530579 646.44812012]
[-152.26333618 631.54809570]
[-146.78100586 617.51629639]
[-138.31333923 605.05645752]
[-127.28505707 594.79370117]
[-114.24932861 587.24273682]
[-99.86002350 582.78222656]
[-84.83890533 581.63604736]
[-69.93942261 583.86163330]
[-64.48406219 569.88885498]
[-59.02870941 555.91607666]
[-61.60736847 541.24639893]
[-49.38092804 531.20520020]
[-43.92557144 517.23242188]
[-38.47021484 503.25961304]
[-33.01485825 489.28683472]
[-27.55950165 475.31402588]
[-22.10414505 461.34124756]
[-36.24095154 466.35629272]
[-49.84207916 460.03100586]
[-55.11618805 445.98876953]
[-49.04202271 432.27365112]
[-35.09914780 426.74227905]
[-21.27467155 432.56326294]
[-15.48788834 446.40112305]
[-8.80769444 432.97076416]
[-2.12749934 419.54037476]
[4.55269527 406.11001587]
[11.03219128 392.58166504]
[17.30955124 378.95834351]
[23.58691216 365.33502197]
[29.04226875 351.36221313]
[33.65628052 337.08950806]
[38.27028656 322.81677246]
[42.88429642 308.54403687]
[47.49830627 294.27130127]
[51.47040176 279.80676270]
[54.79266357 265.17932129]
[58.11492157 250.55184937]
[61.43717957 235.92439270]
[64.75943756 221.29692078]
[68.08170319 206.66946411]
[71.40396118 192.04200745]
[63.27355957 179.61492920]
[66.43442535 164.73327637]
[79.52421570 156.28962708]
[82.84647369 141.66217041]
[86.16873169 127.03470612]
[89.49098969 112.40724945]
[83.88928986 102.19636536]
[86.55328369 90.85861969]
[96.11619568 84.21091461]
[99.65586853 69.63454437]
[103.19554138 55.05816650]
[105.19955444 40.19263840]
[105.64615631 25.19928932]
[98.32317352 11.17486668]
[106.43598175 -1.31639445]
[106.88258362 -16.30974388]
[104.68962097 -20.05739594]
[103.88427734 -23.91951180]
[104.33215332 -27.44581604]
[105.76640320 -30.27592659]
[107.82856750 -32.17477798]
[109.16680145 -47.11496353]
[110.50503540 -62.05514908]
[111.84326935 -76.99533081]
[112.95891571 -91.95378876]
[113.85173035 -106.92719269]
[114.74454498 -121.90059662]
[115.63736725 -136.87400818]
[116.08396912 -151.86735535]
[116.08396912 -166.86735535]
[116.08396912 -181.86735535]
[116.08396912 -196.86735535]
[106.50928497 -212.59652710]
[115.87001038 -227.44050598]
[115.64668274 -242.43884277]
[107.70477295 -256.12228394]
[115.25172424 -268.96334839]
[115.02839661 -283.96170044]
[101.00888062 -289.90921021]
[90.62522888 -301.04919434]
[85.67647552 -315.45162964]
[87.02002716 -330.62115479]
[94.42310333 -343.92959595]
[106.60307312 -353.07116699]
[121.44969177 -356.46200562]
[136.39068604 -353.51470947]
[148.83743286 -344.73983765]
[156.63346863 -331.65771484]
[158.42807007 -316.53491211]
[153.91033936 -301.99151611]
[143.86296082 -290.54730225]
[130.02673340 -284.18502808]
[130.25006104 -269.18667603]
[138.17599487 -256.57601929]
[130.64501953 -242.66217041]
[130.86834717 -227.66383362]
[139.32699585 -219.01641846]
[139.63578796 -206.52287292]
[131.08396912 -196.86735535]
[131.08396912 -181.86735535]
[131.08396912 -166.86735535]
[131.08396912 -151.86735535]
[132.96850586 -149.79209900]
[134.14454651 -146.84532166]
[134.27603149 -143.29312134]
[133.12933350 -139.51824951]
[130.61076355 -135.98118591]
[129.71795654 -121.00778198]
[128.82513428 -106.03437805]
[127.93231964 -91.06097412]
[130.37611389 -86.95768738]
[130.26817322 -81.27566528]
[126.78345490 -75.65709686]
[125.44522095 -60.71691513]
[124.10698700 -45.77672958]
[122.76875305 -30.83654404]
[121.87593842 -15.86313820]
[121.42932892 -0.86978859]
[128.78425598 12.08220959]
[120.63951111 25.64589500]
[120.19290161 40.63924408]
[128.19355774 27.95108032]
[140.39620972 19.22783089]
[154.99069214 15.76353836]
[169.81198120 18.07211113]
[182.66142273 25.81108665]
[191.63288879 37.83243179]
[195.39552307 52.35285187]
[193.39114380 67.21833038]
[185.91709900 80.22366333]
[174.08210754 89.43958282]
[159.64184570 93.49896240]
[144.73840332 91.79962158]
[131.58265686 84.59364319]
[122.12615204 72.94999695]
[117.77191162 58.59783936]
[114.23223877 73.17421722]
[110.69256592 87.75058746]
[115.82865906 103.71920776]
[104.11845398 115.72950745]
[100.79619598 130.35696411]
[97.47393036 144.98442078]
[94.15167236 159.61189270]
[102.30983734 172.88148499]
[98.73222351 187.66847229]
[86.03141785 195.36427307]
[82.70915985 209.99172974]
[79.38690186 224.61918640]
[76.06464386 239.24664307]
[72.74238586 253.87411499]
[69.42012024 268.50155640]
[66.09786224 283.12902832]
[79.33432770 276.07238770]
[93.72327423 280.31008911]
[101.02207184 293.41458130]
[97.04962921 307.87902832]
[84.08154297 315.41751099]
[69.54652405 311.71166992]
[61.77104187 298.88531494]
[57.15703201 313.15805054]
[52.54302216 327.43075562]
[47.92901230 341.70349121]
[43.31500244 355.97622681]
[56.18433380 348.27038574]
[71.13501740 349.48568726]
[82.59082794 359.16888428]
[86.27901459 373.70840454]
[80.82398987 387.68133545]
[68.26033783 395.87612915]
[53.27399063 395.23632812]
[41.45448303 386.00054932]
[37.21022797 371.61239624]
[30.93286705 385.23568726]
[24.65550804 398.85900879]
[24.88048172 405.46664429]
[22.14529419 410.44821167]
[17.98307037 412.79019165]
[11.30287647 426.22058105]
[4.62268209 439.65093994]
[-2.05751252 453.08132935]
[-8.13134670 466.79660034]
[-13.58670330 480.76937866]
[-19.04206085 494.74218750]
[-24.49741745 508.71499634]
[-29.95277405 522.68780518]
[-35.40813065 536.66058350]
[-33.21967316 552.32971191]
[-45.05591202 561.37139893]
[-50.51126862 575.34423828]
[-55.96662521 589.31701660]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 210]
[27 209]
[28 208]
[30 206]
[31 205]
[32 204]
[33 203]
[34 202]
[35 201]
[42 200]
[43 199]
[44 198]
[45 197]
[46 194]
[47 193]
[48 192]
[49 183]
[50 182]
[51 181]
[52 180]
[53 179]
[54 172]
[55 171]
[56 170]
[57 169]
[58 168]
[59 167]
[60 166]
[63 163]
[64 162]
[65 161]
[66 160]
[69 158]
[70 157]
[71 156]
[72 141]
[73 140]
[75 138]
[76 137]
[81 136]
[82 135]
[83 134]
[84 133]
[85 130]
[86 129]
[87 128]
[88 127]
[89 122]
[90 121]
[91 120]
[92 119]
[94 116]
[95 115]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
