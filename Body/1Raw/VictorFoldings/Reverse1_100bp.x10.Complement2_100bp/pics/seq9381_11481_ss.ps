%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAGACUCCAUUAUUUAUCCUAAUAGGGCAUAGCUUCCGGAAAAACCUGUCCACCACACACCACCGGAACCAUACACGAAAGAGCACAAUGUAGCGxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[113.53543854 749.56652832]
[99.06951904 745.57580566]
[84.92112732 740.57458496]
[71.16076660 734.58782959]
[57.85698700 727.64532471]
[45.07606506 719.78167725]
[32.88167191 711.03607178]
[21.33456993 701.45202637]
[10.49227905 691.07739258]
[0.40881750 679.96374512]
[-8.86557865 668.16650391]
[-17.28470421 655.74444580]
[-24.80661583 642.75946045]
[-31.39383698 629.27624512]
[-37.01355362 615.36193848]
[-41.63776779 601.08593750]
[-45.24343872 586.51922607]
[-47.81260681 571.73449707]
[-49.33246994 556.80535889]
[-49.79545593 541.80621338]
[-49.19925690 526.81176758]
[-47.54684830 511.89672852]
[-44.84645844 497.13540649]
[-41.11154556 482.60131836]
[-36.36070633 468.36691284]
[-30.61762047 454.50308228]
[-23.91089439 441.07888794]
[-16.27394295 428.16122437]
[-7.74481201 415.81445312]
[1.63400543 404.10006714]
[11.81578445 393.07644653]
[22.74979973 382.79849243]
[34.38157654 373.31744385]
[46.65316772 364.68048096]
[59.50343323 356.93066406]
[72.86835480 350.10662842]
[86.68135071 344.24230957]
[100.87360382 339.36697388]
[115.37440491 335.50488281]
[130.11151123 332.67529297]
[128.32904053 317.78158569]
[126.54657745 302.88787842]
[124.76411438 287.99414062]
[122.53900146 273.16009521]
[112.66297913 262.01049805]
[117.82454681 247.05494690]
[115.15875244 232.29373169]
[112.49295807 217.53251648]
[109.82716370 202.77128601]
[107.16136932 188.01007080]
[97.40596771 180.85754395]
[95.06424713 168.58154297]
[101.92730713 157.66087341]
[99.48158264 142.86160278]
[97.03585052 128.06233215]
[94.59012604 113.26305389]
[85.86773682 102.33549500]
[90.61060333 89.18267059]
[88.16487122 74.38339996]
[85.71914673 59.58412933]
[82.28808594 44.98180771]
[77.88708496 30.64196014]
[73.48609161 16.30211258]
[69.08509064 1.96226537]
[64.68409729 -12.37758160]
[53.67570877 -19.09905815]
[50.30532074 -31.13335419]
[55.85454559 -41.88196945]
[51.66753387 -56.28575134]
[47.48052216 -70.68952942]
[36.19866562 -81.78143311]
[40.07580948 -96.16256714]
[25.23437691 -93.84735107]
[10.21872807 -93.44907379]
[-4.72456741 -94.97428131]
[-19.35012627 -98.39792633]
[-33.41778564 -103.66378784]
[-46.69654083 -110.68539429]
[-58.96833801 -119.34745789]
[-70.03166962 -129.50772095]
[-79.70486450 -140.99935913]
[-87.82907867 -153.63365173]
[-94.27090454 -167.20314026]
[-98.92456818 -181.48501587]
[-101.71363831 -196.24473572]
[-102.59233093 -211.23994446]
[-101.54620361 -226.22439575]
[-98.59244537 -240.95205688]
[-93.77955627 -255.18104553]
[-87.18656921 -268.67773438]
[-78.92174530 -281.22052002]
[-69.12079620 -292.60339355]
[-57.94466782 -302.63943481]
[-45.57688141 -311.16387939]
[-32.22052765 -318.03674316]
[-18.09493065 -323.14514160]
[-3.43204260 -326.40521240]
[11.52735615 -327.76342773]
[26.53761864 -327.19744873]
[41.35226440 -324.71661377]
[55.72802353 -320.36163330]
[69.42883301 -314.20401001]
[82.22970581 -306.34487915]
[93.92045593 -296.91329956]
[104.30909729 -286.06414795]
[113.22504425 -273.97552490]
[120.52188110 -260.84600830]
[126.07980347 -246.89115906]
[129.80752563 -232.34013367]
[131.64384460 -217.43186951]
[131.55862427 -202.41117859]
[129.55322266 -187.52471924]
[125.66060638 -173.01693726]
[119.94468689 -159.12605286]
[112.49931335 -146.08018494]
[103.44675446 -134.09353638]
[92.93566132 -123.36296844]
[81.13863373 -114.06465912]
[68.24939728 -106.35131073]
[54.47959137 -100.34957886]
[65.46196747 -90.28793335]
[61.88430405 -74.87654114]
[66.07131195 -60.47275925]
[70.25832367 -46.06897736]
[83.56230927 -34.62472153]
[79.02394104 -16.77857971]
[83.42494202 -2.43873262]
[87.82593536 11.90111446]
[92.22693634 26.24096107]
[96.62793732 40.58081055]
[102.08505249 26.60869789]
[114.16696930 17.71897507]
[129.12998962 16.66621590]
[142.33763123 23.77663231]
[149.69738770 36.84698105]
[148.92874146 51.82727432]
[140.26988220 64.07570648]
[126.40383148 69.79696655]
[111.62715149 67.21825409]
[100.51841736 57.13840103]
[102.96414948 71.93767548]
[105.40987396 86.73694611]
[114.13226318 97.66450500]
[109.38939667 110.81732941]
[111.83512878 125.61660004]
[114.28085327 140.41587830]
[116.72657776 155.21514893]
[128.73776245 169.17268372]
[121.92258453 185.34428406]
[124.58837891 200.10549927]
[127.25417328 214.86671448]
[129.91996765 229.62792969]
[132.58576965 244.38914490]
[142.65246582 256.59457397]
[137.30021667 270.49429321]
[140.22125244 273.70703125]
[141.80838013 277.31887817]
[142.09994507 280.86154175]
[141.28240967 283.92718506]
[139.65783691 286.21166992]
[141.44029236 301.10540771]
[143.22276306 315.99911499]
[145.00523376 330.89282227]
[159.99386597 330.16488647]
[174.99650574 330.49600220]
[189.93841553 331.88461304]
[204.74514771 334.32373047]
[219.34295654 337.80123901]
[233.65910339 342.29980469]
[247.62225342 347.79699707]
[261.16284180 354.26547241]
[274.21343994 361.67294312]
[286.70901489 369.98257446]
[298.58728027 379.15292358]
[309.78912354 389.13830566]
[320.25866699 399.88900757]
[329.94381714 411.35144043]
[338.79626465 423.46847534]
[346.77194214 436.17980957]
[353.83108521 449.42205811]
[359.93856812 463.12927246]
[365.06393433 477.23315430]
[369.18167114 491.66342163]
[372.27120972 506.34823608]
[374.31723022 521.21441650]
[375.30950928 536.18786621]
[375.24307251 551.19403076]
[374.11828613 566.15808105]
[371.94076538 581.00555420]
[368.72131348 595.66241455]
[364.47601318 610.05572510]
[359.22598267 624.11364746]
[352.99740601 637.76629639]
[345.82128906 650.94549561]
[337.73339844 663.58569336]
[328.77401733 675.62390137]
[318.98779297 687.00018311]
[308.42346191 697.65777588]
[297.13369751 707.54357910]
[285.17468262 716.60839844]
[272.60604858 724.80706787]
[259.49038696 732.09875488]
[245.89305115 738.44708252]
[231.88177490 743.82049561]
[217.52638245 748.19213867]
[202.89836121 751.54028320]
[188.07060242 753.84820557]
[173.11698914 755.10449219]
[158.11199951 755.30279541]
[143.13040161 754.44213867]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 163]
[41 162]
[42 161]
[43 160]
[44 155]
[46 153]
[47 152]
[48 151]
[49 150]
[50 149]
[53 147]
[54 146]
[55 145]
[56 144]
[58 142]
[59 141]
[60 140]
[61 130]
[62 129]
[63 128]
[64 127]
[65 126]
[68 124]
[69 123]
[70 122]
[72 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
