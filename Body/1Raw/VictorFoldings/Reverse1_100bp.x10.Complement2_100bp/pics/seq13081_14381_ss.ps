%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGGAUUCGUAUCACAAUCUCAAACCUAAUCACCCGAUAAAAGACGAUCCCCCACCUUCGCCUACUCAUUCUUCUAAGGACGAUGUUGAUAUCACGAACxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[105.98497772 497.17340088]
[98.88178253 510.44479370]
[89.25222015 522.01440430]
[77.49060822 531.40856934]
[64.07857513 538.24243164]
[49.56534576 542.23632812]
[34.54521561 543.22662354]
[19.63325882 541.17272949]
[5.44010496 536.15881348]
[-7.45304346 528.39019775]
[-18.51822090 518.18493652]
[-27.30231285 505.96102905]
[-33.44561768 492.21893311]
[-36.69657135 477.52145386]
[-36.92205048 462.47039795]
[-34.11281967 447.68212891]
[-28.38391685 433.76220703]
[-19.96993637 421.28060913]
[-9.21542358 410.74850464]
[3.43922901 402.59713745]
[17.47582245 397.16033936]
[32.31956482 394.66070557]
[47.36261749 395.20059204]
[50.90228653 380.62423706]
[54.44195938 366.04785156]
[57.98163223 351.47146606]
[61.52130508 336.89511108]
[65.06098175 322.31872559]
[68.60064697 307.74234009]
[72.03170776 293.14001465]
[75.35397339 278.51257324]
[77.90980530 263.73190308]
[68.53067017 252.21810913]
[70.12617493 237.08837891]
[82.26650238 227.32875061]
[84.04896545 212.43502808]
[85.83142853 197.54130554]
[87.61389923 182.64759827]
[89.39636230 167.75387573]
[91.17882538 152.86015320]
[92.96129608 137.96644592]
[93.51950836 122.97682953]
[81.29178619 114.83018494]
[76.15057373 101.06599426]
[80.04330444 86.89801788]
[91.49545288 77.69295502]
[90.82566833 62.70791245]
[79.44486237 52.07236099]
[78.97907257 36.86585999]
[89.18858337 26.08154297]
[88.51879883 11.09650326]
[87.84901428 -3.88853550]
[87.17922974 -18.87357521]
[86.50944519 -33.85861206]
[85.83966064 -48.84365082]
[77.40190887 -55.70754623]
[74.20056152 -65.87276459]
[77.06227875 -75.91063690]
[84.80997467 -82.57292938]
[84.58664703 -97.57126617]
[76.64473724 -111.25471497]
[84.19169617 -124.09577179]
[83.96836853 -139.09411621]
[76.02645874 -152.77755737]
[83.57341003 -165.61862183]
[83.35008240 -180.61695862]
[83.12675476 -195.61529541]
[82.90342712 -210.61363220]
[67.93011475 -211.64636230]
[53.09574127 -213.92842102]
[38.50434875 -217.44378662]
[24.25829315 -222.16781616]
[10.45750046 -228.06736755]
[-2.80122471 -235.10104370]
[-15.42488003 -243.21954346]
[-27.32491875 -252.36589050]
[-38.41786957 -262.47592163]
[-48.62592316 -273.47875977]
[-57.87747574 -285.29718018]
[-66.10762787 -297.84832764]
[-73.25865936 -311.04412842]
[-79.28040314 -324.79205322]
[-84.13062286 -338.99563599]
[-87.77529907 -353.55526733]
[-90.18885803 -368.36880493]
[-91.35438538 -383.33236694]
[-91.26369476 -398.34097290]
[-89.91741943 -413.28936768]
[-87.32501221 -428.07266235]
[-83.50464630 -442.58718872]
[-78.48313141 -456.73110962]
[-72.29568481 -470.40527344]
[-64.98570251 -483.51367188]
[-56.60446930 -495.96444702]
[-47.21076965 -507.67019653]
[-36.87049103 -518.54888916]
[-25.65617180 -528.52410889]
[-13.64646816 -537.52600098]
[-0.92562211 -545.49133301]
[12.41713715 -552.36425781]
[26.28821754 -558.09661865]
[40.59032440 -562.64813232]
[55.22313309 -565.98687744]
[70.08400726 -568.08953857]
[85.06870270 -568.94122314]
[100.07211304 -568.53601074]
[114.98899841 -566.87683105]
[129.71473694 -563.97521973]
[144.14601135 -559.85150146]
[158.18161011 -554.53472900]
[171.72309875 -548.06207275]
[184.67546082 -540.47900391]
[196.94786072 -531.83874512]
[208.45420837 -522.20178223]
[219.11380005 -511.63583374]
[228.85185242 -500.21493530]
[237.60008240 -488.01922607]
[245.29710388 -475.13427734]
[251.88894653 -461.65042114]
[257.32934570 -447.66226196]
[261.58016968 -433.26791382]
[264.61157227 -418.56835938]
[266.40231323 -403.66668701]
[266.93984985 -388.66744995]
[266.22036743 -373.67581177]
[264.24893188 -358.79696655]
[261.03936768 -344.13528442]
[256.61416626 -329.79357910]
[251.00442505 -315.87246704]
[244.24945068 -302.46960449]
[236.39665222 -289.67898560]
[227.50106812 -277.59033203]
[217.62513733 -266.28845215]
[206.83811951 -255.85261536]
[195.21568298 -246.35601807]
[182.83934021 -237.86526489]
[169.79591370 -230.43994141]
[156.17689514 -224.13211060]
[142.07780457 -218.98600769]
[127.59754181 -215.03776550]
[112.83769226 -212.31504822]
[97.90176392 -210.83695984]
[98.12509155 -195.83862305]
[98.34841919 -180.84028625]
[98.57174683 -165.84194946]
[106.49768066 -153.23127747]
[98.96670532 -139.31744385]
[99.19003296 -124.31909943]
[107.11596680 -111.70843506]
[99.58498383 -97.79459381]
[99.80831146 -82.79625702]
[110.91233063 -66.96629333]
[100.82469940 -49.51343536]
[101.49448395 -34.52839661]
[102.16426849 -19.54335976]
[102.83405304 -4.55832052]
[103.50383759 10.42671776]
[104.17362213 25.41175652]
[115.30455017 35.24222183]
[116.19727325 50.42964172]
[105.81070709 62.03812790]
[106.48049164 77.02317047]
[118.70821381 85.16981506]
[123.84942627 98.93400574]
[119.95669556 113.10198212]
[108.50454712 122.30704498]
[116.40086365 109.55368805]
[129.27233887 101.85141754]
[144.24345398 100.92092896]
[157.96961975 106.97010040]
[167.38436890 118.64753723]
[170.38442993 133.34446716]
[166.29957581 147.77754211]
[156.04238892 158.72241211]
[141.90432739 163.73393250]
[127.04389191 161.69253540]
[114.78092957 153.05426025]
[107.85501099 139.74890137]
[106.07254791 154.64262390]
[104.29007721 169.53634644]
[102.50761414 184.43005371]
[100.72515106 199.32377625]
[98.94268036 214.21749878]
[97.16021729 229.11120605]
[106.65461731 241.46006775]
[104.63477325 256.53903198]
[92.80352020 265.51437378]
[104.54090881 256.17446899]
[119.53858185 256.43862915]
[130.93980408 266.18603516]
[133.53210449 280.96032715]
[126.13028717 294.00692749]
[112.11839294 299.36105347]
[97.90245819 294.57489014]
[89.98143005 281.83480835]
[86.65917206 296.46228027]
[87.81016541 305.52389526]
[83.17702484 311.28201294]
[79.63735199 325.85839844]
[76.09767914 340.43478394]
[72.55800629 355.01113892]
[69.01833344 369.58752441]
[65.47866058 384.16390991]
[61.93899155 398.74026489]
[75.55429077 405.15966797]
[87.59846497 414.18865967]
[97.57830811 425.45751953]
[105.08515930 438.50482178]
[109.81160736 452.79629517]
[111.56411743 467.74664307]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 204]
[24 203]
[25 202]
[26 201]
[27 200]
[28 199]
[29 198]
[30 196]
[31 195]
[32 187]
[35 184]
[36 183]
[37 182]
[38 181]
[39 180]
[40 179]
[41 178]
[42 166]
[46 162]
[47 161]
[50 158]
[51 157]
[52 156]
[53 155]
[54 154]
[55 153]
[59 151]
[60 150]
[62 148]
[63 147]
[65 145]
[66 144]
[67 143]
[68 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
