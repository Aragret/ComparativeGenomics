%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[47.42602921 537.50256348]
[31.04323769 536.77032471]
[23.72716331 522.09356689]
[33.00395584 508.57049561]
[25.84267426 495.51043701]
[34.18846893 482.06951904]
[34.85825348 467.08447266]
[35.52803802 452.09942627]
[36.19782257 437.11441040]
[24.45509911 427.99044800]
[20.28730774 413.53039551]
[25.49417305 399.22158813]
[38.27584457 390.62301636]
[38.94562912 375.63800049]
[39.61541367 360.65295410]
[37.51863480 357.81820679]
[36.69072342 353.82699585]
[37.66025162 349.28680420]
[40.66452789 345.01815796]
[42.00276184 330.07797241]
[43.34099579 315.13778687]
[44.67922974 300.19760132]
[38.10825729 286.83081055]
[47.04589462 273.77593994]
[48.38412857 258.83575439]
[49.72236252 243.89556885]
[51.06059647 228.95538330]
[42.50434113 241.27571106]
[30.11620331 249.73348999]
[15.52605438 253.21595764]
[0.65347940 251.26492310]
[-12.54477882 244.13710022]
[-22.33226204 232.77024841]
[-27.42125702 218.65989685]
[-27.14222336 203.66249084]
[-21.53186798 189.75120544]
[-11.32833195 178.75630188]
[2.12593365 172.12435913]
[17.06079102 170.72790527]
[31.51129913 174.75068665]
[43.57624817 183.66343689]
[51.66828918 196.29351807]
[54.72282028 210.98161316]
[59.33683014 196.70887756]
[58.40322495 189.37742615]
[64.12724304 182.25889587]
[68.95323944 168.05644226]
[73.77923584 153.85398865]
[78.60523224 139.65153503]
[83.43123627 125.44907379]
[88.25723267 111.24662018]
[84.56626892 94.88345337]
[97.30129242 83.96578979]
[101.91529846 69.69305420]
[94.97351837 55.74853897]
[99.85610199 41.33968735]
[113.19284058 34.80769348]
[117.80684662 20.53496170]
[114.68962860 5.02388477]
[125.96670532 -4.70631409]
[130.58071899 -18.97904778]
[135.19473267 -33.25178146]
[139.59571838 -47.59162903]
[143.78273010 -61.99541092]
[147.86239624 -76.42996216]
[151.83450317 -90.89448547]
[155.80659485 -105.35900879]
[151.99987793 -120.71542358]
[162.83123779 -130.93946838]
[166.80332947 -145.40399170]
[170.77542114 -159.86851501]
[166.96870422 -175.22492981]
[177.80006409 -185.44897461]
[181.77215576 -199.91349792]
[185.74424744 -214.37802124]
[189.71635437 -228.84254456]
[193.68844604 -243.30706787]
[179.59309387 -248.46270752]
[165.97164917 -254.76473999]
[152.91714478 -262.17010498]
[140.51875305 -270.62820435]
[128.86119080 -280.08129883]
[118.02407837 -290.46475220]
[108.08144379 -301.70770264]
[99.10121155 -313.73330688]
[91.14472961 -326.45941162]
[84.26634216 -339.79910278]
[78.51303864 -353.66125488]
[73.92412567 -367.95114136]
[70.53094482 -382.57119751]
[68.35667419 -397.42150879]
[67.41616821 -412.40066528]
[67.71585083 -427.40634155]
[69.25368500 -442.33599854]
[72.01914978 -457.08764648]
[75.99336243 -471.56057739]
[81.14917755 -485.65585327]
[87.45137024 -499.27722168]
[94.85688782 -512.33166504]
[103.31514740 -524.72991943]
[112.76836395 -536.38739014]
[123.15196228 -547.22436523]
[134.39501953 -557.16687012]
[146.42071533 -566.14697266]
[159.14692688 -574.10327148]
[172.48669434 -580.98150635]
[186.34890747 -586.73468018]
[200.63887024 -591.32342529]
[215.25895691 -594.71643066]
[230.10931396 -596.89050293]
[245.08847046 -597.83081055]
[260.09411621 -597.53094482]
[275.02377319 -595.99298096]
[289.77539062 -593.22729492]
[304.24826050 -589.25292969]
[318.34347534 -584.09692383]
[331.96478271 -577.79461670]
[345.01913452 -570.38891602]
[357.41729736 -561.93054199]
[369.07464600 -552.47717285]
[379.91149902 -542.09344482]
[389.85388184 -530.85028076]
[398.83383179 -518.82446289]
[406.79000854 -506.09814453]
[413.66806030 -492.75830078]
[419.42105103 -478.89599609]
[424.00961304 -464.60598755]
[427.40243530 -449.98587036]
[429.57635498 -435.13549805]
[430.51651001 -420.15631104]
[430.21646118 -405.15066528]
[428.67828369 -390.22103882]
[425.91247559 -375.46945190]
[421.93789673 -360.99661255]
[416.78176880 -346.90145874]
[410.47924805 -333.28024292]
[403.07342529 -320.22598267]
[394.61486816 -307.82791138]
[385.16137695 -296.17068481]
[374.77749634 -285.33395386]
[363.53421021 -275.39172363]
[351.50830078 -266.41189575]
[338.78189087 -258.45587158]
[325.44195557 -251.57797241]
[311.57962036 -245.82516479]
[297.28955078 -241.23675537]
[282.66937256 -237.84410095]
[267.81896973 -235.67036438]
[252.83978271 -234.73039246]
[237.83413696 -235.03060913]
[222.90454102 -236.56896973]
[208.15296936 -239.33497620]
[204.18087769 -224.87045288]
[200.20878601 -210.40592957]
[196.23667908 -195.94140625]
[192.26458740 -181.47688293]
[196.35540771 -167.15505981]
[185.23994446 -155.89642334]
[181.26785278 -141.43190002]
[177.29576111 -126.96736908]
[181.38658142 -112.64555359]
[170.27111816 -101.38691711]
[166.29902649 -86.92239380]
[162.32691956 -72.45787048]
[163.58697510 -65.17541504]
[158.18652344 -57.80839920]
[153.99951172 -43.40461731]
[155.47378540 -38.86198044]
[154.11006165 -33.34498215]
[149.46745300 -28.63777161]
[144.85345459 -14.36503792]
[140.23944092 -0.09230477]
[143.68669128 14.39789104]
[132.07958984 25.14897156]
[127.46557617 39.42170334]
[134.45486450 52.52458191]
[129.97892761 67.06488800]
[116.18803406 74.30706024]
[111.57402039 88.57979584]
[116.24241638 99.24972534]
[112.57754517 110.30458069]
[102.45968628 116.07261658]
[97.63368988 130.27507019]
[92.80769348 144.47752380]
[87.98169708 158.67997742]
[83.15569305 172.88244629]
[78.32969666 187.08489990]
[73.60956573 201.32289124]
[68.99555206 215.59561157]
[66.00077820 230.29362488]
[64.66254425 245.23381042]
[63.32431030 260.17398071]
[61.98607635 275.11416626]
[68.46133423 289.54962158]
[59.61941528 301.53582764]
[58.28118134 316.47601318]
[56.94294739 331.41619873]
[55.60471344 346.35638428]
[54.60045242 361.32272339]
[53.93066788 376.30776978]
[53.26088333 391.29281616]
[65.22445679 400.99740601]
[69.13399506 415.71368408]
[63.69276047 429.74426270]
[51.18286133 437.78417969]
[50.51307678 452.76922607]
[49.84329224 467.75427246]
[49.17350769 482.73928833]
[56.28688049 496.87118530]
[47.98899460 509.24029541]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 210]
[6 208]
[7 207]
[8 206]
[9 205]
[13 201]
[14 200]
[15 199]
[19 198]
[20 197]
[21 196]
[22 195]
[24 193]
[25 192]
[26 191]
[27 190]
[43 189]
[44 188]
[46 187]
[47 186]
[48 185]
[49 184]
[50 183]
[51 182]
[53 179]
[54 178]
[57 175]
[58 174]
[60 172]
[61 171]
[62 170]
[63 167]
[64 166]
[65 164]
[66 163]
[67 162]
[69 160]
[70 159]
[71 158]
[73 156]
[74 155]
[75 154]
[76 153]
[77 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
