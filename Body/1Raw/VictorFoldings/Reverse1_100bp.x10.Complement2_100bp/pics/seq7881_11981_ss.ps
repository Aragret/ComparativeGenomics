%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[158.47950745 467.69900513]
[171.06285095 459.43142700]
[165.60749817 445.45861816]
[160.15213013 431.48583984]
[154.69677734 417.51303101]
[142.86053467 408.47131348]
[145.04899597 392.80218506]
[139.59364319 378.82937622]
[136.22033691 393.44515991]
[126.51131439 404.87908936]
[112.63558197 410.57681274]
[97.69301605 409.26544189]
[85.02182007 401.23791504]
[77.45278168 388.28765869]
[76.67684174 373.30773926]
[82.86734009 359.64471436]
[94.64130402 350.35098267]
[109.36840820 347.50274658]
[123.75857544 351.73632812]
[134.59701538 362.10592651]
[131.49290466 347.43063354]
[128.38879395 332.75534058]
[125.28468323 318.08001709]
[115.08107758 307.22940063]
[119.79507446 292.12680054]
[116.69096375 277.45150757]
[113.58685303 262.77621460]
[99.93346405 256.88357544]
[92.27738190 243.92794800]
[93.73513031 228.77116394]
[103.95629883 217.24578857]
[100.85218811 202.57049561]
[97.74807739 187.89518738]
[94.64396667 173.21989441]
[91.53985596 158.54458618]
[87.43173218 172.97106934]
[79.11890411 185.45693970]
[67.39369202 194.81211853]
[53.37366867 200.14492798]
[38.39513397 200.94709778]
[23.88574600 197.14215088]
[11.22844601 189.09274292]
[1.62964785 177.56613159]
[-3.99575138 163.66091919]
[-5.11157465 148.70246887]
[-1.61146927 134.11654663]
[6.17095757 121.29337311]
[17.49393463 111.45516968]
[31.27822685 105.53965759]
[46.21000290 104.11066437]
[60.86606598 107.30438995]
[73.84948730 114.81642914]
[83.92276764 125.93078613]
[90.12610626 139.58920288]
[91.01892090 124.61579895]
[91.91173553 109.64239502]
[92.46994781 94.65278625]
[92.69327545 79.65444946]
[92.91660309 64.65611267]
[93.13993073 49.65777206]
[93.36325836 34.65943527]
[93.58658600 19.66109657]
[86.05560303 5.74725771]
[93.98153687 -6.86340666]
[94.20486450 -21.86174393]
[94.42819214 -36.86008072]
[94.65151978 -51.85841751]
[86.60977173 -39.19625854]
[74.15835571 -30.83192062]
[59.39554596 -28.17494202]
[44.80914307 -31.67306709]
[32.85721207 -40.73680496]
[25.55386162 -53.83875275]
[24.12983322 -68.77100372]
[28.82510185 -83.01721191]
[38.84843445 -94.17664337]
[52.51071930 -100.36872864]
[67.50962067 -100.55000305]
[81.31756592 -94.68991089]
[91.60767365 -83.77599335]
[96.64609528 -69.64577484]
[99.75020599 -84.32107544]
[102.85431671 -98.99638367]
[105.95842743 -113.67168427]
[108.62422180 -128.43290710]
[110.84934235 -143.26693726]
[113.07445526 -158.10098267]
[115.29957581 -172.93502808]
[117.52468872 -187.76907349]
[119.74980927 -202.60311890]
[121.53227234 -217.49684143]
[122.87050629 -232.43702698]
[124.20874023 -247.37721252]
[125.54697418 -262.31738281]
[126.88520813 -277.25756836]
[120.40995789 -291.69299316]
[129.25187683 -303.67922974]
[130.59010315 -318.61941528]
[131.92834473 -333.55960083]
[118.00807953 -339.48257446]
[106.60075378 -349.41876221]
[98.82392883 -362.39474487]
[95.43951416 -377.13928223]
[96.77906799 -392.20782471]
[102.71135712 -406.12411499]
[112.65519714 -417.52478027]
[125.63639069 -425.29290771]
[140.38317871 -428.66741943]
[155.45082092 -427.31777954]
[169.36312866 -421.37615967]
[180.75712585 -411.42468262]
[188.51655579 -398.43829346]
[191.88121033 -383.68923950]
[190.52145386 -368.62252808]
[184.57052612 -354.71420288]
[174.61141968 -343.32687378]
[161.61982727 -335.57614136]
[146.86853027 -332.22137451]
[145.53028870 -317.28118896]
[144.19206238 -302.34100342]
[150.76303101 -288.97418213]
[141.82539368 -275.91934204]
[140.48716736 -260.97915649]
[139.14892578 -246.03897095]
[137.81069946 -231.09878540]
[136.47245789 -216.15859985]
[138.16433716 -213.92349243]
[139.07278442 -210.88352966]
[138.88682556 -207.33377075]
[137.40794373 -203.67625427]
[134.58384705 -200.37800598]
[132.35873413 -185.54396057]
[130.13362122 -170.70991516]
[127.90850067 -155.87586975]
[125.68338776 -141.04182434]
[123.45826721 -126.20777893]
[125.01409912 -123.87593079]
[125.74000549 -120.78730011]
[125.34309387 -117.25489044]
[123.64912415 -113.69189453]
[120.63372803 -110.56757355]
[117.52961731 -95.89227295]
[114.42550659 -81.21696472]
[111.32139587 -66.54166412]
[109.64985657 -51.63508987]
[109.42652893 -36.63675308]
[109.20320129 -21.63841629]
[108.97987366 -6.64007902]
[116.52682495 6.20097923]
[108.58492279 19.88442421]
[108.36159515 34.88276291]
[108.13826752 49.88109970]
[107.91493988 64.87944031]
[107.69161224 79.87777710]
[107.46828461 94.87611389]
[109.73503113 97.99607849]
[110.61554718 102.10005188]
[109.70118713 106.54650879]
[106.88513947 110.53520966]
[105.99232483 125.50861359]
[105.09951019 140.48202515]
[106.21515656 155.44047546]
[109.31926727 170.11578369]
[112.42337799 184.79107666]
[115.52748871 199.46638489]
[118.63159943 214.14167786]
[132.64421082 220.54113770]
[140.11442566 233.80949402]
[138.36009216 248.75559998]
[128.26216125 259.67208862]
[131.36627197 274.34738159]
[134.47038269 289.02270508]
[144.89601135 300.92297363]
[139.95999146 314.97592163]
[143.06410217 329.65121460]
[146.16821289 344.32650757]
[149.27232361 359.00183105]
[153.56643677 373.37402344]
[159.02180481 387.34683228]
[171.24822998 397.38796997]
[168.66957092 412.05767822]
[174.12493896 426.03045654]
[179.58029175 440.00326538]
[185.03564453 453.97607422]
[199.89204407 451.53045654]
[214.93225098 452.22747803]
[229.49877930 456.03668213]
[242.95481873 462.79156494]
[254.71215820 472.19680786]
[264.25680542 483.84127808]
[271.17150879 497.21591187]
[275.15399170 511.73602295]
[276.03015137 526.76684570]
[273.76168823 541.65130615]
[268.44775391 555.73876953]
[260.32067871 568.41333008]
[249.73573303 579.12091064]
[237.15563965 587.39343262]
[223.13035583 592.86932373]
[208.27299500 595.30908203]
[193.23306274 594.60614014]
[178.66802979 590.79119873]
[165.21464539 584.03100586]
[153.46101379 574.62115479]
[143.92094421 562.97296143]
[137.01150513 549.59558105]
[133.03474426 535.07391357]
[132.16448975 520.04272461]
[134.43881226 505.15914917]
[139.75828552 491.07379150]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 184]
[3 183]
[4 182]
[5 181]
[7 179]
[8 178]
[20 177]
[21 176]
[22 175]
[23 174]
[25 172]
[26 171]
[27 170]
[31 166]
[32 165]
[33 164]
[34 163]
[35 162]
[54 161]
[55 160]
[56 159]
[57 155]
[58 154]
[59 153]
[60 152]
[61 151]
[62 150]
[64 148]
[65 147]
[66 146]
[67 145]
[81 144]
[82 143]
[83 142]
[84 141]
[85 136]
[86 135]
[87 134]
[88 133]
[89 132]
[90 131]
[91 126]
[92 125]
[93 124]
[94 123]
[95 122]
[97 120]
[98 119]
[99 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
