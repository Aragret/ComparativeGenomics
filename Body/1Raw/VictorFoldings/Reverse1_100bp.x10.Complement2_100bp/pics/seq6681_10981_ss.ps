%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[206.85150146 395.62988281]
[208.38082886 380.69717407]
[211.28147888 365.96926880]
[215.52868652 351.57183838]
[221.08621216 337.62771606]
[227.90664673 324.25588989]
[235.93179321 311.57040405]
[245.09318542 299.67950439]
[255.31266785 288.68463135]
[245.31449890 277.50265503]
[235.31631470 266.32067871]
[228.51455688 263.42968750]
[225.25404358 254.89700317]
[215.42346191 243.56741333]
[205.59289551 232.23780823]
[195.76231384 220.90821838]
[185.93173218 209.57862854]
[176.10115051 198.24903870]
[161.27189636 197.45596313]
[151.14089966 186.10618591]
[152.07327271 170.55728149]
[142.24269104 159.22769165]
[132.41212463 147.89810181]
[122.58153534 136.56851196]
[112.75095367 125.23891449]
[102.75278473 114.05693817]
[89.46533203 109.70547485]
[86.21533966 96.10660553]
[71.17429352 91.19971466]
[68.24114227 76.59677124]
[53.20009995 71.68988037]
[50.26694870 57.08693695]
[40.10340118 46.05506134]
[22.61447525 45.65918350]
[11.05055428 32.98674774]
[12.20666599 16.20872116]
[1.87999785 5.32938719]
[-8.44667053 -5.54994726]
[-18.77334023 -16.42928123]
[-29.26083946 -27.15366173]
[-39.90684891 -37.72071075]
[-50.55285645 -48.28775787]
[-61.19886780 -58.85480499]
[-72.64888000 -49.15023804]
[-84.89076233 -40.46590042]
[-97.83388519 -32.86609268]
[-111.38241577 -26.40707970]
[-125.43603516 -21.13668442]
[-139.89071655 -17.09392738]
[-154.63940430 -14.30873966]
[-169.57293701 -12.80174255]
[-184.58074951 -12.58409214]
[-199.55169678 -13.65740204]
[-214.37496948 -16.01372528]
[-228.94079590 -19.63561440]
[-243.14134216 -24.49625397]
[-256.87145996 -30.55965996]
[-270.02954102 -37.78093719]
[-282.51809692 -46.10662079]
[-294.24472046 -55.47507095]
[-305.12255859 -65.81692505]
[-315.07110596 -77.05561829]
[-324.01666260 -89.10793304]
[-331.89303589 -101.88464355]
[-338.64187622 -115.29115295]
[-344.21325684 -129.22819519]
[-348.56588745 -143.59260559]
[-351.66757202 -158.27799988]
[-353.49533081 -173.17567444]
[-354.03564453 -188.17532349]
[-353.28448486 -203.16589355]
[-351.24746704 -218.03640747]
[-347.93960571 -232.67674255]
[-343.38546753 -246.97853088]
[-337.61868286 -260.83587646]
[-330.68200684 -274.14617920]
[-322.62680054 -286.81088257]
[-313.51266479 -298.73623657]
[-303.40710449 -309.83392334]
[-292.38494873 -320.02182007]
[-280.52777100 -329.22448730]
[-267.92337036 -337.37377930]
[-254.66508484 -344.40933228]
[-240.85105896 -350.27911377]
[-226.58357239 -354.93960571]
[-211.96826172 -358.35635376]
[-197.11332703 -360.50402832]
[-182.12876892 -361.36676025]
[-167.12551880 -360.93811035]
[-152.21464539 -359.22131348]
[-137.50656128 -356.22903442]
[-123.11015320 -351.98345947]
[-109.13201904 -346.51599121]
[-95.67563629 -339.86712646]
[-82.84064484 -332.08612061]
[-70.72206879 -323.23052979]
[-59.40962982 -313.36593628]
[-48.98708344 -302.56536865]
[-39.53159332 -290.90881348]
[-31.11316681 -278.48257446]
[-23.79413605 -265.37863159]
[-17.62868500 -251.69403076]
[-12.66246319 -237.53005981]
[-8.93223953 -222.99159241]
[-6.46563148 -208.18627930]
[-5.28090096 -193.22372437]
[-5.38681936 -178.21472168]
[-6.78260326 -163.27038574]
[-9.45791721 -148.50135803]
[-13.39295578 -134.01699829]
[-18.55858231 -119.92452240]
[-24.91655540 -106.32828522]
[-32.41979599 -93.32894897]
[-41.01276016 -81.02275085]
[-50.63182068 -69.50081635]
[-39.98580933 -58.93376541]
[-29.33980179 -48.36671829]
[-18.69379234 -37.79967117]
[-13.99937534 -36.92132568]
[-9.80689049 -33.08464813]
[-7.89400482 -26.75595093]
[2.43266368 -15.87661552]
[12.75933266 -4.99728155]
[23.08600044 5.88205290]
[35.88714218 4.41224861]
[47.36889648 10.67733955]
[53.23212051 22.58670807]
[51.13528061 35.89151382]
[61.29882812 46.92339325]
[75.61290741 51.04121017]
[79.27301788 66.43322754]
[93.58709717 70.55104828]
[97.24721527 85.94306183]
[110.53466797 90.29452515]
[113.78466034 103.89339447]
[119.97109222 106.22570038]
[123.51847076 110.66564178]
[124.08055115 115.40833282]
[133.91113281 126.73793030]
[143.74171448 138.06752014]
[153.57229614 149.39710999]
[163.40287781 160.72669983]
[178.92793274 161.99563599]
[188.73614502 173.62550354]
[187.43074036 188.41845703]
[197.26132202 199.74804688]
[207.09190369 211.07763672]
[216.92248535 222.40722656]
[226.75306702 233.73683167]
[236.58364868 245.06642151]
[246.49829102 256.32250977]
[256.49645996 267.50448608]
[266.49462891 278.68646240]
[278.55984497 269.75585938]
[291.39758301 261.97659302]
[304.89834595 255.41505432]
[318.94696045 250.12721252]
[333.42355347 246.15817261]
[348.20458984 243.54182434]
[363.16397095 242.30046082]
[378.17410278 242.44468689]
[393.10690308 243.97328186]
[407.83493042 246.87318420]
[422.23257446 251.11967468]
[436.17697144 256.67651367]
[449.54916382 263.49627686]
[462.23504639 271.52078247]
[474.12640381 280.68157959]
[485.12176514 290.90051270]
[495.12734985 302.09039307]
[504.05773926 314.15573120]
[511.83679199 326.99359131]
[518.39813232 340.49447632]
[523.68572998 354.54318237]
[527.65454102 369.01983643]
[530.27062988 383.80090332]
[531.51171875 398.76034546]
[531.36724854 413.77044678]
[529.83843994 428.70321655]
[526.93829346 443.43121338]
[522.69152832 457.82876587]
[517.13446045 471.77307129]
[510.31448364 485.14517212]
[502.28976440 497.83093262]
[493.12878418 509.72210693]
[482.90966797 520.71734619]
[471.71963501 530.72271729]
[459.65411377 539.65289307]
[446.81613159 547.43176270]
[433.31512451 553.99285889]
[419.26635742 559.28021240]
[404.78964233 563.24877930]
[390.00851440 565.86462402]
[375.04907227 567.10546875]
[360.03894043 566.96075439]
[345.10620117 565.43164062]
[330.37826538 562.53125000]
[315.98077393 558.28430176]
[302.03656006 552.72698975]
[288.66458130 545.90679932]
[275.97897339 537.88183594]
[264.08792114 528.72064209]
[253.09288025 518.50134277]
[243.08769226 507.31115723]
[234.15768433 495.24551392]
[226.37907410 482.40737915]
[219.81820679 468.90628052]
[214.53105164 454.85742188]
[210.56274414 440.38064575]
[207.94712830 425.59945679]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 153]
[10 152]
[11 151]
[13 150]
[14 149]
[15 148]
[16 147]
[17 146]
[18 145]
[21 142]
[22 141]
[23 140]
[24 139]
[25 138]
[26 135]
[28 133]
[30 131]
[32 129]
[33 128]
[36 124]
[37 123]
[38 122]
[39 121]
[40 118]
[41 117]
[42 116]
[43 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
