%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUAUCACCCCCCAUUCCGCUCCAAUCGCUCCGAACGAUCUUCAGUAGUUUUUCGAUAAUCACCCUCAUCUCAAACUUCAGGAACUCUCUCCUAAUACxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[119.65319824 713.69079590]
[109.33917999 702.74871826]
[101.02288055 690.22082520]
[94.94357300 676.46765137]
[91.27617645 661.88488770]
[90.12620544 646.89202881]
[91.52674866 631.92047119]
[95.43750763 617.40106201]
[101.74597168 603.75146484]
[110.27062225 591.36444092]
[120.76618958 580.59637451]
[132.93069458 571.75714111]
[146.41415405 565.10095215]
[160.82861328 560.81939697]
[159.04614258 545.92572021]
[157.26367188 531.03198242]
[148.06880188 519.31433105]
[154.11138916 504.69250488]
[152.32891846 489.79876709]
[150.54646301 474.90505981]
[148.32133484 460.07101440]
[145.65554810 445.30981445]
[142.98974609 430.54858398]
[140.32395935 415.78735352]
[137.65815735 401.02615356]
[134.99237061 386.26492310]
[132.21675110 371.52395630]
[129.33148193 356.80407715]
[126.44620514 342.08419800]
[123.73970032 339.82427979]
[121.99333954 336.14117432]
[121.86410522 331.50042725]
[123.77622223 326.64337158]
[121.55110931 311.80932617]
[119.32598877 296.97528076]
[117.10086823 282.14123535]
[112.99992371 275.99273682]
[114.95476532 267.06994629]
[112.95075226 252.20442200]
[110.94673920 237.33889771]
[108.94272614 222.47335815]
[106.93870544 207.60783386]
[104.93469238 192.74230957]
[102.93067932 177.87678528]
[100.92666626 163.01124573]
[98.92265320 148.14572144]
[96.91864014 133.28019714]
[82.80246735 128.65852356]
[72.08288574 118.37664032]
[66.87709045 104.46527863]
[68.21323395 89.67200470]
[75.82743073 76.91856384]
[88.21582794 68.72382355]
[86.21181488 53.85829163]
[84.20780182 38.99276352]
[82.20378876 24.12723541]
[80.19977570 9.26170731]
[64.61676025 5.94366550]
[51.13470459 -2.49550319]
[41.37393188 -15.01986790]
[36.50008774 -30.10384941]
[37.08496857 -45.91804123]
[43.03948593 -60.55108261]
[53.62668228 -72.24066162]
[67.55287170 -79.58576202]
[65.32775116 -94.41980743]
[63.10263443 -109.25385284]
[51.30059433 -123.38867950]
[58.35578537 -139.45701599]
[55.91005707 -154.25628662]
[51.42330170 -162.21284485]
[53.53979492 -169.29396057]
[51.31467819 -184.12800598]
[49.08956146 -198.96205139]
[46.86444473 -213.79609680]
[44.63932800 -228.63012695]
[42.41421127 -243.46417236]
[32.71538162 -255.96391296]
[38.47909927 -269.69812012]
[36.25398254 -284.53216553]
[34.02886581 -299.36621094]
[31.80374718 -314.20025635]
[20.92461777 -303.87338257]
[6.04743099 -305.78894043]
[-1.86090255 -318.53485107]
[3.02934551 -332.71530151]
[17.11326599 -337.87701416]
[30.00779724 -330.21630859]
[28.89214897 -345.17474365]
[27.77650070 -360.13320923]
[26.66085052 -375.09167480]
[25.54520226 -390.05010986]
[24.42955399 -405.00857544]
[23.31390572 -419.96701050]
[8.66101456 -423.78430176]
[-3.95709825 -432.15460205]
[-13.17171574 -444.16998291]
[-17.98330498 -458.52709961]
[-17.86993980 -473.66864014]
[-12.84391785 -487.95211792]
[-3.45042539 -499.82818604]
[9.29160309 -508.00863647]
[24.00000763 -511.60604858]
[39.07933044 -510.23028564]
[52.89387894 -504.03051758]
[63.94515228 -493.67929077]
[71.03439331 -480.29940796]
[73.39261627 -465.34222412]
[70.76401520 -450.43017578]
[63.43372345 -437.18081665]
[52.19687653 -427.03134155]
[38.27235794 -421.08267212]
[39.38800812 -406.12420654]
[40.50365448 -391.16577148]
[41.61930466 -376.20730591]
[42.73495483 -361.24887085]
[43.85060120 -346.29040527]
[44.96625137 -331.33193970]
[46.63779068 -316.42538452]
[48.86290741 -301.59133911]
[51.08802414 -286.75729370]
[53.31314468 -271.92324829]
[62.85281754 -260.48455811]
[57.24825287 -245.68930054]
[59.47337341 -230.85525513]
[61.69849014 -216.02120972]
[63.92360687 -201.18716431]
[66.14871979 -186.35311890]
[68.37384033 -171.51907349]
[70.70932770 -156.70201111]
[73.15505219 -141.90274048]
[82.80287933 -134.60574341]
[84.96157837 -122.29624939]
[77.93667603 -111.47896576]
[80.16179657 -96.64492035]
[82.38690948 -81.81088257]
[96.33994293 -79.41791534]
[108.89084625 -72.82275391]
[118.80635834 -62.65847397]
[125.10756683 -49.90957642]
[127.16652679 -35.81664276]
[124.76882172 -21.75560570]
[118.13582611 -9.10343647]
[107.90429688 0.89672464]
[95.06530762 7.25769377]
[97.06932068 22.12322235]
[99.07333374 36.98875046]
[101.07734680 51.85427856]
[103.08135986 66.71980286]
[117.19753265 71.34147644]
[127.91711426 81.62335968]
[133.12290955 95.53472137]
[131.78677368 110.32799530]
[124.17256927 123.08143616]
[111.78417206 131.27618408]
[113.78818512 146.14170837]
[115.79219818 161.00723267]
[117.79621124 175.87275696]
[119.80022430 190.73829651]
[121.80423737 205.60382080]
[123.80825043 220.46934509]
[125.81226349 235.33488464]
[127.81627655 250.20040894]
[129.82029724 265.06594849]
[131.93492126 279.91613770]
[134.16003418 294.75018311]
[136.38514709 309.58422852]
[138.61026001 324.41827393]
[141.16609192 339.19891357]
[144.05137634 353.91879272]
[146.93664551 368.63870239]
[151.65830994 376.45812988]
[149.75358582 383.59915161]
[152.41937256 398.36035156]
[155.08517456 413.12158203]
[157.75096130 427.88278198]
[160.41676331 442.64401245]
[163.08256531 457.40521240]
[166.00358582 460.61795044]
[167.59072876 464.22979736]
[167.88229370 467.77246094]
[167.06474304 470.83810425]
[165.44017029 473.12258911]
[167.22264099 488.01632690]
[169.00511169 502.91003418]
[178.32746887 515.69299316]
[172.15739441 529.24951172]
[173.93986511 544.14324951]
[175.72232056 559.03692627]
[190.74003601 559.79608154]
[205.41340637 563.08245850]
[219.32025146 568.80151367]
[232.06042480 576.78875732]
[243.26739502 586.81433105]
[252.61869812 598.58978271]
[259.84527588 611.77630615]
[264.73922729 625.99450684]
[267.15972900 640.83526611]
[267.03710938 655.87170410]
[264.37493896 670.67102051]
[259.24981689 684.80755615]
[251.80917358 697.87451172]
[242.26710510 709.49584961]
[230.89814758 719.33734131]
[218.02941895 727.11578369]
[204.03117371 732.60736084]
[189.30616760 735.65399170]
[174.27807617 736.16815186]
[159.37927246 734.13494873]
[145.03843689 729.61297607]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 189]
[15 188]
[16 187]
[18 185]
[19 184]
[20 183]
[21 178]
[22 177]
[23 176]
[24 175]
[25 174]
[26 173]
[27 171]
[28 170]
[29 169]
[33 168]
[34 167]
[35 166]
[36 165]
[38 164]
[39 163]
[40 162]
[41 161]
[42 160]
[43 159]
[44 158]
[45 157]
[46 156]
[47 155]
[53 149]
[54 148]
[55 147]
[56 146]
[57 145]
[65 136]
[66 135]
[67 134]
[69 131]
[70 130]
[72 129]
[73 128]
[74 127]
[75 126]
[76 125]
[77 124]
[79 122]
[80 121]
[81 120]
[82 119]
[88 118]
[89 117]
[90 116]
[91 115]
[92 114]
[93 113]
[94 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
