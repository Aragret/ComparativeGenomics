%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAUCCUCAGUCCAUCAAUCAUAAUCCUCCCCCCAACAAUCCCCCAGCCUCCUUUUCCAACCCCUUGUCGAUUUAUCCAACAACAACUAAACCAAUUUUxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[88.95600128 628.89178467]
[74.29307556 624.09570312]
[64.56850433 612.11926270]
[62.88536453 596.78393555]
[69.78073883 582.98333740]
[83.05434418 575.12109375]
[83.50094604 560.12774658]
[83.94755554 545.13439941]
[84.39415741 530.14105225]
[84.84076691 515.14770508]
[81.89781189 508.36825562]
[85.40728760 499.93490601]
[86.07707214 484.94985962]
[86.74685669 469.96481323]
[72.82292938 466.08770752]
[60.10771561 459.19940186]
[49.24328232 449.64395142]
[40.77907944 437.90014648]
[35.14417267 424.55752563]
[32.62547302 410.28686523]
[33.35315704 395.80639648]
[37.29391098 381.84567261]
[44.25247192 369.10879517]
[53.88127518 358.23892212]
[65.69783020 349.78579712]
[79.10889435 344.17794800]
[93.44023132 341.70092773]
[94.33305359 326.72750854]
[87.36701202 313.56225586]
[95.91199493 300.24710083]
[96.80480957 285.27368164]
[97.69762421 270.30029297]
[98.59043884 255.32687378]
[98.59043884 240.32687378]
[97.69762421 225.35346985]
[89.21649933 213.10929871]
[96.11868286 198.87306213]
[95.22586823 183.89965820]
[92.31179810 180.11584473]
[91.74376678 174.46125793]
[94.53614044 168.46841431]
[94.08953094 153.47505188]
[93.64292908 138.48170471]
[93.19631958 123.48835754]
[92.74971008 108.49501038]
[92.19150543 93.50539398]
[91.52172089 78.52035522]
[90.85192871 63.53532028]
[87.62156677 57.76676178]
[87.76746368 52.08558655]
[90.39202881 48.09551239]
[90.16870117 33.09717560]
[89.94537354 18.09883881]
[87.58725739 14.45284653]
[86.61026764 10.63054180]
[86.90023041 7.08775711]
[88.20668030 4.19642496]
[90.18199921 2.20738769]
[90.85178375 -12.77765083]
[91.52156830 -27.76268959]
[89.11452484 -32.39445114]
[88.76025391 -37.02346802]
[90.11397552 -40.86827087]
[92.57068634 -43.39748383]
[93.90892029 -58.33766937]
[95.24715424 -73.27785492]
[96.47412872 -88.22758484]
[97.58977509 -103.18604279]
[95.06778717 -109.29759216]
[95.88774109 -114.92118073]
[98.96785736 -118.57109833]
[100.52838135 -133.48970032]
[102.08890533 -148.40830994]
[103.64942932 -163.32691956]
[90.53087616 -156.05342102]
[76.60740662 -161.63348389]
[72.14289093 -175.95368958]
[80.42839050 -188.45770264]
[95.35615540 -189.92803955]
[105.92144012 -179.28237915]
[108.58723450 -194.04359436]
[111.25302887 -208.80482483]
[101.00488281 -218.02253723]
[96.68388367 -230.99742126]
[99.31720734 -244.30662537]
[108.11210632 -254.49455261]
[120.69037628 -258.96997070]
[123.57565308 -273.68984985]
[126.46092224 -288.40975952]
[129.34619141 -303.12963867]
[132.23147583 -317.84951782]
[135.11674500 -332.56942749]
[138.00201416 -347.28930664]
[123.90358734 -352.50759888]
[110.82486725 -359.91995239]
[99.10462952 -369.33444214]
[89.04644775 -380.50714111]
[80.91086578 -393.14868164]
[74.90860748 -406.93161011]
[71.19515228 -421.49890137]
[69.86667633 -436.47326660]
[70.95759583 -451.46679688]
[74.43965912 -466.09112549]
[80.22265625 -479.96749878]
[88.15681458 -492.73641968]
[98.03660583 -504.06716919]
[109.60612488 -513.66625977]
[122.56569672 -521.28503418]
[136.57962036 -526.72613525]
[151.28492737 -529.84869385]
[166.30070496 -530.57177734]
[181.23799133 -528.87664795]
[195.70989990 -524.80718994]
[209.34155273 -518.46887207]
[221.77987671 -510.02587891]
[232.70266724 -499.69686890]
[241.82701111 -487.74938965]
[248.91658020 -474.49288940]
[253.78770447 -460.27078247]
[256.31423950 -445.45144653]
[256.43072510 -430.41873169]
[254.13414001 -415.56201172]
[249.48399353 -401.26614380]
[242.60072327 -387.90139771]
[233.66261292 -375.81393433]
[222.90119934 -365.31689453]
[210.59521484 -356.68212891]
[197.06341553 -350.13336182]
[182.65631104 -345.84014893]
[167.74707031 -343.91375732]
[152.72190857 -344.40405273]
[149.83663940 -329.68414307]
[146.95135498 -314.96426392]
[144.06608582 -300.24435425]
[141.18081665 -285.52447510]
[138.29554749 -270.80459595]
[135.41026306 -256.08468628]
[146.96629333 -244.42553711]
[149.31932068 -228.01135254]
[141.34593201 -213.28292847]
[126.01424408 -206.13902283]
[123.34844971 -191.37780762]
[120.68265533 -176.61659241]
[118.56803131 -161.76638794]
[117.00750732 -146.84779358]
[115.44698334 -131.92918396]
[113.88645935 -117.01057434]
[112.54822540 -102.07038879]
[111.43257904 -87.11193848]
[114.06988525 -80.20784760]
[110.18733978 -71.93962097]
[108.84910583 -56.99943542]
[107.51086426 -42.05924988]
[106.50660706 -27.09290504]
[105.83682251 -12.10786629]
[105.16703796 2.87717271]
[104.94371033 17.87550926]
[105.16703796 32.87384796]
[105.39036560 47.87218475]
[105.83696747 62.86553574]
[106.50675964 77.85057068]
[107.17654419 92.83560944]
[110.65391541 100.10750580]
[107.74306488 108.04840088]
[108.18966675 123.04174805]
[108.63627625 138.03509521]
[109.08287811 153.02845764]
[109.52948761 168.02180481]
[110.19927216 183.00683594]
[111.09208679 197.98023987]
[119.63706970 211.29542542]
[112.67102814 224.46066284]
[113.56384277 239.43406677]
[122.74933624 227.57543945]
[137.11819458 223.27011108]
[151.31118774 228.12384033]
[160.03469849 240.32632446]
[160.03504944 255.32632446]
[151.31213379 267.52920532]
[137.11935425 272.38363647]
[122.75029755 268.07897949]
[113.56384277 256.21969604]
[112.67102814 271.19311523]
[111.77821350 286.16650391]
[110.88539886 301.13992310]
[117.78758240 315.37615967]
[109.30645752 327.62033081]
[108.41364288 342.59371948]
[123.31470490 347.17730713]
[136.68232727 355.18264771]
[147.74491882 366.14282227]
[155.86512756 379.42053223]
[160.57650757 394.24505615]
[161.61033630 409.75708008]
[158.91093445 425.05850220]
[152.63864136 439.26443481]
[143.16032410 451.55426025]
[131.02787781 461.21920776]
[116.94613647 467.70318604]
[101.73189545 470.63461304]
[101.06211090 485.61962891]
[100.39232635 500.60467529]
[99.83411407 515.59429932]
[99.38751221 530.58764648]
[98.94090271 545.58099365]
[98.49429321 560.57434082]
[98.04769135 575.56768799]
[110.82978821 584.20605469]
[116.89151001 598.39263916]
[114.29858398 613.60052490]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 207]
[7 206]
[8 205]
[9 204]
[10 203]
[12 202]
[13 201]
[14 200]
[27 188]
[28 187]
[30 185]
[31 184]
[32 183]
[33 182]
[34 173]
[35 172]
[37 170]
[38 169]
[41 168]
[42 167]
[43 166]
[44 165]
[45 164]
[46 162]
[47 161]
[48 160]
[51 159]
[52 158]
[53 157]
[58 156]
[59 155]
[60 154]
[64 153]
[65 152]
[66 151]
[67 149]
[68 148]
[71 147]
[72 146]
[73 145]
[74 144]
[80 143]
[81 142]
[82 141]
[87 137]
[88 136]
[89 135]
[90 134]
[91 133]
[92 132]
[93 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
