%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACGAUUACGAUCCGACGGUUACCACUCCCUCCAACUUCACUCUCCAUACCAAAACUCAUCAGGAGGAUAAAAAGCUUAUAGAACAAGUAACAAUUCCAxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[86.70124054 496.55224609]
[86.03145599 481.56719971]
[85.36167145 466.58215332]
[84.69187927 451.59713745]
[77.13381958 464.55380249]
[64.75119781 473.01965332]
[49.93490982 475.36004639]
[35.54573822 471.12310791]
[24.36201286 461.12689209]
[18.54313660 447.30154419]
[19.21264267 432.31646729]
[26.24125862 419.06512451]
[38.27186966 410.10607910]
[52.98155212 407.16921997]
[67.53009796 410.82156372]
[79.10841370 420.35797119]
[85.48117828 433.93829346]
[87.48519135 419.07275391]
[89.26765442 404.17904663]
[90.82817841 389.26043701]
[92.38870239 374.34182739]
[82.95411682 365.56582642]
[80.25656128 352.76718140]
[85.50011444 340.57229614]
[96.97633362 333.52169800]
[98.75879669 318.62799072]
[100.54126740 303.73425293]
[102.32373047 288.84054565]
[102.65870667 273.84426880]
[101.54306030 258.88583374]
[100.42741394 243.92738342]
[99.31175995 228.96891785]
[88.66404724 215.01925659]
[96.79726410 198.49859619]
[95.45903015 183.55841064]
[93.39687347 181.65956116]
[91.96262360 178.82945251]
[91.51474762 175.30314636]
[92.32009125 171.44102478]
[94.51305389 167.69337463]
[94.06644440 152.70002747]
[93.61984253 137.70668030]
[93.17323303 122.71332550]
[92.72663116 107.71997833]
[91.61097717 92.76152802]
[89.82851410 77.86780548]
[88.04605103 62.97409058]
[85.93142700 48.12389374]
[83.48569489 33.32462311]
[81.03997040 18.52535057]
[78.59423828 3.72608042]
[64.31488800 -1.75546348]
[54.75956726 -13.57039833]
[52.41662216 -28.48270798]
[57.81635284 -42.47195053]
[69.41516113 -51.81716919]
[66.96943665 -66.61643982]
[64.52371216 -81.41571045]
[61.96787643 -96.19636536]
[59.30208206 -110.95758057]
[56.63628769 -125.71879578]
[53.97048950 -140.48001099]
[41.14552307 -145.53085327]
[32.55910492 -156.17472839]
[30.37076950 -169.56430054]
[35.04656601 -182.18496704]
[45.26486969 -190.77731323]
[42.81914139 -205.57658386]
[29.11430359 -209.02970886]
[17.79501534 -217.42004395]
[10.55058575 -229.45433044]
[8.44648743 -243.29858398]
[11.76775169 -256.85766602]
[19.98086739 -268.09228516]
[31.81917191 -275.32571411]
[29.59405518 -290.15975952]
[27.36893845 -304.99380493]
[25.14382172 -319.82785034]
[22.91870308 -334.66189575]
[20.69358635 -349.49594116]
[18.46846962 -364.32998657]
[14.10067272 -372.35244751]
[16.32236099 -379.40127563]
[6.55721569 -387.82772827]
[5.19410515 -400.25051880]
[12.42161274 -409.95050049]
[10.63914680 -424.84420776]
[8.85668087 -439.73791504]
[7.07421541 -454.63165283]
[5.29174948 -469.52536011]
[-9.64491463 -471.66040039]
[-23.51964951 -477.58950806]
[-35.38645172 -486.90838623]
[-44.43622208 -498.98165894]
[-50.05193710 -512.98614502]
[-51.85070038 -527.96704102]
[-49.70987701 -542.90289307]
[-43.77542496 -556.77532959]
[-34.45196915 -568.63854980]
[-22.37520027 -577.68365479]
[-8.36852646 -583.29394531]
[6.61304998 -585.08691406]
[21.54806137 -582.94036865]
[35.41821289 -577.00054932]
[47.27781677 -567.67248535]
[56.31826019 -555.59222412]
[61.92315674 -541.58337402]
[63.71035385 -526.60113525]
[61.55799484 -511.66696167]
[55.61283493 -497.79910278]
[46.28022003 -485.94308472]
[34.19646835 -476.90731812]
[20.18546677 -471.30783081]
[21.96793175 -456.41409302]
[23.75039864 -441.52038574]
[25.53286362 -426.62667847]
[27.31533051 -411.73294067]
[38.57530975 -398.27264404]
[31.18788910 -381.40530396]
[33.30251312 -366.55511475]
[35.52762985 -351.72106934]
[37.75274658 -336.88702393]
[39.97786331 -322.05297852]
[42.20298004 -307.21893311]
[44.42810059 -292.38488770]
[46.65321732 -277.55084229]
[62.00724411 -273.12316895]
[73.93669128 -262.40393066]
[80.01932526 -247.50140381]
[78.99040985 -231.37992859]
[71.00527954 -217.27030945]
[57.61841202 -208.02230835]
[60.06414032 -193.22303772]
[74.96833801 -186.34243774]
[82.91409302 -171.78817749]
[80.59610748 -155.20118713]
[68.73170471 -143.14581299]
[71.39750671 -128.38459778]
[74.06330109 -113.62337494]
[76.72909546 -98.86215973]
[81.01128387 -92.83848572]
[79.32298279 -83.86143494]
[81.76870728 -69.06216431]
[84.21443176 -54.26289749]
[98.20320892 -49.14628220]
[107.81664276 -37.63811493]
[110.39604950 -22.76488304]
[105.15003967 -8.50388050]
[93.39350891 1.28035295]
[95.83924103 16.07962418]
[98.28496552 30.87889481]
[100.73069763 45.67816544]
[103.36871338 48.01765060]
[105.00464630 51.75112152]
[104.99565125 56.39366531]
[102.93976593 61.19162369]
[104.72222900 76.08534241]
[106.50469971 90.97905731]
[116.60301208 79.88743591]
[131.57946777 79.04734802]
[142.85487366 88.94003296]
[143.97016907 103.89851379]
[134.28645325 115.35388947]
[119.35099792 116.74401093]
[107.71997833 107.27336884]
[108.16658020 122.26672363]
[108.61318970 137.26007080]
[109.05979919 152.25341797]
[109.50640106 167.24676514]
[110.39921570 182.22018433]
[111.73744965 197.16036987]
[121.11660004 206.01441956]
[121.92364502 218.48568726]
[114.27021790 227.85327148]
[115.38586426 242.81172180]
[116.50151062 257.77017212]
[117.61716461 272.72863770]
[124.49717712 259.39950562]
[136.15272522 249.95767212]
[150.61961365 245.99421692]
[165.45993042 248.17706299]
[178.17283630 256.13836670]
[186.61596680 268.53646851]
[189.36650085 283.28213501]
[185.96093750 297.89044189]
[176.97317505 309.89959717]
[163.91780090 317.28588867]
[148.99487305 318.80456543]
[134.71917725 314.19973755]
[123.49642181 304.24737549]
[117.21744537 290.62301636]
[115.43498230 305.51672363]
[113.65251923 320.41043091]
[111.87004852 335.30416870]
[122.93222046 348.85583496]
[120.81252289 365.87997437]
[107.30731201 375.90234375]
[105.74678802 390.82095337]
[104.18626404 405.73956299]
[106.52516937 411.92349243]
[105.53813934 417.52017212]
[102.35072327 421.07678223]
[100.34671021 435.94229126]
[99.67691803 450.92733765]
[100.34671021 465.91238403]
[101.01649475 480.89743042]
[101.68627930 495.88244629]
[110.96306610 509.40551758]
[103.64699554 524.08227539]
[87.26420593 524.81451416]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 207]
[2 206]
[3 205]
[4 204]
[17 203]
[18 202]
[19 199]
[20 198]
[21 197]
[25 194]
[26 193]
[27 192]
[28 191]
[29 177]
[30 176]
[31 175]
[32 174]
[34 171]
[35 170]
[40 169]
[41 168]
[42 167]
[43 166]
[44 165]
[45 158]
[46 157]
[47 156]
[48 152]
[49 151]
[50 150]
[51 149]
[56 144]
[57 143]
[58 142]
[59 140]
[60 139]
[61 138]
[62 137]
[67 133]
[68 132]
[75 126]
[76 125]
[77 124]
[78 123]
[79 122]
[80 121]
[81 120]
[83 119]
[86 117]
[87 116]
[88 115]
[89 114]
[90 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
