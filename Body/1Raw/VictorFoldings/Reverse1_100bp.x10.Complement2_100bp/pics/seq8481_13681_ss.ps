%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[96.10383606 446.86874390]
[104.90608215 434.44134521]
[118.00533295 426.67413330]
[116.22286224 411.78042603]
[107.02799225 400.06274414]
[113.07057953 385.44094849]
[111.28811646 370.54721069]
[109.50564575 355.65350342]
[106.97472382 353.19854736]
[105.50713348 349.39575195]
[105.72341919 344.75823975]
[107.99149323 340.05688477]
[106.87584686 325.09841919]
[105.76020050 310.13995361]
[104.64454651 295.18151855]
[103.52890015 280.22305298]
[92.68482971 273.26348877]
[87.75564575 261.14797974]
[90.74845886 248.21533203]
[100.78895569 239.23742676]
[99.89614105 224.26402283]
[99.00332642 209.29060364]
[98.11051178 194.31719971]
[97.21769714 179.34379578]
[88.73657227 167.09962463]
[95.63875580 152.86338806]
[94.74593353 137.88998413]
[93.85311890 122.91657257]
[92.96030426 107.94316864]
[91.17784119 93.04945374]
[88.51204681 78.28823853]
[85.84624481 63.52701950]
[83.18045044 48.76580048]
[80.51465607 34.00458527]
[77.84886169 19.24336624]
[74.41780090 4.64104366]
[70.23078918 -9.76273823]
[66.04377747 -24.16652107]
[61.85676575 -38.57030106]
[57.66975403 -52.97408295]
[51.90372086 -66.82157135]
[44.63049316 -79.94026184]
[37.35726166 -93.05895996]
[30.08403397 -106.17765045]
[26.28467369 -108.27975464]
[23.61986923 -111.18893433]
[22.20402336 -114.44942474]
[21.99177170 -117.61511230]
[22.79496956 -120.30081177]
[16.31547356 -133.82916260]
[9.83597755 -147.35751343]
[3.35648203 -160.88584900]
[-11.79967785 -160.13317871]
[-26.05092812 -165.22679138]
[-37.23608398 -175.36117554]
[-43.67161942 -188.96894836]
[-44.40500259 -203.96318054]
[-39.35558319 -218.05746460]
[-29.32213211 -229.11454773]
[-35.80162811 -242.64289856]
[-42.28112411 -256.17123413]
[-48.76062012 -269.69958496]
[-55.24011612 -283.22793579]
[-70.66989899 -293.27798462]
[-68.63965607 -310.70913696]
[-75.31985474 -324.13949585]
[-82.00004578 -337.56988525]
[-88.68024445 -351.00024414]
[-95.36043549 -364.43063354]
[-109.64563751 -359.76684570]
[-124.45767212 -357.23278809]
[-139.48083496 -356.88247681]
[-154.39488220 -358.72338867]
[-168.88192749 -362.71627808]
[-182.63319397 -368.77603149]
[-195.35556030 -376.77349854]
[-206.77784729 -386.53817749]
[-216.65660095 -397.86196899]
[-224.78123474 -410.50347900]
[-230.97859192 -424.19329834]
[-235.11656189 -438.63955688]
[-237.10694885 -453.53442383]
[-236.90731812 -468.56033325]
[-234.52194214 -483.39703369]
[-230.00164795 -497.72827148]
[-223.44279480 -511.24859619]
[-214.98519897 -523.66986084]
[-204.80909729 -534.72717285]
[-193.13143921 -544.18499756]
[-180.20109558 -551.84161377]
[-166.29370117 -557.53393555]
[-151.70568848 -561.14050293]
[-136.74798584 -562.58459473]
[-121.73944855 -561.83526611]
[-106.99995422 -558.90863037]
[-92.84369659 -553.86700439]
[-79.57241058 -546.81781006]
[-67.46896362 -537.91137695]
[-56.79135895 -527.33752441]
[-47.76718140 -515.32165527]
[-40.58877945 -502.11978149]
[-35.40916824 -488.01342773]
[-32.33874512 -473.30322266]
[-31.44296265 -458.30270386]
[-32.74090958 -443.33163452]
[-36.20491791 -428.70910645]
[-41.76116180 -414.74679565]
[-49.29119873 -401.74230957]
[-58.63453293 -389.97286987]
[-69.59200287 -379.68930054]
[-81.93006134 -371.11080933]
[-75.24986267 -357.68045044]
[-68.56967163 -344.25006104]
[-61.88947678 -330.81970215]
[-55.20928192 -317.38931274]
[-43.84512329 -313.24414062]
[-38.16983032 -302.10974121]
[-41.71176910 -289.70742798]
[-35.23227310 -276.17907715]
[-28.75277710 -262.65072632]
[-22.27328110 -249.12239075]
[-15.79378605 -235.59405518]
[-0.88934582 -236.48114014]
[13.25755119 -231.58106995]
[24.48094559 -221.61109924]
[31.04988861 -208.06723022]
[31.93535423 -192.99972534]
[26.97132683 -178.70281982]
[16.88482666 -167.36534119]
[23.36432266 -153.83700562]
[29.84381866 -140.30865479]
[36.32331467 -126.78031158]
[43.20272827 -113.45088196]
[50.47595596 -100.33218384]
[57.74918747 -87.21349335]
[65.02241516 -74.09480286]
[65.19417572 -89.09381866]
[70.70488739 -103.04487610]
[80.82952118 -114.11248016]
[94.23600769 -120.84048462]
[109.16049194 -122.34371948]
[123.63940430 -118.42440033]
[135.76779175 -109.59817505]
[143.94996643 -97.02629852]
[147.10940552 -82.36280823]
[144.83044434 -67.53694153]
[137.41290283 -54.49929810]
[125.83271027 -44.96519852]
[111.61342621 -40.18902206]
[96.62583923 -40.79915237]
[82.84182739 -46.71532440]
[72.07353973 -57.16109467]
[76.26055145 -42.75731277]
[80.44756317 -28.35353088]
[84.63457489 -13.94974995]
[88.82157898 0.45403248]
[95.96887970 -12.73369312]
[109.87426758 -18.35866356]
[124.18038177 -13.84921741]
[132.34666443 -1.26701379]
[130.63960266 13.63553429]
[119.83963013 24.04518127]
[104.88436890 25.20277786]
[92.61007690 16.57756996]
[95.27587128 31.33878708]
[97.94167328 46.10000610]
[100.60746765 60.86122131]
[103.27326202 75.62243652]
[105.93905640 90.38365936]
[113.65029144 77.51753998]
[127.40573120 71.53524780]
[142.07493591 74.66802216]
[152.18666077 85.74741364]
[153.96948242 100.64109039]
[146.75845337 113.79407501]
[133.24310303 120.30062866]
[118.46432495 117.73397064]
[107.93370819 107.05035400]
[108.82652283 122.02375793]
[109.71934509 136.99716187]
[110.61215973 151.97056580]
[119.15714264 165.28575134]
[112.19110107 178.45098877]
[113.08391571 193.42439270]
[113.97673035 208.39779663]
[114.86954498 223.37120056]
[115.76235962 238.34460449]
[129.05683899 249.71458435]
[129.99641418 266.84445190]
[118.48735046 279.10742188]
[119.60300446 294.06585693]
[120.71865082 309.02432251]
[121.83429718 323.98275757]
[122.94995117 338.94122314]
[124.39936829 353.87103271]
[126.18183136 368.76473999]
[127.96429443 383.65847778]
[137.28666687 396.44143677]
[131.11657715 409.99795532]
[132.89904785 424.89166260]
[147.46124268 429.34838867]
[158.94749451 439.34768677]
[165.36775208 453.15710449]
[165.60964966 468.38409424]
[159.63128662 482.39050293]
[148.46844482 492.74960327]
[134.05516052 497.66662598]
[118.88862610 496.28967285]
[105.59652710 488.85733032]
[96.48179626 476.65725708]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 200]
[4 199]
[6 197]
[7 196]
[8 195]
[12 194]
[13 193]
[14 192]
[15 191]
[16 190]
[20 187]
[21 186]
[22 185]
[23 184]
[24 183]
[26 181]
[27 180]
[28 179]
[29 178]
[30 169]
[31 168]
[32 167]
[33 166]
[34 165]
[35 164]
[36 156]
[37 155]
[38 154]
[39 153]
[40 152]
[41 136]
[42 135]
[43 134]
[44 133]
[49 132]
[50 131]
[51 130]
[52 129]
[59 122]
[60 121]
[61 120]
[62 119]
[63 118]
[65 115]
[66 114]
[67 113]
[68 112]
[69 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
