%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUCAUAUCCCGACACUGAUCAUACAACUCAGGACAUUCAUCCUCUCACUAUAAACUAGUCCUCUUGCACCAAUGAUCGUGUCUCUCAAGAGGGUCAUCxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[1.05186200 690.90240479]
[4.04655647 705.65423584]
[4.01007986 720.70690918]
[0.94392705 735.44409180]
[-5.02634573 749.26220703]
[-13.65625954 761.59545898]
[-24.59242439 771.93884277]
[-37.38701248 779.86871338]
[-51.51609039 785.06048584]
[-66.40108490 787.30139160]
[-81.43246460 786.49981689]
[-95.99469757 782.68847656]
[-109.49147797 776.02349854]
[-121.37011719 766.77783203]
[-131.14419556 755.33001709]
[-138.41346741 742.14886475]
[-142.88024902 727.77416992]
[-144.36166382 712.79449463]
[-142.79701233 697.82330322]
[-138.25038147 683.47363281]
[-130.90794373 670.33306885]
[-121.07038116 658.93975830]
[-109.14052582 649.76025391]
[-95.60690308 643.17041016]
[-81.02370453 639.44012451]
[-65.98810577 638.72210693]
[-51.11579514 641.04577637]
[-45.86907959 626.99328613]
[-40.62236023 612.94079590]
[-35.37564087 598.88836670]
[-30.12892342 584.83587646]
[-24.88220596 570.78338623]
[-19.84528923 556.65435791]
[-15.01929188 542.45190430]
[-10.19329453 528.24945068]
[-5.36729670 514.04699707]
[-0.54129887 499.84454346]
[3.85969925 485.50469971]
[7.83179522 471.04016113]
[3.74096775 456.71835327]
[14.85643291 445.45971680]
[18.82852936 430.99517822]
[22.80062485 416.53067017]
[26.77272224 402.06613159]
[25.51268005 394.78369141]
[30.91312981 387.41668701]
[35.10013962 373.01287842]
[39.28715134 358.60910034]
[42.93524170 344.05947876]
[46.03934860 329.38418579]
[49.14345932 314.70889282]
[52.24757004 300.03356934]
[55.35168076 285.35827637]
[58.45579147 270.68298340]
[61.55990219 256.00769043]
[55.22923660 239.64033508]
[67.65065765 226.04660034]
[70.53593445 211.32670593]
[73.42120361 196.60681152]
[76.30647278 181.88691711]
[79.19174957 167.16703796]
[82.07701874 152.44714355]
[84.96229553 137.72724915]
[87.84756470 123.00736237]
[76.56354523 111.30278778]
[74.42972565 95.18531036]
[82.27919769 80.94761658]
[97.04732513 74.14846039]
[99.71311951 59.38724518]
[102.37891388 44.62602997]
[105.04470825 29.86481285]
[92.76892853 20.86111259]
[85.64871979 7.47493982]
[85.04904938 -7.61348534]
[91.03532410 -21.40933418]
[102.37107849 -31.19759941]
[116.77291870 -35.07736969]
[119.43871307 -49.83858490]
[122.10450745 -64.59980011]
[124.77030182 -79.36102295]
[127.43609619 -94.12223816]
[130.10189819 -108.88345337]
[132.76768494 -123.64467621]
[135.43348694 -138.40588379]
[138.09927368 -153.16711426]
[131.39956665 -164.18875122]
[133.92379761 -176.42852783]
[143.78460693 -183.43502808]
[146.23033142 -198.23429871]
[148.23434448 -213.09982300]
[142.41012573 -227.80998230]
[151.77844238 -239.38945007]
[153.78245544 -254.25497437]
[155.78646851 -269.12051392]
[149.96224976 -283.83068848]
[159.33056641 -295.41015625]
[160.77998352 -310.33993530]
[161.67279053 -325.31335449]
[162.56561279 -340.28677368]
[148.64540100 -346.28707886]
[137.61904907 -356.68875122]
[130.81802368 -370.23577881]
[129.06358337 -385.29226685]
[132.56759644 -400.04006958]
[140.90692139 -412.69833374]
[153.07456970 -421.73849487]
[167.60119629 -426.06890869]
[182.73268127 -425.16665649]
[196.64181519 -419.14071655]
[207.64898682 -408.71871948]
[214.42503357 -395.15917969]
[216.15171814 -380.09948730]
[212.62052917 -365.35815430]
[204.25788879 -352.71530151]
[192.07360840 -343.69757080]
[177.53901672 -339.39395142]
[176.64619446 -324.42053223]
[175.75338745 -309.44714355]
[188.53407288 -317.29913330]
[202.69281006 -312.34637451]
[207.79231262 -298.23980713]
[200.07341003 -285.37829590]
[185.22618103 -283.24285889]
[174.19609070 -293.40612793]
[180.16365051 -279.75924683]
[170.65199280 -267.11648560]
[168.64797974 -252.25096130]
[166.64396667 -237.38543701]
[172.61152649 -223.73855591]
[163.09988403 -211.09580994]
[161.09587097 -196.23028564]
[162.68624878 -193.92185974]
[163.45805359 -190.84436035]
[163.11378479 -187.30644226]
[161.47303772 -183.71861267]
[158.50450134 -180.54974365]
[165.07815552 -164.27848816]
[152.86048889 -150.50131226]
[150.19470215 -135.74009705]
[147.52890015 -120.97887421]
[144.86311340 -106.21765900]
[142.19731140 -91.45644379]
[139.53152466 -76.69522858]
[136.86572266 -61.93400955]
[134.19992065 -47.17279053]
[131.53413391 -32.41157532]
[143.66915894 -23.73939133]
[150.86509705 -10.60440445]
[151.64770508 4.41386890]
[145.80825806 18.33942413]
[134.45558167 28.38949585]
[119.80593109 32.53060913]
[117.14012909 47.29182434]
[114.47433472 62.05304337]
[111.80854034 76.81426239]
[121.68717957 85.62340546]
[125.95395660 98.15269470]
[123.50477600 111.16000366]
[114.97340393 121.27950287]
[102.56745911 125.89263153]
[99.68218231 140.61251831]
[96.79691315 155.33241272]
[93.91163635 170.05230713]
[91.02636719 184.77220154]
[88.14109802 199.49209595]
[85.25582123 214.21197510]
[82.37055206 228.93186951]
[88.90542603 240.05204773]
[86.19923401 252.25286865]
[76.23520660 259.11178589]
[73.13109589 273.78707886]
[70.02698517 288.46240234]
[66.92287445 303.13769531]
[63.81876373 317.81298828]
[60.71465302 332.48831177]
[57.61054230 347.16360474]
[71.41460419 341.29437256]
[84.68199921 348.29266357]
[87.63249207 362.99963379]
[78.09109497 374.57382202]
[63.09136581 374.48318481]
[53.69093323 362.79611206]
[49.50392151 377.19989014]
[45.31691360 391.60369873]
[41.23724365 406.03823853]
[37.26514816 420.50277710]
[33.29305267 434.96728516]
[29.32095718 449.43182373]
[33.12767410 464.78823853]
[22.29631996 475.01226807]
[18.32422256 489.47680664]
[19.57088852 493.63610840]
[19.44211006 497.57919312]
[18.17475700 500.90020752]
[16.11316490 503.31195068]
[13.66115665 504.67053223]
[8.83515930 518.87298584]
[4.00916147 533.07543945]
[-0.81683618 547.27789307]
[-5.64283371 561.48034668]
[-4.73165560 568.02874756]
[-6.93374538 573.26782227]
[-10.82973480 576.03009033]
[-16.07645226 590.08258057]
[-21.32317162 604.13507080]
[-26.56988907 618.18750000]
[-31.81660652 632.23999023]
[-37.06332397 646.29248047]
[-24.30731964 654.28430176]
[-13.42141247 664.68054199]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 208]
[28 207]
[29 206]
[30 205]
[31 204]
[32 203]
[33 200]
[34 199]
[35 198]
[36 197]
[37 196]
[38 191]
[39 190]
[41 188]
[42 187]
[43 186]
[44 185]
[46 184]
[47 183]
[48 182]
[49 176]
[50 175]
[51 174]
[52 173]
[53 172]
[54 171]
[55 170]
[57 167]
[58 166]
[59 165]
[60 164]
[61 163]
[62 162]
[63 161]
[64 160]
[68 155]
[69 154]
[70 153]
[71 152]
[77 146]
[78 145]
[79 144]
[80 143]
[81 142]
[82 141]
[83 140]
[84 139]
[85 138]
[88 136]
[89 131]
[90 130]
[92 128]
[93 127]
[94 126]
[96 124]
[97 118]
[98 117]
[99 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
