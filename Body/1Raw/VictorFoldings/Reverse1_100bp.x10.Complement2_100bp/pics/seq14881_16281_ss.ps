%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUAAGUCGGUAUUAAAUGCAGAGCUCACUACACCCGCUAACUACUUUUCCGCCAACUCCGCAGACCACUCAUCACGUACCGAUCCUUAUCAGGACACCAxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[-32.78717804 398.07089233]
[-28.50321960 412.46408081]
[-25.91921043 427.25729370]
[-25.07009888 442.25048828]
[-25.96736717 457.24087524]
[-28.59888268 472.02569580]
[-32.92905807 486.40505981]
[-38.89932632 500.18447876]
[-46.42895508 513.17761230]
[-55.41610718 525.20874023]
[-65.73925018 536.11511230]
[-77.25876617 545.74926758]
[-89.81887054 553.98095703]
[-103.24970245 560.69879150]
[-117.36962128 565.81195068]
[-131.98768616 569.25122070]
[-146.90618896 570.97021484]
[-161.92337036 570.94561768]
[-176.83615112 569.17773438]
[-191.44285583 565.69049072]
[-205.54592896 560.53106689]
[-218.95466614 553.76922607]
[-231.48771667 545.49639893]
[-242.97557068 535.82452393]
[-253.26289368 524.88433838]
[-262.21054077 512.82385254]
[-269.69754028 499.80609131]
[-275.62258911 486.00717163]
[-279.90557861 471.61367798]
[-282.48861694 456.82028198]
[-283.33673096 441.82705688]
[-282.43844604 426.83673096]
[-279.80593872 412.05206299]
[-275.47482300 397.67300415]
[-269.50363159 383.89398193]
[-261.97314453 370.90133667]
[-252.98518372 358.87084961]
[-242.66131592 347.96514893]
[-231.14114380 338.33172607]
[-218.58049011 330.10092163]
[-205.14921570 323.38397217]
[-191.02894592 318.27175903]
[-176.41065979 314.83343506]
[-161.49205017 313.11544800]
[-146.47486877 313.14108276]
[-131.56219482 314.90994263]
[-116.95572662 318.39816284]
[-102.85298920 323.55853271]
[-89.44470978 330.32125854]
[-76.91221619 338.59487915]
[-67.25141144 327.12017822]
[-64.97323608 312.40084839]
[-50.16630173 306.82723999]
[-40.50548935 295.35253906]
[-30.84468079 283.87783813]
[-21.70587730 271.98318481]
[-13.10731316 259.69235229]
[-4.50874949 247.40151978]
[4.08981419 235.11067200]
[12.68837833 222.81983948]
[21.19520569 210.46533203]
[29.60982323 198.04783630]
[23.53688049 182.79670715]
[27.79371452 166.77044678]
[40.89414978 156.33589172]
[57.79872513 155.76023865]
[66.02753448 143.21884155]
[73.87928772 130.43800354]
[81.34703064 117.42904663]
[88.81477356 104.42008972]
[96.08799744 91.30139923]
[103.16510773 78.07587433]
[110.24221039 64.85034180]
[117.12162018 51.52091599]
[123.80181885 38.09053802]
[130.48200989 24.66016388]
[137.16220093 11.22978687]
[142.61756897 -2.74301052]
[146.80458069 -17.14679337]
[150.99159241 -31.55057526]
[155.17860413 -45.95435715]
[159.36561584 -60.35813904]
[163.55262756 -74.76191711]
[152.28015137 -84.99387360]
[146.59121704 -99.04815674]
[147.56451416 -114.11709595]
[154.95355225 -127.21530151]
[167.24612427 -135.77113342]
[181.97343445 -138.13156128]
[186.16044617 -152.53533936]
[189.91674805 -167.05740356]
[193.23901367 -181.68486023]
[188.75038147 -196.85598755]
[199.11441040 -207.55346680]
[202.43667603 -222.18093872]
[205.75892639 -236.80839539]
[209.08119202 -251.43585205]
[211.96646118 -266.15573120]
[214.41218567 -280.95501709]
[216.85791016 -295.75427246]
[203.17478943 -302.13195801]
[191.72050476 -311.96566772]
[183.34503174 -324.52569580]
[178.66989136 -338.87997437]
[178.04200745 -353.96334839]
[181.50798035 -368.65652466]
[188.81060791 -381.86920166]
[199.40798950 -392.62084961]
[212.51373291 -400.11364746]
[227.15528870 -403.79162598]
[242.24617004 -403.38180542]
[256.66653442 -398.91458130]
[269.34628296 -390.72152710]
[279.34448242 -379.41055298]
[285.91925049 -365.82101440]
[288.58264160 -350.96136475]
[287.13705444 -335.93429565]
[281.68972778 -321.85491943]
[272.64492798 -309.76797485]
[260.67379761 -300.57043457]
[246.66468811 -294.94482422]
[231.65718079 -293.30856323]
[229.21145630 -278.50927734]
[226.76573181 -263.71002197]
[228.28668213 -261.35525513]
[228.96650696 -258.25616455]
[228.51705933 -254.73005676]
[226.77021790 -251.19267273]
[223.70864868 -248.11358643]
[220.38638306 -233.48612976]
[217.06413269 -218.85867310]
[213.74186707 -204.23121643]
[218.46812439 -190.10635376]
[207.86647034 -178.36260986]
[204.54420471 -163.73513794]
[205.92230225 -161.29403687]
[206.41645813 -158.15995789]
[205.75793457 -154.66687012]
[203.80364990 -151.23971558]
[200.56422424 -148.34832764]
[196.37721252 -133.94454956]
[207.54417419 -124.05696106]
[213.33457947 -110.24462128]
[212.55050659 -95.22642517]
[205.29400635 -81.98394012]
[192.95738220 -73.16947174]
[177.95640564 -70.57491302]
[173.76939392 -56.17112732]
[169.58238220 -41.76734543]
[165.39537048 -27.36356354]
[161.20835876 -12.95978165]
[157.02134705 1.44400060]
[168.34614563 -8.39210510]
[182.79412842 -12.42393303]
[197.57563782 -9.87299919]
[209.83656311 -1.23184979]
[217.20954895 11.83104515]
[218.27095032 26.79344559]
[212.81585693 40.76634598]
[201.89755249 51.05179596]
[187.62417603 55.66384125]
[172.75170898 53.71196365]
[160.15179443 45.57304382]
[152.25726318 32.81857681]
[150.59259033 17.90998268]
[143.91238403 31.34035873]
[137.23219299 44.77073288]
[130.55200195 58.20111084]
[131.19549561 62.93344116]
[128.87300110 68.12025452]
[123.46773529 71.92745209]
[116.39063263 85.15297699]
[109.31352997 98.37850189]
[109.65785217 103.61256409]
[107.04511261 108.66696167]
[101.82372284 111.88783264]
[94.35597992 124.89678955]
[86.88823700 137.90574646]
[87.05361176 142.24470520]
[85.94150543 146.02990723]
[83.88288116 148.92774963]
[81.28303528 150.74636841]
[78.56893158 151.44764709]
[70.34012604 163.98904419]
[76.16471100 176.48164368]
[75.06462860 190.11279297]
[67.43382263 201.33065796]
[55.35389709 207.26525879]
[42.02732086 206.46244812]
[33.61270142 218.87994385]
[31.38924408 227.73963928]
[24.97921562 231.41841125]
[16.38065147 243.70924377]
[7.78208828 256.00009155]
[-0.81647569 268.29092407]
[-9.41504002 280.58175659]
[5.50596189 279.04431152]
[17.23034286 288.40054321]
[19.04184341 303.29074097]
[9.90275669 315.18518066]
[-4.95163584 317.27011108]
[-17.01206207 308.35125732]
[-19.36997986 293.53863525]
[-29.03079033 305.01333618]
[-38.69160080 316.48803711]
[-41.66077805 332.02813721]
[-55.77670670 336.78100586]
[-65.43751526 348.25570679]
[-55.14946747 359.19519043]
[-46.20100784 371.25509644]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[50 208]
[51 207]
[53 205]
[54 204]
[55 203]
[56 196]
[57 195]
[58 194]
[59 193]
[60 192]
[61 190]
[62 189]
[66 184]
[67 183]
[68 178]
[69 177]
[70 176]
[71 173]
[72 172]
[73 171]
[74 168]
[75 167]
[76 166]
[77 165]
[78 152]
[79 151]
[80 150]
[81 149]
[82 148]
[83 147]
[89 141]
[90 140]
[91 135]
[92 134]
[94 132]
[95 131]
[96 130]
[97 129]
[98 124]
[99 123]
[100 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
