%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[183.86152649 543.35662842]
[191.04679871 530.05761719]
[201.83396912 519.46856689]
[215.26383972 512.53100586]
[212.59803772 497.76977539]
[209.93225098 483.00854492]
[207.26644897 468.24734497]
[204.60066223 453.48611450]
[200.95257568 438.93649292]
[196.33856201 424.66375732]
[191.72454834 410.39102173]
[187.11054993 396.11828613]
[182.49653625 381.84555054]
[177.88252258 367.57284546]
[173.26850891 353.30010986]
[161.99143982 343.56988525]
[165.10865784 328.05880737]
[160.49464417 313.78610229]
[155.88063049 299.51336670]
[151.26663208 285.24063110]
[146.65261841 270.96789551]
[131.86155701 269.04699707]
[119.31970215 260.86096191]
[111.54394531 247.98855591]
[110.12242126 232.95527649]
[115.39039612 218.73783875]
[126.35321808 208.17480469]
[121.73921204 193.90206909]
[117.12520599 179.62933350]
[105.84812164 169.89913940]
[108.96534729 154.38806152]
[103.91677094 148.99049377]
[104.39060211 139.86836243]
[99.98960114 125.52851105]
[95.58860779 111.18865967]
[90.97459412 96.91593170]
[86.14859772 82.71347046]
[81.32260132 68.51101685]
[77.99967957 83.13832855]
[69.07994080 95.19811249]
[56.06653214 102.65808105]
[41.15243530 104.26110840]
[26.85093689 99.73704529]
[15.57209110 89.84828186]
[9.21658230 76.26124573]
[8.85542393 61.26559448]
[14.54947948 47.38835526]
[25.33919907 36.96809006]
[39.40632629 31.76079369]
[54.38030243 32.64398956]
[67.73774719 39.46883774]
[77.22846985 51.08671188]
[67.71681213 38.44396591]
[73.68437958 24.79708099]
[71.68036652 9.93155289]
[61.91521835 1.50512123]
[60.55210876 -10.91766834]
[67.77961731 -20.61765289]
[65.99714661 -35.51136780]
[64.21468353 -50.40508652]
[62.43221664 -65.29880524]
[60.64975357 -80.19252014]
[43.81449127 -82.02188110]
[27.89911652 -87.78434753]
[13.80825424 -97.14839935]
[2.34188199 -109.57791901]
[-5.85008717 -124.36288452]
[-10.30464077 -140.65992737]
[-10.77183628 -157.54043579]
[-7.22882080 -174.04347229]
[0.11907954 -189.23046875]
[10.85025501 -202.23863220]
[24.35100555 -212.32989502]
[39.85062790 -218.93287659]
[37.18483353 -233.69409180]
[34.51903534 -248.45530701]
[31.85324097 -263.21652222]
[29.18744469 -277.97775269]
[26.52165031 -292.73895264]
[10.90418625 -298.16912842]
[0.21744069 -310.66268921]
[-2.69374585 -326.74813843]
[2.87201619 -342.01831055]
[15.30665207 -352.33782959]
[12.42137909 -367.05770874]
[9.53610706 -381.77761841]
[6.65083408 -396.49749756]
[-8.40602398 -397.35879517]
[-22.77539253 -401.93832397]
[-35.55400467 -409.94818115]
[-45.93857956 -420.88488770]
[-53.27634430 -434.06094360]
[-57.10602951 -448.64807129]
[-57.18690491 -463.72930908]
[-53.51388550 -478.35668945]
[-46.31785965 -491.61065674]
[-36.05117416 -502.65811157]
[-23.35920525 -510.80456543]
[-9.03977871 -515.53796387]
[6.00697517 -516.56066895]
[20.83520508 -513.80853271]
[34.51279449 -507.45443726]
[46.17995834 -497.89785767]
[55.10329056 -485.73953247]
[60.72185898 -471.74371338]
[62.68248367 -456.79022217]
[60.86191177 -441.81906128]
[55.37458420 -427.77127075]
[46.56544495 -415.52996826]
[34.98824310 -405.86459351]
[21.37072563 -399.38278198]
[24.25599861 -384.66287231]
[27.14127159 -369.94299316]
[30.02654266 -355.22308350]
[43.21024323 -351.65838623]
[53.62186432 -342.71820068]
[59.19240570 -330.10400391]
[58.78261948 -316.25442505]
[52.41548538 -303.87396240]
[41.28286743 -295.40475464]
[43.94866180 -280.64355469]
[46.61445999 -265.88232422]
[49.28025436 -251.12110901]
[51.94604874 -236.35989380]
[54.61184311 -221.59866333]
[67.78092957 -221.34460449]
[80.67824554 -218.64822388]
[92.85469055 -213.60168457]
[103.88591766 -206.37898254]
[113.38716125 -197.22999573]
[121.02662659 -186.47181702]
[126.53710175 -174.47778320]
[129.72528076 -161.66452026]
[130.47856140 -148.47743225]
[128.76902771 -135.37527466]
[124.65444183 -122.81416321]
[118.27633667 -111.23168182]
[109.85514069 -101.03169250]
[99.68254089 -92.57018280]
[88.11138916 -86.14289856]
[75.54347229 -81.97499084]
[77.32593536 -67.08126831]
[79.10839844 -52.18755341]
[80.89086914 -37.29383469]
[82.67333221 -22.40011787]
[93.93331146 -8.93981266]
[86.54589081 7.92753887]
[88.54990387 22.79306793]
[97.91822052 34.37253189]
[92.09399414 49.08269882]
[95.52505493 63.68502045]
[100.35105133 77.88747406]
[105.17705536 92.08993530]
[109.23516083 95.41344452]
[111.14229584 100.77405548]
[109.92845154 106.78766632]
[114.32945251 121.12751007]
[118.73044586 135.46736145]
[123.23807526 149.77404785]
[134.84518433 160.52513123]
[131.39793396 175.01531982]
[136.01194763 189.28805542]
[140.62596130 203.56079102]
[155.69754028 205.70756531]
[168.29113770 214.15081787]
[175.93869019 227.17137146]
[177.16955566 242.15957642]
[171.79296875 256.13818359]
[160.92535400 266.35388184]
[165.53936768 280.62661743]
[170.15336609 294.89935303]
[174.76737976 309.17208862]
[179.38139343 323.44482422]
[190.98849487 334.19589233]
[187.54124451 348.68609619]
[192.15525818 362.95883179]
[196.76927185 377.23156738]
[201.38327026 391.50430298]
[205.99728394 405.77700806]
[210.61129761 420.04974365]
[215.22531128 434.32247925]
[220.47378540 420.27069092]
[232.42201233 411.20205688]
[247.36769104 409.92663574]
[260.67974854 416.83963013]
[268.23327637 429.79895020]
[267.68774414 444.78903198]
[259.21221924 457.16500854]
[245.43289185 463.09207153]
[230.61944580 460.73367310]
[219.36187744 450.82031250]
[222.02766418 465.58154297]
[224.69346619 480.34274292]
[227.35926819 495.10397339]
[230.02505493 509.86520386]
[245.03321838 511.66702271]
[258.84283447 517.81402588]
[270.22595215 527.75970459]
[278.17044067 540.61956787]
[281.96981812 555.25024414]
[281.28628540 570.35070801]
[276.18060303 584.57824707]
[267.10678101 596.66778564]
[254.87162781 605.54431152]
[240.56312561 610.41857910]
[225.45355225 610.85705566]
[210.88645935 606.82086182]
[198.15711975 598.66888428]
[188.39741516 587.12591553]
[182.47520447 573.21844482]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 195]
[5 194]
[6 193]
[7 192]
[8 191]
[9 181]
[10 180]
[11 179]
[12 178]
[13 177]
[14 176]
[15 175]
[17 173]
[18 172]
[19 171]
[20 170]
[21 169]
[27 163]
[28 162]
[29 161]
[31 159]
[33 158]
[34 157]
[35 156]
[36 153]
[37 152]
[38 151]
[52 150]
[54 148]
[55 147]
[58 145]
[59 144]
[60 143]
[61 142]
[62 141]
[74 125]
[75 124]
[76 123]
[77 122]
[78 121]
[79 120]
[84 114]
[85 113]
[86 112]
[87 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
