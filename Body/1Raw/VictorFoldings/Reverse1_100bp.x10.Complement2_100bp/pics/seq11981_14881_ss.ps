%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCACAUACUUGUACUCCCACAAAAGAGCACACUUACUCCCAAAAUACAACAAUUACACCACCCACUCACUCGGGGUAACACAACACCAUUUAUACAUCUxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[71.77240753 722.31854248]
[56.75004578 722.42803955]
[41.84712982 720.53424072]
[27.32962990 716.67083740]
[13.45662212 710.90692139]
[0.47568816 703.34521484]
[-11.38151169 694.12078857]
[-21.90337181 683.39819336]
[-30.90211868 671.36883545]
[-38.21715546 658.24731445]
[-43.71794128 644.26788330]
[-47.30630493 629.67999268]
[-48.91820908 614.74395752]
[-48.52488708 599.72631836]
[-46.13335800 584.89514160]
[-41.78630447 570.51507568]
[-35.56129837 556.84271240]
[-27.56943893 544.12213135]
[-17.95334625 532.58026123]
[-6.88463306 522.42315674]
[5.43916893 513.83203125]
[18.79812431 506.96023560]
[32.95383072 501.93038940]
[47.65365601 498.83224487]
[62.63527298 497.72109985]
[63.52808762 482.74768066]
[64.42090607 467.77429199]
[65.31372070 452.80087280]
[66.20653534 437.82748413]
[59.24049377 424.66223145]
[67.78547668 411.34707642]
[68.67829132 396.37365723]
[69.57111359 381.40026855]
[70.46392822 366.42684937]
[67.72412109 359.56280518]
[71.48313904 351.23767090]
[72.59878540 336.27920532]
[65.82952881 323.01171875]
[74.57180786 309.82525635]
[75.68745422 294.86679077]
[76.80310822 279.90835571]
[65.03400421 272.97976685]
[57.36147690 261.60165405]
[55.33011627 247.96264648]
[59.39272690 234.71600342]
[68.81098938 224.46356201]
[81.78889465 219.24467468]
[83.12712860 204.30448914]
[76.55615234 190.93768311]
[85.49378967 177.88282776]
[86.83202362 162.94264221]
[77.11424255 151.71321106]
[78.25857544 136.54266357]
[90.10292816 126.42590332]
[91.44116211 111.48571777]
[85.73317719 98.72208405]
[93.61865234 87.17604828]
[87.14339447 72.74061584]
[95.98531342 60.75438690]
[97.32354736 45.81420135]
[98.66178131 30.87401581]
[99.88875580 15.92428207]
[100.11208344 0.92594427]
[99.44229889 -14.05909443]
[98.77251434 -29.04413414]
[98.10272980 -44.02917099]
[97.43294525 -59.01420975]
[96.76316071 -73.99925232]
[96.09337616 -88.98429108]
[95.31204987 -103.96392822]
[86.76706696 -117.27909851]
[93.73310852 -130.44433594]
[92.84029388 -145.41773987]
[90.39456940 -160.21701050]
[86.42247009 -174.68153381]
[82.45037079 -189.14605713]
[75.10752106 -176.06620789]
[61.11993027 -170.64889526]
[46.88254166 -175.37083435]
[38.90449524 -188.07322693]
[40.83324814 -202.94871521]
[51.78699875 -213.19641113]
[66.75784302 -214.13121033]
[78.90235138 -205.32421875]
[76.45662689 -220.12348938]
[74.01089478 -234.92276001]
[71.56517029 -249.72203064]
[69.11944580 -264.52130127]
[66.67371368 -279.32058716]
[51.66621017 -280.95681763]
[37.65710831 -286.58245850]
[25.68598366 -295.77999878]
[16.64116859 -307.86694336]
[11.19385052 -321.94631958]
[9.74825573 -336.97338867]
[12.41165733 -351.83303833]
[18.98641396 -365.42254639]
[28.98463249 -376.73352051]
[41.66438293 -384.92660522]
[56.08473969 -389.39379883]
[71.17562103 -389.80364990]
[85.81717682 -386.12567139]
[98.92291260 -378.63287354]
[109.52028656 -367.88119507]
[116.82291412 -354.66854858]
[120.28888702 -339.97537231]
[119.66101074 -324.89199829]
[114.98587036 -310.53768921]
[106.61039734 -297.97769165]
[95.15611267 -288.14398193]
[81.47298431 -281.76629639]
[83.91871643 -266.96704102]
[86.36444092 -252.16775513]
[88.81016541 -237.36848450]
[91.25589752 -222.56921387]
[93.70162201 -207.76994324]
[96.91489410 -193.11816406]
[100.88699341 -178.65364075]
[104.85909271 -164.18911743]
[108.78492737 -178.66625977]
[117.89114380 -190.58586121]
[130.82688904 -198.17970276]
[145.67321777 -200.32128906]
[160.22778320 -196.69293213]
[172.33146667 -187.83288574]
[180.18879700 -175.05546570]
[182.63415527 -160.25613403]
[179.30480957 -145.63027954]
[170.69464111 -133.34756470]
[158.08090210 -125.23007202]
[143.33479309 -122.48195648]
[128.64379883 -125.51090240]
[116.18722534 -133.86758423]
[107.81369781 -146.31056213]
[108.70651245 -131.33715820]
[117.18763733 -119.09297943]
[110.28545380 -104.85674286]
[113.82151031 -98.36689758]
[111.07841492 -89.65407562]
[111.74819946 -74.66903687]
[112.41798401 -59.68399429]
[113.08776855 -44.69895554]
[113.75755310 -29.71391869]
[114.42733765 -14.72887993]
[115.09712219 0.25615913]
[124.45815277 -11.46438599]
[138.88951111 -15.55531216]
[153.00868225 -10.49080372]
[161.54954529 1.84020174]
[161.32656860 16.83854485]
[152.42292786 28.91021347]
[138.15945435 33.55277634]
[123.85607147 29.03466797]
[114.84720612 17.03993034]
[117.48451233 23.94401741]
[113.60196686 32.21224976]
[112.26373291 47.15243530]
[110.92549896 62.09262085]
[117.49647522 75.45942688]
[108.55883789 88.51428223]
[114.26682281 101.27791595]
[106.38134766 112.82395172]
[105.04311371 127.76413727]
[114.90097809 139.82482910]
[113.33098602 154.95724487]
[101.77220917 164.28088379]
[100.43397522 179.22106934]
[106.90923309 193.65649414]
[98.06731415 205.64273071]
[96.72908020 220.58291626]
[110.35108185 229.95483398]
[117.34795380 244.83230591]
[115.89568329 261.11444092]
[106.48497009 274.36563110]
[91.76155853 281.02398682]
[90.64591217 295.98245239]
[89.53025818 310.94088745]
[96.21971893 325.27832031]
[87.55724335 337.39486694]
[86.44158936 352.35333252]
[85.43733215 367.31967163]
[84.54451752 382.29306030]
[83.65170288 397.26647949]
[82.75888062 412.23986816]
[89.66106415 426.47610474]
[81.17993927 438.72030640]
[80.28712463 453.69369507]
[79.39431000 468.66711426]
[78.50149536 483.64050293]
[77.60868073 498.61392212]
[92.35210419 501.49746704]
[106.57962036 506.32046509]
[120.03732300 512.99682617]
[132.48504639 521.40740967]
[143.70062256 531.40209961]
[153.48393250 542.80255127]
[161.66035461 555.40527344]
[168.08399963 568.98541260]
[172.64019775 583.30059814]
[175.24765015 598.09539795]
[175.85981750 613.10565186]
[174.46580505 628.06359863]
[171.09045410 642.70227051]
[165.79402161 656.76043701]
[158.67102051 669.98712158]
[149.84857178 682.14642334]
[139.48411560 693.02124023]
[127.76263428 702.41748047]
[114.89329529 710.16760254]
[101.10578156 716.13311768]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 190]
[26 189]
[27 188]
[28 187]
[29 186]
[31 184]
[32 183]
[33 182]
[34 181]
[36 180]
[37 179]
[39 177]
[40 176]
[41 175]
[47 170]
[48 169]
[50 167]
[51 166]
[54 163]
[55 162]
[57 160]
[59 158]
[60 157]
[61 156]
[62 154]
[63 145]
[64 144]
[65 143]
[66 142]
[67 141]
[68 140]
[69 139]
[70 137]
[72 135]
[73 134]
[74 119]
[75 118]
[76 117]
[84 116]
[85 115]
[86 114]
[87 113]
[88 112]
[89 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
