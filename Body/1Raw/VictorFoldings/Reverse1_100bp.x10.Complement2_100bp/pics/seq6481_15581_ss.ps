%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[103.83720398 624.46264648]
[89.32805634 628.38500977]
[74.39019012 630.04650879]
[59.37376785 629.40814209]
[44.63079834 626.48492432]
[30.50687599 621.34533691]
[17.33308601 614.10992432]
[5.41824150 604.94818115]
[-4.95835590 594.07501221]
[-13.55346489 581.74517822]
[-20.16560364 568.24774170]
[-24.63977242 553.89916992]
[-26.87109184 539.03576660]
[-26.80725670 524.00585938]
[-24.44976425 509.16195679]
[-19.85387421 494.85186768]
[-13.12732506 481.41110229]
[-4.42779350 469.15475464]
[6.04078960 458.37005615]
[18.03302574 449.30990601]
[31.26779938 442.18661499]
[45.43487167 437.16720581]
[60.20214081 434.36929321]
[75.22344208 433.85852051]
[77.00590515 418.96481323]
[78.78837585 404.07110596]
[80.45991516 389.16452026]
[82.02043915 374.24591064]
[83.58096313 359.32730103]
[77.20972443 345.86416626]
[86.34074402 332.94381714]
[87.45639038 317.98535156]
[88.12617493 303.00033569]
[88.79595947 288.01528931]
[89.24256897 273.02194214]
[89.46589661 258.02359009]
[89.68922424 243.02525330]
[82.14226532 230.18420410]
[90.08417511 216.50076294]
[90.30750275 201.50242615]
[82.76055145 188.66136169]
[90.70245361 174.97792053]
[90.92578125 159.97958374]
[82.72835541 151.08413696]
[82.79167175 138.58694458]
[91.62718201 129.19032288]
[92.07379150 114.19698334]
[83.74431610 99.63689423]
[92.71562195 85.46325684]
[92.93894958 70.46492004]
[93.16227722 55.46658325]
[93.38560486 40.46824265]
[93.60893250 25.46990776]
[90.72764587 19.51930046]
[91.21143341 13.85688210]
[94.06884003 10.03009987]
[94.73862457 -4.95493937]
[95.40840912 -19.93997765]
[96.07819366 -34.92501831]
[85.06798553 -24.73800087]
[70.09220123 -23.88593292]
[57.99758148 -32.75836563]
[54.31361008 -47.29893875]
[60.72455597 -60.85990524]
[74.29941559 -67.24137115]
[88.83195496 -63.52581024]
[97.67860413 -51.41015625]
[99.90372467 -66.24420166]
[102.12884521 -81.07824707]
[104.35395813 -95.91229248]
[102.44184113 -100.76933289]
[102.57107544 -105.41008759]
[104.31743622 -109.09319305]
[107.02394104 -111.35309601]
[109.90921783 -126.07299042]
[112.79448700 -140.79287720]
[115.67976379 -155.51277161]
[118.56503296 -170.23266602]
[119.90326691 -185.17285156]
[119.56829071 -200.16911316]
[119.12168884 -215.16246033]
[118.67507935 -230.15580750]
[118.22847748 -245.14915466]
[107.00727844 -255.95297241]
[106.76794434 -271.16473389]
[117.13687897 -281.79583740]
[116.69027710 -296.78918457]
[116.24366760 -311.78253174]
[108.09891510 -325.34622192]
[115.45384979 -338.29821777]
[115.00724030 -353.29156494]
[114.56063843 -368.28491211]
[114.11402893 -383.27828979]
[113.66742706 -398.27163696]
[113.22081757 -413.26498413]
[98.69535828 -417.49182129]
[86.18812561 -426.00207520]
[76.92446136 -437.96197510]
[71.81191254 -452.19985962]
[71.35136414 -467.32080078]
[75.58793640 -481.84344482]
[84.10656738 -494.34497070]
[96.07269287 -503.60061646]
[110.31398773 -508.70361328]
[125.43524170 -509.15402222]
[139.95501709 -504.90771484]
[152.45083618 -496.38073730]
[161.69847107 -484.40838623]
[166.79193115 -470.16369629]
[167.23220825 -455.04214478]
[162.97618103 -440.52520752]
[154.44081116 -428.03509521]
[142.46229553 -418.79550171]
[128.21417236 -413.71157837]
[128.66078186 -398.71823120]
[129.10737610 -383.72488403]
[129.55398560 -368.73153687]
[130.00059509 -353.73818970]
[130.44720459 -338.74484253]
[138.56001282 -326.25357056]
[131.23701477 -312.22915649]
[131.68362427 -297.23580933]
[132.13023376 -282.24246216]
[143.11357117 -272.24734497]
[143.78007507 -257.04830933]
[133.22181702 -245.59576416]
[133.66842651 -230.60241699]
[134.11503601 -215.60906982]
[134.56164551 -200.61570740]
[137.90289307 -194.02346802]
[134.90161133 -185.39617920]
[142.32772827 -198.42893982]
[154.12869263 -207.68835449]
[168.55392456 -211.80087280]
[183.46351624 -210.15640259]
[196.64570618 -202.99891663]
[206.14500427 -191.39015198]
[210.55224609 -177.05223083]
[209.21365356 -162.11207581]
[202.32777405 -148.78598022]
[190.91610718 -139.05079651]
[176.67150879 -134.35066223]
[161.70706177 -135.38284302]
[148.24266052 -141.99420166]
[138.27568054 -153.20397949]
[133.28492737 -167.34739685]
[130.39965820 -152.62750244]
[127.51438141 -137.90760803]
[124.62910461 -123.18771362]
[121.74383545 -108.46782684]
[119.18800354 -93.68717194]
[116.96288300 -78.85312653]
[114.73777008 -64.01908112]
[112.51264954 -49.18503952]
[111.06323242 -34.25522995]
[110.39344788 -19.27019310]
[109.72366333 -4.28515434]
[109.05387878 10.69988441]
[108.60726929 25.69323540]
[108.38394165 40.69157028]
[108.16061401 55.68991089]
[107.93728638 70.68824768]
[107.71395874 85.68658447]
[115.30745697 94.51721954]
[115.04737091 106.16082764]
[107.06713867 114.64358521]
[106.62053680 129.63693237]
[115.72265625 145.64421082]
[105.92412567 160.20291138]
[105.70079041 175.20124817]
[113.23177338 189.11508179]
[105.30583954 201.72575378]
[105.08251190 216.72409058]
[112.61348724 230.63792419]
[104.68756104 243.24858093]
[104.46423340 258.24691772]
[104.24090576 273.24526978]
[107.12219238 279.19586182]
[106.63840485 284.85827637]
[103.78099823 288.68505859]
[103.11121368 303.67010498]
[102.44142914 318.65515137]
[104.57834625 322.43502808]
[105.32610321 326.30871582]
[104.82577515 329.82794189]
[103.34954834 332.63641357]
[101.25934601 334.50433350]
[107.51895905 349.03457642]
[98.49956512 360.88784790]
[96.93904114 375.80642700]
[95.37851715 390.72503662]
[97.59815979 399.58569336]
[93.68209076 405.85357666]
[91.89962769 420.74728394]
[90.11715698 435.64099121]
[104.59370422 439.68203735]
[118.28368378 445.88568115]
[130.86618042 454.10644531]
[142.04623413 464.15167236]
[151.56179810 475.78588867]
[159.18977356 488.73632812]
[164.75138855 502.69946289]
[168.11624146 517.34796143]
[169.20547485 532.33843994]
[167.99353027 547.31945801]
[164.50885010 561.93988037]
[158.83309937 575.85705566]
[151.09933472 588.74456787]
[141.48884583 600.30047607]
[130.22689819 610.25384521]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 195]
[25 194]
[26 193]
[27 191]
[28 190]
[29 189]
[31 187]
[32 182]
[33 181]
[34 180]
[35 177]
[36 176]
[37 175]
[39 173]
[40 172]
[42 170]
[43 169]
[46 167]
[47 166]
[49 163]
[50 162]
[51 161]
[52 160]
[53 159]
[56 158]
[57 157]
[58 156]
[59 155]
[67 154]
[68 153]
[69 152]
[70 151]
[74 150]
[75 149]
[76 148]
[77 147]
[78 146]
[79 131]
[80 129]
[81 128]
[82 127]
[83 126]
[86 123]
[87 122]
[88 121]
[90 119]
[91 118]
[92 117]
[93 116]
[94 115]
[95 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
