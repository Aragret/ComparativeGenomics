%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACAGUCUAAGUGUUAGACUACAAAACCAAUUUGAUAUAAAUGUUCUCCUUUUGGGCCAUUACUACAGCCCCAACUCCCUAUCCUCCUCUUACCCCCUAxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[85.04643250 657.92987061]
[71.55300140 664.51470947]
[57.43608475 669.62786865]
[42.85564041 673.21154785]
[27.97687149 675.22509766]
[12.96836662 675.64569092]
[-1.99981499 674.46856689]
[-16.75807381 671.70703125]
[-31.13918495 667.39245605]
[-44.98020172 661.57366943]
[-58.12429810 654.31658936]
[-70.42253113 645.70349121]
[-81.73556519 635.83197021]
[-91.93520355 624.81384277]
[-100.90588379 612.77392578]
[-108.54595947 599.84869385]
[-114.76885986 586.18463135]
[-119.50408173 571.93646240]
[-122.69795990 557.26568604]
[-124.31431580 542.33856201]
[-124.33483124 527.32415771]
[-122.75926971 512.39270020]
[-119.60549164 497.71322632]
[-114.90922546 483.45220947]
[-108.72368622 469.77114868]
[-101.11895752 456.82510376]
[-92.18121338 444.76074219]
[-82.01171875 433.71475220]
[-70.72570801 423.81234741]
[-58.45104980 415.16567993]
[-45.32683945 407.87271118]
[-31.50177193 402.01611328]
[-17.13250351 397.66226196]
[-2.38184643 394.86044312]
[12.58306313 393.64239502]
[27.59266090 394.02197266]
[42.47687531 395.99484253]
[46.01654816 381.41848755]
[49.55622101 366.84210205]
[53.09589386 352.26571655]
[56.63556671 337.68936157]
[60.17523956 323.11297607]
[63.06051254 308.39309692]
[65.28562927 293.55905151]
[67.51074219 278.72500610]
[69.73586273 263.89096069]
[71.96098328 249.05691528]
[74.18609619 234.22286987]
[76.41121674 219.38882446]
[78.63632965 204.55477905]
[80.86145020 189.72073364]
[75.09773254 175.98651123]
[84.79656219 163.48678589]
[86.80057526 148.62126160]
[88.58303833 133.72753906]
[90.36550903 118.83381653]
[92.14797211 103.94010162]
[90.47402954 101.39305878]
[89.68985748 98.18064880]
[90.04367828 94.63124084]
[91.65893555 91.16033173]
[94.50558472 88.22273254]
[97.17138672 73.46150970]
[99.83718109 58.70029449]
[102.50297546 43.93907547]
[104.72808838 29.10503387]
[106.51055908 14.21131611]
[108.29302216 -0.68240130]
[110.07549286 -15.57611847]
[111.85795593 -30.46983528]
[98.62010956 -45.58403015]
[100.73297119 -65.25734711]
[116.38774872 -76.85227203]
[117.50339508 -91.81072235]
[118.61904144 -106.76918030]
[119.73469543 -121.72763062]
[107.23176575 -128.31727600]
[98.21208954 -139.14176941]
[94.01207733 -152.54570007]
[95.23434448 -166.49549866]
[101.66146088 -178.88789368]
[112.29374695 -187.86711121]
[125.50465393 -192.10269165]
[126.84288788 -207.04287720]
[128.18112183 -221.98306274]
[129.51936340 -236.92324829]
[130.85758972 -251.86343384]
[132.19583130 -266.80361938]
[133.53405762 -281.74380493]
[127.05879974 -296.17922974]
[135.90072632 -308.16546631]
[137.23895264 -323.10565186]
[138.57719421 -338.04583740]
[139.91542053 -352.98602295]
[125.52446747 -357.41256714]
[112.36851501 -364.73474121]
[101.02268219 -374.63250732]
[91.98295593 -386.67315674]
[85.64451599 -400.33032227]
[82.28445435 -415.00695801]
[82.04965210 -430.06146240]
[84.95038605 -444.83575439]
[90.85984039 -458.68392944]
[99.51967621 -471.00061035]
[110.55133057 -481.24737549]
[123.47254181 -488.97628784]
[137.71846008 -493.84945679]
[152.66629028 -495.65383911]
[167.66259766 -494.31057739]
[182.05181885 -489.87838745]
[195.20487976 -482.55102539]
[206.54682922 -472.64880371]
[215.58181763 -460.60461426]
[221.91488647 -446.94494629]
[225.26916504 -432.26699829]
[225.49804688 -417.21240234]
[222.59150696 -402.43923950]
[216.67660522 -388.59338379]
[208.01191711 -376.28012085]
[196.97622681 -366.03768921]
[184.05198669 -358.31387329]
[169.80415344 -353.44628906]
[154.85560608 -351.64779663]
[153.51737976 -336.70761108]
[152.17913818 -321.76742554]
[150.84091187 -306.82723999]
[157.41188049 -293.46041870]
[148.47424316 -280.40557861]
[147.13600159 -265.46539307]
[145.79777527 -250.52520752]
[144.45953369 -235.58502197]
[143.12130737 -220.64483643]
[141.78306580 -205.70465088]
[140.44483948 -190.76446533]
[154.32040405 -182.83860779]
[163.38343811 -169.60700989]
[165.77761841 -153.69000244]
[160.97344971 -138.26663208]
[149.88427734 -126.43980408]
[134.69314575 -120.61198425]
[133.57749939 -105.65352631]
[132.46185303 -90.69507599]
[131.34620667 -75.73662567]
[139.89233398 -70.05028534]
[145.34965515 -61.26090622]
[146.67646790 -50.91912079]
[143.56690979 -40.88248444]
[136.51800537 -32.98183441]
[126.75167084 -28.68737030]
[124.96920776 -13.79365253]
[123.18674469 1.10006464]
[121.40427399 15.99378204]
[119.62181091 30.88749886]
[121.24638367 33.17199326]
[122.06391907 36.23764801]
[121.77236176 39.78030014]
[120.18522644 43.39215851]
[117.26419067 46.60487366]
[114.59839630 61.36608887]
[111.93260193 76.12730408]
[109.26680756 90.88852692]
[107.04168701 105.72256470]
[105.25922394 120.61628723]
[103.47675323 135.51000977]
[101.69429016 150.40371704]
[103.94087219 156.62179565]
[102.87062836 162.20315552]
[99.63059998 165.71189880]
[105.23516846 180.50715637]
[95.69549561 191.94584656]
[93.47037506 206.77989197]
[91.24525452 221.61393738]
[89.02014160 236.44798279]
[86.79502106 251.28202820]
[84.56990814 266.11605835]
[82.34478760 280.95010376]
[80.11967468 295.78414917]
[77.89455414 310.61819458]
[90.56950378 302.59661865]
[105.23378754 305.75238037]
[113.48703003 318.27774048]
[110.60140991 332.99755859]
[98.22992706 341.47967529]
[83.45954132 338.86517334]
[74.75161743 326.65264893]
[71.21194458 341.22903442]
[67.67227173 355.80538940]
[64.13259888 370.38177490]
[60.59292221 384.95816040]
[57.05325317 399.53451538]
[71.18460083 404.60769653]
[84.69664764 411.15420532]
[97.43627167 419.09988403]
[109.25913239 428.35473633]
[120.03127289 438.81384277]
[129.63063049 450.35873413]
[137.94842529 462.85858154]
[144.89044189 476.17175293]
[150.37799072 490.14739990]
[154.34890747 504.62719727]
[156.75819397 519.44702148]
[157.57855225 534.43896484]
[156.80070496 549.43322754]
[154.43342590 564.25982666]
[150.50357056 578.75079346]
[145.05566406 592.74194336]
[138.15142822 606.07476807]
[129.86909485 618.59814453]
[120.30250549 630.17016602]
[109.56005859 640.65979004]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 190]
[38 189]
[39 188]
[40 187]
[41 186]
[42 185]
[43 178]
[44 177]
[45 176]
[46 175]
[47 174]
[48 173]
[49 172]
[50 171]
[51 170]
[53 168]
[54 165]
[55 164]
[56 163]
[57 162]
[62 161]
[63 160]
[64 159]
[65 158]
[66 153]
[67 152]
[68 151]
[69 150]
[70 149]
[73 143]
[74 142]
[75 141]
[76 140]
[83 134]
[84 133]
[85 132]
[86 131]
[87 130]
[88 129]
[89 128]
[91 126]
[92 125]
[93 124]
[94 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
