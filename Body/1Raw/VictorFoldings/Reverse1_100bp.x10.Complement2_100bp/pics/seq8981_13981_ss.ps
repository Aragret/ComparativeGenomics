%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUACCAACUAUAACGAUCCCACCGCGAAGGUUAAUCCACGUACUCAUCCACCGGACGUCAUUACAAUCGCCAAUCCGCAUGCCGGUCCCGAUAACCAxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[87.74624634 650.79394531]
[78.25066376 638.95336914]
[73.67731476 624.48101807]
[74.64472198 609.33416748]
[81.02203369 595.56121826]
[91.94678497 585.02484131]
[105.94149017 579.15008545]
[105.49488068 564.15673828]
[105.04827881 549.16339111]
[104.60166931 534.17004395]
[104.15506744 519.17669678]
[103.70845795 504.18334961]
[95.59564972 491.69210815]
[102.91864014 477.66766357]
[102.47203064 462.67431641]
[101.80224609 447.68927002]
[100.90943146 432.71588135]
[92.42830658 420.47171021]
[99.33049011 406.23547363]
[98.43767548 391.26205444]
[97.54485321 376.28866577]
[96.54059601 361.32229614]
[95.42494965 346.36386108]
[94.30929565 331.40539551]
[93.19364929 316.44696045]
[92.07800293 301.48849487]
[83.41551971 289.37194824]
[90.10498047 275.03451538]
[79.52147675 285.66418457]
[64.52244568 285.83468628]
[53.70001602 275.44839478]
[53.25376892 260.45504761]
[63.43933487 249.44348145]
[78.42195892 248.72166443]
[89.61849213 258.70220947]
[89.84181976 243.70385742]
[90.06514740 228.70552063]
[82.51819611 215.86447144]
[90.46009827 202.18103027]
[90.68342590 187.18267822]
[90.90675354 172.18434143]
[91.13008118 157.18600464]
[91.35340881 142.18766785]
[88.30984497 135.45280457]
[91.69337463 126.96813965]
[92.13998413 111.97478485]
[85.68240356 99.57352448]
[92.86666870 87.57860565]
[92.30845642 72.58899689]
[90.74793243 57.67039490]
[89.18740845 42.75178909]
[87.62689209 27.83318329]
[86.06636810 12.91457939]
[73.01219940 7.88948774]
[63.44233704 -2.22159100]
[59.18295288 -15.40627480]
[61.01102448 -29.07402039]
[68.51329803 -40.56509018]
[80.17794037 -47.66813278]
[78.83970642 -62.60831833]
[76.83569336 -77.47384644]
[74.16989136 -92.23506165]
[71.50409698 -106.99627686]
[61.43740463 -119.20169830]
[66.78964996 -133.10144043]
[56.72295761 -145.30685425]
[62.07519913 -159.20658875]
[59.40940475 -173.96781921]
[56.74361038 -188.72903442]
[54.07781219 -203.49024963]
[51.41201782 -218.25146484]
[34.77933121 -222.52270508]
[21.72901726 -233.59883118]
[14.85533047 -249.21459961]
[15.49688053 -266.20877075]
[23.47623825 -281.16415405]
[37.14535141 -291.09466553]
[34.04124069 -305.76998901]
[30.93712997 -320.44528198]
[20.51149750 -332.34558105]
[25.44752121 -346.39849854]
[22.34341240 -361.07379150]
[19.23930168 -375.74911499]
[8.81367016 -387.64938354]
[13.74969482 -401.70233154]
[10.64558411 -416.37762451]
[-4.42163754 -416.86981201]
[-18.93305588 -420.95419312]
[-32.04499435 -428.39331055]
[-42.99514389 -438.75466919]
[-51.14687347 -451.43585205]
[-56.02625656 -465.69964600]
[-57.34960938 -480.71670532]
[-55.03999329 -495.61398315]
[-49.23168945 -509.52539062]
[-40.26238251 -521.64208984]
[-28.65353966 -531.25970459]
[-15.08008003 -537.81903076]
[-0.33114722 -540.93872070]
[14.73577404 -540.43737793]
[29.24471283 -536.34417725]
[42.35213852 -528.89715576]
[53.29600143 -518.52911377]
[61.44004440 -505.84301758]
[66.31077576 -491.57629395]
[67.62502289 -476.55841064]
[65.30638123 -461.66253662]
[59.48964310 -447.75466919]
[50.51299286 -435.64337158]
[38.89831924 -426.03280640]
[25.32088661 -419.48171997]
[28.42499733 -404.80642700]
[38.62860107 -393.95581055]
[33.91460419 -378.85321045]
[37.01871490 -364.17791748]
[40.12282562 -349.50262451]
[50.32643127 -338.65200806]
[45.61243057 -323.54937744]
[48.71654129 -308.87408447]
[51.82065201 -294.19879150]
[64.64762115 -292.14630127]
[76.04165649 -285.84149170]
[84.63607788 -276.01586914]
[89.39157867 -263.82458496]
[89.72192383 -250.71086121]
[85.56609344 -238.23501587]
[77.39814758 -227.88883972]
[66.17323303 -220.91726685]
[68.83902740 -206.15603638]
[71.50482941 -191.39482117]
[74.17062378 -176.63360596]
[76.83641815 -161.87239075]
[86.71243286 -150.72279358]
[81.55086517 -135.76722717]
[91.42688751 -124.61763763]
[86.26531982 -109.66207123]
[88.93111420 -94.90085602]
[91.59690857 -80.13964081]
[101.01712799 -91.81266022]
[115.91703033 -93.54267120]
[127.76126862 -84.33865356]
[129.76492310 -69.47307587]
[120.78022003 -57.46162033]
[105.95399475 -55.18499756]
[93.77989197 -63.94655228]
[95.11812592 -49.00636673]
[109.93903351 -42.56796265]
[119.54599762 -29.45834351]
[121.24052429 -13.19963837]
[114.46592712 1.78036308]
[100.98497009 11.35405636]
[102.54549408 26.27266121]
[104.10601807 41.19126511]
[105.66654205 56.10987091]
[107.22706604 71.02847290]
[115.26982880 58.36696243]
[128.83609009 51.96722031]
[143.72218323 53.81227875]
[155.31549072 63.33042526]
[160.02371216 77.57236481]
[156.38793945 92.12506104]
[145.53475952 102.47922516]
[130.82716370 105.42649078]
[116.82243347 100.05361938]
[107.86001587 88.02521515]
[114.31759644 100.42647552]
[107.13333130 112.42139435]
[106.68672180 127.41474152]
[106.35174561 142.41099548]
[106.12841797 157.40933228]
[105.90509033 172.40766907]
[105.68176270 187.40600586]
[105.45843506 202.40435791]
[112.98941803 216.31819153]
[105.06348419 228.92884827]
[104.84015656 243.92718506]
[104.61682892 258.92553711]
[105.06343842 273.91888428]
[113.80571747 287.10534668]
[107.03645325 300.37286377]
[108.15210724 315.33129883]
[109.26775360 330.28976440]
[110.38339996 345.24819946]
[111.49904633 360.20666504]
[115.25806427 368.53176880]
[112.51826477 375.39584351]
[113.41107941 390.36923218]
[114.30389404 405.34265137]
[122.84887695 418.65783691]
[115.88283539 431.82305908]
[116.77565002 446.79647827]
[120.09154510 452.51629639]
[120.03025055 458.19900513]
[117.46537781 462.22772217]
[117.91198730 477.22106934]
[126.05673981 490.78475952]
[118.70180511 503.73675537]
[119.14841461 518.73010254]
[119.59501648 533.72344971]
[120.04162598 548.71679688]
[120.48822784 563.71014404]
[120.93483734 578.70349121]
[135.25439453 583.73486328]
[146.78691101 593.60223389]
[153.97270203 606.97119141]
[155.83995056 622.03369141]
[152.13612366 636.75256348]
[143.36213684 649.13732910]
[130.70458984 657.51293945]
[115.87532806 660.74670410]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 202]
[8 201]
[9 200]
[10 199]
[11 198]
[12 197]
[14 195]
[15 194]
[16 191]
[17 190]
[19 188]
[20 187]
[21 186]
[22 184]
[23 183]
[24 182]
[25 181]
[26 180]
[28 178]
[35 177]
[36 176]
[37 175]
[39 173]
[40 172]
[41 171]
[42 170]
[43 169]
[45 168]
[46 167]
[48 165]
[49 155]
[50 154]
[51 153]
[52 152]
[53 151]
[59 146]
[60 145]
[61 138]
[62 137]
[63 136]
[65 134]
[67 132]
[68 131]
[69 130]
[70 129]
[71 128]
[77 120]
[78 119]
[79 118]
[81 116]
[82 115]
[83 114]
[85 112]
[86 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
