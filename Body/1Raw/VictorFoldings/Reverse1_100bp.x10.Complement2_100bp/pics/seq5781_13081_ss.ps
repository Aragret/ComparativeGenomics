%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[79.28215790 506.18414307]
[65.32847595 500.15396118]
[54.74819183 489.23947144]
[49.15472412 475.10507202]
[49.40103531 459.90612793]
[55.44956970 445.96038818]
[66.37796783 435.39447021]
[80.51972198 429.81961060]
[80.74304962 414.82125854]
[80.96637726 399.82293701]
[81.18970490 384.82458496]
[81.41303253 369.82626343]
[80.29738617 354.86779785]
[77.85165405 340.06854248]
[75.40592957 325.26925659]
[72.96019745 310.47000122]
[70.51447296 295.67071533]
[66.01859283 309.98110962]
[57.87488937 322.57794189]
[46.67125320 332.55181885]
[33.21648788 339.18276978]
[18.48190498 341.99203491]
[3.53120685 340.77688599]
[-10.55630207 335.62496948]
[-22.76363373 326.90826416]
[-32.20952988 315.25601196]
[-38.21208191 301.50939941]
[-40.33796310 286.66079712]
[-38.43370056 271.78216553]
[-32.63676834 257.94760132]
[-23.36565018 246.15579224]
[-11.28963661 237.25805664]
[2.71949553 231.89668274]
[17.65041351 230.45874023]
[32.42524338 233.04803467]
[45.97737503 239.47763062]
[57.32847214 249.28337097]
[65.65908051 261.75738525]
[70.36803436 276.00030518]
[72.59314728 261.16625977]
[74.81826782 246.33219910]
[76.82228088 231.46667480]
[78.60474396 216.57295227]
[72.43466187 203.01643372]
[81.75703430 190.23347473]
[83.53949738 175.33975220]
[77.36941528 161.78323364]
[86.69178009 149.00027466]
[88.47425079 134.10655212]
[90.25671387 119.21283722]
[92.03917694 104.31912231]
[90.10931396 100.98026276]
[89.66053772 96.80695343]
[91.03252411 92.47975159]
[94.24825287 88.80566406]
[88.86458588 73.92861176]
[98.57350922 62.63320923]
[101.01923370 47.83393860]
[103.46496582 33.03466797]
[94.53144073 20.27418327]
[97.22257996 5.30045891]
[109.44280243 -3.13765192]
[111.88852692 -17.93692207]
[114.33425903 -32.73619461]
[116.77998352 -47.53546524]
[119.22570801 -62.33473587]
[121.67144012 -77.13400269]
[111.30685425 -66.29078674]
[97.12008667 -61.41886902]
[82.28049469 -63.60665512]
[70.10327148 -72.36538696]
[63.30885315 -85.73834229]
[63.41512680 -100.73796082]
[70.39834595 -114.01330566]
[82.69844055 -122.59860992]
[97.56755066 -124.57591248]
[111.68386078 -119.50347137]
[121.89376831 -108.51448822]
[125.91634369 -94.06389618]
[130.74234009 -108.26634979]
[135.56834412 -122.46881104]
[134.65716553 -129.01718140]
[136.85925293 -134.25625610]
[140.75523376 -137.01855469]
[146.00195312 -151.07102966]
[151.24867249 -165.12350464]
[156.49539185 -179.17597961]
[161.74211121 -193.22843933]
[166.98883057 -207.28091431]
[160.67662048 -221.52148438]
[166.19772339 -235.69795227]
[179.81283569 -241.62791443]
[184.95478821 -255.71905518]
[189.99171448 -269.84808350]
[195.02862549 -283.97711182]
[200.06555176 -298.10614014]
[205.10246277 -312.23516846]
[210.13937378 -326.36419678]
[196.97100830 -333.61611938]
[185.13655090 -342.88659668]
[174.94253540 -353.93548584]
[166.65301514 -366.47662354]
[160.48269653 -380.18515015]
[156.59143066 -394.70596313]
[155.07998657 -409.66296387]
[155.98751831 -424.66870117]
[159.29052734 -439.33453369]
[164.90345764 -453.28054810]
[172.68090820 -466.14550781]
[182.42144775 -477.59619141]
[193.87274170 -487.33599854]
[206.73820496 -495.11264038]
[220.68457031 -500.72470093]
[235.35058594 -504.02679443]
[250.35639954 -504.93338013]
[265.31329346 -503.42098999]
[279.83386230 -499.52880859]
[293.54199219 -493.35760498]
[306.08261108 -485.06729126]
[317.13085938 -474.87258911]
[326.40060425 -463.03753662]
[333.65170288 -449.86874390]
[338.69631958 -435.70724487]
[341.40383911 -420.91989136]
[341.70410156 -405.88973999]
[339.58932495 -391.00604248]
[335.11431885 -376.65438843]
[328.39492798 -363.20648193]
[319.60528564 -351.01065063]
[308.97299194 -340.38284302]
[296.77349854 -331.59826660]
[283.32275391 -324.88455200]
[268.96920776 -320.41552734]
[254.08465576 -318.30700684]
[239.05461121 -318.61355591]
[224.26840210 -321.32727051]
[219.23149109 -307.19824219]
[214.19458008 -293.06921387]
[209.15765381 -278.94018555]
[204.12074280 -264.81115723]
[199.08383179 -250.68212891]
[199.79873657 -243.32614136]
[193.86531067 -236.38119507]
[200.26255798 -222.97929382]
[195.14181519 -208.65335083]
[181.04130554 -202.03419495]
[175.79458618 -187.98171997]
[170.54786682 -173.92926025]
[165.30114746 -159.87678528]
[160.05442810 -145.82431030]
[154.80770874 -131.77183533]
[149.77079773 -117.64280701]
[144.94479370 -103.44035339]
[140.11880493 -89.23789978]
[136.47070312 -74.68827820]
[134.02497864 -59.88900757]
[131.57925415 -45.08973694]
[129.13352966 -30.29046631]
[126.68779755 -15.49119568]
[124.24207306 -0.69192451]
[133.09773254 11.22918701]
[130.82823181 26.27259254]
[118.26423645 35.48039246]
[115.81851196 50.27966309]
[113.37277985 65.07893372]
[118.93138123 78.89744568]
[109.04752350 91.25138855]
[106.93289948 106.10158539]
[105.15042877 120.99530792]
[103.36796570 135.88902283]
[101.58550262 150.78274536]
[107.62808990 165.40455627]
[98.43321228 177.12222290]
[96.65074921 192.01594543]
[102.69333649 206.63775635]
[93.49846649 218.35542297]
[91.71599579 233.24914551]
[93.96257782 239.46720886]
[92.89233398 245.04856873]
[89.65231323 248.55732727]
[87.42719269 263.39135742]
[85.20207977 278.22540283]
[85.31374359 293.22500610]
[87.75946808 308.02426147]
[90.20520020 322.82354736]
[92.65092468 337.62280273]
[95.09665680 352.42208862]
[101.06150055 338.65905762]
[112.35037994 328.78173828]
[126.78358459 324.69729614]
[141.57427979 327.19436646]
[153.86662292 335.79077148]
[161.28715515 348.82672119]
[162.40307617 363.78512573]
[156.99893188 377.77783203]
[146.11817932 388.10299683]
[131.86170959 392.76702881]
[116.98223877 390.86935425]
[104.35274506 382.77639771]
[96.41136932 370.04959106]
[96.18804169 385.04791260]
[95.96471405 400.04626465]
[95.74138641 415.04458618]
[95.51805878 430.04293823]
[109.48756409 436.03637695]
[120.09652710 446.92300415]
[125.72715759 461.04263306]
[125.52083588 476.24218750]
[119.50901031 490.20379639]
[108.60845184 500.79843140]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 204]
[9 203]
[10 202]
[11 201]
[12 200]
[13 187]
[14 186]
[15 185]
[16 184]
[17 183]
[39 182]
[40 181]
[41 180]
[42 177]
[43 176]
[45 174]
[46 173]
[48 171]
[49 170]
[50 169]
[51 168]
[55 167]
[57 165]
[58 164]
[59 163]
[62 160]
[63 159]
[64 158]
[65 157]
[66 156]
[67 155]
[79 154]
[80 153]
[81 152]
[84 151]
[85 150]
[86 149]
[87 148]
[88 147]
[89 146]
[92 143]
[93 141]
[94 140]
[95 139]
[96 138]
[97 137]
[98 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
