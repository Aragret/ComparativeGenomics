%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[41.11791992 492.67486572]
[38.46398163 507.46725464]
[33.63489914 521.69879150]
[26.73856163 535.05163574]
[17.92902756 547.22741699]
[7.40311146 557.95416260]
[-4.60403728 566.99218750]
[-17.82417297 574.13964844]
[-31.96195412 579.23675537]
[-46.70153809 582.16973877]
[-61.71363449 582.87304688]
[-76.66286469 581.33093262]
[-91.21527100 577.57788086]
[-105.04573059 571.69775391]
[-117.84527588 563.82189941]
[-129.32795715 554.12622070]
[-139.23724365 542.82739258]
[-147.35176086 530.17779541]
[-153.49023438 516.46008301]
[-157.51551819 501.98059082]
[-159.33770752 487.06292725]
[-158.91606140 472.04028320]
[-156.26000977 457.24829102]
[-151.42890930 443.01739502]
[-144.53067017 429.66555786]
[-135.71939087 417.49102783]
[-125.19194794 406.76577759]
[-113.18351746 397.72946167]
[-99.96236420 390.58392334]
[-85.82385254 385.48880005]
[-71.08385468 382.55792236]
[-56.07165909 381.85675049]
[-41.12264633 383.40097046]
[-26.57077789 387.15609741]
[-20.70181847 373.35189819]
[-14.83285713 359.54772949]
[-8.96389675 345.74356079]
[-9.93668079 342.35446167]
[-9.31624985 338.32580566]
[-6.81989098 334.41152954]
[-2.51229668 331.46334839]
[3.96719933 317.93499756]
[10.44669533 304.40667725]
[16.62246323 290.73699951]
[22.49142456 276.93280029]
[28.36038589 263.12863159]
[34.22934723 249.32446289]
[40.09830856 235.52027893]
[45.96726608 221.71611023]
[51.73329926 207.86862183]
[56.98001862 193.81614685]
[61.80601501 179.61369324]
[66.63201141 165.41123962]
[65.80766296 158.06669617]
[71.63703156 151.03417969]
[76.67395020 136.90515137]
[75.59570312 134.31758118]
[75.47746277 131.14700317]
[76.54641724 127.75690460]
[78.89411163 124.58627319]
[82.45416260 122.10031128]
[88.32312012 108.29613495]
[86.81798553 94.39555359]
[97.87270355 85.83489990]
[103.74166107 72.03072357]
[102.02070618 56.30339813]
[114.12089539 47.61808777]
[119.98986053 33.81391144]
[125.85881805 20.00973511]
[131.31417847 6.03693819]
[136.35108948 -8.09209156]
[141.07122803 -22.33008003]
[145.47222900 -36.66992950]
[149.87322998 -51.00977325]
[154.27421570 -65.34962463]
[158.67521667 -79.68946838]
[163.07621765 -94.02931976]
[166.94052124 -108.52301025]
[170.26278687 -123.15046692]
[173.58503723 -137.77792358]
[176.90730286 -152.40539551]
[178.02294922 -167.36384583]
[176.90730286 -182.32229614]
[175.79165649 -197.28074646]
[174.67601013 -212.23919678]
[173.56034851 -227.19766235]
[164.81806946 -240.38412476]
[171.58734131 -253.65162659]
[170.47167969 -268.61007690]
[169.35603333 -283.56854248]
[165.95535278 -289.23834229]
[165.93203735 -294.92135620]
[168.43663025 -298.98779297]
[167.76684570 -313.97283936]
[167.09706116 -328.95788574]
[166.42727661 -343.94293213]
[152.03439331 -348.76052856]
[140.35624695 -358.45513916]
[132.97221375 -371.71560669]
[130.88092041 -386.74859619]
[134.36518860 -401.52102661]
[142.95381165 -414.03500366]
[155.48526001 -422.59814453]
[170.26472473 -426.05236816]
[185.29344177 -423.93048096]
[198.53886414 -416.51950073]
[208.20968628 -404.82165527]
[212.99800110 -390.41897583]
[212.25622559 -375.25936890]
[206.08467102 -361.39297485]
[195.31800842 -350.69515991]
[181.41232300 -344.61270142]
[182.08210754 -329.62765503]
[182.75189209 -314.64263916]
[183.42167664 -299.65759277]
[184.31448364 -284.68417358]
[185.43014526 -269.72573853]
[186.54579163 -254.76727295]
[195.20826721 -242.65072632]
[188.51881409 -228.31330872]
[189.63446045 -213.35485840]
[190.75010681 -198.39639282]
[191.86575317 -183.43794250]
[192.98139954 -168.47949219]
[198.80081177 -182.30462646]
[208.23477173 -193.96655273]
[220.53927612 -202.54554749]
[234.74394226 -207.36505127]
[249.72851562 -208.04496765]
[264.31127930 -204.53167725]
[277.34216309 -197.10226440]
[287.79348755 -186.34262085]
[294.84100342 -173.10130310]
[297.92895508 -158.42259216]
[296.81378174 -143.46411133]
[291.58346558 -129.40553284]
[282.65045166 -117.35557556]
[270.71926880 -108.26456451]
[256.73080444 -102.84944916]
[241.78831482 -101.53727722]
[227.07019043 -104.43154907]
[213.73716736 -111.30399323]
[202.84075928 -121.61263275]
[195.24028015 -134.54447937]
[191.53475952 -149.08312988]
[188.21250916 -134.45567322]
[184.89024353 -119.82820892]
[181.56797791 -105.20075226]
[195.45790100 -110.86380768]
[208.61962891 -103.66874695]
[211.35083008 -88.91949463]
[201.63816833 -77.48864746]
[186.64144897 -77.80260468]
[177.41606140 -89.62831879]
[173.01506042 -75.28846741]
[168.61407471 -60.94862366]
[164.21307373 -46.60877609]
[159.81207275 -32.26892853]
[155.41107178 -17.92908287]
[156.73117065 -14.65957165]
[156.53321838 -10.58822441]
[154.45762634 -6.43548870]
[150.48011780 -3.05517530]
[145.44320679 11.07385445]
[146.52145386 13.66142559]
[146.63969421 16.83201408]
[145.57073975 20.22210693]
[143.22305298 23.39273643]
[139.66299438 25.87869644]
[133.79403687 39.68287277]
[127.92507172 53.48704910]
[130.06582642 68.22701263]
[117.54583740 77.89968872]
[111.67687988 91.70386505]
[113.18201447 105.60444641]
[102.12729645 114.16510010]
[96.25833893 127.96927643]
[90.80297852 141.94207764]
[85.76606750 156.07110596]
[80.83447266 170.23724365]
[76.00847626 184.43969727]
[71.18247223 198.64215088]
[72.17936707 202.86828613]
[71.81611633 206.79670715]
[70.35334015 210.03642273]
[68.15185547 212.32116699]
[65.62332916 213.53140259]
[65.28143311 222.65943909]
[59.77144623 227.58506775]
[53.90248489 241.38925171]
[48.03352356 255.19342041]
[42.16456223 268.99758911]
[36.29560089 282.80178833]
[30.42663956 296.60595703]
[31.06153297 301.78707886]
[29.77427864 306.24758911]
[27.16123390 309.37600708]
[23.97504044 310.88616943]
[17.49554443 324.41448975]
[11.01604939 337.94284058]
[4.84028053 351.61251831]
[-1.02868032 365.41668701]
[-6.89764118 379.22088623]
[-12.76660156 393.02505493]
[0.03406405 400.89910889]
[11.51812553 410.59310913]
[21.42902374 421.89053345]
[29.54534721 434.53897095]
[35.68577576 448.25585938]
[39.71312332 462.73474121]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 204]
[35 203]
[36 202]
[37 201]
[41 200]
[42 199]
[43 198]
[44 194]
[45 193]
[46 192]
[47 191]
[48 190]
[49 189]
[50 187]
[51 182]
[52 181]
[53 180]
[55 179]
[56 178]
[61 177]
[62 176]
[64 174]
[65 173]
[67 171]
[68 170]
[69 169]
[70 164]
[71 163]
[72 159]
[73 158]
[74 157]
[75 156]
[76 155]
[77 154]
[78 148]
[79 147]
[80 146]
[81 145]
[82 124]
[83 123]
[84 122]
[85 121]
[86 120]
[88 118]
[89 117]
[90 116]
[93 115]
[94 114]
[95 113]
[96 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
