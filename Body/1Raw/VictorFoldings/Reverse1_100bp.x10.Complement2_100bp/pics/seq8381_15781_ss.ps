%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[144.42289734 558.71246338]
[150.97778320 545.15789795]
[160.20788574 533.26257324]
[171.70973206 523.54650879]
[184.98049927 516.43450928]
[180.79348755 502.03076172]
[176.60647583 487.62698364]
[172.41947937 473.22317505]
[168.23246765 458.81939697]
[164.04545593 444.41561890]
[153.06307983 434.35397339]
[156.64073181 418.94259644]
[152.45372009 404.53881836]
[148.26670837 390.13504028]
[137.28433228 380.07339478]
[140.86199951 364.66198730]
[136.67498779 350.25820923]
[132.48797607 335.85443115]
[128.30096436 321.45065308]
[124.11395264 307.04687500]
[117.78308868 320.64538574]
[104.72466278 328.02627563]
[89.80913544 326.43661499]
[78.59963226 316.46929932]
[75.27702332 301.84191895]
[81.08055878 288.01013184]
[93.84566498 280.13281250]
[108.81127167 281.14804077]
[120.39620972 290.67813110]
[117.95047760 275.87884521]
[115.50475311 261.07958984]
[113.05902100 246.28030396]
[103.35010529 234.98490906]
[108.73376465 220.10784912]
[106.09574890 217.76837158]
[104.45981598 214.03489685]
[104.46881104 209.39234924]
[106.52469635 204.59439087]
[104.74222565 189.70066833]
[102.95976257 174.80696106]
[101.17729950 159.91323853]
[99.17327881 145.04771423]
[96.94816589 130.21366882]
[94.72304535 115.37962341]
[83.93856049 102.53162384]
[90.24811554 86.98924255]
[87.80239105 72.18997192]
[85.35665894 57.39070129]
[82.91093445 42.59143066]
[79.01797485 37.24761200]
[78.48773193 31.58935356]
[80.61956024 27.31567192]
[78.61554718 12.45014381]
[68.85040283 4.02371264]
[67.48728943 -8.39907646]
[74.71479797 -18.09906006]
[72.93233490 -32.99277878]
[71.14986420 -47.88649368]
[69.36740112 -62.78021240]
[67.58493805 -77.67392731]
[56.98762512 -83.06222534]
[50.37488937 -92.79734039]
[49.29380417 -104.39584351]
[53.89776993 -114.96557617]
[62.93695068 -121.92684937]
[61.59871674 -136.86703491]
[60.26048279 -151.80722046]
[45.53628159 -155.22122192]
[32.60573959 -163.00860596]
[22.72868729 -174.39598083]
[16.86291313 -188.25988770]
[15.57127953 -203.23767090]
[18.96774292 -217.86146545]
[26.70742035 -230.70191956]
[38.02156448 -240.50805664]
[51.79389954 -246.32902527]
[50.45566559 -261.26922607]
[48.89514542 -276.18780518]
[47.11267853 -291.08154297]
[45.33021164 -305.97525024]
[36.00784683 -318.75820923]
[42.17792892 -332.31472778]
[40.39546204 -347.20846558]
[38.61299515 -362.10217285]
[36.83052826 -376.99588013]
[35.04806519 -391.88961792]
[20.04311943 -393.04626465]
[5.55222750 -397.10833740]
[-7.86762047 -403.91964722]
[-19.70060158 -413.21838379]
[-29.49188805 -424.64715576]
[-36.86512756 -437.76666260]
[-41.53691483 -452.07263184]
[-43.32767868 -467.01516724]
[-42.16858292 -482.01992798]
[-38.10418320 -496.51016235]
[-31.29070282 -509.92892456]
[-21.99003601 -521.76037598]
[-10.55967522 -531.54980469]
[2.56102848 -538.92095947]
[16.86775017 -543.59039307]
[31.81057549 -545.37878418]
[46.81514359 -544.21722412]
[61.30472183 -540.15051270]
[74.72236633 -533.33483887]
[86.55233765 -524.03222656]
[96.33992004 -512.60028076]
[103.70891571 -499.47842407]
[108.37606812 -485.17092896]
[110.16199493 -470.22781372]
[108.99803925 -455.22344971]
[104.92895508 -440.73452759]
[98.11112976 -427.31799316]
[88.80663300 -415.48950195]
[77.37310028 -405.70376587]
[64.25001526 -398.33691406]
[49.94178009 -393.67205811]
[51.72424698 -378.77835083]
[53.50671387 -363.88464355]
[55.28918076 -348.99090576]
[57.07164383 -334.09719849]
[66.26651764 -322.37954712]
[60.22393036 -307.75772095]
[62.00639343 -292.86401367]
[63.78886032 -277.97027588]
[66.92298126 -274.36663818]
[67.82656860 -268.75585938]
[65.39585114 -262.60745239]
[66.73408508 -247.66726685]
[81.32168579 -244.38656616]
[94.19846344 -236.74728394]
[104.09693909 -225.48672485]
[110.03826904 -211.69935608]
[111.42904663 -196.73043823]
[108.12053680 -182.04476929]
[100.42447662 -169.08332825]
[89.08374023 -159.12188721]
[75.20066833 -153.14546204]
[76.53890228 -138.20527649]
[77.87713623 -123.26508331]
[92.60583496 -112.39396667]
[94.74770355 -93.89193726]
[82.47865295 -79.45639801]
[84.26111603 -64.56267548]
[86.04358673 -49.66896057]
[87.82604980 -34.77524567]
[89.60851288 -19.88152695]
[100.86849213 -6.42122173]
[93.48107147 10.44612980]
[95.48508453 25.31165886]
[97.71020508 40.14570236]
[100.15592957 54.94497299]
[102.60166168 69.74424744]
[105.04738617 84.54351807]
[114.08937836 91.88406372]
[115.90273285 103.38854218]
[109.55709076 113.15451050]
[111.78221130 127.98854828]
[114.00732422 142.82260132]
[117.82028961 148.22378540]
[118.26623535 153.88931274]
[116.07101440 158.13076782]
[117.85347748 173.02449036]
[119.63594818 187.91821289]
[121.41841125 202.81192017]
[123.53303528 217.66212463]
[133.41688538 230.01606750]
[127.85829163 243.83457947]
[130.30401611 258.63385010]
[132.74975586 273.43310547]
[135.19548035 288.23239136]
[138.51773071 302.85986328]
[142.70474243 317.26364136]
[146.89175415 331.66741943]
[151.07876587 346.07119751]
[155.26577759 360.47497559]
[166.54763794 371.56689453]
[162.67050171 385.94802856]
[166.85751343 400.35180664]
[171.04452515 414.75558472]
[182.32637024 425.84747314]
[178.44923401 440.22860718]
[182.63624573 454.63238525]
[186.82325745 469.03616333]
[191.01026917 483.43997192]
[195.19728088 497.84375000]
[199.38429260 512.24749756]
[214.39962769 511.13708496]
[229.31767273 513.17315674]
[243.48626709 518.26672363]
[256.28601074 526.19519043]
[267.15737915 536.61187744]
[275.62509155 549.06140137]
[281.31900024 562.99957275]
[283.99017334 577.81707764]
[283.52185059 592.86614990]
[279.93450928 607.48889160]
[273.38494873 621.04608154]
[264.15951538 632.94506836]
[252.66149902 642.66558838]
[239.39352417 649.78283691]
[224.93563843 653.98553467]
[209.91986084 655.09008789]
[195.00260925 653.04815674]
[180.83602905 647.94897461]
[168.03939819 640.01550293]
[157.17213440 629.59454346]
[148.70932007 617.14166260]
[143.02088928 603.20123291]
[140.35554504 588.38269043]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 187]
[6 186]
[7 185]
[8 184]
[9 183]
[10 182]
[12 180]
[13 179]
[14 178]
[16 176]
[17 175]
[18 174]
[19 173]
[20 172]
[29 171]
[30 170]
[31 169]
[32 168]
[34 166]
[38 165]
[39 164]
[40 163]
[41 162]
[42 159]
[43 158]
[44 157]
[46 154]
[47 153]
[48 152]
[49 151]
[52 150]
[53 149]
[56 147]
[57 146]
[58 145]
[59 144]
[60 143]
[65 140]
[66 139]
[67 138]
[76 129]
[77 128]
[78 125]
[79 124]
[80 123]
[82 121]
[83 120]
[84 119]
[85 118]
[86 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
