%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[75.81035614 795.44763184]
[60.99114227 797.84716797]
[46.00809097 798.78259277]
[31.00550270 798.24487305]
[16.12786293 796.23925781]
[1.51845443 792.78497314]
[-12.68202209 787.91534424]
[-26.33680344 781.67724609]
[-39.31438446 774.13079834]
[-51.48978424 765.34863281]
[-62.74573517 755.41534424]
[-72.97384644 744.42657471]
[-82.07559967 732.48822021]
[-89.96334076 719.71514893]
[-96.56111145 706.23052979]
[-101.80536652 692.16406250]
[-105.64559937 677.65130615]
[-108.04483032 662.83209229]
[-108.97994232 647.84899902]
[-108.44193268 632.84643555]
[-106.43598938 617.96881104]
[-102.98143005 603.35949707]
[-98.11151886 589.15911865]
[-91.87316132 575.50445557]
[-84.32643127 562.52703857]
[-75.54402161 550.35180664]
[-65.61050415 539.09606934]
[-54.62154770 528.86816406]
[-42.68298721 519.76666260]
[-29.90980148 511.87915039]
[-16.42500305 505.28164673]
[-2.35846376 500.03768921]
[12.15434551 496.19772339]
[26.97365379 493.79879761]
[41.95674133 492.86398315]
[56.95930862 493.40231323]
[58.96332169 478.53677368]
[60.96733856 463.67123413]
[54.99977493 450.02435303]
[64.51142883 437.38162231]
[66.51544189 422.51608276]
[68.18698120 407.60949707]
[69.52521515 392.66931152]
[58.20001221 380.23635864]
[59.39452362 363.12237549]
[72.85680389 351.95159912]
[73.97245026 336.99316406]
[75.08809662 322.03469849]
[65.20420074 310.95120239]
[66.12254333 295.76528931]
[77.81496429 285.47329712]
[78.93061066 270.51486206]
[80.04625702 255.55639648]
[81.16191101 240.59794617]
[82.27755737 225.63949585]
[83.39320374 210.68104553]
[76.62394714 197.41354370]
[85.36622620 184.22706604]
[86.48187256 169.26861572]
[78.82844543 159.90103149]
[79.63549042 147.42976379]
[89.01464081 138.57571411]
[90.35287476 123.63552094]
[91.69110870 108.69533539]
[92.80675507 93.73688507]
[93.58808136 78.75724792]
[94.25786591 63.77220535]
[94.92765045 48.78716660]
[95.59743500 33.80212784]
[88.48406219 19.67023277]
[96.78194427 7.30114412]
[97.45172882 -7.68389463]
[85.48815155 -17.38848114]
[81.57862091 -32.10476303]
[87.01985168 -46.13533401]
[99.52975464 -54.17526627]
[100.19953918 -69.16030121]
[89.81297302 -80.76879120]
[90.70569611 -95.95620728]
[101.83662415 -105.78667450]
[102.50640869 -120.77171326]
[103.17619324 -135.75675964]
[94.31340027 -151.89776611]
[104.32760620 -166.30895996]
[104.77421570 -181.30232239]
[105.22082520 -196.29566956]
[94.66257477 -207.74822998]
[95.32907867 -222.94725037]
[106.31241608 -232.94235229]
[106.75901794 -247.93569946]
[98.49846649 -257.84155273]
[99.17911530 -270.32037354]
[107.89147186 -278.71209717]
[108.56125641 -293.69714355]
[94.06547546 -297.81649780]
[80.91071320 -305.16830444]
[69.80639648 -315.35607910]
[61.35134888 -327.83041382]
[56.00155640 -341.91857910]
[54.04552078 -356.86080933]
[55.58872986 -371.85131836]
[60.54796219 -386.08166504]
[68.65576935 -398.78442383]
[79.47490692 -409.27456665]
[92.42191315 -416.98635864]
[106.79857635 -421.50390625]
[121.82957458 -422.58361816]
[136.70431519 -420.16720581]
[150.62060547 -414.38504028]
[162.82797241 -405.54895020]
[172.66809082 -394.13540649]
[179.61027527 -380.75994873]
[183.28016663 -366.14392090]
[183.47982788 -351.07550049]
[180.19851685 -336.36734009]
[173.61317444 -322.81265259]
[164.07893372 -311.14239502]
[152.10998535 -301.98590088]
[138.35179138 -295.83703613]
[123.54629517 -293.02737427]
[122.87651062 -278.04232788]
[131.79112244 -262.92620850]
[121.75237274 -247.48908997]
[121.30576324 -232.49574280]
[131.67469788 -221.86462402]
[131.43536377 -206.65287781]
[120.21417236 -195.84906006]
[119.76756287 -180.85571289]
[119.32096100 -165.86236572]
[127.38504028 -156.84585571]
[127.13566589 -144.35099792]
[118.16123199 -135.08697510]
[117.49144745 -120.10192871]
[116.82166290 -105.11688995]
[127.03117371 -94.33257294]
[126.56538391 -79.12606812]
[115.18457794 -68.49051666]
[114.51479340 -53.50548172]
[126.25751495 -44.38153076]
[130.42530823 -29.92146683]
[125.21843719 -15.61266041]
[112.43676758 -7.01410961]
[111.76698303 7.97092915]
[118.92826843 21.03099632]
[110.58247375 34.47191620]
[109.91268921 49.45695496]
[109.24290466 64.44199371]
[108.57312012 79.42703247]
[111.41481018 86.24953461]
[107.78015900 94.62969971]
[110.28328705 99.23928833]
[110.02556610 104.92320251]
[106.63129425 110.03356934]
[105.29306030 124.97375488]
[103.95482635 139.91394043]
[112.08804321 156.43460083]
[101.44033051 170.38426208]
[100.32467651 185.34272766]
[107.01413727 199.68014526]
[98.35166168 211.79669189]
[97.23600769 226.75514221]
[96.12036133 241.71359253]
[95.00471497 256.67205811]
[93.88906097 271.63049316]
[92.77341461 286.58895874]
[102.80975342 298.50155640]
[101.46523285 313.65563965]
[90.04655457 323.15036011]
[88.93090057 338.10879517]
[87.81525421 353.06726074]
[97.72097015 362.19366455]
[100.52090454 375.16943359]
[95.41188812 387.21020508]
[84.46540070 394.00756836]
[83.12716675 408.94775391]
[85.32498932 413.68237305]
[85.47220612 418.32257080]
[83.94816589 422.10308838]
[81.38096619 424.52008057]
[79.37695312 439.38562012]
[85.20117950 454.09579468]
[75.83286285 465.67526245]
[73.82884979 480.54077148]
[71.82483673 495.40631104]
[86.43438721 498.85998535]
[100.63505554 503.72906494]
[114.29008484 509.96658325]
[127.26796722 517.51257324]
[139.44372559 526.29425049]
[150.70007324 536.22705078]
[160.92861938 547.21539307]
[170.03085327 559.15344238]
[177.91909790 571.92614746]
[184.51741028 585.41052246]
[189.76223755 599.47674561]
[193.60304260 613.98931885]
[196.00286865 628.80853271]
[196.93858337 643.79156494]
[196.40116882 658.79412842]
[194.39582825 673.67181396]
[190.94184875 688.28131104]
[186.07249451 702.48187256]
[179.83468628 716.13677979]
[172.28848267 729.11450195]
[163.50654602 741.29010010]
[153.57348633 752.54626465]
[142.58494568 762.77453613]
[130.64674377 771.87652588]
[117.87387085 779.76452637]
[104.38934326 786.36260986]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 184]
[37 183]
[38 182]
[40 180]
[41 179]
[42 175]
[43 174]
[46 170]
[47 169]
[48 168]
[51 165]
[52 164]
[53 163]
[54 162]
[55 161]
[56 160]
[58 158]
[59 157]
[62 155]
[63 154]
[64 153]
[65 150]
[66 148]
[67 147]
[68 146]
[69 145]
[71 143]
[72 142]
[76 138]
[77 137]
[80 134]
[81 133]
[82 132]
[84 129]
[85 128]
[86 127]
[89 124]
[90 123]
[93 121]
[94 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
