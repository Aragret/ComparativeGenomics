%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[-16.01005936 484.54995728]
[-17.75395775 499.49804688]
[-22.38086319 513.81860352]
[-29.71292877 526.96118164]
[-39.46833038 538.42059326]
[-51.27209473 547.75640869]
[-64.67051697 554.60974121]
[-79.14860535 558.71722412]
[-94.14984894 559.92089844]
[-109.09764099 558.17462158]
[-123.41743469 553.54541016]
[-136.55882263 546.21118164]
[-148.01666260 536.45391846]
[-157.35055542 524.64868164]
[-164.20175171 511.24911499]
[-168.30686951 496.77038574]
[-169.50816345 481.76895142]
[-167.75941467 466.82141113]
[-163.12788391 452.50238037]
[-155.79156494 439.36218262]
[-146.03244019 427.90591431]
[-134.22566223 418.57394409]
[-120.82501984 411.72491455]
[-106.34560394 407.62213135]
[-91.34397125 406.42327881]
[-76.39674377 408.17443848]
[-71.78273010 393.90170288]
[-67.16872406 379.62896729]
[-62.55471420 365.35623169]
[-57.94070435 351.08349609]
[-53.32669830 336.81076050]
[-57.92023468 319.87362671]
[-44.15199280 307.64593506]
[-39.75099564 293.30606079]
[-35.34999847 278.96621704]
[-45.86167145 289.66690063]
[-59.03179169 296.84658813]
[-73.72100830 299.88418579]
[-88.65856171 298.51687622]
[-102.55220032 292.86294556]
[-114.19998169 283.41152954]
[-122.59426880 270.98028564]
[-127.00885773 256.64462280]
[-127.06185150 241.64471436]
[-122.74865723 227.27819824]
[-114.44242096 214.78794861]
[-102.86170959 205.25448608]
[-89.00836182 199.50253296]
[-74.08084869 198.02970886]
[-59.37053299 200.96342468]
[-46.15001297 208.04988098]
[-35.56299210 218.67602539]
[-28.52535820 231.92260742]
[-25.64593124 246.64363098]
[-27.17294502 261.56222534]
[-18.94413757 249.02081299]
[-10.71533012 236.47941589]
[-2.48652172 223.93800354]
[5.74228621 211.39660645]
[13.97109413 198.85520935]
[22.19990158 186.31381226]
[30.42870903 173.77241516]
[38.65751648 161.23100281]
[46.88632584 148.68960571]
[33.01879501 154.40727234]
[18.07435989 153.11737061]
[5.39164257 145.10807800]
[-2.19600534 132.16870117]
[-2.99348330 117.18991852]
[3.17736721 103.51802826]
[14.93796253 94.20736694]
[29.66095543 91.33795929]
[44.05718994 95.55084229]
[54.91051483 105.90484619]
[59.79626465 120.08685303]
[57.62294769 134.92860413]
[67.78649139 123.89672089]
[77.95004272 112.86484528]
[88.11358643 101.83296967]
[98.11175537 90.65099335]
[107.94233704 79.32139587]
[117.77291870 67.99180603]
[127.60350037 56.66221237]
[137.17861938 45.11591339]
[146.49349976 33.35866165]
[155.80838013 21.60140991]
[165.12327576 9.84415817]
[167.99952698 1.17438281]
[174.66540527 -2.01743913]
[184.15431213 -13.63470268]
[182.75938416 -29.14895248]
[192.54797363 -40.79533768]
[207.34703064 -42.02957153]
[214.22644043 -55.35900116]
[218.19854736 -69.82352448]
[222.17063904 -84.28804779]
[226.14273071 -98.75257111]
[230.11483765 -113.21709442]
[216.58544922 -119.79512024]
[204.49526978 -128.74734497]
[194.25610352 -139.76887512]
[186.21667480 -152.48431396]
[180.65081787 -166.46057129]
[177.74809265 -181.22163391]
[177.60736084 -196.26472473]
[180.23342896 -211.07749939]
[185.53683472 -225.15544128]
[193.33697510 -238.01905823]
[203.36816406 -249.23022461]
[215.28872681 -258.40707397]
[228.69268799 -265.23706055]
[243.12347412 -269.48754883]
[258.08963013 -271.01379395]
[273.08135986 -269.76376343]
[287.58807373 -265.78009033]
[301.11569214 -259.19842529]
[313.20343018 -250.24291992]
[323.43963623 -239.21864319]
[331.47564697 -226.50103760]
[337.03771973 -212.52328491]
[339.93649292 -197.76144409]
[340.07315063 -182.71830750]
[337.44308472 -167.90623474]
[332.13589478 -153.82972717]
[324.33227539 -140.96821594]
[314.29809570 -129.75975037]
[302.37503052 -120.58612061]
[288.96923828 -113.75975037]
[274.53729248 -109.51314545]
[259.57073975 -107.99094391]
[244.57936096 -109.24500275]
[240.60725403 -94.78047180]
[236.63516235 -80.31594849]
[232.66307068 -65.85142517]
[228.69096375 -51.38690186]
[238.64958191 -62.60412216]
[250.69720459 -71.54029083]
[264.32153320 -77.81542969]
[278.94329834 -81.16272736]
[293.94073486 -81.43984985]
[308.67614746 -78.63500977]
[322.52301025 -72.86747742]
[334.89254761 -64.38249207]
[345.25875854 -53.54083252]
[353.18087769 -40.80349731]
[358.32208252 -26.71208000]
[360.46377563 -11.86575890]
[359.51483154 3.10419536]
[355.51562500 17.56125259]
[348.63623047 30.89068985]
[339.16915894 42.52573395]
[327.51690674 51.97165680]
[314.17498779 58.82681274]
[299.71069336 62.79971695]
[284.73904419 63.72143936]
[269.89663696 61.55279160]
[255.81459045 56.38597870]
[243.09167480 48.44070053]
[232.26887512 38.05479431]
[223.80639648 25.66987228]
[218.06404114 11.81255054]
[215.28599548 -2.92795324]
[215.59037781 -17.92486382]
[218.96429443 -32.54067230]
[220.70956421 -17.79314232]
[211.25196838 -5.87641287]
[195.77157593 -4.14580393]
[186.28266907 7.47145939]
[176.88052368 19.15904045]
[167.56564331 30.91629219]
[158.25076294 42.67354202]
[148.93586731 54.43079376]
[148.97647095 57.95651245]
[147.31137085 61.67706299]
[143.86761475 64.79054260]
[138.93309021 66.49279785]
[129.10250854 77.82238770]
[119.27193451 89.15197754]
[109.44135284 100.48157501]
[108.61785889 105.66190338]
[104.95054626 110.01209259]
[99.14546204 111.99651337]
[88.98191833 123.02838898]
[78.81836700 134.06027222]
[68.65482330 145.09214783]
[59.42772675 156.91841125]
[51.19891739 169.45980835]
[42.97010803 182.00122070]
[34.74130249 194.54261780]
[26.51249504 207.08401489]
[18.28368568 219.62541199]
[10.05487823 232.16682434]
[1.82607067 244.70822144]
[-6.40273714 257.24960327]
[-14.63154507 269.79101562]
[-21.01015091 283.36721802]
[-25.41114807 297.70706177]
[-29.81214523 312.04690552]
[-24.46961784 323.78659058]
[-28.43043518 335.63967896]
[-39.05396271 341.42477417]
[-43.66797256 355.69750977]
[-48.28198242 369.97024536]
[-52.89599228 384.24298096]
[-57.51000214 398.51571655]
[-62.12400818 412.78845215]
[-48.98025894 420.11837769]
[-37.51925659 429.87191772]
[-28.18153572 441.67419434]
[-21.32601357 455.07150269]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 206]
[27 205]
[28 204]
[29 203]
[30 202]
[31 201]
[33 198]
[34 197]
[35 196]
[55 195]
[56 194]
[57 193]
[58 192]
[59 191]
[60 190]
[61 189]
[62 188]
[63 187]
[64 186]
[76 185]
[77 184]
[78 183]
[79 182]
[80 179]
[81 178]
[82 177]
[83 176]
[84 172]
[85 171]
[86 170]
[87 169]
[89 168]
[90 167]
[93 164]
[94 135]
[95 134]
[96 133]
[97 132]
[98 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
