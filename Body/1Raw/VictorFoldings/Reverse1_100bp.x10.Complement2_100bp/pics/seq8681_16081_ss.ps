%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[80.12348938 404.74423218]
[68.62103271 414.59167480]
[54.54343033 420.16839600]
[39.41771698 420.86947632]
[24.88461685 416.61883545]
[12.52057266 407.87762451]
[3.66674280 395.59396362]
[-0.71647477 381.10028076]
[-0.15362179 365.96881104]
[5.29424763 351.84085083]
[15.03618908 340.24890137]
[28.01547050 332.45037842]
[42.82419586 329.29119873]
[44.60666275 314.39746094]
[46.38912964 299.50375366]
[48.17159271 284.61004639]
[49.95405960 269.71630859]
[40.08398819 281.01153564]
[26.12891197 286.51205444]
[11.20642853 284.98907471]
[-1.34974146 276.78283691]
[-8.73451710 263.72659302]
[-9.29812050 248.73718262]
[-2.91464138 235.16326904]
[8.98983479 226.03729248]
[23.75581741 223.39802551]
[38.08454895 227.83508301]
[48.77495193 238.35720825]
[53.43877029 252.61376953]
[57.62578201 238.20999146]
[61.81278992 223.80621338]
[60.33851242 219.26356506]
[61.70223999 213.74656677]
[66.34484100 209.03936768]
[70.95884705 194.76663208]
[75.57286072 180.49389648]
[79.32915497 165.97183228]
[82.21443176 151.25193787]
[85.09970093 136.53205872]
[87.98497772 121.81216431]
[90.87024689 107.09226990]
[80.18741608 117.62209320]
[65.86188507 122.06945801]
[51.09400558 119.44081116]
[39.18296432 110.32340240]
[32.78972244 96.75408173]
[33.34254074 81.76427460]
[40.71791840 68.70273590]
[53.26818085 60.48744965]
[68.18956757 58.95373154]
[82.14859772 64.44422150]
[92.02679443 75.73232269]
[95.61733246 90.29627228]
[100.86405182 76.24379730]
[106.11077118 62.19132996]
[111.35749054 48.13885880]
[116.60420990 34.08638763]
[111.96990967 22.04952240]
[116.62921143 10.45320225]
[127.57823944 5.31069708]
[133.03359985 -8.66210079]
[138.48895264 -22.63489914]
[133.58735657 -30.68979645]
[132.95097351 -39.95946884]
[136.59635925 -48.35622025]
[143.58984375 -54.04707336]
[152.28291321 -55.85362625]
[158.35675049 -69.56889343]
[164.43058777 -83.28416443]
[162.94396973 -99.03536987]
[175.17213440 -107.53955841]
[181.24597168 -121.25482941]
[180.68827820 -126.44482422]
[182.04180908 -130.88568115]
[184.70114136 -133.97486877]
[187.90946960 -135.43739319]
[194.58966064 -148.86776733]
[201.26985168 -162.29814148]
[207.95004272 -175.72851562]
[214.63024902 -189.15890503]
[221.31044006 -202.58927917]
[208.43144226 -210.29379272]
[196.18820190 -218.97317505]
[184.65438843 -228.57522583]
[173.89933777 -239.04217529]
[163.98774719 -250.31109619]
[154.97921753 -262.31420898]
[146.92794800 -274.97933960]
[139.88232422 -288.23028564]
[133.88476562 -301.98736572]
[128.97129822 -316.16787720]
[125.17150879 -330.68646240]
[122.50822449 -345.45587158]
[120.99748230 -360.38723755]
[120.64835358 -375.39080811]
[121.46294403 -390.37628174]
[123.43634796 -405.25357056]
[126.55670929 -419.93319702]
[130.80525208 -434.32690430]
[136.15643311 -448.34805298]
[142.57806396 -461.91238403]
[150.03150940 -474.93829346]
[158.47196960 -487.34744263]
[167.84866333 -499.06521606]
[178.10520935 -510.02111816]
[189.17991638 -520.14923096]
[201.00617981 -529.38873291]
[213.51286316 -537.68395996]
[226.62477112 -544.98504639]
[240.26303101 -551.24816895]
[254.34562683 -556.43554688]
[268.78787231 -560.51599121]
[283.50286865 -563.46502686]
[298.40216064 -565.26489258]
[313.39611816 -565.90472412]
[328.39459229 -565.38073730]
[343.30734253 -563.69604492]
[358.04467773 -560.86077881]
[372.51800537 -556.89202881]
[386.64025879 -551.81359863]
[400.32650757 -545.65606689]
[413.49441528 -538.45648193]
[426.06484985 -530.25811768]
[437.96212769 -521.11029053]
[449.11474609 -511.06802368]
[459.45562744 -500.19171143]
[468.92257690 -488.54675293]
[477.45867920 -476.20318604]
[485.01254272 -463.23522949]
[491.53875732 -449.72091675]
[496.99810791 -435.74151611]
[501.35772705 -421.38110352]
[504.59143066 -406.72601318]
[506.67971802 -391.86437988]
[507.61004639 -376.88565063]
[507.37686157 -361.87985229]
[505.98150635 -346.93725586]
[503.43240356 -332.14770508]
[499.74490356 -317.60018921]
[494.94116211 -303.38217163]
[489.05004883 -289.57913208]
[482.10702515 -276.27416992]
[474.15383911 -263.54721069]
[465.23831177 -251.47485352]
[455.41409302 -240.12968445]
[444.74023438 -229.57994080]
[433.28094482 -219.88908386]
[421.10513306 -211.11535645]
[408.28604126 -203.31156921]
[394.90075684 -196.52464294]
[381.02978516 -190.79537964]
[366.75653076 -186.15823364]
[352.16687012 -182.64112854]
[337.34854126 -180.26518250]
[322.39065552 -179.04470825]
[307.38314819 -178.98703003]
[292.41632080 -180.09249878]
[277.58013916 -182.35446167]
[262.96386719 -185.75932312]
[248.65541077 -190.28660583]
[234.74081421 -195.90907288]
[228.06062317 -182.47869873]
[221.38043213 -169.04832458]
[214.70022583 -155.61795044]
[208.02003479 -142.18757629]
[201.33984375 -128.75720215]
[194.96124268 -115.18099213]
[188.88740540 -101.46572876]
[190.80845642 -86.69552612]
[178.14584351 -77.21032715]
[172.07202148 -63.49505997]
[165.99818420 -49.77979279]
[169.97558594 -29.52775574]
[152.46174622 -17.17954063]
[147.00639343 -3.20674372]
[141.55104065 10.76605415]
[145.12831116 27.94656754]
[130.65667725 39.33310699]
[125.40995789 53.38557816]
[120.16324615 67.43804932]
[114.91652679 81.49051666]
[109.66980743 95.54299164]
[105.59014130 109.97754669]
[102.70486450 124.69743347]
[99.81959534 139.41732788]
[96.93431854 154.13722229]
[94.04904938 168.85710144]
[105.91149902 159.67657471]
[120.90066528 159.10665894]
[133.42596436 167.35995483]
[138.81578064 181.35816956]
[135.05981445 195.88032532]
[123.55898285 205.50999451]
[108.60279083 206.65557861]
[95.76953125 198.88978577]
[89.84558868 185.10791016]
[85.23158264 199.38063049]
[80.61756897 213.65336609]
[76.21657562 227.99322510]
[72.02956390 242.39700317]
[67.84255219 256.80078125]
[64.84777832 271.49877930]
[63.06531143 286.39251709]
[61.28284454 301.28622437]
[59.50037766 316.17993164]
[57.71791458 331.07366943]
[71.36292267 337.63815308]
[82.13536072 348.27926636]
[88.86672974 361.84271240]
[90.82685089 376.85726929]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 206]
[14 205]
[15 204]
[16 203]
[17 202]
[29 201]
[30 200]
[31 199]
[34 198]
[35 197]
[36 196]
[37 187]
[38 186]
[39 185]
[40 184]
[41 183]
[53 182]
[54 181]
[55 180]
[56 179]
[57 178]
[60 176]
[61 175]
[62 174]
[67 172]
[68 171]
[69 170]
[71 168]
[72 167]
[76 166]
[77 165]
[78 164]
[79 163]
[80 162]
[81 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
