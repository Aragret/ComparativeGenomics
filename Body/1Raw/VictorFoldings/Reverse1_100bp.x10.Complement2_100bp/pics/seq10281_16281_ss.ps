%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCAGUGAGUAUCCGGUCUGAAUCCCGAUCCUACUACUAAUUAUUCUCCCUACUGUAUUGAUAAUCACCGUCCAAUCAACAAACAUCCCGAGUACCAUxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[21.33057785 577.78369141]
[15.50628662 563.62969971]
[16.93837929 548.39129639]
[25.29777145 535.57025146]
[38.66353607 528.11273193]
[38.21693039 513.11938477]
[37.77032471 498.12603760]
[37.32371902 483.13265991]
[26.34038544 473.13757324]
[25.67387772 457.93853760]
[36.23212814 446.48599243]
[35.78551865 431.49264526]
[35.33891296 416.49929810]
[34.89230728 401.50595093]
[34.44570160 386.51260376]
[33.99909592 371.51922607]
[33.32931137 356.53421021]
[24.84818840 344.29003906]
[31.75037003 330.05380249]
[30.85755348 315.08038330]
[29.96473885 300.10696411]
[24.14993858 313.93405151]
[15.53502464 326.21343994]
[4.51191759 336.38650513]
[-8.41790390 343.99041748]
[-22.66621971 348.67929077]
[-37.58482742 350.23977661]
[-52.49502945 348.60092163]
[-66.71851349 343.83724976]
[-79.60820007 336.16549683]
[-90.57769775 325.93463135]
[-99.12796783 313.61016846]
[-104.87002563 299.75271606]
[-107.54265594 284.99273682]
[-107.02426910 270.00170898]
[-103.33843994 255.46159363]
[-96.65285492 242.03388977]
[-87.27165985 230.32948303]
[-75.62164307 220.88082886]
[-62.23280334 214.11778259]
[-47.71423340 210.34800720]
[-32.72644043 209.74301147]
[-17.95126343 212.33032227]
[-4.06087685 217.99223328]
[8.31279850 226.47116089]
[18.60684395 237.38136292]
[26.35294914 250.22651672]
[31.19871902 264.42224121]
[32.92373657 279.32705688]
[37.96065521 265.19802856]
[42.99757004 251.06898499]
[48.03448868 236.93995667]
[53.07140350 222.81092834]
[57.89739990 208.60847473]
[62.51140976 194.33573914]
[67.12541962 180.06300354]
[71.73942566 165.79026794]
[67.14588928 148.85314941]
[80.91413116 136.62542725]
[85.31513214 122.28557587]
[89.71612549 107.94573212]
[93.68822479 93.48120880]
[97.22789764 78.90483093]
[100.76757050 64.32846069]
[104.30724335 49.75208282]
[107.19251251 35.03219223]
[109.41763306 20.19814682]
[102.28215790 3.22267699]
[113.74129486 -10.06849194]
[115.74530792 -24.93402100]
[117.74932098 -39.79954910]
[119.75333405 -54.66507721]
[107.66479492 -61.98722839]
[99.30539703 -73.32939148]
[95.91065216 -86.95954895]
[97.96105957 -100.81185913]
[105.11437988 -112.79973602]
[116.26227570 -121.13018799]
[129.70185852 -124.57193756]
[131.92698669 -139.40597534]
[133.70944214 -154.29969788]
[135.04768372 -169.23988342]
[136.38591003 -184.18006897]
[128.25270081 -200.70072937]
[138.90040588 -214.65039062]
[140.01606750 -229.60884094]
[141.13171387 -244.56730652]
[142.02452087 -259.54071045]
[142.69430542 -274.52575684]
[143.36408997 -289.51077271]
[144.03387451 -304.49581909]
[144.70365906 -319.48086548]
[130.67677307 -328.23516846]
[123.02256775 -342.78540039]
[123.74635315 -359.11611938]
[132.55598450 -372.77432251]
[146.96739197 -380.08346558]
[147.41400146 -395.07681274]
[147.86061096 -410.07015991]
[133.98188782 -416.27093506]
[123.53618622 -427.31430054]
[118.11639404 -441.51620483]
[118.54899597 -456.71099854]
[124.76802063 -470.58154297]
[135.82510376 -481.01269531]
[150.03413391 -486.41381836]
[165.22833252 -485.96121216]
[179.09069824 -479.72396851]
[189.50730896 -468.65316772]
[194.88970947 -454.43704224]
[194.41712952 -439.24343872]
[188.16163635 -425.38931274]
[177.07714844 -414.98727417]
[162.85395813 -409.62356567]
[162.40734863 -394.63021851]
[161.96073914 -379.63687134]
[174.02748108 -373.24069214]
[182.20042419 -362.21655273]
[184.83876038 -348.68185425]
[181.37170410 -335.26702881]
[172.42062378 -324.60424805]
[159.68870544 -318.81106567]
[159.01892090 -303.82604980]
[158.34913635 -288.84100342]
[157.67935181 -273.85595703]
[157.00956726 -258.87091064]
[159.51417542 -254.80447388]
[159.49084473 -249.12147522]
[156.09016418 -243.45164490]
[154.97451782 -228.49319458]
[153.85887146 -213.53474426]
[161.51229858 -204.16716003]
[160.70524597 -191.69589233]
[151.32609558 -182.84182739]
[149.98786926 -167.90164185]
[148.64962769 -152.96145630]
[150.34150696 -150.72634888]
[151.24995422 -147.68640137]
[151.06401062 -144.13662720]
[149.58511353 -140.47912598]
[146.76103210 -137.18086243]
[144.53590393 -122.34681702]
[157.91513062 -113.60913086]
[166.17453003 -99.86154938]
[167.61706543 -83.83024597]
[161.90339661 -68.72017670]
[150.12994385 -57.57435989]
[134.61886597 -52.66106415]
[132.61485291 -37.79553604]
[130.61083984 -22.93000603]
[128.60682678 -8.06447792]
[135.68911743 1.74203753]
[134.14118958 14.14315510]
[124.25167847 22.42326355]
[122.02655792 37.25730896]
[134.70150757 29.23573685]
[149.36579895 32.39149857]
[157.61903381 44.91683197]
[154.73341370 59.63665390]
[142.36193848 68.11878204]
[127.59154510 65.50427246]
[118.88361359 53.29175568]
[115.34394836 67.86812592]
[111.80427551 82.44450378]
[108.26460266 97.02088165]
[109.62400818 99.74879456]
[110.02089691 103.03163147]
[109.24780273 106.51383972]
[107.23153687 109.76821136]
[104.05597687 112.34673309]
[99.65497589 126.68657684]
[95.25398254 141.02642822]
[100.59650421 152.76611328]
[96.63568878 164.61920166]
[86.01216125 170.40428162]
[81.39815521 184.67701721]
[76.78414154 198.94975281]
[72.17013550 213.22248840]
[73.17871094 219.75657654]
[71.05486298 225.02784729]
[67.20043182 227.84783936]
[62.16351700 241.97686768]
[57.12660217 256.10589600]
[52.08968353 270.23492432]
[47.05276871 284.36395264]
[44.93814468 299.21417236]
[45.83095932 314.18756104]
[46.72377396 329.16098022]
[55.26876068 342.47613525]
[48.30271912 355.64138794]
[51.61861038 361.36120605]
[51.55731583 367.04391479]
[48.99244690 371.07263184]
[49.43905258 386.06597900]
[49.88565826 401.05932617]
[50.33226395 416.05267334]
[50.77886963 431.04602051]
[51.22547531 446.03939819]
[62.44667435 456.84320068]
[62.68600845 472.05496216]
[52.31707001 482.68606567]
[52.76367569 497.67941284]
[53.21028137 512.67279053]
[53.65688705 527.66613770]
[67.44283295 534.31488037]
[76.55052948 546.61566162]
[78.88708496 561.74176025]
[73.91558075 576.21734619]
[62.77843475 586.71606445]
[48.03487778 590.82531738]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 204]
[6 203]
[7 202]
[8 201]
[11 198]
[12 197]
[13 196]
[14 195]
[15 194]
[16 193]
[17 190]
[19 188]
[20 187]
[21 186]
[49 185]
[50 184]
[51 183]
[52 182]
[53 181]
[54 178]
[55 177]
[56 176]
[57 175]
[59 172]
[60 171]
[61 170]
[62 165]
[63 164]
[64 163]
[65 162]
[66 155]
[67 154]
[69 151]
[70 150]
[71 149]
[72 148]
[79 142]
[80 141]
[81 136]
[82 135]
[83 134]
[85 131]
[86 130]
[87 129]
[88 126]
[89 125]
[90 124]
[91 123]
[92 122]
[97 116]
[98 115]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
