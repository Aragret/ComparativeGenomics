%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCAUUUUCCUCCCGUUAAAGAUCUAGUUUAUUAUUCUUCCAUUAUCGAUGAUUCUUCUUAAAAUACCUCUUUCCCUGCGCCCGCCCCCUAUAUCCCAGxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[5.34485960 630.32269287]
[-1.08995795 643.90551758]
[-9.52286625 656.34686279]
[-19.75618553 667.35498047]
[-31.55003166 676.67193604]
[-44.62794113 684.07928467]
[-58.68334961 689.40338135]
[-73.38677216 692.51940918]
[-88.39354706 693.35437012]
[-103.35189056 691.88867188]
[-117.91116333 688.15661621]
[-131.73007202 682.24572754]
[-144.48466492 674.29461670]
[-155.87597656 664.48956299]
[-165.63697815 653.06054688]
[-173.53884888 640.27532959]
[-179.39636230 626.43371582]
[-183.07220459 611.86016846]
[-184.48022461 596.89630127]
[-183.58738708 581.89288330]
[-180.41465759 567.20153809]
[-175.03637695 553.16680908]
[-167.57862854 540.11755371]
[-158.21624756 528.35974121]
[-147.16868591 518.16894531]
[-134.69493103 509.78411865]
[-121.08736420 503.40176392]
[-106.66497803 499.17147827]
[-91.76585388 497.19244385]
[-76.73925018 497.51107788]
[-61.93740463 500.11987305]
[-57.11140823 485.91741943]
[-52.28541183 471.71496582]
[-47.45941162 457.51251221]
[-42.63341522 443.31005859]
[-37.80741882 429.10760498]
[-32.98141861 414.90515137]
[-34.25138855 410.30120850]
[-32.64267349 404.85061646]
[-27.79451942 400.35540771]
[-22.54780006 386.30291748]
[-17.30108261 372.25045776]
[-12.05436420 358.19796753]
[-6.80764627 344.14550781]
[-1.56092787 330.09304810]
[-7.95817375 316.69113159]
[-2.83743787 302.36520386]
[11.26307964 295.74603271]
[16.50979805 281.69357300]
[13.71301270 267.06390381]
[25.78859901 256.84182739]
[31.03531837 242.78935242]
[29.99571609 240.18601990]
[29.92469215 237.01402283]
[31.04400635 233.64022827]
[33.43864059 230.50489807]
[37.03530884 228.07221985]
[43.10914230 214.35694885]
[49.08070374 200.59684753]
[54.94966507 186.79266357]
[60.81862640 172.98849487]
[66.68759155 159.18431091]
[72.55654907 145.38014221]
[78.42550659 131.57595825]
[84.29447174 117.77178192]
[90.16342926 103.96760559]
[95.51461792 89.95458221]
[100.34061432 75.75212860]
[105.16661072 61.54967499]
[109.99260712 47.34721756]
[114.28673553 32.97500610]
[118.04303741 18.45294571]
[121.79933167 3.93088722]
[124.35516357 -10.84976673]
[125.69339752 -25.78995132]
[127.03163910 -40.73013687]
[128.36987305 -55.67032242]
[129.37413025 -70.63666534]
[130.04391479 -85.62170410]
[130.71369934 -100.60674286]
[123.60032654 -114.73863983]
[131.89820862 -127.10772705]
[132.56799316 -142.09277344]
[133.23777771 -157.07780457]
[133.90756226 -172.06285095]
[133.46096802 -187.05619812]
[131.90043640 -201.97479248]
[130.33992004 -216.89340210]
[128.77938843 -231.81201172]
[127.21887207 -246.73062134]
[125.65834808 -261.64923096]
[110.77484131 -264.17584229]
[97.12541962 -270.62533569]
[85.72296906 -280.51910400]
[77.41361237 -293.12295532]
[72.81397247 -307.50161743]
[72.26537323 -322.58807373]
[75.80850983 -337.26284790]
[83.18047333 -350.43695068]
[93.83420563 -361.13275146]
[106.97913361 -368.55661011]
[121.63981628 -372.15756226]
[136.72833252 -371.66845703]
[151.12501526 -367.12551880]
[163.76153564 -358.86593628]
[173.70018005 -347.50256348]
[180.20343018 -333.87866211]
[182.78869629 -319.00524902]
[181.26416016 -303.98599243]
[175.74291992 -289.93539429]
[166.63471985 -277.89617920]
[154.61541748 -268.76165771]
[140.57695007 -263.20974731]
[142.13748169 -248.29113770]
[143.69799805 -233.37252808]
[145.25851440 -218.45393372]
[146.81904602 -203.53532410]
[148.37956238 -188.61671448]
[155.92088318 -201.58316040]
[168.88563538 -209.12736511]
[183.88488770 -209.27728271]
[196.99786377 -201.99374390]
[204.79685974 -189.18064880]
[205.24324036 -174.18728638]
[198.22032166 -160.93290710]
[185.56387329 -152.88217163]
[170.58227539 -152.13951111]
[157.19166565 -158.89906311]
[148.89260864 -171.39306641]
[148.22282410 -156.40802002]
[147.55303955 -141.42298889]
[146.88325500 -126.43794250]
[154.04452515 -113.37787628]
[145.69874573 -99.93695831]
[145.02896118 -84.95191956]
[144.35916138 -69.96688080]
[146.45594788 -67.13212585]
[147.28385925 -63.14093018]
[146.31433105 -58.60074234]
[143.31005859 -54.33208847]
[141.97181702 -39.39190292]
[140.63359070 -24.45171738]
[139.29534912 -9.51153183]
[148.82475281 -21.09560204]
[162.60986328 -27.00918770]
[177.57107544 -25.93117905]
[190.36601257 -18.10240936]
[198.13624573 -5.27184105]
[199.14588928 9.69414139]
[193.16938782 23.45209885]
[181.54190063 32.92847061]
[166.86105347 36.00621033]
[152.40655518 31.99773979]
[141.40760803 21.79856682]
[136.32139587 7.68718767]
[132.56509399 22.20924759]
[128.80879211 36.73130798]
[142.86116028 31.48431015]
[155.80282593 39.06805801]
[158.09367371 53.89209366]
[148.04498291 65.02868652]
[133.06427002 64.26835632]
[124.19506836 52.17321777]
[119.36906433 66.37567139]
[114.54306793 80.57812500]
[109.71707153 94.78058624]
[124.12077332 90.59328461]
[136.46253967 99.11858368]
[137.64448547 114.07194519]
[126.79532623 124.43031311]
[111.91265106 122.55786896]
[103.96760559 109.83657074]
[98.09864807 123.64074707]
[92.22968292 137.44491577]
[86.36072540 151.24909973]
[80.49176788 165.05328369]
[74.62280273 178.85745239]
[68.75384521 192.66163635]
[62.88488388 206.46580505]
[62.40711975 215.58773804]
[56.82440948 220.43078613]
[50.75057602 234.14605713]
[45.08778763 248.03607178]
[39.84107208 262.08856201]
[42.26257706 277.72335815]
[30.56226921 286.94027710]
[25.31554985 300.99276733]
[31.62775230 315.23333740]
[26.10665131 329.40979004]
[12.49154377 335.33975220]
[7.24482536 349.39224243]
[1.99810708 363.44470215]
[-3.24861121 377.49716187]
[-8.49532890 391.54965210]
[-13.74204731 405.60211182]
[-18.77896309 419.73114014]
[-23.60496140 433.93359375]
[-28.43095970 448.13604736]
[-33.25695801 462.33850098]
[-38.08295441 476.54095459]
[-42.90895081 490.74340820]
[-47.73495102 504.94586182]
[-34.40802765 511.89523315]
[-22.29817390 520.79760742]
[-11.68925953 531.44427490]
[-2.82997251 543.58563232]
[4.07201242 556.93713379]
[8.85490322 571.18585205]
[11.40658092 585.99761963]
[11.66723156 601.02532959]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 202]
[32 201]
[33 200]
[34 199]
[35 198]
[36 197]
[37 196]
[40 195]
[41 194]
[42 193]
[43 192]
[44 191]
[45 190]
[48 187]
[49 186]
[51 184]
[52 183]
[57 182]
[58 181]
[59 179]
[60 178]
[61 177]
[62 176]
[63 175]
[64 174]
[65 173]
[66 172]
[67 166]
[68 165]
[69 164]
[70 163]
[71 157]
[72 156]
[73 155]
[74 143]
[75 142]
[76 141]
[77 140]
[78 136]
[79 135]
[80 134]
[82 132]
[83 131]
[84 130]
[85 129]
[86 118]
[87 117]
[88 116]
[89 115]
[90 114]
[91 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
