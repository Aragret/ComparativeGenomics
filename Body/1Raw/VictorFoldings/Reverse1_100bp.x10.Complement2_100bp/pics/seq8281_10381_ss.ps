%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[90.97944641 424.61520386]
[75.92081451 426.51309204]
[61.19440460 422.83923340]
[48.79184723 414.09045410]
[40.39048767 401.44998169]
[37.12653732 386.62731934]
[39.44142151 371.62713623]
[47.02206802 358.47805786]
[58.84325790 348.95840454]
[73.30627441 344.35562134]
[74.19908905 329.38220215]
[75.09190369 314.40881348]
[75.98472595 299.43539429]
[76.87754059 284.46197510]
[77.77035522 269.48858643]
[78.66316986 254.51518250]
[79.55598450 239.54176331]
[77.50164795 236.67610168]
[76.73324585 232.67303467]
[77.77026367 228.14778137]
[80.83776093 223.92433167]
[74.46652985 210.46116638]
[83.59754181 197.54083252]
[85.15806580 182.62222290]
[86.71858978 167.70362854]
[88.27911377 152.78501892]
[89.83963776 137.86640930]
[91.06661224 122.91667938]
[91.95942688 107.94327545]
[81.42984772 118.62634277]
[66.65119171 121.19371033]
[53.13553238 114.68779755]
[45.92387009 101.53515625]
[47.70598221 86.64139557]
[57.81718445 75.56152344]
[72.48624420 72.42805481]
[86.24197388 78.40969086]
[93.95407867 91.27658081]
[96.61987305 76.51535797]
[91.45830536 61.55979919]
[101.33432770 50.41020203]
[104.00012207 35.64898682]
[98.83855438 20.69342422]
[108.71456909 9.54382706]
[111.38036346 -5.21739006]
[114.04615784 -19.97860718]
[116.71195984 -34.73982620]
[107.09065247 -23.23197556]
[93.99735260 -15.91313839]
[79.15469360 -13.74623013]
[64.51548767 -17.01634598]
[52.00577545 -25.29324532]
[43.27141953 -37.48796082]
[39.46158218 -51.99606705]
[41.07750702 -66.90876770]
[47.90659332 -80.26405334]
[59.05035782 -90.30479431]
[73.04264832 -95.70996857]
[88.04253387 -95.76842499]
[102.07652283 -90.47247314]
[113.29820251 -80.51889038]
[120.23117065 -67.21723175]
[121.96311951 -52.31520081]
[127.83208466 -66.11937714]
[133.70103455 -79.92355347]
[139.57000732 -93.72772980]
[145.43896484 -107.53191376]
[151.30792236 -121.33609009]
[137.88294983 -128.03765869]
[124.89151764 -135.54521179]
[112.38192749 -143.83081055]
[100.40073395 -152.86363220]
[88.99250793 -162.61007690]
[78.19968414 -173.03387451]
[68.06240845 -184.09628296]
[58.61840439 -195.75610352]
[49.90279770 -207.96998596]
[41.94800949 -220.69250488]
[34.78363419 -233.87629700]
[28.43632507 -247.47235107]
[22.92969513 -261.43005371]
[18.28422737 -275.69754028]
[14.51720428 -290.22164917]
[11.64263916 -304.94842529]
[9.67122650 -319.82305908]
[8.61029911 -334.79019165]
[8.46380424 -349.79415894]
[9.23228645 -364.77917480]
[10.91288757 -379.68945312]
[13.49935532 -394.46954346]
[16.98206902 -409.06445312]
[21.34807014 -423.41992188]
[26.58111763 -437.48248291]
[32.66174698 -451.19989014]
[39.56733322 -464.52105713]
[47.27219009 -477.39645386]
[55.74765015 -489.77819824]
[64.96218872 -501.62020874]
[74.88153076 -512.87841797]
[85.46876526 -523.51098633]
[96.68451691 -533.47833252]
[108.48705292 -542.74334717]
[120.83247375 -551.27160645]
[133.67485046 -559.03143311]
[146.96640015 -565.99383545]
[160.65769958 -572.13299561]
[174.69779968 -577.42608643]
[189.03445435 -581.85333252]
[203.61436462 -585.39837646]
[218.38327026 -588.04797363]
[233.28623962 -589.79223633]
[248.26782227 -590.62469482]
[263.27227783 -590.54229736]
[278.24383545 -589.54534912]
[293.12673950 -587.63745117]
[307.86563110 -584.82586670]
[322.40573120 -581.12091064]
[336.69290161 -576.53643799]
[350.67401123 -571.08947754]
[364.29705811 -564.80029297]
[377.51135254 -557.69226074]
[390.26770020 -549.79193115]
[402.51870728 -541.12854004]
[414.21878052 -531.73443604]
[425.32437134 -521.64453125]
[435.79418945 -510.89633179]
[445.58929443 -499.52981567]
[454.67318726 -487.58734131]
[463.01214600 -475.11325073]
[470.57513428 -462.15399170]
[477.33398438 -448.75778198]
[483.26358032 -434.97442627]
[488.34185791 -420.85522461]
[492.54992676 -406.45269775]
[495.87213135 -391.82040405]
[498.29611206 -377.01278687]
[499.81283569 -362.08496094]
[500.41668701 -347.09240723]
[500.10540771 -332.09094238]
[498.88015747 -317.13635254]
[496.74548340 -302.28430176]
[493.70935059 -287.58999634]
[489.78302002 -273.10809326]
[484.98110962 -258.89251709]
[479.32150269 -244.99612427]
[472.82525635 -231.47061157]
[465.51651001 -218.36630249]
[457.42245483 -205.73193359]
[448.57324219 -193.61451721]
[439.00173950 -182.05911255]
[428.74356079 -171.10873413]
[417.83691406 -160.80409241]
[406.32232666 -151.18353271]
[394.24264526 -142.28285217]
[381.64279175 -134.13516235]
[368.56967163 -126.77075195]
[355.07192993 -120.21703339]
[341.19970703 -114.49839020]
[327.00469971 -109.63608551]
[312.53964233 -105.64821625]
[297.85836792 -102.54961395]
[283.01550293 -100.35180664]
[268.06625366 -99.06297302]
[253.06626892 -98.68789673]
[238.07128906 -99.22798920]
[223.13713074 -100.68122864]
[208.31935120 -103.04221344]
[193.67308044 -106.30215454]
[179.25277710 -110.44893646]
[165.11210632 -115.46712494]
[159.24313354 -101.66294861]
[153.37417603 -87.85877228]
[147.50521851 -74.05459595]
[141.63626099 -60.25041962]
[135.76730347 -46.44624329]
[131.47317505 -32.07402802]
[128.80737305 -17.31281090]
[126.14158630 -2.55159450]
[123.47578430 12.20962238]
[128.82803345 26.10936165]
[118.76133728 38.31478119]
[116.09554291 53.07599640]
[121.44778442 66.97573853]
[111.38109589 79.18115234]
[108.71529388 93.94237518]
[106.93283081 108.83609009]
[106.04001617 123.80949402]
[108.37783813 128.47657776]
[108.66313934 133.11036682]
[107.25233459 136.93458557]
[104.75823975 139.42694092]
[103.19771576 154.34553528]
[101.63719177 169.26414490]
[100.07666779 184.18275452]
[98.51614380 199.10134888]
[104.77576447 213.63159180]
[95.75637054 225.48484802]
[94.52939606 240.43458557]
[93.63657379 255.40798950]
[92.74375916 270.38140869]
[91.85094452 285.35479736]
[90.95812988 300.32821655]
[90.06531525 315.30160522]
[89.17250061 330.27502441]
[88.27967834 345.24841309]
[102.09326935 351.53726196]
[112.69947052 362.39419556]
[118.66388702 376.35089111]
[119.17987823 391.51989746]
[114.17765808 405.84967041]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 205]
[11 204]
[12 203]
[13 202]
[14 201]
[15 200]
[16 199]
[17 198]
[21 197]
[23 195]
[24 194]
[25 193]
[26 192]
[27 191]
[28 187]
[29 186]
[38 185]
[39 184]
[41 182]
[42 181]
[44 179]
[45 178]
[46 177]
[47 176]
[63 175]
[64 174]
[65 173]
[66 172]
[67 171]
[68 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
