%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGGCAGCCUUUACCACUUCCCUCUGAGCUUCAUGAGACUCCGAACAUCCUCCCAUUUUAUCUCUGGGUCAUUUUAACAUUAUUCGUCACGAACUUAAUxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[75.49052429 422.34457397]
[82.11288452 435.91094971]
[84.82836151 450.76116943]
[83.43546295 465.79321289]
[78.03753662 479.89160156]
[69.03515625 492.01019287]
[57.09634399 501.24963379]
[43.10705566 506.92434692]
[28.10537720 508.61318970]
[13.20453739 506.19088745]
[-0.48972192 499.83715820]
[-11.96119690 490.02352905]
[-20.35862732 477.47817993]
[-25.05887032 463.13208008]
[-25.71313286 448.04980469]
[-22.27286720 433.35058594]
[-14.99336433 420.12518311]
[-4.41480875 409.35501099]
[8.67779827 401.83926392]
[23.31289864 398.13571167]
[38.40447235 398.51913452]
[42.80546951 384.17929077]
[47.20646667 369.83944702]
[51.60746384 355.49960327]
[56.00846481 341.15975952]
[59.11257172 326.48443604]
[60.89503860 311.59072876]
[62.67750549 296.69702148]
[60.79737091 293.71414185]
[60.26860428 289.67245483]
[61.57313538 285.21694946]
[64.88657379 281.18356323]
[67.33230591 266.38427734]
[69.77803040 251.58500671]
[72.22375488 236.78573608]
[61.64844513 226.33103943]
[59.22848892 211.47816467]
[66.09879303 197.88948059]
[79.81167603 190.87072754]
[82.25740051 176.07144165]
[84.70313263 161.27217102]
[87.14885712 146.47290039]
[89.15287018 131.60737610]
[90.71339417 116.68877411]
[81.67102814 105.36703491]
[83.17844391 90.95613861]
[94.36800385 81.75070190]
[95.92852783 66.83209991]
[97.48905182 51.91349411]
[99.04956818 36.99488831]
[100.61009216 22.07628250]
[102.17061615 7.15767860]
[103.73114014 -7.76092625]
[97.47152710 -22.29116249]
[106.49092102 -34.14442444]
[108.05144501 -49.06302643]
[109.61196899 -63.98163223]
[111.17248535 -78.90023804]
[104.91287231 -93.43047333]
[113.93226624 -105.28373718]
[115.49279022 -120.20233917]
[113.93226624 -135.12094116]
[109.31826019 -149.39367676]
[104.70424652 -163.66641235]
[100.09024048 -177.93914795]
[95.47622681 -192.21188354]
[90.33427429 -206.30302429]
[84.67148590 -220.19303894]
[79.00869751 -234.08306885]
[73.34590912 -247.97309875]
[67.68312073 -261.86312866]
[62.02033615 -275.75314331]
[56.35755157 -289.64318848]
[41.72253036 -286.21350098]
[26.73116112 -285.11560059]
[11.75262356 -286.37652588]
[-2.84422469 -289.96517944]
[-16.69992256 -295.79321289]
[-29.47326088 -303.71713257]
[-40.84968567 -313.54177856]
[-50.54904175 -325.02517700]
[-58.33247375 -337.88461304]
[-64.00830841 -351.80334473]
[-67.43676758 -366.43865967]
[-68.53343201 -381.43011475]
[-67.27128601 -396.40853882]
[-63.68141937 -411.00509644]
[-57.85223007 -424.86032104]
[-49.92726898 -437.63299561]
[-40.10169601 -449.00860596]
[-28.61747360 -458.70703125]
[-15.75741196 -466.48941040]
[-1.83820021 -472.16409302]
[12.79738712 -475.59133911]
[27.78893661 -476.68676758]
[42.76726532 -475.42337036]
[57.36352158 -471.83230591]
[71.21825409 -466.00198364]
[83.99028778 -458.07595825]
[95.36508942 -448.24945068]
[105.06255341 -436.76443481]
[112.84386444 -423.90371704]
[118.51739502 -409.98403931]
[121.94344330 -395.34817505]
[123.03763580 -380.35653687]
[121.77301788 -365.37832642]
[118.18074036 -350.78234863]
[112.34926605 -336.92810059]
[104.42219543 -324.15670776]
[94.59474945 -312.78271484]
[83.10892487 -303.08621216]
[70.24758148 -295.30596924]
[75.91036224 -281.41595459]
[81.57315063 -267.52590942]
[87.23593903 -253.63587952]
[92.89872742 -239.74586487]
[98.56150818 -225.85583496]
[104.22429657 -211.96580505]
[112.35926819 -224.56828308]
[127.26832581 -226.21751404]
[137.96107483 -215.69776917]
[136.55520630 -200.76379395]
[124.08708954 -192.42436218]
[109.74896240 -196.82588196]
[114.36297607 -182.55314636]
[118.97698212 -168.28042603]
[123.59098816 -154.00769043]
[128.20500183 -139.73495483]
[130.37771606 -154.57676697]
[135.54837036 -168.65739441]
[143.49713135 -181.37814331]
[153.88598633 -192.19808960]
[166.27322388 -200.65719604]
[180.13212585 -206.39576721]
[194.87338257 -209.16978455]
[209.87020874 -208.86129761]
[224.48492432 -205.48342896]
[238.09611511 -199.17980957]
[250.12501526 -190.21847534]
[260.06015015 -178.98045349]
[267.47906494 -165.94360352]
[272.06634521 -151.66224670]
[273.62689209 -136.74363708]
[272.09432983 -121.82213593]
[267.53390503 -107.53219604]
[260.13946533 -94.48143768]
[250.22543335 -83.22479248]
[238.21337891 -74.24089050]
[224.61405945 -67.91172791]
[210.00570679 -64.50643158]
[195.00947571 -64.16979980]
[180.26303101 -66.91613770]
[166.39340210 -72.62867737]
[153.99031067 -81.06451416]
[143.58114624 -91.86494446]
[135.60852051 -104.57074738]
[130.41139221 -118.64181519]
[128.85087585 -103.72321320]
[135.22210693 -90.26005554]
[126.09109497 -77.33971405]
[124.53057098 -62.42110825]
[122.97004700 -47.50250626]
[121.40952301 -32.58390045]
[127.78076172 -19.12074089]
[118.64974213 -6.20040321]
[117.08921814 8.71820164]
[115.52870178 23.63680649]
[113.96817780 38.55541229]
[112.40765381 53.47401428]
[110.84712982 68.39262390]
[109.28660583 83.31122589]
[118.32897186 94.63296509]
[116.82155609 109.04386139]
[105.63199615 118.24929810]
[104.07147217 133.16790771]
[105.97962189 137.06828308]
[106.49548340 140.97959900]
[105.78657532 144.46281433]
[104.14580536 147.17842102]
[101.94812775 148.91864014]
[99.50240326 163.71791077]
[97.05667114 178.51718140]
[94.61094666 193.31645203]
[105.33654785 204.37391663]
[107.46962738 219.45050049]
[100.39968109 232.73507690]
[87.02302551 239.23147583]
[84.57730103 254.03074646]
[82.13157654 268.83001709]
[79.68584442 283.62927246]
[77.57122040 298.47949219]
[75.78875732 313.37319946]
[74.00629425 328.26690674]
[83.57577515 316.71594238]
[97.17304230 310.38235474]
[112.17266083 310.48904419]
[125.67844391 317.01544189]
[135.08264160 328.70135498]
[138.56944275 343.29046631]
[135.46560669 357.96585083]
[126.37043762 369.89385986]
[113.04006195 376.77145386]
[98.04837036 377.27062988]
[84.29002380 371.29501343]
[74.42154694 359.99841309]
[70.34831238 345.56076050]
[65.94731140 359.90060425]
[61.54631424 374.24044800]
[57.14531708 388.58029175]
[52.74431992 402.92013550]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 210]
[22 209]
[23 208]
[24 207]
[25 206]
[26 193]
[27 192]
[28 191]
[32 190]
[33 189]
[34 188]
[35 187]
[39 183]
[40 182]
[41 181]
[42 180]
[43 175]
[44 174]
[47 171]
[48 170]
[49 169]
[50 168]
[51 167]
[52 166]
[53 165]
[55 163]
[56 162]
[57 161]
[58 160]
[60 158]
[61 157]
[62 128]
[63 127]
[64 126]
[65 125]
[66 124]
[67 118]
[68 117]
[69 116]
[70 115]
[71 114]
[72 113]
[73 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
