%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUUAUCUACCUCUGUAUGUCUUUAUCAGUUUGGUGUAGAUGUUUUACGGUCAUAGUCCGCCGCCGAAGCUUCGGUUUCACUACAAACCUACAUUUCACxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[86.35479736 567.75683594]
[72.31253815 573.05090332]
[57.91391373 577.28076172]
[43.23945618 580.42285156]
[28.37122154 582.45947266]
[13.39236450 583.37927246]
[-1.61334598 583.17712402]
[-16.56199265 581.85418701]
[-31.36997414 579.41784668]
[-45.95447540 575.88165283]
[-60.23394012 571.26550293]
[-74.12850189 565.59509277]
[-87.56046295 558.90222168]
[-100.45470428 551.22424316]
[-112.73911285 542.60418701]
[-124.34498596 533.09020996]
[-135.20742798 522.73553467]
[-145.26567078 511.59802246]
[-154.46348572 499.74002075]
[-162.74943542 487.22781372]
[-170.07716370 474.13137817]
[-176.40570068 460.52395630]
[-181.69964600 446.48165894]
[-185.92941284 432.08297729]
[-189.07131958 417.40850830]
[-191.10781860 402.54025269]
[-192.02749634 387.56140137]
[-191.82524109 372.55566406]
[-190.50215149 357.60705566]
[-188.06565857 342.79907227]
[-184.52935791 328.21459961]
[-179.91305542 313.93518066]
[-174.24253845 300.04067993]
[-167.54954529 286.60876465]
[-159.87149048 273.71459961]
[-151.25131226 261.43026733]
[-141.73722839 249.82447815]
[-131.38244629 238.96212769]
[-120.24485779 228.90397644]
[-108.38676453 219.70626831]
[-95.87448120 211.42044067]
[-82.77798462 204.09281921]
[-69.17050934 197.76440430]
[-55.12815857 192.47058105]
[-40.72946167 188.24095154]
[-26.05494690 185.09916687]
[-11.18667793 183.06280518]
[3.79219460 182.14324951]
[18.79790115 182.34564209]
[33.74652481 183.66885376]
[48.55446243 186.10548401]
[63.13890457 189.64190674]
[67.75291443 175.36917114]
[72.36692047 161.09643555]
[76.98093414 146.82369995]
[81.59494019 132.55097961]
[78.14769745 118.06077576]
[89.75479889 107.30970001]
[94.04891968 92.93748474]
[98.02101898 78.47296143]
[101.99311829 64.00843811]
[105.96520996 49.54391098]
[109.93730927 35.07938766]
[113.90940094 20.61486435]
[117.88150024 6.15034103]
[121.85359955 -8.31418324]
[125.82569122 -22.77870750]
[127.60816193 -37.67242432]
[116.38696289 -48.47624207]
[116.14762878 -63.68799210]
[126.51656342 -74.31910706]
[126.06996155 -89.31246185]
[125.62335205 -104.30580902]
[125.17675018 -119.29915619]
[124.73014069 -134.29251099]
[109.75831604 -135.41592407]
[94.98593903 -138.09819031]
[80.57485962 -142.30990601]
[66.68298340 -148.00495911]
[53.46252060 -155.12092590]
[41.05830765 -163.57983398]
[29.60626411 -173.28903198]
[19.23185921 -184.14210510]
[10.04876137 -196.02017212]
[2.15758634 -208.79307556]
[-4.35520601 -222.32087708]
[-9.41825867 -236.45533752]
[-12.97609711 -251.04162598]
[-14.98973942 -265.91989136]
[-15.43712425 -280.92715454]
[-14.31334972 -295.89895630]
[-11.63072777 -310.67126465]
[-7.41865015 -325.08224487]
[-1.72326815 -338.97396851]
[5.39301729 -352.19427490]
[13.85223579 -364.59826660]
[23.56170464 -376.05007935]
[34.41503906 -386.42422485]
[46.29332733 -395.60702515]
[59.06642532 -403.49789429]
[72.59437561 -410.01034546]
[86.72896576 -415.07305908]
[101.31533051 -418.63055420]
[116.19365692 -420.64382935]
[131.20091248 -421.09085083]
[146.17268372 -419.96670532]
[160.94493103 -417.28372192]
[175.35580444 -413.07128906]
[189.24740601 -407.37557983]
[202.46752930 -400.25897217]
[214.87132263 -391.79946899]
[226.32289124 -382.08972168]
[236.69677734 -371.23611450]
[245.87930298 -359.35760498]
[253.76985168 -346.58432007]
[260.28198242 -333.05621338]
[265.34436035 -318.92150879]
[268.90148926 -304.33505249]
[270.91439819 -289.45666504]
[271.36105347 -274.44940186]
[270.23654175 -259.47766113]
[267.55322266 -244.70547485]
[263.34042358 -230.29470825]
[257.64437866 -216.40324402]
[250.52745056 -203.18330383]
[242.06762695 -190.77970886]
[232.35760498 -179.32836914]
[221.50376892 -168.95475769]
[209.62503052 -159.77252197]
[196.85156250 -151.88227844]
[183.32328796 -145.37046814]
[169.18844604 -140.30845642]
[154.60191345 -136.75167847]
[139.72349548 -134.73912048]
[140.17010498 -119.74576569]
[140.61669922 -104.75241852]
[141.06330872 -89.75906372]
[141.50991821 -74.76571655]
[152.49325562 -64.77061462]
[153.15975952 -49.57159042]
[142.60150146 -38.11903000]
[149.03244019 -51.67052841]
[158.97772217 -62.89957047]
[171.65303040 -70.92058563]
[186.05871582 -75.10101318]
[201.05871582 -75.11115265]
[215.47004700 -70.95021057]
[228.15618896 -62.94634247]
[238.11663818 -51.73075867]
[244.56588745 -38.18796539]
[246.99533081 -23.38601112]
[245.21334839 -8.49223709]
[239.36047363 5.31877375]
[229.89831543 16.95782661]
[217.57308960 25.50701523]
[203.35679626 30.29211617]
[188.37062073 30.93575668]
[173.79640198 27.38717842]
[160.78355408 19.92623329]
[150.35830688 9.14132500]
[143.34284973 -4.11700439]
[140.29022217 -18.80661011]
[136.31811523 -4.34208679]
[132.34602356 10.12243748]
[128.37393188 24.58696175]
[124.40183258 39.05148315]
[120.42973328 53.51601028]
[116.45764160 67.98052979]
[112.48554230 82.44505310]
[108.51345062 96.90958405]
[109.92667389 100.49777985]
[109.75141144 104.69148254]
[107.75270081 108.76728821]
[104.02753448 111.92370605]
[107.14475250 127.43478394]
[95.86767578 137.16497803]
[91.25366211 151.43771362]
[86.63965607 165.71044922]
[82.02565002 179.98318481]
[77.41163635 194.25592041]
[91.30630493 199.92605591]
[104.73838043 206.61869812]
[117.63275146 214.29641724]
[129.91731262 222.91627502]
[141.52336121 232.43005371]
[152.38597107 242.78454590]
[162.44442749 253.92185974]
[171.64245605 265.77972412]
[179.92861938 278.29177856]
[187.25657654 291.38809204]
[193.58534241 304.99539185]
[198.87954712 319.03759766]
[203.10955811 333.43618774]
[206.25172424 348.11062622]
[208.28848267 362.97882080]
[209.20843506 377.95767212]
[209.00643921 392.96337891]
[207.68362427 407.91204834]
[205.24739075 422.72006226]
[201.71134949 437.30459595]
[197.09529114 451.58407593]
[191.42501831 465.47869873]
[184.73226929 478.91073608]
[177.05442810 491.80502319]
[168.43447876 504.08950806]
[158.92059326 515.69549561]
[148.56599426 526.55798340]
[137.42858887 536.61633301]
[125.57066345 545.81427002]
[113.05852509 554.10034180]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 180]
[53 179]
[54 178]
[55 177]
[56 176]
[58 174]
[59 170]
[60 169]
[61 168]
[62 167]
[63 166]
[64 165]
[65 164]
[66 163]
[67 162]
[68 141]
[71 138]
[72 137]
[73 136]
[74 135]
[75 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
