%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[50.79693985 673.94885254]
[37.44094467 680.81427002]
[23.37822151 686.08270264]
[8.79894733 689.68286133]
[-6.09970665 691.56616211]
[-21.11625290 691.70697021]
[-36.04761124 690.10351562]
[-50.69185257 686.77746582]
[-64.85092926 681.77374268]
[-78.33335114 675.16009521]
[-90.95679474 667.02587891]
[-102.55053711 657.48114014]
[-112.95777893 646.65502930]
[-122.03778076 634.69378662]
[-129.66775513 621.75933838]
[-135.74449158 608.02655029]
[-140.18583679 593.68115234]
[-142.93170166 578.91711426]
[-143.94497681 563.93414307]
[-143.21192932 548.93481445]
[-140.74249268 534.12200928]
[-136.57006836 519.69610596]
[-130.75106812 505.85214233]
[-123.36419678 492.77731323]
[-114.50934601 480.64849854]
[-104.30627441 469.62969971]
[-92.89296722 459.86996460]
[-80.42376709 451.50122070]
[-67.06731415 444.63668823]
[-53.00423813 439.36920166]
[-38.42472458 435.77001953]
[-23.52594566 433.88775635]
[-8.50938988 433.74789429]
[6.42186165 435.35235596]
[9.74412060 420.72488403]
[13.06638050 406.09741211]
[16.38863945 391.46997070]
[19.71089935 376.84249878]
[23.03315926 362.21505737]
[21.29111290 357.76821899]
[22.32404518 352.17984009]
[26.67823219 347.20462036]
[30.43453407 332.68255615]
[34.19083405 318.16052246]
[21.14756203 310.82412720]
[10.43959808 300.35339355]
[2.80106926 287.45776367]
[-1.24216557 273.01321411]
[-1.40870881 258.00280762]
[2.31879807 243.44963074]
[9.69208145 230.34724426]
[20.21376419 219.59175110]
[33.17090988 211.92048645]
[47.68333817 207.86155701]
[62.76340103 207.69743347]
[66.51969910 193.17538452]
[70.27600098 178.65332031]
[74.03230286 164.13125610]
[72.42343140 159.63453674]
[73.62229156 154.07937622]
[78.12268066 149.23602295]
[82.30968475 134.83224487]
[86.49669647 120.42845917]
[90.57636261 105.99390411]
[94.44067383 91.50021362]
[98.19697571 76.97815704]
[101.95326996 62.45609665]
[105.70957184 47.93403625]
[109.46587372 33.41197586]
[104.13516235 15.78628445]
[116.91486359 3.75938773]
[120.45453644 -10.81698799]
[116.19228363 -26.05325508]
[126.71443176 -36.59525299]
[121.12189484 -54.13962555]
[133.72111511 -66.35546112]
[137.04336548 -80.98291779]
[140.36563110 -95.61038208]
[143.68788147 -110.23783875]
[147.01014709 -124.86530304]
[145.85916138 -133.92692566]
[150.49229431 -139.68504333]
[154.03196716 -154.26141357]
[157.57164001 -168.83778381]
[161.11131287 -183.41416931]
[146.39318848 -191.22163391]
[134.18663025 -202.54570007]
[125.30972290 -216.62014771]
[120.35551453 -232.49467468]
[119.65243530 -249.09907532]
[123.24247742 -265.31533813]
[130.87876892 -280.05300903]
[142.04251099 -292.32241821]
[155.97825623 -301.30123901]
[171.74499512 -306.38952637]
[188.27973938 -307.24978638]
[191.16500854 -321.96966553]
[194.05027771 -336.68954468]
[196.93554688 -351.40945435]
[199.82081604 -366.12933350]
[186.20330811 -372.61117554]
[174.62609863 -382.27651978]
[165.81695557 -394.51785278]
[160.32963562 -408.56561279]
[158.50906372 -423.53680420]
[160.46968079 -438.49029541]
[166.08825684 -452.48608398]
[175.01159668 -464.64440918]
[186.67875671 -474.20098877]
[200.35633850 -480.55508423]
[215.18457031 -483.30725098]
[230.23132324 -482.28451538]
[244.55075073 -477.55111694]
[257.24273682 -469.40466309]
[267.50939941 -458.35723877]
[274.70544434 -445.10324097]
[278.37844849 -430.47589111]
[278.29757690 -415.39462280]
[274.46789551 -400.80749512]
[267.13012695 -387.63146973]
[256.74554443 -376.69476318]
[243.96693420 -368.68490601]
[229.59756470 -364.10537720]
[214.54071045 -363.24407959]
[211.65544128 -348.52416992]
[208.77017212 -333.80429077]
[205.88490295 -319.08438110]
[202.99961853 -304.36450195]
[215.29000854 -298.95715332]
[226.18212891 -291.09381104]
[235.19206238 -281.12042236]
[241.91883850 -269.47671509]
[246.06217957 -256.67687988]
[247.43600464 -243.28683472]
[245.97674561 -229.89920044]
[241.74626160 -217.10704041]
[234.92924500 -205.47764587]
[225.82516479 -195.52735901]
[214.83509827 -187.69862366]
[202.44406128 -182.34034729]
[189.19963074 -179.69232178]
[175.68768311 -179.87449646]
[172.14801025 -165.29811096]
[168.60833740 -150.72174072]
[165.06866455 -136.14537048]
[161.63760376 -121.54304504]
[158.31535339 -106.91558075]
[154.99308777 -92.28812408]
[151.67083740 -77.66065979]
[148.34857178 -63.03319931]
[154.52772522 -52.63393784]
[151.87960815 -40.42037201]
[141.29080200 -33.05558014]
[145.80622864 -18.86191368]
[135.03091431 -7.27731514]
[131.49124146 7.29906034]
[137.51487732 17.78916740]
[134.68521118 29.96195412]
[123.98793030 37.16827774]
[120.23163605 51.69033813]
[116.47533417 66.21239471]
[112.71903229 80.73445892]
[108.96273041 95.25651550]
[110.15348816 103.22863007]
[105.04089355 109.96600342]
[105.78610992 119.06998444]
[100.90048218 124.61547089]
[96.71347046 139.01925659]
[92.52645874 153.42303467]
[88.55435944 167.88755798]
[84.79806519 182.40962219]
[81.04176331 196.93167114]
[77.28546143 211.45373535]
[90.39459229 218.90933228]
[101.11876678 229.49598694]
[108.73117065 242.48780823]
[112.71807098 256.99612427]
[112.81348419 272.03036499]
[109.01691437 286.56567383]
[101.59297943 299.61273193]
[91.05295563 310.28512573]
[78.11959076 317.85961914]
[63.67755127 321.82501221]
[48.71289444 321.91680908]
[44.95659256 336.43887329]
[41.20029068 350.96093750]
[37.66061783 365.53729248]
[34.33835983 380.16476440]
[31.01609993 394.79223633]
[27.69384003 409.41967773]
[24.37158203 424.04714966]
[21.04932213 438.67462158]
[35.20873260 443.67736816]
[48.69159698 450.29016113]
[61.31558228 458.42349243]
[72.90995789 467.96746826]
[83.31792450 478.79293823]
[92.39872742 490.75350952]
[100.02955627 503.68743896]
[106.10721588 517.41986084]
[110.54951477 531.76495361]
[113.29637146 546.52880859]
[114.31063843 561.51171875]
[113.57859802 576.51110840]
[111.11015320 591.32403564]
[106.93869019 605.75024414]
[101.12061310 619.59460449]
[93.73461151 632.66992188]
[84.88057709 644.79931641]
[74.67823792 655.81878662]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 192]
[35 191]
[36 190]
[37 189]
[38 188]
[39 187]
[42 186]
[43 185]
[44 184]
[55 173]
[56 172]
[57 171]
[58 170]
[61 169]
[62 168]
[63 167]
[64 165]
[65 163]
[66 162]
[67 161]
[68 160]
[69 159]
[71 156]
[72 155]
[74 153]
[76 150]
[77 149]
[78 148]
[79 147]
[80 146]
[82 145]
[83 144]
[84 143]
[85 142]
[96 128]
[97 127]
[98 126]
[99 125]
[100 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
