%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[98.57411194 483.17605591]
[97.40309143 468.20248413]
[98.08108521 453.19848633]
[100.59779358 438.39154053]
[104.91507721 424.00610352]
[110.96747589 410.26025391]
[118.66324615 397.36239624]
[127.88571930 385.50805664]
[138.49508667 374.87692261]
[150.33050537 365.63015747]
[163.21257019 357.90798950]
[157.13873291 344.19271851]
[151.06489563 330.47744751]
[144.99105835 316.76217651]
[138.91722107 303.04690552]
[135.77740479 301.44259644]
[133.25866699 298.23773193]
[132.10479736 293.74087524]
[132.89366150 288.58096313]
[127.43830872 274.60815430]
[121.98294830 260.63534546]
[116.52759552 246.66255188]
[114.54083252 261.53039551]
[107.65017700 274.85403442]
[96.66513824 285.06817627]
[82.87622070 290.97290039]
[67.90334320 291.87454224]
[53.50550079 287.66717529]
[41.37413788 278.84503174]
[32.93442917 266.44458008]
[29.17786789 251.92259216]
[30.54577065 236.98509216]
[36.87743759 223.38693237]
[47.42903137 212.72560120]
[60.96096039 206.25358582]
[75.88350677 204.73121643]
[90.44358826 208.33734131]
[102.93069458 216.64831543]
[111.87856293 228.68914795]
[109.87454987 213.82362366]
[107.87053680 198.95809937]
[105.86652374 184.09257507]
[103.86250305 169.22703552]
[94.49419403 157.64758301]
[100.31841278 142.93740845]
[97.87268829 128.13813782]
[94.98741913 113.41825104]
[85.94354248 102.75523376]
[90.29269409 89.46702576]
[87.40741730 74.74713135]
[84.52214813 60.02724075]
[81.63687134 45.30735016]
[78.75160217 30.58745766]
[75.86633301 15.86756706]
[72.54406738 1.24010694]
[68.78777313 -13.28195190]
[65.03147125 -27.80401230]
[54.33419418 -35.01033401]
[51.50452805 -47.18312073]
[57.52816391 -57.67322922]
[53.98849487 -72.24960327]
[50.18528366 -57.73976135]
[41.93172073 -45.21463776]
[30.09881783 -35.99604416]
[15.93533421 -31.05684280]
[0.93597388 -30.91827393]
[-13.31634426 -35.59496689]
[-25.31753922 -44.59337234]
[-33.80109406 -56.96387100]
[-37.87172699 -71.40097809]
[-37.09984207 -86.38110352]
[-31.56690979 -100.32336426]
[-21.85682678 -111.75640106]
[-8.99432278 -119.47364807]
[5.66319084 -122.66070557]
[20.56887245 -120.98121643]
[34.14968872 -114.61243439]
[44.97242355 -104.22646332]
[51.89498901 -90.91918182]
[52.11831665 -105.91751862]
[52.34164429 -120.91585541]
[52.56497192 -135.91418457]
[38.06670761 -140.06575012]
[25.14717865 -147.82276917]
[14.68397999 -158.65130615]
[7.38603067 -171.80906677]
[3.74555612 -186.39620972]
[4.00488710 -201.41691589]
[8.14034176 -215.84739685]
[15.86424541 -228.70559692]
[26.64493752 -239.11814880]
[39.74336243 -246.37956238]
[54.26373291 -250.00010681]
[54.48706055 -264.99844360]
[54.71038818 -279.99679565]
[54.93371582 -294.99511719]
[55.15704346 -309.99346924]
[55.38037109 -324.99179077]
[55.60369873 -339.99014282]
[41.76747131 -346.35241699]
[31.72010422 -357.79666138]
[27.20236206 -372.34002686]
[28.99697113 -387.46282959]
[36.79300690 -400.54495239]
[49.23975754 -409.31982422]
[64.18074799 -412.26715088]
[79.02735901 -408.87628174]
[91.20732880 -399.73471069]
[98.61040497 -386.42626953]
[99.95395660 -371.25674438]
[95.00521088 -356.85430908]
[84.62155914 -345.71432495]
[70.60203552 -339.76681519]
[70.37870789 -324.76846313]
[70.15538025 -309.77014160]
[69.93205261 -294.77178955]
[69.70872498 -279.77346802]
[69.48539734 -264.77511597]
[69.26206970 -249.77677917]
[83.66820526 -245.72550964]
[96.54462433 -238.07733154]
[107.01051331 -227.34841919]
[114.34815979 -214.26593018]
[118.05213165 -199.71873474]
[117.86412048 -184.69696045]
[113.79094696 -170.22468567]
[106.10447693 -157.29003906]
[95.32350922 -146.77783203]
[82.17875671 -139.40892029]
[67.56330872 -135.69085693]
[67.33998108 -120.69252777]
[67.11665344 -105.69419098]
[66.89332581 -90.69585419]
[68.56486511 -75.78927612]
[72.10453796 -61.21290207]
[84.88423920 -49.18600464]
[79.55352783 -31.56031227]
[83.30982971 -17.03825378]
[87.06613159 -2.51619387]
[89.41030121 -0.97898507]
[91.28680420 1.57940185]
[92.30364227 4.98549128]
[92.13878632 8.92723560]
[90.58621979 12.98229408]
[93.47149658 27.70218658]
[96.35676575 42.42207718]
[99.24204254 57.14196777]
[102.12731171 71.86186218]
[105.01258087 86.58174896]
[114.05645752 97.24476624]
[109.70730591 110.53297424]
[112.59258270 125.25286865]
[115.56111908 128.42173767]
[117.20185852 132.00956726]
[117.54612732 135.54748535]
[116.77432251 138.62496948]
[115.18394470 140.93339539]
[124.69559479 153.57614136]
[118.72803497 167.22302246]
[120.73204803 182.08856201]
[122.73606110 196.95408630]
[124.74007416 211.81961060]
[126.74408722 226.68513489]
[130.50039673 241.20719910]
[135.95574951 255.17999268]
[141.41110229 269.15280151]
[146.86645508 283.12557983]
[152.63249207 296.97308350]
[158.70632935 310.68835449]
[164.78016663 324.40362549]
[170.85400391 338.11886597]
[176.92782593 351.83413696]
[191.30369568 347.48510742]
[206.10505676 344.93569946]
[221.10751343 344.22457886]
[236.08364868 345.36254883]
[250.80642700 348.33230591]
[265.05264282 353.08883667]
[278.60635376 359.56008911]
[291.26205444 367.64788818]
[302.82791138 377.22967529]
[313.12857056 388.16018677]
[322.00790405 400.27371216]
[329.33126831 413.38659668]
[334.98767090 427.30004883]
[338.89135742 441.80319214]
[340.98315430 456.67611694]
[341.23132324 471.69338989]
[339.63211060 486.62731934]
[336.20977783 501.25149536]
[331.01620483 515.34429932]
[324.13012695 528.69201660]
[315.65591431 541.09228516]
[305.72204590 552.35717773]
[294.47909546 562.31591797]
[282.09753418 570.81750488]
[268.76507568 577.73303223]
[254.68380737 582.95770264]
[240.06719971 586.41235352]
[225.13684082 588.04449463]
[210.11906433 587.82946777]
[195.24154663 585.77056885]
[180.72982788 581.89892578]
[166.80390930 576.27325439]
[153.67488098 568.97882080]
[141.54177856 560.12628174]
[130.58856201 549.84979248]
[120.98125458 538.30511475]
[112.86551666 525.66729736]
[106.36436462 512.12792969]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 172]
[12 171]
[13 170]
[14 169]
[15 168]
[19 167]
[20 166]
[21 165]
[22 164]
[39 163]
[40 162]
[41 161]
[42 160]
[43 159]
[45 157]
[46 152]
[47 151]
[49 149]
[50 148]
[51 147]
[52 146]
[53 145]
[54 144]
[55 139]
[56 138]
[57 137]
[60 135]
[61 134]
[79 133]
[80 132]
[81 131]
[82 130]
[93 119]
[94 118]
[95 117]
[96 116]
[97 115]
[98 114]
[99 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
