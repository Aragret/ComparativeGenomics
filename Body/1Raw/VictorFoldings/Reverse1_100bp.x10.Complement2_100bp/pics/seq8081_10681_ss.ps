%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[26.09585571 497.54736328]
[23.00148582 482.79873657]
[23.39239120 467.73406982]
[27.24749374 453.16580200]
[34.35889053 439.87954712]
[44.34307480 428.59179688]
[56.66161346 419.91134644]
[70.65017700 414.30627441]
[68.42505646 399.47222900]
[66.19994354 384.63818359]
[63.97482681 369.80413818]
[61.74971008 354.97009277]
[59.52458954 340.13604736]
[57.29947281 325.30200195]
[55.07435608 310.46795654]
[52.90283203 308.69522095]
[51.30266953 305.95550537]
[50.64570236 302.46209717]
[51.21973801 298.55889893]
[53.18574905 294.68737793]
[51.84751511 279.74719238]
[50.50928116 264.80700684]
[49.17104721 249.86682129]
[43.77050781 263.86090088]
[35.52501678 276.39132690]
[24.80968666 286.88809204]
[12.11199474 294.87359619]
[-1.99039924 299.98461914]
[-16.85593033 301.98861694]
[-31.80831718 300.79440308]
[-46.16732407 296.45632935]
[-59.27971649 289.17172241]
[-70.54895782 279.27203369]
[-79.46238708 267.20758057]
[-85.61449432 253.52725220]
[-88.72539520 238.85337830]
[-88.65357208 223.85356140]
[-85.40229034 209.21015930]
[-79.11946106 195.58935547]
[-70.09091187 183.61082458]
[-58.72738266 173.81948853]
[-45.54583740 166.66079712]
[-31.14594650 162.46043396]
[-16.18280792 161.40946960]
[-1.33714914 163.55570984]
[12.71565437 168.80154419]
[25.33629417 176.90829468]
[35.95061493 187.50717163]
[44.07573318 200.11599731]
[49.34201431 214.16114807]
[51.51004028 229.00799561]
[56.12405014 214.73526001]
[60.73806000 200.46252441]
[65.35206604 186.18980408]
[69.96607971 171.91706848]
[74.47370911 157.61038208]
[78.87470245 143.27053833]
[83.27570343 128.93067932]
[87.67669678 114.59083557]
[80.98094177 101.74120331]
[85.23217010 87.88936615]
[97.98345184 81.00816345]
[102.27758026 66.63595581]
[106.46459198 52.23217010]
[110.65159607 37.82838821]
[114.83860779 23.42460632]
[118.81070709 8.96008205]
[122.56700897 -5.56197739]
[112.46398926 5.52535820]
[99.46049500 13.00259686]
[84.79592896 16.15705490]
[69.86803436 14.68807125]
[56.09963608 8.73565960]
[44.80305099 -1.13283539]
[37.05500031 -13.97681046]
[33.59397507 -28.57205963]
[34.74986267 -43.52745819]
[40.41248703 -57.41754913]
[50.04212189 -68.91842651]
[62.72093964 -76.93388367]
[77.24047089 -80.69995880]
[92.21679688 -79.85767365]
[106.22248840 -74.48732758]
[117.92259979 -65.10077667]
[126.20195770 -52.59268570]
[130.27142334 -38.15525436]
[129.74290466 -23.16344452]
[137.21064758 -36.17239761]
[144.67839050 -49.18135071]
[152.14611816 -62.19029999]
[159.61386108 -75.19925690]
[167.08160400 -88.20820618]
[163.17578125 -103.28740692]
[170.93444824 -116.37395477]
[185.33422852 -120.00463867]
[192.80197144 -133.01358032]
[200.26971436 -146.02253723]
[207.73745728 -159.03149414]
[215.20520020 -172.04045105]
[203.24055481 -181.12205505]
[192.53550720 -191.65914917]
[183.26583862 -203.47869873]
[175.58378601 -216.38661194]
[169.61546326 -230.17092896]
[165.45890808 -244.60531616]
[163.18235779 -259.45272827]
[162.82319641 -274.46936035]
[164.38731384 -289.40863037]
[167.84904480 -304.02520752]
[173.15153503 -318.07910156]
[180.20770264 -331.33953857]
[188.90170288 -343.58874512]
[199.09074402 -354.62554932]
[210.60752869 -364.26879883]
[223.26295471 -372.36007690]
[236.84918213 -378.76654053]
[251.14312744 -383.38296509]
[265.91006470 -386.13360596]
[280.90750122 -386.97323608]
[295.88919067 -385.88806152]
[310.60910034 -382.89596558]
[324.82550049 -378.04602051]
[338.30499268 -371.41790771]
[350.82617188 -363.12042236]
[362.18347168 -353.28988647]
[372.19039917 -342.08764648]
[380.68258667 -329.69769287]
[387.52062988 -316.32348633]
[392.59225464 -302.18463135]
[395.81411743 -287.51330566]
[397.13333130 -272.55041504]
[396.52828979 -257.54168701]
[394.00885010 -242.73353577]
[389.61642456 -228.36917114]
[383.42315674 -214.68444824]
[375.53073120 -201.90408325]
[366.06872559 -190.23794556]
[355.19253540 -179.87760925]
[343.08074951 -170.99317932]
[329.93225098 -163.73056030]
[315.96298218 -158.20899963]
[301.40228271 -154.51919556]
[286.48928833 -152.72171021]
[271.46887207 -152.84606934]
[256.58767700 -154.89022827]
[242.09008789 -158.82061768]
[228.21414185 -164.57270813]
[220.74639893 -151.56375122]
[213.27867126 -138.55479431]
[205.81092834 -125.54584503]
[198.34318542 -112.53689575]
[202.46966553 -98.27127838]
[195.08163452 -84.97196960]
[180.09056091 -80.74046326]
[172.62281799 -67.73151398]
[165.15507507 -54.72256088]
[157.68733215 -41.71360779]
[150.21958923 -28.70465660]
[142.75184631 -15.69570351]
[137.08906555 -1.80567658]
[133.33276367 12.71638298]
[134.94163513 17.21310997]
[133.74278259 22.76826668]
[129.24238586 27.61161804]
[125.05538177 42.01539993]
[120.86837006 56.41918182]
[116.68135834 70.82295990]
[117.83283997 78.12336731]
[112.32330322 85.40916443]
[119.01905823 98.25879669]
[114.76782990 112.11063385]
[102.01654816 118.99183655]
[97.61554718 133.33168030]
[93.21455383 147.67152405]
[88.81355286 162.01138306]
[89.28738403 171.13351440]
[84.23880768 176.53106689]
[79.62480164 190.80380249]
[75.01078796 205.07653809]
[70.39678192 219.34927368]
[65.78277588 233.62200928]
[64.11122894 248.52857971]
[65.44946289 263.46878052]
[66.78769684 278.40896606]
[68.12593842 293.34915161]
[69.90840149 308.24285889]
[72.13351440 323.07690430]
[74.35863495 337.91094971]
[76.58375549 352.74499512]
[78.80886841 367.57904053]
[81.03398895 382.41308594]
[83.25910187 397.24713135]
[85.48422241 412.08114624]
[100.50167084 413.33529663]
[114.82491302 418.01947021]
[127.68151093 425.88107300]
[138.37811279 436.49612427]
[146.33789062 449.29217529]
[151.13156128 463.57913208]
[152.50062561 478.58654785]
[150.37123108 493.50506592]
[144.85821533 507.53018188]
[136.25891113 519.90551758]
[125.03704834 529.96362305]
[111.79781342 537.16223145]
[97.25518036 541.11297607]
[82.19342041 541.60290527]
[67.42478180 538.60552979]
[53.74573898 532.28253174]
[41.89396667 522.97485352]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 193]
[9 192]
[10 191]
[11 190]
[12 189]
[13 188]
[14 187]
[15 186]
[20 185]
[21 184]
[22 183]
[23 182]
[51 181]
[52 180]
[53 179]
[54 178]
[55 177]
[56 175]
[57 174]
[58 173]
[59 172]
[62 169]
[63 167]
[64 166]
[65 165]
[66 164]
[67 161]
[68 160]
[87 159]
[88 158]
[89 157]
[90 156]
[91 155]
[92 154]
[95 151]
[96 150]
[97 149]
[98 148]
[99 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
