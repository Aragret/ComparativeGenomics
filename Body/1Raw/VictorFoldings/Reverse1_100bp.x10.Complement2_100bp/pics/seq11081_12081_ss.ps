%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACCGACCAACGGAGUAGCCCACUACUAUCGGUUCCACCCCUAUUCACACCAAAGCUUCUUCUAUAUUUUAUACUAAUCAAGACACCGACACUUACAAUxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[209.77091980 369.70538330]
[212.30932617 354.91043091]
[216.22203064 340.41818237]
[221.47462463 326.35601807]
[228.02096558 312.84750366]
[235.80349731 300.01135254]
[244.75384521 287.96038818]
[254.79335022 276.80050659]
[244.62980652 265.76861572]
[234.46626282 254.73675537]
[220.70185852 260.55279541]
[205.75007629 261.31011963]
[191.41453552 256.89797974]
[179.43112183 247.83050537]
[171.25779724 235.18666077]
[167.89724731 220.48200989]
[169.77386475 205.48699951]
[176.68032837 192.01383972]
[166.51676941 180.98194885]
[156.35322571 169.95007324]
[146.18968201 158.91819763]
[136.02613831 147.88632202]
[125.69946289 137.00698853]
[115.21196747 126.28260803]
[104.72446442 115.55822754]
[88.45991516 111.45449829]
[84.47737122 95.15984344]
[73.83136749 84.59279633]
[63.18535614 74.02574921]
[52.53934479 63.45870209]
[41.89333725 52.89165497]
[35.60893631 50.83791351]
[31.86684227 46.56079483]
[31.09354973 41.84793472]
[20.76688194 30.96859932]
[10.44021320 20.08926392]
[0.11354450 9.20993042]
[-10.53246403 -1.35711753]
[-21.48837280 -11.60250950]
[-32.44428253 -21.84790039]
[-43.40019226 -32.09329224]
[-54.35610199 -42.33868408]
[-65.51210022 -32.29750824]
[-77.48999023 -23.25253487]
[-90.20109558 -15.27073193]
[-103.55130768 -8.41119289]
[-117.44178772 -2.72470593]
[-131.76968384 1.74662864]
[-146.42892456 4.96970558]
[-161.31095886 6.92066193]
[-176.30563354 7.58505344]
[-191.30189514 6.95796061]
[-206.18875122 5.04402685]
[-220.85595703 1.85742199]
[-235.19493103 -2.57826066]
[-249.09950256 -8.23017979]
[-262.46673584 -15.05649185]
[-275.19766235 -23.00665283]
[-287.19802856 -32.02180481]
[-298.37896729 -42.03520203]
[-308.65768433 -52.97270584]
[-317.95812988 -64.75333405]
[-326.21142578 -77.28987122]
[-333.35644531 -90.48949432]
[-339.34030151 -104.25448608]
[-344.11868286 -118.48292542]
[-347.65621948 -133.06945801]
[-349.92672729 -147.90611267]
[-350.91342163 -162.88302612]
[-350.60891724 -177.88931274]
[-349.01553345 -192.81388855]
[-346.14505005 -207.54621887]
[-342.01873779 -221.97726440]
[-336.66711426 -236.00015259]
[-330.12979126 -249.51107788]
[-322.45523071 -262.41000366]
[-313.70019531 -274.60144043]
[-303.92953491 -285.99511719]
[-293.21560669 -296.50665283]
[-281.63766479 -306.05825806]
[-269.28149414 -314.57919312]
[-256.23855591 -322.00640869]
[-242.60543823 -328.28485107]
[-228.48303223 -333.36810303]
[-213.97593689 -337.21847534]
[-199.19152832 -339.80749512]
[-184.23930359 -341.11599731]
[-169.22993469 -341.13424683]
[-154.27455139 -339.86215210]
[-139.48390198 -337.30911255]
[-124.96747589 -333.49404907]
[-110.83274841 -328.44519043]
[-97.18437195 -322.19992065]
[-84.12340546 -314.80450439]
[-71.74653625 -306.31365967]
[-60.14540482 -296.79025269]
[-49.40590286 -286.30480957]
[-39.60754776 -274.93493652]
[-30.82287788 -262.76486206]
[-23.11693764 -249.88464355]
[-16.54677963 -236.38966370]
[-11.16104507 -222.37983704]
[-6.99961090 -207.95887756]
[-4.09328651 -193.23356628]
[-2.46359062 -178.31292725]
[-2.12258816 -163.30741882]
[-3.07280421 -148.32815552]
[-5.30720377 -133.48602295]
[-8.80924320 -118.89091492]
[-13.55299568 -104.65088654]
[-19.50333786 -90.87138367]
[-26.61621475 -77.65440369]
[-34.83896637 -65.09782410]
[-44.11071014 -53.29459381]
[-33.15480042 -43.04920197]
[-22.19889069 -32.80381012]
[-11.24298191 -22.55841827]
[-0.28707263 -12.31302738]
[2.51586509 -12.27202225]
[5.47144556 -11.11826611]
[8.15575790 -8.78805733]
[10.12967873 -5.37218809]
[10.99287891 -1.11673832]
[21.31954765 9.76259613]
[31.64621544 20.64192963]
[41.97288513 31.52126503]
[52.46038437 42.24564362]
[63.10639572 52.81269073]
[73.75240326 63.37974167]
[84.39841461 73.94678497]
[95.04441833 84.51383209]
[106.67230225 85.17234039]
[114.87692261 93.43827057]
[115.44884491 105.07072449]
[125.93634796 115.79510498]
[136.42384338 126.51948547]
[142.67697144 128.66656494]
[146.35498047 132.99891663]
[147.05801392 137.72277832]
[157.22155762 148.75465393]
[167.38510132 159.78652954]
[177.54864502 170.81840515]
[187.71220398 181.85028076]
[201.70515442 176.06904602]
[216.80342102 175.42529297]
[231.18389893 179.97740173]
[243.11682129 189.15757751]
[251.17369080 201.84254456]
[254.39840698 216.49095154]
[252.42060852 231.33067322]
[245.49813843 244.57321167]
[255.66168213 255.60508728]
[265.82522583 266.63696289]
[277.76892090 257.54394531]
[290.51162720 249.60935974]
[303.94134521 242.90286255]
[317.94006348 237.48344421]
[332.38479614 233.39871216]
[347.14852905 230.68457031]
[362.10153198 229.36486816]
[377.11242676 229.45120239]
[392.04928589 230.94281006]
[406.78082275 233.82659912]
[421.17758179 238.07720947]
[435.11306763 243.65728760]
[448.46475220 250.51780701]
[461.11535645 258.59844971]
[472.95364380 267.82824707]
[483.87564087 278.12603760]
[493.78533936 289.40133667]
[502.59564209 301.55505371]
[510.22912598 314.48040771]
[516.61871338 328.06378174]
[521.70819092 342.18579102]
[525.45294189 356.72235107]
[527.81994629 371.54568481]
[528.78851318 386.52557373]
[528.35003662 401.53030396]
[526.50842285 416.42803955]
[523.27984619 431.08789062]
[518.69262695 445.38095093]
[512.78717041 459.18167114]
[505.61529541 472.36874390]
[497.24008179 484.82629395]
[487.73510742 496.44482422]
[477.18389893 507.12222290]
[465.67922974 516.76464844]
[453.32214355 525.28741455]
[440.22128296 532.61553955]
[426.49176025 538.68469238]
[412.25421143 543.44146729]
[397.63381958 546.84417725]
[382.75900269 548.86279297]
[367.76055908 549.47961426]
[352.77023315 548.68927002]
[337.91979980 546.49865723]
[323.33972168 542.92700195]
[309.15820312 538.00573730]
[295.49981689 531.77813721]
[282.48464966 524.29888916]
[270.22702026 515.63372803]
[258.83468628 505.85879517]
[248.40776062 495.05999756]
[239.03787231 483.33227539]
[230.80737305 470.77865601]
[223.78858948 457.50946045]
[218.04321289 443.64132690]
[213.62173462 429.29614258]
[210.56300354 414.59991455]
[208.89390564 399.68185425]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 153]
[9 152]
[10 151]
[18 143]
[19 142]
[20 141]
[21 140]
[22 139]
[23 136]
[24 135]
[25 134]
[27 131]
[28 130]
[29 129]
[30 128]
[31 127]
[34 126]
[35 125]
[36 124]
[37 123]
[38 118]
[39 117]
[40 116]
[41 115]
[42 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
