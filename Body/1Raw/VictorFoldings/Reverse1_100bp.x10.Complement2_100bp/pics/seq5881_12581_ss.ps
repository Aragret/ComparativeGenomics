%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[22.80088043 496.58828735]
[25.16036797 511.43511963]
[25.10756302 526.46820068]
[22.64382935 541.29809570]
[17.83298683 555.54071045]
[10.79964638 568.82708740]
[1.72598886 580.81317139]
[-9.15295601 591.18835449]
[-21.55539894 599.68395996]
[-35.16008377 606.07995605]
[-49.61462021 610.21063232]
[-64.54459381 611.96905518]
[-79.56329346 611.30957031]
[-94.28169250 608.24932861]
[-108.31855011 602.86761475]
[-121.31027222 595.30383301]
[-132.92034912 585.75384521]
[-142.84805298 574.46502686]
[-150.83622742 561.72985840]
[-156.67796326 547.87811279]
[-160.22193909 533.26867676]
[-161.37635803 518.27990723]
[-160.11132812 503.30001831]
[-156.45960999 488.71713257]
[-150.51579285 474.90890503]
[-142.43382263 462.23300171]
[-132.42306519 451.01779175]
[-120.74281311 441.55377197]
[-107.69561005 434.08605957]
[-93.61941528 428.80810547]
[-78.87882996 425.85662842]
[-63.85567093 425.30804443]
[-48.93907928 427.17657471]
[-34.51543045 431.41384888]
[-28.03593445 417.88549805]
[-21.55643845 404.35717773]
[-15.07694244 390.82882690]
[-8.59744644 377.30047607]
[-9.31132507 372.57824707]
[-7.06630898 367.35742188]
[-1.71833515 363.47018433]
[5.16107750 350.14074707]
[12.04049015 336.81130981]
[18.51998520 323.28298950]
[24.59382057 309.56771851]
[30.56538200 295.80761719]
[36.43434525 282.00341797]
[42.30330276 268.19924927]
[48.17226410 254.39508057]
[52.99826431 240.19262695]
[56.75456238 225.67056274]
[55.38623428 218.40768433]
[60.67640305 210.96107483]
[64.64849854 196.49655151]
[68.62059784 182.03202820]
[72.59268951 167.56750488]
[76.56478882 153.10298157]
[80.53688812 138.63845825]
[78.99514008 134.11827087]
[80.27657318 128.58157349]
[84.84857178 123.80577087]
[89.24957275 109.46591949]
[86.30645752 95.79735565]
[96.41058350 86.13307953]
[100.81157684 71.79323578]
[105.21257782 57.45338440]
[99.87004852 45.71369934]
[103.83086395 33.86061096]
[114.45439148 28.07552719]
[119.06840515 13.80279446]
[123.68241119 -0.46993932]
[127.33049774 -15.01955986]
[129.99629211 -29.78077698]
[132.66209412 -44.54199600]
[135.32788086 -59.30321121]
[137.99368286 -74.06443024]
[140.65948486 -88.82564545]
[126.85263062 -96.77616119]
[116.62014008 -108.95324707]
[111.18511200 -123.87279510]
[111.18741608 -139.72463989]
[116.60839081 -154.59217834]
[126.77534485 -166.68412781]
[140.44494629 -174.55032349]
[155.95529175 -177.25559998]
[158.40101624 -192.05487061]
[160.84674072 -206.85414124]
[163.18222046 -221.67120361]
[165.40734863 -236.50524902]
[167.63246155 -251.33929443]
[160.60755920 -262.15658569]
[162.76625061 -274.46606445]
[172.41407776 -281.76306152]
[174.85981750 -296.56231689]
[165.92628479 -309.32281494]
[168.61743164 -324.29653931]
[180.83764648 -332.73464966]
[183.28337097 -347.53390503]
[185.72909546 -362.33319092]
[188.17483521 -377.13247681]
[174.49169922 -383.51013184]
[163.03741455 -393.34384155]
[154.66194153 -405.90386963]
[149.98680115 -420.25814819]
[149.35893250 -435.34152222]
[152.82490540 -450.03469849]
[160.12753296 -463.24737549]
[170.72491455 -473.99902344]
[183.83064270 -481.49185181]
[198.47219849 -485.16979980]
[213.56307983 -484.75997925]
[227.98342896 -480.29278564]
[240.66317749 -472.09970093]
[250.66140747 -460.78872681]
[257.23614502 -447.19918823]
[259.89956665 -432.33953857]
[258.45397949 -417.31246948]
[253.00665283 -403.23309326]
[243.96183777 -391.14614868]
[231.99070740 -381.94860840]
[217.98161316 -376.32299805]
[202.97410583 -374.68673706]
[200.52838135 -359.88745117]
[198.08264160 -345.08819580]
[195.63691711 -330.28890991]
[204.49258423 -318.36779785]
[202.22308350 -303.32440186]
[189.65908813 -294.11660767]
[187.21334839 -279.31732178]
[194.26853943 -263.24899292]
[182.46650696 -249.11416626]
[180.24139404 -234.28013611]
[178.01626587 -219.44609070]
[180.13276672 -212.36495972]
[175.64601135 -204.40840149]
[173.20028687 -189.60913086]
[170.75456238 -174.80986023]
[183.29501343 -168.24096680]
[193.20870972 -158.10490417]
[199.51693726 -145.38340759]
[201.59106445 -131.31437683]
[199.21519470 -117.27139282]
[192.60856628 -104.62963867]
[182.40534973 -94.63121033]
[169.59384155 -88.26313019]
[155.42070007 -86.15985107]
[152.75489807 -71.39863586]
[150.08911133 -56.63741684]
[147.42330933 -41.87619781]
[144.75750732 -27.11498070]
[142.09172058 -12.35376453]
[153.34906006 -22.26699829]
[168.16247559 -24.62555885]
[181.94186401 -18.69862175]
[190.41752625 -6.32271242]
[190.96318054 8.66735935]
[183.40977478 21.62675667]
[170.09779358 28.53986931]
[155.15209961 27.26459312]
[143.20378113 18.19608688]
[137.95513916 4.14407015]
[133.34114075 18.41680336]
[128.72712708 32.68953705]
[133.32066345 49.62666702]
[119.55242157 61.85438538]
[115.15142822 76.19422913]
[110.75042725 90.53408051]
[113.69354248 104.20264435]
[103.58941650 113.86692047]
[99.18842316 128.20677185]
[95.00141144 142.61054993]
[91.02931213 157.07507324]
[87.05722046 171.53959656]
[83.08512115 186.00411987]
[79.11302185 200.46864319]
[75.14093018 214.93316650]
[71.27661896 229.42686462]
[67.52032471 243.94892883]
[79.12068176 234.43936157]
[93.90529633 231.90653992]
[108.00950623 237.01254272]
[117.74650574 248.42266846]
[120.57106781 263.15432739]
[115.74485016 277.35671997]
[104.52942657 287.31735229]
[89.85647583 290.43255615]
[75.56147003 285.88800049]
[65.38109589 274.87167358]
[61.97644043 260.26403809]
[56.10748291 274.06820679]
[50.23852158 287.87237549]
[44.36956024 301.67657471]
[43.89179993 310.79849243]
[38.30908585 315.64154053]
[32.23525238 329.35681152]
[32.85113144 333.65502930]
[32.13885498 337.53540039]
[30.39287567 340.63168335]
[27.99633598 342.71090698]
[25.36991882 343.69073486]
[18.49050713 357.02017212]
[11.61109447 370.34957886]
[4.93089914 383.77996826]
[-1.54859650 397.30831909]
[-8.02809238 410.83666992]
[-14.50758839 424.36502075]
[-20.98708344 437.89334106]
[-8.64463139 446.47589111]
[2.16115713 456.92727661]
[11.15038586 468.97674561]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 207]
[35 206]
[36 205]
[37 204]
[38 203]
[41 202]
[42 201]
[43 200]
[44 195]
[45 194]
[46 192]
[47 191]
[48 190]
[49 189]
[50 178]
[51 177]
[53 176]
[54 175]
[55 174]
[56 173]
[57 172]
[58 171]
[61 170]
[62 169]
[64 167]
[65 166]
[66 165]
[69 163]
[70 162]
[71 161]
[72 151]
[73 150]
[74 149]
[75 148]
[76 147]
[77 146]
[85 137]
[86 136]
[87 135]
[88 133]
[89 132]
[90 131]
[93 129]
[94 128]
[97 125]
[98 124]
[99 123]
[100 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
