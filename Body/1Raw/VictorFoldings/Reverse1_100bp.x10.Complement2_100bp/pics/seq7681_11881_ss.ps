%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[48.54365921 605.53021240]
[38.48780441 616.72290039]
[26.49527931 625.80999756]
[12.99960709 632.46307373]
[-1.51135421 636.44158936]
[-16.51304054 637.60174561]
[-31.46315193 635.90148926]
[-45.82125092 631.40246582]
[-59.06830215 624.26721191]
[-70.72542572 614.75360107]
[-80.37123871 603.20568848]
[-87.65703583 590.04083252]
[-92.31945038 575.73492432]
[-94.18993378 560.80517578]
[-93.20086670 545.79125977]
[-89.38801575 531.23590088]
[-82.88919830 517.66522217]
[-73.93934631 505.56991577]
[-62.86199951 495.38714600]
[-50.05759048 487.48504639]
[-35.98898697 482.14920044]
[-21.16477013 479.57257080]
[-6.12081766 479.84829712]
[-3.01670742 465.17297363]
[-7.95273209 451.12005615]
[2.47289968 439.21975708]
[0.78163224 432.02523804]
[5.73401594 424.34982300]
[9.05627537 409.72238159]
[12.37853527 395.09490967]
[10.81892586 391.93264771]
[10.71350670 387.85784912]
[12.47448444 383.56222534]
[16.18955803 379.89544678]
[20.16165543 365.43093872]
[14.81641674 348.71578979]
[28.02492905 335.88549805]
[31.78122902 321.36343384]
[35.53752899 306.84136963]
[39.29383087 292.31930542]
[43.05013275 277.79727173]
[46.80643082 263.27520752]
[45.19755554 258.77847290]
[46.39641953 253.22331238]
[50.89680481 248.37995911]
[55.08381653 233.97618103]
[59.27082825 219.57240295]
[63.35049438 205.13784790]
[67.32259369 190.67332458]
[71.29468536 176.20880127]
[63.72729111 163.43107605]
[67.54950714 148.70541382]
[81.00326538 140.85467529]
[84.97536469 126.39014435]
[88.94746399 111.92562103]
[84.28909302 95.81115723]
[96.35169983 84.15484619]
[100.10800171 69.63278198]
[103.43025970 55.00532532]
[106.31553650 40.28543472]
[109.20080566 25.56554222]
[112.08607483 10.84565067]
[114.97135162 -3.87424088]
[117.52718353 -18.65489388]
[119.75229645 -33.48893738]
[112.72740173 -44.30622101]
[114.88609314 -56.61572266]
[124.53392029 -63.91270828]
[126.97965240 -78.71198273]
[118.04612732 -91.47246552]
[120.73726654 -106.44618988]
[132.95748901 -114.88430023]
[135.40321350 -129.68356323]
[137.84893799 -144.48283386]
[124.68328857 -151.95886230]
[114.88819122 -163.46659851]
[109.63114166 -177.60462952]
[109.52855682 -192.65983582]
[114.57350922 -206.81504822]
[124.13892365 -218.36828613]
[137.05545044 -225.93746948]
[151.75439453 -228.62568665]
[154.20011902 -243.42495728]
[156.42523193 -258.25900269]
[158.42924500 -273.12451172]
[160.43325806 -287.99005127]
[162.43727112 -302.85559082]
[164.44128418 -317.72109985]
[155.53097534 -325.59149170]
[151.56680298 -336.67239380]
[153.42466736 -348.17205811]
[160.52880859 -357.25207520]
[171.02322388 -361.72796631]
[173.46894836 -376.52722168]
[175.91467285 -391.32650757]
[178.36039734 -406.12576294]
[172.97674561 -421.00283813]
[182.68566895 -432.29821777]
[168.78210449 -438.11093140]
[156.59416199 -446.97384644]
[146.77914429 -458.40896606]
[139.86634827 -471.79965210]
[136.22857666 -486.42370605]
[136.06199646 -501.49252319]
[139.37561035 -516.19342041]
[145.99070740 -529.73364258]
[155.55055237 -541.38293457]
[167.53958130 -550.51306152]
[181.31126404 -556.63171387]
[196.12287903 -559.40887451]
[211.17567444 -558.69476318]
[225.65788269 -554.52795410]
[238.78846741 -547.13305664]
[249.85934448 -536.90893555]
[258.27343750 -524.40692139]
[263.57702637 -510.30130005]
[265.48406982 -495.35272217]
[263.89172363 -480.36737061]
[258.88586426 -466.15335083]
[250.73646545 -453.47723389]
[239.88301086 -443.02261353]
[226.91078186 -435.35333252]
[212.51939392 -430.88290405]
[197.48493958 -429.85250854]
[203.04353333 -416.03399658]
[193.15966797 -403.68005371]
[190.71394348 -388.88076782]
[188.26821899 -374.08151245]
[185.82249451 -359.28222656]
[197.35954285 -345.06915283]
[194.79988098 -326.62026978]
[179.30680847 -315.71710205]
[177.30279541 -300.85156250]
[175.29878235 -285.98605347]
[173.29476929 -271.12051392]
[171.29075623 -256.25497437]
[173.42259216 -251.98129272]
[172.89234924 -246.32304382]
[168.99938965 -240.97921753]
[166.55366516 -226.17994690]
[179.60617065 -218.90553284]
[189.40068054 -207.58312988]
[194.74044800 -193.56666565]
[194.96295166 -178.54095459]
[190.02206421 -164.31922913]
[180.49584961 -152.62428284]
[167.51913452 -144.87982178]
[152.64820862 -142.03710938]
[150.20248413 -127.23783875]
[147.75675964 -112.43856812]
[156.61241150 -100.51745605]
[154.34292603 -85.47405243]
[141.77891541 -76.26625061]
[139.33319092 -61.46697998]
[146.38838196 -45.39865112]
[134.58634949 -31.26382065]
[132.36122131 -16.42977715]
[134.15171814 -13.39226341]
[134.55990601 -9.33659744]
[133.12330627 -4.92191076]
[129.69123840 -0.98896825]
[126.80596924 13.73092270]
[123.92070007 28.45081520]
[121.03542328 43.17070770]
[118.15015411 57.89059830]
[119.60031128 60.28959274]
[120.18757629 63.40756226]
[119.63333130 66.91871643]
[117.78195190 70.40252686]
[114.63005829 73.38908386]
[110.87375641 87.91114807]
[116.16896057 98.28428650]
[113.16858673 109.53768158]
[103.41198730 115.89772034]
[99.43988800 130.36224365]
[95.46778870 144.82676697]
[103.02530670 158.44740295]
[98.79098511 173.05990601]
[85.75920868 180.18089294]
[81.78711700 194.64541626]
[77.81501770 209.10993958]
[78.56024170 218.21392822]
[73.67460632 223.75941467]
[69.48760223 238.16319275]
[65.30059052 252.56697083]
[61.32849121 267.03149414]
[57.57218933 281.55355835]
[53.81589127 296.07562256]
[50.05958939 310.59768677]
[46.30328751 325.11975098]
[42.54698944 339.64178467]
[48.40839005 351.13122559]
[44.98079300 363.14935303]
[34.62617874 369.40301514]
[30.65408325 383.86755371]
[27.00599480 398.41717529]
[23.68373489 413.04461670]
[20.36147690 427.67208862]
[17.14820290 442.32388306]
[21.86219978 457.42648315]
[11.65859509 468.27709961]
[8.55448437 482.95239258]
[22.42157745 488.79193115]
[34.93278503 497.15054321]
[45.63582993 507.72604370]
[54.14381027 520.13616943]
[60.14916611 533.93225098]
[63.43480682 548.61560059]
[63.88195801 563.65545654]
[61.47445679 578.50805664]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 202]
[24 201]
[26 199]
[28 198]
[29 197]
[30 196]
[34 195]
[35 194]
[37 191]
[38 190]
[39 189]
[40 188]
[41 187]
[42 186]
[45 185]
[46 184]
[47 183]
[48 181]
[49 180]
[50 179]
[53 176]
[54 175]
[55 174]
[57 171]
[58 170]
[59 165]
[60 164]
[61 163]
[62 162]
[63 161]
[64 157]
[65 156]
[68 154]
[69 153]
[72 150]
[73 149]
[74 148]
[82 140]
[83 139]
[84 136]
[85 135]
[86 134]
[87 133]
[88 132]
[93 129]
[94 128]
[95 127]
[96 126]
[98 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
