%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxUUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGC\
) } def
/len { sequence length } bind def

/coor [
[110.71186829 438.96105957]
[97.31548309 445.75195312]
[83.18608856 450.84509277]
[68.53789520 454.16323853]
[53.59296417 455.65609741]
[38.57785416 455.30102539]
[23.72019196 453.10342407]
[9.24521255 449.09658813]
[-4.62764359 443.34130859]
[-17.68806839 435.92477417]
[-29.73806953 426.95944214]
[-40.59497070 416.58123779]
[-50.09418869 404.94747925]
[-58.09170914 392.23449707]
[-64.46630096 378.63510132]
[-69.12132263 364.35537720]
[-71.98620605 349.61181641]
[-73.01751709 334.62796021]
[-72.19962311 319.63095093]
[-69.54492188 304.84811401]
[-65.09366608 290.50357056]
[-58.91332626 276.81478882]
[-51.09759903 263.98925781]
[-41.76496887 252.22143555]
[-31.05691338 241.68971252]
[-19.13576698 232.55374146]
[-6.18224859 224.95204163]
[7.60726738 218.99981689]
[22.02373695 214.78733826]
[36.84860992 212.37843323]
[51.85714340 211.80964661]
[66.82181549 213.08959961]
[69.92592621 198.41429138]
[73.03003693 183.73899841]
[76.13414764 169.06369019]
[79.23825073 154.38838196]
[82.34236145 139.71308899]
[80.73584747 136.57438660]
[80.56977081 132.50161743]
[82.26660156 128.18026733]
[85.92666626 124.45857239]
[89.68296814 109.93651581]
[86.13245392 96.41299438]
[95.79496765 86.30718994]
[99.55126953 71.78512573]
[103.30757141 57.26306915]
[107.06387329 42.74100876]
[105.66817474 36.27853775]
[107.47450256 30.89019585]
[111.15424347 27.84577560]
[115.34125519 13.44199276]
[119.52826691 -0.96178937]
[114.01155090 -12.62063122]
[117.79544830 -24.53137589]
[128.33166504 -30.47398758]
[132.73266602 -44.81383514]
[137.13366699 -59.15368271]
[141.53466797 -73.49353027]
[127.45060730 -78.66559601]
[113.66722107 -84.59258270]
[100.22492218 -91.25708771]
[87.16315460 -98.63957214]
[74.52021790 -106.71838379]
[62.33320618 -115.46982574]
[50.63786316 -124.86822510]
[39.46849060 -134.88601685]
[28.85785484 -145.49380493]
[18.83707237 -156.66049194]
[9.43554211 -168.35331726]
[0.68083811 -180.53797913]
[-7.40136051 -193.17875671]
[-14.78734779 -206.23854065]
[-21.45545769 -219.67904663]
[-27.38613319 -233.46084595]
[-32.56197739 -247.54351807]
[-36.96780777 -261.88574219]
[-40.59070206 -276.44546509]
[-43.42003632 -291.17999268]
[-45.44750595 -306.04605103]
[-46.66716766 -321.00012207]
[-47.07544327 -335.99826050]
[-46.67113876 -350.99649048]
[-45.45543289 -365.95086670]
[-43.43189621 -380.81747437]
[-40.60646439 -395.55273438]
[-36.98742294 -410.11343384]
[-32.58538818 -424.45681763]
[-27.41326904 -438.54086304]
[-21.48624229 -452.32421875]
[-14.82168961 -465.76651001]
[-7.43915939 -478.82824707]
[0.63969386 -491.47116089]
[9.39117336 -503.65814209]
[18.78960991 -515.35345459]
[28.80743408 -526.52276611]
[39.41526413 -537.13336182]
[50.58198547 -547.15411377]
[62.27484131 -556.55560303]
[74.45953369 -565.31030273]
[87.10033417 -573.39245605]
[100.16014862 -580.77838135]
[113.60067749 -587.44647217]
[127.38249969 -593.37707520]
[141.46517944 -598.55285645]
[155.80743408 -602.95867920]
[170.36717224 -606.58148193]
[185.10168457 -609.41076660]
[199.96777344 -611.43823242]
[214.92181396 -612.65783691]
[229.91996765 -613.06604004]
[244.91821289 -612.66168213]
[259.87255859 -611.44592285]
[274.73916626 -609.42236328]
[289.47442627 -606.59686279]
[304.03509521 -602.97778320]
[318.37847900 -598.57568359]
[332.46249390 -593.40350342]
[346.24584961 -587.47644043]
[359.68811035 -580.81188965]
[372.74981689 -573.42926025]
[385.39270020 -565.35040283]
[397.57965088 -556.59887695]
[409.27493286 -547.20037842]
[420.44424438 -537.18255615]
[431.05480957 -526.57464600]
[441.07553101 -515.40789795]
[450.47695923 -503.71502686]
[459.23159790 -491.53030396]
[467.31372070 -478.88946533]
[474.69961548 -465.82965088]
[481.36761475 -452.38909912]
[487.29821777 -438.60723877]
[492.47396851 -424.52453613]
[496.87969971 -410.18228149]
[500.50250244 -395.62252808]
[503.33172607 -380.88800049]
[505.35910034 -366.02191162]
[506.57867432 -351.06787109]
[506.98684692 -336.06970215]
[506.58242798 -321.07147217]
[505.36663818 -306.11712646]
[503.34298706 -291.25051880]
[500.51745605 -276.51525879]
[496.89831543 -261.95462036]
[492.49618530 -247.61125183]
[487.32397461 -233.52723694]
[481.39685059 -219.74391174]
[474.73220825 -206.30168152]
[467.34960938 -193.23999023]
[459.27066040 -180.59713745]
[450.51910400 -168.41021729]
[441.12057495 -156.71496582]
[431.10269165 -145.54568481]
[420.49478149 -134.93515015]
[409.32800293 -124.91448975]
[397.63507080 -115.51307678]
[385.45031738 -106.75849152]
[372.80947876 -98.67642212]
[359.74960327 -91.29056549]
[346.30905151 -84.62258911]
[332.52719116 -78.69205475]
[318.44445801 -73.51634979]
[304.10217285 -69.11066437]
[289.54241943 -65.48791504]
[274.80789185 -62.65872574]
[259.94177246 -60.63140488]
[244.98773193 -59.41189194]
[229.98957825 -59.00376511]
[214.99133301 -59.40822220]
[200.03698730 -60.62407684]
[185.17039490 -62.64776230]
[170.43515015 -65.47334290]
[155.87451172 -69.09252930]
[151.47351074 -54.75268555]
[147.07250977 -40.41283798]
[142.67150879 -26.07299042]
[147.51670837 -9.20612907]
[133.93205261 3.22522187]
[129.74504089 17.62900352]
[125.55802917 32.03278732]
[121.58592987 46.49731064]
[117.82963562 61.01936722]
[114.07333374 75.54142761]
[110.31703186 90.06348419]
[113.86754608 103.58700562]
[104.20503235 113.69281006]
[100.44873047 128.21487427]
[97.01766968 142.81719971]
[93.91355896 157.49249268]
[90.80944824 172.16780090]
[87.70533752 186.84310913]
[84.60122681 201.51840210]
[81.49711609 216.19371033]
[95.69835663 221.08291626]
[109.19111633 227.68028259]
[121.77083588 235.88577271]
[133.24682617 245.57501221]
[143.44509888 256.60110474]
[152.21105957 268.79690552]
[159.41181946 281.97753906]
[164.93821716 295.94314575]
[168.70645142 310.48205566]
[170.65943909 325.37384033]
[170.76754761 340.39276123]
[169.02912903 355.31112671]
[165.47055054 369.90277100]
[160.14576721 383.94650269]
[153.13549805 397.22943115]
[144.54598999 409.55014038]
[134.50749207 420.72189331]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 193]
[33 192]
[34 191]
[35 190]
[36 189]
[37 188]
[41 187]
[42 186]
[44 184]
[45 183]
[46 182]
[47 181]
[50 180]
[51 179]
[52 178]
[55 176]
[56 175]
[57 174]
[58 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
