%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxUGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[96.80343628 581.61706543]
[84.24022675 573.31890869]
[73.67711639 562.58978271]
[65.57588196 549.89868164]
[60.29067993 535.80047607]
[58.05254745 520.91137695]
[58.95932770 505.88238525]
[62.97138596 491.37042236]
[69.91332245 478.00991821]
[79.48168182 466.38491821]
[91.25815582 457.00366211]
[104.72794342 450.27621460]
[119.30220032 446.49667358]
[118.63240814 431.51162720]
[117.96262360 416.52658081]
[117.29283905 401.54156494]
[116.17719269 386.58309937]
[107.15779877 374.72982788]
[113.41741180 360.19961548]
[111.74587250 345.29302979]
[109.96340942 330.39932251]
[108.18093872 315.50558472]
[106.39847565 300.61187744]
[104.61601257 285.71817017]
[102.83354187 270.82443237]
[101.05107880 255.93072510]
[89.90706635 249.46231079]
[84.44181061 237.57899475]
[86.85416412 224.52560425]
[96.48376465 215.10830688]
[94.92324066 200.18971252]
[93.36271667 185.27110291]
[83.98547363 196.97868347]
[69.30178070 200.04284668]
[56.02482224 193.06271362]
[50.22464371 179.22949219]
[54.55300903 164.86755371]
[67.03105164 156.54298401]
[81.95397186 158.06166077]
[92.50000000 168.73094177]
[84.76270294 156.00367737]
[92.50000000 142.20350647]
[92.50000000 127.20349884]
[92.50000000 112.20349884]
[85.67605591 100.00000000]
[92.50000000 87.79650116]
[92.50000000 72.79650116]
[92.50000000 57.79650116]
[92.50000000 42.79650116]
[92.50000000 27.79650116]
[92.50000000 12.79650021]
[92.50000000 -2.20349932]
[78.56974792 -6.06204367]
[66.12561035 -13.39232540]
[56.01448441 -23.68817139]
[48.92260742 -36.24184036]
[45.32897568 -50.19265366]
[45.47298431 -64.58602905]
[49.33850861 -78.43877411]
[56.65542984 -90.80625916]
[66.91849518 -100.84682465]
[79.42219543 -107.87905884]
[93.30930328 -111.42806244]
[93.53263092 -126.42640686]
[93.75595856 -141.42474365]
[93.97928619 -156.42308044]
[86.16842651 -143.61720276]
[74.09699249 -134.71324158]
[59.55571747 -131.03204346]
[44.70170212 -133.11968994]
[31.73846054 -140.66650391]
[22.58900642 -152.55294800]
[18.61060905 -167.01573181]
[20.39344025 -181.90940857]
[27.67302704 -195.02456665]
[39.36948776 -204.41567993]
[53.74771881 -208.68960571]
[68.67479706 -207.21234131]
[81.93637848 -200.20303345]
[91.56519318 -188.70146179]
[96.13262939 -174.41572571]
[99.45488739 -189.04318237]
[102.77714539 -203.67065430]
[106.09941101 -218.29811096]
[109.09418488 -232.99610901]
[103.93261719 -247.95167542]
[113.80863190 -259.10125732]
[116.47442627 -273.86248779]
[119.14022064 -288.62371826]
[113.97865295 -303.57925415]
[123.85467529 -314.72885132]
[126.52046967 -329.49008179]
[129.18626404 -344.25128174]
[130.96873474 -359.14501953]
[131.86154175 -374.11840820]
[132.75436401 -389.09182739]
[118.43491364 -393.84744263]
[105.83476257 -402.14794922]
[95.81301880 -413.42745972]
[89.05296326 -426.91687012]
[86.01552582 -441.69644165]
[86.90779114 -456.75854492]
[91.66893005 -471.07614136]
[99.97431946 -483.67309570]
[111.25768280 -493.69049072]
[124.74969482 -500.44531250]
[139.53045654 -503.47705078]
[154.59219360 -502.57897949]
[168.90797424 -497.81231689]
[181.50170898 -489.50204468]
[191.51473999 -478.21481323]
[198.26437378 -464.72021484]
[201.29039001 -449.93826294]
[200.38650513 -434.87689209]
[195.61430359 -420.56295776]
[187.29919434 -407.97241211]
[176.00810242 -397.96374512]
[162.51086426 -391.21932983]
[147.72776794 -388.19900513]
[146.83494568 -373.22561646]
[145.94213867 -358.25219727]
[156.47171021 -368.93527222]
[171.25036621 -371.50262451]
[184.76602173 -364.99673462]
[191.97769165 -351.84408569]
[190.19557190 -336.95031738]
[180.08438110 -325.87045288]
[165.41531372 -322.73696899]
[151.65959167 -328.71862793]
[143.94747925 -341.58551025]
[141.28169250 -326.82427979]
[138.61589050 -312.06307983]
[143.96813965 -298.16333008]
[133.90144348 -285.95791626]
[131.23564148 -271.19668579]
[128.56985474 -256.43548584]
[133.92208862 -242.53573608]
[123.85540009 -230.33032227]
[125.55465698 -227.24084473]
[125.84191895 -223.17481995]
[124.27450562 -218.80485535]
[120.72686768 -214.97584534]
[117.40460968 -200.34838867]
[114.08235168 -185.72093201]
[110.76008606 -171.09346008]
[108.97762299 -156.19975281]
[108.75429535 -141.20141602]
[108.53096771 -126.20307922]
[108.30764008 -111.20473480]
[123.24568939 -106.72146606]
[136.32984924 -98.20658875]
[146.49746704 -86.34188843]
[152.92007446 -72.08158875]
[155.07075500 -56.57561874]
[152.76750183 -41.07690048]
[146.18847656 -26.84007454]
[135.85836792 -15.01996326]
[122.60641479 -6.57789135]
[107.50000000 -2.20349932]
[107.50000000 12.79650021]
[107.50000000 27.79650116]
[107.50000000 42.79650116]
[107.50000000 57.79650116]
[107.50000000 72.79650116]
[107.50000000 87.79650116]
[114.32394409 100.00000000]
[107.50000000 112.20349884]
[107.50000000 127.20349884]
[107.50000000 142.20350647]
[115.23729706 156.00367737]
[107.50000000 168.73094177]
[108.28131866 183.71058655]
[109.84184265 198.62918091]
[111.40236664 213.54779053]
[125.19127655 224.31280518]
[126.89479828 241.38362122]
[115.94479370 254.14825439]
[117.72725677 269.04199219]
[119.50972748 283.93569946]
[121.29219055 298.82940674]
[123.07466125 313.72314453]
[124.85712433 328.61685181]
[126.63958740 343.51055908]
[130.76658630 351.65954590]
[128.33601379 358.63906860]
[137.46702576 371.55941772]
[131.09579468 385.02258301]
[133.76979065 388.44366455]
[135.08389282 392.16354370]
[135.11116028 395.71807861]
[134.06787109 398.71444702]
[132.27787781 400.87176514]
[132.94766235 415.85681152]
[133.61744690 430.84185791]
[134.28723145 445.82687378]
[149.14056396 448.29110718]
[163.15682983 453.79000854]
[175.72329712 462.08322144]
[186.29063416 472.80819702]
[194.39685059 485.49609375]
[199.68760681 499.59225464]
[201.93159485 514.48046875]
[201.03073120 529.50982666]
[197.02438354 544.02337646]
[190.08769226 557.38659668]
[180.52392578 569.01531982]
[168.75112915 578.40124512]
[155.28399658 585.13397217]
[140.71122742 588.91925049]
[125.66989136 589.59155273]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 195]
[14 194]
[15 193]
[16 192]
[17 187]
[19 185]
[20 183]
[21 182]
[22 181]
[23 180]
[24 179]
[25 178]
[26 177]
[30 174]
[31 173]
[32 172]
[40 171]
[42 169]
[43 168]
[44 167]
[46 165]
[47 164]
[48 163]
[49 162]
[50 161]
[51 160]
[52 159]
[63 149]
[64 148]
[65 147]
[66 146]
[81 145]
[82 144]
[83 143]
[84 142]
[85 138]
[87 136]
[88 135]
[89 134]
[91 132]
[92 131]
[93 130]
[94 121]
[95 120]
[96 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
