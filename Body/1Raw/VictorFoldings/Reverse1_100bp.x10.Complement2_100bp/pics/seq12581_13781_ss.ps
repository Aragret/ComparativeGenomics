%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUACAAACCCAGACUCAAAUAUAUAGUGUCACUCUUAAGAUACUACCUGGUACAUUGCUUGUUACGAUGUCCCUACUUAUAAUACCUCUUCAUCAGAxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[194.30030823 679.06231689]
[207.07214355 670.70513916]
[205.06813049 655.83959961]
[203.06411743 640.97406006]
[201.06010437 626.10852051]
[197.05114746 619.89965820]
[199.13862610 611.00695801]
[197.35615540 596.11322021]
[195.57368469 581.21954346]
[193.79122925 566.32580566]
[192.00875854 551.43206787]
[190.00474548 536.56652832]
[187.77963257 521.73254395]
[185.55450439 506.89846802]
[182.55973816 492.20046997]
[178.80343628 477.67840576]
[175.04713440 463.15634155]
[171.29083252 448.63427734]
[167.53453064 434.11224365]
[154.11416626 434.54443359]
[140.89398193 432.15762329]
[128.45983887 427.05468750]
[117.36334991 419.45907593]
[108.09741211 409.70483398]
[101.07431793 398.22195435]
[96.60739899 385.51742554]
[94.89704895 372.15286255]
[96.02173615 358.71972656]
[99.93442535 345.81298828]
[106.46450806 334.00500488]
[115.32525635 323.81991577]
[126.12641907 315.71054077]
[138.39138794 310.03814697]
[135.28727722 295.36282349]
[125.08367157 284.51220703]
[129.79766846 269.40960693]
[126.69356537 254.73431396]
[123.58945465 240.05900574]
[120.48534393 225.38371277]
[106.01073456 216.82073975]
[102.13143921 200.10948181]
[111.72373199 185.48049927]
[108.40147400 170.85304260]
[105.07920837 156.22557068]
[94.71518707 145.52809143]
[99.20380402 130.35696411]
[95.88154602 115.72950745]
[84.17134094 103.71920776]
[89.30743408 87.75058746]
[85.65933990 73.20097351]
[81.90304565 58.67890930]
[78.14674377 44.15685272]
[68.40100098 55.55950546]
[53.40525818 55.20209503]
[44.21382141 43.34809113]
[47.60227203 28.73582268]
[61.07276917 22.13690948]
[74.69431305 28.41455841]
[72.02851105 13.65334225]
[69.36271667 -1.10787547]
[66.69692230 -15.86909294]
[64.03112793 -30.63031006]
[60.65800476 -34.61391449]
[59.28728104 -39.04949951]
[59.75581741 -43.09864044]
[61.59133148 -46.10916138]
[52.07967758 -58.75190735]
[58.04724121 -72.39878845]
[56.04322433 -87.26432037]
[54.03921127 -102.12984467]
[52.03519821 -116.99537659]
[42.10314178 -105.75463104]
[27.14085388 -104.69166565]
[15.71941090 -114.41537476]
[14.38153458 -129.35559082]
[23.89362144 -140.95387268]
[38.80671692 -142.56620789]
[50.57745361 -133.26979065]
[49.90766907 -148.25482178]
[49.23788452 -163.23986816]
[48.56809998 -178.22489929]
[47.89831161 -193.20994568]
[39.55252075 -206.65086365]
[46.71380234 -219.71093750]
[46.04401398 -234.69596863]
[45.37422943 -249.68101501]
[37.02843857 -263.12191772]
[44.18971634 -276.18200684]
[35.84392548 -289.62292480]
[43.00520706 -302.68298340]
[42.33541870 -317.66802979]
[41.66563416 -332.65304565]
[40.99584961 -347.63809204]
[40.32606506 -362.62313843]
[25.69317627 -366.41390991]
[12.82860851 -374.35079956]
[2.87627244 -385.72808838]
[-3.27887797 -399.53408813]
[-5.08953094 -414.54116821]
[-2.39468408 -429.41494751]
[4.56603813 -442.83282471]
[15.17369366 -453.60174561]
[28.48505592 -460.76406860]
[43.31649017 -463.68298340]
[58.34918976 -462.09890747]
[72.24646759 -456.15270996]
[83.77257538 -446.37313843]
[91.90262604 -433.62976074]
[95.91369629 -419.05569458]
[95.44913483 -403.94689941]
[90.55023956 -389.64685059]
[81.65261841 -377.42703247]
[69.54744720 -368.37405396]
[55.31110382 -363.29290771]
[55.98088837 -348.30789185]
[56.65067291 -333.32284546]
[57.32045746 -318.33779907]
[57.99024582 -303.35275269]
[66.28813171 -290.98367310]
[59.17475510 -276.85177612]
[67.47264099 -264.48269653]
[60.35926819 -250.35079956]
[61.02905273 -235.36575317]
[61.69884109 -220.38072205]
[69.99672699 -208.01162720]
[62.88335037 -193.87973022]
[63.55313873 -178.89468384]
[64.22292328 -163.90965271]
[64.89270782 -148.92460632]
[65.56249237 -133.93957520]
[66.90072632 -118.99938965]
[68.90473938 -104.13385773]
[70.90875244 -89.26833344]
[72.91276550 -74.40280151]
[82.28108215 -62.82334137]
[76.45685577 -48.11317444]
[78.79234314 -33.29610443]
[81.45813751 -18.53488731]
[84.12393951 -3.77367091]
[86.78973389 10.98754597]
[89.45552826 25.74876404]
[92.66880035 40.40055084]
[96.42510223 54.92261124]
[100.18140411 69.44467163]
[104.89975739 75.13316345]
[103.88380432 84.21091461]
[113.44671631 90.85861969]
[116.11071014 102.19636536]
[110.50901031 112.40724945]
[113.83126831 127.03470612]
[124.43292236 138.77845764]
[119.70667267 152.90332031]
[123.02893066 167.53077698]
[126.35118866 182.15823364]
[138.49864197 187.97665405]
[144.98243713 199.55986023]
[143.63102722 212.56970215]
[135.16064453 222.27960205]
[138.26475525 236.95489502]
[141.36886597 251.63020325]
[144.47297668 266.30551147]
[154.89860535 278.20578003]
[149.96258545 292.25872803]
[153.06669617 306.93402100]
[169.71337891 307.61776733]
[185.61396790 312.55801392]
[199.69964600 321.41708374]
[211.02505493 333.59408569]
[218.83169556 348.26571655]
[222.59875488 364.44180298]
[222.07785034 381.03216553]
[217.30935669 396.92019653]
[208.61940002 411.03787231]
[196.59748840 422.43762207]
[182.05659485 430.35592651]
[185.81289673 444.87799072]
[189.56919861 459.40005493]
[193.32550049 473.92211914]
[197.08180237 488.44415283]
[204.61857605 475.47509766]
[218.68527222 470.26663208]
[232.85078430 475.20001221]
[240.63882446 488.01977539]
[238.48881531 502.86489868]
[227.38369751 512.94836426]
[212.40058899 513.66021729]
[200.38854980 504.67333984]
[202.61367798 519.50738525]
[204.83879089 534.34143066]
[208.65174866 539.74261475]
[209.09770203 545.40814209]
[206.90248108 549.64959717]
[208.68493652 564.54333496]
[210.46740723 579.43707275]
[212.24987793 594.33074951]
[214.03233337 609.22448730]
[215.92562866 624.10455322]
[217.92964172 638.97003174]
[219.93365479 653.83557129]
[221.93766785 668.70111084]
[236.46661377 673.37792969]
[247.52163696 683.90167236]
[252.90774536 698.18286133]
[251.55552673 713.38598633]
[243.73345947 726.49237061]
[230.99462891 734.89984131]
[215.86834717 736.93902588]
[201.35794067 732.20501709]
[190.34445190 721.63781738]
[185.01461792 707.33551025]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 200]
[3 199]
[4 198]
[5 197]
[7 196]
[8 195]
[9 194]
[10 193]
[11 192]
[12 189]
[13 188]
[14 187]
[15 179]
[16 178]
[17 177]
[18 176]
[19 175]
[33 164]
[34 163]
[36 161]
[37 160]
[38 159]
[39 158]
[42 154]
[43 153]
[44 152]
[46 150]
[47 149]
[49 146]
[50 144]
[51 143]
[52 142]
[58 141]
[59 140]
[60 139]
[61 138]
[62 137]
[66 136]
[68 134]
[69 133]
[70 132]
[71 131]
[78 130]
[79 129]
[80 128]
[81 127]
[82 126]
[84 124]
[85 123]
[86 122]
[88 120]
[90 118]
[91 117]
[92 116]
[93 115]
[94 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
