%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAAUAAGGAAGAUCCGUAUCAUCCCUCCUAUACUCCACACUCGCUAUAUGAUCAUAAGGAUCUUCACUCUACCAUUUACGAUCAUAUUAUAAAUACAUxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[24.04201508 466.48007202]
[24.63655472 481.49981689]
[22.87404633 496.42764282]
[18.79789162 510.89593506]
[12.50846672 524.54840088]
[4.16065836 537.04882812]
[-6.03996325 548.08935547]
[-17.84219742 557.39819336]
[-30.95540428 564.74597168]
[-45.05665970 569.95184326]
[-59.79870605 572.88757324]
[-74.81851196 573.48089600]
[-89.74619293 571.71716309]
[-104.21414948 567.63983154]
[-117.86608887 561.34924316]
[-130.36582947 553.00042725]
[-141.40553284 542.79888916]
[-150.71336365 530.99584961]
[-158.06008911 517.88208008]
[-163.26478577 503.78036499]
[-166.19931030 489.03808594]
[-166.79136658 474.01824951]
[-165.02639771 459.09069824]
[-160.94786072 444.62307739]
[-154.65617371 430.97164917]
[-146.30630493 418.47262573]
[-136.10386658 407.43374634]
[-124.30009460 398.12689209]
[-111.18567657 390.78125000]
[-97.08356476 385.57769775]
[-82.34102631 382.64440918]
[-67.32112885 382.05358887]
[-52.39373779 383.81979370]
[-37.92645645 387.89953613]
[-31.64909554 374.27621460]
[-25.37173462 360.65289307]
[-19.19596672 346.98321533]
[-13.12213230 333.26794434]
[-13.28794670 325.87915039]
[-6.85441303 319.39474487]
[-0.57705235 305.77145386]
[5.70030832 292.14813232]
[11.97766876 278.52481079]
[18.25502968 264.90148926]
[24.53239059 251.27818298]
[18.42296028 239.93338013]
[19.98658180 226.94734192]
[28.87484550 217.08787537]
[42.00928879 214.10443115]
[48.48878479 200.57608032]
[54.96828079 187.04772949]
[61.44777679 173.51939392]
[67.92727661 159.99104309]
[73.89883423 146.23094177]
[79.35419464 132.25814819]
[84.80954742 118.28534698]
[90.26490784 104.31254578]
[94.55902863 89.94033051]
[97.66313934 75.26502991]
[100.76725006 60.58972931]
[103.87136078 45.91442490]
[106.64697266 31.17346382]
[108.76159668 16.32326698]
[110.54405975 1.42954910]
[112.32653046 -13.46416855]
[114.10899353 -28.35788536]
[104.61459351 -40.70673752]
[106.63443756 -55.78569412]
[118.46569061 -64.76104736]
[120.24815369 -79.65476990]
[122.03062439 -94.54848480]
[123.81308746 -109.44219971]
[122.80883026 -124.40854645]
[119.05252838 -138.93060303]
[115.29622650 -153.45266724]
[111.63615417 -157.17434692]
[109.93933105 -161.49571228]
[110.10540771 -165.56848145]
[111.71192169 -168.70718384]
[108.60781097 -183.38247681]
[105.50370026 -198.05778503]
[102.39958954 -212.73307800]
[99.29547882 -227.40838623]
[96.19136810 -242.08369446]
[81.13502502 -242.09310913]
[66.40973663 -245.23309326]
[52.65922928 -251.36637878]
[40.48461914 -260.22485352]
[30.41812897 -271.42126465]
[22.89982033 -284.46612549]
[18.25836182 -298.78921509]
[16.69666100 -313.76434326]
[18.28298378 -328.73690796]
[22.94798660 -343.05233765]
[30.48773193 -356.08483887]
[40.57262039 -367.26464844]
[52.76177597 -376.10311890]
[66.52234650 -382.21377563]
[81.25278473 -385.32955933]
[96.30912781 -385.31420898]
[111.03318024 -382.16842651]
[124.78127289 -376.02972412]
[136.95239258 -367.16647339]
[147.01448059 -355.96609497]
[154.52764893 -342.91827393]
[159.16348267 -328.59338379]
[160.71928406 -313.61761475]
[159.12707520 -298.64569092]
[154.45643616 -284.33209229]
[146.91156006 -271.30258179]
[136.82228088 -260.12670898]
[124.62964630 -251.29306030]
[110.86667633 -245.18780518]
[113.97078705 -230.51249695]
[117.07489777 -215.83718872]
[120.17900085 -201.16189575]
[123.28311157 -186.48658752]
[126.38722229 -171.81129456]
[129.81828308 -157.20896912]
[133.57458496 -142.68690491]
[137.33088684 -128.16484070]
[140.38909912 -142.84977722]
[146.70835876 -156.45370483]
[155.95718384 -168.26300049]
[167.65039062 -177.65815735]
[181.17457581 -184.14631653]
[195.82029724 -187.38714600]
[210.81925964 -187.21063232]
[225.38464355 -183.62602234]
[238.75239563 -176.82136536]
[250.22125244 -167.15362549]
[259.18960571 -155.12994385]
[265.18695068 -141.38105774]
[267.89871216 -126.62821960]
[267.18264771 -111.64532471]
[263.07626343 -97.21834564]
[255.79504395 -84.10408783]
[245.72090149 -72.99050903]
[233.38230896 -64.46060181]
[219.42654419 -58.96182632]
[204.58567810 -56.78263855]
[189.63825989 -58.03735352]
[175.36836243 -62.66015244]
[162.52458191 -70.40853119]
[151.78068542 -80.87602997]
[143.70024109 -93.51353455]
[138.70680237 -107.65973663]
[136.92433167 -92.76602173]
[135.14187622 -77.87229919]
[133.35940552 -62.97858429]
[142.73854065 -51.46478653]
[141.14303589 -36.33504868]
[129.00271606 -26.57542038]
[127.22024536 -11.68170261]
[125.43778229 3.21201491]
[123.65531158 18.10573196]
[125.53544617 21.08859062]
[126.06421661 25.13030434]
[124.75968170 29.58580780]
[121.44624329 33.61919022]
[123.19130707 36.68302536]
[123.53907776 40.74431992]
[122.03690338 45.13712692]
[118.54666138 49.01853561]
[115.44255066 63.69384003]
[112.33843994 78.36914062]
[109.23433685 93.04444122]
[120.07275391 82.67484283]
[134.46292114 78.44125366]
[149.19001770 81.28948212]
[160.96398926 90.58322144]
[167.15449524 104.24622345]
[166.37857056 119.22613525]
[158.80953979 132.17642212]
[146.13835144 140.20393372]
[131.19578552 141.51533508]
[117.32005310 135.81762695]
[107.61101532 124.38369751]
[104.23770142 109.76790619]
[98.78234863 123.74069977]
[93.32698822 137.71350098]
[87.87163544 151.68629456]
[102.44793701 148.14633179]
[114.39672089 157.21421814]
[114.90979004 172.20544434]
[103.60891724 182.06903076]
[88.82469940 179.53392029]
[81.45561981 166.47053528]
[74.97612000 179.99888611]
[68.49662781 193.52723694]
[62.01713181 207.05557251]
[55.53763580 220.58392334]
[61.65161133 236.97412109]
[54.16738510 252.41113281]
[38.15570831 257.55554199]
[31.87834549 271.17886353]
[25.60098457 284.80218506]
[19.32362366 298.42547607]
[13.04626369 312.04879761]
[6.76890326 325.67211914]
[0.59313464 339.34179688]
[-5.48069954 353.05706787]
[-6.09421968 362.17086792]
[-11.74841881 366.93026733]
[-18.02577972 380.55355835]
[-24.30314064 394.17687988]
[-11.80202770 402.52365112]
[-0.76063299 412.72335815]
[8.54913998 424.52484131]
[15.89803028 437.63745117]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 206]
[35 205]
[36 204]
[37 202]
[38 201]
[40 200]
[41 199]
[42 198]
[43 197]
[44 196]
[45 195]
[49 192]
[50 191]
[51 190]
[52 189]
[53 188]
[54 182]
[55 181]
[56 180]
[57 179]
[58 167]
[59 166]
[60 165]
[61 164]
[62 160]
[63 156]
[64 155]
[65 154]
[66 153]
[69 150]
[70 149]
[71 148]
[72 147]
[73 121]
[74 120]
[75 119]
[79 118]
[80 117]
[81 116]
[82 115]
[83 114]
[84 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
