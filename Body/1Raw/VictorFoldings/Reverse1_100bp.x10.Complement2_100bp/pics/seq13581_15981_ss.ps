%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCCAAUAAAAGCAAUUACAAUCAUUCCCACCCCUUCGCUCCAACUGGACAAUCCCACUCUUCUUAAUAAGCUCACGAUAUCCGCGAACAGUCCCUCCAxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[91.28500366 613.49035645]
[88.82624054 628.49114990]
[80.80985260 641.40649414]
[68.45827484 650.26690674]
[53.65503311 653.72125244]
[38.65751648 651.24273682]
[25.75273705 643.20935059]
[16.90857697 630.84613037]
[13.47370911 616.03839111]
[15.97192478 601.04412842]
[24.02226448 588.14990234]
[36.39710999 579.32202148]
[51.20938873 575.90667725]
[53.65511703 561.10736084]
[56.10084534 546.30810547]
[58.54657364 531.50885010]
[60.99229813 516.70959473]
[63.43802643 501.91030884]
[65.88375092 487.11102295]
[68.10887146 472.27697754]
[70.11288452 457.41143799]
[64.14532471 443.76455688]
[73.65697479 431.12182617]
[75.66098785 416.25628662]
[77.66500092 401.39077759]
[79.55829620 386.51074219]
[81.34075928 371.61700439]
[82.56773376 356.66726685]
[83.23751831 341.68225098]
[83.90731049 326.69720459]
[84.57709503 311.71215820]
[85.24687958 296.72711182]
[85.91666412 281.74209595]
[70.95599365 278.13769531]
[56.97792053 271.69024658]
[44.51712418 262.64437866]
[34.05064011 251.34416199]
[25.97959328 238.22000122]
[20.61381149 223.77227783]
[18.15995216 208.55221558]
[18.71352959 193.14089966]
[22.25520515 178.12709045]
[28.65145111 164.08467102]
[37.65959167 151.55079651]
[48.93700409 141.00526428]
[62.05415344 132.85223389]
[76.51094818 127.40464783]
[91.75580597 124.87228394]
[92.20240784 109.87893677]
[92.31407928 94.87935638]
[92.09075165 79.88101196]
[81.03164673 68.91133118]
[81.01882172 53.69770050]
[91.54489136 43.22214127]
[91.32156372 28.22380257]
[77.35984802 18.67568016]
[71.89461517 2.84430361]
[76.89246368 -12.96655750]
[90.19484711 -22.58550262]
[89.74823761 -37.57885361]
[89.30163574 -52.57220078]
[88.85502625 -67.56555176]
[87.07256317 -82.45926666]
[83.96845245 -97.13457489]
[80.86434174 -111.80987549]
[77.76023102 -126.48517609]
[74.43797302 -141.11264038]
[70.89830017 -155.68901062]
[67.35862732 -170.26538086]
[63.60232544 -184.78744507]
[59.63022995 -199.25196838]
[55.65813446 -213.71649170]
[51.68603897 -228.18101501]
[47.71393967 -242.64553833]
[43.74184418 -257.11007690]
[39.76974869 -271.57458496]
[35.79765320 -286.03912354]
[31.82555580 -300.50363159]
[27.85346031 -314.96817017]
[23.88136482 -329.43267822]
[8.88996696 -328.17861938]
[-6.07658148 -329.70083618]
[-20.50852585 -333.94741821]
[-33.91431808 -340.77380371]
[-45.83736420 -349.94744873]
[-55.87156677 -361.15588379]
[-63.67516708 -374.01739502]
[-68.98237610 -388.09393311]
[-71.61243439 -402.90597534]
[-71.47576141 -417.94912720]
[-68.57701111 -432.71096802]
[-63.01491547 -446.68872070]
[-54.97891617 -459.40631104]
[-44.74272156 -470.43060303]
[-32.65496445 -479.38610840]
[-19.12735176 -485.96777344]
[-4.62063313 -489.95144653]
[10.37110138 -491.20147705]
[25.33723831 -489.67523193]
[39.76803589 -485.42474365]
[53.17198944 -478.59475708]
[65.09255981 -469.41790771]
[75.12374115 -458.20675659]
[82.92387390 -445.34313965]
[88.22729492 -431.26519775]
[90.85335541 -416.45242310]
[90.71263123 -401.40930176]
[87.80989838 -386.64825439]
[82.24403381 -372.67199707]
[74.20461273 -359.95657349]
[63.96544266 -348.93502808]
[51.87527084 -339.98281860]
[38.34588623 -333.40478516]
[42.31798553 -318.94024658]
[46.29008102 -304.47573853]
[50.26217651 -290.01119995]
[54.23427200 -275.54669189]
[58.20636749 -261.08215332]
[62.17846680 -246.61764526]
[66.15055847 -232.15312195]
[70.12265778 -217.68858337]
[74.09475708 -203.22406006]
[78.06684875 -188.75953674]
[81.70085907 -185.66067505]
[83.42676544 -180.24603271]
[81.93500519 -173.80505371]
[85.47467804 -159.22868347]
[89.01434326 -144.65231323]
[92.55448151 -141.44660950]
[94.11840820 -135.98298645]
[92.43553162 -129.58927917]
[95.53964233 -114.91398621]
[98.64375305 -100.23867798]
[101.74786377 -85.56337738]
[107.09221649 -99.57901001]
[117.92878723 -109.95054626]
[132.16520691 -114.67539215]
[147.05265808 -112.84127045]
[159.71658325 -104.80231476]
[167.71180725 -92.11072540]
[169.49455261 -77.21704102]
[164.72059631 -62.99700165]
[154.31173706 -52.19627762]
[140.27775574 -46.90031815]
[125.32837677 -48.13169098]
[112.35011292 -55.65263367]
[103.84838104 -68.01216125]
[104.29498291 -53.01880646]
[104.74159241 -38.02545929]
[105.18819427 -23.03210831]
[116.86843872 -16.56572342]
[123.88451385 -5.08013630]
[124.31255341 8.48033428]
[117.93384552 20.57705116]
[106.31990051 28.00047493]
[106.54322815 42.99881363]
[117.37653351 53.15632629]
[117.81667328 68.36359406]
[107.08908844 79.65768433]
[107.31241608 94.65602112]
[109.67105103 97.70712280]
[110.67336273 101.78305817]
[109.89179993 106.25476837]
[107.19576263 110.32554626]
[106.74915314 125.31889343]
[121.03703308 128.49839783]
[134.49026489 134.25537109]
[146.64842224 142.39111328]
[157.09573364 152.62557983]
[165.47525024 164.60697937]
[171.50106812 177.92384338]
[174.96807861 192.11921692]
[175.75895691 206.70629883]
[173.84812927 221.18513489]
[169.30255127 235.05976868]
[162.27947998 247.85520935]
[153.02087402 259.13372803]
[141.84518433 268.50979614]
[129.13638306 275.66326904]
[115.33068848 280.35034180]
[100.90170288 282.41186523]
[100.23191833 297.39691162]
[99.56213379 312.38195801]
[98.89234924 327.36697388]
[98.22255707 342.35202026]
[97.55277252 357.33706665]
[110.21514130 349.29565430]
[124.44605255 354.03707886]
[129.75500488 368.06613159]
[122.22845459 381.04116821]
[107.41467285 383.39739990]
[96.23448181 373.39947510]
[94.45201111 388.29318237]
[96.53948212 397.18591309]
[92.53053284 403.39477539]
[90.52651978 418.26031494]
[88.52250671 433.12582397]
[94.34672546 447.83599854]
[84.97841644 459.41546631]
[82.97439575 474.28100586]
[85.12815094 480.53182983]
[83.97492981 486.09661865]
[80.68302155 489.55676270]
[78.23729706 504.35601807]
[75.79157257 519.15527344]
[73.34584045 533.95458984]
[70.90011597 548.75384521]
[68.45439148 563.55310059]
[66.00865936 578.35235596]
[78.93453217 586.35174561]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 209]
[14 208]
[15 207]
[16 206]
[17 205]
[18 204]
[19 203]
[20 200]
[21 199]
[23 197]
[24 196]
[25 195]
[26 193]
[27 192]
[28 186]
[29 185]
[30 184]
[31 183]
[32 182]
[33 181]
[48 165]
[49 164]
[50 160]
[51 159]
[54 156]
[55 155]
[59 150]
[60 149]
[61 148]
[62 147]
[63 134]
[64 133]
[65 132]
[66 131]
[67 128]
[68 127]
[69 126]
[70 123]
[71 122]
[72 121]
[73 120]
[74 119]
[75 118]
[76 117]
[77 116]
[78 115]
[79 114]
[80 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
