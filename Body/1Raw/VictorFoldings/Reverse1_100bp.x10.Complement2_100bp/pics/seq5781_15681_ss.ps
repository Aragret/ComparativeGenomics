%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[70.72920990 860.82025146]
[55.88990021 863.08734131]
[40.90228271 863.93353271]
[25.90209198 863.35119629]
[11.02517986 861.34564209]
[-3.59372592 857.93505859]
[-17.82222939 853.15020752]
[-31.53147507 847.03454590]
[-44.59730530 839.64343262]
[-56.90138626 831.04376221]
[-68.33229828 821.31347656]
[-78.78650665 810.54058838]
[-88.16934967 798.82281494]
[-96.39583588 786.26611328]
[-103.39147186 772.98437500]
[-109.09290314 759.09771729]
[-113.44849396 744.73199463]
[-116.41880035 730.01733398]
[-117.97692108 715.08691406]
[-118.10874176 700.07598877]
[-116.81307220 685.12054443]
[-114.10164642 670.35595703]
[-109.99902344 655.91595459]
[-104.54235077 641.93133545]
[-97.78104401 628.52874756]
[-89.77634430 615.82958984]
[-80.60074615 603.94879150]
[-70.33734131 592.99401855]
[-59.07907867 583.06445312]
[-46.92792130 574.25000000]
[-33.99391174 566.63055420]
[-20.39418411 560.27508545]
[-6.25190496 555.24108887]
[8.30484772 551.57427979]
[23.14424515 549.30773926]
[38.13189316 548.46209717]
[53.13206100 549.04498291]
[55.13607407 534.17944336]
[57.14008713 519.31390381]
[59.14410400 504.44839478]
[61.14811707 489.58285522]
[63.15213013 474.71731567]
[48.21035385 469.27993774]
[34.83728790 460.66619873]
[23.69810295 449.30096436]
[15.34765434 435.74609375]
[10.20282650 420.67260742]
[8.52172565 404.82748413]
[10.39073181 388.99667358]
[15.72006607 373.96600342]
[24.24809837 360.48229980]
[35.55419540 349.21618652]
[49.07945251 340.72885132]
[64.15433502 335.44390869]
[80.03182983 333.62640381]
[81.59235382 318.70779419]
[83.15287781 303.78921509]
[84.71340179 288.87060547]
[86.27391815 273.95199585]
[76.72440338 262.57910156]
[78.09447479 247.42729187]
[90.08814240 237.48799133]
[91.64866638 222.56939697]
[93.20919037 207.65078735]
[93.87897491 192.66575623]
[93.65564728 177.66741943]
[93.43231964 162.66908264]
[93.20899200 147.67073059]
[92.98566437 132.67239380]
[92.76233673 117.67406464]
[82.43866730 107.50705719]
[82.22293854 93.01914215]
[92.23932648 82.54926300]
[84.29741669 68.86582184]
[91.84436798 56.02476120]
[91.62104034 41.02642441]
[83.67913818 27.34297752]
[91.22608948 14.50191879]
[91.00276184 -0.49641830]
[90.77943420 -15.49475574]
[88.10096741 -19.97503471]
[87.47180176 -24.57475853]
[88.59427643 -28.49331856]
[90.89608765 -31.16427422]
[91.34268951 -46.15762329]
[91.67766571 -61.15388107]
[91.90099335 -76.15222168]
[92.12432098 -91.15055847]
[92.34764862 -106.14889526]
[77.58905029 -109.05122375]
[63.58594131 -114.54236603]
[50.78845215 -122.44578552]
[39.60798264 -132.50744629]
[30.40392876 -144.40386963]
[23.47216988 -157.75267029]
[19.03552818 -172.12474060]
[17.23662758 -187.05804443]
[18.13329315 -202.07255554]
[21.69669914 -216.68563843]
[27.81229973 -230.42750549]
[36.28350449 -242.85644531]
[46.83799362 -253.57290649]
[59.13648987 -262.23239136]
[72.78364563 -268.55654907]
[87.34075928 -272.34207153]
[102.33988190 -273.46728516]
[117.29885101 -271.89599609]
[131.73680115 -267.67874146]
[145.18962097 -260.95104980]
[157.22483826 -251.92922974]
[167.45558167 -240.90327454]
[175.55296326 -228.22763062]
[181.25671387 -214.30975342]
[184.38345337 -199.59707642]
[184.83268738 -184.56251526]
[182.58995056 -169.68937683]
[177.72737122 -155.45579529]
[170.40124512 -142.31929016]
[160.84707642 -130.70216370]
[149.37197876 -120.97786713]
[136.34484863 -113.45896912]
[122.18445587 -108.38719177]
[107.34599304 -105.92556763]
[107.12266541 -90.92723083]
[106.89933777 -75.92889404]
[106.67601013 -60.93055344]
[109.71957397 -54.19568253]
[106.33604431 -45.71101761]
[105.88943481 -30.71766853]
[105.77777100 -15.71808338]
[106.00109863 -0.71974599]
[106.22442627 14.27859116]
[114.15036011 26.88925552]
[106.61937714 40.80309677]
[106.84270477 55.80143356]
[114.76863861 68.41209412]
[107.23766327 82.32593536]
[117.56133270 92.49294281]
[117.77706146 106.98085785]
[107.76067352 117.45073700]
[107.98400116 132.44906616]
[108.20732880 147.44740295]
[108.43065643 162.44575500]
[108.65398407 177.44409180]
[108.87731171 192.44242859]
[118.58315277 181.00578308]
[133.12992859 177.34634399]
[147.09204102 182.82899475]
[155.26197815 195.40882874]
[154.59254456 210.39387512]
[145.33343506 222.19509888]
[130.93806458 226.41093445]
[116.77554321 221.46896362]
[108.12779999 209.21131897]
[106.56727600 224.12991333]
[105.00675201 239.04852295]
[114.68395233 251.25465393]
[112.88883972 266.36199951]
[101.19252777 275.51251221]
[99.63200378 290.43112183]
[98.07147980 305.34973145]
[96.51095581 320.26834106]
[94.95043182 335.18692017]
[108.41997528 339.49398804]
[120.77854919 346.35687256]
[131.54698181 355.50717163]
[140.30824280 366.58786011]
[146.72354126 379.16720581]
[150.54545593 392.75552368]
[151.62741089 406.82440186]
[149.92944336 420.82708740]
[145.51950073 434.21981812]
[138.57084656 446.48291016]
[129.35519409 457.14089966]
[118.23210907 465.78109741]
[105.63497925 472.06942749]
[92.05410767 475.76333618]
[78.01765442 476.72134399]
[76.01364136 491.58685303]
[74.00962830 506.45239258]
[72.00561523 521.31793213]
[70.00160217 536.18347168]
[67.99758911 551.04895020]
[82.61662292 554.45904541]
[96.84529877 559.24334717]
[110.55476379 565.35852051]
[123.62086487 572.74920654]
[135.92526245 581.34838867]
[147.35652161 591.07830811]
[157.81112671 601.85076904]
[167.19439697 613.56823730]
[175.42134094 626.12457275]
[182.41746521 639.40612793]
[188.11940002 653.29254150]
[192.47550964 667.65808105]
[195.44636536 682.37268066]
[197.00502014 697.30303955]
[197.13739014 712.31390381]
[195.84226990 727.26947021]
[193.13137817 742.03411865]
[189.02928162 756.47424316]
[183.57312012 770.45904541]
[176.81230164 783.86193848]
[168.80805969 796.56140137]
[159.63290405 808.44250488]
[149.36988831 819.39770508]
[138.11198425 829.32763672]
[125.96115112 838.14251709]
[113.02742004 845.76245117]
[99.42792511 852.11840820]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 183]
[38 182]
[39 181]
[40 180]
[41 179]
[42 178]
[55 163]
[56 162]
[57 161]
[58 160]
[59 159]
[62 156]
[63 155]
[64 154]
[65 145]
[66 144]
[67 143]
[68 142]
[69 141]
[70 140]
[73 137]
[75 135]
[76 134]
[78 132]
[79 131]
[80 130]
[84 129]
[85 128]
[86 126]
[87 125]
[88 124]
[89 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
