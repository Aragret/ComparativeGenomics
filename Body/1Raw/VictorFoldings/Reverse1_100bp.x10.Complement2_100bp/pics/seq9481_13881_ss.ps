%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAUCGCCCCACUACGGACAACCCCCGGUCACGGGAGGAUUAACCCCCCAUCCCCGAUCCGACCUCACCAUUUUCCGAGUCUUUUUAGGACGCUUCUUUxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[120.96190643 797.73712158]
[109.28530884 788.27124023]
[99.23336029 777.09515381]
[91.05359650 764.48413086]
[84.94744873 750.74871826]
[81.06529236 736.22717285]
[79.50272369 721.27709961]
[80.29822540 706.26660156]
[83.43220520 691.56542969]
[88.82748413 677.53558350]
[96.35120392 664.52252197]
[105.81809235 652.84667969]
[116.99500275 642.79565430]
[129.60670471 634.61694336]
[143.34260559 628.51190186]
[157.86448669 624.63098145]
[156.30395508 609.71234131]
[154.74343872 594.79376221]
[153.18290710 579.87512207]
[138.26777649 573.65814209]
[128.46670532 560.69299316]
[126.53029633 544.46130371]
[133.08111572 529.38208008]
[146.41804504 519.60876465]
[144.63557434 504.71505737]
[142.85310364 489.82131958]
[141.07063293 474.92761230]
[127.99741364 467.84039307]
[121.52770233 454.25338745]
[124.33185577 439.28707886]
[135.54051208 428.71957397]
[133.75804138 413.82586670]
[131.97557068 398.93212891]
[130.19309998 384.03842163]
[114.82982635 382.72677612]
[100.06697845 378.25650024]
[86.54688263 370.81967163]
[74.85832214 360.73745728]
[65.51084137 348.44628906]
[58.91259766 334.47897339]
[55.35248566 319.44158936]
[54.98752975 303.98718262]
[57.83592606 288.78741455]
[63.77618027 274.50332642]
[72.55226898 261.75671387]
[83.78467560 251.10289001]
[96.98680115 243.00660706]
[111.58606720 237.82176208]
[109.58205414 222.95623779]
[107.57804108 208.09071350]
[105.57402802 193.22518921]
[103.57001495 178.35964966]
[101.56599426 163.49412537]
[86.87326813 156.17283630]
[79.36437225 141.38844299]
[82.17518616 124.87783051]
[94.39325714 113.18103790]
[85.83453369 102.12483215]
[90.77269745 89.04407501]
[88.54757690 74.21002960]
[85.99174500 59.42937851]
[83.10647583 44.70948792]
[80.22119904 29.98959541]
[77.33592987 15.26970387]
[74.45066071 0.54981285]
[71.56538391 -14.17007828]
[68.68011475 -28.88997078]
[54.76433563 -35.49734116]
[47.49249268 -48.87544632]
[49.46915054 -63.79378510]
[59.72849655 -74.55871582]
[56.84322739 -89.27861023]
[53.95795441 -103.99849701]
[51.07268143 -118.71839142]
[48.18740845 -133.43827820]
[42.94005203 -119.38604736]
[32.48908234 -108.62606049]
[18.59567642 -102.97157288]
[3.60111475 -103.37545776]
[-9.96775532 -109.76965332]
[-19.82434082 -121.07662964]
[-24.30763435 -135.39096069]
[-22.66212082 -150.30043030]
[-15.16510010 -163.29252625]
[-3.07995081 -172.17787170]
[11.55676746 -175.45910645]
[26.27850914 -172.58328247]
[38.60440445 -164.03504944]
[46.45788193 -151.25335693]
[38.72058105 -165.05352783]
[46.45788193 -177.78080750]
[46.45788193 -192.78080750]
[46.45788193 -207.78080750]
[35.56332779 -218.91392517]
[35.77700806 -234.12606812]
[46.45788193 -244.44374084]
[46.45788193 -259.44375610]
[32.20521164 -264.60485840]
[20.57928085 -274.33181763]
[12.98397923 -287.45001221]
[10.33647537 -302.37539673]
[12.95646954 -317.30560303]
[20.52758217 -330.43777466]
[32.13556671 -340.18612671]
[46.37870026 -345.37353516]
[61.53705978 -345.37353516]
[75.78019714 -340.18612671]
[87.38817596 -330.43777466]
[94.95928955 -317.30560303]
[97.57928467 -302.37539673]
[94.93178558 -287.45001221]
[87.33647919 -274.33181763]
[75.71054840 -264.60485840]
[61.45788193 -259.44375610]
[61.45788193 -244.44374084]
[72.13875580 -234.12606812]
[72.35243225 -218.91392517]
[61.45788193 -207.78080750]
[61.45788193 -192.78080750]
[61.45788193 -177.78080750]
[69.19518280 -165.05352783]
[61.45788193 -151.25335693]
[62.90729904 -136.32354736]
[65.79257202 -121.60366058]
[68.67784119 -106.88377380]
[71.56311798 -92.16387939]
[74.44838715 -77.44398499]
[88.01253510 -71.34873962]
[95.47487640 -58.28055954]
[93.79162598 -43.14715195]
[83.40000153 -31.77524185]
[86.28527832 -17.05535126]
[89.17054749 -2.33545971]
[92.05582428 12.38443184]
[94.94109344 27.10432243]
[97.82636261 41.82421494]
[100.71163940 56.54410553]
[103.41814423 58.80401230]
[105.16450500 62.48711777]
[105.29374695 67.12786865]
[103.38162231 71.98491669]
[105.60674286 86.81896210]
[114.16546631 97.87516785]
[109.22730255 110.95592499]
[121.89620209 116.38637543]
[130.16191101 127.28117371]
[131.95060730 140.72996521]
[126.90113068 153.20582581]
[116.43152618 161.49011230]
[118.43553925 176.35563660]
[120.43955231 191.22117615]
[122.44356537 206.08670044]
[124.44757843 220.95222473]
[126.45159149 235.81774902]
[141.02871704 236.79969788]
[155.12719727 240.61338806]
[168.20260620 247.10954285]
[179.75039673 256.03530884]
[189.32542419 267.04415894]
[196.55905151 279.70928955]
[201.17335510 293.54019165]
[202.99183655 308.00164795]
[201.94613647 322.53445435]
[198.07862854 336.57702637]
[191.54064941 349.58706665]
[182.58666992 361.06259155]
[171.56430054 370.56121826]
[158.90087891 377.71731567]
[145.08682251 382.25595093]
[146.86929321 397.14965820]
[148.65176392 412.04339600]
[150.43421936 426.93710327]
[163.82002258 434.56118774]
[170.07670593 448.44308472]
[166.99594116 463.17309570]
[155.96435547 473.14514160]
[157.74682617 488.03887939]
[159.52928162 502.93258667]
[161.31175232 517.82629395]
[174.43928528 522.65649414]
[184.15863037 532.62396240]
[188.61384583 545.74377441]
[186.98947144 559.43719482]
[179.65911865 571.03869629]
[168.10151672 578.31463623]
[169.66203308 593.23321533]
[171.22256470 608.15185547]
[172.78308105 623.07043457]
[187.79373169 623.86224365]
[202.49568176 626.99255371]
[216.52690125 632.38439941]
[229.54183960 639.90490723]
[241.21998596 649.36889648]
[251.27378845 660.54327393]
[259.45562744 673.15295410]
[265.56405640 686.88739014]
[269.44860840 701.40826416]
[271.01364136 716.35809326]
[270.22061157 731.36865234]
[267.08905029 746.07037354]
[261.69607544 760.10113525]
[254.17451477 773.11547852]
[244.70956421 784.79284668]
[233.53430176 794.84570312]
[220.92395020 803.02648926]
[207.18905640 809.13378906]
[192.66783142 813.01715088]
[177.71788025 814.58093262]
[162.70735168 813.78668213]
[148.00592041 810.65393066]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 188]
[17 187]
[18 186]
[19 185]
[24 179]
[25 178]
[26 177]
[27 176]
[31 172]
[32 171]
[33 170]
[34 169]
[48 154]
[49 153]
[50 152]
[51 151]
[52 150]
[53 149]
[57 144]
[59 142]
[60 141]
[61 137]
[62 136]
[63 135]
[64 134]
[65 133]
[66 132]
[67 131]
[71 127]
[72 126]
[73 125]
[74 124]
[75 123]
[89 122]
[91 120]
[92 119]
[93 118]
[96 115]
[97 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
