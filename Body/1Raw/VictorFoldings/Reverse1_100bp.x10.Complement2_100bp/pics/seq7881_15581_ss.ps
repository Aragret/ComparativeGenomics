%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[59.07392502 744.57232666]
[54.41608810 730.19189453]
[54.20554733 715.07745361]
[58.46102524 700.57287598]
[66.80412292 687.96795654]
[78.49298859 678.38348389]
[92.48824310 672.67175293]
[91.15000916 657.73156738]
[89.81177521 642.79138184]
[87.74961853 640.89251709]
[86.31536102 638.06243896]
[85.86749268 634.53613281]
[86.67283630 630.67401123]
[88.86579895 626.92633057]
[88.41918945 611.93298340]
[87.97257996 596.93963623]
[87.52597809 581.94628906]
[85.58049774 579.92803955]
[84.31723785 577.01757812]
[84.08004761 573.47088623]
[85.11383820 569.66357422]
[87.52597809 566.05310059]
[87.97257996 551.05975342]
[88.41918945 536.06640625]
[88.86579895 521.07305908]
[89.31240082 506.07968140]
[76.69841766 500.30426025]
[67.20847321 490.12521362]
[62.29950333 477.05688477]
[62.74356842 463.06066895]
[68.50662231 450.25082397]
[78.74867249 440.57482910]
[91.94606781 435.51760864]
[92.61585236 420.53256226]
[93.17406464 405.54296875]
[93.62066650 390.54962158]
[94.06727600 375.55627441]
[94.51387787 360.56292725]
[94.96048737 345.56954956]
[92.39561462 341.54086304]
[92.33432770 335.85815430]
[95.65021515 330.13830566]
[96.54302979 315.16491699]
[97.43584442 300.19149780]
[98.32866669 285.21810913]
[99.22148132 270.24468994]
[100.11429596 255.27128601]
[101.00711060 240.29788208]
[101.56532288 225.30827332]
[101.78865051 210.30993652]
[102.01197815 195.31159973]
[102.23530579 180.31326294]
[102.23530579 165.31326294]
[100.89707184 150.37307739]
[98.45134735 135.57380676]
[96.00561523 120.77452850]
[93.55989075 105.97525787]
[91.24151611 103.99671173]
[89.59181976 101.13087463]
[88.94081879 97.62378693]
[89.52302551 93.83996582]
[91.43653870 90.22452545]
[89.87602234 75.30592346]
[79.61368561 86.24596405]
[64.62638092 86.86298370]
[53.49951553 76.80352020]
[52.60705566 61.83009338]
[62.46025085 50.52016068]
[77.41474152 49.35256958]
[88.90347290 58.99532318]
[88.68014526 43.99698639]
[80.73823547 30.31353951]
[88.28518677 17.47248077]
[88.06185913 2.47414327]
[77.00276184 -8.49554348]
[76.98992920 -23.70917320]
[87.51600647 -34.18473434]
[87.29267883 -49.18307114]
[87.06935120 -64.18140411]
[79.12744141 -77.86485291]
[86.67439270 -90.70590973]
[86.45106506 -105.70424652]
[78.50916290 -119.38769531]
[86.05611420 -132.22875977]
[85.83278656 -147.22709656]
[77.89087677 -160.91053772]
[85.43782806 -173.75158691]
[74.35679626 -179.53765869]
[66.83096313 -189.42857361]
[64.23966980 -201.51016235]
[67.01468658 -213.47679138]
[74.56960297 -223.07139587]
[85.42247772 -228.51109314]
[85.64580536 -243.50942993]
[74.91821289 -254.80352783]
[75.35835266 -270.01080322]
[86.19165802 -280.16830444]
[86.41498566 -295.16665649]
[86.63831329 -310.16497803]
[86.86164093 -325.16333008]
[73.38632965 -332.42105103]
[64.83697510 -345.11621094]
[63.17816544 -360.33154297]
[68.79107666 -374.57070923]
[80.38591003 -384.56164551]
[95.29824829 -388.00848389]
[110.10135651 -384.11917114]
[121.39357758 -373.78744507]
[126.58004761 -359.38748169]
[124.46895599 -344.22827148]
[115.54541016 -331.79327393]
[101.85997772 -324.94000244]
[101.63665009 -309.94165039]
[101.41332245 -294.94332886]
[101.18999481 -279.94497681]
[111.71607208 -269.46942139]
[111.70323944 -254.25579834]
[100.64414215 -243.28610229]
[100.42081451 -228.28776550]
[115.02899933 -218.36444092]
[120.80692291 -201.51016235]
[115.26249695 -184.41224670]
[100.43616486 -173.97491455]
[108.36209869 -161.36425781]
[100.83112335 -147.45042419]
[101.05445099 -132.45208740]
[108.98038483 -119.84141541]
[101.44940186 -105.92757416]
[101.67272949 -90.92923737]
[109.59866333 -78.31857300]
[102.06768799 -64.40473175]
[102.29101562 -49.40639877]
[102.51434326 -34.40806198]
[113.34764099 -24.25054550]
[113.78778839 -9.04327869]
[103.06019592 2.25081539]
[103.28352356 17.24915314]
[111.20945740 29.85981750]
[103.67848206 43.77365494]
[103.90180969 58.77199554]
[104.79462433 73.74539948]
[106.35514832 88.66400146]
[108.35916138 103.52953339]
[110.80488586 118.32880402]
[113.25061798 133.12806702]
[115.69634247 147.92735291]
[122.45250702 134.53501892]
[134.94525146 126.23252106]
[149.90898132 125.19009399]
[163.43222046 131.68022156]
[171.98004150 144.00640869]
[173.31805420 158.94660950]
[167.09649658 172.59550476]
[154.94168091 181.38529968]
[140.03083801 183.01835632]
[126.26164246 177.06781006]
[117.23364258 165.08993530]
[120.29082489 170.95211792]
[119.97584534 176.62641907]
[117.23364258 180.53659058]
[117.01031494 195.53492737]
[116.78698730 210.53326416]
[116.56365967 225.53160095]
[119.10754395 230.08964539]
[119.59947205 234.70605469]
[118.36083221 238.58946228]
[115.98051453 241.19068909]
[115.08769989 256.16409302]
[114.19488525 271.13751221]
[113.30207062 286.11090088]
[112.40925598 301.08432007]
[111.51644135 316.05773926]
[110.62361908 331.03112793]
[109.95383453 346.01617432]
[109.50723267 361.00952148]
[109.06062317 376.00286865]
[108.61402130 390.99621582]
[108.16741180 405.98956299]
[111.03992462 414.66058350]
[107.60089111 421.20236206]
[106.93110657 436.18740845]
[121.32207489 443.77911377]
[130.92727661 456.83987427]
[133.86463928 472.72482300]
[129.59597778 488.24456787]
[119.02484131 500.30545044]
[104.30574799 506.52627563]
[103.85914612 521.51965332]
[103.41253662 536.51300049]
[102.96593475 551.50634766]
[102.51932526 566.49969482]
[102.51932526 581.49969482]
[102.96593475 596.49304199]
[103.41253662 611.48638916]
[103.85914612 626.47973633]
[104.75196075 641.45312500]
[106.09019470 656.39331055]
[107.42842865 671.33349609]
[122.21598816 674.46710205]
[135.42213440 681.82165527]
[145.87255859 692.74322510]
[152.63804626 706.26055908]
[155.11698914 721.17187500]
[153.08897400 736.15112305]
[146.73434448 749.86645508]
[136.61811829 761.09826660]
[123.63984680 768.84783936]
[108.95354462 772.42608643]
[93.86510468 771.51483154]
[79.71617889 766.19512939]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 198]
[8 197]
[9 196]
[14 195]
[15 194]
[16 193]
[17 192]
[22 191]
[23 190]
[24 189]
[25 188]
[26 187]
[33 181]
[34 180]
[35 178]
[36 177]
[37 176]
[38 175]
[39 174]
[42 173]
[43 172]
[44 171]
[45 170]
[46 169]
[47 168]
[48 167]
[49 163]
[50 162]
[51 161]
[52 160]
[53 157]
[54 146]
[55 145]
[56 144]
[57 143]
[62 142]
[63 141]
[70 140]
[71 139]
[73 137]
[74 136]
[77 133]
[78 132]
[79 131]
[81 129]
[82 128]
[84 126]
[85 125]
[87 123]
[93 119]
[94 118]
[97 115]
[98 114]
[99 113]
[100 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
