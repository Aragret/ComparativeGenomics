%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[59.91658783 595.35211182]
[53.13653946 581.88751221]
[49.77647400 567.19146729]
[50.03173828 552.11840820]
[53.88749313 537.54455566]
[61.11957169 524.31732178]
[71.30750275 513.20562744]
[83.85898590 504.85552979]
[98.04428864 499.75253296]
[96.48376465 484.83392334]
[94.92324066 469.91531372]
[93.36271667 454.99670410]
[83.98547363 466.70428467]
[69.30178070 469.76846313]
[56.02482224 462.78833008]
[50.22464371 448.95510864]
[54.55300903 434.59317017]
[67.03105164 426.26858521]
[81.95397186 427.78726196]
[92.50000000 438.45654297]
[92.50000000 423.45654297]
[92.50000000 408.45654297]
[92.50000000 393.45654297]
[92.50000000 378.45654297]
[77.77018738 375.72290039]
[63.78981781 370.32763672]
[51.03553772 362.45312500]
[39.94248962 352.36636353]
[30.88946152 340.40972900]
[24.18593407 326.98956299]
[20.06152153 312.56225586]
[18.65810013 297.61877441]
[20.02492142 282.66787720]
[24.11689758 268.21890259]
[30.79607773 254.76435852]
[39.83630371 242.76306152]
[50.93086243 232.62466431]
[63.70289993 224.69551086]
[77.71820831 219.24690247]
[92.50000000 216.46575928]
[92.50000000 201.46575928]
[92.50000000 186.46575928]
[81.81912994 176.14807129]
[81.60544586 160.93594360]
[92.50000000 149.80281067]
[84.76270294 137.07554626]
[92.50000000 123.27537537]
[92.50000000 108.27537537]
[92.38833618 93.27578735]
[92.16500854 78.27745056]
[84.22309875 64.59400940]
[91.77005005 51.75294876]
[91.54672241 36.75461197]
[91.32339478 21.75627327]
[91.10006714 6.75793552]
[88.74195099 3.11194372]
[87.76496124 -0.71036094]
[88.05493164 -4.25314569]
[89.36138153 -7.14447737]
[91.33669281 -9.13351536]
[92.00647736 -24.11855316]
[92.67626190 -39.10359192]
[93.34604645 -54.08863068]
[93.90425873 -69.07823944]
[93.79259491 -84.07782745]
[93.12281036 -99.06286621]
[92.45302582 -114.04790497]
[91.78324127 -129.03294373]
[91.11345673 -144.01797485]
[88.66772461 -158.81724548]
[84.48071289 -173.22103882]
[80.29370117 -187.62481689]
[76.10668945 -202.02859497]
[71.91967773 -216.43237305]
[67.73266602 -230.83616638]
[52.84602737 -228.78538513]
[37.81942749 -228.92405701]
[22.97317123 -231.24923706]
[8.62370014 -235.71136475]
[-4.92312193 -242.21531677]
[-17.37854576 -250.62248230]
[-28.47708130 -260.75363159]
[-37.98216629 -272.39285278]
[-45.69119263 -285.29202271]
[-51.43984985 -299.17620850]
[-55.10559845 -313.74948120]
[-56.61030579 -328.70120239]
[-55.92189789 -343.71264648]
[-53.05504990 -358.46389771]
[-48.07086945 -372.64050293]
[-41.07559204 -385.94027710]
[-32.21832275 -398.07974243]
[-21.68785286 -408.80014038]
[-9.70864582 -417.87298584]
[3.46396422 -425.10485840]
[17.54920197 -430.34164429]
[32.24684143 -433.47171021]
[47.24359894 -434.42834473]
[62.21981812 -433.19113159]
[76.85628510 -429.78643799]
[90.84101105 -424.28686523]
[103.87592316 -416.80966187]
[115.68317413 -407.51412964]
[126.01109314 -396.59844971]
[134.63954163 -384.29528809]
[141.38459778 -370.86688232]
[146.10250854 -356.59948730]
[148.69268799 -341.79714966]
[149.09992981 -326.77542114]
[147.31556702 -311.85452271]
[143.37762451 -297.35241699]
[137.37005615 -283.57827759]
[129.42088318 -270.82568359]
[119.69956207 -259.36648560]
[108.41329956 -249.44487000]
[95.80266571 -241.27236938]
[82.13645172 -235.02317810]
[86.32346344 -220.61938477]
[90.51047516 -206.21560669]
[94.69748688 -191.81182861]
[98.88449860 -177.40805054]
[103.07151031 -163.00425720]
[106.37679291 -177.63557434]
[114.42864227 -190.29130554]
[126.28114319 -199.48469543]
[140.54185486 -204.13569641]
[155.53547668 -203.69792175]
[169.50053406 -198.22279358]
[180.79646301 -188.35354614]
[188.09619141 -175.24958801]
[190.54219055 -160.45034790]
[187.84707642 -145.69445801]
[180.32749939 -132.71540833]
[168.86682129 -123.03796387]
[154.81144714 -117.79901886]
[139.81259155 -117.61405182]
[125.63229370 -122.50477600]
[113.93644714 -131.89663696]
[106.09849548 -144.68775940]
[106.76828003 -129.70272827]
[107.43806458 -114.71768951]
[108.10784912 -99.73265076]
[108.77763367 -84.74761200]
[120.67208862 -93.88665009]
[135.26925659 -90.43374634]
[141.80865479 -76.93425751]
[135.46968079 -63.33950043]
[120.92519379 -59.67102432]
[108.89761353 -68.63163757]
[111.84056854 -61.85219574]
[108.33108521 -53.41884613]
[107.66130066 -38.43380737]
[106.99151611 -23.44876862]
[106.32173157 -8.46372986]
[106.09840393 6.53460741]
[106.32173157 21.53294563]
[106.54505920 36.53128433]
[106.76838684 51.52962112]
[114.69432068 64.14028168]
[107.16334534 78.05412292]
[107.38667297 93.05245972]
[110.64598846 100.42466736]
[107.50000000 108.27537537]
[107.50000000 123.27537537]
[115.23729706 137.07554626]
[107.50000000 149.80281067]
[118.39455414 160.93594360]
[118.18087006 176.14807129]
[107.50000000 186.46575928]
[107.50000000 201.46575928]
[107.50000000 216.46575928]
[122.28179169 219.24690247]
[136.29710388 224.69551086]
[149.06913757 232.62466431]
[160.16369629 242.76306152]
[169.20391846 254.76435852]
[175.88310242 268.21890259]
[179.97508240 282.66787720]
[181.34190369 297.61877441]
[179.93847656 312.56225586]
[175.81407166 326.98956299]
[169.11053467 340.40972900]
[160.05751038 352.36636353]
[148.96446228 362.45312500]
[136.21018982 370.32763672]
[122.22981262 375.72290039]
[107.50000000 378.45654297]
[107.50000000 393.45654297]
[107.50000000 408.45654297]
[107.50000000 423.45654297]
[107.50000000 438.45654297]
[108.28131866 453.43618774]
[109.84184265 468.35479736]
[111.40236664 483.27340698]
[112.96289062 498.19201660]
[127.89714813 500.24905396]
[141.90490723 505.82095337]
[154.17176819 514.58380127]
[163.98455811 526.02813721]
[170.77276611 539.48858643]
[174.14173889 554.18255615]
[173.89561462 569.25579834]
[170.04869080 583.83197021]
[162.82463074 597.06365967]
[152.64343262 608.18151855]
[140.09701538 616.53918457]
[125.91481781 621.65075684]
[110.92136383 623.21911621]
[95.98835754 621.15307617]
[81.98397827 615.57263184]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 195]
[10 194]
[11 193]
[12 192]
[20 191]
[21 190]
[22 189]
[23 188]
[24 187]
[40 171]
[41 170]
[42 169]
[45 166]
[47 164]
[48 163]
[49 161]
[50 160]
[52 158]
[53 157]
[54 156]
[55 155]
[60 154]
[61 153]
[62 152]
[63 151]
[64 149]
[65 143]
[66 142]
[67 141]
[68 140]
[69 139]
[70 122]
[71 121]
[72 120]
[73 119]
[74 118]
[75 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
