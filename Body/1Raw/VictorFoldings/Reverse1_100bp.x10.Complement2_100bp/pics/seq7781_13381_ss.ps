%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[140.28170776 481.58273315]
[141.65083313 466.58874512]
[146.10784912 452.20721436]
[153.45788574 439.06680298]
[163.37966919 427.74194336]
[175.43942261 418.72775269]
[189.10998535 412.41827393]
[185.78771973 397.79080200]
[182.46545410 383.16333008]
[179.14320374 368.53588867]
[175.82093811 353.90841675]
[172.49868774 339.28094482]
[169.17642212 324.65350342]
[165.85415649 310.02603149]
[162.53190613 295.39859009]
[159.20964050 280.77111816]
[155.88739014 266.14364624]
[152.56512451 251.51618958]
[149.24285889 236.88873291]
[139.16194153 247.99617004]
[124.18349457 247.19244385]
[115.34906769 235.07002258]
[119.17107391 220.56512451]
[132.83207703 214.37020874]
[146.26066589 221.05062866]
[144.03555298 206.21658325]
[141.81044006 191.38253784]
[139.58531189 176.54850769]
[134.33860779 162.49603271]
[126.29743195 149.83351135]
[118.25625610 137.17097473]
[109.65769196 124.88014221]
[100.51889038 112.98551178]
[91.02999115 101.36824799]
[81.19940948 90.03865051]
[71.36882782 78.70906067]
[61.45417786 67.45296478]
[51.45600510 56.27098846]
[41.45783234 45.08901215]
[22.04313850 39.66387939]
[18.91426468 20.58255005]
[8.58759594 9.70321560]
[-1.73907292 -1.17611921]
[-16.85150528 -5.85852957]
[-20.00174713 -20.41618156]
[-30.32841682 -31.29551506]
[-40.65508652 -42.17485046]
[-50.98175430 -53.05418396]
[-62.81596375 -43.81800461]
[-75.48635864 -35.76712799]
[-88.87462616 -28.97671700]
[-102.85577393 -23.51017761]
[-117.29925537 -19.41855049]
[-132.07020569 -16.74003792]
[-147.03071594 -15.49965191]
[-162.04110718 -15.70897102]
[-176.96121216 -17.36604118]
[-191.65173340 -20.45539093]
[-205.97550964 -24.94817543]
[-219.79878235 -30.80244637]
[-232.99250793 -37.96354294]
[-245.43348694 -46.36459732]
[-257.00555420 -55.92717361]
[-267.60064697 -66.56198883]
[-277.11987305 -78.16973877]
[-285.47433472 -90.64205170]
[-292.58602905 -103.86246490]
[-298.38854980 -117.70755005]
[-302.82769775 -132.04801941]
[-305.86209106 -146.75000000]
[-307.46331787 -161.67620850]
[-307.61648560 -176.68727112]
[-306.32015991 -191.64303589]
[-303.58639526 -206.40386963]
[-299.44079590 -220.83193970]
[-293.92196655 -234.79254150]
[-287.08154297 -248.15531921]
[-278.98330688 -260.79550171]
[-269.70294189 -272.59509277]
[-259.32702637 -283.44387817]
[-247.95251465 -293.24060059]
[-235.68554688 -301.89376831]
[-222.64070129 -309.32257080]
[-208.93975830 -315.45770264]
[-194.71064758 -320.24182129]
[-180.08622742 -323.63031006]
[-165.20303345 -325.59146118]
[-150.20004272 -326.10702515]
[-135.21733093 -325.17218018]
[-120.39479828 -322.79562378]
[-105.87083435 -318.99957275]
[-91.78105927 -313.81945801]
[-78.25701141 -307.30364990]
[-65.42498016 -299.51300049]
[-53.40476608 -290.52020264]
[-42.30860901 -280.40927124]
[-32.24011230 -269.27459717]
[-23.29328346 -257.22015381]
[-15.55165863 -244.35848999]
[-9.08752155 -230.80966187]
[-3.96122789 -216.70021057]
[-0.22064081 -202.16186523]
[2.09931350 -187.33036804]
[2.97697401 -172.34420776]
[2.40414572 -157.34329224]
[0.38617712 -142.46769714]
[-3.05808997 -127.85630798]
[-7.89649630 -113.64556122]
[-14.08386707 -99.96813965]
[-21.56242943 -86.95173645]
[-30.26235771 -74.71790314]
[-40.10242081 -63.38085175]
[-29.77575111 -52.50151825]
[-19.44908142 -41.62218475]
[-9.12241364 -30.74284935]
[5.25138617 -26.83860207]
[9.14026165 -11.50278759]
[19.46693039 -0.62345338]
[29.79359818 10.25588131]
[39.99093628 9.60221577]
[49.05509567 14.77806091]
[53.87344360 24.28404808]
[52.63980865 35.09084320]
[62.63798141 46.27281570]
[72.63615417 57.45479202]
[79.43791199 60.34578323]
[82.69842529 68.87847900]
[92.52899933 80.20806885]
[102.35958099 91.53766632]
[105.37063599 92.00994873]
[108.27639771 93.58826447]
[110.66687012 96.23573303]
[112.15144348 99.76451874]
[112.41352081 103.84670258]
[121.55232239 115.74134064]
[124.56983948 101.04798889]
[137.01689148 92.67713928]
[151.76322937 95.42400360]
[160.36149597 107.71504974]
[157.88621521 122.50940704]
[145.75532532 131.33219910]
[130.91877747 129.12980652]
[138.95996094 141.79232788]
[147.00112915 154.45484924]
[145.38792419 139.54185486]
[146.86775208 124.61503601]
[151.37771606 110.30908203]
[158.72602844 97.23229218]
[168.60025024 85.94071198]
[180.58050537 76.91445160]
[194.15739441 70.53731537]
[208.75364685 67.08045959]
[223.74858093 66.69087982]
[238.50462341 69.38513184]
[252.39434814 75.04866028]
[264.82714844 83.44065094]
[275.27438354 94.20426941]
[283.29180908 106.88183594]
[288.53854370 120.93430328]
[290.79150391 135.76414490]
[289.95483398 150.74079895]
[286.06417847 165.22743225]
[279.28494263 178.60809326]
[269.90536499 190.31379700]
[258.32431030 199.84683228]
[245.03416443 206.80184937]
[230.60006714 210.88311768]
[215.63574219 211.91708374]
[200.77749634 209.85980225]
[186.65708923 204.79873657]
[173.87495422 196.94909668]
[162.97457886 186.64465332]
[154.41935730 174.32337952]
[156.64448547 189.15742493]
[158.86959839 203.99147034]
[161.09471130 218.82551575]
[163.87033081 233.56648254]
[167.19258118 248.19393921]
[170.51484680 262.82141113]
[173.83709717 277.44885254]
[177.15936279 292.07632446]
[180.48162842 306.70376587]
[183.80387878 321.33123779]
[187.12614441 335.95870972]
[190.44839478 350.58615112]
[193.77066040 365.21362305]
[197.09292603 379.84106445]
[200.41517639 394.46853638]
[203.73744202 409.09600830]
[218.79225159 408.88125610]
[233.56266785 411.80163574]
[247.40296936 417.72955322]
[259.70809937 426.40576172]
[269.94018555 437.45104980]
[277.65188599 450.38253784]
[282.50607300 464.63494873]
[284.29055786 479.58517456]
[282.92733765 494.57968140]
[278.47598267 508.96295166]
[271.13110352 522.10626221]
[261.21377563 533.43499756]
[249.15757751 542.45397949]
[235.48950195 548.76885986]
[220.80709839 552.10357666]
[205.75218201 552.31237793]
[190.98292542 549.38616943]
[177.14497375 543.45288086]
[164.84323120 534.77178955]
[154.61550903 523.72247314]
[146.90890503 510.78793335]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 189]
[8 188]
[9 187]
[10 186]
[11 185]
[12 184]
[13 183]
[14 182]
[15 181]
[16 180]
[17 179]
[18 178]
[19 177]
[25 176]
[26 175]
[27 174]
[28 173]
[29 144]
[30 143]
[31 142]
[32 135]
[33 134]
[34 129]
[35 128]
[36 127]
[37 125]
[38 124]
[39 123]
[41 119]
[42 118]
[43 117]
[45 115]
[46 114]
[47 113]
[48 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
