%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[38.30714035 717.47222900]
[24.24783897 722.72821045]
[9.78394222 726.73883057]
[-4.97446442 729.47357178]
[-19.91506004 730.91156006]
[-34.92413712 731.04199219]
[-49.88746262 729.86376953]
[-64.69115448 727.38586426]
[-79.22254944 723.62713623]
[-93.37104797 718.61621094]
[-107.02897644 712.39123535]
[-120.09238434 704.99957275]
[-132.46183777 696.49743652]
[-144.04321289 686.94958496]
[-154.74836731 676.42871094]
[-164.49581909 665.01483154]
[-173.21138000 652.79486084]
[-180.82872009 639.86175537]
[-187.28987122 626.31390381]
[-192.54565430 612.25457764]
[-196.55607605 597.79058838]
[-199.29060364 583.03216553]
[-200.72843933 568.09155273]
[-200.85862732 553.08245850]
[-199.68017578 538.11914062]
[-197.20205688 523.31549072]
[-193.44314575 508.78414917]
[-188.43202209 494.63571167]
[-182.20684814 480.97787476]
[-174.81500244 467.91458130]
[-166.31271362 455.54522705]
[-156.76472473 443.96398926]
[-146.24368286 433.25900269]
[-134.82966614 423.51171875]
[-122.60955048 414.79632568]
[-109.67633057 407.17913818]
[-96.12844086 400.71820068]
[-82.06899261 395.46261597]
[-67.60498047 391.45239258]
[-52.84649658 388.71807861]
[-37.90586090 387.28045654]
[-22.89678192 387.15048218]
[-7.93348932 388.32913208]
[6.87013483 390.80743408]
[10.62643528 376.28540039]
[14.38273621 361.76333618]
[13.01440907 354.50045776]
[18.30457687 347.05383301]
[22.27667427 332.58932495]
[26.24876976 318.12478638]
[30.22086525 303.66027832]
[34.19296265 289.19573975]
[32.93291855 281.91329956]
[38.33337021 274.54626465]
[42.52038193 260.14248657]
[41.36890411 252.84208679]
[46.87844086 245.55628967]
[51.27943802 231.21644592]
[47.61683655 216.77919006]
[59.06258774 205.85647583]
[63.46358490 191.51663208]
[67.86458588 177.17678833]
[72.26557922 162.83694458]
[76.66658020 148.49710083]
[71.27799988 137.66705322]
[74.82718658 125.68427277]
[85.93442535 119.12743378]
[90.54843903 104.85470581]
[94.19652557 90.30508423]
[96.86231995 75.54386902]
[91.70075226 60.58830643]
[101.57676697 49.43870926]
[104.24256134 34.67749023]
[106.90836334 19.91627312]
[109.57415771 5.15505600]
[112.23995209 -9.60616112]
[105.61306763 -26.78655434]
[117.46284485 -39.73065186]
[119.90857697 -54.52992249]
[122.35430145 -69.32919312]
[124.80003357 -84.12846375]
[126.80404663 -98.99398804]
[128.36456299 -113.91259766]
[116.04650879 -122.97972107]
[109.96097565 -136.90319824]
[111.65054321 -151.90357971]
[120.56195068 -163.96354675]
[134.22137451 -169.90371704]
[135.78190613 -184.82232666]
[129.52227783 -199.35255432]
[138.54167175 -211.20582581]
[140.10220337 -226.12442017]
[141.66271973 -241.04302979]
[142.44404602 -256.02267456]
[142.44404602 -271.02267456]
[142.44404602 -286.02267456]
[142.44404602 -301.02267456]
[128.19137573 -306.18377686]
[116.56544495 -315.91073608]
[108.97014618 -329.02893066]
[106.32263947 -343.95431519]
[108.94263458 -358.88452148]
[116.51374817 -372.01669312]
[128.12173462 -381.76507568]
[142.36486816 -386.95245361]
[157.52322388 -386.95245361]
[171.76635742 -381.76507568]
[183.37434387 -372.01669312]
[190.94546509 -358.88452148]
[193.56544495 -343.95431519]
[190.91795349 -329.02893066]
[183.32264709 -315.91073608]
[171.69671631 -306.18377686]
[157.44404602 -301.02267456]
[157.44404602 -286.02267456]
[157.44404602 -271.02267456]
[157.44404602 -256.02267456]
[167.98840332 -266.69116211]
[182.91119385 -268.21109009]
[195.38993835 -259.88754272]
[199.71949768 -245.52597046]
[193.92047119 -231.69227600]
[180.64410400 -224.71101379]
[165.96014404 -227.77395630]
[156.58132935 -239.48251343]
[155.02081299 -224.56390381]
[153.46028137 -209.64529419]
[159.83151245 -196.18214417]
[150.70050049 -183.26179504]
[149.13998413 -168.34320068]
[161.27447510 -159.70491028]
[167.49728394 -146.06187439]
[166.04608154 -131.03654480]
[157.21093750 -118.67382050]
[143.28317261 -112.35207367]
[141.72265625 -97.43346405]
[143.38105774 -95.17341614]
[144.24414062 -92.12026978]
[144.00537109 -88.57366943]
[142.47218323 -84.93858337]
[139.59930420 -81.68273163]
[137.15357971 -66.88346100]
[134.70783997 -52.08419418]
[132.26211548 -37.28492355]
[139.04928589 -27.27188873]
[137.13282776 -14.92235565]
[127.00116730 -6.94036579]
[124.33537292 7.82085133]
[121.66957855 22.58206940]
[119.00378418 37.34328461]
[116.33798981 52.10450363]
[121.69023132 66.00424194]
[111.62353516 78.20966339]
[108.95774078 92.97087860]
[120.21508789 83.05764771]
[135.02850342 80.69908142]
[148.80787659 86.62602234]
[157.28353882 99.00193024]
[157.82920837 113.99200439]
[150.27580261 126.95140076]
[136.96382141 133.86451721]
[122.01812744 132.58923340]
[110.06980896 123.52072906]
[104.82116699 109.46871185]
[100.20716095 123.74144745]
[104.47931671 141.65318298]
[91.00642395 152.89808655]
[86.60543060 167.23794556]
[82.20442963 181.57778931]
[77.80342865 195.91763306]
[73.40243530 210.25747681]
[76.75024414 225.72042847]
[65.61928558 235.61744690]
[61.21828842 249.95729065]
[56.92416382 264.32949829]
[52.73715210 278.73327637]
[48.65748596 293.16784668]
[44.68539047 307.63235474]
[40.71329498 322.09689331]
[36.74119568 336.56140137]
[32.76910019 351.02593994]
[28.90479469 365.51962280]
[25.14849472 380.04168701]
[21.39219475 394.56375122]
[35.54083633 399.57427979]
[49.19893646 405.79885864]
[62.26254654 413.19018555]
[74.63224792 421.69192505]
[86.21389008 431.23944092]
[96.91933441 441.76004028]
[106.66710663 453.17364502]
[115.38301086 465.39340210]
[123.00071716 478.32629395]
[129.46224976 491.87390137]
[134.71842957 505.93313599]
[138.72924805 520.39697266]
[141.46420288 535.15533447]
[142.90245056 550.09594727]
[143.03305054 565.10498047]
[141.85502625 580.06835938]
[139.37731934 594.87207031]
[135.61882019 609.40350342]
[130.60809326 623.55206299]
[124.38330078 637.21008301]
[116.99181366 650.27362061]
[108.48988342 662.64318848]
[98.94221497 674.22467041]
[88.42147064 684.92999268]
[77.00773621 694.67761230]
[64.78785706 703.39331055]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 184]
[45 183]
[46 182]
[48 181]
[49 180]
[50 179]
[51 178]
[52 177]
[54 176]
[55 175]
[57 174]
[58 173]
[60 171]
[61 170]
[62 169]
[63 168]
[64 167]
[67 165]
[68 164]
[69 154]
[70 153]
[72 151]
[73 150]
[74 149]
[75 148]
[76 147]
[78 144]
[79 143]
[80 142]
[81 141]
[82 136]
[83 135]
[88 130]
[89 129]
[91 127]
[92 126]
[93 125]
[94 117]
[95 116]
[96 115]
[97 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
