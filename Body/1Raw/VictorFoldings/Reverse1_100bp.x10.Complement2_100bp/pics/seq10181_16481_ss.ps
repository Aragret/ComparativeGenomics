%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCAUUUUCCUCCCGUUAAAGAUCUAGUUUAUUAUUCUUCCAUUAUCGAUGAUUCUUCUUAAAAUACCUCUUUCCCUGCGCCCGCCCCCUAUAUCCCAGxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[8.17224312 629.80920410]
[-4.68536711 637.54339600]
[-17.98250008 644.49475098]
[-31.67155457 650.63848877]
[-45.70352936 655.95257568]
[-60.02819443 660.41790771]
[-74.59426117 664.01861572]
[-89.34960175 666.74176025]
[-104.24138641 668.57763672]
[-119.21630859 669.51959229]
[-134.22076416 669.56427002]
[-149.20101929 668.71154785]
[-164.10348511 666.96453857]
[-178.87478638 664.32934570]
[-193.46205139 660.81549072]
[-207.81307983 656.43560791]
[-221.87646484 651.20526123]
[-235.60189819 645.14318848]
[-248.94021606 638.27117920]
[-261.84368896 630.61376953]
[-274.26611328 622.19836426]
[-286.16302490 613.05511475]
[-297.49185181 603.21679688]
[-308.21200562 592.71850586]
[-318.28515625 581.59790039]
[-327.67520142 569.89483643]
[-336.34854126 557.65112305]
[-344.27413940 544.91058350]
[-351.42358398 531.71887207]
[-357.77133179 518.12322998]
[-363.29464722 504.17233276]
[-367.97375488 489.91604614]
[-371.79190063 475.40545654]
[-374.73538208 460.69247437]
[-376.79373169 445.82980347]
[-377.95953369 430.87066650]
[-378.22863770 415.86856079]
[-377.60003662 400.87719727]
[-376.07604980 385.95028687]
[-373.66207886 371.14123535]
[-370.36679077 356.50305176]
[-366.20196533 342.08813477]
[-361.18252563 327.94808960]
[-355.32641602 314.13354492]
[-348.65466309 300.69393921]
[-341.19107056 287.67739868]
[-332.96240234 275.13049316]
[-323.99807739 263.09817505]
[-314.33026123 251.62348938]
[-303.99346924 240.74752808]
[-293.02478027 230.50921631]
[-281.46340942 220.94520569]
[-269.35076904 212.08972168]
[-256.73022461 203.97448730]
[-243.64692688 196.62854004]
[-230.14772034 190.07817078]
[-216.28094482 184.34684753]
[-202.09623718 179.45506287]
[-187.64436340 175.42034912]
[-172.97706604 172.25714111]
[-158.14685059 169.97677612]
[-143.20680237 168.58738708]
[-128.21040344 168.09396362]
[-113.21132660 168.49827576]
[-98.26329041 169.79887390]
[-83.41978455 171.99110413]
[-68.73394775 175.06712341]
[-54.25836182 179.01589966]
[-40.04483795 183.82331848]
[-26.14425850 189.47215271]
[-12.60638523 195.94219971]
[0.52032012 203.21029663]
[13.18886757 211.25041199]
[21.96947098 199.08895874]
[30.75007439 186.92749023]
[39.53067780 174.76603699]
[48.31127930 162.60458374]
[56.90984344 150.31375122]
[65.32446289 137.89625549]
[73.73908234 125.47875214]
[82.15370178 113.06125641]
[90.56832123 100.64376831]
[90.77038574 95.40228271]
[93.89478302 90.64712524]
[99.42292023 87.98693848]
[108.20352936 75.82548523]
[116.98413086 63.66403198]
[125.76473236 51.50257492]
[123.44886017 36.09885788]
[132.52688599 23.89049530]
[147.22624207 21.77759361]
[156.00685120 9.61613750]
[157.81198120 -6.10175228]
[171.53530884 -11.89135170]
[180.31591797 -24.05280685]
[189.09652710 -36.21426392]
[197.87712097 -48.37571716]
[186.68927002 -58.38819504]
[176.60931396 -69.51528931]
[167.74769592 -81.63507843]
[160.20150757 -94.61478424]
[154.05342102 -108.31218719]
[149.37081909 -122.57720947]
[146.20498657 -137.25355530]
[144.59060669 -152.18043518]
[144.54539490 -167.19427490]
[146.06982422 -182.13059998]
[149.14718628 -196.82575989]
[153.74378967 -211.11872864]
[159.80924988 -224.85292053]
[167.27711487 -237.87783813]
[176.06556702 -250.05079651]
[186.07832336 -261.23840332]
[197.20565796 -271.31808472]
[209.32566833 -280.17941284]
[222.30555725 -287.72528076]
[236.00311279 -293.87304688]
[250.26824951 -298.55529785]
[264.94467163 -301.72076416]
[279.87158203 -303.33477783]
[294.88543701 -303.37963867]
[309.82171631 -301.85485840]
[324.51678467 -298.77713013]
[338.80966187 -294.18017578]
[352.54370117 -288.11437988]
[365.56845093 -280.64617920]
[377.74118042 -271.85745239]
[388.92852783 -261.84442139]
[399.00796509 -250.71684265]
[407.86898804 -238.59661865]
[415.41455078 -225.61654663]
[421.56195068 -211.91883850]
[426.24389648 -197.65359497]
[429.40899658 -182.97709656]
[431.02264404 -168.05014038]
[431.06713867 -153.03628540]
[429.54199219 -138.10003662]
[426.46389771 -123.40503693]
[421.86660767 -109.11228943]
[415.80047607 -95.37839508]
[408.33197021 -82.35383606]
[399.54293823 -70.18131256]
[389.52963257 -58.99419022]
[378.40182495 -48.91504288]
[366.28137207 -40.05430603]
[353.30111694 -32.50906372]
[339.60327148 -26.36197853]
[325.33789062 -21.68040848]
[310.66131592 -18.51564407]
[295.73434448 -16.90236282]
[280.72048950 -16.85823822]
[265.78427124 -18.38375282]
[251.08934021 -21.46219635]
[236.79670715 -26.05983543]
[223.06295776 -32.12629700]
[210.03857422 -39.59511566]
[201.25798035 -27.43366051]
[192.47737122 -15.27220440]
[183.69677734 -3.11074853]
[182.51968384 11.73727322]
[168.16830444 18.39674187]
[159.38769531 30.55819702]
[162.00767517 45.17569733]
[153.27613831 57.63422775]
[137.92619324 60.28317642]
[129.14558411 72.44463348]
[120.36498260 84.60608673]
[111.58438110 96.76754761]
[102.98581696 109.05838013]
[94.57119751 121.47587585]
[86.15657806 133.89337158]
[77.74195862 146.31086731]
[69.32733917 158.72836304]
[68.47193909 165.28427124]
[64.96112061 169.75317383]
[60.47273636 171.38519287]
[51.69213104 183.54664612]
[42.91152954 195.70809937]
[34.13092804 207.86955261]
[25.35032272 220.03100586]
[36.96847534 229.52595520]
[47.99799347 239.69873047]
[58.39939499 250.51290894]
[68.13544464 261.92977905]
[77.17129517 273.90844727]
[85.47458649 286.40609741]
[93.01560974 299.37792969]
[99.76735687 312.77752686]
[105.70567322 326.55694580]
[110.80928802 340.66680908]
[115.05993652 355.05664062]
[118.44240570 369.67495728]
[120.94458008 384.46936035]
[122.55750275 399.38693237]
[123.27540588 414.37426758]
[123.09571838 429.37771606]
[122.01908112 444.34353638]
[120.04935455 459.21820068]
[117.19357300 473.94845581]
[113.46198273 488.48153687]
[108.86791992 502.76544189]
[103.42784119 516.74902344]
[97.16122437 530.38226318]
[90.09049988 543.61633301]
[82.24096680 556.40386963]
[73.64074707 568.69903564]
[64.32061005 580.45788574]
[54.31392288 591.63830566]
[43.65650940 602.20025635]
[32.38652039 612.10595703]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[73 180]
[74 179]
[75 178]
[76 177]
[77 176]
[78 173]
[79 172]
[80 171]
[81 170]
[82 169]
[85 168]
[86 167]
[87 166]
[88 165]
[91 162]
[92 161]
[94 159]
[95 158]
[96 157]
[97 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
