%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAUAAUCCCCCAAUCAAAACGCAUAACCCCAGUAACCACAAGAACAUCAACUUUAUGUUGCUACCAAAAAGUAUAGUAACCAGCACCAACAUCAGGCACxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[134.92489624 627.50402832]
[123.29564667 617.99224854]
[113.06995392 606.98547363]
[104.43831635 594.68878174]
[97.56153107 581.33123779]
[92.56771851 567.16174316]
[89.54989624 552.44415283]
[88.56430054 537.45275879]
[89.62928772 522.46679688]
[92.72501373 507.76541138]
[97.79380035 493.62252808]
[104.74123383 480.30160522]
[113.43788147 468.05081177]
[123.72173309 457.09835815]
[135.40119934 447.64828491]
[148.25871277 439.87664795]
[162.05471802 433.92822266]
[176.53222656 429.91381836]
[174.52821350 415.04830933]
[172.52420044 400.18276978]
[170.52018738 385.31723022]
[168.51617432 370.45172119]
[157.27709961 364.14993286]
[151.63552856 352.34930420]
[153.85325623 339.26144409]
[163.34158325 329.70181274]
[161.55912781 314.80810547]
[159.77665710 299.91439819]
[157.99418640 285.02066040]
[155.65870667 270.20361328]
[152.77342224 255.48371887]
[149.88815308 240.76382446]
[146.67488098 226.11203003]
[143.13520813 211.53565979]
[139.59553528 196.95928955]
[134.34881592 182.90681458]
[127.46940613 169.57737732]
[120.58999634 156.24795532]
[113.71057892 142.91851807]
[106.83116913 129.58909607]
[99.95175934 116.25966644]
[89.09020233 112.05634308]
[83.82598877 101.66744232]
[86.85994720 90.42304993]
[80.17974854 76.99267578]
[74.89024353 73.02622986]
[72.72320557 67.77256775]
[73.50731659 63.06149292]
[67.22994995 49.43817902]
[60.95259094 35.81486130]
[54.67523193 22.19154549]
[38.19556046 20.84532738]
[24.72068596 11.42602158]
[17.87413597 -3.41788793]
[19.43860245 -19.59528923]
[28.89282417 -32.69987488]
[22.41332817 -46.22821808]
[15.93383217 -59.75656509]
[9.45433617 -73.28491211]
[2.97484040 -86.81325531]
[-9.96456146 -95.91723633]
[-8.48412418 -110.73808289]
[-14.96361923 -124.26643372]
[-30.39340591 -134.31646729]
[-28.36316299 -151.74761963]
[-35.04335785 -165.17799377]
[-49.23707199 -160.26202393]
[-63.94290543 -157.20150757]
[-78.91938019 -156.04670715]
[-93.92057037 -156.81660461]
[-108.70013428 -159.49855042]
[-123.01538086 -164.04847717]
[-136.63124084 -170.39170837]
[-149.32414246 -178.42405701]
[-160.88563538 -188.01364136]
[-171.12588501 -199.00299072]
[-179.87673950 -211.21163940]
[-186.99449158 -224.43910217]
[-192.36225891 -238.46820068]
[-195.89190674 -253.06852722]
[-197.52546692 -268.00036621]
[-197.23611450 -283.01852417]
[-195.02861023 -297.87634277]
[-190.93920898 -312.32989502]
[-185.03504944 -326.14181519]
[-177.41308594 -339.08529663]
[-168.19847107 -350.94781494]
[-157.54252625 -361.53457642]
[-145.62023926 -370.67172241]
[-132.62736511 -378.20919800]
[-118.77726746 -384.02325439]
[-104.29738617 -388.01840210]
[-89.42548370 -390.12905884]
[-74.40577698 -390.32058716]
[-59.48489761 -388.58978271]
[-44.90785980 -384.96508789]
[-30.91403770 -379.50604248]
[-17.73321533 -372.30227661]
[-5.58183908 -363.47207642]
[5.34055662 -353.16043091]
[14.85461617 -341.53671265]
[22.80410957 -328.79174805]
[29.05850029 -315.13485718]
[33.51508331 -300.79028320]
[36.10067749 -285.99356079]
[36.77283096 -270.98767090]
[35.52049637 -256.01904297]
[32.36424637 -241.33345032]
[27.35590553 -227.17205811]
[20.57771492 -213.76742554]
[12.14098263 -201.33963013]
[2.18424320 -190.09278870]
[-9.12900257 -180.21154785]
[-21.61298180 -171.85818481]
[-14.93278694 -158.42781067]
[-3.56862879 -154.28263855]
[2.10666680 -143.14823914]
[-1.43527412 -130.74592590]
[5.04422188 -117.21758270]
[17.52016640 -109.08123779]
[16.50318527 -93.29275513]
[22.98268127 -79.76440430]
[29.46217728 -66.23606110]
[35.94167328 -52.70771408]
[42.42116928 -39.17937088]
[56.07747650 -39.02970123]
[68.39615631 -32.98165512]
[76.94805145 -22.16434860]
[80.01953125 -8.65345287]
[76.95558929 4.92698908]
[68.29854584 15.91418457]
[74.57590485 29.53750038]
[80.85327148 43.16081619]
[87.13063049 56.78413391]
[93.61012268 70.31247711]
[100.29032135 83.74285126]
[114.50398254 92.65060425]
[113.28118896 109.38025665]
[120.16059875 122.70968628]
[127.04000854 136.03910828]
[133.91941833 149.36854553]
[140.79884338 162.69796753]
[147.67825317 176.02740479]
[148.10745239 161.03353882]
[153.57460022 147.06535339]
[163.43740845 135.76379395]
[176.53718567 128.45657349]
[191.33502197 126.00212860]
[206.09245300 128.68881226]
[219.07579041 136.20097351]
[228.75978088 147.65612793]
[234.00675964 161.70849609]
[234.20030212 176.70724487]
[229.31767273 190.89033508]
[219.93247986 202.59153748]
[207.14729309 210.43623352]
[192.46411133 213.50279236]
[177.60787964 211.43099976]
[164.32389832 204.46423340]
[154.17192078 193.41961670]
[157.71157837 207.99598694]
[161.25125122 222.57235718]
[164.85551453 226.34812927]
[166.48780823 230.69425964]
[166.26112366 234.76411438]
[164.60804749 237.87855530]
[167.49331665 252.59843445]
[170.37858582 267.31832886]
[180.78575134 256.51596069]
[195.73362732 257.76531982]
[204.20321655 270.14538574]
[199.95103455 284.53005981]
[186.11164856 290.31549072]
[172.88790894 283.23822021]
[174.67037964 298.13192749]
[176.45283508 313.02563477]
[178.23530579 327.91937256]
[192.18295288 338.47787476]
[194.14045715 355.52145386]
[183.38171387 368.44769287]
[185.38572693 383.31323242]
[187.38973999 398.17874146]
[189.39375305 413.04428101]
[191.39776611 427.90982056]
[206.42149353 427.94714355]
[221.30018616 430.02996826]
[235.75668335 434.11941528]
[249.52165222 440.13934326]
[262.33865356 447.97756958]
[273.96893311 457.48809814]
[284.19583130 468.49377441]
[292.82879639 480.78952026]
[299.70703125 494.14630127]
[304.70236206 508.31527710]
[307.72177124 523.03253174]
[308.70901489 538.02380371]
[307.64562988 553.00994873]
[304.55151367 567.71160889]
[299.48425293 581.85504150]
[292.53826904 595.17675781]
[283.84292603 607.42846680]
[273.56027222 618.38201904]
[261.88183594 627.83337402]
[249.02516174 635.60638428]
[235.22979736 641.55633545]
[220.75271606 645.57226562]
[205.86361694 647.57946777]
[190.83990479 647.54046631]
[175.96142578 645.45605469]
[161.50538635 641.36505127]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 184]
[19 183]
[20 182]
[21 181]
[22 180]
[26 177]
[27 176]
[28 175]
[29 174]
[30 168]
[31 167]
[32 166]
[33 162]
[34 161]
[35 160]
[36 143]
[37 142]
[38 141]
[39 140]
[40 139]
[41 138]
[44 136]
[45 135]
[48 134]
[49 133]
[50 132]
[51 131]
[56 125]
[57 124]
[58 123]
[59 122]
[60 121]
[62 119]
[63 118]
[65 115]
[66 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
