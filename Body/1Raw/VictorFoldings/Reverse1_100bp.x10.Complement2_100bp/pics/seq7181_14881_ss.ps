%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[-15.25875473 676.34576416]
[-25.90474510 686.92578125]
[-37.40963745 696.56481934]
[-49.69054031 705.19348145]
[-62.65896225 712.74951172]
[-76.22146606 719.17852783]
[-90.28033447 724.43420410]
[-104.73427582 728.47863770]
[-119.47913361 731.28271484]
[-134.40867615 732.82623291]
[-149.41534424 733.09808350]
[-164.39100647 732.09631348]
[-179.22773743 729.82806396]
[-193.81867981 726.30975342]
[-208.05867004 721.56671143]
[-221.84512329 715.63311768]
[-235.07868958 708.55169678]
[-247.66403198 700.37347412]
[-259.51046753 691.15747070]
[-270.53265381 680.96990967]
[-280.65118408 669.88439941]
[-289.79309082 657.98065186]
[-297.89257812 645.34448242]
[-304.89123535 632.06695557]
[-310.73867798 618.24371338]
[-315.39273071 603.97442627]
[-318.81991577 589.36181641]
[-320.99548340 574.51116943]
[-321.90377808 559.52960205]
[-321.53826904 544.52490234]
[-319.90158081 529.60528564]
[-317.00552368 514.87823486]
[-312.87094116 500.44979858]
[-307.52761841 486.42401123]
[-301.01406860 472.90191650]
[-293.37719727 459.98089600]
[-284.67208862 447.75408936]
[-274.96139526 436.30960083]
[-264.31512451 425.72985840]
[-252.80999756 416.09109497]
[-240.52886963 407.46279907]
[-227.56025696 399.90707397]
[-213.99758911 393.47842407]
[-199.93858337 388.22311401]
[-185.48454285 384.17904663]
[-170.73960876 381.37533569]
[-155.81001282 379.83218384]
[-140.80334473 379.56072998]
[-125.82771301 380.56292725]
[-110.99102783 382.83154297]
[-96.40019226 386.35025024]
[-82.16032410 391.09365845]
[-68.37402344 397.02761841]
[-61.29692078 383.80209351]
[-54.21981430 370.57656860]
[-47.24136353 357.29870605]
[-40.36194992 343.96929932]
[-33.48253632 330.63986206]
[-26.60312462 317.31042480]
[-19.72371101 303.98098755]
[-12.84429932 290.65158081]
[-5.96488667 277.32214355]
[0.91452599 263.99270630]
[7.79393864 250.66328430]
[14.67335129 237.33384705]
[14.10038662 232.59246826]
[16.49985123 227.44081116]
[21.96119118 223.71450806]
[29.23442078 210.59580994]
[36.50765228 197.47711182]
[43.78087997 184.35842896]
[50.95624542 171.18594360]
[58.03335190 157.96041870]
[65.11045837 144.73489380]
[64.44391632 141.27252197]
[65.42128754 137.31527710]
[68.25690460 133.63932800]
[72.81034851 131.08721924]
[80.47094727 118.19088745]
[88.13154602 105.29456329]
[95.40476990 92.17586517]
[102.28418732 78.84643555]
[109.16359711 65.51701355]
[116.04300690 52.18758011]
[115.49655914 36.37581253]
[128.20922852 28.61453438]
[131.96553040 14.09247494]
[132.41212463 -0.90087467]
[132.85873413 -15.89422417]
[133.30534363 -30.88757515]
[133.64031982 -45.88383484]
[133.86364746 -60.88217163]
[134.08697510 -75.88050842]
[123.35938263 -87.17460632]
[123.79953003 -102.38186646]
[134.63282776 -112.53938293]
[134.85615540 -127.53771973]
[135.07948303 -142.53605652]
[135.30281067 -157.53439331]
[135.52613831 -172.53273010]
[122.05082703 -179.79045105]
[113.50147247 -192.48561096]
[111.84266663 -207.70097351]
[117.45558167 -221.94012451]
[129.05041504 -231.93104553]
[143.96275330 -235.37788391]
[158.76585388 -231.48858643]
[170.05807495 -221.15687561]
[175.24455261 -206.75689697]
[173.13345337 -191.59768677]
[164.20991516 -179.16270447]
[150.52447510 -172.30940247]
[150.30114746 -157.31106567]
[150.07781982 -142.31272888]
[149.85449219 -127.31439209]
[149.63116455 -112.31605530]
[160.15724182 -101.84049988]
[160.14440918 -86.62686920]
[149.08531189 -75.65718079]
[148.86198425 -60.65884399]
[148.63865662 -45.66050720]
[151.68222046 -38.92563248]
[148.29869080 -30.44096947]
[147.85208130 -15.44761848]
[147.40548706 -0.45426875]
[146.95887756 14.53908157]
[154.01695251 1.30338597]
[163.49026489 -10.32658291]
[175.02467346 -19.91603088]
[188.18893433 -27.10644913]
[202.49090576 -31.62901878]
[217.39588928 -33.31465912]
[232.34666443 -32.10035324]
[246.78427124 -28.03149986]
[260.16894531 -21.26021194]
[272.00030518 -12.03964138]
[281.83602905 -0.71450561]
[289.30838013 12.29179668]
[294.13803101 26.49301529]
[296.14437866 41.35822678]
[295.25244141 56.33168411]
[291.49557495 70.85359955]
[285.01422119 84.38105011]
[276.05068970 96.40830994]
[264.94006348 106.48572540]
[252.09776306 114.23654938]
[238.00389099 119.37101746]
[223.18534851 121.69715881]
[208.19615173 121.12802124]
[193.59667969 117.68487549]
[179.93272400 111.49645233]
[167.71514893 102.79410553]
[157.40071106 91.90317535]
[149.37501526 79.23084259]
[143.93811035 65.25085449]
[141.29325867 50.48586655]
[141.53865051 35.49394608]
[142.57716370 50.35230255]
[129.37243652 59.06699371]
[122.49302673 72.39642334]
[115.61361694 85.72585297]
[108.73419952 99.05528259]
[109.41149139 102.02694702]
[109.02249146 105.31072235]
[107.44950104 108.51215363]
[104.72222137 111.19882202]
[101.02787018 112.95516205]
[93.36727142 125.85148621]
[85.70667267 138.74781799]
[78.33598328 151.81199646]
[71.25888062 165.03752136]
[64.18177032 178.26304626]
[62.89210129 187.30598450]
[56.89957428 191.63165283]
[49.62634659 204.75035095]
[42.35311508 217.86904907]
[35.07988739 230.98773193]
[28.00278091 244.21325684]
[21.12336731 257.54269409]
[14.24395561 270.87213135]
[7.36454248 284.20153809]
[0.48513013 297.53097534]
[-6.39428234 310.86041260]
[-13.27369499 324.18984985]
[-20.15310669 337.51925659]
[-27.03252029 350.84869385]
[-33.91193390 364.17813110]
[-35.06682968 373.23925781]
[-40.99428558 377.65365601]
[-48.07139206 390.87918091]
[-55.14849854 404.10470581]
[-42.56293869 412.28259277]
[-30.71625710 421.49832153]
[-19.69381142 431.68554688]
[-9.57501698 442.77084351]
[-0.43278423 454.67437744]
[7.66701746 467.31030273]
[14.66602707 480.58764648]
[20.51381683 494.41070557]
[25.16825104 508.67990112]
[28.59579468 523.29241943]
[30.77175140 538.14300537]
[31.68044472 553.12457275]
[31.31532478 568.12927246]
[29.67902565 583.04895020]
[26.78333282 597.77606201]
[22.64911461 612.20458984]
[17.30615425 626.23052979]
[10.79295254 639.75280762]
[3.15643620 652.67401123]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 191]
[54 190]
[55 189]
[56 187]
[57 186]
[58 185]
[59 184]
[60 183]
[61 182]
[62 181]
[63 180]
[64 179]
[65 178]
[68 177]
[69 176]
[70 175]
[71 174]
[72 172]
[73 171]
[74 170]
[78 169]
[79 168]
[80 167]
[81 162]
[82 161]
[83 160]
[84 159]
[86 157]
[87 126]
[88 125]
[89 124]
[90 123]
[91 121]
[92 120]
[93 119]
[96 116]
[97 115]
[98 114]
[99 113]
[100 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
