%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[50.07067490 582.33288574]
[37.45001602 590.52026367]
[23.53972244 596.24902344]
[8.81357765 599.32397461]
[-6.22685146 599.64038086]
[-21.06929398 597.18750000]
[-35.20822144 592.04888916]
[-48.16207123 584.39959717]
[-59.48963165 574.50000000]
[-68.80509949 562.68743896]
[-75.79119110 549.36419678]
[-80.20995331 534.98400879]
[-81.91089630 520.03674316]
[-80.83608246 505.03143311]
[-77.02211761 490.47915649]
[-70.59890747 476.87561035]
[-61.78522491 464.68405151]
[-50.88125610 454.31979370]
[-38.25838852 446.13580322]
[-24.34655190 440.41079712]
[-9.61957932 437.33981323]
[5.42093468 437.02743530]
[7.86666203 422.22817993]
[10.31238937 407.42889404]
[12.75811672 392.62963867]
[0.61538649 401.43612671]
[-14.35553455 400.50256348]
[-25.31014252 390.25576782]
[-27.24013901 375.38046265]
[-19.26315308 362.67739868]
[-5.02615881 357.95425415]
[8.96188450 363.37042236]
[16.30613708 376.45147705]
[20.27823448 361.98696899]
[24.25032997 347.52243042]
[28.22242546 333.05789185]
[20.65503311 320.28018188]
[24.47725105 305.55450439]
[37.93100739 297.70376587]
[41.90310287 283.23925781]
[37.81227493 268.91744995]
[48.92774200 257.65878296]
[44.83691406 243.33697510]
[55.95237732 232.07833862]
[51.86154938 217.75651550]
[62.97701645 206.49787903]
[66.94911194 192.03335571]
[70.92121124 177.56883240]
[74.89330292 163.10430908]
[78.86540222 148.63978577]
[82.83749390 134.17526245]
[86.80959320 119.71073914]
[90.78169250 105.24621582]
[94.10395050 90.61875153]
[96.76974487 75.85753632]
[99.43553925 61.09632111]
[97.82276917 57.06482697]
[97.59925079 53.12597275]
[98.56526184 49.70512009]
[100.40347290 47.11907959]
[102.72449493 45.54714203]
[106.26416779 30.97076416]
[109.80384064 16.39439011]
[113.34350586 1.81801414]
[116.88317871 -12.75836086]
[105.05574799 -3.53275228]
[90.12821960 -2.06008267]
[76.72604370 -8.79667568]
[69.00202942 -21.65512276]
[69.34955597 -36.65109634]
[77.66093445 -49.13793182]
[91.36079407 -55.24644470]
[106.20407867 -53.08384323]
[117.59144592 -43.32024002]
[121.99438477 -28.98073196]
[127.44974518 -42.95352936]
[132.90510559 -56.92632675]
[133.11105347 -66.05843353]
[138.54710388 -71.06555939]
[144.20988464 -84.95558167]
[149.87266541 -98.84561157]
[155.53546143 -112.73563385]
[153.58053589 -128.43559265]
[165.55007935 -137.30009460]
[171.21286011 -151.19012451]
[159.69427490 -160.97682190]
[151.77532959 -173.82722473]
[148.22085571 -188.47625732]
[149.36672974 -203.48632812]
[155.08818054 -217.38839722]
[164.81324768 -228.82579041]
[177.57992554 -236.68656921]
[192.13136292 -240.21160889]
[207.03952026 -239.06791687]
[212.70230103 -252.95794678]
[218.36508179 -266.84796143]
[224.02787781 -280.73800659]
[229.69065857 -294.62802124]
[216.77418518 -302.31060791]
[205.14706421 -311.83258057]
[195.06906128 -322.98120117]
[186.76531982 -335.50738525]
[180.42135620 -349.13131714]
[176.17887878 -363.54864502]
[174.13269043 -378.43725586]
[174.32847595 -393.46453857]
[176.76188660 -408.29476929]
[181.37854004 -422.59667969]
[188.07531738 -436.05072021]
[196.70259094 -448.35629272]
[207.06764221 -459.23855591]
[218.93888855 -468.45434570]
[232.05114746 -475.79782104]
[246.11146545 -481.10488892]
[260.80575562 -484.25698853]
[275.80572510 -485.18371582]
[290.77624512 -483.86434937]
[305.38290405 -480.32839966]
[319.29937744 -474.65484619]
[332.21478271 -466.97039795]
[343.84054565 -457.44677734]
[353.91696167 -446.29675293]
[362.21890259 -433.76937866]
[368.56094360 -420.14453125]
[372.80136108 -405.72659302]
[374.84542847 -390.83770752]
[374.64749146 -375.81042480]
[372.21197510 -360.98052979]
[367.59329224 -346.67929077]
[360.89459229 -333.22622681]
[352.26556396 -320.92184448]
[341.89895630 -310.04107666]
[330.02639771 -300.82696533]
[316.91311646 -293.48538208]
[302.85202026 -288.18032837]
[288.15728760 -285.03030396]
[273.15719604 -284.10571289]
[258.18685913 -285.42718506]
[243.58068848 -288.96524048]
[237.91790771 -275.07519531]
[232.25511169 -261.18518066]
[226.59233093 -247.29515076]
[220.92953491 -233.40513611]
[232.38787842 -223.79954529]
[240.32696533 -211.10540771]
[243.95863342 -196.55923462]
[242.91500854 -181.58251953]
[237.28573608 -167.64286804]
[227.61044312 -156.11013794]
[214.82702637 -148.12185669]
[200.18074036 -144.47100830]
[185.10289001 -145.52734375]
[179.44010925 -131.63731384]
[181.80006409 -116.93085480]
[169.42549133 -107.07285309]
[163.76269531 -93.18282318]
[158.09991455 -79.29279327]
[152.43711853 -65.40277100]
[146.87789917 -51.47097015]
[141.42254639 -37.49817276]
[135.96719360 -23.52537537]
[131.45956421 -9.21868896]
[127.91988373 5.35768652]
[124.38021088 19.93406105]
[120.84053802 34.51043701]
[117.30086517 49.08681107]
[114.19675446 63.76211548]
[111.53096008 78.52333069]
[108.86516571 93.28454590]
[121.77333069 85.64391327]
[136.33715820 89.23489380]
[144.21380615 102.00039673]
[140.89120483 116.62777710]
[128.27265930 124.73780060]
[113.58666992 121.68468475]
[105.24621582 109.21830750]
[101.27411652 123.68283081]
[97.30202484 138.14735413]
[93.32992554 152.61187744]
[89.35782623 167.07640076]
[85.38573456 181.54092407]
[81.41363525 196.00544739]
[77.44154358 210.46997070]
[81.24826050 225.82638550]
[70.41690063 236.05043030]
[74.22361755 251.40684509]
[63.39226532 261.63088989]
[67.19898224 276.98730469]
[56.36762619 287.21133423]
[52.39553070 301.67587280]
[59.95304489 315.29650879]
[55.71871948 329.90899658]
[42.68695068 337.02999878]
[38.71485519 351.49453735]
[34.74275970 365.95904541]
[30.77066231 380.42358398]
[27.55738831 395.07534790]
[25.11166000 409.87463379]
[22.66593361 424.67388916]
[20.22020531 439.47317505]
[34.36051941 444.60797119]
[47.31642914 452.25381470]
[58.64665985 462.15032959]
[67.96530914 473.96038818]
[74.95498657 487.28173828]
[79.37763214 501.66073608]
[81.08260345 516.60754395]
[80.01183319 531.61315918]
[76.20178986 546.16644287]
[69.78224945 559.77172852]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 200]
[23 199]
[24 198]
[25 197]
[33 196]
[34 195]
[35 194]
[36 193]
[39 190]
[40 189]
[42 187]
[44 185]
[46 183]
[47 182]
[48 181]
[49 180]
[50 179]
[51 178]
[52 177]
[53 176]
[54 169]
[55 168]
[56 167]
[61 166]
[62 165]
[63 164]
[64 163]
[65 162]
[75 161]
[76 160]
[77 159]
[79 158]
[80 157]
[81 156]
[82 155]
[84 153]
[85 152]
[94 143]
[95 142]
[96 141]
[97 140]
[98 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
