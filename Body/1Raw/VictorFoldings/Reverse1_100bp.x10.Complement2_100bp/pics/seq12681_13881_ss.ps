%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGAUGCGGGAGAGUCGGCUACUUGUCAACCUUAUCCAACAAUCGCCAUUGAUUCUAAUCAUACCAUUAAUCCUUCUACUCAUCUAUAAACUUCUUGACxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[78.74070740 721.27728271]
[63.73271179 721.63348389]
[48.76206970 720.51690674]
[33.97296143 717.93835449]
[19.50781822 713.92254639]
[5.50594711 708.50830078]
[-7.89779949 701.74761963]
[-20.57433510 693.70574951]
[-32.40157318 684.46002197]
[-43.26560593 674.09954834]
[-53.06180954 662.72406006]
[-61.69583511 650.44317627]
[-69.08452606 637.37512207]
[-75.15673828 623.64581299]
[-79.85397339 609.38732910]
[-83.13100433 594.73718262]
[-84.95626831 579.83630371]
[-85.31218719 564.82830811]
[-84.19532776 549.85772705]
[-81.61645508 535.06866455]
[-77.60039520 520.60357666]
[-72.18583679 506.60183716]
[-65.42491913 493.19821167]
[-57.38276291 480.52185059]
[-48.13681030 468.69479370]
[-37.77611160 457.83096313]
[-26.40045166 448.03497314]
[-14.11938286 439.40121460]
[-1.05118394 432.01275635]
[12.67828941 425.94082642]
[26.93680954 421.24389648]
[41.58705902 417.96713257]
[56.48794174 416.14218140]
[71.49594879 415.78656006]
[72.61159515 400.82812500]
[73.72724915 385.86965942]
[74.84289551 370.91119385]
[75.95854187 355.95275879]
[76.73986816 340.97311401]
[77.18647003 325.97976685]
[77.63307953 310.98641968]
[78.07968140 295.99307251]
[75.51481628 291.96435547]
[75.45352173 286.28164673]
[78.76941681 280.56182861]
[79.66223145 265.58840942]
[80.55504608 250.61500549]
[81.44786072 235.64160156]
[82.34067535 220.66819763]
[83.23348999 205.69479370]
[80.78971100 201.59150696]
[80.89764404 195.90948486]
[84.38236237 190.29090881]
[85.72059631 175.35072327]
[79.14962006 161.98391724]
[88.08725739 148.92906189]
[89.42549133 133.98887634]
[90.76372528 119.04869843]
[81.53729248 110.35810089]
[78.92923737 97.95440674]
[83.87445831 86.28399658]
[94.60025024 79.53040314]
[96.16077423 64.61180115]
[89.90116119 50.08156204]
[98.92055511 38.22830200]
[100.48107910 23.30969810]
[102.04159546 8.39109230]
[103.60211945 -6.52751207]
[90.48357391 0.74597609]
[76.56010437 -4.83408546]
[72.09558105 -19.15428352]
[80.38108826 -31.65830040]
[95.30885315 -33.12863922]
[105.87413025 -22.48298264]
[108.53993225 -37.24419785]
[111.20572662 -52.00541687]
[100.64594269 -63.22134781]
[98.73756409 -78.32801819]
[106.00451660 -91.50585938]
[119.47640228 -97.80237579]
[122.14220428 -112.56359100]
[124.80799866 -127.32481384]
[127.47379303 -142.08602905]
[130.13958740 -156.84724426]
[122.06306458 -163.81814575]
[117.64244843 -173.43923950]
[117.61447144 -183.94650269]
[121.91717529 -193.44386292]
[129.71311951 -200.24523926]
[139.55151367 -203.17388916]
[142.87377930 -217.80134583]
[146.19602966 -232.42880249]
[149.51829529 -247.05625916]
[152.84054565 -261.68371582]
[156.16281128 -276.31118774]
[159.48507690 -290.93865967]
[162.80732727 -305.56610107]
[149.02871704 -311.61145020]
[136.64334106 -320.15539551]
[126.09893799 -330.88909912]
[117.77666473 -343.42449951]
[111.97737885 -357.30847168]
[108.91072083 -372.03912354]
[108.68753815 -387.08395386]
[111.31590271 -401.89907837]
[116.70081329 -415.94897461]
[124.64759064 -428.72570801]
[134.86897278 -439.76745605]
[146.99545288 -448.67501831]
[160.58868408 -455.12640381]
[175.15727234 -458.88842773]
[190.17457581 -459.82507324]
[205.09771729 -457.90246582]
[219.38723755 -453.19015503]
[232.52658081 -445.85842896]
[244.04078674 -436.17236328]
[253.51358032 -424.48208618]
[260.60256958 -411.21020508]
[265.05148315 -396.83648682]
[266.69946289 -381.88055420]
[265.48696899 -366.88299561]
[261.45782471 -352.38601685]
[254.75769043 -338.91366577]
[245.62875366 -326.95291138]
[234.40103149 -316.93621826]
[221.48039246 -309.22558594]
[207.33390808 -304.09982300]
[192.47296143 -301.74420166]
[177.43478394 -302.24383545]
[174.11253357 -287.61639404]
[170.79026794 -272.98892212]
[167.46801758 -258.36148071]
[164.14575195 -243.73400879]
[160.82348633 -229.10655212]
[157.50123596 -214.47908020]
[154.17897034 -199.85162354]
[165.74282837 -184.17388916]
[161.99055481 -164.74647522]
[144.90080261 -154.18144226]
[142.23501587 -139.42022705]
[139.56921387 -124.65901184]
[136.90341187 -109.89779663]
[134.23762512 -95.13658142]
[144.65611267 -84.52558899]
[146.85466003 -69.63833618]
[139.78280640 -56.15344620]
[125.96694183 -49.33962250]
[123.30114746 -34.57840347]
[120.63535309 -19.81718636]
[118.52072906 -4.96698904]
[116.96020508 9.95161533]
[115.39968109 24.87022018]
[113.83915710 39.78882599]
[120.21039581 53.25198364]
[111.07937622 66.17232513]
[109.51885223 81.09092712]
[120.20149994 93.67062378]
[118.60679626 110.09696960]
[105.70391083 120.38693237]
[104.36567688 135.32711792]
[103.02744293 150.26730347]
[109.50270081 164.70272827]
[100.66078186 176.68896484]
[99.32254791 191.62915039]
[98.20690155 206.58760071]
[97.31408691 221.56100464]
[96.42126465 236.53440857]
[95.52845001 251.50782776]
[94.63563538 266.48123169]
[93.74282074 281.45462036]
[93.07303619 296.43966675]
[92.62642670 311.43301392]
[92.17982483 326.42636108]
[91.73321533 341.41970825]
[94.20895386 346.01513672]
[94.63210297 350.63836670]
[93.33577728 354.50289917]
[90.91699982 357.06838989]
[89.80134583 372.02685547]
[88.68569946 386.98532104]
[87.57005310 401.94375610]
[86.45440674 416.90222168]
[101.24361420 419.48019409]
[115.70892334 423.49539185]
[129.71101379 428.90911865]
[143.11502075 435.66921997]
[155.79188538 443.71063232]
[167.61949158 452.95587158]
[178.48393250 463.31591797]
[188.28059387 474.69097900]
[196.91511536 486.97152710]
[204.30432129 500.03927612]
[210.37709045 513.76837158]
[215.07489014 528.02661133]
[218.35250854 542.67669678]
[220.17837524 557.57745361]
[220.53488159 572.58544922]
[219.41862488 587.55609131]
[216.84034729 602.34527588]
[212.82485962 616.81048584]
[207.41087341 630.81250000]
[200.65048218 644.21636963]
[192.60884094 656.89306641]
[183.36335754 668.72045898]
[173.00309753 679.58471680]
[161.62782288 689.38116455]
[149.34710693 698.01544189]
[136.27919006 705.40435791]
[122.54996490 711.47686768]
[108.29163361 716.17437744]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 182]
[35 181]
[36 180]
[37 179]
[38 178]
[39 174]
[40 173]
[41 172]
[42 171]
[45 170]
[46 169]
[47 168]
[48 167]
[49 166]
[50 165]
[53 164]
[54 163]
[56 161]
[57 160]
[58 159]
[62 156]
[63 155]
[65 153]
[66 152]
[67 151]
[68 150]
[74 149]
[75 148]
[76 147]
[80 143]
[81 142]
[82 141]
[83 140]
[84 139]
[90 136]
[91 135]
[92 134]
[93 133]
[94 132]
[95 131]
[96 130]
[97 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
