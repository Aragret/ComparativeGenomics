%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[263.55960083 598.26776123]
[275.83538818 589.57183838]
[269.55801392 575.94854736]
[263.28067017 562.32519531]
[257.00329590 548.70190430]
[250.72595215 535.07855225]
[244.44859314 521.45526123]
[238.25167847 535.11535645]
[224.25975037 540.52148438]
[210.48803711 534.57678223]
[204.82557678 520.68658447]
[210.51609802 506.80792236]
[224.29981995 500.89105225]
[238.28009033 506.32479858]
[233.24316406 492.19577026]
[228.20625305 478.06674194]
[223.16934204 463.93771362]
[218.13241577 449.80868530]
[213.09550476 435.67965698]
[207.84878540 421.62716675]
[202.39343262 407.65438843]
[196.93807983 393.68157959]
[191.48271179 379.70877075]
[177.20120239 381.54263306]
[162.88711548 379.89813232]
[149.37586975 374.86663818]
[137.45706177 366.73736572]
[127.82841492 355.98074341]
[121.05490875 343.22109985]
[117.53561401 329.20050049]
[117.48017883 314.73562622]
[120.89638519 300.67007446]
[127.58937836 287.82534790]
[137.17282104 276.95263672]
[149.09117126 268.68914795]
[143.84445190 254.63668823]
[138.59773254 240.58421326]
[133.35101318 226.53173828]
[128.10429382 212.47926331]
[122.85757446 198.42680359]
[120.36620331 197.14179993]
[118.23371887 194.79252625]
[116.86804962 191.51071167]
[116.62192535 187.57319641]
[117.74420166 183.37861633]
[113.34320831 169.03877258]
[108.94220734 154.69892883]
[104.54120636 140.35908508]
[100.14021301 126.01923370]
[84.66876984 121.02317047]
[75.18303680 107.81911469]
[75.38648224 91.56227875]
[85.19968414 78.59974670]
[80.58567810 64.32701111]
[75.97166443 50.05427933]
[62.18077087 42.81211090]
[57.70483017 28.27179909]
[64.69412231 15.16892242]
[60.08011246 0.89618891]
[55.46610260 -13.37654495]
[50.85209274 -27.64927864]
[39.24499130 -38.40036011]
[42.69223785 -52.89055252]
[37.55027771 -66.98169708]
[31.88748932 -80.87171936]
[19.51290703 -90.72972870]
[21.87287331 -105.43618011]
[16.21008682 -119.32621002]
[10.54729939 -133.21623230]
[4.88451338 -147.10626221]
[-0.77827340 -160.99629211]
[-15.35761929 -157.35989380]
[-30.30609131 -155.83543396]
[-45.31935883 -156.45397949]
[-60.09176636 -159.20292664]
[-74.32257080 -164.02629089]
[-87.72205353 -170.82589722]
[-100.01741791 -179.46331787]
[-110.95833588 -189.76268005]
[-120.32207489 -201.51432800]
[-127.91799927 -214.47900391]
[-133.59146118 -228.39276123]
[-137.22695923 -242.97232056]
[-138.75048828 -257.92089844]
[-138.13101196 -272.93411255]
[-135.38116455 -287.70635986]
[-130.55690002 -301.93685913]
[-123.75646973 -315.33593750]
[-115.11829376 -327.63076782]
[-104.81825256 -338.57104492]
[-93.06602478 -347.93405151]
[-80.10088348 -355.52917480]
[-66.18677521 -361.20178223]
[-51.60698318 -364.83636475]
[-36.65832138 -366.35897827]
[-21.64513206 -365.73855591]
[-6.87306261 -362.98779297]
[7.35714626 -358.16265869]
[20.75578499 -351.36138916]
[33.05007553 -342.72247314]
[43.98972321 -332.42175293]
[53.35200500 -320.66894531]
[60.94632339 -307.70333862]
[66.61806488 -293.78887939]
[70.25176239 -279.20886230]
[71.77343750 -264.26010132]
[71.15210724 -249.24694824]
[68.40042114 -234.47503662]
[63.57440948 -220.24513245]
[56.77231216 -206.84690857]
[48.13261795 -194.55316162]
[37.83121872 -183.61415100]
[26.07783508 -174.25259399]
[13.11175346 -166.65907288]
[18.77453995 -152.76904297]
[24.43732643 -138.87902832]
[30.10011292 -124.98899841]
[35.76290131 -111.09896851]
[47.73244095 -102.23447418]
[45.77751541 -86.53450775]
[51.44030380 -72.64447784]
[59.57527161 -85.24695587]
[74.48432922 -86.89619446]
[85.17707825 -76.37644196]
[83.77121735 -61.44246674]
[71.30309296 -53.10304260]
[56.96496964 -57.50456238]
[68.24205017 -47.77436447]
[65.12482452 -32.26328659]
[69.73883820 -17.99055290]
[74.35284424 -3.71782041]
[78.96685791 10.55491257]
[92.30359650 17.08690453]
[97.18618011 31.49575806]
[90.24440002 45.44026947]
[94.85840607 59.71300507]
[99.47241974 73.98574066]
[112.33864594 77.09196472]
[122.01207733 86.12596893]
[125.98957062 98.75007629]
[123.24189758 111.69761658]
[114.48005676 121.61823273]
[118.88105774 135.95808411]
[123.28205109 150.29792786]
[127.68305206 164.63777161]
[132.08404541 178.97763062]
[136.91004944 193.18008423]
[142.15676880 207.23255920]
[147.40348816 221.28501892]
[152.65020752 235.33749390]
[157.89692688 249.38996887]
[163.14363098 263.44244385]
[178.71966553 261.89920044]
[194.15440369 264.43191528]
[208.40013123 270.86282349]
[220.49134827 280.74978638]
[229.61022949 293.41656494]
[235.14187622 307.99926758]
[236.71588135 323.50503540]
[234.23101807 338.87985229]
[227.86178589 353.08007812]
[218.04615784 365.14321899]
[205.45552063 374.25341797]
[210.91087341 388.22622681]
[216.36622620 402.19900513]
[221.82157898 416.17181396]
[226.73612976 420.59436035]
[228.42581177 426.02038574]
[227.22453308 430.64273071]
[232.26144409 444.77175903]
[237.29837036 458.90078735]
[242.33528137 473.02981567]
[247.37219238 487.15884399]
[252.40911865 501.28787231]
[258.07189941 515.17791748]
[264.34927368 528.80120850]
[270.62661743 542.42456055]
[276.90399170 556.04785156]
[283.18133545 569.67114258]
[289.45870972 583.29449463]
[304.04501343 579.61285400]
[319.05947876 578.67443848]
[333.99069214 580.51110840]
[348.33010864 585.06036377]
[361.58935547 592.16717529]
[373.31680298 601.58959961]
[383.11303711 613.00659180]
[390.64437866 626.02941895]
[395.65432739 640.21447754]
[397.97222900 655.07855225]
[397.51916504 670.11547852]
[394.31057739 684.81311035]
[388.45568848 698.67077637]
[380.15396118 711.21655273]
[369.68814087 722.02307129]
[357.41470337 730.72229004]
[343.75164795 737.01800537]
[329.16433716 740.69567871]
[314.14962769 741.63006592]
[299.21890259 739.78936768]
[284.88070679 735.23626709]
[271.62338257 728.12585449]
[259.89846802 718.70031738]
[250.10531616 707.28063965]
[242.57748413 694.25579834]
[237.57136536 680.06939697]
[235.25744629 665.20465088]
[235.71456909 650.16784668]
[238.92713928 635.47113037]
[244.78575134 621.61499023]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 180]
[3 179]
[4 178]
[5 177]
[6 176]
[7 175]
[14 174]
[15 173]
[16 172]
[17 171]
[18 170]
[19 169]
[20 166]
[21 165]
[22 164]
[23 163]
[35 152]
[36 151]
[37 150]
[38 149]
[39 148]
[40 147]
[45 146]
[46 145]
[47 144]
[48 143]
[49 142]
[53 137]
[54 136]
[55 135]
[58 132]
[59 131]
[60 130]
[61 129]
[63 127]
[64 121]
[65 120]
[67 118]
[68 117]
[69 116]
[70 115]
[71 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
