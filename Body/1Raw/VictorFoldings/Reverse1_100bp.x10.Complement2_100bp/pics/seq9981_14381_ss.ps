%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUUUAAUUCCGCUUCAAAUAAUGAGAAAAAACUUACAACAGUUUUGAUCAAUUAACCUUCAAUUGCCAUGAUAAAUAUGAUUUUCUCAUUCUGGGAGxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[193.58592224 610.98901367]
[183.52986145 599.85223389]
[174.20039368 588.10003662]
[165.63507080 575.77984619]
[157.86840820 562.94116211]
[150.93165588 549.63574219]
[144.85275269 535.91717529]
[139.65617371 521.84063721]
[135.36285400 507.46292114]
[131.99008179 492.84179688]
[129.55142212 478.03619385]
[128.05670166 463.10574341]
[127.51194000 448.11056519]
[127.91934204 433.11102295]
[129.27725220 418.16751099]
[131.58020020 403.34020996]
[134.81893921 388.68881226]
[138.98039246 374.27233887]
[144.04782104 360.14883423]
[150.00082397 346.37515259]
[156.81542969 333.00674438]
[164.46418762 320.09750366]
[172.91630554 307.69934082]
[182.13775635 295.86221313]
[192.09138489 284.63378906]
[202.73713684 274.05926514]
[214.03213501 264.18121338]
[204.89334106 252.28659058]
[195.75453186 240.39196777]
[186.61572266 228.49732971]
[173.73114014 228.62739563]
[162.96347046 221.20179749]
[158.37106323 208.74707031]
[161.84068298 195.73260498]
[152.87998962 183.70323181]
[143.91929626 171.67385864]
[134.95860291 159.64447021]
[125.99790192 147.61509705]
[117.03720856 135.58572388]
[108.07650757 123.55634308]
[99.11581421 111.52696228]
[99.73328400 126.51425171]
[93.39863586 140.11102295]
[81.52703094 149.27972412]
[66.77062988 151.97204590]
[52.42604446 147.58651733]
[41.69789124 137.10287476]
[36.98287201 122.86318970]
[39.33432770 108.04864502]
[48.22694016 95.96884918]
[61.67407608 89.32246399]
[76.67161560 89.59429932]
[89.86907959 96.72364044]
[82.98966217 83.39421082]
[76.11025238 70.06478882]
[69.23084259 56.73535538]
[62.35142899 43.40592575]
[49.14670181 34.69123840]
[50.18521118 19.83288002]
[43.30580139 6.50345182]
[37.95782471 2.61620164]
[35.71281052 -2.60461473]
[36.42668915 -7.32684088]
[29.94719315 -20.85518646]
[23.46769714 -34.38353348]
[16.98820114 -47.91187668]
[10.50870514 -61.44022369]
[4.02920961 -74.96856689]
[-2.45028615 -88.49691772]
[-16.78734207 -83.99918365]
[-31.61857414 -81.58768463]
[-46.64204025 -81.31152344]
[-61.55187607 -83.17632294]
[-76.04454803 -87.14411163]
[-89.82498932 -93.13410950]
[-102.61265564 -101.02437592]
[-114.14720917 -110.65427399]
[-124.19381714 -121.82774353]
[-132.54794312 -134.31730652]
[-139.03950500 -147.86871338]
[-143.53636169 -162.20603943]
[-145.94692993 -177.03741455]
[-146.22216797 -192.06089783]
[-144.35644531 -206.97062683]
[-140.38775635 -221.46304321]
[-134.39691162 -235.24311829]
[-126.50585175 -248.03030396]
[-116.87524414 -259.56427002]
[-105.70114899 -269.61016846]
[-93.21106720 -277.96353149]
[-79.65926361 -284.45425415]
[-65.32165527 -288.95022583]
[-50.49012375 -291.35986328]
[-35.46662521 -291.63418579]
[-20.55701828 -289.76754761]
[-6.06484127 -285.79794312]
[7.71486139 -279.80624390]
[20.50155258 -271.91439819]
[32.03491211 -262.28308105]
[42.08013916 -251.10836792]
[50.43272018 -238.61775208]
[56.92260742 -225.06556702]
[61.41768265 -210.72767639]
[63.82642365 -195.89599609]
[64.09979248 -180.87246704]
[62.23222733 -165.96298218]
[58.26174927 -151.47105408]
[52.26918793 -137.69172668]
[44.37654877 -124.90551758]
[34.74451447 -113.37274933]
[23.56917953 -103.32821655]
[11.07805920 -94.97640991]
[17.55755424 -81.44806671]
[24.03705025 -67.91971588]
[30.51654625 -54.39137268]
[36.99604416 -40.86302948]
[43.47554016 -27.33468246]
[49.95503616 -13.80633640]
[56.63522720 -0.37596083]
[63.51464081 12.95346832]
[76.22730255 20.71474838]
[75.68085480 36.52651596]
[82.56027222 49.85594177]
[89.43968201 63.18537140]
[96.31909180 76.51480103]
[103.19850922 89.84423065]
[111.14519501 102.56626892]
[120.10588837 114.59564209]
[129.06658936 126.62502289]
[138.02728271 138.65440369]
[146.98797607 150.68377686]
[155.94866943 162.71315002]
[164.90936279 174.74253845]
[173.87005615 186.77191162]
[191.22290039 188.98509216]
[201.40570068 202.79182434]
[198.51036072 219.35852051]
[207.64916992 231.25315857]
[216.78796387 243.14779663]
[225.92677307 255.04241943]
[238.38121033 246.67346191]
[251.34135437 239.11125183]
[264.75503540 232.38626099]
[278.56826782 226.52555847]
[292.72537231 221.55274963]
[307.16937256 217.48785400]
[321.84210205 214.34724426]
[336.68447876 212.14355469]
[351.63674927 210.88568115]
[366.63867188 210.57865906]
[381.62988281 211.22373962]
[396.55001831 212.81834412]
[411.33895874 215.35601807]
[425.93716431 218.82656860]
[440.28585815 223.21600342]
[454.32730103 228.50665283]
[468.00488281 234.67721558]
[481.26358032 241.70285034]
[494.04998779 249.55525208]
[506.31262207 258.20281982]
[518.00207520 267.61071777]
[529.07135010 277.74108887]
[539.47583008 288.55310059]
[549.17358398 300.00323486]
[558.12561035 312.04541016]
[566.29583740 324.63110352]
[573.65142822 337.70965576]
[580.16265869 351.22836304]
[585.80340576 365.13287354]
[590.55090332 379.36712646]
[594.38598633 393.87380981]
[597.29333496 408.59454346]
[599.26116943 423.47003174]
[600.28161621 438.44036865]
[600.35046387 453.44531250]
[599.46752930 468.42437744]
[597.63635254 483.31732178]
[594.86425781 498.06411743]
[591.16247559 512.60540771]
[586.54583740 526.88262939]
[581.03302002 540.83831787]
[574.64611816 554.41625977]
[567.41094971 567.56176758]
[559.35662842 580.22192383]
[550.51550293 592.34576416]
[540.92327881 603.88446045]
[530.61846924 614.79156494]
[519.64270020 625.02307129]
[508.04006958 634.53790283]
[495.85736084 643.29766846]
[483.14355469 651.26715088]
[469.94992065 658.41418457]
[456.32955933 664.71008301]
[442.33731079 670.12939453]
[428.02947998 674.65039062]
[413.46374512 678.25482178]
[398.69873047 680.92810059]
[383.79388428 682.65960693]
[368.80923462 683.44232178]
[353.80511475 683.27301025]
[338.84191895 682.15246582]
[323.97991943 680.08514404]
[309.27899170 677.07934570]
[294.79827881 673.14721680]
[280.59613037 668.30456543]
[266.72967529 662.57092285]
[253.25482178 655.96936035]
[240.22579956 648.52648926]
[227.69505310 640.27215576]
[215.71307373 631.23974609]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 140]
[28 139]
[29 138]
[30 137]
[34 134]
[35 133]
[36 132]
[37 131]
[38 130]
[39 129]
[40 128]
[41 127]
[53 126]
[54 125]
[55 124]
[56 123]
[57 122]
[59 120]
[60 119]
[63 118]
[64 117]
[65 116]
[66 115]
[67 114]
[68 113]
[69 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
