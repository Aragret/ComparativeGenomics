%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUACAAACCCAGACUCAAAUAUAUAGUGUCACUCUUAAGAUACUACCUGGUACAUUGCUUGUUACGAUGUCCCUACUUAUAAUACCUCUUCAUCAGAxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[81.04014587 521.81622314]
[67.47700500 528.62835693]
[52.36853790 530.07708740]
[37.75804520 525.96636963]
[25.62146950 516.85217285]
[17.60018730 503.96719360]
[14.77901173 489.05392456]
[17.53948021 474.12930298]
[25.50826454 461.21176147]
[37.60765076 452.04827881]
[52.20129776 447.87817383]
[53.53953171 432.93798828]
[54.87776566 417.99780273]
[56.21599960 403.05761719]
[57.55423355 388.11743164]
[48.02484131 399.70147705]
[34.23971939 405.61508179]
[19.27850723 404.53707886]
[6.48357296 396.70828247]
[-1.28666127 383.87771606]
[-2.29630542 368.91174316]
[3.68019772 355.15377808]
[15.30768204 345.67742920]
[29.98853683 342.59967041]
[44.44302368 346.60815430]
[55.44197083 356.80731201]
[60.52819061 370.91870117]
[64.28449249 356.39663696]
[68.04079437 341.87457275]
[66.67246246 334.61169434]
[71.96263123 327.16510010]
[75.93473053 312.70056152]
[79.47440338 298.12420654]
[73.14373779 281.75686646]
[85.56516266 268.16311646]
[88.45043182 253.44322205]
[91.33570099 238.72332764]
[94.22097778 224.00343323]
[97.10624695 209.28355408]
[98.11051178 194.31719971]
[89.62938690 182.07302856]
[96.53157043 167.83679199]
[95.63875580 152.86338806]
[94.74593353 137.88998413]
[93.85311890 122.91657257]
[92.96030426 107.94316864]
[91.17784119 93.04945374]
[88.51204681 78.28823853]
[85.84624481 63.52701950]
[83.18045044 48.76580048]
[68.62907410 39.05617905]
[65.66059875 22.15934563]
[75.63088226 8.61563396]
[72.74561310 -6.10425758]
[69.86033630 -20.82414818]
[66.97506714 -35.54404068]
[64.08979034 -50.26393127]
[61.20452118 -64.98382568]
[58.10041046 -79.65912628]
[54.77815247 -94.28658295]
[51.45589066 -108.91404724]
[40.85423660 -120.65779114]
[45.58048630 -134.78265381]
[42.25822830 -149.41011047]
[38.05410004 -154.51274109]
[37.18801498 -160.12940979]
[39.06168747 -164.52239990]
[36.17641449 -179.24229431]
[33.29114151 -193.96218872]
[30.40586853 -208.68208313]
[27.52059555 -223.40196228]
[22.79893303 -231.22142029]
[24.70365906 -238.36241150]
[22.03786469 -253.12362671]
[19.37206841 -267.88485718]
[16.70627213 -282.64605713]
[10.15024757 -269.15463257]
[-2.21749163 -260.66705322]
[-17.16404724 -259.40194702]
[-30.78242493 -265.69003296]
[-39.51281357 -277.88757324]
[-41.07311249 -292.80621338]
[-35.05545807 -306.54620361]
[-23.03285789 -315.51599121]
[-8.14798450 -317.37088013]
[5.70828772 -311.62597656]
[14.91361713 -299.78384399]
[14.46701145 -314.77719116]
[14.02040577 -329.77056885]
[11.60826683 -333.38104248]
[10.57447624 -337.18835449]
[10.81166553 -340.73507690]
[12.07492256 -343.64553833]
[14.02040577 -345.66375732]
[14.46701145 -360.65710449]
[14.91361713 -375.65048218]
[15.36022282 -390.64382935]
[1.11210036 -395.72772217]
[-10.86641598 -404.96734619]
[-19.40179253 -417.45742798]
[-23.65781975 -431.97436523]
[-23.21753693 -447.09591675]
[-18.12407684 -461.34063721]
[-8.87644577 -473.31295776]
[3.61936855 -481.83996582]
[18.13915253 -486.08627319]
[33.26040649 -485.63583374]
[47.50170135 -480.53283691]
[59.46782684 -471.27719116]
[67.98645782 -458.77566528]
[72.22302246 -444.25305176]
[71.76247406 -429.13208008]
[66.64993286 -414.89422607]
[57.38626480 -402.93429565]
[44.87903595 -394.42404175]
[30.35357285 -390.19720459]
[29.90696716 -375.20385742]
[29.46036148 -360.21051025]
[29.01375580 -345.21716309]
[29.01375580 -330.21716309]
[29.46036148 -315.22381592]
[29.90696716 -300.23046875]
[31.46749115 -285.31185913]
[34.13328552 -270.55062866]
[36.79907990 -255.78942871]
[39.46487808 -241.02819824]
[42.24048615 -226.28724670]
[45.12575912 -211.56735229]
[48.01103210 -196.84745789]
[50.89630508 -182.12756348]
[53.78157806 -167.40768433]
[56.88568878 -152.73237610]
[60.20794678 -138.10491943]
[70.57196808 -127.40742493]
[66.08335114 -112.23630524]
[69.40560913 -97.60884857]
[72.72786713 -82.98138428]
[76.21988678 -79.72333527]
[77.70229340 -74.23703766]
[75.92440796 -67.86909485]
[78.80968475 -53.14920425]
[81.69495392 -38.42931366]
[84.58023071 -23.70942116]
[87.46549988 -8.98952961]
[90.35077667 5.73036146]
[101.94502258 11.35201073]
[108.27897644 22.79592133]
[106.84416962 35.99258041]
[97.94167328 46.10000610]
[100.60746765 60.86122131]
[103.27326202 75.62243652]
[105.93905640 90.38365936]
[113.65029144 77.51753998]
[127.40573120 71.53524780]
[142.07493591 74.66802216]
[152.18666077 85.74741364]
[153.96948242 100.64109039]
[146.75845337 113.79407501]
[133.24310303 120.30062866]
[118.46432495 117.73397064]
[107.93370819 107.05035400]
[108.82652283 122.02375793]
[109.71934509 136.99716187]
[110.61215973 151.97056580]
[111.50497437 166.94396973]
[120.04995728 180.25915527]
[113.08391571 193.42439270]
[119.40526581 179.82142639]
[129.75340271 168.96250916]
[143.03627014 161.99360657]
[157.85208130 159.65016174]
[172.63729858 162.17948914]
[185.83158875 169.31465149]
[196.04254150 180.30265808]
[202.19256592 193.98393250]
[203.63264465 208.91464233]
[200.21078491 223.51911926]
[192.28811646 236.25611877]
[180.70072937 245.78149414]
[166.67147827 251.08996582]
[151.68089294 251.62135315]
[137.31097412 247.31958008]
[125.07820129 238.63859558]
[116.27354431 226.49453735]
[111.82614136 212.16882324]
[108.94087219 226.88871765]
[106.05559540 241.60861206]
[103.17032623 256.32849121]
[100.28504944 271.04840088]
[106.81992340 282.16854858]
[104.11373901 294.36938477]
[94.14970398 301.22830200]
[95.64172363 305.30603027]
[95.74787140 309.24978638]
[94.68043518 312.64035034]
[92.76605225 315.17053223]
[90.39925385 316.67266846]
[86.42715454 331.13717651]
[82.56285095 345.63088989]
[78.80654907 360.15295410]
[75.05024719 374.67498779]
[72.49441528 389.45565796]
[71.15618134 404.39584351]
[69.81794739 419.33602905]
[68.47971344 434.27621460]
[67.14147949 449.21640015]
[80.76170349 455.91372681]
[91.03994751 467.08160400]
[96.58617401 481.20974731]
[96.65030670 496.38735962]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 206]
[12 205]
[13 204]
[14 203]
[15 202]
[27 201]
[28 200]
[29 199]
[31 198]
[32 197]
[33 192]
[35 189]
[36 188]
[37 187]
[38 186]
[39 185]
[40 167]
[42 165]
[43 164]
[44 163]
[45 162]
[46 161]
[47 152]
[48 151]
[49 150]
[50 149]
[53 145]
[54 144]
[55 143]
[56 142]
[57 141]
[58 140]
[59 137]
[60 136]
[61 135]
[63 133]
[64 132]
[67 131]
[68 130]
[69 129]
[70 128]
[71 127]
[73 126]
[74 125]
[75 124]
[76 123]
[87 122]
[88 121]
[89 120]
[94 119]
[95 118]
[96 117]
[97 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
