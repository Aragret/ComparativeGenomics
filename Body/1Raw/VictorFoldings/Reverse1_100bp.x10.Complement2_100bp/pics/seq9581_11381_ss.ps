%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[121.77559662 506.50363159]
[120.59692383 491.51089478]
[122.03980255 476.54129028]
[126.06038666 462.04968262]
[132.53649902 448.47653198]
[141.27133179 436.23422241]
[151.99945068 425.69485474]
[164.39485168 417.17864990]
[178.08081055 410.94445801]
[174.32452393 396.42239380]
[170.56822205 381.90032959]
[156.60693359 380.47833252]
[143.94267273 374.36318970]
[134.10552979 364.27111816]
[128.29174805 351.40014648]
[127.21827698 337.28793335]
[131.03437805 323.62811279]
[139.30131531 312.06701660]
[151.04263306 304.00521851]
[147.50296021 289.42883301]
[143.96328735 274.85247803]
[140.42361450 260.27609253]
[136.88394165 245.69972229]
[132.80427551 231.26516724]
[128.19026184 216.99243164]
[123.14169312 211.59486389]
[123.61551666 202.47273254]
[112.48455811 192.57571411]
[115.83237457 177.11276245]
[111.43137360 162.77291870]
[107.03037262 148.43307495]
[102.62937927 134.09323120]
[91.49842072 124.19620514]
[94.84622955 108.73326111]
[89.65863037 102.56387329]
[90.48816681 94.14706421]
[86.30116272 79.74327850]
[82.11415100 65.33950043]
[77.92713928 50.93571472]
[75.28257751 65.70075226]
[69.84595490 79.68084717]
[61.82050705 92.35334778]
[51.50628281 103.24447632]
[39.28887939 111.94706726]
[25.62505722 118.13576508]
[11.02564716 121.57920074]
[-3.96354032 122.14863586]
[-18.78212357 119.82278442]
[-32.87609863 114.68860626]
[-45.71855545 106.93803406]
[-56.82936478 96.86083984]
[-65.79314423 84.83375549]
[-72.27477264 71.30643463]
[-76.03193665 56.78459549]
[-76.92416382 41.81115341]
[-74.91809845 26.94590378]
[-70.08874512 12.74458885]
[-62.61664581 -0.26186213]
[-52.78115463 -11.58719349]
[-40.94997787 -20.80799866]
[-27.56543350 -27.57955360]
[-13.12791061 -31.64869499]
[1.82283354 -32.86330032]
[16.72785378 -31.17795372]
[31.02991295 -26.65566826]
[44.19432068 -19.46551132]
[55.72891617 -9.87629318]
[65.20246887 1.75348699]
[72.26080322 14.98904133]
[76.63883209 29.32957077]
[79.08455658 14.53029919]
[72.20262146 -2.54952526]
[83.85836792 -15.66861153]
[86.08348846 -30.50265503]
[88.30860138 -45.33670044]
[82.70404053 -60.13195038]
[92.24371338 -71.57064819]
[94.35833740 -86.42084503]
[96.36235046 -101.28637695]
[98.36636353 -116.15190125]
[100.37037659 -131.01742554]
[102.37438965 -145.88296509]
[104.37841034 -160.74848938]
[105.49405670 -175.70693970]
[105.71738434 -190.70527649]
[105.94071198 -205.70361328]
[106.16403961 -220.70195007]
[106.38736725 -235.70028687]
[91.60570526 -238.45899963]
[77.50294495 -243.67628479]
[64.48484802 -251.20205688]
[52.92597961 -260.81976318]
[43.15890121 -272.25271606]
[35.46464157 -285.17193604]
[30.06457329 -299.20574951]
[27.11406898 -313.95031738]
[26.69801903 -328.98144531]
[28.82839584 -343.86666870]
[33.44390488 -358.17767334]
[40.41174316 -371.50271606]
[49.53144073 -383.45843506]
[60.54059982 -393.70083618]
[73.12246704 -401.93518066]
[86.91503143 -407.92459106]
[101.52146149 -411.49673462]
[116.52149963 -412.54882812]
[131.48356628 -411.05059814]
[145.97715759 -407.04516602]
[159.58529663 -400.64773560]
[171.91641235 -392.04241943]
[182.61573792 -381.47680664]
[191.37542725 -369.25485229]
[197.94343567 -355.72824097]
[202.13079834 -341.28616333]
[203.81704712 -326.34411621]
[202.95365906 -311.33203125]
[199.56546021 -296.68185425]
[193.74993896 -282.81506348]
[185.67443848 -270.13064575]
[175.57128906 -258.99356079]
[163.73118591 -249.72425842]
[150.49479675 -242.58943176]
[136.24295044 -237.79434204]
[121.38570404 -235.47695923]
[121.16237640 -220.47862244]
[120.93904877 -205.48028564]
[120.71572113 -190.48194885]
[120.49239349 -175.48361206]
[130.53443909 -186.62620544]
[145.18371582 -189.85090637]
[158.97640991 -183.95498657]
[166.76817322 -171.13748169]
[165.65287781 -156.17900085]
[156.04650879 -144.65869141]
[141.53198242 -140.87333679]
[127.52288818 -146.23478699]
[119.24393463 -158.74447632]
[117.23992157 -143.87895203]
[115.23590851 -129.01341248]
[113.23189545 -114.14788818]
[111.22788239 -99.28236389]
[109.22386932 -84.41683197]
[111.44555664 -77.36801147]
[107.07775879 -69.34553528]
[112.84147644 -55.61131287]
[103.14264679 -43.11158371]
[100.91752625 -28.27753830]
[98.69241333 -13.44349480]
[105.62791443 -3.53262091]
[103.89553070 8.84407616]
[93.88382721 16.97602654]
[91.43810272 31.77529716]
[92.33091736 46.74870300]
[96.51792908 61.15248489]
[100.70494080 75.55626678]
[104.89195251 89.96005249]
[109.18607330 104.33226013]
[120.63182831 115.25496674]
[116.96922302 129.69223022]
[121.37022400 144.03207397]
[125.77121735 158.37191772]
[130.17222595 172.71177673]
[141.61796570 183.63447571]
[137.95536804 198.07173157]
[142.46299744 212.37841797]
[147.07701111 226.65115356]
[156.12677002 214.68864441]
[171.11720276 214.15286255]
[180.99790955 225.43876648]
[178.48519897 240.22680664]
[165.43135071 247.61579895]
[151.46031189 242.16004944]
[154.99998474 256.73641968]
[158.53965759 271.31280518]
[162.07933044 285.88916016]
[165.61900330 300.46554565]
[181.52133179 302.83709717]
[195.26306152 311.10968018]
[204.75521851 323.99121094]
[208.56816101 339.49172974]
[206.14672852 355.23056030]
[197.89096069 368.80227661]
[185.09027100 378.14404297]
[188.84657288 392.66610718]
[192.60287476 407.18817139]
[207.59519958 406.00439453]
[222.56530762 407.44216919]
[237.05825806 411.45782471]
[250.63363647 417.92932129]
[262.87890625 426.65997314]
[273.42193604 437.38452148]
[281.94232178 449.77700806]
[288.18118286 463.46087646]
[291.94891357 478.02023315]
[293.13098145 493.01269531]
[291.69149780 507.98263550]
[287.67419434 522.47515869]
[281.20117188 536.04974365]
[272.46911621 548.29406738]
[261.74337769 558.83587646]
[249.34991455 567.35485840]
[235.66535950 573.59216309]
[221.10556030 577.35821533]
[206.11296082 578.53863525]
[191.14318848 577.09741211]
[176.65115356 573.07849121]
[163.07723999 566.60388184]
[150.83395386 557.87048340]
[140.29335022 547.14355469]
[131.77575684 534.74908447]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 185]
[10 184]
[11 183]
[19 176]
[20 175]
[21 174]
[22 173]
[23 172]
[24 166]
[25 165]
[27 164]
[29 162]
[30 161]
[31 160]
[32 159]
[34 157]
[36 156]
[37 155]
[38 154]
[39 153]
[70 152]
[71 151]
[73 148]
[74 147]
[75 146]
[77 144]
[78 142]
[79 141]
[80 140]
[81 139]
[82 138]
[83 137]
[84 128]
[85 127]
[86 126]
[87 125]
[88 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
