%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCAGUGAGUAUCCGGUCUGAAUCCCGAUCCUACUACUAAUUAUUCUCCCUACUGUAUUGAUAAUCACCGUCCAAUCAACAAACAUCCCGAGUACCAUxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[-74.23234558 594.35241699]
[-72.20630646 609.25219727]
[-72.72766113 624.28002930]
[-75.78139496 639.00354004]
[-81.27965546 652.99914551]
[-89.06423950 665.86419678]
[-98.91117859 677.22839355]
[-110.53714752 686.76489258]
[-123.60765076 694.19927979]
[-137.74662781 699.31762695]
[-152.54725647 701.97271729]
[-167.58369446 702.08813477]
[-182.42332458 699.66052246]
[-196.63919067 694.75976562]
[-209.82225037 687.52685547]
[-221.59320068 678.16986084]
[-231.61338806 666.95812988]
[-239.59451294 654.21411133]
[-245.30691528 640.30450439]
[-248.58625793 625.62957764]
[-249.33818054 610.61151123]
[-247.54106140 595.68237305]
[-243.24659729 581.27178955]
[-236.57833862 567.79431152]
[-227.72816467 555.63775635]
[-216.95069885 545.15185547]
[-204.55603027 536.63830566]
[-190.90078735 530.34210205]
[-176.37783813 526.44433594]
[-161.40507507 525.05725098]
[-146.41325378 526.22064209]
[-131.83375549 529.90112305]
[-125.75991821 516.18585205]
[-119.68608093 502.47058105]
[-113.61224365 488.75534058]
[-107.53841400 475.04006958]
[-101.46457672 461.32479858]
[-95.39074707 447.60952759]
[-89.31690979 433.89425659]
[-83.24308014 420.17898560]
[-90.56504822 413.54287720]
[-95.95854950 405.24252319]
[-99.05852509 395.82376099]
[-99.65109253 385.90866089]
[-97.68827057 376.15435791]
[-93.29173279 367.20962524]
[-86.74531555 359.67160034]
[-78.47669983 354.04602051]
[-69.02946472 350.71319580]
[-59.02737427 349.90243530]
[-49.13319016 351.67614746]
[-41.85996246 338.55743408]
[-34.58673477 325.43875122]
[-38.92514801 311.23614502]
[-31.73594093 297.82830811]
[-16.80953407 293.37408447]
[-9.53630543 280.25540161]
[-2.26307607 267.13668823]
[5.01015329 254.01800537]
[12.28338337 240.89930725]
[19.55661201 227.78062439]
[18.96095276 212.89793396]
[32.41929245 204.58026123]
[39.69252014 191.46156311]
[39.09685898 176.57887268]
[52.55519867 168.26119995]
[59.82843018 155.14250183]
[60.32247162 147.76838684]
[67.30886078 141.88381958]
[74.77660370 128.87486267]
[82.24434662 115.86590576]
[89.71208191 102.85695648]
[95.78591919 89.14168549]
[100.39992523 74.86895752]
[105.01393890 60.59622192]
[109.62794495 46.32348633]
[112.29373932 31.56227112]
[112.96352386 16.57723236]
[113.63330841 1.59219337]
[106.51993561 -12.53970337]
[114.81782532 -24.90879250]
[115.48760986 -39.89382935]
[116.15739441 -54.87886810]
[108.04524231 -64.90662384]
[108.91160583 -77.37390137]
[117.74794006 -85.63500214]
[118.64075470 -100.60841370]
[110.67880249 -110.75582886]
[111.73068237 -123.20883179]
[120.68903351 -131.33746338]
[121.80467987 -146.29591370]
[122.92033386 -161.25436401]
[124.03598022 -176.21281433]
[117.34651947 -190.55024719]
[126.00900269 -202.66679382]
[127.12464905 -217.62524414]
[128.24029541 -232.58369446]
[114.04274750 -237.71517944]
[101.75681305 -246.48777771]
[92.29418945 -258.25048828]
[86.35707092 -272.13043213]
[84.38602448 -287.09765625]
[86.52731323 -302.04147339]
[92.62204742 -315.85293579]
[102.21794891 -327.50717163]
[114.60295105 -336.13934326]
[128.85798645 -341.10888672]
[143.92524719 -342.04705811]
[158.68664551 -338.88418579]
[172.04678345 -331.85501099]
[183.01425171 -321.48114014]
[190.77519226 -308.53237915]
[194.75367737 -293.96960449]
[194.65449524 -278.87347412]
[190.48500061 -264.36425781]
[182.55459595 -251.51858521]
[171.45178223 -241.28970337]
[158.00042725 -234.43667603]
[143.19874573 -231.46804810]
[142.08309937 -216.50959778]
[140.96745300 -201.55113220]
[147.73670959 -188.28364563]
[138.99443054 -175.09716797]
[137.87878418 -160.13871765]
[136.76313782 -145.18026733]
[135.64749146 -130.22180176]
[144.10809326 -114.84698486]
[133.61416626 -99.71559906]
[132.72134399 -84.74218750]
[141.40991211 -69.49504089]
[131.14244080 -54.20908356]
[130.47265625 -39.22404480]
[129.80285645 -24.23900604]
[136.96414185 -11.17894077]
[128.61834717 2.26197839]
[127.94856262 17.24701691]
[127.27877808 32.23205566]
[134.86868286 19.29399681]
[146.04335022 9.28766251]
[159.73770142 3.16679239]
[174.64645386 1.51478899]
[189.34860229 4.48911047]
[202.44285583 11.80626392]
[212.68112183 22.76882553]
[219.08758545 36.33191299]
[221.05158997 51.20277786]
[218.38597107 65.96402740]
[211.34478760 79.20870972]
[200.59913635 89.67443085]
[187.17326355 96.36365509]
[172.34681702 98.63882446]
[157.53295898 96.28306580]
[144.14364624 89.52092743]
[133.45507812 78.99693298]
[126.48601532 65.71415710]
[123.90068054 50.93749619]
[119.28666687 65.21022797]
[114.67266083 79.48296356]
[110.05865479 93.75569916]
[121.28299713 83.80511475]
[135.43557739 78.83477783]
[150.41696167 79.58199310]
[164.00473022 85.93593597]
[174.18322754 96.95401764]
[179.44253540 111.00178528]
[179.00245667 125.99533081]
[172.92828369 139.71044922]
[162.12107849 150.11257935]
[148.18403625 155.65864563]
[133.18463135 155.52589417]
[119.34792328 149.73405457]
[108.72651672 139.14227295]
[102.89602661 125.32180023]
[102.72103882 110.32469940]
[95.25329590 123.33364868]
[87.78555298 136.34260559]
[80.31781006 149.35154724]
[72.94712067 162.41574097]
[65.67389679 175.53443909]
[65.74932861 191.35545349]
[52.81121445 198.73478699]
[45.53798676 211.85348511]
[45.61341476 227.67451477]
[32.67530823 235.05384827]
[25.40207672 248.17254639]
[18.12884712 261.29122925]
[10.85561848 274.40994263]
[3.58238864 287.52862549]
[-3.69084096 300.64730835]
[0.43906158 315.66668701]
[-7.12390804 328.86730957]
[-21.46803856 332.71197510]
[-28.74126816 345.83065796]
[-36.01449966 358.94937134]
[-24.45895767 375.90112305]
[-23.11373520 396.29598999]
[-32.27381134 414.48205566]
[-49.33365631 425.45898438]
[-69.52780914 426.25283813]
[-75.60164642 439.96810913]
[-81.67547607 453.68334961]
[-87.74931335 467.39862061]
[-93.82314301 481.11389160]
[-99.89698029 494.82916260]
[-105.97081757 508.54443359]
[-112.04464722 522.25970459]
[-118.11848450 535.97497559]
[-105.59461975 544.29724121]
[-94.65748596 554.61651611]
[-85.62178040 566.63586426]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 207]
[33 206]
[34 205]
[35 204]
[36 203]
[37 202]
[38 201]
[39 200]
[40 199]
[51 194]
[52 193]
[53 192]
[56 189]
[57 188]
[58 187]
[59 186]
[60 185]
[61 184]
[63 182]
[64 181]
[66 179]
[67 178]
[69 177]
[70 176]
[71 175]
[72 174]
[73 159]
[74 158]
[75 157]
[76 156]
[77 137]
[78 136]
[79 135]
[81 133]
[82 132]
[83 131]
[86 129]
[87 128]
[90 126]
[91 125]
[92 124]
[93 123]
[95 121]
[96 120]
[97 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
