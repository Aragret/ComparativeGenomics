%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxUGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[68.00126648 668.26940918]
[58.57641220 656.43609619]
[53.27143478 642.26879883]
[52.60606384 627.15551758]
[56.64548492 612.57678223]
[64.99395752 599.96099854]
[76.83358002 590.54406738]
[91.00443268 585.24859619]
[90.33464813 570.26354980]
[89.66486359 555.27850342]
[88.99507904 540.29345703]
[86.65375519 537.65710449]
[85.47306824 533.75567627]
[86.03367615 529.14709473]
[88.64514160 524.62744141]
[88.64514160 509.62744141]
[88.64514160 494.62744141]
[88.53347015 479.62786865]
[88.31014252 464.62951660]
[88.08681488 449.63119507]
[79.62817383 440.98376465]
[79.31936646 428.49023438]
[87.87119293 418.83468628]
[87.87119293 403.83468628]
[87.87119293 388.83468628]
[87.87119293 373.83468628]
[84.72769165 367.14590454]
[87.98451996 358.61178589]
[88.20784760 343.61346436]
[88.31951904 328.61386108]
[88.31951904 313.61386108]
[85.17601776 306.92504883]
[88.43284607 298.39096069]
[88.65617371 283.39260864]
[75.79940796 275.87136841]
[68.38423920 262.83792114]
[68.48915863 247.74302673]
[76.18611908 234.64135742]
[89.49434662 227.10224915]
[89.71767426 212.10391235]
[89.94100189 197.10557556]
[90.16432953 182.10723877]
[87.12076569 175.37236023]
[90.50429535 166.88769531]
[90.95089722 151.89434814]
[83.59597015 138.94235229]
[91.74072266 125.37866974]
[92.18732452 110.38531494]
[92.18732452 95.38531494]
[84.04257202 81.82163239]
[91.39750671 68.86963654]
[90.95089722 53.87628174]
[90.50429535 38.88293457]
[90.05768585 23.88958359]
[89.61108398 8.89623356]
[88.94129944 -6.08880520]
[88.04848480 -21.06221008]
[87.15566254 -36.03561783]
[86.26284790 -51.00902176]
[77.07736206 -39.15040588]
[62.70850372 -34.84506989]
[48.51550293 -39.69880295]
[39.79199600 -51.90128326]
[39.79164124 -66.90128326]
[48.51456451 -79.10417175]
[62.70733643 -83.95858002]
[77.07640076 -79.65393066]
[86.26284790 -67.79465485]
[87.15566254 -82.76805878]
[88.04848480 -97.74146271]
[88.94129944 -112.71487427]
[89.61108398 -127.69991302]
[90.05768585 -142.69325256]
[81.79713440 -152.59912109]
[82.47778320 -165.07792664]
[91.19013977 -173.46966553]
[91.85992432 -188.45471191]
[89.11682892 -197.16752625]
[92.65288544 -203.65737915]
[93.54570007 -218.63078308]
[94.43851471 -233.60418701]
[95.33132935 -248.57759094]
[92.71825409 -257.33029175]
[96.35054016 -263.76675415]
[97.46619415 -278.72521973]
[94.98372650 -287.51583862]
[98.71143341 -293.89755249]
[100.04966736 -308.83773804]
[101.05393219 -323.80407715]
[101.72371674 -338.78912354]
[102.39350128 -353.77413940]
[99.65039825 -362.48696899]
[103.18645477 -368.97680664]
[104.07926941 -383.95022583]
[104.97208405 -398.92361450]
[105.86489868 -413.89703369]
[106.75772095 -428.87045288]
[107.65053558 -443.84384155]
[93.56009674 -449.34973145]
[81.86198425 -458.94189453]
[73.70227051 -471.68057251]
[69.88035583 -486.31777954]
[70.77066803 -501.41952515]
[76.28598785 -515.50628662]
[85.88597870 -527.19793701]
[98.63013458 -535.34912109]
[113.26990509 -539.16125488]
[128.37104797 -538.26080322]
[142.45410156 -532.73602295]
[154.13934326 -523.12823486]
[162.28198242 -510.37860107]
[166.08427429 -495.73629761]
[165.17372131 -480.63574219]
[159.63952637 -466.55639648]
[150.02388000 -454.87759399]
[137.26881409 -446.74353027]
[122.62393951 -442.95101929]
[121.73112488 -427.97763062]
[120.83831024 -413.00421143]
[119.94548798 -398.03082275]
[119.05267334 -383.05740356]
[118.15985870 -368.08401489]
[117.37854004 -353.10437012]
[116.70875549 -338.11932373]
[116.03897095 -323.13427734]
[118.13574982 -320.29953003]
[118.96366119 -316.30834961]
[117.99412537 -311.76815796]
[114.98985291 -307.49948120]
[113.65161896 -292.55929565]
[112.42464447 -277.60958862]
[111.30899811 -262.65112305]
[110.30473328 -247.68478394]
[109.41191864 -232.71136475]
[108.51910400 -217.73796082]
[107.62628937 -202.76455688]
[106.84496307 -187.78492737]
[106.17517853 -172.79988098]
[115.08979797 -157.68377686]
[105.05104065 -142.24665833]
[104.60443115 -127.25330353]
[107.16930389 -123.22459412]
[107.23059082 -117.54187775]
[103.91470337 -111.82205200]
[103.02188873 -96.84864807]
[102.12907410 -81.87524414]
[101.23625183 -66.90184021]
[101.23625183 -51.90183640]
[102.12907410 -36.92843246]
[103.02188873 -21.95502663]
[103.91470337 -6.98162079]
[106.82876587 -3.19780564]
[107.39680481 2.45678210]
[104.60443115 8.44962788]
[105.05104065 23.44297791]
[105.49764252 38.43632889]
[105.94425201 53.42967606]
[106.39085388 68.42302704]
[114.50366211 80.91429138]
[107.18067932 94.93871307]
[109.21392822 97.20925903]
[110.46595764 100.26980591]
[110.64257050 103.83242798]
[109.56006622 107.50453949]
[107.18067932 110.83192444]
[106.73406982 125.82527161]
[114.05706024 139.84970093]
[105.94425201 152.34095764]
[105.49764252 167.33430481]
[105.16266632 182.33056641]
[104.93933868 197.32890320]
[104.71601105 212.32723999]
[104.49268341 227.32557678]
[117.57054901 235.25758362]
[124.87400818 248.58261108]
[124.52944946 263.67391968]
[116.72951508 276.48083496]
[103.65451050 283.61593628]
[103.43118286 298.61428833]
[103.31951904 313.61386108]
[103.31951904 328.61386108]
[106.44892883 337.19552612]
[103.20618439 343.83679199]
[102.98285675 358.83511353]
[102.87119293 373.83468628]
[102.87119293 388.83468628]
[102.87119293 403.83468628]
[102.87119293 418.83468628]
[112.44587708 434.56387329]
[103.08515167 449.40786743]
[103.30847931 464.40618896]
[103.53180695 479.40454102]
[106.78863525 487.93862915]
[103.64514160 494.62744141]
[103.64514160 509.62744141]
[103.64514160 524.62744141]
[103.98011780 539.62371826]
[104.64990234 554.60876465]
[105.31968689 569.59375000]
[105.98947144 584.57879639]
[120.57625580 588.58892822]
[133.20880127 596.91198730]
[142.64950562 608.73266602]
[147.97346497 622.89288330]
[148.65908813 638.00531006]
[144.63920593 652.58935547]
[136.30766296 665.21636963]
[124.48065948 674.64910889]
[110.31691742 679.96362305]
[95.20404816 680.63909912]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 200]
[9 199]
[10 198]
[11 197]
[15 196]
[16 195]
[17 194]
[18 192]
[19 191]
[20 190]
[23 188]
[24 187]
[25 186]
[26 185]
[28 184]
[29 183]
[30 181]
[31 180]
[33 179]
[34 178]
[39 173]
[40 172]
[41 171]
[42 170]
[44 169]
[45 168]
[47 166]
[48 165]
[49 160]
[51 158]
[52 157]
[53 156]
[54 155]
[55 154]
[56 151]
[57 150]
[58 149]
[59 148]
[68 147]
[69 146]
[70 145]
[71 144]
[72 141]
[73 140]
[76 138]
[77 137]
[79 136]
[80 135]
[81 134]
[82 133]
[84 132]
[85 131]
[87 130]
[88 129]
[89 125]
[90 124]
[91 123]
[93 122]
[94 121]
[95 120]
[96 119]
[97 118]
[98 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
