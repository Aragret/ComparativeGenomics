%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAAAACCCAACUCCACUACUACCUCCACCUCUAAACCACGACACUUUAACAAAAUCCAUUAUCGAAAAGAUCAGUCCAAUCCAGAUCCUCCUCAUCCCxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[153.84112549 509.88336182]
[152.50288391 494.94317627]
[151.16465759 480.00299072]
[139.12023926 474.24328613]
[131.43295288 463.19567871]
[130.19854736 449.68472290]
[135.84593201 437.22976685]
[146.99743652 429.12823486]
[145.88179016 414.16979980]
[144.76614380 399.21133423]
[143.65049744 384.25286865]
[142.53485107 369.29443359]
[140.11605835 366.72891235]
[138.81974792 362.86437988]
[139.24288940 358.24114990]
[141.71862793 353.64575195]
[141.27201843 338.65240479]
[132.68556213 330.13186646]
[132.19078064 317.64431763]
[140.59790039 307.86254883]
[140.37457275 292.86419678]
[140.15124512 277.86587524]
[139.92791748 262.86752319]
[137.59243774 248.05046082]
[133.19143677 233.71061707]
[128.79043579 219.37075806]
[124.38944244 205.03091431]
[119.98844147 190.69107056]
[115.58744812 176.35122681]
[111.18644714 162.01138306]
[106.78544617 147.67152405]
[102.38445282 133.33168030]
[97.98345184 118.99183655]
[85.23217010 112.11063385]
[80.98094177 98.25879669]
[87.67669678 85.40916443]
[83.27570343 71.06931305]
[78.87470245 56.72946930]
[74.15457153 42.49147797]
[62.23251343 32.09075165]
[65.24680328 17.50434303]
[60.20988464 3.37531400]
[55.17296982 -10.75371552]
[47.80228043 -23.81790161]
[38.31338120 -35.43516541]
[28.82448196 -47.05242920]
[19.33558464 -58.66968918]
[9.84668636 -70.28695679]
[9.34114742 -55.29547501]
[0.21162646 -43.39371872]
[-14.13679123 -39.02074051]
[-28.35249901 -43.80755997]
[-37.13339233 -55.96880722]
[-37.20441437 -70.96863556]
[-28.53907204 -83.21248627]
[-14.36932850 -88.13370514]
[0.02082124 -83.89613342]
[-8.02035141 -96.55866241]
[-16.06152534 -109.22118378]
[-24.10269737 -121.88371277]
[-32.14387131 -134.54623413]
[-40.18504333 -147.20875549]
[-53.77320862 -140.80836487]
[-68.05642700 -136.16154480]
[-82.80942535 -133.34156799]
[-97.79953003 -132.39292908]
[-112.79032898 -133.33058167]
[-127.54539490 -136.13972473]
[-141.83201599 -140.77607727]
[-155.42488098 -147.16648865]
[-168.10958862 -155.21020508]
[-179.68611145 -164.78033447]
[-189.97184753 -175.72596741]
[-198.80458069 -187.87446594]
[-206.04501343 -201.03422546]
[-211.57896423 -214.99769592]
[-215.31912231 -229.54467773]
[-217.20652771 -244.44570923]
[-217.21141052 -259.46582031]
[-215.33367920 -274.36807251]
[-211.60296631 -288.91744995]
[-206.07809448 -302.88452148]
[-198.84620667 -316.04898071]
[-190.02134705 -328.20321655]
[-179.74272156 -339.15551758]
[-168.17242432 -348.73318481]
[-155.49293518 -356.78512573]
[-141.90423584 -363.18438721]
[-127.62062836 -367.82998657]
[-112.86739349 -370.64871216]
[-97.87720490 -371.59609985]
[-82.88648224 -370.65719604]
[-68.13166046 -367.84680176]
[-53.84542465 -363.20925903]
[-40.25310516 -356.81768799]
[-27.56906891 -348.77291870]
[-15.99335957 -339.20181274]
[-5.70854282 -328.25531006]
[3.12317443 -316.10607910]
[10.36250305 -302.94570923]
[15.89526939 -288.98175049]
[19.63421249 -274.43447876]
[21.52036285 -259.53326416]
[21.52397728 -244.51318359]
[19.64499474 -229.61108398]
[15.91304970 -215.06199646]
[10.38700294 -201.09539795]
[3.15400624 -187.93154907]
[-5.67186499 -175.77806091]
[-15.95141411 -164.82661438]
[-27.52251816 -155.24993896]
[-19.48134613 -142.58740234]
[-11.44017220 -129.92488098]
[-3.39899969 -117.26235962]
[4.64217329 -104.59983063]
[12.68334579 -91.93730927]
[21.46394920 -79.77585602]
[30.95284843 -68.15859222]
[40.44174576 -56.54132462]
[49.93064499 -44.92406082]
[59.41954422 -33.30680084]
[56.09977341 -47.93482590]
[56.47105408 -62.93022919]
[60.51068497 -77.37603760]
[67.97164154 -90.38888550]
[78.39767456 -101.17302704]
[91.15123749 -109.06901550]
[105.45244598 -113.59400177]
[120.42677307 -114.47128296]
[135.15852356 -111.64720917]
[148.74685669 -105.29447937]
[160.36083984 -95.80156708]
[169.29026794 -83.74896240]
[174.98912048 -69.87368774]
[177.10888672 -55.02422714]
[175.51994324 -40.10861969]
[170.31947327 -26.03897095]
[161.82546997 -13.67563820]
[150.55735779 -3.77464771]
[137.20417786 3.05855179]
[122.58248901 6.40610790]
[107.58640289 6.06331635]
[93.13294983 2.05113816]
[80.10594940 -5.38507938]
[69.30200195 -15.79063225]
[74.33891296 -1.66160226]
[79.37583160 12.46742725]
[90.93761444 21.85755157]
[88.28359985 37.45456314]
[91.29539490 39.28797913]
[93.56879425 42.67127991]
[94.38501740 47.24151611]
[93.21455383 52.32847214]
[97.61554718 66.66831970]
[102.01654816 81.00816345]
[114.76782990 87.88936615]
[119.01905823 101.74120331]
[112.32330322 114.59083557]
[116.72429657 128.93067932]
[121.12529755 143.27053833]
[125.52629089 157.61038208]
[129.92729187 171.95022583]
[134.32829285 186.29006958]
[138.72929382 200.62991333]
[143.13027954 214.96977234]
[147.53128052 229.30961609]
[151.93228149 243.64945984]
[154.63137817 228.89430237]
[161.50642395 215.56260681]
[171.96263123 204.80772400]
[185.09545898 197.56004333]
[199.76878357 194.44657898]
[214.71319580 195.73664856]
[228.63587952 201.31867981]
[240.33236694 210.70974731]
[248.79080200 223.09742737]
[253.27944946 237.41007996]
[253.40998840 252.40951538]
[249.17112732 266.79812622]
[240.92956543 279.33114624]
[229.39828491 288.92434692]
[215.57485962 294.74786377]
[200.65516663 296.29782104]
[185.92987061 293.44018555]
[172.67289734 286.42218018]
[162.03108215 275.85089111]
[154.92625427 262.64419556]
[155.14958191 277.64254761]
[155.37290955 292.64086914]
[155.59623718 307.63922119]
[165.40405273 323.22409058]
[156.26536560 338.20578003]
[156.71197510 353.19912720]
[157.49330139 368.17877197]
[158.60894775 383.13723755]
[159.72459412 398.09567261]
[160.84024048 413.05413818]
[161.95588684 428.01260376]
[176.46116638 436.71276855]
[182.85900879 452.19079590]
[178.81111145 468.27108765]
[166.10484314 478.66476440]
[167.44306946 493.60491943]
[168.78131104 508.54510498]
[181.71199036 517.33892822]
[185.91516113 532.40106201]
[179.40617371 546.61962891]
[165.25839233 553.28100586]
[150.15197754 549.23999023]
[141.21969604 536.40454102]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 204]
[2 203]
[3 202]
[8 198]
[9 197]
[10 196]
[11 195]
[12 194]
[16 193]
[17 192]
[20 190]
[21 189]
[22 188]
[23 187]
[24 167]
[25 166]
[26 165]
[27 164]
[28 163]
[29 162]
[30 161]
[31 160]
[32 159]
[33 158]
[36 155]
[37 154]
[38 153]
[39 149]
[41 147]
[42 146]
[43 145]
[44 121]
[45 120]
[46 119]
[47 118]
[48 117]
[57 116]
[58 115]
[59 114]
[60 113]
[61 112]
[62 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
