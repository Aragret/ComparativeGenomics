%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[44.64233780 515.82080078]
[56.56937027 505.89480591]
[55.45372391 490.93637085]
[54.33807373 475.97790527]
[53.22242355 461.01947021]
[52.10677719 446.06100464]
[50.99112701 431.10253906]
[49.87548065 416.14410400]
[48.75983047 401.18563843]
[47.64418030 386.22720337]
[46.52853394 371.26873779]
[45.41288376 356.31027222]
[44.29723740 341.35183716]
[35.63475418 329.23529053]
[42.32421494 314.89785767]
[41.20856476 299.93939209]
[37.57628250 293.50292969]
[40.18935394 284.75021362]
[34.31804276 298.55340576]
[25.23910904 310.49380493]
[13.50772953 319.84124756]
[-0.15871713 326.02413940]
[-14.92452240 328.66439819]
[-29.88675117 327.60058594]
[-44.13045883 322.89773560]
[-56.78463364 314.84341431]
[-67.07546997 303.93020630]
[-74.37368011 290.82537842]
[-78.23297882 276.33035278]
[-78.41735840 261.33148193]
[-74.91555023 246.74597168]
[-67.94169617 233.46569824]
[-57.92224503 222.30279541]
[-45.46988678 213.93984985]
[-31.34609413 208.88827515]
[-16.41453934 207.45697021]
[-1.58829129 209.73345947]
[12.22601700 215.57852173]
[24.18363571 224.63476562]
[33.55335236 236.34835815]
[39.76220322 250.00303650]
[42.43051910 264.76382446]
[46.61753082 250.36004639]
[50.80454254 235.95626831]
[54.99155045 221.55247498]
[49.44232941 210.80386353]
[52.81271744 198.76957703]
[63.82110214 192.04809570]
[68.22209930 177.70825195]
[72.62310028 163.36840820]
[77.02409363 149.02854919]
[81.42509460 134.68870544]
[85.82609558 120.34886169]
[90.22708893 106.00901031]
[78.21367645 114.99110413]
[63.33071518 116.86122894]
[49.46856689 111.13053131]
[40.25076675 99.29701233]
[38.08682632 84.45392609]
[43.54239655 70.48120880]
[55.19139862 61.03130341]
[69.98881531 58.57439041]
[84.06664276 63.75270081]
[93.74495697 75.21263885]
[96.49394989 89.95771790]
[102.97344208 76.42937469]
[109.45294189 62.90102386]
[115.93243408 49.37268066]
[122.41193390 35.84433365]
[128.89143372 22.31598854]
[135.37092590 8.78764343]
[141.85041809 -4.74070215]
[140.00958252 -23.06262398]
[154.86402893 -32.40673828]
[161.14138794 -46.03005219]
[167.41874695 -59.65336990]
[173.69610596 -73.27668762]
[178.41624451 -87.51467896]
[181.52035522 -102.18997955]
[184.62446594 -116.86528015]
[187.72857666 -131.54058838]
[190.83268738 -146.21588135]
[193.27841187 -161.01515198]
[195.06088257 -175.90887451]
[196.84333801 -190.80259705]
[198.62580872 -205.69630432]
[200.40827942 -220.59002686]
[202.19073486 -235.48374939]
[196.14814758 -250.10556030]
[205.34301758 -261.82321167]
[207.12548828 -276.71694946]
[196.91682434 -283.93157959]
[190.77989197 -294.73928833]
[189.82594299 -307.05874634]
[194.17483521 -318.54736328]
[202.94386292 -327.04660034]
[214.42619324 -330.98757935]
[216.65130615 -345.82162476]
[218.87641907 -360.65567017]
[221.10154724 -375.48971558]
[207.39375305 -381.83584595]
[196.03004456 -391.78787231]
[187.93162537 -404.53903198]
[183.75497437 -419.05566406]
[183.83871460 -434.16094971]
[188.17602539 -448.63037109]
[196.41531372 -461.29095459]
[207.88864136 -471.11639404]
[221.66593933 -477.31018066]
[236.63034058 -479.37017822]
[251.56872559 -477.12939453]
[265.27014160 -470.76950073]
[276.62384033 -460.80609131]
[284.70944214 -448.04678345]
[288.87152100 -433.52597046]
[288.77261353 -418.42077637]
[284.42074585 -403.95571899]
[276.16876221 -391.30340576]
[264.68554688 -381.48950195]
[250.90203857 -375.30957031]
[235.93559265 -373.26458740]
[233.71046448 -358.43057251]
[231.48535156 -343.59652710]
[229.26023865 -328.76248169]
[242.41169739 -316.97644043]
[245.88607788 -299.50131226]
[238.10705566 -283.29742432]
[222.01921082 -274.93447876]
[220.23674011 -260.04077148]
[226.40682983 -246.48423767]
[217.08445740 -233.70127869]
[215.30198669 -218.80755615]
[213.51953125 -203.91384888]
[211.73706055 -189.02012634]
[209.95458984 -174.12640381]
[208.17213440 -159.23269653]
[220.60263062 -167.62808228]
[235.35437012 -164.91032410]
[243.97688293 -152.63627625]
[241.53079224 -137.83706665]
[229.41734314 -128.99035645]
[214.57566833 -131.16394043]
[205.50798035 -143.11177063]
[202.40386963 -128.43647766]
[199.29975891 -113.76116943]
[196.19564819 -99.08586884]
[193.09153748 -84.41056824]
[203.05120850 -95.62684631]
[216.35661316 -102.55260468]
[231.25721741 -104.27663422]
[245.79257202 -100.57210541]
[258.05029297 -91.92641449]
[266.41769409 -79.47705078]
[269.79388428 -64.86194611]
[267.73468018 -50.00395966]
[260.51098633 -36.85792542]
[249.07321167 -27.15342712]
[234.92619324 -22.16725540]
[219.93121338 -22.55542755]
[206.06112671 -28.26687622]
[195.14076233 -38.55015945]
[188.60691833 -52.05233383]
[187.31942749 -66.99932861]
[181.04206848 -53.37601089]
[174.76470947 -39.75269318]
[168.48733521 -26.12937737]
[172.38070679 -14.67650604]
[167.26243591 -3.27532172]
[155.37876892 1.73879385]
[148.89927673 15.26713943]
[142.41976929 28.79548454]
[135.94027710 42.32382965]
[129.46078491 55.85217667]
[122.98128510 69.38052368]
[116.50179291 82.90886688]
[110.02229309 96.43721008]
[104.56694031 110.41001129]
[100.16593933 124.74985504]
[95.76493835 139.08970642]
[91.36394501 153.42955017]
[86.96294403 167.76939392]
[82.56195068 182.10925293]
[78.16094971 196.44909668]
[82.69931793 214.29524231]
[69.39533234 225.73948669]
[65.20832062 240.14328003]
[61.02131271 254.54705811]
[56.83430099 268.95083618]
[55.16275787 283.85742188]
[56.16701889 298.82376099]
[57.28266907 313.78219604]
[66.02494812 326.96868896]
[59.25568771 340.23617554]
[60.37133789 355.19464111]
[61.48698807 370.15307617]
[62.60263443 385.11154175]
[63.71828461 400.07000732]
[64.83393097 415.02844238]
[65.94957733 429.98690796]
[67.06523132 444.94534302]
[68.18087769 459.90380859]
[69.29652405 474.86227417]
[70.41217804 489.82070923]
[71.52782440 504.77917480]
[84.79533386 512.82611084]
[90.76805878 527.14758301]
[87.14936066 542.23681641]
[75.33071136 552.29162598]
[59.85661316 553.44573975]
[46.67717743 545.25537109]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 204]
[3 203]
[4 202]
[5 201]
[6 200]
[7 199]
[8 198]
[9 197]
[10 196]
[11 195]
[12 194]
[13 193]
[15 191]
[16 190]
[18 189]
[42 188]
[43 187]
[44 186]
[45 185]
[48 183]
[49 182]
[50 181]
[51 180]
[52 179]
[53 178]
[54 177]
[65 176]
[66 175]
[67 174]
[68 173]
[69 172]
[70 171]
[71 170]
[72 169]
[74 166]
[75 165]
[76 164]
[77 163]
[78 147]
[79 146]
[80 145]
[81 144]
[82 143]
[83 136]
[84 135]
[85 134]
[86 133]
[87 132]
[88 131]
[90 129]
[91 128]
[97 124]
[98 123]
[99 122]
[100 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
