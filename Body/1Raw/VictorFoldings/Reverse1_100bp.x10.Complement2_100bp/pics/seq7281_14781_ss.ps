%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[66.67925262 454.67764282]
[53.11611176 461.48980713]
[38.00764465 462.93850708]
[23.39715195 458.82778931]
[11.26057720 449.71362305]
[3.23929572 436.82861328]
[0.41811883 421.91534424]
[3.17858768 406.99072266]
[11.14737129 394.07318115]
[23.24675751 384.90972900]
[37.84040451 380.73959351]
[39.17863846 365.79940796]
[40.51687241 350.85922241]
[41.85510635 335.91903687]
[43.19334030 320.97885132]
[44.53157425 306.03866577]
[37.01846695 296.55816650]
[38.01110077 284.10031128]
[47.52103043 275.38687134]
[49.08155441 260.46826172]
[39.02019882 271.59341431]
[24.77487755 276.29138184]
[10.06928253 273.33410645]
[-1.25257993 263.49462891]
[-6.23120165 249.34495544]
[-3.56518292 234.58377075]
[6.04858541 223.06962585]
[20.09708786 217.81228638]
[34.90807724 220.18601990]
[46.61000061 229.57031250]
[52.14389420 243.51127625]
[55.90019608 228.98921204]
[59.65649414 214.46714783]
[58.28816605 207.20426941]
[63.57833481 199.75765991]
[54.30937958 190.14888000]
[50.97194672 177.11026001]
[54.54139328 164.02101135]
[64.18854523 154.32818604]
[77.46939087 150.63899231]
[81.65640259 136.23521423]
[85.84341431 121.83142853]
[75.64862061 109.16681671]
[74.96123505 92.92324066]
[84.04962921 79.44261932]
[99.36545563 73.98812866]
[103.33755493 59.52360153]
[106.98564148 44.97398376]
[110.30789948 30.34652138]
[113.63016510 15.71906185]
[116.84343719 1.06727421]
[119.94754791 -13.60802841]
[123.05165863 -28.28333092]
[126.15576935 -42.95863342]
[119.78717804 -54.17486572]
[122.67472076 -66.33405304]
[132.73976135 -73.04385376]
[136.06202698 -87.67131805]
[139.38429260 -102.29877472]
[137.95314026 -106.39826202]
[137.90571594 -110.34317017]
[139.02351379 -113.71747589]
[140.97537231 -116.21885681]
[143.36425781 -117.68558502]
[147.55126953 -132.08937073]
[151.73828125 -146.49314880]
[155.92529297 -160.89692688]
[160.11230469 -175.30072021]
[164.29931641 -189.70449829]
[150.20558167 -194.85615540]
[136.49179077 -200.94752502]
[123.22051239 -207.95082092]
[110.45230103 -215.83407593]
[98.24542236 -224.56132507]
[86.65556335 -234.09275818]
[75.73561859 -244.38488770]
[65.53540802 -255.39073181]
[56.10146713 -267.06008911]
[47.47685242 -279.33969116]
[39.70090866 -292.17355347]
[32.80912018 -305.50305176]
[26.83293152 -319.26745605]
[21.79960823 -333.40386963]
[17.73212051 -347.84783936]
[14.64902401 -362.53347778]
[12.56438923 -377.39373779]
[11.48772621 -392.36080933]
[11.42394829 -407.36645508]
[12.37334538 -422.34213257]
[14.33158684 -437.21957397]
[17.28973770 -451.93087769]
[21.23429871 -466.40890503]
[26.14727402 -480.58761597]
[32.00624466 -494.40228271]
[38.78447723 -507.78991699]
[46.45104599 -520.68939209]
[54.97097015 -533.04187012]
[64.30537415 -544.79101562]
[74.41165924 -555.88317871]
[85.24372864 -566.26776123]
[96.75214386 -575.89733887]
[108.88439941 -584.72802734]
[121.58513641 -592.71954346]
[134.79640198 -599.83538818]
[148.45791626 -606.04315186]
[162.50735474 -611.31439209]
[176.88059998 -615.62518311]
[191.51208496 -618.95574951]
[206.33502197 -621.29095459]
[221.28179932 -622.62017822]
[236.28421021 -622.93731689]
[251.27380371 -622.24084473]
[266.18218994 -620.53405762]
[280.94134521 -617.82470703]
[295.48388672 -614.12518311]
[309.74353027 -609.45227051]
[323.65515137 -603.82733154]
[337.15530396 -597.27612305]
[350.18240356 -589.82843018]
[362.67694092 -581.51824951]
[374.58200073 -572.38354492]
[385.84320068 -562.46600342]
[396.40914917 -551.81079102]
[406.23168945 -540.46655273]
[415.26596069 -528.48516846]
[423.47076416 -515.92114258]
[430.80865479 -502.83187866]
[437.24612427 -489.27713013]
[442.75384521 -475.31869507]
[447.30667114 -461.02026367]
[450.88381958 -446.44711304]
[453.46896362 -431.66571045]
[455.05032349 -416.74349976]
[455.62066650 -401.74856567]
[455.17742920 -386.74935913]
[453.72256470 -371.81427002]
[451.26278687 -357.01150513]
[447.80926514 -342.40853882]
[443.37777710 -328.07205200]
[437.98855591 -314.06744385]
[431.66616821 -300.45861816]
[424.43948364 -287.30764771]
[416.34143066 -274.67456055]
[407.40902710 -262.61700439]
[397.68298340 -251.18997192]
[387.20770264 -240.44561768]
[376.03094482 -230.43295288]
[364.20373535 -221.19769287]
[351.78005981 -212.78193665]
[338.81655884 -205.22412109]
[325.37240601 -198.55870056]
[311.50894165 -192.81610107]
[297.28942871 -188.02253723]
[282.77874756 -184.19985962]
[268.04309082 -181.36552429]
[253.14970398 -179.53247070]
[238.16654968 -178.70903015]
[223.16198730 -178.89900208]
[208.20448303 -180.10148621]
[193.36227417 -182.31100464]
[178.70310974 -185.51748657]
[174.51609802 -171.11370850]
[170.32908630 -156.70991516]
[166.14207458 -142.30613708]
[161.95506287 -127.90235901]
[157.76805115 -113.49857330]
[154.01174927 -98.97651672]
[150.68948364 -84.34906006]
[147.36723328 -69.72159576]
[153.45350647 -53.26182175]
[140.83106995 -39.85452271]
[137.72695923 -25.17922020]
[134.62284851 -10.50391769]
[131.51873779 4.17138433]
[133.21000671 11.36592484]
[128.25762939 19.04132080]
[124.93536377 33.66878128]
[121.61310577 48.29624176]
[123.17271423 51.45851135]
[123.27812958 55.53330612]
[121.51715088 59.82891464]
[117.80207825 63.49569702]
[113.82998657 77.96022034]
[122.88331604 87.61557007]
[126.01526642 100.47556305]
[122.41539764 113.21249390]
[113.01523590 122.53050995]
[100.24719238 126.01844025]
[96.06018066 140.42222595]
[91.87316895 154.82600403]
[102.41900635 168.05027771]
[102.99879456 184.78840637]
[93.58200073 198.43705750]
[78.04286194 203.72975159]
[74.17855072 218.22344971]
[70.42225647 232.74551392]
[66.66595459 247.26756287]
[64.00016022 262.02877808]
[62.43963623 276.94738770]
[70.32598114 293.58731079]
[59.47175980 307.37689209]
[58.13352585 322.31707764]
[56.79529190 337.25726318]
[55.45705795 352.19744873]
[54.11882401 367.13763428]
[52.78059006 382.07781982]
[66.40081024 388.77514648]
[76.67905426 399.94305420]
[82.22528076 414.07116699]
[82.28941345 429.24880981]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 206]
[12 205]
[13 204]
[14 203]
[15 202]
[16 201]
[19 199]
[20 198]
[31 197]
[32 196]
[33 195]
[35 194]
[40 190]
[41 189]
[42 188]
[46 183]
[47 182]
[48 178]
[49 177]
[50 176]
[51 174]
[52 173]
[53 172]
[54 171]
[57 169]
[58 168]
[59 167]
[64 166]
[65 165]
[66 164]
[67 163]
[68 162]
[69 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
