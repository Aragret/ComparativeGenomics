%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCGGCGUGAGCAUUCCCCACCUAAAAAGAUACAUCGGCAACUCAACACCAUCAGUUUUACAUUAUUAAUAAUCAUCAUUCCGAUCCUCCCACAACUAAxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[97.50632477 539.01696777]
[88.03883362 550.68365479]
[77.03974152 560.91918945]
[64.72312927 569.52429199]
[51.32875443 576.33142090]
[37.11734009 581.20806885]
[22.36551476 584.05932617]
[7.36042881 584.82971191]
[-7.60584116 583.50427246]
[-22.24197197 580.10870361]
[-36.26306534 574.70916748]
[-49.39619827 567.41076660]
[-61.38573074 558.35552979]
[-71.99828339 547.71972656]
[-81.02727509 535.71044922]
[-88.29696655 522.56134033]
[-93.66583252 508.52850342]
[-97.02938080 493.88497925]
[-98.32213593 478.91583252]
[-97.51892853 463.91247559]
[-94.63539886 449.16693115]
[-89.72766876 434.96618652]
[-82.89128113 421.58673096]
[-74.25929260 409.28897095]
[-63.99974442 398.31228638]
[-52.31232834 388.87033081]
[-39.42454910 381.14691162]
[-25.58726883 375.29235840]
[-11.06983662 371.42062378]
[3.84516311 369.60708618]
[18.86740494 369.88705444]
[33.70447540 372.25503540]
[38.10547638 357.91519165]
[42.50647354 343.57534790]
[46.90747070 329.23550415]
[51.30846786 314.89566040]
[55.60259247 300.52343750]
[59.78960419 286.11965942]
[63.11186218 271.49221802]
[65.55759430 256.69293213]
[68.00331879 241.89366150]
[70.44904327 227.09439087]
[72.89477539 212.29512024]
[75.34049988 197.49584961]
[77.78623199 182.69657898]
[80.23195648 167.89730835]
[78.22112274 160.78546143]
[82.82584381 152.89659119]
[85.49163818 138.13537598]
[88.15743256 123.37415314]
[90.82322693 108.61293793]
[93.15871429 93.79586792]
[95.16272736 78.93033600]
[97.16674042 64.06481171]
[99.17075348 49.19928360]
[97.18653107 44.37124634]
[97.24665833 39.72908020]
[98.93799591 36.02038574]
[101.61055756 33.72043228]
[104.27635193 18.95921516]
[106.94214630 4.19799852]
[109.60794067 -10.56321812]
[100.69447327 1.50119495]
[89.42519379 11.40085697]
[76.31277466 18.68539810]
[61.95375061 23.02342224]
[47.00136185 24.21757889]
[32.13583755 22.21353722]
[18.03346062 17.10247231]
[5.33579636 9.11690235]
[-5.37949610 -1.37988353]
[-13.62494278 -13.91035080]
[-19.02543068 -27.90444756]
[-21.33527374 -42.72553253]
[-20.44939041 -57.69935226]
[-16.40808105 -72.14469147]
[-9.39519978 -85.40438843]
[0.27021566 -96.87520599]
[12.14845276 -106.03530884]
[25.69913101 -112.46797180]
[40.30578232 -115.88054657]
[55.30390549 -116.11779022]
[70.01118469 -113.16889954]
[83.75853729 -107.16804504]
[95.92055511 -98.38821411]
[105.94393158 -87.22882843]
[113.37268829 -74.19757843]
[117.86885834 -59.88728333]
[119.22789001 -44.94897461]
[117.38698578 -30.05802917]
[125.61579132 -42.59943008]
[133.84460449 -55.14083099]
[142.07341003 -67.68222809]
[144.16470337 -76.57403564]
[150.51925659 -80.34783173]
[158.93386841 -92.76532745]
[167.34849548 -105.18282318]
[155.90170288 -114.89973450]
[145.57261658 -125.79731750]
[136.48234558 -137.74780273]
[128.73745728 -150.61108398]
[122.42875671 -164.23632812]
[117.63021851 -178.46382141]
[114.39809418 -193.12672424]
[112.77028656 -208.05311584]
[112.76587677 -223.06802368]
[114.38491058 -237.99537659]
[117.60842133 -252.66017151]
[122.39859772 -266.89047241]
[128.69929504 -280.51943970]
[136.43661499 -293.38726807]
[145.51986694 -305.34307861]
[155.84254456 -316.24673462]
[167.28361511 -325.97036743]
[179.70895386 -334.39996338]
[192.97286987 -341.43673706]
[206.91983032 -346.99813843]
[221.38635254 -351.01898193]
[236.20280457 -353.45211792]
[251.19546509 -354.26901245]
[266.18856812 -353.46011353]
[281.00628662 -351.03488159]
[295.47494507 -347.02175903]
[309.42489624 -341.46780396]
[322.69256592 -334.43814087]
[335.12240601 -326.01516724]
[346.56866455 -316.29763794]
[356.89715576 -305.39950562]
[365.98678589 -293.44851685]
[373.73098755 -280.58483887]
[380.03894043 -266.95922852]
[384.83673096 -252.73149109]
[388.06805420 -238.06842041]
[389.69506836 -223.14193726]
[389.69866943 -208.12702942]
[388.07882690 -193.19976807]
[384.85452271 -178.53514099]
[380.06359863 -164.30509949]
[373.76217651 -150.67648315]
[366.02413940 -137.80906677]
[356.94024658 -125.85372925]
[346.61697388 -114.95063782]
[335.17538452 -105.22762299]
[322.74960327 -96.79867554]
[309.48532104 -89.76263428]
[295.53802490 -84.20198059]
[281.07131958 -80.18192291]
[266.25473022 -77.74958038]
[251.26202393 -76.93348694]
[236.26896667 -77.74319458]
[221.45135498 -80.16921997]
[206.98291016 -84.18311310]
[193.03327942 -89.73781586]
[179.76599121 -96.76820374]
[171.35136414 -84.35070801]
[162.93675232 -71.93321228]
[154.61480713 -59.45342255]
[146.38600159 -46.91202164]
[138.15719604 -34.37062073]
[129.92839050 -21.82922173]
[124.36915588 -7.89742279]
[121.70336151 6.86379433]
[119.03756714 21.62501144]
[116.37177277 36.38623047]
[114.03628540 51.20329666]
[112.03227234 66.06882477]
[110.02825928 80.93435669]
[108.02424622 95.79988098]
[109.90418243 99.16710663]
[110.29077911 103.34662628]
[108.85451508 107.65292358]
[105.58444214 111.27873230]
[102.91864777 126.03994751]
[100.25285339 140.80116272]
[97.58705902 155.56237793]
[95.03122711 170.34303284]
[92.58550262 185.14230347]
[90.13977051 199.94157410]
[87.69404602 214.74084473]
[85.24831390 229.54011536]
[82.80258942 244.33938599]
[80.35686493 259.13867188]
[77.91113281 273.93792725]
[89.49498749 264.40826416]
[104.46054077 263.39233398]
[117.22602081 271.26904297]
[123.03021240 285.10058594]
[119.70830536 299.72811890]
[108.49927521 309.69595337]
[93.58382416 311.28631592]
[80.52503967 303.90606689]
[74.19338989 290.30667114]
[70.00637817 304.71044922]
[70.61596680 313.82452393]
[65.64831543 319.29666138]
[61.24731827 333.63650513]
[56.84632111 347.97634888]
[52.44532394 362.31619263]
[48.04432297 376.65603638]
[61.65533066 383.01895142]
[74.24829102 391.21429443]
[85.57807159 401.08255005]
[95.42414093 412.43157959]
[103.59484100 425.04055786]
[109.93112183 438.66397095]
[114.30965424 453.03668213]
[116.64521027 467.87887573]
[116.89231873 482.90170288]
[115.04617310 497.81271362]
[111.14270782 512.32165527]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 199]
[33 198]
[34 197]
[35 196]
[36 195]
[37 193]
[38 192]
[39 183]
[40 182]
[41 181]
[42 180]
[43 179]
[44 178]
[45 177]
[46 176]
[48 175]
[49 174]
[50 173]
[51 172]
[52 168]
[53 167]
[54 166]
[55 165]
[59 164]
[60 163]
[61 162]
[62 161]
[90 160]
[91 159]
[92 158]
[93 157]
[95 156]
[96 155]
[97 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
