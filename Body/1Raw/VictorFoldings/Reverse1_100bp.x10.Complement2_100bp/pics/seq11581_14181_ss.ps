%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCCCCCAAACCUACUCUUACCGACAAUGAUGCUCCCGAUACACCGACUAACUUCUCAUACGUUACUCGCUAAAAUCCAGACAAACAGCAUCCGUCUAxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[104.42339325 625.86334229]
[110.46973419 610.02416992]
[110.46973419 595.02416992]
[110.46973419 580.02416992]
[110.46973419 565.02416992]
[110.46973419 550.02416992]
[110.46973419 535.02416992]
[109.68841553 520.04455566]
[108.12789154 505.12594604]
[97.08141327 498.49230957]
[91.79369354 486.52896118]
[94.40012360 473.51293945]
[104.16886902 464.24005127]
[102.83063507 449.29986572]
[101.49240112 434.35968018]
[100.15416718 419.41949463]
[86.15589142 414.27032471]
[75.73860931 403.50976562]
[71.00700378 389.23486328]
[72.95041656 374.26010132]
[81.23648834 361.56256104]
[94.26658630 353.68994141]
[92.92835236 338.74975586]
[91.59011841 323.80957031]
[90.25188446 308.86938477]
[80.70137024 320.43606567]
[65.97368622 323.28125000]
[52.80212021 316.10421753]
[47.20854187 302.18618774]
[51.75025558 287.89028931]
[64.35085297 279.75241089]
[79.24951172 281.49310303]
[89.63552094 292.31820679]
[89.85884857 277.31988525]
[90.08217621 262.32153320]
[90.30550385 247.32321167]
[90.52883148 232.32487488]
[90.75215912 217.32653809]
[90.97548676 202.32820129]
[91.19881439 187.32984924]
[91.42214203 172.33151245]
[83.87519073 159.49046326]
[91.81709290 145.80702209]
[92.04042053 130.80868530]
[92.26374817 115.81034088]
[84.92996216 109.09452820]
[82.40619659 99.47593689]
[85.49799347 90.02461243]
[93.21851349 83.75721741]
[93.88829803 68.77217865]
[94.55808258 53.78714371]
[95.22786713 38.80210495]
[95.89765167 23.81706619]
[87.21379852 36.04778671]
[74.12526703 43.37516022]
[59.15925598 44.38438034]
[45.20546722 38.88058472]
[34.95815659 27.92646790]
[30.39592171 13.63710117]
[32.39965820 -1.22846472]
[40.58247375 -13.79992104]
[53.36439896 -21.64991760]
[68.27743530 -23.26274109]
[82.44212341 -18.32698250]
[93.12347412 -7.79565763]
[98.25924683 6.29906273]
[101.58150482 -8.32839775]
[104.90376282 -22.95585823]
[108.22602844 -37.58331680]
[111.54828644 -52.21077728]
[114.87054443 -66.83824158]
[118.19280243 -81.46569824]
[113.70418549 -96.63681793]
[124.06820679 -107.33430481]
[118.21508026 -124.79347229]
[130.63102722 -137.19554138]
[133.73513794 -151.87083435]
[136.83924866 -166.54614258]
[139.94335938 -181.22143555]
[142.82862854 -195.94132996]
[145.49443054 -210.70254517]
[146.38723755 -225.67594910]
[145.49443054 -240.64936829]
[144.60160828 -255.62277222]
[143.70878601 -270.59616089]
[142.81597900 -285.56958008]
[141.92315674 -300.54299927]
[141.03034973 -315.51638794]
[140.13752747 -330.48980713]
[138.91055298 -345.43954468]
[137.35003662 -360.35812378]
[135.78950500 -375.27673340]
[134.22898865 -390.19534302]
[119.46893311 -393.57464600]
[106.60720062 -401.56555176]
[97.03892517 -413.30126953]
[91.80200195 -427.50875854]
[91.46450043 -442.64697266]
[96.06301880 -457.07376099]
[105.09875488 -469.22424316]
[117.59156799 -477.78042603]
[132.18634033 -481.81417847]
[147.29994202 -480.88796997]
[161.29295349 -475.10229492]
[172.64752197 -465.08468628]
[180.13200378 -451.92181396]
[182.93450928 -437.04144287]
[180.75105286 -422.05773926]
[173.81849670 -408.59600830]
[162.88882446 -398.11648560]
[149.14758301 -391.75585938]
[150.70811462 -376.83724976]
[152.26863098 -361.91867065]
[153.82916260 -347.00006104]
[156.32325745 -344.50769043]
[157.73405457 -340.68347168]
[157.44874573 -336.04971313]
[155.11093140 -331.38259888]
[156.00375366 -316.40921021]
[156.89656067 -301.43579102]
[157.78938293 -286.46240234]
[158.68218994 -271.48898315]
[159.57501221 -256.51559448]
[160.46783447 -241.54217529]
[161.36064148 -226.56877136]
[167.82443237 -240.10462952]
[178.47935486 -250.66268921]
[192.07366943 -257.00262451]
[207.01033020 -258.37957764]
[221.53460693 -254.63183594]
[233.94018555 -246.19966125]
[242.76968384 -234.07365417]
[246.98580933 -219.67835999]
[246.09324646 -204.70494080]
[240.19688416 -190.91244507]
[229.98941040 -179.92120361]
[216.66996765 -173.02246094]
[201.80332947 -171.02667236]
[187.13601685 -174.16830444]
[174.39112854 -182.07827759]
[165.06590271 -193.82733154]
[160.25564575 -208.03675842]
[157.58984375 -193.27554321]
[159.52871704 -188.91093445]
[158.74635315 -183.28199768]
[154.61865234 -178.11732483]
[151.51454163 -163.44203186]
[148.41043091 -148.76672363]
[145.30632019 -134.09143066]
[151.63961792 -123.78531647]
[149.17364502 -111.53367615]
[138.69566345 -104.01204681]
[143.42192078 -89.88718414]
[132.82026672 -78.14344025]
[129.49800110 -63.51597977]
[126.17574310 -48.88851929]
[122.85348511 -34.26105881]
[119.53122711 -19.63359833]
[116.20896912 -5.00613785]
[112.88670349 9.62132263]
[110.88269043 24.48685074]
[110.21290588 39.47188950]
[109.54312134 54.45692825]
[108.87333679 69.44196320]
[108.20355225 84.42700195]
[117.59380341 100.52406311]
[107.26208496 116.03366852]
[107.03875732 131.03201294]
[106.81542969 146.03034973]
[114.34641266 159.94418335]
[106.42047882 172.55484009]
[106.19715118 187.55317688]
[105.97382355 202.55152893]
[105.75049591 217.54986572]
[105.52716827 232.54820251]
[105.30384064 247.54653931]
[105.08051300 262.54486084]
[104.85718536 277.54321289]
[104.63385773 292.54153442]
[105.19207001 307.53115845]
[106.53030396 322.47134399]
[107.86853790 337.41152954]
[109.20677185 352.35171509]
[123.42855835 357.78329468]
[133.83934021 368.80612183]
[138.41311646 383.19711304]
[136.29376221 398.08566284]
[127.95467377 410.52630615]
[115.09435272 418.08126831]
[116.43258667 433.02145386]
[117.77082062 447.96163940]
[119.10905457 462.90182495]
[132.73616028 473.87094116]
[134.18533325 490.96520996]
[123.04649353 503.56542969]
[124.60701752 518.48400879]
[133.98425293 506.77645874]
[148.66795349 503.71228027]
[161.94491577 510.69241333]
[167.74508667 524.52563477]
[163.41671753 538.88757324]
[150.93869019 547.21215820]
[136.01576233 545.69348145]
[125.46973419 535.02416992]
[125.46973419 550.02416992]
[125.46973419 565.02416992]
[125.46973419 580.02416992]
[125.46973419 595.02416992]
[125.46973419 610.02416992]
[131.51606750 625.86334229]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 209]
[3 208]
[4 207]
[5 206]
[6 205]
[7 204]
[8 196]
[9 195]
[13 192]
[14 191]
[15 190]
[16 189]
[22 183]
[23 182]
[24 181]
[25 180]
[33 179]
[34 178]
[35 177]
[36 176]
[37 175]
[38 174]
[39 173]
[40 172]
[41 171]
[43 169]
[44 168]
[45 167]
[49 165]
[50 164]
[51 163]
[52 162]
[53 161]
[66 160]
[67 159]
[68 158]
[69 157]
[70 156]
[71 155]
[72 154]
[74 152]
[76 149]
[77 148]
[78 147]
[79 146]
[80 143]
[81 142]
[82 125]
[83 124]
[84 123]
[85 122]
[86 121]
[87 120]
[88 119]
[89 118]
[90 114]
[91 113]
[92 112]
[93 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
