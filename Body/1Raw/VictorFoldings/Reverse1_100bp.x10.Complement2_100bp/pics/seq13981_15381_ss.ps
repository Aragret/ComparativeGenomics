%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAAAACCCAACUCCACUACUACCUCCACCUCUAAACCACGACACUUUAACAAAAUCCAUUAUCGAAAAGAUCAGUCCAAUCCAGAUCCUCCUCAUCCCxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[139.50509644 260.65344238]
[140.74966431 245.69734192]
[143.16384888 230.88499451]
[146.73275757 216.30770874]
[151.43440247 202.05538940]
[157.23977661 188.21589661]
[164.11308289 174.87454224]
[172.01197815 162.11360168]
[159.91622925 153.24270630]
[147.82046509 144.37181091]
[135.72471619 135.50091553]
[120.88587189 134.21333313]
[114.33342743 119.81276703]
[102.23767853 110.94187164]
[90.07621765 102.16127014]
[77.84973145 93.47144318]
[65.62325287 84.78162384]
[53.39676285 76.09179688]
[41.17027664 67.40196991]
[28.94379234 58.71215057]
[11.07897472 65.58119965]
[-7.17213631 60.33653641]
[-18.48454666 45.27140808]
[-18.43180275 26.58209991]
[-31.03411484 18.44688416]
[-43.63642502 10.31166935]
[-58.04979324 15.74867058]
[-72.72933960 11.70338154]
[-82.10123444 -0.07081047]
[-82.73534393 -14.92799377]
[-95.33765411 -23.06320953]
[-107.93996429 -31.19842529]
[-120.54227448 -39.33364105]
[-129.65763855 -27.41096687]
[-139.69146729 -16.25020599]
[-150.58029175 -5.92191935]
[-162.25527954 3.50859189]
[-174.64263916 11.98170471]
[-187.66401672 19.44384956]
[-201.23712158 25.84784508]
[-215.27610779 31.15320587]
[-229.69223022 35.32638550]
[-244.39434814 38.34100342]
[-259.28948975 40.17800140]
[-274.28350830 40.82575607]
[-289.28158569 40.28018188]
[-304.18890381 38.54472351]
[-318.91122437 35.63035202]
[-333.35546875 31.55549812]
[-347.43026733 26.34591866]
[-361.04669189 20.03455734]
[-374.11862183 12.66131115]
[-386.56341553 4.27279997]
[-398.30239868 -5.07794094]
[-409.26135254 -15.33179283]
[-419.37097168 -26.42392731]
[-428.56738281 -38.28421402]
[-436.79238892 -50.83766556]
[-443.99401855 -64.00492096]
[-450.12673950 -77.70272064]
[-455.15179443 -91.84447479]
[-459.03735352 -106.34076691]
[-461.75891113 -121.09993744]
[-463.29922485 -136.02868652]
[-463.64859009 -151.03262329]
[-462.80477905 -166.01687622]
[-460.77310181 -180.88673401]
[-457.56643677 -195.54815674]
[-453.20504761 -209.90846252]
[-447.71652222 -223.87686157]
[-441.13552856 -237.36502075]
[-433.50369263 -250.28768921]
[-424.86929321 -262.56317139]
[-415.28686523 -274.11380005]
[-404.81704712 -284.86660767]
[-393.52600098 -294.75357056]
[-381.48510742 -303.71221924]
[-368.77053833 -311.68588257]
[-355.46261597 -318.62414551]
[-341.64553833 -324.48318481]
[-327.40661621 -329.22589111]
[-312.83590698 -332.82232666]
[-298.02551270 -335.24975586]
[-283.06906128 -336.49279785]
[-268.06115723 -336.54360962]
[-253.09664917 -335.40185547]
[-238.27015686 -333.07479858]
[-223.67541504 -329.57711792]
[-209.40470886 -324.93090820]
[-195.54826355 -319.16558838]
[-182.19367981 -312.31759644]
[-169.42538452 -304.43020630]
[-157.32411194 -295.55331421]
[-145.96638489 -285.74301147]
[-135.42398071 -275.06134033]
[-125.76357269 -263.57586670]
[-117.04623413 -251.35914612]
[-109.32707977 -238.48844910]
[-102.65490723 -225.04515076]
[-97.07191467 -211.11424255]
[-92.61338806 -196.78379822]
[-89.30751801 -182.14442444]
[-87.17520905 -167.28866577]
[-86.22994232 -152.31047058]
[-86.47769165 -137.30450439]
[-87.91688538 -122.36566925]
[-90.53843689 -107.58840942]
[-94.32576752 -93.06613922]
[-99.25492859 -78.89068604]
[-105.29475403 -65.15167236]
[-112.40705872 -51.93595505]
[-99.80474854 -43.80073929]
[-87.20243835 -35.66552353]
[-74.60012817 -27.53030586]
[-60.79953003 -33.06940460]
[-46.21099854 -29.37633705]
[-36.48065186 -17.66422081]
[-35.50120926 -2.29064274]
[-22.89889908 5.84457302]
[-10.29658699 13.97978878]
[-0.84053248 8.06085968]
[10.19171143 6.08912945]
[21.21305084 8.38714695]
[30.62342072 14.66040039]
[37.04207230 24.03445625]
[39.51011658 35.17668533]
[37.63361740 46.48566437]
[49.86010361 55.17548752]
[62.08658981 63.86531067]
[74.31307220 72.55513763]
[86.53955841 81.24495697]
[98.76604462 89.93478394]
[106.63840485 91.66639709]
[111.10857391 98.84612274]
[123.20432281 107.71701813]
[138.90834045 109.63911438]
[144.59561157 123.40516663]
[156.69136047 132.27606201]
[168.78712463 141.14695740]
[180.88287354 150.01785278]
[190.68031311 138.64927673]
[201.33952332 128.08447266]
[212.79478455 118.38853455]
[224.97546387 109.62126923]
[237.80647278 101.83671570]
[251.20870972 95.08288574]
[265.09951782 89.40140533]
[279.39328003 84.82730103]
[294.00186157 81.38878632]
[308.83520508 79.10705566]
[323.80184937 77.99617767]
[338.80947876 78.06299591]
[353.76562500 79.30710602]
[368.57806396 81.72083282]
[383.15545654 85.28929901]
[397.40792847 89.99050140]
[411.24758911 95.79544830]
[424.58914185 102.66835785]
[437.35034180 110.56685638]
[449.45248413 119.44223785]
[460.82095337 129.23979187]
[471.38565063 139.89910889]
[481.08145142 151.35447693]
[489.84860229 163.53524780]
[497.63302612 176.36633301]
[504.38671875 189.76863098]
[510.06805420 203.65951538]
[514.64202881 217.95332336]
[518.08038330 232.56195068]
[520.36193848 247.39530945]
[521.47265625 262.36193848]
[521.40570068 277.36959839]
[520.16143799 292.32571411]
[517.74755859 307.13812256]
[514.17895508 321.71548462]
[509.47760010 335.96789551]
[503.67251587 349.80752563]
[496.79946899 363.14901733]
[488.90084839 375.91012573]
[480.02532959 388.01214600]
[470.22766113 399.38052368]
[459.56823730 409.94512939]
[448.11279297 419.64080811]
[435.93191528 428.40783691]
[423.10073853 436.19210815]
[409.69839478 442.94567871]
[395.80743408 448.62689209]
[381.51358032 453.20068359]
[366.90493774 456.63891602]
[352.07156372 458.92031860]
[337.10488892 460.03091431]
[322.09725952 459.96377563]
[307.14111328 458.71936035]
[292.32873535 456.30532837]
[277.75143433 452.73657227]
[263.49905396 448.03509521]
[249.65951538 442.22985840]
[236.31808472 435.35665894]
[223.55706787 427.45791626]
[211.45510864 418.58227539]
[200.08685303 408.78448486]
[189.52235413 398.12496948]
[179.82678223 386.66940308]
[171.05987549 374.48843384]
[163.27572632 361.65719604]
[156.52230835 348.25476074]
[150.84124756 334.36376953]
[146.26759338 320.06985474]
[142.82951355 305.46118164]
[140.54824829 290.62777710]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 140]
[9 139]
[10 138]
[11 137]
[13 135]
[14 134]
[15 132]
[16 131]
[17 130]
[18 129]
[19 128]
[20 127]
[24 120]
[25 119]
[26 118]
[30 114]
[31 113]
[32 112]
[33 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
