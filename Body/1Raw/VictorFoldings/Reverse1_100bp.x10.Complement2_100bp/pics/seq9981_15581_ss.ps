%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUUUAAUUCCGCUUCAAAUAAUGAGAAAAAACUUACAACAGUUUUGAUCAAUUAACCUUCAAUUGCCAUGAUAAAUAUGAUUUUCUCAUUCUGGGAGxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[153.74691772 782.31011963]
[139.51240540 777.56872559]
[125.54317474 772.09490967]
[111.87689209 765.90344238]
[98.55038452 759.01098633]
[85.59958649 751.43609619]
[73.05941010 743.19921875]
[60.96366882 734.32257080]
[49.34495926 724.83007812]
[38.23460770 714.74731445]
[27.66257095 704.10150146]
[17.65734291 692.92126465]
[8.24589825 681.23681641]
[-0.54639137 669.07958984]
[-8.69582272 656.48242188]
[-16.18042755 643.47924805]
[-22.98002815 630.10510254]
[-29.07629204 616.39611816]
[-34.45278931 602.38909912]
[-39.09502029 588.12194824]
[-42.99047470 573.63311768]
[-46.12864685 558.96154785]
[-48.50107956 544.14691162]
[-50.10137939 529.22912598]
[-50.92522812 514.24835205]
[-50.97040558 499.24502563]
[-50.23678970 484.25958252]
[-48.72636032 469.33239746]
[-46.44318771 454.50375366]
[-43.39342880 439.81359863]
[-39.58530426 425.30151367]
[-35.02907562 411.00665283]
[-29.73703384 396.96755981]
[-23.72343826 383.22207642]
[-17.00450516 369.80725098]
[-9.59834671 356.75921631]
[-1.52492678 344.11318970]
[7.19398880 331.90325928]
[16.53489494 320.16235352]
[26.47261047 308.92205811]
[36.98034668 298.21276855]
[48.02976990 288.06326294]
[59.59110260 278.50097656]
[71.63317108 269.55163574]
[84.12351227 261.23941040]
[97.02845764 253.58666992]
[110.31320953 246.61405945]
[123.94196320 240.34037781]
[137.87797546 234.78254700]
[133.05198669 220.58009338]
[128.22598267 206.37763977]
[123.39998627 192.17518616]
[118.57398987 177.97273254]
[113.74798584 163.77027893]
[102.32729340 154.20906067]
[105.21322632 138.65328979]
[100.38722992 124.45082855]
[95.56123352 110.24837494]
[90.62963867 96.08223724]
[85.59272766 81.95320892]
[80.55580902 67.82418060]
[71.86622620 80.05083466]
[56.89839554 81.03270721]
[46.68604660 70.04598999]
[48.75733948 55.18968582]
[61.58539963 47.41530991]
[75.71268463 52.45267105]
[71.74058533 37.98814774]
[67.76849365 23.52362442]
[63.79639816 9.05910110]
[48.95167923 11.32866383]
[33.94385529 11.85947800]
[18.97589111 10.64436340]
[4.25020552 7.69975376]
[-10.03404999 3.06547189]
[-23.68369675 -3.19580960]
[-36.51414108 -10.99941349]
[-48.35186386 -20.23980522]
[-59.03677368 -30.79201889]
[-68.42436981 -42.51334763]
[-76.38769531 -55.24527359]
[-82.81906128 -68.81561279]
[-87.63147736 -83.04084015]
[-90.75987244 -97.72858429]
[-92.16193390 -112.68019104]
[-91.81870270 -127.69348145]
[-89.73482513 -142.56539917]
[-85.93846893 -157.09481812]
[-80.48098755 -171.08526611]
[-73.43618011 -184.34751892]
[-64.89933014 -196.70220947]
[-54.98587799 -207.98228455]
[-43.82989883 -218.03517151]
[-31.58226013 -226.72492981]
[-18.40859795 -233.93403625]
[-4.48707199 -239.56498718]
[9.99404526 -243.54164124]
[24.83891296 -245.81021118]
[39.84677124 -246.34002686]
[54.81465530 -245.12391663]
[69.54014587 -242.17831421]
[83.82408905 -237.54309082]
[97.47332001 -231.28089905]
[110.30324554 -223.47644043]
[122.14035034 -214.23524475]
[132.82455444 -203.68232727]
[142.21136475 -191.96037292]
[150.17384338 -179.22790527]
[156.60430908 -165.65715027]
[161.41577148 -151.43159485]
[164.54318237 -136.74365234]
[165.94425964 -121.79193878]
[165.60002136 -106.77867889]
[163.51513672 -91.90689850]
[159.71781921 -77.37772369]
[154.25939941 -63.38764954]
[147.21371460 -50.12586975]
[138.67604065 -37.77173615]
[128.76184082 -26.49232674]
[117.60518646 -16.44018173]
[105.35696411 -7.75124264]
[92.18282318 -0.54301971]
[78.26091766 5.08700466]
[82.23301697 19.55152893]
[86.20511627 34.01605225]
[90.17720795 48.48057556]
[94.68483734 62.78726196]
[99.72175598 76.91629028]
[104.75866699 91.04531860]
[110.21657562 96.97692108]
[109.76368713 105.42237854]
[114.58969116 119.62483215]
[119.41568756 133.82728577]
[131.18156433 144.40435791]
[127.95044708 158.94427490]
[132.77644348 173.14672852]
[137.60243225 187.34918213]
[142.42843628 201.55165100]
[147.25444031 215.75410461]
[152.08042908 229.95655823]
[166.51747131 225.87321472]
[181.14700317 222.54472351]
[195.92956543 219.98004150]
[210.82533264 218.18609619]
[225.79412842 217.16770935]
[240.79560852 216.92764282]
[255.78932190 217.46652222]
[270.73486328 218.78291321]
[285.59191895 220.87327576]
[300.32046509 223.73194885]
[314.88076782 227.35122681]
[329.23361206 231.72137451]
[343.34027100 236.83061218]
[357.16271973 242.66513062]
[370.66369629 249.20924377]
[383.80682373 256.44528198]
[396.55664062 264.35372925]
[408.87881470 272.91329956]
[420.74008179 282.10092163]
[432.10852051 291.89178467]
[442.95343018 302.25949097]
[453.24557495 313.17614746]
[462.95727539 324.61230469]
[472.06225586 336.53707886]
[480.53607178 348.91839600]
[488.35577393 361.72283936]
[495.50036621 374.91589355]
[501.95056152 388.46200562]
[507.68896484 402.32464600]
[512.70007324 416.46643066]
[516.97045898 430.84927368]
[520.48852539 445.43438721]
[523.24487305 460.18240356]
[525.23199463 475.05361938]
[526.44458008 490.00796509]
[526.87933350 505.00503540]
[526.53503418 520.00451660]
[525.41271973 534.96588135]
[523.51538086 549.84881592]
[520.84814453 564.61322021]
[517.41809082 579.21923828]
[513.23461914 593.62762451]
[508.30889893 607.79937744]
[502.65423584 621.69641113]
[496.28591919 635.28118896]
[489.22106934 648.51708984]
[481.47872925 661.36846924]
[473.07980347 673.80072021]
[464.04693604 685.78021240]
[454.40444946 697.27478027]
[444.17834473 708.25329590]
[433.39617920 718.68627930]
[422.08703613 728.54559326]
[410.28143311 737.80456543]
[398.01113892 746.43835449]
[385.30926514 754.42358398]
[372.21002197 761.73883057]
[358.74877930 768.36425781]
[344.96179199 774.28210449]
[330.88623047 779.47637939]
[316.56002808 783.93304443]
[302.02182007 787.64013672]
[287.31079102 790.58758545]
[272.46661377 792.76757812]
[257.52929688 794.17413330]
[242.53909302 794.80346680]
[227.53643799 794.65393066]
[212.56178284 793.72589111]
[197.65545654 792.02185059]
[182.85768127 789.54638672]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 140]
[50 139]
[51 138]
[52 137]
[53 136]
[54 135]
[56 133]
[57 132]
[58 131]
[59 129]
[60 128]
[61 127]
[67 126]
[68 125]
[69 124]
[70 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
