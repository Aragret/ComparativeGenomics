%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxGAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[29.21462440 639.83758545]
[19.75404167 628.10040283]
[13.37788963 614.44000244]
[10.45686817 599.65039062]
[11.16080189 584.59161377]
[15.44876480 570.13903809]
[23.07146072 557.13293457]
[33.58571625 546.32952881]
[46.38024521 538.35687256]
[60.71118927 533.67846680]
[59.59554291 518.72003174]
[50.93305969 506.60345459]
[57.62252045 492.26605225]
[56.50687408 477.30758667]
[55.39122391 462.34915161]
[46.72874451 450.23260498]
[53.41820526 435.89517212]
[52.30255508 420.93670654]
[51.18690491 405.97827148]
[44.01796722 419.15423584]
[31.89289474 427.98501587]
[17.15285301 430.76550293]
[2.64391112 426.95886230]
[-8.83247948 417.30004883]
[-15.06040955 403.65408325]
[-14.83736229 388.65573120]
[-8.20640469 375.20095825]
[3.55212927 365.88769531]
[18.16785049 362.51419067]
[32.81869125 365.73175049]
[44.67580795 374.91918945]
[51.45008087 388.30374146]
[53.01060486 373.38516235]
[54.57112885 358.46655273]
[56.13165283 343.54794312]
[46.00208282 336.85711670]
[39.64083481 326.43273926]
[38.30748749 314.22116089]
[42.31608582 302.53308105]
[50.96394730 293.60656738]
[62.65402603 289.17825317]
[64.65804291 274.31274414]
[62.43635178 267.26391602]
[66.80414581 259.24142456]
[69.02926636 244.40739441]
[71.25438690 229.57334900]
[73.47949982 214.73930359]
[75.70462036 199.90525818]
[77.92973328 185.07121277]
[80.15485382 170.23716736]
[78.03836060 163.15605164]
[82.52511597 155.19949341]
[80.51428223 148.08764648]
[85.11899567 140.19877625]
[87.78479004 125.43755341]
[90.45059204 110.67633820]
[85.90407562 97.45435333]
[94.78819275 86.65786743]
[97.45398712 71.89665222]
[95.89952087 62.89545822]
[100.27092743 56.93621063]
[103.15619659 42.21632004]
[106.04147339 27.49642944]
[108.92674255 12.77653694]
[111.81201935 -1.94335401]
[98.09687042 4.13075066]
[84.72675323 -2.66925001]
[81.55762482 -17.33064842]
[90.92563629 -29.04560661]
[105.92504883 -29.17829514]
[115.49844360 -17.63249969]
[114.75322723 -26.73648071]
[119.63885498 -32.28196716]
[123.82586670 -46.68574905]
[128.01287842 -61.08953094]
[132.19989014 -75.49331665]
[136.38690186 -89.89709473]
[132.80923462 -105.30848694]
[143.79161072 -115.37013245]
[147.97862244 -129.77391052]
[152.16563416 -144.17768860]
[156.35264587 -158.58148193]
[160.53965759 -172.98526001]
[164.72666931 -187.38903809]
[168.91368103 -201.79281616]
[172.88577271 -216.25735474]
[176.64207458 -230.77940369]
[180.39837646 -245.30146790]
[184.04646301 -259.85107422]
[187.58613586 -274.42745972]
[191.12580872 -289.00384521]
[194.66548157 -303.58020020]
[186.70578003 -316.96978760]
[190.50315857 -331.70190430]
[203.31713867 -339.20773315]
[206.85681152 -353.78411865]
[193.07952881 -359.81384277]
[180.55873108 -368.14456177]
[169.67488098 -378.52304077]
[160.75874329 -390.63391113]
[154.08126831 -404.10916138]
[149.84536743 -418.53927612]
[148.17976379 -433.48574829]
[149.13510132 -448.49438477]
[152.68231201 -463.10903931]
[158.71362305 -476.88562012]
[167.04573059 -489.40548706]
[177.42546082 -500.28814697]
[189.53735352 -509.20291138]
[203.01336670 -515.87884521]
[217.44395447 -520.11315918]
[232.39060974 -521.77703857]
[247.39912415 -520.82000732]
[262.01339722 -517.27111816]
[275.78927612 -511.23825073]
[288.30819702 -502.90472412]
[299.18969727 -492.52377319]
[308.10308838 -480.41085815]
[314.77752686 -466.93411255]
[319.01013184 -452.50302124]
[320.67233276 -437.55618286]
[319.71362305 -422.54779053]
[316.16308594 -407.93392944]
[310.12866211 -394.15869141]
[301.79370117 -381.64071655]
[291.41149902 -370.76040649]
[279.29757690 -361.84838867]
[265.82006836 -355.17550659]
[251.38850403 -350.94451904]
[236.44146729 -349.28399658]
[221.43318176 -350.24444580]
[217.89350891 -335.66806030]
[225.83799744 -323.12130737]
[222.45590210 -308.28836060]
[209.24185181 -300.04052734]
[205.70217896 -285.46417236]
[202.16250610 -270.88778687]
[198.62283325 -256.31140137]
[200.09915161 -249.06970215]
[194.92044067 -241.54516602]
[191.16413879 -227.02310181]
[187.40783691 -212.50105286]
[189.01670837 -208.00431824]
[187.81785583 -202.44915771]
[183.31745911 -197.60581970]
[179.13044739 -183.20202637]
[174.94343567 -168.79824829]
[170.75642395 -154.39447021]
[166.56941223 -139.99067688]
[162.38240051 -125.58689880]
[158.19538879 -111.18312073]
[162.07254028 -96.80198669]
[150.79067993 -85.71008301]
[146.60366821 -71.30630493]
[142.41665649 -56.90251923]
[138.22964478 -42.49873734]
[134.04263306 -28.09495735]
[129.96296692 -13.66040421]
[126.53190613 0.94191855]
[123.64663696 15.66180992]
[120.76136017 30.38170052]
[117.87609100 45.10159302]
[114.99081421 59.82148361]
[112.21520996 74.56244659]
[109.54940796 89.32366180]
[114.09592438 102.54564667]
[105.21180725 113.34213257]
[102.54601288 128.10334778]
[99.88021851 142.86456299]
[97.32438660 157.64521790]
[94.98889923 172.46228027]
[92.76377869 187.29632568]
[90.53865814 202.13037109]
[88.31354523 216.96441650]
[86.08842468 231.79846191]
[83.86331177 246.63250732]
[81.63819122 261.46655273]
[79.52356720 276.31674194]
[77.51955414 291.18228149]
[91.00055695 303.30746460]
[94.47393036 320.94308472]
[86.73413849 336.99136353]
[71.05025482 345.10845947]
[69.48973083 360.02706909]
[67.92920685 374.94567871]
[66.36869049 389.86428833]
[66.14536285 404.86260986]
[67.26100922 419.82107544]
[68.37665558 434.77951050]
[77.11893463 447.96600342]
[70.34967804 461.23348999]
[71.46532440 476.19195557]
[72.58097839 491.15039062]
[81.32325745 504.33688354]
[74.55399323 517.60437012]
[75.66964722 532.56280518]
[90.53603363 535.06359863]
[104.37168121 541.05010986]
[116.37220001 550.17431641]
[125.83989716 561.90570068]
[132.22433472 575.56231689]
[135.15432739 590.35009766]
[134.45951843 605.40930176]
[130.18031311 619.86450195]
[122.56550598 632.87518311]
[112.05780029 643.68499756]
[99.26811218 651.66540527]
[84.94000244 656.35247803]
[69.90650177 657.47375488]
[55.04162598 654.96392822]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 196]
[11 195]
[13 193]
[14 192]
[15 191]
[17 189]
[18 188]
[19 187]
[32 186]
[33 185]
[34 184]
[35 183]
[41 179]
[42 178]
[44 177]
[45 176]
[46 175]
[47 174]
[48 173]
[49 172]
[50 171]
[52 170]
[54 169]
[55 168]
[56 167]
[58 165]
[59 164]
[61 163]
[62 162]
[63 161]
[64 160]
[65 159]
[71 158]
[73 157]
[74 156]
[75 155]
[76 154]
[77 153]
[79 151]
[80 150]
[81 149]
[82 148]
[83 147]
[84 146]
[85 145]
[86 142]
[87 141]
[88 140]
[89 138]
[90 137]
[91 136]
[92 135]
[95 132]
[96 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
