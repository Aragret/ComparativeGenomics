%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxUGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[107.42072296 552.71545410]
[101.59642792 538.56146240]
[103.02852631 523.32305908]
[111.38791656 510.50201416]
[124.75367737 503.04449463]
[124.30707550 488.05114746]
[123.86046600 473.05776978]
[123.41386414 458.06442261]
[115.30105591 445.57318115]
[122.62403870 431.54873657]
[121.84272003 416.56912231]
[120.72707367 401.61065674]
[110.07935333 387.66101074]
[118.21257782 371.14031982]
[116.87434387 356.20013428]
[115.53610992 341.25994873]
[114.19787598 326.31979370]
[112.85963440 311.37960815]
[99.29016113 305.23672485]
[90.55929565 293.04541016]
[89.09325409 278.02151489]
[95.38541412 264.19021606]
[107.83710480 255.30747986]
[106.49887085 240.36729431]
[97.65695190 228.38105774]
[104.13220215 213.94563293]
[93.27798462 200.15603638]
[101.16432953 183.51611328]
[99.60380554 168.59751892]
[98.04328156 153.67890930]
[96.48276520 138.76029968]
[94.92224121 123.84169769]
[93.36171722 108.92309570]
[83.09938812 119.86313629]
[68.11208344 120.48015594]
[56.98521042 110.42069244]
[56.09275436 95.44726562]
[65.94594574 84.13733673]
[80.90043640 82.96974182]
[92.38916779 92.61249542]
[92.16584015 77.61415863]
[91.94251251 62.61582184]
[83.24787903 53.08869171]
[83.37064362 40.59194565]
[91.69960022 31.81954193]
[91.69960022 16.81954193]
[91.69960022 1.81954217]
[77.70528412 -4.04857683]
[67.05249786 -14.79851437]
[61.34243393 -28.77023125]
[61.41639328 -43.82287598]
[67.23196411 -57.66281509]
[77.87424469 -68.19312286]
[91.69960022 -73.83128357]
[91.69960022 -88.83128357]
[91.69960022 -103.83128357]
[88.73003387 -109.73833466]
[89.12945557 -115.40732574]
[91.92957306 -119.27622986]
[92.37618256 -134.26957703]
[92.71115875 -149.26583862]
[92.93448639 -164.26417542]
[93.15781403 -179.26251221]
[85.34695435 -166.45663452]
[73.27552032 -157.55267334]
[58.73424149 -153.87147522]
[43.88022995 -155.95912170]
[30.91698647 -163.50593567]
[21.76753235 -175.39237976]
[17.78913498 -189.85516357]
[19.57196617 -204.74884033]
[26.85155296 -217.86399841]
[38.54801178 -227.25511169]
[52.92624664 -231.52903748]
[67.85332489 -230.05177307]
[81.11490631 -223.04246521]
[90.74371338 -211.54089355]
[95.31115723 -197.25515747]
[98.63341522 -211.88261414]
[101.95567322 -226.51008606]
[105.27793121 -241.13754272]
[108.60019684 -255.76499939]
[111.92245483 -270.39245605]
[115.24471283 -285.01992798]
[118.56697083 -299.64736938]
[116.97947693 -306.06542969]
[118.62457275 -311.50515747]
[122.21204376 -314.65780640]
[125.96834564 -329.17987061]
[121.93341827 -344.47790527]
[132.61134338 -354.86206055]
[136.36764526 -369.38412476]
[140.12394714 -383.90618896]
[143.88024902 -398.42825317]
[147.63655090 -412.95028687]
[133.87371826 -418.99847412]
[121.25937653 -427.17617798]
[110.12027740 -437.27154541]
[100.74494171 -449.02313232]
[93.37622070 -462.12649536]
[88.20497894 -476.24221802]
[85.36516571 -491.00473022]
[84.93033600 -506.03161621]
[86.91175842 -520.93365479]
[91.25809479 -535.32476807]
[97.85678101 -548.83233643]
[106.53688812 -561.10638428]
[117.07358551 -571.82897949]
[129.19393921 -580.72241211]
[142.58401489 -587.55633545]
[156.89695740 -592.15368652]
[171.76203918 -594.39538574]
[186.79423523 -594.22344971]
[201.60414124 -591.64221191]
[215.80816650 -586.71862793]
[229.03840637 -579.58020020]
[240.95213318 -570.41180420]
[251.24076843 -559.45098877]
[259.63781738 -546.98156738]
[265.92575073 -533.32659912]
[269.94174194 -518.83978271]
[271.58172607 -503.89633179]
[270.80325317 -488.88333130]
[267.62646484 -474.18966675]
[262.13363647 -460.19592285]
[254.46708679 -447.26455688]
[244.82536316 -435.73052979]
[233.45823669 -425.89263916]
[220.66011047 -418.00564575]
[206.76251221 -412.27389526]
[192.12542725 -408.84585571]
[177.12796021 -407.81027222]
[162.15861511 -409.19400024]
[158.40231323 -394.67193604]
[154.64601135 -380.14987183]
[150.88970947 -365.62780762]
[147.13340759 -351.10577393]
[151.43701172 -336.84643555]
[140.49040222 -325.42355347]
[136.73410034 -310.90148926]
[133.19442749 -296.32513428]
[129.87217712 -281.69766235]
[126.54991150 -267.07019043]
[123.22765350 -252.44273376]
[119.90539551 -237.81527710]
[116.58313751 -223.18782043]
[113.26087189 -208.56036377]
[109.93861389 -193.93290710]
[108.15615082 -179.03918457]
[107.93282318 -164.04084778]
[107.70949554 -149.04251099]
[110.75305939 -142.30763245]
[107.36952972 -133.82296753]
[106.92292786 -118.82962036]
[106.69960022 -103.83128357]
[106.69960022 -88.83128357]
[106.69960022 -73.83128357]
[120.52495575 -68.19312286]
[131.16722107 -57.66281509]
[136.98280334 -43.82287598]
[137.05676270 -28.77023125]
[131.34669495 -14.79851437]
[120.69391632 -4.04857683]
[106.69960022 1.81954217]
[106.69960022 16.81954193]
[106.69960022 31.81954193]
[116.28028870 46.52251053]
[106.94084930 62.39249039]
[107.16417694 77.39083099]
[107.38750458 92.38916779]
[108.28031921 107.36257172]
[109.84084320 122.28118134]
[111.40136719 137.19978333]
[112.96189117 152.11839294]
[114.52241516 167.03698730]
[116.08293915 181.95559692]
[125.59286499 190.66903687]
[126.58549500 203.12690735]
[119.07238770 212.60739136]
[128.01002502 225.66224670]
[121.43905640 239.02905273]
[122.77729034 253.96923828]
[136.60939026 260.49765015]
[145.25949097 272.99057007]
[146.48681641 288.03582764]
[140.06156921 301.58471680]
[127.79981995 310.04135132]
[129.13806152 324.98153687]
[130.47628784 339.92172241]
[131.81452942 354.86190796]
[133.15275574 369.80209351]
[142.53190613 378.65615845]
[143.33894348 391.12744141]
[135.68551636 400.49502563]
[136.80117798 415.45346069]
[139.74156189 419.76638794]
[140.64338684 424.32049561]
[139.75614929 428.29891968]
[137.61738586 431.10214233]
[145.76214600 444.66583252]
[138.40721130 457.61782837]
[138.85382080 472.61117554]
[139.30043030 487.60452271]
[139.74702454 502.59786987]
[153.53297424 509.24664307]
[162.64067078 521.54742432]
[164.97723389 536.67352295]
[160.00572205 551.14910889]
[148.86857605 561.64776611]
[134.12501526 565.75708008]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 204]
[6 203]
[7 202]
[8 201]
[10 199]
[11 195]
[12 194]
[14 191]
[15 190]
[16 189]
[17 188]
[18 187]
[23 182]
[24 181]
[26 179]
[28 176]
[29 175]
[30 174]
[31 173]
[32 172]
[33 171]
[40 170]
[41 169]
[42 168]
[45 166]
[46 165]
[47 164]
[54 157]
[55 156]
[56 155]
[59 154]
[60 153]
[61 151]
[62 150]
[63 149]
[78 148]
[79 147]
[80 146]
[81 145]
[82 144]
[83 143]
[84 142]
[85 141]
[88 140]
[89 139]
[91 137]
[92 136]
[93 135]
[94 134]
[95 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
