%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUAAUCAGUAACAACCCACCACUAAUCAGCCAACAACUACUCUAUAAACCUCCACCCCUAGUUAUCUCCCCCUUUAUCUUACUAGUCAUGACGCCxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[140.98925781 857.31707764]
[126.39105988 853.85382080]
[111.99229431 849.63745117]
[97.83177948 844.67950439]
[83.94769287 838.99316406]
[70.37745667 832.59393311]
[57.15766525 825.49890137]
[44.32395172 817.72729492]
[31.91090965 809.30004883]
[19.95200729 800.23992920]
[8.47948265 790.57122803]
[-2.47573709 780.32012939]
[-12.88411713 769.51422119]
[-22.71759987 758.18267822]
[-31.94967270 746.35595703]
[-40.55545044 734.06604004]
[-48.51173401 721.34600830]
[-55.79707336 708.23010254]
[-62.39182663 694.75378418]
[-68.27821350 680.95336914]
[-73.44037628 666.86596680]
[-77.86438751 652.52966309]
[-81.53832245 637.98303223]
[-84.45228577 623.26538086]
[-86.59840393 608.41625977]
[-87.97090912 593.47576904]
[-88.56609344 578.48419189]
[-88.38235474 563.48187256]
[-87.42018890 548.50939941]
[-85.68218231 533.60699463]
[-83.17303467 518.81488037]
[-79.89949036 504.17297363]
[-75.87039185 489.72070312]
[-71.09659576 475.49703979]
[-65.59096527 461.54031372]
[-59.36835098 447.88815308]
[-52.44552231 434.57739258]
[-44.84114838 421.64392090]
[-36.57572174 409.12252808]
[-27.67152977 397.04705811]
[-18.15257454 385.45001221]
[-8.04451752 374.36267090]
[2.62539101 363.81491089]
[13.82838631 353.83520508]
[25.53426743 344.45040894]
[37.71147919 335.68585205]
[50.32719040 327.56515503]
[63.34738922 320.11019897]
[76.73698425 313.34109497]
[90.45986938 307.27609253]
[104.47905731 301.93154907]
[118.75675201 297.32183838]
[133.25447083 293.45941162]
[130.15036011 278.78411865]
[127.04624939 264.10882568]
[123.94213867 249.43351746]
[120.83802795 234.75820923]
[107.18463898 228.86558533]
[99.52854919 215.90995789]
[100.98629761 200.75317383]
[111.20746613 189.22779846]
[108.10335541 174.55250549]
[104.99924469 159.87719727]
[101.89513397 145.20188904]
[87.85379791 143.58064270]
[74.99804688 137.70550537]
[64.58273315 128.14994812]
[57.62447357 115.84669495]
[54.80247498 101.99665070]
[56.39218521 87.95170593]
[62.23843384 75.08279419]
[71.77057648 64.64604187]
[84.05817413 57.66017151]
[81.17290497 42.94028091]
[78.28762817 28.22038841]
[75.40235901 13.50049686]
[72.51708221 -1.21939421]
[69.63181305 -15.93928528]
[59.38451385 -27.99347305]
[64.52922058 -41.97135925]
[61.64394379 -56.69124985]
[58.75867081 -71.41114044]
[55.87339783 -86.13103485]
[52.98812485 -100.85092163]
[37.93597031 -100.98326874]
[23.21864891 -104.14321899]
[9.43882275 -110.20137787]
[-2.83923030 -118.90966797]
[-13.11273289 -129.91148376]
[-20.96099091 -142.75631714]
[-26.06262207 -156.91818237]
[-28.20871925 -171.81713867]
[-27.31140137 -186.84310913]
[-23.40741158 -201.38078308]
[-16.65661812 -214.83483887]
[-7.33545923 -226.65434265]
[4.17436838 -236.35531616]
[17.40154457 -243.54048157]
[31.80442429 -247.91563416]
[46.79322052 -249.30160522]
[61.75415039 -247.64163208]
[76.07456970 -243.00370789]
[89.16806793 -235.57772827]
[100.49848175 -225.66780090]
[109.60182953 -213.67971802]
[116.10533905 -200.10440063]
[119.74269104 -185.49774170]
[120.36494446 -170.45787048]
[117.94661713 -155.60066223]
[112.58673096 -141.53451538]
[104.50477600 -128.83543396]
[94.03170013 -118.02341461]
[81.59637451 -109.54122162]
[67.70801544 -103.73619843]
[70.59329224 -89.01630402]
[73.47856140 -74.29641724]
[76.36383820 -59.57652283]
[79.24910736 -44.85663223]
[89.29003143 -33.85530853]
[84.35169983 -18.82455826]
[87.23697662 -4.10466671]
[90.12224579 10.61522484]
[93.00752258 25.33511543]
[95.89279175 40.05500793]
[98.77806854 54.77489853]
[114.32547760 57.08632278]
[128.14369202 64.57775879]
[138.56475830 76.34492493]
[144.33074951 90.96743774]
[144.74569702 106.68025208]
[139.75949097 121.58670807]
[129.97401428 133.88748169]
[116.57043457 142.09777832]
[119.67454529 156.77308655]
[122.77865601 171.44839478]
[125.88276672 186.12368774]
[139.89537048 192.52314758]
[147.36558533 205.79150391]
[145.61126709 220.73760986]
[135.51332092 231.65409851]
[138.61743164 246.32940674]
[141.72154236 261.00469971]
[144.82565308 275.67999268]
[147.92976379 290.35531616]
[162.74974060 288.01647949]
[177.67114258 286.45001221]
[192.65373230 285.66012573]
[207.65713501 285.64895630]
[222.64088440 286.41656494]
[237.56459045 287.96081543]
[252.38803101 290.27761841]
[267.07122803 293.36068726]
[281.57464600 297.20169067]
[295.85913086 301.79031372]
[309.88616943 307.11419678]
[323.61801147 313.15893555]
[337.01757812 319.90826416]
[350.04876709 327.34399414]
[362.67645264 335.44604492]
[374.86657715 344.19262695]
[386.58630371 353.56015015]
[397.80401611 363.52331543]
[408.48947144 374.05529785]
[418.61389160 385.12771606]
[428.14993286 396.71069336]
[437.07192993 408.77304077]
[445.35583496 421.28219604]
[452.97927856 434.20443726]
[459.92175293 447.50497437]
[466.16452026 461.14791870]
[471.69073486 475.09649658]
[476.48550415 489.31311035]
[480.53594971 503.75942993]
[483.83108521 518.39648438]
[486.36206055 533.18487549]
[488.12207031 548.08465576]
[489.10632324 563.05578613]
[489.31219482 578.05773926]
[488.73913574 593.05017090]
[487.38870239 607.99267578]
[485.26449585 622.84497070]
[482.37225342 637.56695557]
[478.71978760 652.11895752]
[474.31692505 666.46179199]
[469.17556763 680.55676270]
[463.30957031 694.36590576]
[456.73471069 707.85192871]
[449.46871948 720.97851562]
[441.53121948 733.71026611]
[432.94360352 746.01293945]
[423.72897339 757.85321045]
[413.91223145 769.19927979]
[403.51980591 780.02056885]
[392.57974243 790.28784180]
[381.12149048 799.97338867]
[369.17596436 809.05120850]
[356.77539062 817.49676514]
[343.95315552 825.28729248]
[330.74383545 832.40179443]
[317.18307495 838.82104492]
[303.30740356 844.52783203]
[289.15420532 849.50677490]
[274.76168823 853.74432373]
[260.16860962 857.22918701]
[245.41432190 859.95184326]
[230.53860474 861.90509033]
[215.58157349 863.08355713]
[200.58351135 863.48413086]
[185.58489990 863.10571289]
[170.62612915 861.94927979]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 144]
[54 143]
[55 142]
[56 141]
[57 140]
[61 136]
[62 135]
[63 134]
[64 133]
[73 125]
[74 124]
[75 123]
[76 122]
[77 121]
[78 120]
[80 118]
[81 117]
[82 116]
[83 115]
[84 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
