%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[158.74908447 522.29779053]
[157.06871033 507.37719727]
[157.01142883 492.36239624]
[158.57788086 477.42944336]
[161.74972534 462.75335693]
[166.48976135 448.50628662]
[172.74241638 434.85522461]
[180.43438721 421.96023560]
[189.47547913 409.97250366]
[199.75970459 399.03256226]
[211.16645813 389.26870728]
[223.56202698 380.79537964]
[216.48492432 367.56985474]
[209.40782166 354.34432983]
[202.33071899 341.11880493]
[195.25360107 327.89328003]
[190.99009705 342.27459717]
[178.54975891 350.65539551]
[163.62013245 349.20407104]
[153.02685547 338.58416748]
[151.61302185 323.65093994]
[160.02502441 311.23168945]
[174.41700745 307.00430298]
[188.21051025 312.90274048]
[182.54771423 299.01272583]
[176.88493347 285.12268066]
[171.22213745 271.23266602]
[165.55935669 257.34265137]
[159.89657593 243.45260620]
[153.82273865 229.73735046]
[147.34324646 216.20899963]
[140.86373901 202.68064880]
[128.38780212 194.54431152]
[129.40478516 178.75582886]
[116.92883301 170.61947632]
[117.94581604 154.83099365]
[111.46632385 141.30264282]
[104.98682404 127.77430725]
[98.50733185 114.24595642]
[87.08138275 106.18746185]
[87.96432495 92.23353577]
[81.48483276 78.70519257]
[75.00533295 65.17684937]
[68.52584076 51.64850235]
[56.64217377 46.63438416]
[51.52389526 35.23320007]
[55.41726303 23.78033066]
[49.13990021 10.15701389]
[42.86254120 -3.46630239]
[36.58517838 -17.08961868]
[29.70576668 -30.41904831]
[22.23802567 -43.42800140]
[14.77028465 -56.43695450]
[7.20590591 -69.38995361]
[-0.45469162 -82.28627777]
[-8.11528873 -95.18260193]
[-15.77588654 -108.07893372]
[-28.05949974 -112.01284790]
[-34.17453003 -122.91193390]
[-31.31846619 -134.66648865]
[-38.78620911 -147.67543030]
[-46.25394821 -160.68438721]
[-53.72169113 -173.69334412]
[-61.18943024 -186.70230103]
[-75.06537628 -180.95021057]
[-89.56297302 -177.01982117]
[-104.44416046 -174.97566223]
[-119.46457672 -174.85130310]
[-134.37756348 -176.64878845]
[-148.93826294 -180.33859253]
[-162.90753174 -185.86015320]
[-176.05603027 -193.12277222]
[-188.16780090 -202.00718689]
[-199.04399109 -212.36753845]
[-208.50599670 -224.03367615]
[-216.39843750 -236.81404114]
[-222.59172058 -250.49876404]
[-226.98413086 -264.86312866]
[-229.50355530 -279.67126465]
[-230.10862732 -294.67999268]
[-228.78939819 -309.64288330]
[-225.56752014 -324.31420898]
[-220.49592590 -338.45306396]
[-213.65788269 -351.82727051]
[-205.16567993 -364.21722412]
[-195.15876770 -375.41946411]
[-183.80146790 -385.25003052]
[-171.28025818 -393.54748535]
[-157.80078125 -400.17562866]
[-143.58436584 -405.02554321]
[-128.86447144 -408.01766968]
[-113.88278961 -409.10281372]
[-98.88533783 -408.26318359]
[-84.11840820 -405.51257324]
[-69.82446289 -400.89611816]
[-56.23823547 -394.48965454]
[-43.58282089 -386.39837646]
[-32.06602859 -376.75515747]
[-21.87698174 -365.71832275]
[-13.18298817 -353.46911621]
[-6.12681389 -340.20870972]
[-0.82432699 -326.15481567]
[2.63740134 -311.53820801]
[4.20152569 -296.59893799]
[3.84236264 -281.58230591]
[1.56580901 -266.73489380]
[-2.59075141 -252.30052185]
[-8.55906487 -238.51618958]
[-16.24112511 -225.60827637]
[-25.51078796 -213.78874207]
[-36.21583557 -203.25164795]
[-48.18047714 -194.17002869]
[-40.71273804 -181.16108704]
[-33.24499512 -168.15213013]
[-25.77725410 -155.14317322]
[-18.30951309 -142.13423157]
[-2.68066478 -134.15261841]
[-2.87955952 -115.73953247]
[4.78103781 -102.84320068]
[12.44163513 -89.94687653]
[20.10223198 -77.05055237]
[26.22089195 -72.90521240]
[27.77923775 -63.90469360]
[35.24697876 -50.89574051]
[42.71471786 -37.88678741]
[47.66822815 -52.04527664]
[61.12203979 -58.67814255]
[75.36920929 -53.98577499]
[82.24829865 -40.65618134]
[77.81866455 -26.32515526]
[64.61779785 -19.20215988]
[50.20849609 -23.36697960]
[56.48585510 -9.74366283]
[62.76321793 3.87965298]
[69.04058075 17.50296974]
[83.89501953 26.84708214]
[82.05418396 45.16900635]
[88.53367615 58.69734955]
[95.01317596 72.22569275]
[101.49266815 85.75404358]
[112.91861725 93.81253815]
[112.03567505 107.76646423]
[118.51516724 121.29480743]
[124.99466705 134.82315063]
[131.47416687 148.35150146]
[144.41355896 157.45547485]
[142.93312073 172.27632141]
[155.87252808 181.38031006]
[154.39208984 196.20115662]
[160.87158203 209.72950745]
[167.35108948 223.25784302]
[171.01858521 225.58236694]
[173.50550842 228.64500427]
[174.72477722 231.98397827]
[174.74822998 235.15669250]
[173.78659058 237.78982544]
[179.44938660 251.67985535]
[185.11216736 265.56988525]
[190.77496338 279.45989990]
[196.43774414 293.34994507]
[202.10052490 307.23995972]
[208.47914124 320.81616211]
[215.55624390 334.04168701]
[222.63334656 347.26721191]
[229.71044922 360.49273682]
[236.78755188 373.71826172]
[250.71424866 368.10629272]
[265.16607666 364.03298950]
[279.97360229 361.54608154]
[294.96319580 360.67477417]
[309.95913696 361.42926025]
[324.78558350 363.80068970]
[339.26870728 367.76129150]
[353.23870850 373.26455688]
[366.53179932 380.24606323]
[378.99212646 388.62387085]
[390.47357178 398.29977417]
[400.84155273 409.16036987]
[409.97448730 421.07827759]
[417.76531982 433.91378784]
[424.12271118 447.51638794]
[428.97207642 461.72662354]
[432.25659180 476.37786865]
[433.93777466 491.29837036]
[433.99588013 506.31314087]
[432.43020630 521.24621582]
[429.25915527 535.92242432]
[424.51989746 550.16973877]
[418.26797485 563.82116699]
[410.57669067 576.71655273]
[401.53625488 588.70477295]
[391.25262451 599.64526367]
[379.84637451 609.40979004]
[367.45126343 617.88372803]
[354.21261597 624.96789551]
[340.28561401 630.57910156]
[325.83355713 634.65167236]
[311.02590942 637.13775635]
[296.03625488 638.00823975]
[281.04037476 637.25292969]
[266.21405029 634.88073730]
[251.73112488 630.91937256]
[237.76142883 625.41534424]
[224.46870422 618.43310547]
[212.00885010 610.05462646]
[200.52790833 600.37811279]
[190.16050720 589.51696777]
[181.02821350 577.59857178]
[173.23806763 564.76263428]
[166.88142395 551.15966797]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 166]
[13 165]
[14 164]
[15 163]
[16 162]
[24 161]
[25 160]
[26 159]
[27 158]
[28 157]
[29 156]
[30 151]
[31 150]
[32 149]
[34 147]
[36 145]
[37 144]
[38 143]
[39 142]
[41 140]
[42 139]
[43 138]
[44 137]
[47 135]
[48 134]
[49 133]
[50 132]
[51 125]
[52 124]
[53 123]
[54 121]
[55 120]
[56 119]
[57 118]
[60 116]
[61 115]
[62 114]
[63 113]
[64 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
