%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGCUGACACUCACGCAAGCAUCAAACUCAAACGAUCCGUCUUAUCAUUACUCCUACAUUCGGGCACCCGCUAAUACUCUUACUGACGCGGCCACUUCGxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[-67.22769165 369.09899902]
[-61.99877930 383.17456055]
[-58.35006332 397.73995972]
[-56.32583237 412.61831665]
[-55.95065689 427.62905884]
[-57.22909546 442.58996582]
[-60.14562607 457.31942749]
[-64.66484833 471.63864136]
[-70.73189545 485.37377930]
[-78.27312469 498.35812378]
[-87.19699860 510.43402100]
[-97.39517212 521.45495605]
[-108.74386597 531.28704834]
[-121.10530853 539.81097412]
[-134.32945251 546.92333984]
[-148.25575256 552.53771973]
[-162.71516418 556.58599854]
[-177.53218079 559.01898193]
[-192.52690125 559.80725098]
[-207.51733398 558.94110107]
[-222.32150269 556.43115234]
[-236.75967407 552.30780029]
[-250.65661621 546.62109375]
[-263.84362793 539.44012451]
[-276.16061401 530.85205078]
[-287.45806885 520.96112061]
[-297.59881592 509.88735962]
[-306.45983887 497.76522827]
[-313.93347168 484.74188232]
[-319.92907715 470.97540283]
[-324.37384033 456.63290405]
[-327.21377563 441.88848877]
[-328.41445923 426.92114258]
[-327.96130371 411.91253662]
[-325.85977173 397.04489136]
[-322.13540649 382.49868774]
[-316.83343506 368.45046997]
[-310.01818848 355.07080078]
[-301.77239990 342.52209473]
[-292.19619751 330.95666504]
[-281.40576172 320.51492310]
[-269.53216553 311.32357788]
[-256.71945190 303.49426270]
[-243.12322998 297.12200928]
[-228.90852356 292.28414917]
[-214.24786377 289.03939819]
[-199.31922913 287.42718506]
[-184.30384827 287.46704102]
[-169.38400269 289.15850830]
[-154.74076843 292.48104858]
[-140.55194092 297.39431763]
[-126.98974609 303.83868408]
[-114.21880341 311.73593140]
[-102.39415741 320.99017334]
[-91.90665436 310.26577759]
[-81.41915131 299.54141235]
[-78.05252075 285.03228760]
[-62.87204742 280.57537842]
[-52.38454819 269.85101318]
[-41.89704514 259.12661743]
[-31.81590652 248.01939392]
[-22.15509605 236.54469299]
[-12.49428558 225.06999207]
[-10.21611500 210.35064697]
[4.59082174 204.77702332]
[14.16594124 193.23072815]
[23.65484047 181.61346436]
[33.14373779 169.99620056]
[42.63263702 158.37893677]
[52.12153625 146.76167297]
[61.61043167 135.14440918]
[71.09933472 123.52714539]
[80.58822632 111.90988159]
[77.25462341 101.14448547]
[79.49076080 90.09883118]
[86.74906921 81.47771454]
[97.25218964 77.39221954]
[108.42816925 78.84278107]
[118.25875092 67.51318359]
[128.08934021 56.18359375]
[131.28955078 40.68942642]
[145.47468567 36.14725113]
[155.30526733 24.81765747]
[165.13584900 13.48806381]
[174.96641541 2.15847087]
[178.22692871 -6.37422514]
[185.02868652 -9.26521587]
[195.02687073 -20.44719124]
[198.45741272 -35.89199448]
[212.70858765 -40.22246933]
[216.13914490 -55.66727448]
[230.39031982 -59.99775314]
[240.38848877 -71.17972565]
[250.38667297 -82.36170197]
[260.38482666 -93.54367828]
[270.38302612 -104.72564697]
[260.14904785 -115.70659637]
[250.95603943 -127.57268524]
[242.88018799 -140.22557068]
[235.98838806 -153.56042480]
[230.33775330 -167.46675110]
[225.97511292 -181.82928467]
[222.93661499 -196.52903748]
[221.24745178 -211.44419861]
[220.92160034 -226.45117188]
[221.96177673 -241.42558289]
[224.35934448 -256.24337769]
[228.09445190 -270.78173828]
[233.13613892 -284.92022705]
[239.44262695 -298.54165649]
[246.96166992 -311.53317261]
[255.63095093 -323.78710938]
[265.37863159 -335.20190430]
[276.12393188 -345.68301392]
[287.77783203 -355.14355469]
[300.24374390 -363.50515747]
[313.41836548 -370.69851685]
[327.19256592 -376.66400146]
[341.45214844 -381.35223389]
[356.07897949 -384.72433472]
[370.95184326 -386.75234985]
[385.94754028 -387.41946411]
[400.94174194 -386.72021484]
[415.81024170 -384.66030884]
[430.42980957 -381.25689697]
[444.67932129 -376.53811646]
[458.44067383 -370.54312134]
[471.59985352 -363.32156372]
[484.04782104 -354.93325806]
[495.68142700 -345.44775391]
[506.40423584 -334.94366455]
[516.12744141 -323.50796509]
[524.77044678 -311.23550415]
[532.26159668 -298.22790527]
[538.53887939 -284.59298706]
[543.55029297 -270.44372559]
[547.25421143 -255.89738464]
[549.62005615 -241.07449341]
[550.62811279 -226.09788513]
[550.27008057 -211.09164429]
[548.54895020 -196.18014526]
[545.47900391 -181.48692322]
[541.08557129 -167.13377380]
[535.40515137 -153.23959351]
[528.48480225 -139.91954041]
[520.38183594 -127.28398132]
[511.16342163 -115.43762970]
[500.90594482 -104.47863770]
[489.69439697 -94.49782562]
[477.62170410 -85.57789612]
[464.78790283 -77.79276276]
[451.29928589 -71.20693970]
[437.26770020 -65.87500000]
[422.80938721 -61.84112549]
[408.04412842 -59.13874435]
[393.09432983 -57.79024506]
[378.08383179 -57.80680847]
[363.13702393 -59.18829346]
[348.37777710 -61.92325592]
[333.92840576 -65.98902893]
[319.90859985 -71.35192108]
[306.43457031 -77.96749115]
[293.61798096 -85.78092957]
[281.56497192 -94.72747803]
[271.56680298 -83.54550171]
[261.56863403 -72.36352539]
[251.57046509 -61.18155289]
[241.57229614 -49.99958038]
[238.85688782 -35.35458755]
[223.89056396 -30.22429848]
[221.17515564 -15.57930660]
[206.20883179 -10.44901848]
[196.21066284 0.73295599]
[186.29602051 11.98905182]
[176.46543884 23.31864548]
[166.63485718 34.64823914]
[156.80427551 45.97783279]
[154.30720520 60.66162872]
[139.41893005 66.01417542]
[129.58834839 77.34376526]
[119.75776672 88.67336273]
[121.80348206 106.57801056]
[110.19689178 120.36383057]
[92.20549011 121.39878082]
[82.71659851 133.01603699]
[73.22769928 144.63330078]
[63.73880005 156.25056458]
[54.24990082 167.86782837]
[44.76100159 179.48509216]
[35.27210236 191.10235596]
[25.78320503 202.71961975]
[22.77819252 211.34561157]
[16.06552124 214.43783569]
[13.09634495 229.97793579]
[-1.01958549 234.73080444]
[-10.68039608 246.20550537]
[-20.34120560 257.68020630]
[-5.40099478 259.01812744]
[2.99503803 271.44821167]
[-1.34235084 285.80743408]
[-15.21579933 291.51071167]
[-28.39831734 284.35382080]
[-31.17266464 269.61413574]
[-41.66016769 280.33850098]
[-52.14766693 291.06289673]
[-56.26443863 306.33911133]
[-70.69477081 310.02890015]
[-81.18227386 320.75329590]
[-91.66977692 331.47766113]
[-82.15378571 343.09271240]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[54 209]
[55 208]
[56 207]
[58 205]
[59 204]
[60 203]
[61 197]
[62 196]
[63 195]
[65 193]
[66 191]
[67 190]
[68 189]
[69 188]
[70 187]
[71 186]
[72 185]
[73 184]
[78 181]
[79 180]
[80 179]
[82 177]
[83 176]
[84 175]
[85 174]
[87 173]
[88 172]
[90 170]
[92 168]
[93 167]
[94 166]
[95 165]
[96 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
