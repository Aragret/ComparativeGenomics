%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[-26.26526833 375.06015015]
[-18.64252853 388.00906372]
[-12.94027805 401.91104126]
[-9.27460957 416.48306274]
[-7.72015047 431.42843628]
[-8.30854797 446.44293213]
[-11.02782154 461.22082520]
[-15.82261181 475.46127319]
[-22.59530258 488.87438965]
[-31.20800972 501.18707275]
[-41.48539352 512.14862061]
[-53.21821213 521.53594971]
[-66.16760254 529.15789795]
[-80.06993866 534.85931396]
[-94.64218140 538.52404785]
[-109.58766174 540.07757568]
[-124.60210419 539.48828125]
[-139.37983704 536.76806641]
[-153.61999512 531.97241211]
[-167.03268433 525.19891357]
[-179.34483337 516.58538818]
[-190.30577087 506.30734253]
[-199.69236755 494.57394409]
[-207.31349182 481.62408447]
[-213.01402283 467.72140503]
[-216.67788696 453.14892578]
[-218.23049927 438.20336914]
[-217.64024353 423.18896484]
[-214.91914368 408.41137695]
[-210.12258911 394.17150879]
[-203.34823608 380.75924683]
[-194.73400879 368.44763184]
[-184.45527649 357.48733521]
[-172.72128296 348.10147095]
[-159.77095032 340.48114014]
[-145.86790466 334.78146362]
[-131.29521179 331.11849976]
[-116.34954071 329.56683350]
[-101.33517456 330.15802002]
[-86.55777740 332.88003540]
[-72.31820679 337.67745972]
[-58.90636063 344.45263672]
[-50.30779648 332.16180420]
[-49.35190582 317.29791260]
[-35.10126877 310.42550659]
[-26.50270462 298.13467407]
[-17.90414047 285.84381104]
[-9.30557728 273.55297852]
[-1.74119806 260.59997559]
[4.73829794 247.07164001]
[11.21779346 233.54330444]
[-3.25285912 237.49301147]
[-16.34586334 230.17362976]
[-20.56094933 215.77804565]
[-13.48352718 202.55268860]
[0.83213568 198.07363892]
[14.18537712 204.90672302]
[18.92691803 219.13667297]
[26.58751488 206.24034119]
[34.24811172 193.34400940]
[41.90871048 180.44769287]
[42.62208939 173.09153748]
[49.78058624 167.41758728]
[57.63233948 154.63674927]
[57.70182037 139.74230957]
[71.51814270 132.03387451]
[79.36989594 119.25302887]
[87.22164917 106.47219086]
[87.79519653 92.50212860]
[99.99750519 85.67605591]
[107.46524811 72.66710663]
[114.54235077 59.44157410]
[121.61945343 46.21604919]
[128.69656372 32.99052048]
[135.77366638 19.76499367]
[131.42060852 4.80876970]
[138.78619385 -8.50298023]
[153.07150269 -12.56078815]
[152.76052856 -28.37893867]
[165.58734131 -35.95008469]
[172.36732483 -49.33035660]
[178.84681702 -62.85870361]
[173.83027649 -77.60563660]
[180.59411621 -91.23300171]
[194.68397522 -95.92462921]
[201.16348267 -109.45298004]
[207.64297485 -122.98132324]
[214.12246704 -136.50967407]
[220.60195923 -150.03800964]
[227.08146667 -163.56636047]
[233.56095886 -177.09471130]
[220.77178955 -184.95948792]
[208.87478638 -194.11804199]
[198.00030518 -204.47001648]
[188.26750183 -215.90199280]
[179.78298950 -228.28871155]
[172.63973999 -241.49446106]
[166.91603088 -255.37455750]
[162.67456055 -269.77691650]
[159.96180725 -284.54370117]
[158.80747986 -299.51318359]
[159.22424316 -314.52133179]
[161.20753479 -329.40365601]
[164.73561096 -343.99716187]
[169.76980591 -358.14193726]
[176.25498962 -371.68301392]
[184.12008667 -384.47198486]
[193.27893066 -396.36874390]
[203.63116455 -407.24298096]
[215.06338501 -416.97552490]
[227.45030212 -425.45971680]
[240.65623474 -432.60266113]
[254.53645325 -438.32601929]
[268.93890381 -442.56713867]
[283.70578003 -445.27954102]
[298.67529297 -446.43350220]
[313.68341064 -446.01635742]
[328.56570435 -444.03271484]
[343.15911865 -440.50430298]
[357.30377197 -435.46975708]
[370.84466553 -428.98425293]
[383.63345337 -421.11883545]
[395.52999878 -411.95968628]
[406.40399170 -401.60720825]
[416.13626099 -390.17474365]
[424.62014771 -377.78762817]
[431.76275635 -364.58151245]
[437.48580933 -350.70114136]
[441.72656250 -336.29861450]
[444.43859863 -321.53164673]
[445.59219360 -306.56213379]
[445.17471313 -291.55401611]
[443.19070435 -276.67175293]
[439.66192627 -262.07843018]
[434.62701416 -247.93389893]
[428.14117432 -234.39315796]
[420.27548218 -221.60456848]
[411.11605835 -209.70823669]
[400.76327515 -198.83451843]
[389.33059692 -189.10253906]
[376.94326782 -180.61892700]
[363.73699951 -173.47663879]
[349.85647583 -167.75393677]
[335.45382690 -163.51351929]
[320.68682861 -160.80183411]
[305.71725464 -159.64862061]
[290.70916748 -160.06646729]
[275.82696533 -162.05084229]
[261.23370361 -165.57997131]
[247.08929443 -170.61520386]
[240.60980225 -157.08686829]
[234.13031006 -143.55851746]
[227.65081787 -130.03016663]
[221.17131042 -116.50182343]
[214.69181824 -102.97348022]
[208.21232605 -89.44513702]
[213.38839722 -75.52594757]
[207.00999451 -61.71397781]
[192.37516785 -56.37920761]
[185.89567566 -42.85086060]
[186.71615601 -39.42169952]
[185.91645813 -35.42475891]
[183.24780273 -31.62586594]
[178.81286621 -28.87297821]
[179.63003540 -14.00080776]
[166.29702759 -5.48368263]
[170.84642029 8.65274715]
[163.85763550 22.16612816]
[148.99919128 26.84209824]
[141.92208862 40.06762695]
[134.84498596 53.29315186]
[127.76787567 66.51868439]
[120.69077301 79.74420929]
[121.37324524 82.46309662]
[121.01985168 85.61614990]
[119.45983124 88.81016541]
[116.66777802 91.59745789]
[112.77835083 93.52780914]
[112.20480347 107.49787140]
[100.00249481 114.32394409]
[92.15074158 127.10478973]
[84.29898071 139.88563538]
[83.66789246 155.69424438]
[70.41318512 162.48849487]
[62.56142807 175.26934814]
[54.80503845 188.10829163]
[47.14443970 201.00460815]
[39.48384094 213.90093994]
[31.82324409 226.79727173]
[24.74613953 240.02279663]
[18.26664352 253.55113220]
[11.78714752 267.07949829]
[24.76647186 259.56036377]
[39.74926758 258.84210205]
[53.38833237 265.08517456]
[62.63667297 276.89483643]
[65.42818451 291.63281250]
[61.13922882 306.00656128]
[50.72797775 316.80496216]
[36.52032852 321.61566162]
[21.69030571 319.36389160]
[9.55097675 310.55273438]
[2.81429553 297.15060425]
[2.98526096 282.15155029]
[-5.61330318 294.44238281]
[-14.21186733 306.73321533]
[-22.81043053 319.02407837]
[-24.38134766 334.76708984]
[-38.01696014 340.76037598]
[-46.61552429 353.05120850]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 210]
[43 209]
[45 207]
[46 206]
[47 205]
[48 204]
[49 192]
[50 191]
[51 190]
[58 189]
[59 188]
[60 187]
[61 186]
[63 185]
[64 184]
[66 182]
[67 181]
[68 180]
[70 178]
[71 173]
[72 172]
[73 171]
[74 170]
[75 169]
[78 166]
[80 164]
[81 160]
[82 159]
[85 156]
[86 155]
[87 154]
[88 153]
[89 152]
[90 151]
[91 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
