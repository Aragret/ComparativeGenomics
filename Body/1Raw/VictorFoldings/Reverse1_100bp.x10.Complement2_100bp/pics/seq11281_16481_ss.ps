%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAGAAAUGAUAUUUUCGAUAACACAUUCGAUCAGUAUAAUUCAACAACCGAGUCCUCAAACUAUCAAGAACCCGUCACUCUCACUCAUCAUCUUACAAxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[83.19554901 606.47204590]
[71.52366638 597.03155518]
[60.81743240 586.50860596]
[51.17679596 575.00152588]
[42.69177628 562.61767578]
[35.44159698 549.47265625]
[29.49395561 535.68933105]
[24.90438271 521.39624023]
[21.71573257 506.72695923]
[19.95777512 491.81842041]
[19.64692497 476.80978394]
[20.78608513 461.84121704]
[23.36462021 447.05249023]
[27.35845375 432.58166504]
[32.73029327 418.56387329]
[39.42998505 405.12997437]
[47.39497375 392.40539551]
[56.55089188 380.50897217]
[66.81224823 369.55178833]
[78.08322906 359.63613892]
[90.25861359 350.85458374]
[103.22470093 343.28912354]
[116.86044312 337.01040649]
[131.03851318 332.07708740]
[127.49884033 317.50070190]
[123.95916748 302.92431641]
[120.41949463 288.34796143]
[116.87982178 273.77157593]
[113.34014893 259.19519043]
[109.80047607 244.61882019]
[106.26080322 230.04244995]
[102.72113037 215.46607971]
[99.18145752 200.88969421]
[94.82632446 215.24354553]
[85.36924744 226.88673401]
[72.21314240 234.09205627]
[57.30962753 235.79067993]
[42.86955643 231.73057556]
[31.03502655 222.51408386]
[23.56161880 209.50837708]
[21.55797005 194.64280701]
[25.32130814 180.12257385]
[34.29336548 168.10166931]
[47.14319229 160.36332703]
[61.96459198 158.05548096]
[76.55889893 161.52047729]
[88.76113129 170.24432373]
[96.76046753 182.93110657]
[96.31386566 167.93775940]
[95.64408112 152.95271301]
[94.75126648 137.97930908]
[93.85844421 123.00590515]
[92.96562958 108.03250122]
[90.51990509 93.23323059]
[86.54780579 78.76870728]
[82.57571411 64.30418396]
[78.60361481 49.83965683]
[74.63151550 35.37513351]
[69.91138458 21.13714409]
[64.45602417 7.16434622]
[50.25852203 0.75586474]
[44.92506409 -13.49225330]
[51.12206650 -26.98790932]
[45.66670990 -40.96070862]
[40.21135330 -54.93350601]
[34.54856491 -68.82353210]
[28.67960358 -82.62770844]
[22.81064415 -96.43188477]
[16.94168282 -110.23606110]
[11.07272243 -124.04023743]
[-3.43748426 -120.14151764]
[-18.34908485 -118.30023956]
[-33.37182236 -118.55225372]
[-48.21327209 -120.89265442]
[-62.58454514 -125.27588654]
[-76.20589447 -131.61662292]
[-88.81217957 -139.79144287]
[-100.15802002 -149.64122009]
[-110.02256012 -160.97421265]
[-118.21378326 -173.56985474]
[-124.57225037 -187.18293762]
[-128.97418213 -201.54849243]
[-131.33390808 -216.38688660]
[-131.60548401 -231.40927124]
[-129.78361511 -246.32325745]
[-125.90379333 -260.83853149]
[-120.04151917 -274.67254639]
[-112.31090546 -287.55599976]
[-102.86243439 -299.23815918]
[-91.88002014 -309.49157715]
[-79.57743835 -318.11669922]
[-66.19416809 -324.94561768]
[-51.99071503 -329.84542847]
[-37.24355316 -332.72073364]
[-22.23974228 -333.51556396]
[-7.27133322 -332.21444702]
[7.37030792 -328.84274292]
[21.40017700 -323.46603394]
[34.54518127 -316.18902588]
[46.54944611 -307.15332031]
[57.17930222 -296.53485107]
[66.22784424 -284.54025269]
[73.51893616 -271.40304565]
[78.91065216 -257.37893677]
[82.29804230 -242.74092102]
[83.61517334 -227.77392578]
[82.83640289 -212.76927185]
[79.97689056 -198.01902771]
[75.09230042 -183.81034851]
[68.27770996 -170.41976929]
[59.66576767 -158.10795593]
[49.42410660 -147.11457825]
[37.75208282 -137.65361023]
[24.87689972 -129.90919495]
[30.74585915 -116.10502625]
[36.61482239 -102.30084991]
[42.48377991 -88.49667358]
[48.35274124 -74.69248962]
[52.36818695 -72.10691071]
[54.80201721 -66.97139740]
[54.18415070 -60.38886261]
[59.63950729 -46.41606522]
[65.09486389 -32.44326782]
[78.79675293 -26.71667290]
[84.52830505 -12.62398243]
[78.42882538 1.70898938]
[83.88418579 15.68178749]
[89.82643127 1.90899920]
[103.17453003 -4.93411779]
[117.82590485 -1.71898305]
[127.08215332 10.08448696]
[126.71143341 25.07990646]
[116.88323975 36.41156769]
[102.09088898 38.89879227]
[89.09604645 31.40303802]
[93.06813812 45.86756134]
[97.04023743 60.33208466]
[101.01232910 74.79660797]
[104.98442841 89.26113129]
[108.91026306 74.78398895]
[118.01648712 62.86438751]
[130.95222473 55.27054214]
[145.79856873 53.12895203]
[160.35311890 56.75730896]
[172.45680237 65.61736298]
[180.31413269 78.39478302]
[182.75949097 93.19411469]
[179.43014526 107.81996155]
[170.81997681 120.10266876]
[158.20623779 128.22016907]
[143.46012878 130.96827698]
[128.76913452 127.93933868]
[116.31256866 119.58266449]
[107.93903351 107.13968658]
[108.83185577 122.11309052]
[109.72467041 137.08650208]
[110.61748505 152.05990601]
[113.93337250 157.77972412]
[113.87208557 163.46244812]
[111.30721283 167.49114990]
[111.75382233 182.48449707]
[113.75783539 197.35002136]
[117.29750824 211.92640686]
[120.83718109 226.50277710]
[124.37685394 241.07914734]
[127.91652679 255.65553284]
[131.45619202 270.23190308]
[134.99586487 284.80828857]
[138.53553772 299.38464355]
[142.07521057 313.96102905]
[145.61488342 328.53741455]
[160.47648621 326.41885376]
[175.47319031 325.74456787]
[190.46495056 326.52084351]
[205.31179810 328.74041748]
[219.87512207 332.38256836]
[234.01892090 337.41329956]
[247.61114502 343.78564453]
[260.52490234 351.44009399]
[272.63958740 360.30517578]
[283.84213257 370.29812622]
[294.02786255 381.32565308]
[303.10174561 393.28475952]
[310.97903442 406.06378174]
[317.58618164 419.54345703]
[322.86148071 433.59786987]
[326.75570679 448.09582520]
[329.23245239 462.90194702]
[330.26864624 477.87799072]
[329.85458374 492.88412476]
[327.99411011 507.78024292]
[324.70465088 522.42724609]
[320.01687622 536.68841553]
[313.97457886 550.43054199]
[306.63418579 563.52532959]
[298.06417847 575.85052490]
[288.34463501 587.29107666]
[277.56628418 597.74011230]
[265.82974243 607.10009766]
[253.24461365 615.28363037]
[239.92842102 622.21429443]
[226.00547791 627.82739258]
[211.60577393 632.07055664]
[196.86376953 634.90411377]
[181.91711426 636.30157471]
[166.90534973 636.24993896]
[151.96865845 634.74969482]
[137.24649048 631.81481934]
[122.87631989 627.47277832]
[108.99230194 621.76403809]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 171]
[25 170]
[26 169]
[27 168]
[28 167]
[29 166]
[30 165]
[31 164]
[32 163]
[33 162]
[48 161]
[49 160]
[50 157]
[51 156]
[52 155]
[53 154]
[54 139]
[55 138]
[56 137]
[57 136]
[58 135]
[59 127]
[60 126]
[63 123]
[64 122]
[65 121]
[66 118]
[67 117]
[68 116]
[69 115]
[70 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
