%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[43.55860138 647.35003662]
[28.78886795 650.51733398]
[13.72518921 649.39379883]
[-0.41129342 644.07061768]
[-12.47459793 634.97918701]
[-21.48680687 622.85662842]
[-26.71734047 608.68560791]
[-27.74218369 593.61486816]
[-24.47825432 578.86621094]
[-17.19014740 565.63519287]
[-6.46867561 554.99438477]
[6.81701851 547.80639648]
[21.58992386 544.65393066]
[22.70557213 529.69549561]
[23.82122231 514.73706055]
[24.93687057 499.77859497]
[26.05251884 484.82012939]
[24.32755852 482.61047363]
[23.37394524 479.58438110]
[23.50702477 476.03222656]
[24.93130302 472.35311890]
[27.70596695 469.01318359]
[29.70998001 454.14764404]
[23.74241829 440.50076294]
[33.25407028 427.85800171]
[35.25808334 412.99249268]
[37.26210022 398.12695312]
[23.76341820 391.69683838]
[12.89842701 381.39526367]
[5.73982573 368.22201538]
[2.99973559 353.46115112]
[4.95887470 338.55596924]
[11.43785381 324.96783447]
[21.81352615 314.03283691]
[35.07889938 306.83059692]
[49.94085693 304.07748413]
[51.94487000 289.21194458]
[53.94888306 274.34643555]
[55.95289612 259.48089600]
[57.95691299 244.61537170]
[59.96092606 229.74983215]
[53.99336243 216.10295105]
[63.50501633 203.46020508]
[53.11688614 214.28086853]
[38.73800278 218.55261230]
[24.12697792 215.15881348]
[13.10309219 204.98658752]
[8.54796600 190.69496155]
[11.65229797 176.01969910]
[21.60462379 164.79690552]
[35.80342865 159.96017456]
[50.53717804 162.77381897]
[61.95450592 172.50236511]
[67.07086945 186.60191345]
[71.25788116 172.19812012]
[75.44489288 157.79434204]
[71.56774902 143.41320801]
[82.84960938 132.32130432]
[87.03662109 117.91752625]
[91.22363281 103.51374054]
[89.80361938 98.46423340]
[91.31384277 92.97856903]
[95.75567627 88.74689484]
[100.36968994 74.47416687]
[104.98369598 60.20143127]
[101.86647797 44.69035339]
[113.14355469 34.96015549]
[117.75756073 20.68742180]
[122.37157440 6.41468859]
[109.72944641 -1.80795133]
[99.65441132 -13.01416302]
[92.82879639 -26.43604279]
[89.71251678 -41.15594482]
[90.51212311 -56.16921616]
[95.16711426 -70.45277405]
[103.35446930 -83.03481293]
[114.51103973 -93.06094360]
[127.87231445 -99.85218048]
[142.52476501 -102.95094299]
[157.46836853 -102.15187073]
[162.08236694 -116.42460632]
[166.69638062 -130.69734192]
[171.31039429 -144.97007751]
[175.92439270 -159.24279785]
[179.02850342 -173.91810608]
[180.58903503 -188.83671570]
[182.03845215 -203.76652527]
[183.37667847 -218.70671082]
[181.02537537 -227.53332520]
[184.84768677 -233.85879517]
[186.40820312 -248.77740479]
[187.96873474 -263.69601440]
[181.70912170 -278.22625732]
[190.72851562 -290.07949829]
[192.28903198 -304.99810791]
[186.02941895 -319.52835083]
[195.04881287 -331.38162231]
[196.60932922 -346.30020142]
[198.16986084 -361.21881104]
[184.26118469 -367.13830566]
[172.71632385 -376.89575195]
[164.56181335 -389.62347412]
[160.52276611 -404.18978882]
[160.95831299 -419.29943848]
[165.82972717 -433.60891724]
[174.70387268 -445.84579468]
[186.79164124 -454.92199707]
[201.01818848 -460.03045654]
[216.11853027 -460.71694946]
[230.74992371 -456.92044067]
[243.61138916 -448.97848511]
[253.55924988 -437.59732056]
[259.70898438 -423.78890991]
[261.51376343 -408.78109741]
[258.81307983 -393.90838623]
[251.84709167 -380.49322510]
[241.23521423 -369.72848511]
[227.92103577 -362.57138062]
[213.08845520 -359.65829468]
[211.52793884 -344.73968506]
[209.96742249 -329.82107544]
[216.33865356 -316.35794067]
[207.20764160 -303.43759155]
[205.64710999 -288.51898193]
[212.01835632 -275.05581665]
[202.88732910 -262.13549805]
[201.32681274 -247.21688843]
[199.76628113 -232.29827881]
[198.31686401 -217.36846924]
[196.97863770 -202.42828369]
[199.51284790 -195.48570251]
[195.50762939 -187.27618408]
[193.94711304 -172.35758972]
[202.86930847 -184.41554260]
[215.68698120 -192.20704651]
[230.49868774 -194.57624817]
[245.10722351 -191.17170715]
[257.34548950 -182.49847412]
[265.39797974 -169.84315491]
[268.07022095 -155.08309937]
[264.96575928 -140.40788269]
[256.54510498 -127.99446106]
[244.05746460 -119.68431854]
[229.35525513 -116.71019745]
[214.61950684 -119.51329803]
[202.03614807 -127.67779541]
[193.47184753 -139.99253845]
[190.19712830 -154.62879944]
[185.58312988 -140.35606384]
[180.96911621 -126.08332825]
[176.35510254 -111.81059265]
[171.74108887 -97.53786469]
[184.32456970 -89.43813324]
[194.39031982 -78.34860992]
[201.24774170 -65.02118683]
[204.42405701 -50.36160660]
[203.69686890 -35.36788177]
[199.10975647 -21.06238174]
[190.96968079 -8.42209625]
[179.82646179 1.68807662]
[166.43568420 8.57451344]
[151.70739746 11.76244736]
[136.64430237 11.02869797]
[132.03030396 25.30143166]
[127.41629028 39.57416534]
[130.86352539 54.06436157]
[119.25643158 64.81543732]
[114.64241791 79.08817291]
[110.02841187 93.36090851]
[105.62741089 107.70075226]
[101.44039917 122.10453796]
[97.25338745 136.50831604]
[100.83105469 151.91970825]
[89.84867859 161.98135376]
[85.66166687 176.38513184]
[81.47465515 190.78890991]
[78.37054443 205.46421814]
[84.19476318 220.17439270]
[74.82645416 231.75384521]
[72.82244110 246.61938477]
[70.81842804 261.48489380]
[68.81441498 276.35043335]
[66.81040192 291.21597290]
[64.80638885 306.08148193]
[78.40875244 312.67187500]
[89.29336548 323.12976074]
[96.40299225 336.42193604]
[99.05245209 351.24069214]
[96.99466705 366.13256836]
[90.44362640 379.64089966]
[80.05221558 390.44824219]
[66.84716797 397.50491333]
[52.12762833 400.13098145]
[50.12361145 414.99649048]
[48.11959839 429.86203003]
[53.94382095 444.57220459]
[44.57550812 456.15167236]
[42.57149506 471.01718140]
[41.01097107 485.93579102]
[39.89532471 500.89425659]
[38.77967453 515.85272217]
[37.66402435 530.81115723]
[36.54837799 545.76959229]
[50.69020081 551.07861328]
[62.76263428 560.15789795]
[71.78701782 572.27136230]
[77.03178406 586.43713379]
[78.07176208 601.50683594]
[74.82265472 616.25878906]
[67.54784393 629.49713135]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 203]
[14 202]
[15 201]
[16 200]
[17 199]
[22 198]
[23 197]
[25 195]
[26 194]
[27 193]
[36 184]
[37 183]
[38 182]
[39 181]
[40 180]
[41 179]
[43 177]
[54 176]
[55 175]
[56 174]
[58 172]
[59 171]
[60 170]
[63 169]
[64 168]
[65 167]
[67 165]
[68 164]
[69 163]
[80 152]
[81 151]
[82 150]
[83 149]
[84 148]
[85 133]
[86 132]
[87 130]
[88 129]
[90 128]
[91 127]
[92 126]
[94 124]
[95 123]
[97 121]
[98 120]
[99 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
