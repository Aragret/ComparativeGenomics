%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUAGGAAAUUUUCAACUCUUUCGGUACAACAAUCUGUACCCCCGUACUCAAUCGUCAAGAACACUCGAAAGAGCCAUUUAUUCCCCAGCAUUCGGAGAxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[109.62897491 536.67773438]
[102.73423004 523.32244873]
[97.95906830 509.07122803]
[95.41542816 494.25802612]
[95.16293335 479.23016357]
[97.20749664 464.33990479]
[101.50119781 449.93627930]
[107.94338226 436.35693359]
[116.38303375 423.92016602]
[126.62232208 412.91757202]
[138.42121887 403.60702515]
[151.50314331 396.20675659]
[165.56144714 390.89028931]
[162.45733643 376.21499634]
[159.35322571 361.53970337]
[156.24911499 346.86437988]
[146.04550171 336.01379395]
[150.75950623 320.91116333]
[147.65539551 306.23587036]
[144.55128479 291.56057739]
[141.44717407 276.88525391]
[138.34306335 262.20996094]
[135.23895264 247.53466797]
[132.13484192 232.85935974]
[129.03073120 218.18405151]
[125.92662048 203.50875854]
[122.82250977 188.83345032]
[118.74284363 174.39889526]
[113.70593262 160.26986694]
[102.14414978 150.87974548]
[104.79816437 135.28273010]
[99.76124573 121.15370178]
[94.72432709 107.02467346]
[92.09123993 105.48963928]
[89.95848846 102.96260834]
[88.69457245 99.62705231]
[88.59504700 95.79999542]
[89.83557129 91.90203857]
[85.64855957 77.49825287]
[81.46154785 63.09447479]
[78.62908936 77.82461548]
[71.81266785 91.18637085]
[61.54985809 102.12596893]
[48.65002823 109.78066254]
[34.13051224 113.54678345]
[19.13637924 113.12731171]
[4.85012913 108.55532837]
[-7.60156584 100.19139862]
[-17.23671150 88.69513702]
[-23.29544258 74.97319031]
[-25.29993820 60.10773087]
[-23.09211922 45.27110291]
[-16.84609985 31.63338661]
[-7.05447149 20.27011299]
[5.51056004 12.07743454]
[19.85806274 7.70146036]
[34.85653305 7.48729849]
[49.32313156 11.45183849]
[62.11695862 19.28241920]
[72.22904205 30.36149025]
[78.86297607 43.81860733]
[79.08630371 28.82026863]
[79.30963135 13.82193089]
[79.53295898 -1.17640626]
[79.75628662 -16.17474365]
[79.97961426 -31.17308044]
[72.36340332 -18.25049210]
[60.63863754 -8.89475060]
[46.34791565 -4.33676672]
[31.37142372 -5.17622137]
[17.67957687 -11.30266953]
[7.07377672 -21.91007233]
[0.94939560 -35.60284424]
[0.11220216 -50.57946014]
[4.67234373 -64.86949921]
[14.02985477 -76.59284973]
[26.95359421 -84.20710754]
[41.74322128 -86.71048737]
[56.45290756 -83.77362823]
[69.14733887 -75.78292084]
[78.15634918 -63.78968430]
[82.29486847 -49.36946106]
[85.83454132 -63.94583511]
[89.37421417 -78.52220917]
[92.91388702 -93.09858704]
[96.45355988 -107.67496490]
[99.99323273 -122.25133514]
[101.33146667 -137.19152832]
[100.43865204 -152.16493225]
[91.89366913 -165.48010254]
[98.85971069 -178.64533997]
[97.96689606 -193.61874390]
[97.07407379 -208.59214783]
[82.34974670 -211.96420288]
[69.17253876 -219.34918213]
[58.61068344 -230.14843750]
[51.52037430 -243.48651123]
[48.47639465 -258.28213501]
[49.72550201 -273.33593750]
[55.16644287 -287.42752075]
[64.35813904 -299.41458130]
[76.55546570 -308.32534790]
[90.76963806 -313.43750000]
[105.84837341 -314.33657837]
[120.56930542 -310.94973755]
[133.73908997 -303.55154419]
[144.29008484 -292.74166870]
[151.36698914 -279.39648438]
[154.39611816 -264.59780884]
[153.13188171 -249.54527283]
[147.67678833 -235.45916748]
[138.47305298 -223.48135376]
[126.26678467 -214.58282471]
[112.04748535 -209.48497009]
[112.94029999 -194.51156616]
[113.83311462 -179.53816223]
[122.31423950 -167.29397583]
[115.41205597 -153.05773926]
[116.30487061 -138.08433533]
[122.32947540 -151.82130432]
[131.93601990 -163.34147644]
[144.36688232 -171.73632812]
[158.64172363 -176.34381104]
[173.63476562 -176.80055237]
[188.16360474 -173.07054138]
[201.08241272 -165.44792175]
[211.37239075 -154.53387451]
[218.22200012 -141.18910217]
[221.09106445 -126.46604156]
[219.75331116 -111.52581787]
[214.31425476 -97.54666901]
[205.20281982 -85.63105011]
[193.13760376 -76.71868134]
[179.07008362 -71.51243591]
[164.10971069 -70.42288208]
[149.43630981 -73.53595734]
[136.20707703 -80.60615540]
[125.46534729 -91.07588196]
[118.05825043 -104.11946106]
[114.56961060 -118.71166229]
[111.02993774 -104.13529205]
[107.49026489 -89.55891418]
[103.95059204 -74.98253632]
[100.41091919 -60.40616226]
[96.87124634 -45.82978821]
[94.97795105 -30.94975281]
[94.75462341 -15.95141602]
[94.53129578 -0.95307851]
[94.30796814 14.04525852]
[94.08464050 29.04359627]
[93.86131287 44.04193497]
[95.86532593 58.90746307]
[100.05233765 73.31124115]
[104.23934937 87.71502686]
[108.85336304 101.98776245]
[113.89027405 116.11679077]
[118.92719269 130.24581909]
[130.84924316 140.64654541]
[127.83496094 155.23295593]
[132.87187195 169.36198425]
[137.69966125 155.16014099]
[149.37258911 145.73979187]
[164.27366638 144.01995850]
[177.78562927 150.53352356]
[185.72166443 163.26220703]
[185.62269592 178.26187134]
[177.51939392 190.88473511]
[163.92265320 197.21943665]
[149.04556274 195.30311584]
[137.49781799 185.72933960]
[140.60192871 200.40464783]
[143.70603943 215.07994080]
[146.81015015 229.75524902]
[149.91426086 244.43055725]
[153.01837158 259.10586548]
[156.12248230 273.78115845]
[159.22659302 288.45645142]
[162.33070374 303.13177490]
[165.43479919 317.80706787]
[175.86044312 329.70733643]
[170.92440796 343.76028442]
[174.02851868 358.43557739]
[177.13262939 373.11090088]
[180.23674011 387.78619385]
[195.24371338 386.95480347]
[210.20172119 388.42404175]
[224.76010132 392.15954590]
[238.57760620 398.07366943]
[251.33033752 406.02780151]
[262.71932983 415.83551025]
[272.47763062 427.26687622]
[280.37649536 440.05392456]
[286.23071289 453.89691162]
[289.90313721 468.47134399]
[291.30761719 483.43554688]
[290.41122437 498.43878174]
[287.23501587 513.12933350]
[281.85342407 527.16284180]
[274.39260864 540.21032715]
[265.02746582 551.96588135]
[253.97749329 562.15405273]
[241.50175476 570.53594971]
[227.89268494 576.91510010]
[213.46929932 581.14202881]
[198.56970215 583.11749268]
[183.54316711 582.79534912]
[168.74194336 580.18304443]
[154.51298523 575.34185791]
[141.18983459 568.38525391]
[129.08480835 559.47631836]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 184]
[14 183]
[15 182]
[16 181]
[18 179]
[19 178]
[20 177]
[21 176]
[22 175]
[23 174]
[24 173]
[25 172]
[26 171]
[27 170]
[28 160]
[29 159]
[31 157]
[32 156]
[33 155]
[38 154]
[39 153]
[40 152]
[61 151]
[62 150]
[63 149]
[64 148]
[65 147]
[66 146]
[82 145]
[83 144]
[84 143]
[85 142]
[86 141]
[87 140]
[88 119]
[89 118]
[91 116]
[92 115]
[93 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
