%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[51.50392532 641.21429443]
[43.31805038 653.80426025]
[33.72588730 665.35876465]
[22.85715866 675.72155762]
[10.85885429 684.75244141]
[-2.10676551 692.32934570]
[-15.86435413 698.34973145]
[-30.22785568 702.73223877]
[-45.00302124 705.41760254]
[-59.99003220 706.36944580]
[-74.98620605 705.57495117]
[-89.78874207 703.04479980]
[-104.19744110 698.81329346]
[-118.01745605 692.93756104]
[-131.06187439 685.49719238]
[-143.15429688 676.59271240]
[-154.13117981 666.34454346]
[-163.84407043 654.89135742]
[-172.16162109 642.38793945]
[-178.97134399 629.00347900]
[-184.18115234 614.91894531]
[-187.72056580 600.32476807]
[-189.54174805 585.41839600]
[-189.62004089 570.40142822]
[-187.95440674 555.47686768]
[-184.56736755 540.84661865]
[-179.50473022 526.70849609]
[-172.83494568 513.25372314]
[-164.64822388 500.66427612]
[-155.05529785 489.11038208]
[-144.18586731 478.74832153]
[-132.18696594 469.71823120]
[-119.22084045 462.14221191]
[-105.46285248 456.12271118]
[-91.09906006 451.74118042]
[-76.32371521 449.05682373]
[-61.33663559 448.10598755]
[-46.34051514 448.90148926]
[-31.53815079 451.43261719]
[-17.12973022 455.66510010]
[-11.26076889 441.86093140]
[-5.39180803 428.05673218]
[0.47715262 414.25256348]
[6.24318600 400.40509033]
[11.90597248 386.51504517]
[17.56875992 372.62503052]
[23.23154640 358.73498535]
[28.26846123 344.60595703]
[32.66946030 330.26611328]
[37.07045746 315.92626953]
[41.47145462 301.58642578]
[29.53642464 290.96072388]
[23.40773010 276.14004517]
[24.35925102 260.07211304]
[32.25115204 245.97679138]
[45.54773712 236.70077515]
[61.61604691 234.14276123]
[65.80305481 219.73898315]
[69.99006653 205.33520508]
[66.11292267 190.95407104]
[77.39478302 179.86216736]
[81.58179474 165.45838928]
[84.79506683 150.80659485]
[87.02018738 135.97254944]
[89.24530029 121.13850403]
[91.47042084 106.30446625]
[93.14196014 91.39788818]
[94.25760651 76.43943787]
[95.37326050 61.48098373]
[96.37751770 46.51463699]
[97.27033234 31.54123306]
[98.16314697 16.56782722]
[99.05596161 1.59442127]
[96.44326019 -4.47890663]
[97.17940521 -10.11407471]
[100.20483398 -13.80945015]
[101.54306793 -28.74963570]
[99.11235046 -34.89805984]
[100.01594543 -40.50881195]
[103.15006256 -44.11247253]
[104.93252563 -59.00618744]
[106.71498871 -73.89990997]
[108.49745941 -88.79362488]
[108.94406128 -103.78697205]
[100.39907837 -117.10214996]
[107.36511993 -130.26737976]
[106.47230530 -145.24079895]
[105.57949066 -160.21420288]
[104.68667603 -175.18760681]
[103.79386139 -190.16101074]
[102.90103912 -205.13441467]
[102.00822449 -220.10781860]
[87.22512817 -223.12814331]
[73.72789764 -229.87255859]
[62.43680191 -239.88124084]
[54.12168884 -252.47175598]
[49.34949493 -266.78570557]
[48.44559860 -281.84707642]
[51.47162247 -296.62899780]
[58.22125626 -310.12362671]
[68.23429108 -321.41085815]
[80.82802582 -329.72113037]
[95.14379883 -334.48779297]
[110.20552826 -335.38586426]
[124.98629761 -332.35412598]
[138.47831726 -325.59930420]
[149.76167297 -315.58190918]
[158.06706238 -302.98495483]
[162.82820129 -288.66735840]
[163.72047424 -273.60525513]
[160.68302917 -258.82568359]
[153.92297363 -245.33625793]
[143.90122986 -234.05676270]
[131.30108643 -225.75624084]
[116.98163605 -221.00064087]
[117.87445068 -206.02723694]
[118.76726532 -191.05381775]
[119.66007996 -176.08041382]
[120.55289459 -161.10700989]
[121.44570923 -146.13360596]
[122.33852386 -131.16020203]
[130.81965637 -118.91603088]
[123.91746521 -104.67978668]
[131.28178406 -117.74756622]
[143.53698730 -126.39684296]
[158.31680298 -128.95758057]
[172.76745605 -124.93532562]
[184.09877014 -115.10672760]
[190.12283325 -101.36952972]
[189.67651367 -86.37617493]
[182.84596252 -73.02163696]
[170.95007324 -63.88446808]
[156.28575134 -60.72891998]
[141.68443298 -64.16427612]
[129.96542358 -73.52722168]
[123.39117432 -87.01116180]
[121.60871124 -72.11743927]
[119.82624054 -57.22372437]
[118.04377747 -42.33000565]
[116.48325348 -27.41140175]
[115.14501953 -12.47121620]
[114.02937317 2.48723722]
[113.13655853 17.46064377]
[112.24373627 32.43404770]
[111.35092163 47.40745544]
[114.09072876 54.27151108]
[110.33171082 62.59663010]
[109.21606445 77.55508423]
[108.10041046 92.51353455]
[120.99658966 84.85268402]
[135.08001709 90.01572418]
[139.96893311 104.19664001]
[132.05938721 116.94181061]
[117.18202209 118.85594940]
[106.30446625 108.52957916]
[104.07934570 123.36362457]
[101.85422516 138.19766235]
[99.62911224 153.03170776]
[110.58631134 142.78770447]
[125.32293701 139.98913574]
[139.27267456 145.50317383]
[148.11305237 157.62124634]
[149.10479736 172.58842468]
[141.94058228 185.76696777]
[128.84033203 193.07336426]
[113.86328888 192.24365234]
[101.65026855 183.53491211]
[95.98557281 169.64540100]
[91.79856873 184.04917908]
[95.37622833 199.46057129]
[84.39385223 209.52221680]
[80.20684052 223.92599487]
[76.01982880 238.32977295]
[86.88844299 247.36415100]
[93.47284698 259.82086182]
[94.80812073 273.80380249]
[90.72554016 287.19869995]
[81.87305450 297.99279785]
[69.61275482 304.57739258]
[55.81130219 305.98742676]
[51.41030502 320.32727051]
[47.00930786 334.66711426]
[42.60831070 349.00695801]
[56.33295822 342.95437622]
[70.36686707 348.25051880]
[76.67077637 361.86157227]
[71.63352203 375.99047852]
[58.14067078 382.54357910]
[43.92153931 377.76693726]
[37.12157440 364.39779663]
[31.45878601 378.28781128]
[25.79599953 392.17782593]
[20.13321304 406.06787109]
[19.79131699 415.19589233]
[14.28132915 420.12152100]
[8.41236877 433.92568970]
[2.54340792 447.72988892]
[-3.32555294 461.53405762]
[9.71936512 468.97360229]
[21.81237984 477.87725830]
[32.78994751 488.12469482]
[42.50360489 499.57727051]
[50.82199097 512.08007812]
[57.63260651 525.46411133]
[62.84334564 539.54833984]
[66.38374329 554.14221191]
[68.20590973 569.04846191]
[68.28520966 584.06549072]
[66.62057495 598.99011230]
[63.23450851 613.62060547]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 198]
[41 197]
[42 196]
[43 195]
[44 193]
[45 192]
[46 191]
[47 190]
[48 183]
[49 182]
[50 181]
[51 180]
[57 173]
[58 172]
[59 171]
[61 169]
[62 168]
[63 158]
[64 157]
[65 156]
[66 155]
[67 149]
[68 148]
[69 147]
[70 145]
[71 144]
[72 143]
[73 142]
[76 141]
[77 140]
[80 139]
[81 138]
[82 137]
[83 136]
[84 123]
[86 121]
[87 120]
[88 119]
[89 118]
[90 117]
[91 116]
[92 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
