%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[56.45031357 647.33538818]
[45.45514679 657.56701660]
[33.28594971 666.36987305]
[20.12719536 673.61047363]
[6.17837095 679.17913818]
[-8.34906197 682.99139404]
[-23.23487282 684.98944092]
[-38.25339508 685.14306641]
[-53.17695236 683.44982910]
[-67.77931213 679.93542480]
[-81.83909607 674.65319824]
[-95.14317322 667.68316650]
[-107.48984528 659.13104248]
[-118.69194794 649.12640381]
[-128.57965088 637.82098389]
[-137.00308228 625.38610840]
[-143.83451843 612.01037598]
[-148.97041321 597.89648438]
[-152.33288574 583.25836182]
[-153.87098694 568.31805420]
[-153.56140137 553.30194092]
[-151.40879822 538.43768311]
[-147.44583130 523.95062256]
[-141.73255920 510.06039429]
[-134.35562134 496.97756958]
[-125.42681885 484.90048218]
[-115.08152771 474.01220703]
[-103.47657776 464.47781372]
[-90.78789520 456.44183350]
[-77.20784760 450.02609253]
[-62.94228363 445.32785034]
[-48.20748520 442.41833496]
[-33.22681808 441.34164429]
[-18.22738838 442.11413574]
[-3.43658209 444.72406006]
[0.96441585 430.38421631]
[5.36541414 416.04437256]
[9.76641178 401.70449829]
[14.16740990 387.36465454]
[10.50480938 372.92739868]
[21.95055962 362.00469971]
[26.13756943 347.60092163]
[30.10966682 333.13638306]
[34.08176422 318.67187500]
[38.05385971 304.20733643]
[42.02595520 289.74282837]
[45.99805069 275.27828979]
[49.97014618 260.81378174]
[53.94224167 246.34924316]
[40.76951981 237.87542725]
[30.84782600 225.73065186]
[25.15769958 211.09617615]
[24.26733589 195.40020752]
[28.27588463 180.17855835]
[36.80256653 166.92428589]
[49.02280426 156.94139099]
[63.74796677 151.21636963]
[79.54096222 150.32084656]
[75.23735809 136.06152344]
[86.18396759 124.63863373]
[89.83205414 110.08901978]
[86.08058929 96.61986542]
[95.59156799 86.37131500]
[99.13124084 71.79493713]
[97.66007233 66.78666687]
[98.20281982 62.17594910]
[100.27081299 58.66333389]
[103.16814423 56.65390396]
[107.35515594 42.25012207]
[111.54216766 27.84634018]
[115.72917938 13.44255733]
[119.91619110 -0.96122426]
[124.10320282 -15.36500645]
[127.75128937 -29.91462708]
[130.85539246 -44.58992767]
[119.35519409 -56.99320984]
[117.53208923 -73.64186096]
[125.90766144 -87.95310211]
[141.01010132 -94.38688660]
[143.89538574 -109.10677338]
[137.52502441 -126.38392639]
[149.56620789 -139.15016174]
[152.23199463 -153.91137695]
[154.89779663 -168.67259216]
[157.56359863 -183.43382263]
[160.22938538 -198.19503784]
[162.89518738 -212.95625305]
[149.31515503 -221.56387329]
[140.10015869 -234.69224548]
[136.63700867 -250.31410217]
[139.42713928 -266.03094482]
[148.01419067 -279.44128418]
[161.05834961 -288.50765991]
[176.54534912 -291.86602783]
[178.99108887 -306.66528320]
[181.43681335 -321.46456909]
[183.88253784 -336.26382446]
[169.89672852 -341.85052490]
[157.43911743 -350.31350708]
[147.09237671 -361.25695801]
[139.34045410 -374.16903687]
[134.54591370 -388.44580078]
[132.93299866 -403.41952515]
[134.57714844 -418.38986206]
[139.40145874 -432.65661621]
[147.18031311 -445.55249023]
[157.54985046 -456.47433472]
[170.02508545 -464.91131592]
[184.02252197 -470.46881104]
[198.88748169 -472.88690186]
[213.92469788 -472.05245972]
[228.43084717 -468.00454712]
[241.72746277 -460.93249512]
[253.19262695 -451.16705322]
[262.29010010 -439.16494751]
[268.59439087 -425.48760986]
[271.81060791 -410.77468872]
[271.78833008 -395.71435547]
[268.52859497 -381.01101685]
[262.18389893 -367.35235596]
[253.05096436 -355.37722778]
[241.55696106 -345.64575195]
[228.23948669 -338.61303711]
[213.72142029 -334.60803223]
[198.68180847 -333.81811523]
[196.23608398 -319.01882935]
[193.79035950 -304.21957397]
[191.34461975 -289.42028809]
[203.53433228 -282.46685791]
[212.63777161 -271.74743652]
[217.54586792 -258.53643799]
[217.64994812 -244.41371155]
[212.91712952 -231.07553101]
[203.89671326 -220.13088989]
[191.65649414 -212.90745544]
[177.65640259 -210.29045105]
[174.99060059 -195.52923584]
[172.32481384 -180.76802063]
[169.65901184 -166.00680542]
[166.99322510 -151.24559021]
[164.32742310 -136.48437500]
[170.96476746 -126.37139130]
[168.86465454 -114.05176544]
[158.61526489 -106.22150421]
[155.72999573 -91.50160980]
[165.68794250 -82.60884094]
[169.98590088 -69.85456085]
[167.39988708 -56.53607178]
[158.50036621 -46.15257263]
[145.53070068 -41.48582077]
[142.42658997 -26.81051636]
[156.23065186 -32.67974854]
[169.49804688 -25.68144226]
[172.44853210 -10.97448540]
[162.90713501 0.59969950]
[147.90740967 0.50905347]
[138.50698853 -11.17799473]
[134.31997681 3.22578692]
[130.13296509 17.62956810]
[125.94594574 32.03335190]
[121.75893402 46.43713379]
[117.57192230 60.84091568]
[113.70761871 75.33460999]
[110.16794586 89.91098022]
[113.91941071 103.38013458]
[104.40843201 113.62868500]
[105.42437744 122.70644379]
[100.70602417 128.39494324]
[104.74095154 143.69297791]
[94.06301880 154.07714844]
[106.34771729 161.58560181]
[116.00738525 172.24034119]
[122.26541901 185.17138672]
[124.62247467 199.32632446]
[122.89627075 213.55592346]
[117.23568726 226.70745850]
[108.10794830 237.71809387]
[96.26009369 245.70075989]
[82.65781403 250.01560974]
[68.40676880 250.32135010]
[64.43466949 264.78585815]
[60.46257401 279.25039673]
[56.49047852 293.71490479]
[52.51838303 308.17944336]
[48.54628754 322.64395142]
[44.57418823 337.10848999]
[40.60209274 351.57299805]
[41.90142441 358.05554199]
[40.01507187 363.41641235]
[36.29040527 366.40570068]
[39.63821793 381.86865234]
[28.50725746 391.76565552]
[24.10625839 406.10549927]
[19.70526123 420.44534302]
[15.30426311 434.78521729]
[10.90326500 449.12506104]
[24.61168289 455.26174927]
[37.46204376 463.03656006]
[49.25954819 472.33163452]
[59.82534027 483.00607300]
[68.99924469 494.89804077]
[76.64219666 507.82727051]
[82.63832092 521.59777832]
[86.89672852 536.00073242]
[89.35285187 550.81787109]
[89.96946716 565.82452393]
[88.73721313 580.79315186]
[85.67478180 595.49694824]
[80.82859802 609.71295166]
[74.27212524 623.22558594]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 196]
[36 195]
[37 194]
[38 193]
[39 192]
[41 190]
[42 187]
[43 186]
[44 185]
[45 184]
[46 183]
[47 182]
[48 181]
[49 180]
[58 170]
[60 168]
[61 166]
[63 164]
[64 163]
[68 162]
[69 161]
[70 160]
[71 159]
[72 158]
[73 157]
[74 151]
[75 150]
[79 145]
[80 144]
[82 141]
[83 140]
[84 139]
[85 138]
[86 137]
[87 136]
[94 128]
[95 127]
[96 126]
[97 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
