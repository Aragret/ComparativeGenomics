%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCGAACAAUAUUAAUACGGAGUAUCCCUAUCAUGUUCCUUCCCCAUCCGAUACACAAAACAGUCCCCCAACUCUUACUCACACUCCGCAUAAUAUGGUxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[198.32977295 617.01947021]
[192.87440491 603.04669189]
[187.51351929 597.95916748]
[187.44354248 588.82501221]
[182.19683838 574.77258301]
[176.95011902 560.72009277]
[171.70339966 546.66760254]
[166.45668030 532.61517334]
[161.15475464 546.64691162]
[148.68145752 554.97857666]
[133.68901062 554.50268555]
[121.76922607 545.39666748]
[117.36788940 531.05694580]
[122.12658691 516.83178711]
[134.27044678 508.02688599]
[149.27011108 507.92620850]
[161.53176880 516.56823730]
[157.99209595 501.99188232]
[154.45242310 487.41549683]
[150.91275024 472.83911133]
[140.99832153 484.09542847]
[126.00956726 483.51477051]
[116.99563599 471.52523804]
[120.60126495 456.96505737]
[134.16851807 450.56741333]
[147.69508362 457.04718018]
[145.24935913 442.24789429]
[142.80363464 427.44863892]
[140.35791016 412.64935303]
[137.91217041 397.85009766]
[123.65225220 396.40039062]
[110.24371338 391.30075073]
[98.60477448 382.89370728]
[89.53419495 371.74847412]
[83.65650940 358.62240601]
[81.37895966 344.40963745]
[82.86335754 330.08007812]
[88.01454163 316.61328125]
[96.48650360 304.93145752]
[107.70558167 295.83630371]
[120.90933228 289.95401001]
[118.68421173 275.11996460]
[116.45909882 260.28591919]
[114.23397827 245.45188904]
[112.00886536 230.61784363]
[109.78374481 215.78379822]
[107.55863190 200.94975281]
[98.01895142 189.51104736]
[103.62351990 174.71580505]
[101.39839935 159.88175964]
[99.17327881 145.04771423]
[96.94816589 130.21366882]
[94.72304535 115.37962341]
[83.93856049 102.53162384]
[90.24811554 86.98924255]
[87.80239105 72.18997192]
[72.57876587 64.81858063]
[64.82555389 49.97307968]
[67.42269897 33.59576035]
[79.15102386 22.10994720]
[76.48522949 7.34873056]
[73.81943512 -7.41248703]
[71.15364075 -22.17370415]
[68.48783875 -36.93492126]
[58.42115021 -49.14033890]
[63.77339172 -63.04008102]
[61.10759735 -77.80130005]
[58.44180298 -92.56251526]
[44.74505234 -93.92050934]
[31.88034439 -98.77781677]
[20.72470093 -106.79623413]
[12.03679562 -117.42230988]
[6.40536118 -129.92550659]
[4.20930099 -143.44848633]
[5.59219742 -157.06581116]
[10.45294380 -169.84736633]
[18.45310783 -180.92182922]
[29.04048538 -189.53607178]
[41.48720932 -195.10643005]
[39.26209259 -209.94047546]
[37.03697586 -224.77452087]
[32.66917801 -232.79699707]
[34.89086914 -239.84582520]
[32.88685608 -254.71134949]
[20.60257339 -264.28915405]
[18.78198433 -279.39346313]
[27.98865318 -291.04562378]
[25.98463821 -305.91113281]
[23.98062515 -320.77667236]
[21.97661209 -335.64221191]
[7.02447653 -337.72454834]
[-6.81091738 -343.76480103]
[-18.50289154 -353.31469727]
[-27.18382263 -365.66555786]
[-32.20952988 -379.90087891]
[-33.20707321 -394.96435547]
[-30.10242462 -409.73809814]
[-23.12597275 -423.12582397]
[-12.79541588 -434.13412476]
[0.12265071 -441.94604492]
[14.66961956 -445.98190308]
[29.76601028 -445.94223022]
[44.29156876 -441.82998657]
[57.16840363 -433.95028687]
[67.44097137 -422.88787842]
[74.34696960 -409.46365356]
[77.37393951 -394.67376709]
[76.29724884 -379.61578369]
[71.19680023 -365.40704346]
[62.45108414 -353.10195923]
[50.70908356 -343.61364746]
[36.84214020 -337.64620972]
[38.84615326 -322.78067017]
[40.85016632 -307.91516113]
[42.85417938 -293.04962158]
[54.81775284 -284.25140381]
[57.06187439 -269.20419312]
[47.75238419 -256.71536255]
[49.75639725 -241.84983826]
[51.87102127 -226.99963379]
[54.09613800 -212.16558838]
[56.32125473 -197.33154297]
[72.44506836 -194.91479492]
[87.05187225 -187.63005066]
[98.70954895 -176.17868042]
[106.27115631 -161.67121887]
[108.98778534 -145.51959229]
[106.58267212 -129.29981995]
[99.27941132 -114.59812927]
[87.78117371 -102.85589600]
[73.20301819 -95.22830963]
[75.86881256 -80.46709442]
[78.53460693 -65.70587158]
[88.41062927 -54.55627823]
[83.24906158 -39.60071564]
[85.91485596 -24.83950043]
[88.58065033 -10.07828236]
[91.24644470 4.68293476]
[93.91223907 19.44415283]
[106.42248535 24.10633278]
[115.06472778 34.42407227]
[117.49960327 47.77101898]
[112.98590851 60.68012619]
[102.60166168 69.74424744]
[105.04738617 84.54351807]
[114.08937836 91.88406372]
[115.90273285 103.38854218]
[109.55709076 113.15451050]
[111.78221130 127.98854828]
[114.00732422 142.82260132]
[116.23244476 157.65663147]
[118.45755768 172.49067688]
[128.15638733 184.99041748]
[122.39266968 198.72463989]
[124.61779022 213.55867004]
[126.84290314 228.39271545]
[129.06802368 243.22676086]
[131.29313660 258.06082153]
[133.51826477 272.89486694]
[135.74337769 287.72888184]
[151.33155823 289.81399536]
[165.68919373 296.19683838]
[177.65843201 306.35379028]
[186.27656555 319.45718384]
[190.85343933 334.44274902]
[191.02671814 350.09619141]
[186.79057312 365.15145874]
[178.49545288 378.39318848]
[166.81916809 388.75476074]
[152.71144104 395.40435791]
[155.15718079 410.20364380]
[157.60290527 425.00289917]
[160.04862976 439.80218506]
[162.49435425 454.60144043]
[165.48913574 469.29943848]
[169.02880859 483.87582397]
[172.56848145 498.45220947]
[176.10815430 513.02856445]
[180.50915527 527.36840820]
[185.75585938 541.42089844]
[191.00257874 555.47338867]
[196.24929810 569.52581787]
[201.49601746 583.57830811]
[206.84721375 597.59130859]
[212.30256653 611.56414795]
[227.20204163 609.33856201]
[242.22315979 610.48474121]
[256.61245728 614.94519043]
[269.64819336 622.49615479]
[280.67648315 632.75897217]
[289.14416504 645.21875000]
[294.62646484 659.25054932]
[296.84844971 674.15057373]
[295.69863892 689.17138672]
[291.23468018 703.55963135]
[283.68054199 716.59356689]
[273.41510010 727.61932373]
[260.95324707 736.08398438]
[246.92010498 741.56292725]
[232.01954651 743.78125000]
[216.99897766 742.62780762]
[202.61184692 738.16040039]
[189.57977295 730.60308838]
[178.55645752 720.33496094]
[170.09483337 707.87109375]
[164.61930847 693.83660889]
[162.40455627 678.93548584]
[163.56166077 663.91522217]
[168.03256226 649.52917480]
[175.59303284 636.49890137]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 185]
[2 184]
[4 183]
[5 182]
[6 181]
[7 180]
[8 179]
[17 178]
[18 177]
[19 176]
[20 175]
[26 174]
[27 173]
[28 172]
[29 171]
[30 170]
[41 160]
[42 159]
[43 158]
[44 157]
[45 156]
[46 155]
[47 154]
[49 152]
[50 151]
[51 150]
[52 149]
[53 148]
[55 145]
[56 144]
[60 139]
[61 138]
[62 137]
[63 136]
[64 135]
[66 133]
[67 132]
[68 131]
[79 122]
[80 121]
[81 120]
[83 119]
[84 118]
[87 115]
[88 114]
[89 113]
[90 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
