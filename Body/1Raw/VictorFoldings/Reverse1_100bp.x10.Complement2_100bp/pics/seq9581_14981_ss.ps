%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[22.00270844 389.67547607]
[7.18721771 395.83020020]
[-6.79192305 387.95855713]
[-9.21111393 372.09893799]
[1.78544116 360.41754150]
[2.67825699 345.44412231]
[3.57107282 330.47073364]
[4.46388865 315.49731445]
[5.35670471 300.52389526]
[-2.11324978 313.53158569]
[-12.54674530 324.30850220]
[-25.30576897 332.19567871]
[-39.61010361 336.71075439]
[-54.58502960 337.57769775]
[-69.31482697 334.74343872]
[-82.89876556 328.38131714]
[-94.50617981 318.88037109]
[-103.42726898 306.82159424]
[-109.11650848 292.94235229]
[-111.22599792 278.09143066]
[-109.62674713 263.17694092]
[-104.41654205 249.11088562]
[-95.91398621 236.75343323]
[-84.63903046 226.86024475]
[-71.28112793 220.03628540]
[-56.65712357 216.69883728]
[-41.66128159 217.05200195]
[-27.21060181 221.07418823]
[-14.18875122 228.51940918]
[-3.39202070 238.93241882]
[4.51936626 251.67642212]
[9.06162548 265.97216797]
[9.95699501 280.94543457]
[15.82595539 267.14126587]
[21.69491577 253.33708191]
[27.56387711 239.53291321]
[33.43283844 225.72872925]
[32.50881195 221.04309082]
[34.51846695 215.72723389]
[39.68753052 211.60507202]
[45.96489334 197.98175049]
[42.07152939 186.52888489]
[47.18980789 175.12770081]
[59.07347107 170.11357117]
[65.55296326 156.58523560]
[63.26342392 139.18623352]
[78.54187012 128.90759277]
[84.81922913 115.28427124]
[91.09658813 101.66095734]
[90.28733063 97.89035034]
[91.14402008 93.78134155]
[93.78054047 90.08596802]
[97.97050476 87.57917023]
[104.84991455 74.24974060]
[111.72933197 60.92031479]
[97.77578735 66.42473602]
[83.22332764 62.78799820]
[73.49965668 51.36651611]
[72.23146057 36.42022324]
[79.89175415 23.52371407]
[93.62342834 17.48706818]
[108.30490875 20.56180573]
[118.46037292 31.60112572]
[120.30186462 46.48878098]
[128.71647644 34.07128525]
[137.13110352 21.65378952]
[145.54571533 9.23629475]
[153.96034241 -3.18120074]
[162.37495422 -15.59869576]
[170.13134766 -28.43763733]
[177.20845032 -41.66316605]
[183.98844910 -55.04343796]
[190.46794128 -68.57178497]
[196.94743347 -82.10012817]
[203.42692566 -95.62847137]
[209.90643311 -109.15682220]
[216.38592529 -122.68516541]
[222.86541748 -136.21351624]
[222.73884583 -142.82377625]
[225.54789734 -147.76403809]
[229.74452209 -150.04380798]
[236.62394714 -163.37322998]
[243.50335693 -176.70266724]
[250.38276672 -190.03208923]
[237.65943909 -197.99304199]
[225.63699341 -206.97747803]
[214.39753723 -216.92405701]
[204.01786804 -227.76480103]
[194.56887817 -239.42567444]
[186.11511230 -251.82702637]
[178.71432495 -264.88412476]
[172.41706848 -278.50778198]
[167.26635742 -292.60494995]
[163.29739380 -307.07928467]
[160.53727722 -321.83197021]
[159.00485229 -336.76217651]
[158.71060181 -351.76794434]
[159.65653992 -366.74673462]
[161.83618164 -381.59628296]
[165.23466492 -396.21508789]
[169.82876587 -410.50332642]
[175.58708191 -424.36340332]
[182.47030640 -437.70059204]
[190.43139648 -450.42382812]
[199.41598511 -462.44616699]
[209.36268616 -473.68548584]
[220.20356750 -484.06503296]
[231.86456299 -493.51388550]
[244.26600647 -501.96752930]
[257.32318115 -509.36813354]
[270.94692993 -515.66522217]
[285.04415894 -520.81579590]
[299.51855469 -524.78454590]
[314.27124023 -527.54449463]
[329.20147705 -529.07678223]
[344.20724487 -529.37084961]
[359.18603516 -528.42474365]
[374.03555298 -526.24487305]
[388.65432739 -522.84625244]
[402.94250488 -518.25195312]
[416.80249023 -512.49346924]
[430.13961792 -505.61010742]
[442.86276245 -497.64886475]
[454.88497925 -488.66412354]
[466.12420654 -478.71728516]
[476.50360107 -467.87628174]
[485.95233154 -456.21517944]
[494.40579224 -443.81362915]
[501.80627441 -430.75637817]
[508.10321045 -417.13256836]
[513.25360107 -403.03527832]
[517.22222900 -388.56082153]
[519.98199463 -373.80810547]
[521.51403809 -358.87783813]
[521.80792236 -343.87207031]
[520.86163330 -328.89328003]
[518.68164062 -314.04379272]
[515.28277588 -299.42507935]
[510.68838501 -285.13693237]
[504.92971802 -271.27700806]
[498.04617310 -257.93997192]
[490.08477783 -245.21694946]
[481.09991455 -233.19482422]
[471.15292358 -221.95571899]
[460.31179810 -211.57643127]
[448.65060425 -202.12785339]
[436.24893188 -193.67454529]
[423.19158936 -186.27421570]
[409.56768799 -179.97744751]
[395.47036743 -174.82725525]
[380.99588013 -170.85879517]
[366.24310303 -168.09919739]
[351.31283569 -166.56732178]
[336.30706787 -166.27360535]
[321.32827759 -167.22007751]
[306.47882080 -169.40025330]
[291.86013794 -172.79925537]
[277.57205200 -177.39385986]
[263.71218872 -183.15267944]
[256.83279419 -169.82324219]
[249.95336914 -156.49382019]
[243.07395935 -143.16439819]
[236.39376831 -129.73400879]
[229.91426086 -116.20567322]
[223.43476868 -102.67732239]
[216.95527649 -89.14897919]
[210.47578430 -75.62063599]
[203.99627686 -62.09228897]
[197.51678467 -48.56394196]
[198.33726501 -45.13478088]
[197.53756714 -41.13784027]
[194.86892700 -37.33894730]
[190.43397522 -34.58605957]
[183.35687256 -21.36053085]
[197.68731689 -25.79205513]
[211.56188965 -20.09149361]
[218.63731384 -6.86506796]
[215.67880249 7.84027958]
[204.03895569 17.30146217]
[189.03935242 17.19295311]
[177.53759766 7.56436253]
[174.79244995 -7.18407774]
[166.37783813 5.23341799]
[157.96321106 17.65091324]
[149.54859924 30.06840897]
[141.13397217 42.48590469]
[132.71936035 54.90340042]
[125.05876160 67.79972839]
[118.17934418 81.12915802]
[111.29993439 94.45858765]
[104.71990967 107.93831635]
[98.44254303 121.56163788]
[92.16518402 135.18495178]
[95.89138794 147.53315735]
[90.38249207 158.75082397]
[79.08131409 163.06472778]
[72.60181427 176.59307861]
[74.44264984 194.91499329]
[59.58821106 204.25910950]
[53.31084824 217.88243103]
[47.23701477 231.59768677]
[41.36805344 245.40187073]
[35.49909210 259.20605469]
[29.63013268 273.01022339]
[23.76117134 286.81439209]
[20.33011055 301.41671753]
[19.43729401 316.39013672]
[18.54447937 331.36352539]
[17.65166283 346.33694458]
[16.75884628 361.31033325]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 210]
[6 209]
[7 208]
[8 207]
[9 206]
[33 205]
[34 204]
[35 203]
[36 202]
[37 201]
[40 200]
[41 199]
[44 197]
[45 196]
[47 193]
[48 192]
[49 191]
[53 190]
[54 189]
[55 188]
[64 187]
[65 186]
[66 185]
[67 184]
[68 183]
[69 182]
[70 174]
[71 173]
[72 169]
[73 168]
[74 167]
[75 166]
[76 165]
[77 164]
[78 163]
[81 162]
[82 161]
[83 160]
[84 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
