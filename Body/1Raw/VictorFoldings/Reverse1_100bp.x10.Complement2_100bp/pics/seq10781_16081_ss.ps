%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUCAUCUCCCUACUACGAUUAUUAAUCCGACACCCACCAACACAACUAAGUUUAAUACACAAAAAACCUUUCAGUACAGUCACCAUCAUUAUAUUAACxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[-35.32656097 343.44451904]
[-27.63939857 356.35675049]
[-21.91427612 370.25064087]
[-18.27322197 384.83010864]
[-16.79384804 399.78436279]
[-17.50768852 414.79461670]
[-20.39952469 429.54098511]
[-25.40771866 443.70910645]
[-32.42551804 456.99700928]
[-41.30334473 469.12145996]
[-51.85195923 479.82400513]
[-63.84651947 488.87652588]
[-77.03136444 496.08609009]
[-91.12545776 501.29901123]
[-105.82837677 504.40417480]
[-120.82673645 505.33538818]
[-135.80084229 504.07278442]
[-150.43150330 500.64331055]
[-164.40690613 495.12008667]
[-177.42912292 487.62075806]
[-189.22061157 478.30526733]
[-199.53001404 467.37210083]
[-208.13760376 455.05435181]
[-214.85990906 441.61453247]
[-219.55363464 427.33914185]
[-222.11872864 412.53244019]
[-222.50053406 397.51007080]
[-220.69088745 382.59219360]
[-216.72837830 368.09680176]
[-210.69747925 354.33285522]
[-202.72671509 341.59375000]
[-192.98599243 330.15100098]
[-181.68293762 320.24853516]
[-169.05847168 312.09741211]
[-155.38169861 305.87139893]
[-140.94412231 301.70315552]
[-126.05348206 299.68154907]
[-111.02718353 299.84967041]
[-96.18550873 302.20391846]
[-81.84481049 306.69418335]
[-68.31076050 313.22467041]
[-59.89614487 300.80715942]
[-51.48152542 288.38967896]
[-43.15958023 275.90988159]
[-34.93077469 263.36846924]
[-26.70196533 250.82707214]
[-26.18905258 235.94129944]
[-12.14934921 228.64765930]
[-3.92054105 216.10624695]
[4.30826664 203.56484985]
[-10.14221096 207.58775330]
[-24.23735809 202.45678711]
[-32.72003555 190.08567810]
[-32.42641068 175.08854675]
[-23.46600151 163.05895996]
[-9.18081665 158.48364258]
[5.10112143 163.06909180]
[14.05300331 175.10502625]
[14.33566284 190.10346985]
[23.99647331 178.62876892]
[26.27464485 163.90942383]
[41.08158112 158.33581543]
[50.74238968 146.86111450]
[60.40320206 135.38641357]
[70.06401062 123.91170502]
[79.72482300 112.43701172]
[89.38563538 100.96231079]
[97.98419952 88.67147064]
[105.45193481 75.66252136]
[112.91967773 62.65356445]
[112.44666290 44.24547577]
[127.95494843 36.03206635]
[135.22817993 22.91337204]
[142.50140381 9.79467773]
[149.77462769 -3.32401609]
[154.81155396 -17.45304489]
[157.47734070 -32.21426392]
[160.14314270 -46.97547913]
[162.80892944 -61.73669815]
[161.04228210 -66.64852142]
[161.30963135 -71.28337097]
[163.16487122 -74.91284180]
[165.93746948 -77.09116364]
[169.25971985 -91.71862793]
[172.58198547 -106.34608459]
[175.90425110 -120.97354889]
[179.11752319 -135.62533569]
[181.89312744 -150.36630249]
[184.33885193 -165.16557312]
[186.78459167 -179.96484375]
[189.23031616 -194.76411438]
[191.67604065 -209.56338501]
[194.12176514 -224.36265564]
[196.56748962 -239.16192627]
[199.01322937 -253.96119690]
[201.45895386 -268.76046753]
[187.40391541 -274.14941406]
[174.72155762 -282.25759888]
[163.93121338 -292.75299072]
[155.47473145 -305.20581055]
[149.69842529 -319.10614014]
[146.83882141 -333.88476562]
[147.01300049 -348.93649292]
[150.21385193 -363.64498901]
[156.31028748 -377.40789795]
[165.05265808 -389.66171265]
[176.08299255 -399.90460205]
[188.94960022 -407.71713257]
[203.12557983 -412.77935791]
[218.03045654 -414.88403320]
[233.05386353 -413.94497681]
[247.58062744 -410.00057983]
[261.01586914 -403.21243286]
[272.80941772 -393.85845947]
[282.47836304 -382.32168579]
[289.62673950 -369.07461548]
[293.96185303 -354.65960693]
[295.30615234 -339.66702271]
[293.60458374 -324.71078491]
[288.92687988 -310.40328979]
[281.46453857 -297.33047485]
[271.52316284 -286.02764893]
[259.50982666 -276.95767212]
[245.91647339 -270.49191284]
[231.29975891 -266.89517212]
[216.25822449 -266.31472778]
[213.81250000 -251.51545715]
[211.36676025 -236.71618652]
[208.92103577 -221.91691589]
[206.47531128 -207.11764526]
[204.02958679 -192.31837463]
[201.58386230 -177.51910400]
[199.13812256 -162.71983337]
[196.69239807 -147.92056274]
[198.43746948 -144.85673523]
[198.78523254 -140.79544067]
[197.28306580 -136.40263367]
[193.79281616 -132.52122498]
[195.48408508 -125.32668304]
[190.53170776 -117.65128326]
[187.20944214 -103.02382660]
[183.88719177 -88.39636993]
[180.56492615 -73.76890564]
[177.57015991 -59.07089996]
[174.90435791 -44.30968475]
[172.23855591 -29.54846764]
[169.57276917 -14.78725052]
[178.56889343 -26.79015350]
[190.33216858 -36.09743500]
[204.08236694 -42.09177780]
[218.90748596 -44.37559509]
[233.82421875 -42.79741669]
[247.84323120 -37.46191025]
[260.03463745 -28.72296524]
[269.58987427 -17.16020203]
[275.87515259 -3.54053736]
[278.47360229 11.23268414]
[277.21289062 26.17960930]
[272.17657471 40.30886078]
[263.69876099 52.68329620]
[252.34173584 62.48216629]
[238.85876465 69.05554199]
[224.14411926 71.96743774]
[209.17376709 71.02471924]
[194.94064331 66.28991699]
[182.38879395 58.07706451]
[172.35072327 46.93089676]
[165.49221802 33.59069824]
[162.26817322 18.94127464]
[162.89332581 3.94921350]
[155.62010193 17.06790733]
[148.34686279 30.18660164]
[141.07363892 43.30529404]
[144.10440063 55.01602173]
[138.15231323 66.00494385]
[125.92863464 70.12130737]
[118.46089172 83.13025665]
[110.99314880 96.13921356]
[124.31922150 89.25329590]
[139.31059265 88.74474335]
[153.07267761 94.71174622]
[162.94822693 106.00216675]
[167.03041077 120.43601227]
[164.53105164 135.22631836]
[155.93272400 147.51731873]
[142.89561462 154.93580627]
[127.93701172 156.04939270]
[113.94516754 150.64306641]
[103.62170410 139.76069641]
[98.95989990 125.50350189]
[100.86033630 110.62311554]
[91.19952393 122.09781647]
[81.53871155 133.57252502]
[71.87789917 145.04722595]
[62.21709061 156.52192688]
[52.55628204 167.99661255]
[49.58710480 183.53671265]
[35.47117233 188.28958130]
[25.81036377 199.76428223]
[16.84966660 211.79365540]
[8.62085915 224.33506775]
[0.39205137 236.87646484]
[-0.70944101 252.65927124]
[-14.16056442 259.05587769]
[-22.38937187 271.59729004]
[-30.61818123 284.13867188]
[-32.70948410 293.03048706]
[-39.06402969 296.80429077]
[-47.47864914 309.22177124]
[-55.89326477 321.63928223]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 210]
[42 209]
[43 208]
[44 206]
[45 205]
[46 204]
[48 202]
[49 201]
[50 200]
[59 199]
[60 198]
[62 196]
[63 195]
[64 194]
[65 193]
[66 192]
[67 191]
[68 178]
[69 177]
[70 176]
[72 173]
[73 172]
[74 171]
[75 170]
[76 147]
[77 146]
[78 145]
[79 144]
[83 143]
[84 142]
[85 141]
[86 140]
[87 138]
[88 134]
[89 133]
[90 132]
[91 131]
[92 130]
[93 129]
[94 128]
[95 127]
[96 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
