%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGACUCAUCUCUUUACUAGGCAUUAUAUCCGGAGCGGGCUACACAUCCUUCUCCGUCUAUUUCUUAUAACUCCGCGGUAACCGCACUUCCAUCGCCUxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[48.38996887 838.94372559]
[34.23722076 843.95153809]
[19.65617561 847.52532959]
[4.79175377 849.62951660]
[-10.20831299 850.24316406]
[-25.19494247 849.36029053]
[-40.01918793 846.98950195]
[-54.53371429 843.15454102]
[-68.59426880 837.89343262]
[-82.06110382 831.25842285]
[-94.80037689 823.31555176]
[-106.68547058 814.14367676]
[-117.59828186 803.83398438]
[-127.43032837 792.48901367]
[-136.08390808 780.22137451]
[-143.47300720 767.15313721]
[-149.52418518 753.41406250]
[-154.17730713 739.14074707]
[-157.38612366 724.47509766]
[-159.11874390 709.56274414]
[-159.35795593 694.55206299]
[-158.10137939 679.59210205]
[-155.36149597 664.83166504]
[-151.16552734 650.41735840]
[-145.55520630 636.49243164]
[-138.58625793 623.19537354]
[-130.32797241 610.65826416]
[-120.86241150 599.00567627]
[-110.28365326 588.35351562]
[-98.69683838 578.80761719]
[-86.21712494 570.46282959]
[-72.96854401 563.40209961]
[-59.08277130 557.69567871]
[-44.69781113 553.40014648]
[-29.95663643 550.55822754]
[-15.00574875 549.19824219]
[0.00625606 549.33367920]
[14.93017769 550.96313477]
[18.03428841 536.28784180]
[21.13839722 521.61254883]
[24.24250793 506.93722534]
[27.34661865 492.26193237]
[30.45072746 477.58660889]
[19.71279716 469.14776611]
[13.62917995 456.84661865]
[13.43821430 443.05850220]
[19.23416901 430.47338867]
[29.93773270 421.57113647]
[43.49654007 418.13290405]
[46.81880188 403.50543213]
[50.14105988 388.87796021]
[53.46331787 374.25051880]
[51.87935638 367.03158569]
[56.94546509 359.43078613]
[60.48513794 344.85440063]
[64.02481079 330.27801514]
[66.24993134 315.44396973]
[67.14274597 300.47058105]
[68.03556061 285.49716187]
[68.92837524 270.52377319]
[69.82118988 255.55035400]
[57.91243362 264.67074585]
[43.02508163 262.83584595]
[33.68729401 251.09678650]
[35.24817276 236.17820740]
[46.81357956 226.62617493]
[61.75832367 227.91252136]
[71.52107239 239.29945374]
[73.74619293 224.46540833]
[75.97131348 209.63136292]
[78.19642639 194.79731750]
[80.42154694 179.96327209]
[82.64665985 165.12922668]
[84.87178040 150.29519653]
[71.31909943 143.99858093]
[60.08838654 134.13989258]
[52.08887482 121.51728058]
[47.96819305 107.15265656]
[48.05994797 92.20895386]
[52.35671234 77.89601135]
[60.51062012 65.37258148]
[71.86154175 55.65254593]
[85.49052429 49.52283478]
[100.29417419 47.47969437]
[102.51929474 32.64564896]
[95.49440002 21.82836533]
[97.65309143 9.51886463]
[107.30091858 2.22187829]
[109.74664307 -12.57739258]
[112.19237518 -27.37666321]
[106.80870819 -42.25371933]
[116.51763153 -53.54911804]
[118.96335602 -68.34838867]
[121.40908813 -83.14765930]
[123.63420105 -97.98170471]
[125.63821411 -112.84722900]
[123.68338013 -121.77003479]
[127.78432465 -127.91853333]
[130.00944519 -142.75257874]
[132.23455811 -157.58662415]
[118.52677155 -163.93273926]
[107.16306305 -173.88476562]
[99.06463623 -186.63592529]
[94.88800049 -201.15255737]
[94.97172546 -216.25784302]
[99.30903625 -230.72726440]
[107.54832458 -243.38787842]
[119.02165985 -253.21330261]
[132.79896545 -259.40707397]
[147.76335144 -261.46707153]
[162.70175171 -259.22628784]
[176.40315247 -252.86640930]
[187.75686646 -242.90298462]
[195.84246826 -230.14369202]
[200.00451660 -215.62287903]
[199.90562439 -200.51768494]
[195.55377197 -186.05261230]
[187.30177307 -173.40029907]
[175.81857300 -163.58639526]
[162.03506470 -157.40646362]
[147.06860352 -155.36151123]
[144.84349060 -140.52746582]
[142.61836243 -125.69341278]
[140.50373840 -110.84321594]
[138.49972534 -95.97769165]
[140.63156128 -91.70401001]
[140.10131836 -86.04575348]
[136.20835876 -80.70193481]
[133.76263428 -65.90266418]
[131.31690979 -51.10338974]
[136.87550354 -37.28488159]
[126.99164581 -24.93093681]
[124.54591370 -10.13166523]
[122.10018921 4.66760588]
[129.15538025 20.73593712]
[117.35334015 34.87076569]
[115.12821960 49.70481110]
[128.68090820 56.00141907]
[139.91162109 65.86010742]
[147.91111755 78.48271942]
[152.03179932 92.84734344]
[151.94004822 107.79104614]
[147.64329529 122.10398865]
[139.48937988 134.62742615]
[128.13845825 144.34745789]
[114.50947571 150.47717285]
[99.70582581 152.52030945]
[97.48070526 167.35435486]
[95.25558472 182.18840027]
[93.03047180 197.02244568]
[90.80535126 211.85647583]
[88.58023834 226.69052124]
[86.35511780 241.52456665]
[84.79459381 256.44317627]
[83.90177917 271.41659546]
[83.00896454 286.38998413]
[82.11614990 301.36340332]
[81.22333527 316.33679199]
[90.08832550 304.23672485]
[103.28450012 297.10504150]
[118.26387787 296.31875610]
[132.13417053 302.02969360]
[142.21725464 313.13516235]
[146.56623840 327.49084473]
[144.34140015 342.32495117]
[135.97232056 354.77316284]
[123.07494354 362.43200684]
[108.13954163 363.82260132]
[94.04991150 358.67651367]
[83.52654266 347.98733521]
[78.60118866 333.81768799]
[75.06151581 348.39407349]
[71.52184296 362.97045898]
[68.09078217 377.57278442]
[64.76851654 392.20022583]
[61.44626236 406.82769775]
[58.12400055 421.45513916]
[70.37178802 432.56295776]
[75.31829071 448.24185181]
[71.70373535 464.18399048]
[60.60700989 476.05914307]
[45.12602997 480.69073486]
[42.02191925 495.36602783]
[38.91780853 510.04132080]
[35.81370163 524.71661377]
[32.70959091 539.39190674]
[29.60548019 554.06726074]
[43.91099167 558.62036133]
[57.69206619 564.57525635]
[70.81173706 571.87268066]
[83.13960266 580.44018555]
[94.55315399 590.19262695]
[104.93894958 601.03302002]
[114.19375610 612.85363770]
[122.22560883 625.53698730]
[128.95468140 638.95709229]
[134.31408691 652.98046875]
[138.25054932 667.46777344]
[140.72497559 682.27508545]
[141.71273804 697.25518799]
[141.20405579 712.25915527]
[139.20394897 727.13793945]
[135.73233032 741.74365234]
[130.82366943 755.93109131]
[124.52678680 769.55926514]
[116.90423584 782.49279785]
[108.03178406 794.60302734]
[97.99761963 805.76971436]
[86.90146637 815.88177490]
[74.85359955 824.83874512]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 187]
[39 186]
[40 185]
[41 184]
[42 183]
[43 182]
[49 177]
[50 176]
[51 175]
[52 174]
[54 173]
[55 172]
[56 171]
[57 158]
[58 157]
[59 156]
[60 155]
[61 154]
[68 153]
[69 152]
[70 151]
[71 150]
[72 149]
[73 148]
[74 147]
[84 137]
[85 136]
[88 134]
[89 133]
[90 132]
[92 130]
[93 129]
[94 128]
[95 125]
[96 124]
[98 123]
[99 122]
[100 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
