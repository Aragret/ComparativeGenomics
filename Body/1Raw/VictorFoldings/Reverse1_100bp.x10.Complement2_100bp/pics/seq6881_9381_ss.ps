%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxCGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAA\
) } def
/len { sequence length } bind def

/coor [
[135.24874878 440.29013062]
[134.07774353 425.31655884]
[134.75572205 410.31256104]
[137.27244568 395.50561523]
[141.58972168 381.12017822]
[147.64212036 367.37432861]
[155.33789062 354.47647095]
[164.56036377 342.62213135]
[175.16972351 331.99099731]
[187.00515747 322.74423218]
[199.88720703 315.02203369]
[193.81336975 301.30679321]
[181.58520508 292.80258179]
[183.07182312 277.05139160]
[176.99798584 263.33612061]
[170.92414856 249.62084961]
[164.34413147 236.14111328]
[157.26702881 222.91558838]
[144.44021606 215.34443665]
[144.75119019 199.52629089]
[137.67408752 186.30076599]
[130.59696960 173.07524109]
[123.51987457 159.84971619]
[116.44276428 146.62417603]
[102.15746307 142.56637573]
[94.79187012 129.25462341]
[99.14493561 114.29840088]
[87.37055206 106.75814056]
[87.62953949 92.77870178]
[80.55243683 79.55317688]
[73.47532654 66.32765198]
[66.39822388 53.10212326]
[59.32111740 39.87659454]
[52.24401093 26.65106773]
[45.16690826 13.42553997]
[38.08980179 0.20001215]
[37.46792221 15.18711567]
[31.22786522 28.82755852]
[20.29530525 39.09786224]
[6.29202461 44.47449112]
[-8.70467472 44.15984726]
[-22.47012138 38.20061493]
[-32.96229553 27.48080444]
[-38.62474060 13.59063911]
[-38.61746979 -1.40935946]
[-32.94155884 -15.29402924]
[-22.43900108 -26.00366402]
[-8.66778374 -31.94955063]
[6.32921362 -32.24965286]
[20.32727623 -26.85945320]
[31.24876022 -16.58010864]
[27.06174850 -30.98389053]
[22.87473869 -45.38767242]
[11.59288025 -56.47957230]
[15.47002411 -70.86071014]
[11.28301239 -85.26448822]
[8.66937160 -70.49394989]
[3.08176827 -56.57350922]
[-5.24220800 -44.09506989]
[-15.94861794 -33.58922577]
[-28.58222008 -25.50268555]
[-42.60582733 -20.17929840]
[-57.42314529 -17.84541512]
[-72.40414429 -18.60027122]
[-86.91181183 -22.41177368]
[-100.32927704 -29.11785507]
[-112.08602905 -38.43336487]
[-121.68216705 -49.96220779]
[-128.70964050 -63.21417236]
[-132.86965942 -77.62577057]
[-133.98533630 -92.58422852]
[-132.00920105 -107.45348358]
[-127.02532196 -121.60131073]
[-119.24559021 -134.42611694]
[-109.00080872 -145.38259888]
[-96.72660065 -154.00488281]
[-82.94485474 -159.92633057]
[-68.24159241 -162.89517212]
[-53.24199295 -162.78515625]
[-38.58385468 -159.60098267]
[-24.89044762 -153.47802734]
[-12.74402046 -144.67665100]
[-2.66104627 -133.57107544]
[4.92974186 -120.63353729]
[9.70561790 -106.41397095]
[11.70963192 -121.27949524]
[13.71364498 -136.14501953]
[15.60693741 -151.02505493]
[17.38940430 -165.91877747]
[19.17186928 -180.81250000]
[20.95433617 -195.70620728]
[22.73680115 -210.59992981]
[24.29732323 -225.51853943]
[25.63555908 -240.45872498]
[26.97379303 -255.39891052]
[28.31202698 -270.33908081]
[29.65026093 -285.27926636]
[15.47875309 -290.45910645]
[3.13132930 -299.13110352]
[-6.55014420 -310.70397949]
[-12.90556812 -324.38870239]
[-15.50161839 -339.25216675]
[-14.16129303 -354.28100586]
[-8.97597599 -368.45050049]
[-0.29921272 -380.79458618]
[11.27740192 -390.47158813]
[24.96455383 -396.82171631]
[39.82903290 -399.41204834]
[54.85734940 -398.06591797]
[69.02485657 -392.87512207]
[81.36557770 -384.19360352]
[91.03810883 -372.61325073]
[97.38296509 -358.92364502]
[99.96753693 -344.05816650]
[98.61560822 -329.03036499]
[93.41934967 -314.86486816]
[84.73305511 -302.52749634]
[73.14897156 -292.85943604]
[59.45692062 -286.51986694]
[44.59044647 -283.94104004]
[43.25221252 -269.00085449]
[41.91397858 -254.06066895]
[40.57574463 -239.12048340]
[39.23751068 -224.18029785]
[41.55804062 -220.00607300]
[41.28098297 -214.32978821]
[37.63051987 -208.81745911]
[35.84805298 -193.92375183]
[34.06558609 -179.03002930]
[32.28311920 -164.13630676]
[30.50065422 -149.24259949]
[32.82704163 -142.22763062]
[28.57917404 -134.14100647]
[26.57515907 -119.27548218]
[24.57114601 -104.40995789]
[25.68679428 -89.45149994]
[29.87380600 -75.04772186]
[40.85618210 -64.98607635]
[37.27851868 -49.57468414]
[41.46553040 -35.17090225]
[45.65254211 -20.76712036]
[51.31533051 -6.87709332]
[58.39243317 6.34843445]
[65.46954346 19.57396126]
[72.54664612 32.79948807]
[79.62374878 46.02501678]
[86.70085907 59.25054550]
[93.77796173 72.47607422]
[100.85506439 85.70159912]
[112.62944794 93.24185944]
[112.37046051 107.22129822]
[127.22889709 111.89726257]
[134.21768188 125.41064453]
[129.66828918 139.54707336]
[136.74539185 152.77259827]
[143.82250977 165.99813843]
[150.89961243 179.22366333]
[157.97671509 192.44918823]
[171.30972290 200.96630859]
[170.49255371 215.83848572]
[177.56965637 229.06401062]
[184.34938049 215.68360901]
[199.00596619 212.49224854]
[210.73510742 221.84249878]
[210.89053345 236.84169006]
[199.35765076 246.43298340]
[184.63941956 243.54701233]
[190.71325684 257.26226807]
[196.78709412 270.97753906]
[209.44969177 280.46273804]
[207.52864075 295.23294067]
[213.60247803 308.94821167]
[227.97834778 304.59918213]
[242.77969360 302.04977417]
[257.78216553 301.33865356]
[272.75830078 302.47659302]
[287.48107910 305.44635010]
[301.72729492 310.20291138]
[315.28100586 316.67413330]
[327.93670654 324.76196289]
[339.50256348 334.34375000]
[349.80322266 345.27426147]
[358.68255615 357.38775635]
[366.00592041 370.50064087]
[371.66232300 384.41412354]
[375.56600952 398.91726685]
[377.65777588 413.79019165]
[377.90594482 428.80743408]
[376.30676270 443.74136353]
[372.88442993 458.36557007]
[367.69085693 472.45834351]
[360.80474854 485.80606079]
[352.33053589 498.20635986]
[342.39666748 509.47125244]
[331.15374756 519.42999268]
[318.77218628 527.93157959]
[305.43972778 534.84710693]
[291.35845947 540.07177734]
[276.74185181 543.52642822]
[261.81149292 545.15856934]
[246.79371643 544.94354248]
[231.91619873 542.88464355]
[217.40447998 539.01300049]
[203.47854614 533.38732910]
[190.34951782 526.09289551]
[178.21643066 517.24035645]
[167.26321411 506.96386719]
[157.65589905 495.41918945]
[149.54016113 482.78137207]
[143.03901672 469.24200439]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 172]
[12 171]
[14 169]
[15 168]
[16 167]
[17 161]
[18 160]
[20 158]
[21 157]
[22 156]
[23 155]
[24 154]
[27 151]
[29 149]
[30 148]
[31 147]
[32 146]
[33 145]
[34 144]
[35 143]
[36 142]
[51 141]
[52 140]
[53 139]
[55 137]
[56 136]
[85 135]
[86 134]
[87 133]
[88 131]
[89 130]
[90 129]
[91 128]
[92 127]
[93 124]
[94 123]
[95 122]
[96 121]
[97 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
