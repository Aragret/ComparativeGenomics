%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxGAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCG\
) } def
/len { sequence length } bind def

/coor [
[80.86750793 517.34118652]
[65.80887604 519.23907471]
[51.08246613 515.56524658]
[38.67990875 506.81643677]
[30.27854919 494.17596436]
[27.01459885 479.35333252]
[29.32948303 464.35311890]
[36.91012955 451.20404053]
[48.73132324 441.68438721]
[63.19433594 437.08160400]
[64.08715057 422.10821533]
[64.97997284 407.13479614]
[65.87278748 392.16140747]
[66.76560211 377.18798828]
[54.85684204 386.30838013]
[39.96949387 384.47348022]
[30.63170433 372.73440552]
[32.19258499 357.81585693]
[43.75799179 348.26379395]
[58.70273590 349.55014038]
[68.46548462 360.93707275]
[70.69060516 346.10302734]
[72.91571808 331.26898193]
[75.14083862 316.43493652]
[77.36595154 301.60089111]
[75.81011963 299.26904297]
[75.08422089 296.18041992]
[75.48112488 292.64801025]
[77.17510223 289.08502197]
[80.19049072 285.96069336]
[83.29460144 271.28540039]
[86.39871216 256.61007690]
[89.50282288 241.93478394]
[92.27843475 227.19383240]
[94.72415924 212.39456177]
[97.16989136 197.59529114]
[99.61561584 182.79602051]
[102.06134033 167.99674988]
[101.94967651 152.99716187]
[99.28388214 138.23594666]
[96.61808777 123.47472382]
[93.95228577 108.71350861]
[90.52122498 94.11118317]
[86.33421326 79.70740509]
[82.14720917 65.30361938]
[77.96019745 50.89983749]
[73.77318573 36.49605560]
[69.58617401 22.09227371]
[65.39916229 7.68849230]
[61.21215057 -6.71529007]
[57.02513885 -21.11907196]
[41.54258347 -29.26215363]
[36.83235168 -45.75847626]
[45.33951950 -60.26595306]
[40.51351929 -74.46840668]
[35.26680374 -88.52088165]
[30.02008438 -102.57334900]
[18.63114738 -108.62767792]
[14.55044174 -120.44002533]
[19.45005608 -131.49987793]
[14.41314030 -145.62890625]
[9.37622452 -159.75793457]
[4.33930826 -173.88696289]
[0.36180073 -177.26728821]
[-1.71379197 -181.42001343]
[-1.91173422 -185.49136353]
[-0.59164381 -188.76087952]
[-4.99264193 -203.10072327]
[-9.39363956 -217.44056702]
[-13.79463768 -231.78042603]
[-28.57850075 -229.13565063]
[-43.57336426 -228.29222107]
[-58.56056213 -229.26240540]
[-73.32153320 -232.03205872]
[-87.64102936 -236.56080627]
[-101.31021881 -242.78259277]
[-114.12976074 -250.60670471]
[-125.91271973 -259.91900635]
[-136.48727417 -270.58374023]
[-145.69918823 -282.44534302]
[-153.41413879 -295.33087158]
[-159.51962280 -309.05239868]
[-163.92660522 -323.40985107]
[-166.57081604 -338.19381714]
[-167.41369629 -353.18869019]
[-166.44296265 -368.17587280]
[-163.67274475 -382.93673706]
[-159.14346313 -397.25604248]
[-152.92115784 -410.92501831]
[-145.09658813 -423.74426270]
[-135.78382874 -435.52688599]
[-125.11870575 -446.10101318]
[-113.25674438 -455.31250000]
[-100.37092590 -463.02697754]
[-86.64916992 -469.13195801]
[-72.29157257 -473.53839111]
[-57.50751114 -476.18203735]
[-42.51258469 -477.02435303]
[-27.52545929 -476.05307007]
[-12.76469326 -473.28228760]
[1.55445874 -468.75247192]
[15.22318077 -462.52966309]
[28.04214287 -454.70462036]
[39.82440948 -445.39141846]
[50.39815521 -434.72589111]
[59.60918427 -422.86358643]
[67.32317352 -409.97747803]
[73.42763519 -396.25549316]
[77.83354950 -381.89773560]
[80.47665405 -367.11358643]
[81.31841278 -352.11862183]
[80.34654236 -337.13153076]
[77.57522583 -322.37088013]
[73.04487610 -308.05187988]
[66.82155609 -294.38339233]
[58.99601364 -281.56472778]
[49.68237686 -269.78280640]
[39.01646423 -259.20947266]
[27.15381622 -249.99887085]
[14.26742363 -242.28536987]
[0.54520917 -236.18141174]
[4.94620705 -221.84156799]
[9.34720516 -207.50172424]
[13.74820328 -193.16188049]
[18.46833801 -178.92388916]
[23.50525475 -164.79486084]
[28.54216957 -150.66583252]
[33.57908630 -136.53680420]
[47.54065323 -125.90469360]
[44.07255554 -107.82006836]
[49.31927490 -93.76759338]
[54.56599045 -79.71512604]
[57.05736542 -78.43013000]
[59.18984604 -76.08084869]
[60.55551910 -72.79903412]
[60.80163956 -68.86152649]
[59.67936707 -64.66694641]
[71.79554749 -60.28200912]
[79.28569794 -49.55915070]
[79.23159027 -36.28483200]
[71.42891693 -25.30608368]
[75.61592865 -10.90230083]
[79.80294037 3.50148082]
[83.98995209 17.90526199]
[88.17696381 32.30904388]
[92.36397552 46.71282578]
[96.55098724 61.11660767]
[100.73799896 75.52039337]
[104.92501068 89.92417145]
[112.07231140 76.73645020]
[125.97769165 71.11148071]
[140.28381348 75.62092590]
[148.45008850 88.20312500]
[146.74302673 103.10567474]
[135.94305420 113.51531982]
[120.98779297 114.67292023]
[108.71350861 106.04771423]
[111.37930298 120.80892944]
[114.04509735 135.57014465]
[116.71089172 150.33135986]
[120.90035248 135.92829895]
[128.49607849 122.99364471]
[139.03356934 112.31838226]
[151.86845398 104.55529022]
[166.21589661 100.17910004]
[181.19851685 99.45740509]
[195.90014648 102.43434143]
[209.42176819 108.92787170]
[220.93650818 118.54090881]
[229.74028015 130.68560791]
[235.29467773 144.61932373]
[237.26008606 159.49000549]
[235.51631165 174.38830566]
[230.16996765 188.40318298]
[221.54801941 200.67761230]
[210.17767334 210.46102905]
[196.75422668 217.15516663]
[182.09855652 220.35066223]
[167.10684204 219.85212708]
[152.69584656 215.69003296]
[139.74678040 208.11891174]
[129.05152893 197.60171509]
[121.26406097 184.78160095]
[116.86061096 170.44247437]
[114.41488647 185.24174500]
[111.96916199 200.04101562]
[109.52342987 214.84028625]
[107.07770538 229.63955688]
[108.91729736 234.52453613]
[108.71897888 239.16284180]
[106.91797638 242.81953430]
[104.17812347 245.03889465]
[101.07401276 259.71420288]
[97.96990204 274.38949585]
[94.86579132 289.06481934]
[92.19999695 303.82601929]
[89.97488403 318.66006470]
[87.74976349 333.49411011]
[85.52465057 348.32815552]
[83.29953003 363.16220093]
[81.73900604 378.08081055]
[80.84619141 393.05419922]
[79.95337677 408.02761841]
[79.06056213 423.00100708]
[78.16773987 437.97442627]
[91.98133087 444.26324463]
[102.58753204 455.12017822]
[108.55194855 469.07690430]
[109.06793976 484.24588013]
[104.06572723 498.57565308]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 205]
[11 204]
[12 203]
[13 202]
[14 201]
[21 200]
[22 199]
[23 198]
[24 197]
[25 196]
[30 195]
[31 194]
[32 193]
[33 192]
[34 188]
[35 187]
[36 186]
[37 185]
[38 184]
[39 160]
[40 159]
[41 158]
[42 157]
[43 149]
[44 148]
[45 147]
[46 146]
[47 145]
[48 144]
[49 143]
[50 142]
[51 141]
[54 137]
[55 132]
[56 131]
[57 130]
[60 128]
[61 127]
[62 126]
[63 125]
[67 124]
[68 123]
[69 122]
[70 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
