%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUAGGAAAUUUUCAACUCUUUCGGUACAACAAUCUGUACCCCCGUACUCAAUCGUCAAGAACACUCGAAAGAGCCAUUUAUUCCCCAGCAUUCGGAGAxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[57.43545532 656.27343750]
[46.18635941 666.25170898]
[33.41264725 674.18518066]
[19.48184204 679.84564209]
[4.79476166 683.07019043]
[-10.22601700 683.76605225]
[-25.14831543 681.91320801]
[-39.54278946 677.56500244]
[-52.99528503 670.84649658]
[-65.11874390 661.95098877]
[-75.56434631 651.13446045]
[-84.03156281 638.70812988]
[-90.27675629 625.02947998]
[-94.12026215 610.49206543]
[-95.45147705 595.51422119]
[-94.23210907 580.52685547]
[-90.49723816 565.96118164]
[-84.35432434 552.23626709]
[-75.98011017 539.74707031]
[-65.61553955 528.85284424]
[-53.55883026 519.86712646]
[-40.15686417 513.04840088]
[-25.79524994 508.59280396]
[-10.88719845 506.62863159]
[4.13835621 507.21234131]
[7.24246645 492.53704834]
[10.34657669 477.86172485]
[5.41055202 463.80880737]
[15.83618355 451.90850830]
[18.94029427 437.23321533]
[17.24902725 430.03866577]
[22.20141029 422.36328125]
[25.52367020 407.73580933]
[28.84592819 393.10836792]
[32.16819000 378.48089600]
[30.79009819 376.03979492]
[30.29593086 372.90573120]
[30.95446587 369.41262817]
[32.90874863 365.98547363]
[36.14816666 363.09408569]
[40.33517838 348.69030762]
[44.52219009 334.28652954]
[48.70920181 319.88275146]
[52.46550369 305.36068726]
[55.67877579 290.70889282]
[58.78288651 276.03359985]
[61.88699722 261.35830688]
[55.55633163 244.99095154]
[67.97775269 231.39721680]
[70.86302948 216.67732239]
[73.74829865 201.95742798]
[67.17465210 185.68617249]
[79.39230347 171.90899658]
[82.05809784 157.14778137]
[84.72389221 142.38656616]
[87.38969421 127.62534332]
[90.05548859 112.86412811]
[84.00343323 102.91355133]
[86.15850830 91.46817017]
[95.41504669 84.40008545]
[98.30032349 69.68019867]
[101.18559265 54.96030426]
[104.07086182 40.24041367]
[106.95613861 25.52052116]
[109.84140778 10.80063057]
[108.06352997 4.43268919]
[109.54593658 -1.05361223]
[113.03794861 -4.31165886]
[116.36021423 -18.93911934]
[118.58532715 -33.77316284]
[119.70098114 -48.73161697]
[120.81662750 -63.69007111]
[121.93227386 -78.64852142]
[115.24281311 -92.98594666]
[123.90529633 -105.10249329]
[125.02094269 -120.06094360]
[126.13658905 -135.01939392]
[114.09336090 -126.07732391]
[99.23498535 -128.13366699]
[90.07300568 -140.01046753]
[91.85582733 -154.90412903]
[103.56217194 -164.28291321]
[118.48610687 -162.77421570]
[128.07824707 -151.24319458]
[130.52397156 -166.04246521]
[132.96969604 -180.84173584]
[135.19480896 -195.67578125]
[137.19882202 -210.54130554]
[139.20283508 -225.40682983]
[133.37861633 -240.11700439]
[142.74693298 -251.69647217]
[144.75094604 -266.56198120]
[146.64424133 -281.44201660]
[148.42669678 -296.33575439]
[150.20916748 -311.22946167]
[151.43614197 -326.17919922]
[152.10592651 -341.16424561]
[152.77571106 -356.14929199]
[138.68025208 -361.68072510]
[127.14620209 -371.49111938]
[119.42467499 -384.51635742]
[116.35325623 -399.34353638]
[118.26509857 -414.36431885]
[124.95282745 -427.94934082]
[135.69100952 -438.62503052]
[149.31484985 -445.23333740]
[164.34651184 -447.05746460]
[179.15551758 -443.89956665]
[192.13545227 -436.10214233]
[201.87837219 -424.51101685]
[207.32743835 -410.38351440]
[207.89157104 -395.25207520]
[203.50958252 -380.75802612]
[194.65679932 -368.47360229]
[182.29348755 -359.73132324]
[167.76075745 -355.47949219]
[167.09097290 -340.49444580]
[166.42118835 -325.50939941]
[179.08354187 -333.55084229]
[193.31446838 -328.80941772]
[198.62341309 -314.78033447]
[191.09686279 -301.80532837]
[176.28308105 -299.44906616]
[165.10289001 -309.44699097]
[163.32041931 -294.55328369]
[161.53794861 -279.65957642]
[163.86434937 -272.64459229]
[159.61647034 -264.55798340]
[157.61245728 -249.69245911]
[163.58001709 -236.04556274]
[154.06837463 -223.40281677]
[152.06436157 -208.53729248]
[150.06034851 -193.67176819]
[152.19216919 -189.39808655]
[151.66192627 -183.73982239]
[147.76896667 -178.39601135]
[145.32324219 -163.59674072]
[142.87751770 -148.79747009]
[141.09504700 -133.90374756]
[139.97940063 -118.94529724]
[138.86375427 -103.98684692]
[145.63301086 -90.71935272]
[136.89073181 -77.53287506]
[135.77508545 -62.57442093]
[134.65942383 -47.61596680]
[133.54377747 -32.65751266]
[143.26943970 -44.07730484]
[157.36856079 -49.19731903]
[172.15568542 -46.67919540]
[183.76548767 -37.18116760]
[189.16319275 -23.18599892]
[186.93785095 -8.35198784]
[177.67117310 3.44328666]
[163.78543091 9.11656952]
[148.91032410 7.18487883]
[136.93418884 -1.84684741]
[130.98767090 -15.61685944]
[127.66541290 -0.98939919]
[124.56130219 13.68590355]
[121.67603302 28.40579414]
[118.79075623 43.12568665]
[115.90548706 57.84557724]
[113.02021027 72.56546783]
[110.13494110 87.28536224]
[115.97894287 103.00871277]
[104.81670380 115.52992249]
[102.15090942 130.29113770]
[99.48511505 145.05235291]
[96.81932068 159.81356812]
[94.15351868 174.57478333]
[100.85323334 185.59643555]
[98.32899475 197.83621216]
[88.46819305 204.84271240]
[85.58291626 219.56259155]
[82.69764709 234.28248596]
[89.23252106 245.40266418]
[86.52632904 257.60348511]
[76.56230164 264.46240234]
[73.45819092 279.13769531]
[70.35408020 293.81301880]
[71.63985443 302.85650635]
[67.09296417 308.68295288]
[68.52410889 312.78244019]
[68.57152557 316.72732544]
[67.45372772 320.10165405]
[65.50188446 322.60302734]
[63.11298370 324.06976318]
[58.92597198 338.47354126]
[54.73896027 352.87731934]
[50.55194855 367.28109741]
[46.79565048 381.80316162]
[43.47338867 396.43063354]
[40.15113068 411.05807495]
[36.82886887 425.68554688]
[33.61559677 440.33734131]
[30.51148605 455.01263428]
[35.22548294 470.11523438]
[25.02187920 480.96585083]
[21.91776848 495.64114380]
[18.81365967 510.31646729]
[32.78865051 515.86694336]
[45.62450409 523.69946289]
[56.95190430 533.58874512]
[66.44494629 545.25024414]
[73.83048248 558.34838867]
[78.89603424 572.50634766]
[81.49584198 587.31683350]
[81.55510712 602.35357666]
[79.07212067 617.18402100]
[74.11833954 631.38153076]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 200]
[26 199]
[27 198]
[29 196]
[30 195]
[32 194]
[33 193]
[34 192]
[35 191]
[40 190]
[41 189]
[42 188]
[43 187]
[44 182]
[45 180]
[46 179]
[47 178]
[49 175]
[50 174]
[51 173]
[53 170]
[54 169]
[55 168]
[56 167]
[57 166]
[60 164]
[61 163]
[62 162]
[63 161]
[64 160]
[65 159]
[68 158]
[69 157]
[70 146]
[71 145]
[72 144]
[73 143]
[75 141]
[76 140]
[77 139]
[84 138]
[85 137]
[86 136]
[87 133]
[88 132]
[89 131]
[91 129]
[92 128]
[93 126]
[94 125]
[95 124]
[96 118]
[97 117]
[98 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
