%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxGAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCG\
) } def
/len { sequence length } bind def

/coor [
[145.53584290 484.08349609]
[147.26980591 469.15066528]
[151.37684631 454.68939209]
[157.75057983 441.07424927]
[166.22590637 428.65792847]
[176.58328247 417.76202393]
[188.55445862 408.66879272]
[201.82933044 401.61370850]
[197.00334167 387.41125488]
[192.17733765 373.20880127]
[187.35133362 359.00634766]
[182.52534485 344.80389404]
[179.54118347 342.92584229]
[177.31840515 339.50906372]
[176.57031250 334.92718506]
[177.81639099 329.85821533]
[173.62937927 315.45443726]
[162.64700317 305.39279175]
[166.22467041 289.98141479]
[162.03765869 275.57760620]
[157.85064697 261.17382812]
[153.02464294 246.97138977]
[147.56929016 232.99858093]
[135.73304749 223.95686340]
[137.92150879 208.28775024]
[132.46615601 194.31494141]
[127.01079559 180.34214783]
[121.24475861 166.49465942]
[115.17092896 152.77940369]
[109.09709167 139.06413269]
[103.02325439 125.34886169]
[96.94942474 111.63359833]
[90.67206573 98.01027679]
[83.89207458 84.63000488]
[76.81496429 71.40447998]
[69.73786163 58.17895126]
[62.66075516 44.95342255]
[55.58364868 31.72789574]
[48.50654602 18.50236893]
[41.42943954 5.27684164]
[34.35233307 -7.94868612]
[21.46354675 -7.13705635]
[9.26942921 -11.24540997]
[-0.42978045 -19.62993813]
[-6.21630335 -31.01832581]
[-7.26201105 -43.70273972]
[-3.44677043 -55.79590988]
[4.62893724 -65.51194000]
[-2.05125761 -78.94231415]
[-8.73145199 -92.37268829]
[-15.41164684 -105.80306244]
[-22.03539276 -112.09304047]
[-22.08964348 -119.48349762]
[-28.56913948 -133.01184082]
[-35.04863739 -146.54019165]
[-35.76684189 -131.55738831]
[-41.24979019 -117.59539795]
[-50.91884613 -106.12764740]
[-63.75362015 -98.36435699]
[-78.39962006 -95.12481689]
[-93.31122589 -96.75088501]
[-106.91477203 -103.07097626]
[-117.77464294 -113.41809845]
[-124.74478149 -126.70031738]
[-127.08960724 -141.51591492]
[-124.56166840 -156.30136108]
[-117.42773438 -169.49632263]
[-106.44066620 -179.70829773]
[-92.75997162 -185.85958862]
[-77.82939148 -187.30105591]
[-63.22459030 -183.88055420]
[-50.48685074 -175.95906067]
[-40.96031570 -164.37240601]
[-43.84558868 -179.09230042]
[-46.73086166 -193.81217957]
[-56.97816086 -205.86637878]
[-51.83345413 -219.84425354]
[-54.71872711 -234.56414795]
[-57.60400009 -249.28404236]
[-60.48927307 -264.00393677]
[-66.84370422 -250.41639709]
[-79.08370209 -241.74562073]
[-94.00976562 -240.25811768]
[-107.72025299 -246.34272766]
[-116.63127899 -258.40896606]
[-118.41352081 -273.30270386]
[-112.60110474 -287.13076782]
[-100.71337891 -296.27856445]
[-85.85778046 -298.35485840]
[-71.91750336 -292.81689453]
[-62.53688431 -281.11312866]
[-63.20667267 -296.09817505]
[-63.87645721 -311.08322144]
[-78.58319092 -314.49124146]
[-91.82452393 -321.74172974]
[-102.61788177 -332.29663086]
[-110.16230011 -345.37271118]
[-113.89795685 -359.99966431]
[-113.54762268 -375.09204102]
[-109.13730621 -389.52990723]
[-100.99427795 -402.24185181]
[-89.72280884 -412.28457642]
[-76.15930939 -418.91287231]
[-61.31028366 -421.63482666]
[-46.27763367 -420.24847412]
[-32.17687607 -414.85671997]
[-20.05438042 -405.85961914]
[-10.80972004 -393.92483521]
[-5.12890816 -379.93801880]
[-3.43349862 -364.93710327]
[-5.84930277 -350.03518677]
[-12.19705105 -336.33816528]
[-22.00569916 -324.86239624]
[-34.54737854 -316.45950317]
[-48.89141846 -311.75299072]
[-48.22163391 -296.76797485]
[-47.55184555 -281.78292847]
[-45.76938248 -266.88919067]
[-42.88410950 -252.16931152]
[-39.99883652 -237.44941711]
[-37.11356354 -222.72952271]
[-27.07263947 -211.72821045]
[-32.01097107 -196.69746399]
[-29.12569618 -181.97756958]
[-26.24042511 -167.25767517]
[-21.52029037 -153.01968384]
[-15.04079437 -139.49133301]
[-8.56129837 -125.96299744]
[-1.98127091 -112.48326111]
[4.69892359 -99.05288696]
[11.37911797 -85.62250519]
[18.05931282 -72.19213104]
[35.27100372 -71.74927521]
[49.96318054 -62.60306168]
[58.04063034 -47.19660950]
[57.19819641 -29.73233032]
[47.57786179 -15.02579117]
[54.65496826 -1.80026376]
[61.73207092 11.42526340]
[68.80917358 24.65079117]
[75.88628387 37.87631989]
[82.96338654 51.10184479]
[90.04049683 64.32737732]
[97.11759949 77.55290222]
[100.36804199 78.91925812]
[103.11817169 81.92788696]
[104.60331726 86.32648468]
[104.20040894 91.53078461]
[108.62470245 94.34851837]
[111.15532684 99.44451904]
[110.66468811 105.55976105]
[116.73852539 119.27503204]
[122.81235504 132.99029541]
[128.88619995 146.70556641]
[134.96002197 160.42082214]
[139.17793274 163.49594116]
[141.55664062 167.48280334]
[142.05685425 171.52815247]
[140.98359680 174.88679504]
[146.43894958 188.85958862]
[151.89430237 202.83238220]
[164.12074280 212.87353516]
[161.54208374 227.54322815]
[166.99743652 241.51602173]
[173.99642944 228.24899292]
[188.28532410 223.68527222]
[201.67878723 230.43916321]
[206.50444031 244.64172363]
[199.99794006 258.15710449]
[185.88648987 263.24307251]
[172.25442505 256.98681641]
[176.44143677 271.39062500]
[180.62844849 285.79440308]
[191.91030884 296.88629150]
[188.03315735 311.26742554]
[192.22016907 325.67120361]
[196.72779846 339.97790527]
[201.55380249 354.18035889]
[206.37979126 368.38281250]
[211.20579529 382.58526611]
[216.03178406 396.78771973]
[230.85676575 394.29446411]
[245.88970947 394.21170044]
[260.74121094 396.54159546]
[275.02664185 401.22381592]
[288.37591553 408.13708496]
[300.44326782 417.10229492]
[310.91613770 427.88723755]
[319.52325439 440.21255493]
[326.04165649 453.75903320]
[330.30252075 468.17572021]
[332.19546509 483.08923340]
[331.67144775 498.11328125]
[328.74407959 512.85864258]
[323.48916626 526.94348145]
[316.04281616 540.00286865]
[306.59790039 551.69860840]
[295.39907837 561.72766113]
[282.73641968 569.83038330]
[268.93792725 575.79675293]
[254.36102295 579.47235107]
[239.38327026 580.76184082]
[224.39262390 579.63195801]
[209.77738953 576.11187744]
[195.91612244 570.29284668]
[183.16787720 562.32550049]
[171.86285400 552.41625977]
[162.29388428 540.82183838]
[154.70883179 527.84246826]
[149.30416870 513.81445312]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 181]
[9 180]
[10 179]
[11 178]
[12 177]
[16 176]
[17 175]
[19 173]
[20 172]
[21 171]
[22 164]
[23 163]
[25 161]
[26 160]
[27 159]
[28 155]
[29 154]
[30 153]
[31 152]
[32 151]
[33 148]
[34 144]
[35 143]
[36 142]
[37 141]
[38 140]
[39 139]
[40 138]
[41 137]
[48 132]
[49 131]
[50 130]
[51 129]
[53 128]
[54 127]
[55 126]
[73 125]
[74 124]
[75 123]
[77 121]
[78 120]
[79 119]
[80 118]
[91 117]
[92 116]
[93 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
