%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAGACUCCAUUAUUUAUCCUAAUAGGGCAUAGCUUCCGGAAAAACCUGUCCACCACACACCACCGGAACCAUACACGAAAGAGCACAAUGUAGCGxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[99.25466919 909.47998047]
[84.24733734 909.23199463]
[69.31687927 907.69488525]
[54.57383347 904.87994385]
[40.12735367 900.80798340]
[26.08439636 895.50921631]
[12.54893684 889.02288818]
[-0.37881288 881.39697266]
[-12.60313892 872.68792725]
[-24.03353500 862.96026611]
[-34.58537292 852.28594971]
[-44.18053055 840.74414062]
[-52.74796677 828.42016602]
[-60.22424698 815.40527344]
[-66.55402374 801.79589844]
[-71.69042969 787.69274902]
[-75.59543610 773.20025635]
[-78.24013519 758.42572021]
[-79.60493469 743.47851562]
[-79.67974854 728.46929932]
[-78.46400452 713.50927734]
[-75.96671295 698.70910645]
[-72.20635986 684.17840576]
[-67.21079254 670.02471924]
[-61.01699066 656.35296631]
[-53.67081451 643.26422119]
[-45.22665024 630.85540771]
[-35.74702072 619.21850586]
[-25.30210686 608.43957520]
[-13.96924400 598.59844971]
[-1.83233690 589.76800537]
[11.01875496 582.01361084]
[24.48888588 575.39263916]
[38.47832489 569.95416260]
[52.88349915 565.73840332]
[67.59775543 562.77667236]
[82.51215363 561.09075928]
[97.51626587 560.69323730]
[98.40908051 545.71978760]
[99.30189514 530.74639893]
[100.19470978 515.77301025]
[101.08752441 500.79959106]
[101.98034668 485.82620239]
[102.87316132 470.85278320]
[103.09648895 455.85446167]
[102.64987946 440.86111450]
[102.20327759 425.86773682]
[101.75666809 410.87438965]
[101.31006622 395.88104248]
[100.86345673 380.88769531]
[86.37976837 377.14602661]
[73.52428436 369.46697998]
[63.34322739 358.46554565]
[56.66797638 345.02746582]
[54.04715729 330.23803711]
[55.70158768 315.29431152]
[61.50568390 301.40832520]
[70.99695587 289.70870972]
[83.41284180 281.14904785]
[97.75198364 276.43002319]
[97.30537415 261.43667603]
[96.85877228 246.44332886]
[96.41216278 231.44998169]
[95.96556091 216.45661926]
[83.57675171 208.23133850]
[78.34501648 194.12130737]
[82.47322083 179.46485901]
[94.57995605 169.93946838]
[94.13334656 154.94612122]
[93.68674469 139.95277405]
[80.44284821 135.40620422]
[69.54273224 126.61645508]
[62.29269028 114.63693237]
[59.56158829 100.90328217]
[61.67672729 87.06138611]
[68.38462067 74.77008057]
[78.88138580 65.50238800]
[91.90905762 60.36898041]
[91.68572998 45.37064362]
[91.35075378 30.37438393]
[90.90414429 15.38103485]
[90.45754242 0.38768473]
[77.80530548 -8.40021229]
[72.81205750 -22.78495598]
[77.19467163 -37.18136597]
[89.07193756 -46.12947083]
[88.17912292 -61.10287857]
[79.24148560 -74.15773010]
[85.81246185 -87.52453613]
[84.47422791 -102.46472168]
[83.13599396 -117.40490723]
[68.26951599 -119.98374176]
[54.57746506 -126.32331085]
[42.99338150 -135.99136353]
[34.30708694 -148.32873535]
[29.11083031 -162.49423218]
[27.75889969 -177.52203369]
[30.34347153 -192.38751221]
[36.68832397 -206.07711792]
[46.36085892 -217.65747070]
[58.70158386 -226.33898926]
[72.86908722 -231.52978516]
[87.89740753 -232.87591553]
[102.76187897 -230.28559875]
[116.44903564 -223.93545532]
[128.02565002 -214.25845337]
[136.70240784 -201.91438293]
[141.88772583 -187.74487305]
[143.22805786 -172.71603394]
[140.63200378 -157.85255432]
[134.27658081 -144.16786194]
[124.59510803 -132.59498596]
[112.24768066 -123.92298889]
[98.07617950 -118.74314117]
[99.41441345 -103.80295563]
[100.75264740 -88.86277008]
[109.59455872 -76.87654114]
[103.11930847 -62.44111252]
[105.18146515 -60.54225922]
[106.61571503 -57.71214676]
[107.06359100 -54.18584442]
[106.25824738 -50.32372665]
[104.06528473 -46.57607651]
[116.45409393 -38.35078430]
[121.68582916 -24.24075508]
[117.55762482 -9.58431244]
[105.45088959 -0.05892120]
[105.89749908 14.93442917]
[106.34410095 29.92777824]
[109.68535614 36.52003098]
[106.68406677 45.14731598]
[106.90739441 60.14565277]
[121.65667725 65.83760071]
[133.09751892 76.74844360]
[139.48216248 91.21136475]
[139.83520508 107.01689911]
[134.10275269 121.75048065]
[123.16050720 133.16130066]
[108.68009186 139.50616455]
[109.12670135 154.49951172]
[109.57330322 169.49285889]
[122.22554016 178.28076172]
[127.21879578 192.66549683]
[122.83617401 207.06192017]
[110.95890808 216.01002502]
[111.40551758 231.00337219]
[111.85211945 245.99671936]
[112.29872894 260.99008179]
[112.74533081 275.98342896]
[127.33992767 279.84057617]
[140.24328613 287.64605713]
[150.41410828 298.76000977]
[157.03442383 312.27590942]
[159.57537842 327.09466553]
[157.83949280 342.01388550]
[151.97592163 355.82543945]
[142.46774292 367.41336060]
[130.09211731 375.84399414]
[115.85680389 380.44110107]
[116.30341339 395.43444824]
[116.75001526 410.42779541]
[117.19662476 425.42114258]
[117.64323425 440.41448975]
[118.08983612 455.40783691]
[129.13742065 445.26138306]
[144.12910461 445.76077271]
[154.47697449 456.61996460]
[154.25328064 471.61828613]
[143.58618164 482.16403198]
[128.58627319 482.21615601]
[117.84656525 471.74560547]
[116.95375061 486.71902466]
[116.06093597 501.69241333]
[115.16811371 516.66583252]
[114.27529907 531.63922119]
[113.38248444 546.61260986]
[112.48966980 561.58605957]
[127.34023285 563.76373291]
[141.94860840 567.20996094]
[156.20666504 571.89923096]
[170.00880432 577.79687500]
[183.25286865 584.85919189]
[195.84077454 593.03393555]
[207.67935181 602.26049805]
[218.68092346 612.47064209]
[228.76405334 623.58874512]
[237.85409546 635.53247070]
[245.88372803 648.21337891]
[252.79351807 661.53765869]
[258.53228760 675.40661621]
[263.05755615 689.71759033]
[266.33584595 704.36456299]
[268.34286499 719.23913574]
[269.06372070 734.23120117]
[268.49313354 749.22973633]
[266.63531494 764.12371826]
[263.50396729 778.80279541]
[259.12234497 793.15838623]
[253.52285767 807.08416748]
[246.74694824 820.47698975]
[238.84480286 833.23779297]
[229.87492371 845.27203369]
[219.90373230 856.49060059]
[209.00502014 866.81048584]
[197.25952148 876.15521240]
[184.75416565 884.45568848]
[171.58154297 891.65039062]
[157.83920288 897.68603516]
[143.62886047 902.51800537]
[129.05575562 906.11047363]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 177]
[39 176]
[40 175]
[41 174]
[42 173]
[43 172]
[44 171]
[45 164]
[46 163]
[47 162]
[48 161]
[49 160]
[50 159]
[60 149]
[61 148]
[62 147]
[63 146]
[64 145]
[68 141]
[69 140]
[70 139]
[78 132]
[79 131]
[80 129]
[81 128]
[82 127]
[86 123]
[87 118]
[89 116]
[90 115]
[91 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
