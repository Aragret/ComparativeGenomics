%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[75.35921478 550.55615234]
[67.75506592 563.50042725]
[58.89984894 575.62329102]
[48.88157272 586.80419922]
[37.79980850 596.93206787]
[25.76469231 605.90618896]
[12.89583778 613.63732910]
[-0.67885399 620.04876709]
[-14.82446861 625.07672119]
[-29.40041733 628.67120361]
[-44.26183319 630.79650879]
[-59.26100922 631.43151855]
[-74.24887848 630.56994629]
[-89.07648468 628.22027588]
[-103.59645081 624.40594482]
[-117.66446686 619.16479492]
[-131.14071655 612.54901123]
[-143.89128113 604.62420654]
[-155.78941345 595.46923828]
[-166.71685791 585.17510986]
[-176.56503296 573.84411621]
[-185.23603821 561.58880615]
[-192.64372253 548.53106689]
[-198.71443176 534.80059814]
[-203.38784790 520.53393555]
[-206.61752319 505.87283325]
[-208.37133789 490.96301270]
[-208.63189697 475.95266724]
[-207.39659119 460.99096680]
[-204.67770386 446.22659302]
[-200.50224304 431.80633545]
[-194.91171265 417.87347412]
[-187.96168518 404.56649780]
[-179.72123718 392.01763916]
[-170.27226257 380.35165405]
[-159.70866394 369.68444824]
[-148.13542175 360.12210083]
[-135.66758728 351.75958252]
[-122.42906952 344.68002319]
[-108.55142212 338.95379639]
[-94.17258453 334.63781738]
[-79.43546295 331.77496338]
[-64.48652649 330.39373779]
[-49.47434616 330.50778198]
[-34.54812241 332.11602783]
[-19.85620308 335.20248413]
[-5.54461050 339.73645020]
[8.24442005 345.67288208]
[15.51764965 332.55419922]
[22.79087830 319.43551636]
[30.06410789 306.31680298]
[37.33733749 293.19812012]
[44.61056900 280.07940674]
[51.88379669 266.96072388]
[51.28813553 252.07803345]
[64.74647522 243.76036072]
[72.01970673 230.64167786]
[76.73983765 216.40368652]
[78.74385071 201.53814697]
[80.74786377 186.67262268]
[82.75188446 171.80709839]
[84.75589752 156.94157410]
[72.41165924 152.09230042]
[61.46398163 144.60606384]
[52.46705246 134.86178589]
[45.87631226 123.35276031]
[42.02538681 110.66158295]
[41.10922241 97.43070221]
[43.17419052 84.32988739]
[48.11576462 72.02230835]
[55.68379211 61.13100433]
[65.49517059 52.20730591]
[77.05323029 45.70293808]
[89.77288818 41.94716644]
[103.01026154 41.13011551]
[105.67605591 26.36889648]
[108.34185028 11.60768032]
[111.00764465 -3.15353727]
[113.67343903 -17.91475487]
[116.33923340 -32.67597198]
[111.17766571 -47.63153076]
[121.05368805 -58.78112793]
[123.71948242 -73.54234314]
[126.38527679 -88.30356598]
[114.66082764 -78.94742584]
[99.68180084 -78.15441895]
[87.03501129 -86.22031403]
[81.43739319 -100.13673401]
[84.97671509 -114.71318817]
[96.33290863 -124.51303101]
[111.27038574 -125.88116455]
[124.21784210 -118.30729675]
[130.34631348 -104.61514282]
[134.74731445 -118.95498657]
[139.14831543 -133.29483032]
[143.54931641 -147.63468933]
[130.04513550 -154.23648071]
[117.74002838 -162.86959839]
[106.93703461 -173.32148743]
[97.90216827 -185.33471680]
[90.85793304 -198.61346436]
[85.97779083 -212.83073425]
[83.38192749 -227.63639832]
[83.13426208 -242.66587830]
[85.24089813 -257.54904175]
[89.64996338 -271.91937256]
[96.25286865 -285.42300415]
[104.88700867 -297.72741699]
[115.33977509 -308.52954102]
[127.35375214 -317.56341553]
[140.63308716 -324.60656738]
[154.85075378 -329.48553467]
[169.65664673 -332.08016968]
[184.68614197 -332.32659912]
[199.56913757 -330.21871948]
[213.93910217 -325.80847168]
[227.44219971 -319.20446777]
[239.74588013 -310.56930542]
[250.54714966 -300.11563110]
[259.58001709 -288.10092163]
[266.62207031 -274.82101440]
[271.49987793 -260.60293579]
[274.09329224 -245.79682922]
[274.33847046 -230.76731873]
[272.22937012 -215.88450623]
[267.81796265 -201.51489258]
[261.21282959 -188.01234436]
[252.57664490 -175.70938110]
[242.12208557 -164.90896606]
[230.10662842 -155.87707520]
[216.82612610 -148.83612061]
[202.60765076 -143.95950317]
[187.80134583 -141.36730957]
[172.77180481 -141.12336731]
[157.88916016 -143.23368835]
[153.48815918 -128.89384460]
[149.08715820 -114.55399323]
[144.68617249 -100.21414185]
[141.14649963 -85.63777161]
[138.48069763 -70.87654877]
[135.81489563 -56.11533356]
[141.16714478 -42.21559525]
[131.10044861 -30.01017570]
[128.43466187 -15.24895954]
[125.76885986 -0.48774189]
[123.10306549 14.27347565]
[120.43727112 29.03469276]
[117.77147675 43.79590988]
[132.81649780 51.03263855]
[145.22917175 62.19725418]
[154.01380920 76.39419556]
[158.46575928 92.48466492]
[158.22792053 109.17796326]
[153.31935120 125.13506317]
[144.13381958 139.07597351]
[131.40811157 149.88241577]
[116.16301727 156.68757629]
[99.62142181 158.94558716]
[97.61740875 173.81111145]
[95.61339569 188.67663574]
[93.60938263 203.54217529]
[91.60536957 218.40769958]
[99.98111725 205.96395874]
[110.96851349 195.75233459]
[123.99117279 188.30851746]
[138.36595154 184.02299500]
[153.33879089 183.12057495]
[168.12422180 185.64860535]
[181.94664001 191.47445679]
[194.08096313 200.29252625]
[203.89064026 211.64022827]
[210.86106873 224.92228699]
[214.62658691 239.44195557]
[214.98968506 254.43756104]
[211.93130493 269.12246704]
[205.61187744 282.72631836]
[196.36293030 294.53549194]
[184.66960144 303.93051147]
[171.14533997 310.41851807]
[156.49958801 313.65917969]
[141.50062561 313.48248291]
[126.93527985 309.89773560]
[113.56761169 303.09292603]
[102.09886932 293.42504883]
[93.13066864 281.40124512]
[87.13346863 267.65231323]
[84.42187500 252.89942932]
[85.13839722 237.91490173]
[77.86517334 251.03359985]
[77.94059753 266.85461426]
[65.00248718 274.23394775]
[57.72925949 287.35266113]
[50.45603180 300.47134399]
[43.18280411 313.59002686]
[35.90957260 326.70874023]
[28.63634300 339.82742310]
[21.36311340 352.94610596]
[33.70315552 361.49609375]
[45.13055801 371.23226929]
[55.53175735 382.05786133]
[64.80336761 393.86532593]
[72.85324860 406.53726196]
[79.60138702 419.94775391]
[84.98072815 433.96350098]
[88.93779755 448.44522095]
[91.43327332 463.24896240]
[92.44234467 478.22763062]
[91.95498657 493.23233032]
[89.97605133 508.11395264]
[86.52519989 522.72454834]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 197]
[49 196]
[50 195]
[51 194]
[52 193]
[53 192]
[54 191]
[56 189]
[57 188]
[58 162]
[59 161]
[60 160]
[61 159]
[62 158]
[75 148]
[76 147]
[77 146]
[78 145]
[79 144]
[80 143]
[82 141]
[83 140]
[84 139]
[93 138]
[94 137]
[95 136]
[96 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
