%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUUAUCUACCUCUGUAUGUCUUUAUCAGUUUGGUGUAGAUGUUUUACGGUCAUAGUCCGCCGCCGAAGCUUCGGUUUCACUACAAACCUACAUUUCACxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[21.30936623 759.23107910]
[11.57090282 770.66864014]
[0.42281446 780.73712158]
[-11.94414043 789.26434326]
[-25.31834602 796.10437012]
[-39.47095490 801.14007568]
[-54.15979385 804.28540039]
[-69.13351440 805.48651123]
[-84.13591003 804.72277832]
[-98.91025543 802.00732422]
[-113.20375061 797.38659668]
[-126.77181244 790.93969727]
[-139.38226318 782.77685547]
[-150.81935120 773.03784180]
[-160.88734436 761.88928223]
[-169.41397095 749.52191162]
[-176.25332642 736.14739990]
[-181.28840637 721.99456787]
[-184.43301392 707.30554199]
[-185.63337708 692.33178711]
[-184.86894226 677.32940674]
[-182.15278625 662.55523682]
[-177.53138733 648.26196289]
[-171.08381653 634.69415283]
[-162.92041016 622.08410645]
[-153.18086243 610.64752197]
[-142.03181458 600.58001709]
[-129.66404724 592.05401611]
[-116.28919220 585.21527100]
[-102.13610077 580.18084717]
[-87.44696808 577.03692627]
[-72.47312927 575.83728027]
[-57.47080994 576.60247803]
[-42.69672012 579.31933594]
[-38.08271027 565.04656982]
[-41.52995682 550.55639648]
[-29.92285347 539.80529785]
[-25.30884361 525.53259277]
[-20.69483376 511.25985718]
[-16.08082390 496.98712158]
[-29.96896744 487.38150024]
[-40.23099136 473.94848633]
[-45.85878754 457.98947144]
[-46.29388809 441.05490112]
[-41.48286438 424.79351807]
[-31.88360405 410.79205322]
[-18.42176437 400.42022705]
[-2.40150881 394.69677734]
[14.62083054 394.18948364]
[18.59292793 379.72494507]
[22.56502342 365.26043701]
[26.53711891 350.79589844]
[12.40818977 355.83309937]
[-0.41913328 348.05749512]
[-2.48902369 333.20101929]
[7.72436476 322.21527100]
[22.69210243 323.19854736]
[31.38024330 335.42440796]
[36.41716003 321.29537964]
[41.45407486 307.16632080]
[46.49098969 293.03729248]
[51.52790833 278.90826416]
[56.56482315 264.77923584]
[60.64448929 250.34469604]
[63.74860001 235.66938782]
[66.85270691 220.99409485]
[69.95681763 206.31878662]
[73.06092834 191.64347839]
[76.16503906 176.96818542]
[79.26914978 162.29287720]
[82.37326050 147.61758423]
[85.47737122 132.94227600]
[88.58148193 118.26697540]
[91.68559265 103.59166718]
[90.06130219 100.09394836]
[89.98663330 95.89724731]
[91.73920441 91.70970154]
[95.26989746 88.33715820]
[99.02619934 73.81509399]
[102.78249359 59.29303741]
[105.44829559 44.53182220]
[107.00881195 29.61321640]
[108.56933594 14.69461155]
[110.12985992 -0.22399339]
[111.46809387 -15.16417885]
[112.58374786 -30.12263107]
[113.69939423 -45.08108521]
[114.48071289 -60.06072235]
[114.92732239 -75.05406952]
[115.37392426 -90.04742432]
[108.05094147 -104.07184601]
[116.16374969 -116.56310272]
[116.61035156 -131.55645752]
[117.05696106 -146.54980469]
[117.50356293 -161.54315186]
[117.95017242 -176.53649902]
[118.39677429 -191.52986145]
[118.73175049 -206.52610779]
[118.95507812 -221.52445984]
[105.11885834 -227.88674927]
[95.07148743 -239.33096313]
[90.55374146 -253.87434387]
[92.34835815 -268.99716187]
[100.14438629 -282.07925415]
[112.59114075 -290.85412598]
[127.53212738 -293.80145264]
[142.37873840 -290.41058350]
[154.55871582 -281.26904297]
[161.96179199 -267.96060181]
[163.30534363 -252.79106140]
[158.35659790 -238.38864136]
[147.97294617 -227.24864197]
[133.95341492 -221.30113220]
[133.73008728 -206.30278015]
[136.77365112 -199.56791687]
[133.39012146 -191.08325195]
[132.94352722 -176.08990479]
[132.49691772 -161.09655762]
[132.05030823 -146.10319519]
[131.60369873 -131.10984802]
[131.15710449 -116.11650085]
[138.51202393 -103.16450500]
[130.36727905 -89.60081482]
[129.92066956 -74.60746765]
[129.47406006 -59.61411667]
[131.61282349 -56.81089020]
[132.50006104 -52.83246613]
[131.59823608 -48.27834702]
[128.65785217 -43.96543503]
[127.54219818 -29.00698280]
[126.42655182 -14.04852962]
[128.80897522 -9.90931320]
[128.61645508 -4.22952795]
[125.04846954 1.33652961]
[123.48794556 16.25513458]
[121.92742157 31.17373848]
[120.36689758 46.09234238]
[130.42825317 34.96718597]
[144.67356873 30.26922417]
[159.37916565 33.22649765]
[170.70103455 43.06598282]
[175.67965698 57.21565628]
[173.01362610 71.97683716]
[163.39987183 83.49097443]
[149.35136414 88.74831390]
[134.54037476 86.37459564]
[122.83844757 76.99029541]
[117.30455780 63.04933929]
[113.54825592 77.57139587]
[109.79195404 92.09346008]
[106.36089325 106.69577789]
[103.25678253 121.37107849]
[100.15267181 136.04638672]
[97.04856110 150.72167969]
[93.94445038 165.39698792]
[90.84033966 180.07229614]
[87.73623657 194.74758911]
[84.63212585 209.42289734]
[81.52801514 224.09820557]
[78.42390442 238.77349854]
[75.31979370 253.44880676]
[86.86730194 243.87513733]
[101.74436951 241.95867920]
[115.34117889 248.29324341]
[123.44460297 260.91601562]
[123.54371643 275.91567993]
[115.60780334 288.64443970]
[102.09589386 295.15814209]
[87.19480133 293.43844604]
[75.52178955 284.01821899]
[70.69385529 269.81616211]
[65.65693665 283.94519043]
[60.62002182 298.07421875]
[55.58310318 312.20324707]
[50.54618835 326.33227539]
[45.50927353 340.46130371]
[41.00164413 354.76800537]
[37.02954865 369.23251343]
[33.05744934 383.69705200]
[29.08535576 398.16156006]
[40.47304153 404.83782959]
[49.91737366 414.04550171]
[56.86941147 425.24240112]
[60.92675781 437.77096558]
[61.85684967 450.89675903]
[59.61027908 463.85171509]
[54.32338715 475.87887573]
[46.31001663 486.27673340]
[36.04285812 494.44012451]
[24.12559509 499.89550781]
[11.25739956 502.32830811]
[-1.80809140 501.60113525]
[-6.42210054 515.87384033]
[-11.03610992 530.14660645]
[-15.65011883 544.41931152]
[-12.53289890 559.93041992]
[-23.80997658 569.66058350]
[-28.42398643 583.93334961]
[-14.85531330 590.37896729]
[-2.24407649 598.54058838]
[9.19392776 608.27850342]
[19.26297951 619.42608643]
[27.79078674 631.79266357]
[34.63142395 645.16650391]
[39.66784286 659.31890869]
[42.81386185 674.00756836]
[44.01564407 688.98126221]
[43.25263214 703.98364258]
[40.53787994 718.75811768]
[35.91784286 733.05187988]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 198]
[35 197]
[37 195]
[38 194]
[39 193]
[40 192]
[49 180]
[50 179]
[51 178]
[52 177]
[58 176]
[59 175]
[60 174]
[61 173]
[62 172]
[63 171]
[64 161]
[65 160]
[66 159]
[67 158]
[68 157]
[69 156]
[70 155]
[71 154]
[72 153]
[73 152]
[74 151]
[78 150]
[79 149]
[80 148]
[81 137]
[82 136]
[83 135]
[84 134]
[85 131]
[86 130]
[87 129]
[88 125]
[89 124]
[90 123]
[92 121]
[93 120]
[94 119]
[95 118]
[96 117]
[97 116]
[98 114]
[99 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
