%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxUUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAG\
) } def
/len { sequence length } bind def

/coor [
[2.71728659 351.62228394]
[6.32175684 366.27389526]
[6.01031685 381.35916138]
[1.80420077 395.84954834]
[-6.00981140 408.75704956]
[-16.89894676 419.20162964]
[-30.12076759 426.47113037]
[-44.77378464 430.06994629]
[-59.85893631 429.75268555]
[-74.34768677 425.54098511]
[-87.25217438 417.72198486]
[-97.69254303 406.82882690]
[-104.95695496 393.60418701]
[-108.55010986 378.94976807]
[-108.22702026 363.86474609]
[-104.00971222 349.37762451]
[-96.18573761 336.47616577]
[-85.28853607 326.04000854]
[-72.06111145 318.78070068]
[-57.40531540 315.19320679]
[-42.32041550 315.52212524]
[-38.13340378 301.11834717]
[-33.94639206 286.71456909]
[-29.75938034 272.31076050]
[-33.63652420 257.92962646]
[-22.35466766 246.83773804]
[-18.16765594 232.43395996]
[-13.98064423 218.03016663]
[-24.11447716 229.08935547]
[-36.24259949 237.91593933]
[-49.88195419 244.15837097]
[-64.48928833 247.56802368]
[-79.48280334 248.00907898]
[-94.26531219 245.46398926]
[-108.24802399 240.03410339]
[-120.87402344 231.93569946]
[-131.64042664 221.49133301]
[-140.11839294 209.11700439]
[-145.97026062 195.30557251]
[-148.96295166 180.60713196]
[-148.97726440 165.60714722]
[-146.01261902 150.90303040]
[-140.18713379 137.08045959]
[-131.73278809 124.68996429]
[-120.98635101 114.22507477]
[-108.37583160 106.10259247]
[-94.40350342 100.64602661]
[-79.62588501 98.07272339]
[-64.63155365 98.48516083]
[-50.01773453 101.86692810]
[-36.36649323 108.08332062]
[-24.22154617 116.88674927]
[-14.06662560 127.92656708]
[-6.30619812 140.76306152]
[-1.24935818 154.88497925]
[0.90248221 169.72982788]
[0.06361619 184.70635986]
[-3.73108935 199.21412659]
[6.09949160 187.88453674]
[15.93007183 176.55494690]
[16.49215317 171.81225586]
[20.03953171 167.37229919]
[26.22595978 165.03999329]
[36.38950729 154.00811768]
[46.55305481 142.97624207]
[46.77479553 139.45727539]
[48.71200562 135.87086487]
[52.37779999 133.02215576]
[57.42525482 131.69163513]
[68.07126617 121.12458038]
[78.71727753 110.55753326]
[89.36328125 99.99048615]
[99.19386292 88.66088867]
[108.15455627 76.63151550]
[106.06828308 61.19502258]
[115.32706451 49.12317276]
[130.05625916 47.22935867]
[139.01695251 35.19997787]
[147.97764587 23.17060280]
[156.93833923 11.14122391]
[164.40608215 -1.86772799]
[170.27503967 -15.67190456]
[176.14401245 -29.47608185]
[182.01296997 -43.28025818]
[187.77900696 -57.12774277]
[193.44178772 -71.01776886]
[182.34365845 -84.64365387]
[179.68890381 -101.92552185]
[186.11972046 -118.08871460]
[199.78063965 -128.71379089]
[216.85285950 -130.94487000]
[222.09957886 -144.99732971]
[227.34629822 -159.04980469]
[232.59301758 -173.10227966]
[237.83973694 -187.15475464]
[243.08645630 -201.20721436]
[248.33317566 -215.25968933]
[253.57989502 -229.31216431]
[258.82659912 -243.36463928]
[245.79771423 -250.86782837]
[234.18161011 -260.41329956]
[224.29518127 -271.74060059]
[216.40812683 -284.54077148]
[210.73561096 -298.46459961]
[207.43241882 -313.13220215]
[206.58862305 -328.14346313]
[208.22726440 -343.08883667]
[212.30361938 -357.56063843]
[218.70651245 -371.16406250]
[227.26124573 -383.52798462]
[237.73445129 -394.31509399]
[249.84040833 -403.23114014]
[263.24884033 -410.03286743]
[277.59399414 -414.53469849]
[292.48449707 -416.61389160]
[307.51412964 -416.21365356]
[322.27285767 -413.34494019]
[336.35806274 -408.08599854]
[349.38552856 -400.58029175]
[360.99978638 -391.03259277]
[370.88403320 -379.70336914]
[378.76864624 -366.90167236]
[384.43844604 -352.97677612]
[387.73883057 -338.30853271]
[388.57974243 -323.29711914]
[386.93820190 -308.35202026]
[382.85906982 -293.88101196]
[376.45355225 -280.27883911]
[367.89642334 -267.91656494]
[357.42114258 -257.13146973]
[345.31347656 -248.21775818]
[331.90371704 -241.41862488]
[317.55770874 -236.91952515]
[302.66680908 -234.84323120]
[287.63726807 -235.24635315]
[272.87908936 -238.11791992]
[267.63235474 -224.06544495]
[262.38565063 -210.01296997]
[257.13891602 -195.96051025]
[251.89221191 -181.90803528]
[246.64549255 -167.85556030]
[241.39877319 -153.80308533]
[236.15205383 -139.75062561]
[230.90533447 -125.69815063]
[239.94802856 -116.87500000]
[245.00067139 -105.24436951]
[245.28025818 -92.51999664]
[240.70993042 -80.59140015]
[231.93563843 -71.24331665]
[220.23510742 -65.88864136]
[207.33181763 -65.35498810]
[201.66902161 -51.46495819]
[202.05476379 -44.08437347]
[195.81713867 -37.41129684]
[189.94818115 -23.60712051]
[184.07922363 -9.80294418]
[178.21026611 4.00123262]
[190.02581787 -5.23958158]
[204.26777649 -9.94770336]
[219.26303101 -9.57002640]
[233.24992371 -4.15091991]
[244.58531189 5.67298460]
[251.93750000 18.74758530]
[254.44279480 33.53688812]
[251.80685425 48.30346680]
[244.33934021 61.31255341]
[232.91754150 71.03585052]
[218.88328552 76.33108521]
[203.88528442 76.57617188]
[189.68550110 71.74231720]
[177.95210266 62.39739609]
[170.06353760 49.63924789]
[166.94651794 34.96667862]
[168.96772766 20.10192108]
[160.00701904 32.13129807]
[151.04632568 44.16067505]
[142.08563232 56.19005203]
[144.48767090 70.84494019]
[135.57162476 83.17208862]
[120.18393707 85.59220886]
[111.22324371 97.62158966]
[125.55522919 93.19507599]
[140.20199585 96.43115997]
[151.33491516 106.48393250]
[156.04385376 120.72562408]
[153.09791565 135.43350220]
[143.26716614 146.76293945]
[129.12133789 151.75247192]
[114.35810089 149.09782410]
[102.83655548 139.49293518]
[97.56838989 125.44850159]
[99.93032837 110.63648987]
[89.28432465 121.20354462]
[78.63831329 131.77058411]
[67.99230194 142.33763123]
[57.58493042 153.13978577]
[47.42138290 164.17167664]
[37.25783920 175.20355225]
[27.25966454 186.38552856]
[17.42908478 197.71511841]
[7.59850359 209.04470825]
[0.42313737 222.21717834]
[-3.76387382 236.62097168]
[-7.95088530 251.02474976]
[-4.37322426 266.43612671]
[-15.35559845 276.49777222]
[-19.54261017 290.90155029]
[-23.72962189 305.30535889]
[-27.91663170 319.70913696]
[-15.00611401 327.51815796]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 209]
[22 208]
[23 207]
[24 206]
[26 204]
[27 203]
[28 202]
[58 201]
[59 200]
[60 199]
[63 198]
[64 197]
[65 196]
[69 195]
[70 194]
[71 193]
[72 192]
[73 181]
[74 180]
[77 177]
[78 176]
[79 175]
[80 174]
[81 157]
[82 156]
[83 155]
[84 154]
[85 152]
[86 151]
[91 144]
[92 143]
[93 142]
[94 141]
[95 140]
[96 139]
[97 138]
[98 137]
[99 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
