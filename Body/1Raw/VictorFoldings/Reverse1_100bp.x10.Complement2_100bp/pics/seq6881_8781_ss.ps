%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxCCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGA\
) } def
/len { sequence length } bind def

/coor [
[120.74535370 549.79895020]
[111.55413055 537.89544678]
[104.56973267 524.57672119]
[100.00439453 510.24740601]
[97.99686432 495.34301758]
[98.60813904 480.31643677]
[101.81964874 465.62435913]
[107.53379822 451.71322632]
[115.57694244 439.00579834]
[125.70465088 427.88821411]
[137.60916138 418.69833374]
[150.92871094 411.71545410]
[165.25852966 407.15173340]
[163.25451660 392.28622437]
[161.25050354 377.42068481]
[159.24649048 362.55514526]
[149.87817383 350.97567749]
[155.70239258 336.26553345]
[153.58776855 321.41531372]
[151.36265564 306.58126831]
[149.13754272 291.74725342]
[145.92427063 277.09545898]
[141.73725891 262.69168091]
[137.55024719 248.28788757]
[133.36323547 233.88410950]
[129.17622375 219.48031616]
[124.98921204 205.07653809]
[120.58821106 190.73669434]
[115.97419739 176.46395874]
[111.36019135 162.19122314]
[106.31162262 156.79365540]
[106.78544617 147.67152405]
[102.38445282 133.33168030]
[97.98345184 118.99183655]
[85.23217010 112.11063385]
[80.98094177 98.25879669]
[87.67669678 85.40916443]
[76.23094940 74.48646545]
[79.89354706 60.04919815]
[75.49255371 45.70935059]
[71.09155273 31.36950302]
[59.64580536 20.44680023]
[63.30840683 6.00953579]
[58.90740967 -8.33031082]
[47.46165848 -19.25301170]
[51.12425995 -33.69027710]
[46.72326279 -48.03012466]
[30.97708702 -46.34846497]
[15.20813179 -47.75111008]
[0.01463459 -52.18309784]
[-14.02733421 -59.47456741]
[-26.38571739 -69.34726715]
[-36.59263229 -81.42520142]
[-44.26208496 -95.24890137]
[-49.10456085 -110.29294586]
[-50.93796158 -125.98590851]
[-49.69444656 -141.73208618]
[-45.42294693 -156.93406677]
[-38.28723526 -171.01545715]
[-28.55965614 -183.44268799]
[-16.61071777 -193.74525452]
[-2.89500046 -201.53349304]
[-7.72099829 -215.73594666]
[-12.54699612 -229.93840027]
[-17.37299347 -244.14086914]
[-32.04676819 -248.82983398]
[-41.04074860 -261.11648560]
[-41.07491684 -276.16516113]
[-32.34574509 -288.20425415]
[-37.17174149 -302.40670776]
[-41.99773788 -316.60916138]
[-46.82373810 -330.81161499]
[-58.58962250 -341.38870239]
[-55.35849380 -355.92861938]
[-60.18449402 -370.13107300]
[-74.99770355 -367.57858276]
[-90.02783966 -367.37490845]
[-104.90476990 -369.52511597]
[-119.26213837 -373.97625732]
[-132.74638367 -380.61868286]
[-145.02543640 -389.28881836]
[-155.79692078 -399.77316284]
[-164.79557800 -411.81353760]
[-171.79980469 -425.11343384]
[-176.63711548 -439.34533691]
[-179.18838501 -454.15875244]
[-179.39079285 -469.18890381]
[-177.23936462 -484.06567383]
[-172.78704834 -498.42266846]
[-166.14352417 -511.90637207]
[-157.47236633 -524.18469238]
[-146.98712158 -534.95532227]
[-134.94599915 -543.95300293]
[-121.64552307 -550.95611572]
[-107.41323090 -555.79223633]
[-92.59959412 -558.34228516]
[-77.56942749 -558.54345703]
[-62.69284821 -556.39080811]
[-48.33621597 -551.93731689]
[-34.85307312 -545.29266357]
[-22.57544899 -536.62048340]
[-11.80569744 -526.13433838]
[-2.80903077 -514.09252930]
[4.19299984 -500.79144287]
[9.02796364 -486.55874634]
[11.57679367 -471.74490356]
[11.77672386 -456.71472168]
[9.62283134 -441.83831787]
[5.16815615 -427.48205566]
[-1.47760010 -413.99945068]
[-10.15078068 -401.72256470]
[-20.63780022 -390.95367432]
[-32.68040466 -381.95800781]
[-45.98203659 -374.95706177]
[-41.15604019 -360.75460815]
[-29.73534393 -351.19338989]
[-32.62128067 -335.63760376]
[-27.79528427 -321.43515015]
[-22.96928596 -307.23269653]
[-18.14328766 -293.03024292]
[-3.88641453 -288.80181885]
[5.25495434 -276.84777832]
[5.60863161 -261.62515259]
[-3.17053795 -248.96685791]
[1.65545976 -234.76440430]
[6.48145723 -220.56195068]
[11.30745506 -206.35949707]
[25.35568428 -208.45945740]
[39.55829239 -208.07197571]
[53.47813034 -205.20770264]
[66.68653107 -199.95359802]
[78.77651215 -192.47016907]
[89.37532806 -182.98669434]
[98.15592957 -171.79411316]
[104.84710693 -159.23614502]
[109.24180603 -145.69866943]
[111.20358276 -131.59797668]
[110.67082977 -117.36785126]
[107.65868378 -103.44631958]
[102.25863647 -90.26210022]
[94.63572693 -78.22145844]
[85.02350616 -67.69562531]
[73.71688843 -59.00940323]
[61.06310654 -52.43112183]
[65.46410370 -38.09127426]
[76.59506989 -28.19425583]
[73.24725342 -12.73130894]
[77.64825439 1.60853779]
[88.77921295 11.50555706]
[85.43140411 26.96850395]
[89.83239746 41.30834961]
[94.23339844 55.64819717]
[105.36435699 65.54521942]
[102.01654816 81.00816345]
[114.76782990 87.88936615]
[119.01905823 101.74120331]
[112.32330322 114.59083557]
[116.72429657 128.93067932]
[121.12529755 143.27053833]
[125.63292694 157.57722473]
[130.24693298 171.84994507]
[134.86094666 186.12268066]
[139.50354004 190.82989502]
[140.86726379 196.34689331]
[139.39299011 200.88952637]
[143.58000183 215.29330444]
[147.76701355 229.69709778]
[151.95402527 244.10087585]
[156.14103699 258.50466919]
[160.32804871 272.90844727]
[165.99258423 259.01913452]
[178.20552063 250.31027222]
[193.18254089 249.48040771]
[206.28286743 256.78668213]
[213.44720459 269.96514893]
[212.45561218 284.93234253]
[203.61535645 297.05050659]
[189.66566467 302.56466675]
[174.92901611 299.76623535]
[163.97158813 289.52212524]
[166.19670105 304.35617065]
[168.42181396 319.19021606]
[172.78961182 327.21267700]
[170.56793213 334.26150513]
[180.07957458 346.90426636]
[174.11201477 360.55114746]
[176.11602783 375.41665649]
[178.12004089 390.28219604]
[180.12405396 405.14773560]
[195.15081787 405.75387573]
[209.84399414 408.96038818]
[223.75708008 414.66983032]
[236.46725464 422.70864868]
[247.58827209 432.83255005]
[256.78219604 444.73394775]
[263.76962280 458.05111694]
[268.33819580 472.37939453]
[270.34912109 487.28332520]
[269.74124146 502.31002808]
[266.53308105 517.00280762]
[260.82208252 530.91528320]
[252.78181458 543.62451172]
[242.65663147 554.74438477]
[230.75419617 563.93695068]
[217.43623352 570.92285156]
[203.10745239 575.48986816]
[188.20329285 577.49908447]
[173.17666626 576.88946533]
[158.48420715 573.67962646]
[144.57243347 567.96710205]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 189]
[14 188]
[15 187]
[16 186]
[18 184]
[19 182]
[20 181]
[21 180]
[22 170]
[23 169]
[24 168]
[25 167]
[26 166]
[27 165]
[28 162]
[29 161]
[30 160]
[32 159]
[33 158]
[34 157]
[37 154]
[39 152]
[40 151]
[41 150]
[43 148]
[44 147]
[46 145]
[47 144]
[62 127]
[63 126]
[64 125]
[65 124]
[69 120]
[70 119]
[71 118]
[72 117]
[74 115]
[75 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
