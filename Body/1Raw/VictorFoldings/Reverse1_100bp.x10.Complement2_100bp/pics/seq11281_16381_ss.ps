%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAGAAAUGAUAUUUUCGAUAACACAUUCGAUCAGUAUAAUUCAACAACCGAGUCCUCAAACUAUCAAGAACCCGUCACUCUCACUCAUCAUCUUACAAxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[-50.58042526 596.66430664]
[-47.12250519 611.30804443]
[-46.49869156 626.34161377]
[-48.73153305 641.22149658]
[-53.74031448 655.40979004]
[-61.34396744 668.39367676]
[-71.26763153 679.70373535]
[-83.15257263 688.93115234]
[-96.56915283 695.74230957]
[-111.03237152 699.89099121]
[-126.01939392 701.22729492]
[-140.98844910 699.70288086]
[-155.39840698 695.37280273]
[-168.72837830 688.39361572]
[-180.49645996 679.01770020]
[-190.27728271 667.58386230]
[-197.71723938 654.50549316]
[-202.54740906 640.25537109]
[-204.59315491 625.34863281]
[-203.78054810 610.32409668]
[-200.13896179 595.72497559]
[-193.80001831 582.07891846]
[-184.99288940 569.87927246]
[-174.03593445 559.56707764]
[-161.32525635 551.51507568]
[-147.32031250 546.01434326]
[-132.52738953 543.26373291]
[-117.48123169 543.36267090]
[-102.72576141 546.30755615]
[-97.06297302 532.41754150]
[-91.40018463 518.52752686]
[-85.73740387 504.63751221]
[-80.07461548 490.74746704]
[-89.20366669 482.60385132]
[-95.40654755 472.03118896]
[-98.07209778 460.04153442]
[-96.92862701 447.78796387]
[-92.07146454 436.45361328]
[-83.95527649 427.13748169]
[-73.35148621 420.74786377]
[-61.27500153 417.91384888]
[-48.88706589 418.92333984]
[-42.60970306 405.30001831]
[-36.33234406 391.67669678]
[-30.05498123 378.05340576]
[-30.11076927 370.66293335]
[-23.58140564 364.27505493]
[-17.10190964 350.74670410]
[-10.62241459 337.21835327]
[-4.44664621 323.54867554]
[1.42231464 309.74450684]
[7.29127550 295.94033813]
[5.15052843 281.20037842]
[17.67051125 271.52770996]
[17.39470673 264.14218140]
[23.73098373 257.56271362]
[29.80481720 243.84745789]
[35.87865067 230.13218689]
[41.95248413 216.41691589]
[33.26578903 202.48785400]
[34.60667801 185.96018982]
[45.64414215 173.36354065]
[62.17731476 169.79277039]
[68.04627228 155.98860168]
[65.90552521 141.24864197]
[78.42550659 131.57595825]
[84.29447174 117.77178192]
[90.16342926 103.96760559]
[95.51461792 89.95458221]
[100.34061432 75.75212860]
[105.16661072 61.54967499]
[109.99260712 47.34721756]
[114.81861115 33.14476395]
[111.93267059 17.58899498]
[123.35336304 8.02777290]
[128.17936707 -6.17468262]
[127.97734070 -15.30687904]
[133.18438721 -20.55173683]
[130.53036499 -36.14874649]
[142.09214783 -45.53887177]
[147.12907410 -59.66790390]
[150.77716064 -74.21752167]
[153.00227356 -89.05156708]
[155.22738647 -103.88561249]
[157.23139954 -118.75113678]
[159.01387024 -133.64485168]
[156.92640686 -142.53756714]
[160.93534851 -148.74644470]
[162.93936157 -163.61196899]
[164.94337463 -178.47749329]
[166.94738770 -193.34301758]
[168.95140076 -208.20855713]
[161.76623535 -218.92004395]
[163.74142456 -231.26031494]
[173.27952576 -238.70013428]
[175.50465393 -253.53417969]
[169.90008545 -268.32943726]
[179.43975830 -279.76812744]
[165.49647522 -285.49945068]
[153.33036804 -294.40167236]
[143.64874268 -305.95718384]
[137.01451111 -319.49417114]
[133.81335449 -334.22564697]
[134.23139954 -349.29510498]
[138.24432373 -363.82644653]
[145.61883545 -376.97482300]
[155.92617798 -387.97583008]
[168.56710815 -396.18984985]
[182.80670166 -401.13937378]
[197.81706238 -402.53659058]
[212.72554016 -400.30032349]
[226.66534424 -394.56054688]
[238.82606506 -385.65097046]
[248.50067139 -374.08959961]
[255.12669373 -360.54858398]
[258.31890869 -345.81515503]
[257.89175415 -330.74597168]
[253.87001038 -316.21707153]
[246.48751831 -303.07315063]
[236.17350769 -292.07839966]
[223.52760315 -283.87203979]
[209.28501892 -278.93115234]
[194.27380371 -277.54302979]
[200.03752136 -263.80880737]
[190.33869934 -251.30906677]
[188.11357117 -236.47502136]
[195.40721130 -220.51351929]
[183.81694031 -206.20454407]
[181.81292725 -191.33900452]
[179.80889893 -176.47348022]
[177.80488586 -161.60795593]
[175.80087280 -146.74243164]
[173.90759277 -131.86239624]
[172.12512207 -116.96867371]
[174.32034302 -112.72720337]
[173.87440491 -107.06168365]
[170.06143188 -101.66049194]
[167.83631897 -86.82644653]
[165.61120605 -71.99240875]
[175.27253723 -83.46666718]
[188.72981262 -90.09249878]
[203.71524048 -90.75333405]
[217.70353699 -85.33781433]
[228.33738708 -74.75853729]
[233.82484436 -60.79831314]
[233.24113464 -45.80967331]
[226.68466187 -32.31847382]
[215.26026917 -22.59821320]
[200.89320374 -18.28692818]
[186.00453186 -20.11114693]
[173.10328674 -27.76345634]
[164.36354065 -39.95430756]
[161.25810242 -54.63098526]
[156.22117615 -40.50195694]
[159.23547363 -25.91554832]
[147.31341553 -15.51482010]
[142.38182068 -1.34868515]
[137.55581665 12.85377026]
[140.78694153 27.39368439]
[129.02105713 37.97076035]
[124.19506836 52.17321777]
[119.36906433 66.37567139]
[114.54306793 80.57812500]
[109.71707153 94.78058624]
[124.12077332 90.59328461]
[136.46253967 99.11858368]
[137.64448547 114.07194519]
[126.79532623 124.43031311]
[111.91265106 122.55786896]
[103.96760559 109.83657074]
[98.09864807 123.64074707]
[92.22968292 137.44491577]
[93.95064545 153.17225647]
[81.85044861 161.85755920]
[75.98149109 175.66172791]
[83.93353271 186.92031860]
[85.27349091 200.52998352]
[79.75778961 212.92541504]
[68.92485809 220.91238403]
[55.66775131 222.49075317]
[49.59391785 236.20602417]
[43.52008438 249.92129517]
[37.44625092 263.63656616]
[31.47468758 277.39666748]
[33.19564819 293.12399292]
[21.09545135 301.80929565]
[15.22649193 315.61346436]
[9.35753059 329.41766357]
[9.99242401 334.59875488]
[8.70516777 339.05929565]
[6.09212446 342.18771362]
[2.90593100 343.69784546]
[-3.57356501 357.22619629]
[-10.05306053 370.75454712]
[-16.43166542 384.33074951]
[-22.70902634 397.95407104]
[-28.98638725 411.57739258]
[-35.26374817 425.20071411]
[-23.44973183 438.72817993]
[-18.75872040 456.00988770]
[-22.09154892 473.55014038]
[-32.73084641 487.82192993]
[-48.49483490 495.97610474]
[-66.18458557 496.41024780]
[-71.84737396 510.30029297]
[-77.51016235 524.19030762]
[-83.17295074 538.08032227]
[-88.83573151 551.97033691]
[-76.22718811 560.18139648]
[-65.40063477 570.63043213]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 208]
[30 207]
[31 206]
[32 205]
[33 204]
[42 198]
[43 197]
[44 196]
[45 195]
[47 194]
[48 193]
[49 192]
[50 188]
[51 187]
[52 186]
[54 184]
[56 183]
[57 182]
[58 181]
[59 180]
[63 175]
[64 174]
[66 172]
[67 171]
[68 170]
[69 164]
[70 163]
[71 162]
[72 161]
[73 160]
[75 158]
[76 157]
[78 156]
[80 154]
[81 153]
[82 139]
[83 138]
[84 137]
[85 134]
[86 133]
[88 132]
[89 131]
[90 130]
[91 129]
[92 128]
[95 126]
[96 125]
[98 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
