%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[303.96041870 396.35568237]
[314.98443604 386.14859009]
[306.38586426 373.85775757]
[297.78732300 361.56692505]
[289.18875122 349.27609253]
[280.59017944 336.98522949]
[271.99160767 324.69439697]
[263.39306641 312.40356445]
[247.11444092 305.84811401]
[245.66981506 287.49072266]
[236.88920593 275.32925415]
[228.10861206 263.16781616]
[213.40924072 261.05490112]
[204.33122253 248.84654236]
[206.64709473 233.44282532]
[197.86648560 221.28137207]
[188.37759399 209.66410828]
[178.21403503 198.63223267]
[168.05049133 187.60035706]
[157.88694763 176.56846619]
[147.72340393 165.53659058]
[137.55986023 154.50471497]
[127.39630890 143.47283936]
[123.90726471 142.96398926]
[120.49134064 140.73991394]
[117.95201874 136.85337830]
[117.03883362 131.71400452]
[107.37802124 120.23931122]
[97.71721649 108.76461029]
[93.96038055 107.89363861]
[90.60569763 105.37094879]
[88.38224030 101.41326904]
[87.89512634 96.55501556]
[78.75632477 84.66038513]
[69.61752319 72.76575470]
[63.66384125 69.89082336]
[60.52672195 65.15209961]
[60.39000702 60.37817764]
[51.60940170 48.21672058]
[37.25802231 41.55725098]
[36.08093643 26.70923233]
[27.30033493 14.54777527]
[11.89660931 14.37044621]
[-0.30644420 5.26336813]
[-4.75438833 -9.11299419]
[0.05834457 -23.18337440]
[-8.72225857 -35.34482956]
[-17.50286102 -47.50628662]
[-31.85424042 -54.16575241]
[-33.03132629 -69.01377869]
[-41.81192780 -81.17523193]
[-54.39752579 -83.99756622]
[-61.46054077 -94.30764008]
[-59.66455460 -106.27011871]
[-68.26312256 -118.56095886]
[-76.86168671 -130.85179138]
[-85.46025085 -143.14263916]
[-98.63555145 -135.94023132]
[-112.52321625 -130.23095703]
[-126.95467377 -126.08412170]
[-141.75473022 -123.55006409]
[-156.74372864 -122.65954590]
[-171.73973083 -123.42337036]
[-186.56066895 -125.83227539]
[-201.02665710 -129.85700989]
[-214.96206665 -135.44873047]
[-228.19776917 -142.53955078]
[-240.57305908 -151.04338074]
[-251.93772888 -160.85700989]
[-262.15383911 -171.86131287]
[-271.09732056 -183.92269897]
[-278.65966797 -196.89474487]
[-284.74908447 -210.61999512]
[-289.29159546 -224.93183899]
[-292.23208618 -239.65653992]
[-293.53485107 -254.61534119]
[-293.18411255 -269.62667847]
[-291.18408203 -284.50830078]
[-287.55905151 -299.07958984]
[-282.35305786 -313.16366577]
[-275.62927246 -326.58950806]
[-267.46929932 -339.19421387]
[-257.97219849 -350.82470703]
[-247.25329590 -361.33984375]
[-235.44267273 -370.61196899]
[-222.68370056 -378.52853394]
[-209.13127136 -384.99340820]
[-194.94989014 -389.92816162]
[-180.31170654 -393.27285767]
[-165.39443970 -394.98690796]
[-150.37913513 -395.04949951]
[-135.44807434 -393.45986938]
[-120.78253174 -390.23733521]
[-106.56050110 -385.42098999]
[-92.95464325 -379.06930542]
[-80.13011932 -371.25939941]
[-68.24260712 -362.08605957]
[-57.43639755 -351.66064453]
[-47.84268570 -340.10971069]
[-39.57791901 -327.57348633]
[-32.74242783 -314.20416260]
[-27.41918945 -300.16400146]
[-23.67282295 -285.62341309]
[-21.54880524 -270.75897217]
[-21.07291794 -255.75109863]
[-22.25094223 -240.78193665]
[-25.06857491 -226.03324890]
[-29.49161339 -211.68402100]
[-35.46636581 -197.90849304]
[-42.92030334 -184.87384033]
[-51.76294327 -172.73831177]
[-61.88694382 -161.64923096]
[-73.16941071 -151.74119568]
[-64.57084656 -139.45036316]
[-55.97228241 -127.15952301]
[-47.37371826 -114.86868286]
[-31.09510803 -108.31324768]
[-29.65047264 -89.95583344]
[-20.86987114 -77.79438019]
[-7.14653969 -72.00477600]
[-5.34140587 -56.28688812]
[3.43919706 -44.12543488]
[12.21980000 -31.96397781]
[27.08984375 -32.10461426]
[39.33621597 -23.35873795]
[44.14064407 -8.90983295]
[39.46179199 5.76717234]
[48.24239349 17.92862892]
[61.96572495 23.71822739]
[63.77085876 39.43611908]
[72.55146027 51.59757233]
[81.51215363 63.62694931]
[90.65096283 75.52158356]
[99.78976440 87.41621399]
[109.19190979 99.10379791]
[118.85272217 110.57849884]
[128.51353455 122.05319977]
[138.42819214 133.30929565]
[148.59173584 144.34117126]
[158.75527954 155.37304688]
[168.91882324 166.40492249]
[179.08236694 177.43679810]
[189.24592590 188.46867371]
[199.40946960 199.50056458]
[199.02180481 184.50556946]
[207.42672729 172.08151245]
[221.48942566 166.86225891]
[235.96484375 170.79444885]
[245.45402527 182.41148376]
[246.41772461 197.38049316]
[238.49650574 210.11840820]
[224.64480591 215.87429810]
[210.02793884 212.50076294]
[218.80854797 224.66221619]
[234.15849304 227.31117249]
[242.89002991 239.76969910]
[240.27006531 254.38720703]
[249.05065918 266.54864502]
[257.83126831 278.71011353]
[270.41687012 281.53244019]
[277.47988892 291.84252930]
[275.68389893 303.80499268]
[284.28247070 316.09582520]
[292.88101196 328.38668823]
[301.47958374 340.67752075]
[310.07815552 352.96835327]
[318.67672729 365.25918579]
[327.27526855 377.55001831]
[340.64291382 370.69293213]
[354.81979370 365.71997070]
[369.54177856 362.72384644]
[384.53460693 361.76031494]
[399.51901245 362.84735107]
[414.21582031 365.96472168]
[428.35119629 371.05435181]
[441.66189575 378.02139282]
[453.89987183 386.73605347]
[464.83715820 397.03604126]
[474.27001953 408.72940063]
[482.02270508 421.59832764]
[487.95080566 435.40310669]
[491.94387817 449.88650513]
[493.92755127 464.77874756]
[493.86480713 479.80239868]
[491.75689697 494.67755127]
[487.64303589 509.12710571]
[481.59988403 522.88189697]
[473.73999023 535.68566895]
[464.20983887 547.29986572]
[453.18692017 557.50811768]
[440.87658691 566.12030029]
[427.50820923 572.97595215]
[413.33081055 577.94738770]
[398.60848999 580.94195557]
[383.61553955 581.90380859]
[368.63128662 580.81518555]
[353.93481445 577.69622803]
[339.79995728 572.60504150]
[326.49005127 565.63659668]
[314.25299072 556.92059326]
[303.31683350 546.61944580]
[293.88522339 534.92504883]
[286.13391113 522.05529785]
[280.20730591 508.24987793]
[276.21582031 493.76602173]
[274.23376465 478.87356567]
[274.29812622 463.84994507]
[276.40765381 448.97500610]
[280.52307129 434.52587891]
[286.56771851 420.77175903]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 168]
[3 167]
[4 166]
[5 165]
[6 164]
[7 163]
[8 162]
[10 159]
[11 158]
[12 157]
[15 154]
[16 153]
[17 144]
[18 143]
[19 142]
[20 141]
[21 140]
[22 139]
[23 138]
[27 137]
[28 136]
[29 135]
[33 134]
[34 133]
[35 132]
[38 131]
[39 130]
[41 128]
[42 127]
[46 123]
[47 122]
[48 121]
[50 119]
[51 118]
[54 116]
[55 115]
[56 114]
[57 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
