%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[108.93644714 696.48315430]
[97.65403748 686.58770752]
[87.14266205 675.87683105]
[77.46111298 664.41040039]
[68.66352081 652.25250244]
[60.79910278 639.47113037]
[53.91183472 626.13775635]
[48.04022598 612.32702637]
[43.21712112 598.11614990]
[39.46949387 583.58453369]
[36.81829834 568.81347656]
[35.27836227 553.88568115]
[34.85829926 538.88446045]
[35.56045532 523.89379883]
[37.38090897 508.99758911]
[40.30947495 494.27902222]
[44.32977676 479.82049561]
[49.41933060 465.70281982]
[55.54967499 452.00497437]
[62.68652344 438.80352783]
[70.78996277 426.17236328]
[79.81468201 414.18209839]
[89.71019745 402.89978027]
[100.42118835 392.38848877]
[111.88773346 382.70703125]
[124.04571533 373.90954590]
[136.82714844 366.04525757]
[150.16053772 359.15811157]
[144.29158020 345.35391235]
[138.42260742 331.54974365]
[132.55364990 317.74557495]
[126.68469238 303.94137573]
[120.81573486 290.13720703]
[106.94941711 284.82110596]
[100.80081177 270.90533447]
[106.47084045 256.39709473]
[100.60188293 242.59292603]
[99.75588226 257.56906128]
[95.52455902 271.95986938]
[88.12986755 285.01049805]
[77.95971680 296.03628540]
[65.54761505 304.45886230]
[51.54468536 309.83639526]
[36.68548584 311.88677979]
[21.74949646 310.50250244]
[7.52023697 305.75610352]
[-5.25585794 297.89663696]
[-15.90857983 287.33633423]
[-23.87910652 274.62924194]
[-28.74932289 260.44189453]
[-30.26374435 245.51852417]
[-28.34292793 230.64201355]
[-23.08763695 216.59274292]
[-14.77355289 204.10771179]
[-3.83681583 193.84185791]
[9.14885426 186.33370972]
[23.50225639 181.97712708]
[38.47043991 181.00064087]
[53.26819992 183.45547485]
[67.11927795 189.21287537]
[79.29708099 197.97079468]
[89.16277313 209.26982117]
[96.19943237 222.51878357]
[95.75283051 207.52543640]
[95.30622101 192.53207397]
[94.85961914 177.53872681]
[94.41300964 162.54537964]
[86.30020142 150.05412292]
[93.62319183 136.02969360]
[93.17658234 121.03634644]
[92.72998047 106.04299927]
[89.82558441 101.67510986]
[89.57518768 95.99086761]
[92.50000000 90.59805298]
[92.50000000 75.59805298]
[92.50000000 60.59805298]
[77.82312775 57.22235107]
[64.27202606 50.66826248]
[52.52492142 41.26739120]
[43.16894913 29.49372101]
[36.67081451 15.93973637]
[33.35351944 1.28659189]
[33.38029099 -13.73010921]
[36.74658203 -28.35724831]
[43.28042221 -41.86195755]
[52.65122604 -53.56834412]
[64.38652039 -62.89131165]
[77.89575195 -69.36580658]
[92.50000000 -72.67001343]
[92.50000000 -87.67001343]
[89.88853455 -92.18967438]
[89.32792664 -96.79825592]
[90.50861359 -100.69966888]
[92.84993744 -103.33605957]
[93.51972198 -118.32109833]
[94.18950653 -133.30613708]
[94.85929108 -148.29118347]
[87.74591827 -162.42308044]
[96.04380798 -174.79216003]
[96.71359253 -189.77720642]
[83.07292938 -196.54862976]
[73.37075043 -208.28692627]
[69.28802490 -222.95837402]
[71.53209686 -238.02104187]
[79.71417999 -250.86523438]
[92.41667175 -259.26562500]
[107.43878937 -261.76678467]
[122.17786407 -257.93539429]
[134.08026123 -248.43524170]
[141.08380127 -234.91229248]
[141.97511292 -219.70947266]
[136.59974670 -205.46078491]
[125.88901520 -194.63487244]
[111.69863129 -189.10742188]
[111.02884674 -174.12237549]
[118.19012451 -161.06231689]
[109.84432983 -147.62139893]
[109.17454529 -132.63635254]
[108.50476074 -117.65131378]
[107.83497620 -102.66627502]
[107.50000000 -87.67001343]
[107.50000000 -72.67001343]
[122.10424805 -69.36580658]
[135.61347961 -62.89131165]
[147.34877014 -53.56834412]
[156.71957397 -41.86195755]
[163.25341797 -28.35724831]
[166.61970520 -13.73010921]
[166.64648438 1.28659189]
[163.32917786 15.93973637]
[156.83105469 29.49372101]
[147.47508240 41.26739120]
[135.72796631 50.66826248]
[122.17687225 57.22235107]
[107.50000000 60.59805298]
[107.50000000 75.59805298]
[107.50000000 90.59805298]
[107.72332764 105.59638977]
[108.16993713 120.58974457]
[108.61653900 135.58309937]
[116.76129150 149.14677429]
[109.40635681 162.09877014]
[109.85296631 177.09213257]
[110.29957581 192.08547974]
[110.74617767 207.07882690]
[111.19278717 222.07217407]
[114.40605927 236.72396851]
[120.27501678 250.52813721]
[134.65702820 256.51107788]
[140.41235352 270.59408569]
[134.61990356 284.26824951]
[140.48887634 298.07241821]
[146.35783386 311.87661743]
[152.22679138 325.68078613]
[158.09574890 339.48495483]
[163.96470642 353.28912354]
[178.17549133 348.46566772]
[192.70700073 344.71765137]
[207.47795105 342.06607056]
[222.40577698 340.52572632]
[237.40695190 340.10525513]
[252.39761353 340.80703735]
[267.29391479 342.62707520]
[282.01254272 345.55526733]
[296.47116089 349.57519531]
[310.58898926 354.66436768]
[324.28698730 360.79434204]
[337.48861694 367.93084717]
[350.11999512 376.03393555]
[362.11050415 385.05834961]
[373.39309692 394.95358276]
[383.90466309 405.66427612]
[393.58642578 417.13058472]
[402.38421631 429.28833008]
[410.24887085 442.06954956]
[417.13635254 455.40274048]
[423.00820923 469.21337891]
[427.83157349 483.42419434]
[431.57946777 497.95574951]
[434.23089600 512.72674561]
[435.77111816 527.65454102]
[436.19143677 542.65576172]
[435.48953247 557.64636230]
[433.66934204 572.54266357]
[430.74105835 587.26129150]
[426.72100830 601.71984863]
[421.63168335 615.83764648]
[415.50158691 629.53558350]
[408.36499023 642.73712158]
[400.26174927 655.36846924]
[391.23724365 667.35888672]
[381.34191895 678.64141846]
[370.63113403 689.15289307]
[359.16476440 698.83453369]
[347.00692749 707.63220215]
[334.22564697 715.49676514]
[320.89236450 722.38415527]
[307.08169556 728.25585938]
[292.87081909 733.07910156]
[278.33923340 736.82684326]
[263.56823730 739.47814941]
[248.64039612 741.01824951]
[233.63920593 741.43841553]
[218.64857483 740.73638916]
[203.75230408 738.91607666]
[189.03373718 735.98767090]
[174.57514954 731.96746826]
[160.45744324 726.87805176]
[146.75953674 720.74780273]
[133.55804443 713.61108398]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 156]
[29 155]
[30 154]
[31 153]
[32 152]
[33 151]
[36 148]
[37 147]
[63 146]
[64 145]
[65 144]
[66 143]
[67 142]
[69 140]
[70 139]
[71 138]
[74 137]
[75 136]
[76 135]
[89 122]
[90 121]
[94 120]
[95 119]
[96 118]
[97 117]
[99 115]
[100 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
