%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[2.62331700 637.14959717]
[0.03038948 621.94171143]
[6.09211206 607.75512695]
[18.87421036 599.11676025]
[18.42760468 584.12341309]
[17.98099899 569.13006592]
[17.53439331 554.13671875]
[14.19313526 547.54443359]
[17.19442940 538.91717529]
[16.97110176 523.91882324]
[16.74777412 508.92050171]
[5.70441294 505.43981934]
[-3.94002819 498.99761963]
[-11.40917397 490.09951782]
[-16.09814262 479.44937134]
[-17.62252045 467.89355469]
[-15.84986115 456.35372925]
[-10.91110992 445.75329590]
[-3.19100308 436.94360352]
[6.70188999 430.63543701]
[17.98312759 427.34179688]
[18.65291405 412.35675049]
[19.32269859 397.37170410]
[19.99248314 382.38665771]
[20.66226768 367.40164185]
[21.33205414 352.41659546]
[11.18994141 335.95376587]
[22.29850006 319.13229370]
[22.52182770 304.13394165]
[22.74515533 289.13562012]
[22.96848297 274.13726807]
[23.19181061 259.13894653]
[23.41513824 244.14059448]
[23.63846588 229.14225769]
[16.80617714 242.49591064]
[7.38022947 254.16430664]
[-4.23857927 263.65130615]
[-17.55621147 270.55352783]
[-32.00639725 274.57748413]
[-46.97470093 275.55206299]
[-61.82467270 273.43582153]
[-75.92487335 268.31878662]
[-88.67576599 260.41845703]
[-99.53516388 250.07084656]
[-108.04132843 237.71588135]
[-113.83257294 223.87892151]
[-116.66265106 209.14831543]
[-116.41122437 194.15042114]
[-113.08898163 179.52294922]
[-106.83718872 165.88787842]
[-97.92167664 153.82498169]
[-86.72153473 143.84716797]
[-73.71299744 136.37869263]
[-59.44919968 131.73713684]
[-44.53664017 130.11985779]
[-29.60941315 131.59561157]
[-15.30222797 136.10165405]
[-2.22343493 143.44639587]
[9.07084942 153.31752014]
[18.10038567 165.29531860]
[24.48123360 178.87046814]
[27.94207764 193.46575928]
[28.33574677 208.46076965]
[34.61310577 194.83744812]
[40.89046860 181.21414185]
[27.50934029 187.99244690]
[12.57729340 186.56626892]
[0.72118193 177.37754822]
[-4.38524771 163.27349854]
[-1.15971267 148.62440491]
[9.39831924 137.96945190]
[24.01732826 134.61019897]
[38.16745377 139.58753967]
[47.46412659 151.35919189]
[49.02662659 166.27784729]
[57.06779861 153.61532593]
[65.10897064 140.95278931]
[73.15014648 128.29026794]
[81.19131470 115.62774658]
[89.23249054 102.96522522]
[97.17917633 90.24318695]
[97.81026459 74.43457031]
[111.06497192 67.64031219]
[118.91673279 54.85947037]
[125.49675751 41.37973404]
[130.74346924 27.32726479]
[135.99018860 13.27479362]
[141.23690796 -0.77767789]
[134.92471313 -15.01824856]
[140.44581604 -29.19471169]
[154.06091309 -35.12467194]
[159.20288086 -49.21581268]
[164.23979187 -63.34484100]
[169.27671814 -77.47386932]
[174.31362915 -91.60289764]
[179.13963318 -105.80535889]
[183.75363159 -120.07808685]
[188.36764526 -134.35083008]
[192.98165894 -148.62355042]
[179.72412109 -155.72833252]
[167.94839478 -165.08630371]
[158.03298950 -176.39668274]
[150.29666138 -189.29586792]
[144.98809814 -203.36921692]
[142.27793884 -218.16430664]
[142.25331116 -233.20555115]
[144.91500854 -248.00944519]
[150.17747498 -262.10009766]
[157.87152100 -275.02453613]
[167.74984741 -286.36730957]
[179.49487305 -295.76379395]
[192.72906494 -302.91192627]
[207.02700806 -307.58193970]
[221.92904663 -309.62368774]
[236.95617676 -308.97155762]
[251.62532043 -305.64651489]
[265.46493530 -299.75543213]
[278.03012085 -291.48767090]
[288.91696167 -281.10900879]
[297.77551270 -268.95312500]
[304.32098389 -255.41072083]
[308.34298706 -240.91716003]
[309.71218872 -225.93833923]
[308.38461304 -210.95576477]
[304.40295410 -196.45108032]
[297.89514160 -182.89053345]
[289.07043457 -170.71005249]
[278.21249390 -160.30117798]
[265.67031860 -151.99851990]
[251.84715271 -146.06896973]
[237.18730164 -142.70314026]
[222.16204834 -142.00923157]
[207.25439453 -144.00955200]
[202.64038086 -129.73681641]
[198.02636719 -115.46408081]
[193.41235352 -101.19134521]
[194.75073242 -96.60682678]
[193.22334290 -91.13288116]
[188.44265747 -86.56598663]
[183.40574646 -72.43695831]
[178.36882019 -58.30792618]
[173.33190918 -44.17889786]
[174.04681396 -36.82289886]
[168.11338806 -29.87795258]
[174.51063538 -16.47605705]
[169.38990784 -2.15011072]
[155.28938293 4.46904039]
[150.04266357 18.52151108]
[144.79594421 32.57398224]
[139.54922485 46.62645340]
[151.37591553 37.39989471]
[165.91305542 33.70234680]
[180.71086121 36.15690994]
[193.27565002 44.34995270]
[201.49005127 56.90079498]
[203.96977234 71.69441223]
[200.29695129 86.23780823]
[191.09051514 98.08016968]
[177.90190125 105.22584534]
[162.95364380 106.47067261]
[148.76478577 101.60487366]
[137.72637939 91.44841766]
[131.69859314 77.71284485]
[131.69757080 62.71122742]
[123.84581757 75.49206543]
[123.77633667 90.38651276]
[109.96001434 98.09494019]
[108.75935364 106.06557465]
[101.89501190 111.00639343]
[93.85384369 123.66892242]
[85.81266785 136.33145142]
[77.77149963 148.99397278]
[69.73032379 161.65649414]
[61.68915176 174.31901550]
[54.51378250 187.49150085]
[48.23642349 201.11480713]
[41.95906448 214.73812866]
[38.63680267 229.36558533]
[38.41347504 244.36392212]
[38.19014740 259.36227417]
[37.96681976 274.36059570]
[37.74349213 289.35894775]
[37.52016449 304.35726929]
[37.29683685 319.35562134]
[45.31108093 326.70956421]
[47.90171051 337.04730225]
[44.44759750 346.89703369]
[36.31709290 353.08636475]
[35.64730835 368.07141113]
[34.97752380 383.05645752]
[34.30773544 398.04150391]
[33.63795090 413.02651978]
[32.96816635 428.01156616]
[49.70055389 436.26385498]
[61.10556412 450.96417236]
[64.91999054 469.12261963]
[60.41875458 487.07055664]
[48.55225754 501.20181274]
[31.74611092 508.69717407]
[31.96943855 523.69549561]
[32.19276810 538.69384766]
[32.52774429 553.69012451]
[32.97434998 568.68347168]
[33.42095566 583.67681885]
[33.86756134 598.67016602]
[47.14116287 606.53240967]
[54.03653717 620.33300781]
[52.35339737 635.66827393]
[42.62882614 647.64477539]
[27.96589851 652.44085693]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 205]
[5 204]
[6 203]
[7 202]
[9 201]
[10 200]
[11 199]
[21 193]
[22 192]
[23 191]
[24 190]
[25 189]
[26 188]
[28 184]
[29 183]
[30 182]
[31 181]
[32 180]
[33 179]
[34 178]
[63 177]
[64 176]
[65 175]
[75 174]
[76 173]
[77 172]
[78 171]
[79 170]
[80 169]
[81 167]
[83 165]
[84 164]
[85 150]
[86 149]
[87 148]
[88 147]
[91 144]
[92 142]
[93 141]
[94 140]
[95 139]
[96 136]
[97 135]
[98 134]
[99 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
