%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGCGUCCGCCGUUUCUGAUCAUACCGUUAUCCGUGUUAUAACCGAUUCUCCCUCACCCACAACUCCCAAUACUCUCAUCGAUAUUACUUGUCGCUAUxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[83.48872375 500.60357666]
[74.01334381 488.95223999]
[65.98254395 476.26199341]
[59.50906754 462.71096802]
[54.68378830 448.48941040]
[51.57444382 433.79693604]
[50.22468948 418.83984375]
[50.65346909 403.82809448]
[52.85476685 388.97244263]
[56.79767990 374.48141479]
[62.42685318 360.55847168]
[69.66326141 347.39901733]
[78.40531921 335.18783569]
[88.53030396 324.09637451]
[99.89607239 314.28027344]
[112.34307098 305.87738037]
[125.69655609 299.00564575]
[139.76907349 293.76153564]
[136.22940063 279.18515015]
[132.68972778 264.60879517]
[129.15005493 250.03240967]
[124.51691437 244.27429199]
[125.66790771 235.21267700]
[122.34564972 220.58520508]
[119.02339172 205.95774841]
[115.59233093 191.35542297]
[112.05265808 176.77905273]
[108.40457153 162.22943115]
[104.64826965 147.70736694]
[93.97033691 137.32319641]
[98.00526428 122.02516937]
[94.24896240 107.50310516]
[90.44928741 103.88697815]
[88.94613647 98.39936066]
[90.60388947 92.49269104]
[87.28163147 77.86523438]
[83.95937347 63.23777008]
[80.63710785 48.61030960]
[77.31484985 33.98284912]
[73.99259186 19.35539055]
[70.67033386 4.72792959]
[67.34807587 -9.89953041]
[54.52742386 -23.11741447]
[60.36796188 -39.66598129]
[56.82828903 -54.24235535]
[53.28862000 -68.81873322]
[49.74894714 -83.39510345]
[46.20927429 -97.97148132]
[30.31517220 -97.42587280]
[14.65696812 -100.17665863]
[-0.08933327 -106.10278320]
[-13.28756809 -114.94614410]
[-24.36886215 -126.32286835]
[-32.85614395 -139.73991394]
[-38.38470078 -154.61648560]
[-40.71782303 -170.30917358]
[-39.75696945 -186.13975525]
[-35.54589462 -201.42451477]
[-28.26869392 -215.50378418]
[-18.24173355 -227.77041626]
[-5.89990282 -237.69595337]
[8.22223949 -244.85339355]
[4.25014353 -259.31793213]
[0.27804708 -273.78244019]
[-3.69404912 -288.24697876]
[-14.80951405 -299.50561523]
[-10.71868610 -313.82742310]
[-14.69078255 -328.29196167]
[-18.66287804 -342.75646973]
[-22.63497543 -357.22100830]
[-26.60707092 -371.68551636]
[-36.18196487 -360.13903809]
[-51.18136215 -360.27313232]
[-60.54827118 -371.98898315]
[-57.37775421 -386.65008545]
[-44.00699615 -393.44882202]
[-30.29349899 -387.37466431]
[-33.17877197 -402.09454346]
[-36.06404495 -416.81445312]
[-38.94931793 -431.53433228]
[-41.83459091 -446.25424194]
[-44.71986389 -460.97412109]
[-59.75960159 -460.75946045]
[-74.59593201 -463.23394775]
[-88.75193787 -468.31796265]
[-101.77256012 -475.84811401]
[-113.23923492 -485.58233643]
[-122.78335571 -497.20773315]
[-130.09811401 -510.35055542]
[-134.94839478 -524.58831787]
[-137.17825317 -539.46337891]
[-136.71601868 -554.49755859]
[-133.57655334 -569.20758057]
[-127.86077118 -583.12048340]
[-119.75241852 -595.78912354]
[-109.51214600 -606.80621338]
[-97.46913147 -615.81762695]
[-84.01050568 -622.53369141]
[-69.56890869 -626.73846436]
[-54.60858536 -628.29681396]
[-39.61043930 -627.15863037]
[-25.05660629 -623.36053467]
[-11.41492653 -617.02453613]
[0.87607515 -608.35443115]
[11.42129326 -597.62884521]
[19.88174248 -585.19256592]
[25.98545647 -571.44543457]
[29.53622246 -556.82928467]
[30.41990089 -541.81396484]
[28.60808372 -526.88226318]
[24.15901375 -512.51403809]
[17.21571159 -499.17123413]
[8.00137329 -487.28274536]
[-3.18779707 -477.23077393]
[-15.99211407 -469.33840942]
[-29.99997139 -463.85940552]
[-27.11469841 -449.13949585]
[-24.22942734 -434.41961670]
[-21.34415436 -419.69970703]
[-18.45888138 -404.97982788]
[-15.57360840 -390.25994873]
[-12.14254761 -375.65762329]
[-8.17045116 -361.19308472]
[-4.19835520 -346.72857666]
[-0.22625886 -332.26403809]
[3.74583745 -317.79953003]
[14.57719135 -307.57546997]
[10.77047443 -292.21905518]
[14.74257088 -277.75454712]
[18.71466637 -263.29000854]
[22.68676376 -248.82548523]
[36.78496170 -249.92788696]
[50.84823608 -248.40487671]
[64.39175415 -244.30737305]
[76.94828033 -237.77508545]
[88.08436584 -229.03175354]
[97.41522217 -218.37744141]
[104.61808777 -206.17829895]
[109.44337463 -192.85395813]
[111.72328949 -178.86306763]
[111.37770844 -164.68759155]
[108.41695404 -150.81607056]
[102.94152069 -137.72691345]
[95.13864899 -125.87183380]
[85.27594757 -115.66026306]
[73.69217682 -107.44523621]
[60.78564835 -101.51115417]
[64.32532501 -86.93477631]
[67.86499023 -72.35840607]
[71.40466309 -57.78202820]
[74.94433594 -43.20565414]
[85.10816956 -36.64645004]
[88.17642212 -24.53159904]
[81.97553253 -13.22179031]
[85.29779053 1.40567017]
[88.62004852 16.03313065]
[91.94231415 30.66059113]
[95.26457214 45.28805161]
[98.58683014 59.91551208]
[101.90908813 74.54296875]
[105.23134613 89.17043304]
[108.77101898 103.74680328]
[112.52732086 118.26886749]
[123.47393036 129.69175720]
[119.17032623 143.95108032]
[122.92662811 158.47312927]
[128.10534668 165.99768066]
[126.62902832 173.23937988]
[130.16870117 187.81575012]
[135.23481750 195.41656494]
[133.65084839 202.63549805]
[136.97311401 217.26295471]
[140.29536438 231.89041138]
[143.72642517 246.49273682]
[147.26609802 261.06912231]
[150.80577087 275.64547729]
[154.34544373 290.22186279]
[169.25578308 288.42788696]
[184.27363586 288.41003418]
[199.18818665 290.16854858]
[213.79006958 293.67874146]
[227.87428284 298.89135742]
[241.24310303 305.73321533]
[253.70886230 314.10824585]
[265.09655762 323.89889526]
[275.24633789 334.96771240]
[284.01568604 347.15930176]
[291.28149414 360.30252075]
[296.94180298 374.21286011]
[300.91711426 388.69500732]
[303.15164185 403.54571533]
[303.61398315 418.55645752]
[302.29769897 433.51654053]
[299.22122192 448.21591187]
[294.42776489 462.44824219]
[287.98461914 476.01370239]
[279.98223877 488.72189331]
[270.53292847 500.39440918]
[259.76937866 510.86734009]
[247.84269714 519.99371338]
[234.92030334 527.64538574]
[221.18360901 533.71490479]
[206.82543945 538.11712646]
[192.04739380 540.79022217]
[177.05690002 541.69671631]
[162.06442261 540.82379150]
[147.28042603 538.18371582]
[132.91246033 533.81365967]
[119.16221619 527.77484131]
[106.22273254 520.15209961]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 177]
[19 176]
[20 175]
[21 174]
[23 173]
[24 172]
[25 171]
[26 169]
[27 168]
[28 166]
[29 165]
[31 163]
[32 162]
[35 161]
[36 160]
[37 159]
[38 158]
[39 157]
[40 156]
[41 155]
[42 154]
[44 151]
[45 150]
[46 149]
[47 148]
[48 147]
[62 131]
[63 130]
[64 129]
[65 128]
[67 126]
[68 125]
[69 124]
[70 123]
[71 122]
[77 121]
[78 120]
[79 119]
[80 118]
[81 117]
[82 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
