%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUUUAAUUCCGCUUCAAAUAAUGAGAAAAAACUUACAACAGUUUUGAUCAAUUAACCUUCAAUUGCCAUGAUAAAUAUGAUUUUCUCAUUCUGGGAGxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[123.57787323 617.31494141]
[123.11696625 602.29821777]
[124.70519257 587.35864258]
[128.31297302 572.77447510]
[133.87309265 558.81744385]
[141.28196716 545.74755859]
[150.40158081 533.80828857]
[161.06202698 523.22204590]
[173.06472778 514.18603516]
[186.18606567 506.86865234]
[180.73071289 492.89584351]
[175.27534485 478.92303467]
[169.81999207 464.95025635]
[164.36463928 450.97744751]
[159.96183777 465.31674194]
[148.57455444 475.08044434]
[133.73129272 477.24319458]
[120.03137970 471.13482666]
[111.71988678 458.64807129]
[111.37221527 443.65209961]
[119.09609985 430.79357910]
[132.49821472 424.05685425]
[147.42575073 425.52938843]
[159.25343323 434.75509644]
[155.71376038 420.17871094]
[152.17408752 405.60232544]
[139.39437866 393.57543945]
[144.72509766 375.94973755]
[140.96879578 361.42767334]
[137.21249390 346.90560913]
[133.45619202 332.38357544]
[129.69989014 317.86151123]
[125.94359589 303.33944702]
[122.18729401 288.81738281]
[118.43099213 274.29531860]
[114.67469025 259.77325439]
[112.33052063 258.23605347]
[110.45401764 255.67767334]
[109.43717957 252.27157593]
[109.60203552 248.32983398]
[111.15460205 244.27478027]
[108.26932526 229.55488586]
[105.38405609 214.83499146]
[102.49877930 200.11511230]
[99.61351013 185.39521790]
[91.31816101 197.89270020]
[76.96639252 202.25466919]
[63.11963654 196.48687744]
[56.10844803 183.22628784]
[59.13824844 168.53546143]
[70.82384491 159.13084412]
[85.82275391 159.31210327]
[97.27859497 168.99797058]
[95.94036102 154.05778503]
[92.91492462 150.36241150]
[92.17878723 144.72724915]
[94.79148865 138.65391541]
[93.89867401 123.68051147]
[93.00585938 108.70710754]
[92.00159454 93.74076843]
[89.43064880 90.24159241]
[88.22788239 86.48422241]
[88.30646515 82.93045807]
[89.43850708 79.96649170]
[91.29192352 77.86340332]
[91.06859589 62.86506653]
[90.84526825 47.86672974]
[82.90336609 34.18328476]
[90.45031738 21.34222603]
[90.22698975 6.34388924]
[75.05712128 2.19489408]
[61.68095398 -6.04894066]
[51.17599487 -17.71393967]
[44.38574219 -31.85123634]
[41.85198975 -47.31394577]
[43.77157593 -62.85021591]
[49.98114395 -77.20455933]
[59.97100067 -89.21932983]
[72.92692566 -97.92806244]
[87.79656982 -102.63323975]
[87.34996796 -117.62659454]
[86.90335846 -132.61994934]
[78.75860596 -146.18362427]
[86.11354065 -159.13562012]
[85.66693115 -174.12898254]
[77.52217865 -187.69265747]
[84.87711334 -200.64465332]
[84.43050385 -215.63801575]
[83.98390198 -230.63136292]
[83.53729248 -245.62471008]
[83.09069061 -260.61807251]
[82.64408112 -275.61141968]
[67.90418243 -278.77349854]
[54.34964752 -285.37182617]
[42.76851273 -295.02279663]
[33.83409500 -307.16525269]
[28.06583023 -321.09329224]
[25.79907417 -335.99716187]
[27.16561508 -351.01037598]
[32.08600616 -365.26004028]
[40.27417755 -377.91772461]
[51.25408173 -388.24755859]
[64.38736725 -395.64892578]
[78.91046906 -399.69155884]
[93.97904205 -400.14041138]
[108.71702576 -396.96936035]
[122.26755524 -390.36282349]
[133.84283447 -380.70486450]
[142.76989746 -368.55697632]
[148.52970886 -354.62542725]
[150.78742981 -339.72018433]
[149.41178894 -324.70782471]
[144.48275757 -310.46115112]
[136.28691101 -297.80841064]
[125.30075073 -287.48526001]
[112.16298676 -280.09182739]
[97.63743591 -276.05801392]
[98.08403778 -261.06466675]
[98.53064728 -246.07131958]
[98.97724915 -231.07797241]
[99.42385864 -216.08460999]
[99.87046051 -201.09126282]
[107.98326874 -188.60000610]
[100.66028595 -174.57557678]
[101.10688782 -159.58222961]
[109.21969604 -147.09097290]
[101.89671326 -133.06654358]
[102.34331512 -118.07319641]
[102.78992462 -103.07984924]
[116.72832489 -99.73799896]
[129.33534241 -92.89270020]
[139.74676514 -83.00605011]
[147.24700928 -70.74887848]
[151.31834412 -56.95521927]
[151.67663574 -42.56558228]
[148.29110718 -28.56280708]
[141.38691711 -15.90494442]
[131.43020630 -5.45969963]
[119.09658813 2.05504394]
[105.22532654 6.12056160]
[105.44865417 21.11889839]
[113.37458801 33.72956467]
[105.84360504 47.64340210]
[106.06694031 62.64173889]
[106.29026794 77.64007568]
[106.96005249 92.62511444]
[110.65238953 99.79025269]
[107.97926331 107.81429291]
[108.87207794 122.78769684]
[109.76489258 137.76110840]
[110.88053894 152.71955872]
[112.21877289 167.65974426]
[114.33339691 182.50993347]
[117.21867371 197.22982788]
[120.10394287 211.94972229]
[122.98921967 226.66961670]
[125.87448883 241.38951111]
[129.19674683 256.01696777]
[132.95304871 270.53903198]
[136.70935059 285.06109619]
[140.46565247 299.58312988]
[144.22195435 314.10519409]
[147.97825623 328.62725830]
[151.73455811 343.14932251]
[155.49085999 357.67138672]
[159.24716187 372.19345093]
[169.94442749 379.39974976]
[172.77409363 391.57254028]
[166.75045776 402.06265259]
[170.29013062 416.63903809]
[173.82980347 431.21542358]
[178.33743286 445.52209473]
[183.79278564 459.49490356]
[189.24815369 473.46768188]
[194.70350647 487.44049072]
[200.15885925 501.41329956]
[214.76710510 497.90429688]
[229.71710205 496.41723633]
[244.73034668 496.97976685]
[259.52713013 499.58145142]
[273.83181763 504.17379761]
[287.37792969 510.67123413]
[299.91308594 518.95275879]
[311.20376587 528.86407471]
[321.03967285 540.22052002]
[329.23748779 552.81054688]
[335.64459229 566.39965820]
[340.14154053 580.73461914]
[342.64459229 595.54840088]
[343.10714722 610.56506348]
[341.52050781 625.50482178]
[337.91430664 640.08935547]
[332.35571289 654.04699707]
[324.94824219 667.11767578]
[315.82992554 679.05798340]
[305.17062378 689.64538574]
[293.16891479 698.68267822]
[280.04837036 706.00146484]
[266.05343628 711.46545410]
[251.44479370 714.97290039]
[236.49464417 716.45831299]
[221.48146057 715.89416504]
[206.68495178 713.29089355]
[192.38076782 708.69702148]
[178.83535767 702.19805908]
[166.30110168 693.91522217]
[155.01148987 684.00268555]
[145.17681885 672.64514160]
[136.98034668 660.05419922]
[130.57473755 646.46447754]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 176]
[11 175]
[12 174]
[13 173]
[14 172]
[24 171]
[25 170]
[26 169]
[28 166]
[29 165]
[30 164]
[31 163]
[32 162]
[33 161]
[34 160]
[35 159]
[36 158]
[41 157]
[42 156]
[43 155]
[44 154]
[45 153]
[53 152]
[54 151]
[57 150]
[58 149]
[59 148]
[60 146]
[65 145]
[66 144]
[67 143]
[69 141]
[70 140]
[80 129]
[81 128]
[82 127]
[84 125]
[85 124]
[87 122]
[88 121]
[89 120]
[90 119]
[91 118]
[92 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
