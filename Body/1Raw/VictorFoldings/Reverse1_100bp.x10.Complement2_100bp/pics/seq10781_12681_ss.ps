%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUCAUCUCCCUACUACGAUUAUUAAUCCGACACCCACCAACACAACUAAGUUUAAUACACAAAAAACCUUUCAGUACAGUCACCAUCAUUAUAUUAACxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[117.06232452 807.35504150]
[108.04512787 795.30981445]
[101.47070312 781.77563477]
[97.57669830 767.24182129]
[96.50388336 752.23364258]
[98.29103851 737.29364014]
[102.87355804 722.96197510]
[110.08579254 709.75665283]
[119.66702271 698.15509033]
[131.27088928 688.57666016]
[144.47792053 681.36755371]
[158.81069946 676.78845215]
[157.02822876 661.89477539]
[155.24575806 647.00103760]
[153.46330261 632.10729980]
[151.68083191 617.21362305]
[136.86259460 615.12335205]
[123.07980347 609.26397705]
[111.27434540 600.02954102]
[102.25465393 588.04461670]
[96.64036560 574.12268066]
[94.81976318 559.21051025]
[96.92291260 544.32379150]
[102.81239319 530.47814941]
[112.09226990 518.61981201]
[124.13468933 509.56082153]
[138.12237549 503.92349243]
[136.33992004 489.02975464]
[134.55744934 474.13604736]
[132.77497864 459.24234009]
[130.99252319 444.34860229]
[129.21005249 429.45489502]
[127.42758179 414.56118774]
[125.64511871 399.66744995]
[111.89876556 393.93130493]
[102.80878448 382.00537109]
[100.89607239 367.03179932]
[106.77363586 353.01925659]
[118.95532990 343.76974487]
[117.17286682 328.87603760]
[115.39040375 313.98229980]
[100.99301910 310.02697754]
[89.17481995 300.83590698]
[81.75583649 287.78509521]
[79.89367676 272.84790039]
[83.90300751 258.29666138]
[93.20288849 246.35700989]
[106.40073395 238.86750793]
[104.61827087 223.97378540]
[102.83580017 209.08007812]
[101.05333710 194.18635559]
[91.85845947 182.46868896]
[97.90105438 167.84686279]
[95.37012482 165.39192200]
[93.90253448 161.58912659]
[94.11882019 156.95161438]
[96.38689423 152.25024414]
[95.27124786 137.29179382]
[94.15560150 122.33333588]
[93.03994751 107.37488556]
[89.34761047 100.20974731]
[92.02073669 92.18570709]
[91.12792206 77.21230316]
[79.59002686 66.74736786]
[78.89788818 51.54948807]
[88.94570160 40.61436462]
[88.05288696 25.64095688]
[79.50790405 12.32578373]
[86.47394562 -0.83945537]
[85.58113098 -15.81286144]
[84.68831635 -30.78626633]
[83.79550171 -45.75967407]
[82.90268707 -60.73307800]
[80.02683258 -65.08928680]
[79.19290924 -69.65633392]
[80.13928986 -73.62110138]
[82.31954193 -76.39217377]
[82.09621429 -91.39051056]
[81.87288666 -106.38884735]
[72.16704559 -94.95221710]
[57.62027359 -91.29277802]
[43.65816116 -96.77542114]
[35.48822784 -109.35525513]
[36.15765381 -124.34030914]
[45.41676712 -136.14152527]
[59.81214142 -140.35736084]
[73.97466278 -135.41539001]
[82.62240601 -123.15773773]
[84.18292999 -138.07633972]
[85.74344635 -152.99494934]
[87.30397034 -167.91355896]
[88.75339508 -182.84336853]
[90.09162903 -197.78355408]
[91.42986298 -212.72373962]
[92.76809692 -227.66392517]
[90.33737183 -233.81234741]
[91.24096680 -239.42309570]
[94.37508392 -243.02674866]
[96.15755463 -257.92047119]
[97.94001770 -272.81417847]
[84.20227814 -279.14898682]
[73.09584045 -289.42041016]
[65.70881653 -302.62219238]
[62.76489639 -317.46093750]
[64.55249786 -332.48291016]
[70.89649963 -346.21643066]
[81.17537689 -357.31594849]
[94.38210297 -364.69415283]
[109.22282410 -367.62811279]
[124.24359131 -365.83044434]
[137.97283936 -359.47723389]
[149.06549072 -349.19094849]
[156.43481445 -335.97927856]
[159.35885620 -321.13659668]
[157.55111694 -306.11703491]
[151.18872070 -292.39205933]
[140.89497375 -281.30627441]
[127.67837524 -273.94580078]
[112.83373260 -271.03173828]
[111.05126953 -256.13800049]
[109.26879883 -241.24429321]
[107.70828247 -226.32568359]
[106.37004852 -211.38549805]
[105.03181458 -196.44531250]
[103.69358063 -181.50512695]
[106.22779846 -174.56254578]
[102.22257996 -166.35302734]
[100.66205597 -151.43443298]
[99.10153198 -136.51582336]
[97.54100800 -121.59722137]
[96.87122345 -106.61217499]
[97.09455109 -91.61383820]
[97.31787872 -76.61550140]
[97.87609100 -61.62589264]
[98.76890564 -46.65248871]
[99.66172028 -31.67908287]
[100.55453491 -16.70567703]
[101.44735718 -1.73227119]
[109.92847443 10.51190376]
[103.02629852 24.74814034]
[103.91911316 39.72154617]
[115.19516754 49.38520050]
[116.31391144 64.55764008]
[106.10132599 76.31948853]
[106.99414062 91.29289246]
[107.99840546 106.25923157]
[109.11405182 121.21768951]
[110.22969818 136.17614746]
[111.34535217 151.13459778]
[112.79476929 166.06440735]
[122.11713409 178.84736633]
[115.94705200 192.40388489]
[117.72952271 207.29760742]
[119.51198578 222.19131470]
[121.29444885 237.08503723]
[135.88691711 241.24862671]
[147.74165344 250.65650940]
[155.07153320 263.85070801]
[156.78681946 278.80548096]
[152.65707397 293.23843384]
[143.34152222 304.95874023]
[130.28411865 312.19982910]
[132.06658936 327.09356689]
[133.84904480 341.98727417]
[147.86940002 348.10095215]
[156.88761902 360.33078003]
[158.56236267 375.33282471]
[152.54336548 389.06701660]
[140.53883362 397.88497925]
[142.32130432 412.77871704]
[144.10377502 427.67242432]
[145.88623047 442.56613159]
[147.66870117 457.45986938]
[149.45117188 472.35357666]
[151.23362732 487.24728394]
[153.01609802 502.14102173]
[167.93904114 504.31835938]
[181.77909851 510.27978516]
[193.59519958 519.61334229]
[202.58560181 531.67816162]
[208.14230347 545.64813232]
[209.89207458 560.56884766]
[207.72161865 575.42248535]
[201.78483582 589.19732666]
[192.49191284 600.95684814]
[180.48103333 609.90313721]
[166.57455444 615.43115234]
[168.35700989 630.32482910]
[170.13948059 645.21856689]
[171.92195129 660.11230469]
[173.70440674 675.00598145]
[188.71296692 676.07354736]
[203.24819946 679.96246338]
[216.78466797 686.53216553]
[228.83302307 695.54510498]
[238.95773315 706.67553711]
[246.79280090 719.52111816]
[252.05499268 733.61743164]
[254.55407715 748.45489502]
[254.19972229 763.49719238]
[251.00473022 778.20056152]
[245.08459473 792.03344727]
[236.65333557 804.49578857]
[226.01574707 815.13714600]
[213.55633545 823.57275391]
[199.72554016 829.49774170]
[185.02330017 832.69787598]
[169.98112488 833.05749512]
[155.14276123 830.56365967]
[141.04461670 825.30639648]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 191]
[13 190]
[14 189]
[15 188]
[16 187]
[27 176]
[28 175]
[29 174]
[30 173]
[31 172]
[32 171]
[33 170]
[34 169]
[39 164]
[40 163]
[41 162]
[48 155]
[49 154]
[50 153]
[51 152]
[53 150]
[57 149]
[58 148]
[59 147]
[60 146]
[62 145]
[63 144]
[66 141]
[67 140]
[69 138]
[70 137]
[71 136]
[72 135]
[73 134]
[77 133]
[78 132]
[79 131]
[88 130]
[89 129]
[90 128]
[91 127]
[92 125]
[93 124]
[94 123]
[95 122]
[98 121]
[99 120]
[100 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
