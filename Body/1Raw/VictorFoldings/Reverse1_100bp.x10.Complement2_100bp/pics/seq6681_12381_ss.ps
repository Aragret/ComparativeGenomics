%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[77.43221283 562.62249756]
[71.60588837 576.53308105]
[62.50252533 588.55725098]
[50.69437408 597.93902588]
[36.92369461 604.08880615]
[22.05613518 606.61987305]
[7.02627611 605.37322998]
[-7.22109127 600.42718506]
[-19.79036522 592.09265137]
[-29.89143181 580.89355469]
[-36.88932800 567.53393555]
[-40.34416199 552.85351562]
[-40.03875732 537.77514648]
[-35.99231339 523.24664307]
[-28.45919228 510.18130493]
[-17.91293526 499.40042114]
[-5.01648617 491.58169556]
[9.41947269 487.21661377]
[24.48748589 486.57958984]
[27.59159470 471.90426636]
[30.58637047 457.20626831]
[33.47164154 442.48638916]
[36.35691452 427.76647949]
[39.24218750 413.04660034]
[42.12746048 398.32672119]
[28.79343796 389.76342773]
[19.74449921 376.70718384]
[16.39057350 361.14035034]
[19.27414513 345.44036865]
[27.98275948 332.01669312]
[41.20772171 322.94085693]
[56.94070435 319.62698364]
[59.60649872 304.86578369]
[62.27229691 290.10455322]
[56.92005157 276.20480347]
[66.98674774 263.99938965]
[69.65254211 249.23817444]
[72.09826660 234.43890381]
[74.32338715 219.60487366]
[76.54850006 204.77082825]
[78.77362061 189.93678284]
[73.00990295 176.20256042]
[82.70873260 163.70283508]
[84.93384552 148.86878967]
[87.15896606 134.03474426]
[81.39524841 120.30052185]
[91.09407806 107.80078888]
[81.64236450 119.44832611]
[68.48957062 126.65971375]
[53.58684158 128.36517334]
[39.14490128 124.31173706]
[27.30613327 115.10068512]
[19.82674026 102.09842682]
[17.81625175 87.23377228]
[21.57290840 72.71180725]
[30.53943443 60.68677139]
[43.38569641 52.94251633]
[58.20603180 50.62784958]
[72.80193329 54.08613968]
[85.00817871 62.80437469]
[93.01404572 75.48925018]
[95.63195038 90.25712585]
[100.87866974 76.20465851]
[106.12538910 62.15218735]
[103.70388031 46.51739120]
[115.40419006 37.30044174]
[120.65090942 23.24797249]
[109.21401215 14.50221920]
[100.71522522 2.90035796]
[95.83642578 -10.61157322]
[94.96476746 -24.93491364]
[98.16197968 -38.90771484]
[105.16007233 -51.39899063]
[115.38376617 -61.40027237]
[127.99780273 -68.10702515]
[141.97515869 -70.98336029]
[156.18069458 -69.80483246]
[161.63604736 -83.77762604]
[167.09140015 -97.75042725]
[172.44259644 -111.76345062]
[177.68931580 -125.81591797]
[182.93603516 -139.86839294]
[188.18273926 -153.92086792]
[193.42945862 -167.97332764]
[198.67617798 -182.02580261]
[203.92289734 -196.07827759]
[209.16961670 -210.13075256]
[214.41633606 -224.18321228]
[218.92396545 -238.48989868]
[222.68026733 -253.01196289]
[217.34954834 -270.63766479]
[230.12925720 -282.66455078]
[233.66893005 -297.24093628]
[237.09999084 -311.84326172]
[240.42224121 -326.47070312]
[243.74450684 -341.09817505]
[247.06677246 -355.72561646]
[250.38902283 -370.35308838]
[253.71128845 -384.98056030]
[257.03353882 -399.60800171]
[243.50061035 -406.23797607]
[231.86181641 -415.81060791]
[222.74482727 -427.80966187]
[216.64131165 -441.58804321]
[213.88043213 -456.40270996]
[214.61106873 -471.45471191]
[218.79380798 -485.93231201]
[226.20310974 -499.05477905]
[236.43937683 -510.11441040]
[248.95059204 -518.51477051]
[263.06204224 -523.80285645]
[278.01269531 -525.69348145]
[292.99630737 -524.08471680]
[307.20480347 -519.06323242]
[319.87197876 -510.89993286]
[330.31466675 -500.03497314]
[337.96972656 -487.05435181]
[342.42431641 -472.65805054]
[343.43823242 -457.62246704]
[340.95675659 -442.75845337]
[335.11373901 -428.86761475]
[326.22430420 -416.69903564]
[314.76779175 -406.90896606]
[301.36209106 -400.02536011]
[286.73013306 -396.41946411]
[271.66101074 -396.28576660]
[268.33874512 -381.65829468]
[265.01647949 -367.03082275]
[261.69421387 -352.40338135]
[258.37197876 -337.77590942]
[255.04971313 -323.14843750]
[251.72744751 -308.52099609]
[253.31141663 -301.30206299]
[248.24530029 -293.70126343]
[244.70562744 -279.12487793]
[250.72926331 -268.63476562]
[247.89959717 -256.46197510]
[237.20233154 -249.25566101]
[233.44602966 -234.73359680]
[246.32600403 -242.42164612]
[261.15393066 -240.15617371]
[271.15069580 -228.97293091]
[271.74588013 -213.98474121]
[262.66738892 -202.04400635]
[248.06579590 -198.60987854]
[234.61674500 -205.25238037]
[228.46881104 -218.93649292]
[223.22209167 -204.88403320]
[217.97537231 -190.83155823]
[212.72865295 -176.77908325]
[207.48193359 -162.72660828]
[202.23521423 -148.67414856]
[196.98849487 -134.62167358]
[191.74177551 -120.56919861]
[186.49505615 -106.51673126]
[187.10037231 -99.15090179]
[181.06420898 -92.29506683]
[175.60884094 -78.32227325]
[170.15348816 -64.34947205]
[182.37316895 -54.55120850]
[190.97753906 -41.44013596]
[195.11428833 -26.29310036]
[194.36689758 -10.58967781]
[188.79650879 4.13235760]
[178.93719482 16.42762184]
[165.74470520 25.08502197]
[150.50384521 29.24704552]
[134.70338440 28.49468994]
[129.45666504 42.54716110]
[132.25344849 57.17683029]
[120.17785645 67.39890289]
[114.93113708 81.45137787]
[109.68441772 95.50384521]
[105.92812347 110.02590942]
[111.53268433 124.82115936]
[101.99301147 136.25985718]
[99.76789093 151.09390259]
[97.54277802 165.92794800]
[103.14733887 180.72319031]
[93.60766602 192.16189575]
[91.38254547 206.99594116]
[89.15742493 221.82998657]
[86.93231201 236.66403198]
[88.99275970 242.94622803]
[87.75681305 248.49325562]
[84.41375732 251.90397644]
[81.74796295 266.66519165]
[86.90953064 281.62075806]
[77.03351593 292.77035522]
[74.36771393 307.53155518]
[71.70191956 322.29278564]
[83.90226746 329.64144897]
[92.84266663 340.68997192]
[97.46505737 354.09844971]
[97.23345947 368.24951172]
[92.19608307 381.44372559]
[82.97706604 392.10342407]
[70.69923401 398.96151733]
[56.84735107 401.21197510]
[53.96207809 415.93188477]
[51.07680511 430.65176392]
[48.19153214 445.37167358]
[45.30625916 460.09155273]
[46.72653961 469.11489868]
[42.26689911 475.00839233]
[39.16278839 489.68368530]
[52.68228912 496.36755371]
[64.11430359 506.20419312]
[72.74021912 518.57531738]
[78.01778412 532.70324707]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 206]
[20 205]
[21 203]
[22 202]
[23 201]
[24 200]
[25 199]
[32 191]
[33 190]
[34 189]
[36 187]
[37 186]
[38 183]
[39 182]
[40 181]
[41 180]
[43 178]
[44 177]
[45 176]
[47 174]
[62 173]
[63 172]
[64 171]
[66 169]
[67 168]
[77 159]
[78 158]
[79 157]
[80 155]
[81 154]
[82 153]
[83 152]
[84 151]
[85 150]
[86 149]
[87 148]
[88 147]
[89 139]
[90 138]
[92 135]
[93 134]
[94 132]
[95 131]
[96 130]
[97 129]
[98 128]
[99 127]
[100 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
