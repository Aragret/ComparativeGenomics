%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[99.83392334 602.59033203]
[88.24326324 593.04846191]
[77.67742920 582.38287354]
[68.24484253 570.70312500]
[60.04228592 558.12896729]
[53.15394211 544.78948975]
[47.65049362 530.82159424]
[43.58840942 516.36853027]
[41.00938034 501.57867432]
[39.93986893 486.60379028]
[40.39085007 471.59753418]
[42.35769653 456.71389771]
[45.82022476 442.10562134]
[50.74290085 427.92260742]
[57.07521439 414.31036377]
[64.75218201 401.40859985]
[73.69503021 389.34973145]
[83.81198883 378.25747681]
[94.99923706 368.24566650]
[107.14197540 359.41702271]
[120.11560822 351.86215210]
[133.78700256 345.65859985]
[148.01585388 340.86999512]
[144.69358826 326.24255371]
[141.37133789 311.61508179]
[138.04907227 296.98760986]
[134.72680664 282.36016846]
[119.99606323 279.92413330]
[107.28580475 272.01245117]
[98.54933929 259.80429077]
[95.14329529 245.14187622]
[97.61703491 230.25247192]
[105.62431335 217.41009521]
[117.97136688 208.58819580]
[114.64910889 193.96073914]
[111.32685089 179.33328247]
[98.72763062 167.11744690]
[104.32016754 149.57307434]
[100.78049469 134.99668884]
[90.25835419 124.45469666]
[94.52059937 109.21842957]
[88.85781097 95.32839966]
[81.19721985 82.43207550]
[73.53662109 69.53575134]
[65.87602234 56.63942337]
[58.21542358 43.74309540]
[50.45903397 30.90415573]
[42.60727692 18.12331200]
[34.75552368 5.34246969]
[26.80883789 -7.37956619]
[18.58003044 -19.92096710]
[10.16541100 -32.33846283]
[1.75079286 -44.75595856]
[-6.66382551 -57.17345428]
[-19.85676765 -50.01013947]
[-33.68831635 -44.17446899]
[-48.02526474 -39.72264481]
[-62.72953415 -36.69754410]
[-77.65951538 -35.12829971]
[-92.67140961 -35.03002167]
[-107.62065887 -36.40366364]
[-122.36327362 -39.23598862]
[-136.75727844 -43.49972153]
[-150.66404724 -49.15380096]
[-163.94964600 -56.14377213]
[-176.48611450 -64.40232086]
[-188.15274048 -73.84989929]
[-198.83714294 -84.39553070]
[-208.43643188 -95.93764496]
[-216.85815430 -108.36508942]
[-224.02119446 -121.55817413]
[-229.85659790 -135.38984680]
[-234.30813599 -149.72688293]
[-237.33293152 -164.43121338]
[-238.90188599 -179.36122131]
[-238.99986267 -194.37312317]
[-237.62591553 -209.32234192]
[-234.79330444 -224.06489563]
[-230.52928162 -238.45881653]
[-224.87492371 -252.36547852]
[-217.88468933 -265.65093994]
[-209.62588501 -278.18722534]
[-200.17807007 -289.85366821]
[-189.63223267 -300.53787231]
[-178.08992004 -310.13693237]
[-165.66230774 -318.55838013]
[-152.46907043 -325.72119141]
[-138.63729858 -331.55630493]
[-124.30017090 -336.00753784]
[-109.59577942 -339.03204346]
[-94.66573334 -340.60070801]
[-79.65383148 -340.69839478]
[-64.70464325 -339.32415771]
[-49.96214294 -336.49124146]
[-35.56830597 -332.22692871]
[-21.66176605 -326.57229614]
[-8.37644863 -319.58178711]
[4.15969706 -311.32272339]
[15.82593727 -301.87469482]
[26.50991821 -291.32861328]
[36.10874557 -279.78613281]
[44.52996826 -267.35833740]
[51.69249344 -254.16497803]
[57.52733231 -240.33306885]
[61.97829437 -225.99586487]
[65.00251770 -211.29141235]
[66.57086182 -196.36134338]
[66.66824341 -181.34942627]
[65.29370117 -166.40026855]
[62.46049500 -151.65782166]
[58.19589615 -137.26406860]
[52.54098129 -123.35764313]
[45.55021286 -110.07247162]
[37.29091644 -97.53649139]
[27.84263611 -85.87043762]
[17.29636383 -75.18666840]
[5.75366974 -65.58807373]
[14.16828823 -53.17057800]
[22.58290672 -40.75308228]
[30.99752617 -28.33558464]
[35.43532944 -26.57066345]
[38.81153488 -21.99920082]
[39.47136307 -15.42073917]
[45.71073151 -11.45941830]
[47.53636551 -2.50928569]
[55.38811874 10.27155685]
[63.23987579 23.05239868]
[69.41957855 27.10617638]
[71.11174774 36.08249664]
[78.77234650 48.97882462]
[86.43294525 61.87515259]
[94.09354401 74.77147675]
[101.75414276 87.66780853]
[100.80762482 72.69770050]
[104.06080627 58.05471802]
[111.25711823 44.89367676]
[121.82903290 34.25250244]
[134.94281006 26.97040367]
[149.56423950 23.62168121]
[164.54020691 24.47042465]
[178.68965149 29.44970131]
[190.89668274 38.16682434]
[200.19862366 49.93432617]
[205.86186218 63.82416916]
[207.43977356 78.74094391]
[204.80792236 93.50824738]
[198.17387390 106.96147919]
[188.06080627 118.03964996]
[175.26629639 125.86910248]
[160.79934692 129.83235168]
[145.80088806 129.61686707]
[131.45378113 125.23961639]
[118.88947296 117.04582214]
[109.09697723 105.67875671]
[119.87229919 117.26335907]
[115.35687256 131.45701599]
[118.89654541 146.03340149]
[129.48535156 153.39819336]
[132.13346863 165.61175537]
[125.95430756 176.01101685]
[129.27656555 190.63847351]
[132.59883118 205.26594543]
[147.54527283 207.88879395]
[160.31442261 216.01232910]
[168.97718811 228.37236023]
[172.23898315 243.06753540]
[169.63316345 257.85180664]
[161.58749390 270.47769165]
[149.35427856 279.03790283]
[152.67652893 293.66537476]
[155.99879456 308.29281616]
[159.32104492 322.92028809]
[162.64331055 337.54772949]
[177.54467773 335.72015381]
[192.55450439 335.40948486]
[207.51872253 336.61895752]
[222.28381348 339.33618164]
[236.69824219 343.53320312]
[250.61410522 349.16702271]
[263.88861084 356.17977905]
[276.38549805 364.49954224]
[287.97656250 374.04092407]
[298.54287720 384.70602417]
[307.97598267 396.38537598]
[316.17907715 408.95916748]
[323.06802368 422.29833984]
[328.57208252 436.26605225]
[332.63479614 450.71890259]
[335.21447754 465.50863647]
[336.28466797 480.48348999]
[335.83435059 495.48974609]
[333.86813354 510.37347412]
[330.40625000 524.98193359]
[325.48422241 539.16516113]
[319.15249634 552.77764893]
[311.47610474 565.67974854]
[302.53378296 577.73901367]
[292.41729736 588.83172607]
[281.23049927 598.84405518]
[269.08813477 607.67321777]
[256.11483765 615.22863770]
[242.44374084 621.43280029]
[228.21508789 626.22204590]
[213.57492065 629.54718018]
[198.67347717 631.37408447]
[183.66365051 631.68408203]
[168.69946289 630.47393799]
[153.93449402 627.75610352]
[139.52024841 623.55841064]
[125.60463715 617.92401123]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 173]
[24 172]
[25 171]
[26 170]
[27 169]
[34 162]
[35 161]
[36 160]
[38 157]
[39 156]
[41 154]
[42 133]
[43 132]
[44 131]
[45 130]
[46 129]
[47 127]
[48 126]
[49 125]
[50 123]
[51 120]
[52 119]
[53 118]
[54 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
