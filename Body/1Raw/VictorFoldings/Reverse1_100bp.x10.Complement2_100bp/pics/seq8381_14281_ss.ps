%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[69.94584656 491.33801270]
[56.76641464 499.52838135]
[41.29231644 498.37426758]
[29.47366524 488.31945801]
[25.85496902 473.23022461]
[31.82769394 458.90872192]
[45.09520340 450.86178589]
[46.21084976 435.90335083]
[47.32649994 420.94488525]
[48.44215012 405.98645020]
[49.55779648 391.02798462]
[50.67344666 376.06951904]
[51.78909683 361.11108398]
[52.90474319 346.15261841]
[54.02039337 331.19418335]
[54.91320801 316.22076416]
[55.58299255 301.23571777]
[56.25277710 286.25067139]
[56.92256546 271.26565552]
[54.08087158 264.44314575]
[57.71551895 256.06298828]
[49.92347336 246.81037903]
[50.54474640 234.32847595]
[59.79103088 225.33575439]
[60.90667725 210.37730408]
[62.02232742 195.41885376]
[53.94027710 208.05532837]
[42.23414612 217.43437195]
[28.13931274 222.56619263]
[13.14323521 222.90922546]
[-1.17151296 218.42726135]
[-13.29426289 209.59330750]
[-21.94567108 197.33959961]
[-26.21273422 182.95933533]
[-25.64513779 167.97007751]
[-20.30278587 153.95368958]
[-10.74946404 142.38934326]
[2.00663972 134.49745178]
[16.61934471 131.11088562]
[31.54653549 132.58702087]
[45.21290970 138.77006531]
[56.17622757 149.00753784]
[63.27949905 162.21902466]
[65.77310181 177.01049805]
[70.59909821 162.80804443]
[75.42509460 148.60559082]
[80.25109100 134.40313721]
[85.07708740 120.20067596]
[89.90308380 105.99822235]
[78.35635376 115.57281494]
[63.93575668 119.70154572]
[49.07142639 117.68865967]
[36.26826477 109.87335205]
[27.68382645 97.57263947]
[24.76474190 82.85942078]
[28.00292587 68.21311951]
[36.85269165 56.10189438]
[49.82269287 48.56670761]
[64.72725677 46.87736893]
[79.05471039 51.31855392]
[90.39061737 61.14185333]
[96.82468414 74.69186401]
[97.27236176 89.68680573]
[104.74009705 76.67785645]
[112.20783997 63.66890335]
[113.76618958 54.66838074]
[119.88484955 50.52304840]
[127.54544067 37.62672043]
[135.20603943 24.73039436]
[142.86663818 11.83406734]
[150.52723694 -1.06225955]
[158.18783569 -13.95858669]
[165.65557861 -26.96753883]
[172.92880249 -40.08623123]
[180.20202637 -53.20492554]
[187.47526550 -66.32362366]
[194.74848938 -79.44231415]
[180.06840515 -76.36091614]
[167.43426514 -84.44662476]
[164.08349609 -99.06758118]
[171.93556213 -111.84823608]
[186.49243164 -115.46724701]
[199.41529846 -107.85148621]
[203.30145264 -93.36454773]
[211.71606445 -105.78204346]
[220.13067627 -118.19953918]
[228.54530334 -130.61703491]
[236.95991516 -143.03453064]
[231.24629211 -152.97276306]
[229.66108704 -164.27442932]
[232.39541626 -175.30146790]
[239.01707458 -184.47001648]
[248.53840637 -190.47793579]
[259.56344604 -192.48962402]
[270.49249268 -190.25213623]
[279.45318604 -202.28150940]
[288.41387939 -214.31089783]
[297.37457275 -226.34027100]
[306.33526611 -238.36964417]
[295.35281372 -248.60920715]
[285.56347656 -259.99481201]
[277.08605957 -272.38824463]
[270.02352905 -285.63903809]
[264.46157837 -299.58636475]
[260.46771240 -314.06088257]
[258.09045410 -328.88696289]
[257.35864258 -343.88452148]
[258.28115845 -358.87161255]
[260.84680176 -373.66622925]
[265.02444458 -388.08877563]
[270.76333618 -401.96423340]
[277.99386597 -415.12414551]
[286.62820435 -427.40872192]
[296.56158447 -438.66888428]
[307.67340088 -448.76794434]
[319.82876587 -457.58328247]
[332.88015747 -465.00787354]
[346.66909790 -470.95166016]
[361.02819824 -475.34240723]
[375.78320312 -478.12689209]
[390.75497437 -479.27127075]
[405.76174927 -478.76162720]
[420.62136841 -476.60418701]
[435.15347290 -472.82516479]
[449.18164062 -467.47036743]
[462.53558350 -460.60482788]
[475.05319214 -452.31192017]
[486.58251953 -442.69226074]
[496.98361206 -431.86264038]
[506.13018799 -419.95452881]
[513.91125488 -407.11245728]
[520.23236084 -393.49237061]
[525.01672363 -379.25955200]
[528.20623779 -364.58679199]
[529.76232910 -349.65219116]
[529.66595459 -334.63708496]
[527.91839600 -319.72369385]
[524.54077148 -305.09307861]
[519.57415771 -290.92282104]
[513.07885742 -277.38494873]
[505.13363647 -264.64382935]
[495.83496094 -252.85406494]
[485.29577637 -242.15882874]
[473.64395142 -232.68791199]
[461.02093506 -224.55630493]
[447.57998657 -217.86270142]
[433.48428345 -212.68838501]
[418.90487671 -209.09613037]
[404.01876831 -207.12956238]
[389.00668335 -206.81256104]
[374.05084229 -208.14897156]
[359.33279419 -211.12255859]
[345.03118896 -215.69723511]
[331.31967163 -221.81745911]
[318.36465454 -229.40895081]
[309.40396118 -217.37957764]
[300.44326782 -205.35018921]
[291.48257446 -193.32081604]
[282.52188110 -181.29144287]
[289.10845947 -163.80116272]
[283.78012085 -145.73080444]
[268.51638794 -134.43354797]
[249.37741089 -134.61990356]
[240.96279907 -122.20241547]
[232.54817200 -109.78491974]
[224.13356018 -97.36742401]
[215.71894836 -84.94992828]
[207.86718750 -72.16908264]
[200.59396362 -59.05039215]
[193.32072449 -45.93169785]
[186.04750061 -32.81300354]
[178.77426147 -19.69430923]
[179.20581055 -14.93796444]
[176.65402222 -9.86003017]
[171.08416748 -6.29798889]
[163.42356873 6.59833765]
[155.76296997 19.49466515]
[148.10237122 32.39099121]
[140.44177246 45.28731918]
[132.78117371 58.18364716]
[125.21679688 71.13664246]
[117.74905396 84.14559937]
[110.28131104 97.15454865]
[104.10554504 110.82421875]
[99.27954865 125.02667236]
[94.45354462 139.22912598]
[89.62754822 153.43157959]
[84.80155182 167.63404846]
[79.97555542 181.83650208]
[76.98078156 196.53450012]
[75.86513519 211.49295044]
[74.74948120 226.45140076]
[83.12776947 242.84915161]
[72.68892670 256.95578003]
[71.90760040 271.93542480]
[71.23781586 286.92047119]
[70.56803131 301.90551758]
[69.89824677 316.89053345]
[72.60108185 322.92431641]
[71.94892120 328.56979370]
[68.97884369 332.30981445]
[67.86319733 347.26828003]
[66.74755096 362.22671509]
[65.63189697 377.18518066]
[64.51625061 392.14361572]
[63.40060425 407.10208130]
[62.28495407 422.06054688]
[61.16930389 437.01898193]
[60.05365753 451.97744751]
[71.98069000 461.90344238]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 209]
[8 208]
[9 207]
[10 206]
[11 205]
[12 204]
[13 203]
[14 202]
[15 201]
[16 198]
[17 197]
[18 196]
[19 195]
[21 194]
[24 192]
[25 191]
[26 190]
[44 189]
[45 188]
[46 187]
[47 186]
[48 185]
[49 184]
[63 183]
[64 182]
[65 181]
[67 180]
[68 179]
[69 178]
[70 177]
[71 176]
[72 175]
[73 172]
[74 171]
[75 170]
[76 169]
[77 168]
[84 167]
[85 166]
[86 165]
[87 164]
[88 163]
[95 159]
[96 158]
[97 157]
[98 156]
[99 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
