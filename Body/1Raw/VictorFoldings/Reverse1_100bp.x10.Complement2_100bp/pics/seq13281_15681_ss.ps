%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCUACUACCUGGGCCUCGUGUAUUUAUCAUACCGAAACUUCUUCCGCACCCAUGUCUACACGUCCUUACGAUCCACACCAACCAACUACGGCUAACAxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[186.94651794 343.74188232]
[195.69410706 331.52465820]
[206.09141541 320.67675781]
[217.92675781 311.41903687]
[210.45901489 298.41009521]
[202.99127197 285.40112305]
[189.94473267 278.21524048]
[189.78460693 262.39486694]
[174.15574646 254.41325378]
[174.35464478 236.00015259]
[166.69404602 223.10383606]
[158.93765259 210.26489258]
[151.08590698 197.48403931]
[143.23414612 184.70320129]
[135.38238525 171.92236328]
[122.12768555 165.12809753]
[121.49658966 149.31948853]
[113.64483643 136.53865051]
[105.79308319 123.75780487]
[97.94132233 110.97695923]
[89.99464417 98.25492096]
[81.95346832 85.59239960]
[74.71128845 80.02565765]
[73.88846588 72.68094635]
[66.03671265 59.90010452]
[58.18495560 47.11925888]
[50.33319855 34.33841705]
[44.71091843 30.85969925]
[42.08381271 25.82032013]
[42.44449234 21.05807686]
[34.97675323 8.04912472]
[27.50901031 -4.95982790]
[20.04126930 -17.96878052]
[12.38067150 -30.86510658]
[4.52891636 -43.64595032]
[-3.32283902 -56.42679214]
[-11.17459488 -69.20763397]
[-19.02635002 -81.98847961]
[-26.87810516 -94.76931763]
[-31.46903801 -97.25335693]
[-34.35906982 -100.88667297]
[-35.39525604 -104.82892609]
[-34.78033447 -108.30084229]
[-42.05356598 -121.41954041]
[-55.51190567 -129.73721313]
[-54.91624451 -144.61990356]
[-62.18947220 -157.73860168]
[-69.46269989 -170.85728455]
[-76.73593140 -183.97598267]
[-84.00916290 -197.09468079]
[-97.67790985 -190.89695740]
[-111.80104828 -185.81922913]
[-126.28697968 -181.89442444]
[-141.04174805 -179.14797974]
[-155.96968079 -177.59770203]
[-170.97393799 -177.25367737]
[-185.95722961 -178.11811829]
[-200.82238770 -180.18540955]
[-215.47297668 -183.44215393]
[-229.81401062 -187.86723328]
[-243.75245667 -193.43193054]
[-257.19793701 -200.10018921]
[-270.06323242 -207.82873535]
[-282.26492310 -216.56744385]
[-293.72384644 -226.25965881]
[-304.36572266 -236.84251404]
[-314.12152100 -248.24737549]
[-322.92797852 -260.40026855]
[-330.72793579 -273.22238159]
[-337.47085571 -286.63055420]
[-343.11300659 -300.53784180]
[-347.61776733 -314.85403442]
[-350.95596313 -329.48629761]
[-353.10589600 -344.33972168]
[-354.05364990 -359.31796265]
[-353.79306030 -374.32391357]
[-352.32583618 -389.26022339]
[-349.66149902 -404.03005981]
[-345.81732178 -418.53759766]
[-340.81820679 -432.68875122]
[-334.69662476 -446.39175415]
[-327.49224854 -459.55773926]
[-319.25177002 -472.10131836]
[-310.02871704 -483.94113159]
[-299.88281250 -495.00039673]
[-288.87994385 -505.20739746]
[-277.09140015 -514.49591064]
[-264.59365845 -522.80572510]
[-251.46778870 -530.08294678]
[-237.79890442 -536.28033447]
[-223.67564392 -541.35778809]
[-209.18963623 -545.28222656]
[-194.43479919 -548.02838135]
[-179.50683594 -549.57830811]
[-164.50256348 -549.92199707]
[-149.51928711 -549.05725098]
[-134.65419006 -546.98962402]
[-120.00366974 -543.73254395]
[-105.66274261 -539.30718994]
[-91.72441101 -533.74212646]
[-78.27909088 -527.07360840]
[-65.41395569 -519.34478760]
[-53.21246719 -510.60580444]
[-41.75373840 -500.91333008]
[-31.11209679 -490.33023071]
[-21.35655212 -478.92517090]
[-12.55037689 -466.77206421]
[-4.75068092 -453.94979858]
[1.99194956 -440.54144287]
[7.63378572 -426.63403320]
[12.13823795 -412.31774902]
[15.47609234 -397.68542480]
[17.62570190 -382.83197021]
[18.57312393 -367.85369873]
[18.31221581 -352.84774780]
[16.84466743 -337.91146851]
[14.17999935 -323.14169312]
[10.33549023 -308.63424683]
[5.33607626 -294.48318481]
[-0.78582060 -280.78033447]
[-7.99049664 -267.61450195]
[-16.23122597 -255.07110596]
[-25.45456314 -243.23149109]
[-35.60069275 -232.17245483]
[-46.60380936 -221.96571350]
[-58.39255142 -212.67744446]
[-70.89046478 -204.36790466]
[-63.61723709 -191.24920654]
[-56.34400940 -178.13052368]
[-49.07078171 -165.01182556]
[-41.79755020 -151.89312744]
[-28.85944176 -144.51379395]
[-28.93487167 -128.69276428]
[-21.66164207 -115.57407379]
[-14.09726334 -102.62107849]
[-6.24550724 -89.84023285]
[1.60624802 -77.05938721]
[9.45800304 -64.27854919]
[17.30975914 -51.49770355]
[25.16151428 -38.71686172]
[29.51608276 -36.75554276]
[32.68479538 -32.03788376]
[33.05022049 -25.43652153]
[40.51796341 -12.42756939]
[47.98570251 0.58138329]
[55.45344543 13.59033585]
[63.11404419 26.48666191]
[70.96579742 39.26750565]
[78.81755066 52.04834747]
[86.66931152 64.82919312]
[94.61598969 77.55122375]
[102.65716553 90.21375275]
[109.29327393 94.78919220]
[110.72216797 103.12520599]
[118.57392120 115.90604401]
[126.42568207 128.68688965]
[134.27743530 141.46772766]
[148.09375000 149.17616272]
[148.16323853 164.07060242]
[156.01498413 176.85144043]
[163.86674500 189.63229370]
[171.71850586 202.41313171]
[178.87699890 208.08708191]
[179.59037781 215.44323730]
[187.25097656 228.33955383]
[199.53459167 232.27346802]
[205.64961243 243.17256165]
[202.79354858 254.92710876]
[216.37423706 263.04348755]
[216.00022888 277.93338013]
[223.46797180 290.94235229]
[230.93571472 303.95129395]
[244.89852905 298.39968872]
[259.50930786 294.89178467]
[274.47064209 293.49899292]
[289.47787476 294.24966431]
[304.22552490 297.12854004]
[318.41329956 302.07702637]
[331.75241089 308.99432373]
[343.97125244 317.73965454]
[354.82107544 328.13494873]
[364.08099365 339.96856689]
[371.56250000 352.99960327]
[377.11325073 366.96276855]
[380.62023926 381.57379150]
[382.01211548 396.53518677]
[381.26049805 411.54235840]
[378.38070679 426.28982544]
[373.43133545 440.47732544]
[366.51321411 453.81597900]
[357.76715088 466.03430176]
[347.37118530 476.88348389]
[335.53698730 486.14266968]
[322.50546265 493.62335205]
[308.54196167 499.17324829]
[293.93075562 502.67935181]
[278.96926880 504.07028198]
[263.96209717 503.31771851]
[249.21482849 500.43701172]
[235.02764893 495.48678589]
[221.68940735 488.56784058]
[209.47164917 479.82101440]
[198.62310791 469.42437744]
[189.36465454 457.58959961]
[181.88476562 444.55764771]
[176.33575439 430.59378052]
[172.83055115 415.98233032]
[171.44053650 401.02078247]
[172.19401550 386.01367188]
[175.07563782 371.26657104]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 172]
[5 171]
[6 170]
[8 168]
[10 165]
[11 164]
[12 162]
[13 161]
[14 160]
[15 159]
[17 157]
[18 156]
[19 155]
[20 154]
[21 152]
[22 151]
[24 150]
[25 149]
[26 148]
[27 147]
[30 146]
[31 145]
[32 144]
[33 143]
[34 140]
[35 139]
[36 138]
[37 137]
[38 136]
[39 135]
[43 134]
[44 133]
[46 131]
[47 130]
[48 129]
[49 128]
[50 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
