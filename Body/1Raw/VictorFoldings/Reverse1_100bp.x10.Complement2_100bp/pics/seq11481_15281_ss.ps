%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCGAACAAUAUUAAUACGGAGUAUCCCUAUCAUGUUCCUUCCCCAUCCGAUACACAAAACAGUCCCCCAACUCUUACUCACACUCCGCAUAAUAUGGUxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[-63.62728882 304.77862549]
[-57.28406143 318.38842773]
[-52.47655106 332.61343384]
[-49.26311874 347.28100586]
[-47.68276978 362.21301270]
[-47.75468826 377.22827148]
[-49.47800064 392.14450073]
[-52.83178711 406.78057861]
[-57.77534103 420.95889282]
[-64.24864960 434.50732422]
[-72.17312622 447.26135254]
[-81.45258331 459.06622314]
[-91.97438049 469.77862549]
[-103.61077881 479.26846313]
[-116.22052765 487.42059326]
[-129.65057373 494.13604736]
[-143.73785400 499.33331299]
[-158.31140137 502.94927979]
[-173.19427490 504.94006348]
[-188.20582581 505.28149414]
[-203.16381836 503.96942139]
[-217.88668823 501.01977539]
[-232.19569397 496.46838379]
[-245.91717529 490.37045288]
[-258.88452148 482.80004883]
[-270.94033813 473.84906006]
[-281.93829346 463.62612915]
[-291.74487305 452.25537109]
[-300.24099731 439.87478638]
[-307.32360840 426.63470459]
[-312.90664673 412.69580078]
[-316.92242432 398.22732544]
[-319.32211304 383.40487671]
[-320.07662964 368.40841675]
[-319.17678833 353.41998291]
[-316.63354492 338.62149048]
[-312.47775269 324.19262695]
[-306.75982666 310.30850220]
[-299.54925537 297.13766479]
[-290.93350220 284.84002686]
[-281.01718140 273.56484985]
[-269.92065430 263.44900513]
[-257.77865601 254.61526489]
[-244.73852539 247.17091370]
[-230.95860291 241.20628357]
[-216.60614014 236.79377747]
[-201.85537720 233.98698425]
[-186.88537598 232.81996155]
[-171.87783813 233.30686951]
[-157.01495361 235.44180298]
[-142.47714233 239.19885254]
[-128.44088745 244.53239441]
[-115.07657623 251.37771606]
[-102.54643250 259.65167236]
[-91.00255585 269.25387573]
[-80.20040131 258.84649658]
[-69.39824677 248.43913269]
[-68.85969543 236.35458374]
[-59.94541168 227.59561157]
[-47.05195999 227.24684143]
[-36.09605026 217.00144958]
[-35.85539246 202.15296936]
[-24.89049149 191.60661316]
[-9.31765938 191.95970154]
[1.63824999 181.71430969]
[12.59415913 171.46891785]
[23.55006790 161.22352600]
[34.50597763 150.97813416]
[45.46188736 140.73275757]
[56.41779709 130.48736572]
[67.37370300 120.24196625]
[78.32961273 109.99657440]
[89.28552246 99.75118256]
[98.68767548 88.06359863]
[106.34827423 75.16727448]
[114.00887299 62.27095032]
[121.66947174 49.37462234]
[129.33006287 36.47829437]
[136.20947266 23.14886475]
[142.28330994 9.43359852]
[148.35714722 -4.28166771]
[154.43098450 -17.99693489]
[160.50482178 -31.71220207]
[166.57864380 -45.42746735]
[172.55021667 -59.18757248]
[178.10943604 -73.11936951]
[183.35615540 -87.17183685]
[188.60287476 -101.22431183]
[193.84959412 -115.27678680]
[180.43310547 -122.01808167]
[167.82414246 -130.17045593]
[156.17053223 -139.63833618]
[145.60891724 -150.31071472]
[136.26312256 -162.06245422]
[128.24273682 -174.75576782]
[121.64176178 -188.24185181]
[116.53762054 -202.36257935]
[112.99014282 -216.95239258]
[111.04093170 -231.84024048]
[110.71282959 -246.85156250]
[112.00968170 -261.81033325]
[114.91629791 -276.54122925]
[119.39858246 -290.87149048]
[125.40399170 -304.63311768]
[132.86212158 -317.66473389]
[141.68551636 -329.81359863]
[151.77073669 -340.93725586]
[162.99952698 -350.90527344]
[175.24024963 -359.60079956]
[188.34936523 -366.92187500]
[202.17320251 -372.78265381]
[216.54968262 -377.11444092]
[231.31022644 -379.86642456]
[246.28179932 -381.00634766]
[261.28884888 -380.52084351]
[276.15542603 -378.41561890]
[290.70724487 -374.71536255]
[304.77368164 -369.46343994]
[318.18978882 -362.72140503]
[330.79833984 -354.56835938]
[342.45141602 -345.09985352]
[353.01245117 -334.42691040]
[362.35760498 -322.67465210]
[370.37731934 -309.98092651]
[376.97756958 -296.49447632]
[382.08096313 -282.37347412]
[385.62765503 -267.78347778]
[387.57604980 -252.89552307]
[387.90335083 -237.88418579]
[386.60568237 -222.92546082]
[383.69830322 -208.19474792]
[379.21524048 -193.86471558]
[373.20907593 -180.10342407]
[365.75024414 -167.07218933]
[356.92620850 -154.92379761]
[346.84039307 -143.80068970]
[335.61105347 -133.83326721]
[323.36987305 -125.13840485]
[310.26034546 -117.81804657]
[296.43618774 -111.95801544]
[282.05950928 -107.62700653]
[267.29879761 -104.87581635]
[252.32716370 -103.73669434]
[237.32014465 -104.22299194]
[222.45367432 -106.32901764]
[207.90206909 -110.03006744]
[202.65534973 -95.97759247]
[197.40863037 -81.92512512]
[192.16191101 -67.87265015]
[193.28504944 -64.53036499]
[192.84513855 -60.47801590]
[190.52604675 -56.45618439]
[186.35438538 -53.31861115]
[186.63018799 -45.93310165]
[180.29391479 -39.35363388]
[174.22007751 -25.63836670]
[168.14624023 -11.92310047]
[162.07241821 1.79216623]
[155.99858093 15.50743294]
[149.92474365 29.22270012]
[163.52592468 22.89751053]
[178.26904297 25.66162109]
[188.65528870 36.48408890]
[190.81085205 51.32839584]
[183.93176270 64.65798950]
[170.58374023 71.50125885]
[155.74526978 69.30583191]
[144.95074463 58.89054489]
[142.22639465 44.13889313]
[134.56579590 57.03522110]
[126.90519714 69.93154907]
[119.24459839 82.82787323]
[111.58399963 95.72419739]
[124.32393646 87.80624390]
[138.81636047 83.93717957]
[153.80754089 84.45172882]
[168.00056458 89.30535889]
[180.16763306 98.07820129]
[189.25613403 110.01130676]
[194.47984314 124.07234955]
[195.38685608 139.04490662]
[191.89869690 153.63369751]
[184.31713867 166.57664490]
[173.29804993 176.75405884]
[159.79470825 183.28549194]
[144.97528076 185.60591125]
[130.12178040 183.51457214]
[116.51920319 177.19239807]
[105.34429932 167.18632507]
[97.56381226 154.36196899]
[93.85083008 139.82876587]
[94.52657318 124.84400177]
[99.53091431 110.70709229]
[88.57500458 120.95248413]
[77.61909485 131.19787598]
[66.66318512 141.44326782]
[55.70727921 151.68865967]
[44.75136948 161.93405151]
[33.79545975 172.17944336]
[22.83955193 182.42483521]
[11.88364124 192.67022705]
[0.92773223 202.91561890]
[0.23742931 218.47714233]
[-11.01937008 228.71136475]
[-25.85065651 227.95736694]
[-36.80656815 238.20275879]
[-41.75529861 255.93948364]
[-58.99087143 259.24130249]
[-69.79302979 269.64865112]
[-80.59518433 280.05603027]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[55 210]
[56 209]
[57 208]
[60 206]
[61 205]
[64 202]
[65 201]
[66 200]
[67 199]
[68 198]
[69 197]
[70 196]
[71 195]
[72 194]
[73 193]
[74 173]
[75 172]
[76 171]
[77 170]
[78 169]
[79 160]
[80 159]
[81 158]
[82 157]
[83 156]
[84 155]
[85 153]
[86 149]
[87 148]
[88 147]
[89 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
