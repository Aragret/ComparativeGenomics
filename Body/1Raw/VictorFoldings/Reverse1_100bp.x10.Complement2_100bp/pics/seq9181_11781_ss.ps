%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[72.81487274 668.44799805]
[62.28386688 679.21423340]
[49.68440247 687.46453857]
[35.60577393 692.81304932]
[20.70646286 695.00952148]
[5.68333864 693.95129395]
[-8.76093960 689.68786621]
[-21.95078659 682.41864014]
[-33.26929092 672.48358154]
[-42.18706512 660.34735107]
[-48.28700638 646.57763672]
[-51.28381348 631.81848145]
[-51.03731537 616.76013184]
[-47.55904770 602.10699463]
[-41.01168823 588.54431152]
[-31.70147324 576.70648193]
[-20.06385803 567.14721680]
[-6.64315367 560.31353760]
[7.93292856 556.52514648]
[22.98263931 555.95922852]
[25.64843369 541.19799805]
[20.29619026 527.29827881]
[30.36288452 515.09283447]
[33.02867889 500.33163452]
[35.69447327 485.57040405]
[38.36027145 470.80917358]
[41.02606583 456.04797363]
[43.69186020 441.28674316]
[38.33961868 427.38702393]
[48.40631104 415.18161011]
[46.46744156 410.81698608]
[47.24980927 405.18804932]
[51.37749863 400.02337646]
[54.48160934 385.34808350]
[57.58572006 370.67279053]
[49.27119827 358.36813354]
[52.21015167 343.44107056]
[65.17277527 334.80346680]
[68.27688599 320.12817383]
[71.38098907 305.45285034]
[74.48509979 290.77755737]
[76.71022034 275.94351196]
[78.04845428 261.00332642]
[79.38668823 246.06314087]
[80.72492218 231.12297058]
[82.06315613 216.18278503]
[83.40139008 201.24259949]
[76.83041382 187.87577820]
[85.76805115 174.82093811]
[70.61124420 170.26394653]
[56.72354507 162.67271423]
[44.70467377 152.37506104]
[35.07363892 139.81567383]
[28.24634933 125.53691101]
[24.51762772 110.15537262]
[24.04849434 94.33529663]
[26.85920715 78.75984192]
[32.82838821 64.10160828]
[41.69827271 50.99358749]
[53.08582306 40.00183487]
[66.49929047 31.60100555]
[81.35942841 26.15388107]
[97.02453613 23.89568520]
[97.91735077 8.92227936]
[98.81016541 -6.05112600]
[91.90798187 -20.28736305]
[100.38910675 -32.53153992]
[101.28192139 -47.50494385]
[102.17473602 -62.47835159]
[103.06755829 -77.45175934]
[103.96037292 -92.42516327]
[89.20855713 -98.13520050]
[76.95835114 -108.11212158]
[68.40135193 -121.36995697]
[64.36510468 -136.60440063]
[65.23310089 -152.32109070]
[70.90837860 -166.98216248]
[80.82419586 -179.15679932]
[94.00057983 -187.66082764]
[109.14118958 -191.67185974]
[109.81097412 -206.65690613]
[99.42440796 -218.26539612]
[100.31713104 -233.45280457]
[111.44805908 -243.28327942]
[112.11784363 -258.26831055]
[112.78762817 -273.25335693]
[103.92483521 -289.39437866]
[113.93904877 -303.80557251]
[114.38565063 -318.79891968]
[111.51313782 -327.46994019]
[114.95217133 -334.01171875]
[115.62195587 -348.99673462]
[112.91912079 -355.03048706]
[113.57128143 -360.67599487]
[116.54135895 -364.41601562]
[117.65701294 -379.37445068]
[118.77265930 -394.33291626]
[119.88830566 -409.29138184]
[121.00395203 -424.24981689]
[107.07943726 -430.19848633]
[95.84259033 -440.34796143]
[88.51229858 -453.59732056]
[85.88369751 -468.50936890]
[88.24192047 -483.46655273]
[95.33116150 -496.84643555]
[106.38243866 -507.19769287]
[120.19698334 -513.39746094]
[135.27630615 -514.77319336]
[149.98471069 -511.17578125]
[162.72674561 -502.99536133]
[172.12023926 -491.11926270]
[177.14625549 -476.83578491]
[177.25961304 -461.69427490]
[172.44802856 -447.33712769]
[163.23341370 -435.32174683]
[150.61529541 -426.95144653]
[135.96240234 -423.13418579]
[134.84675598 -408.17572021]
[133.73110962 -393.21728516]
[132.61546326 -378.25881958]
[131.49981689 -363.30035400]
[130.60699463 -348.32696533]
[129.93721008 -333.34191895]
[129.37899780 -318.35229492]
[128.93240356 -303.35894775]
[136.99647522 -294.34246826]
[136.74710083 -281.84759521]
[127.77266693 -272.58355713]
[127.10288239 -257.59854126]
[126.43309784 -242.61349487]
[136.64260864 -231.82917786]
[136.17681885 -216.62266541]
[124.79601288 -205.98712158]
[124.12622833 -191.00207520]
[137.59228516 -186.32752991]
[149.20780945 -178.03781128]
[158.02575684 -166.79777527]
[163.32405090 -153.51329041]
[164.66476440 -139.25819397]
[161.93025208 -125.18753052]
[155.33340454 -112.44392395]
[145.40118408 -102.06481171]
[132.93246460 -94.89797974]
[118.93377686 -91.53234863]
[118.04096222 -76.55893707]
[117.14814758 -61.58553314]
[116.25532532 -46.61212921]
[115.36251068 -31.63872337]
[122.32855225 -18.47348404]
[113.78356934 -5.15831041]
[112.89075470 9.81509590]
[111.99794006 24.78850174]
[125.69131470 28.30148888]
[138.49955750 34.28467560]
[149.98139954 42.53192139]
[159.74124146 52.75908661]
[167.44285583 64.61382294]
[172.82089233 77.68770599]
[175.69004822 91.53030396]
[175.95150757 105.66470337]
[173.59623718 119.60394287]
[168.70538330 132.86776733]
[161.44746399 144.99922180]
[152.07250977 155.58033752]
[140.90353394 164.24656677]
[128.32531738 170.69934082]
[114.77123260 174.71633911]
[100.70823669 176.15916443]
[107.18349457 190.59458923]
[98.34157562 202.58082581]
[97.00334167 217.52101135]
[95.66510773 232.46119690]
[94.32687378 247.40138245]
[92.98863983 262.34155273]
[91.65040588 277.28173828]
[102.49338531 266.91693115]
[117.34193420 264.79071045]
[130.65789795 271.69616699]
[137.47476196 285.05767822]
[135.24998474 299.89178467]
[124.81338501 310.66567993]
[110.05753326 313.36102295]
[96.48600006 306.97247314]
[89.16040802 293.88168335]
[86.05629730 308.55697632]
[82.95218658 323.23226929]
[79.84807587 337.90759277]
[88.20290375 351.05422974]
[84.84584045 365.89285278]
[72.26102448 373.77688599]
[69.15691376 388.45220947]
[66.05280304 403.12750244]
[63.16752625 417.84738159]
[68.32909393 432.80294800]
[58.45307922 443.95254517]
[55.78728485 458.71377563]
[53.12148666 473.47497559]
[50.45569229 488.23620605]
[47.78989792 502.99740601]
[45.12409973 517.75860596]
[50.28567123 532.71417236]
[40.40965271 543.86376953]
[37.74385452 558.62500000]
[51.64494324 564.41931152]
[63.97516632 573.06683350]
[74.15782166 584.16308594]
[81.71664429 597.18914795]
[86.29810333 611.53576660]
[87.68790436 626.53186035]
[85.82105255 641.47601318]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 203]
[21 202]
[23 200]
[24 199]
[25 198]
[26 197]
[27 196]
[28 195]
[30 193]
[33 192]
[34 191]
[35 190]
[38 187]
[39 186]
[40 185]
[41 184]
[42 175]
[43 174]
[44 173]
[45 172]
[46 171]
[47 170]
[49 168]
[63 152]
[64 151]
[65 150]
[67 148]
[68 147]
[69 146]
[70 145]
[71 144]
[80 134]
[81 133]
[84 130]
[85 129]
[86 128]
[88 125]
[89 124]
[91 123]
[92 122]
[95 121]
[96 120]
[97 119]
[98 118]
[99 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
