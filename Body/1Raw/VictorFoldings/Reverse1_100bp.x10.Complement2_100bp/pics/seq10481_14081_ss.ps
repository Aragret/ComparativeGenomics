%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAAUAAGGAAGAUCCGUAUCAUCCCUCCUAUACUCCACACUCGCUAUAUGAUCAUAAGGAUCUUCACUCUACCAUUUACGAUCAUAUUAUAAAUACAUxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[177.88188171 636.98284912]
[173.88768005 622.50897217]
[171.48184204 607.68804932]
[170.69253540 592.69390869]
[171.52905273 577.70233154]
[173.98155212 562.88909912]
[178.02131653 548.42785645]
[183.60095215 534.48815918]
[190.65504456 521.23345947]
[199.10089111 508.81918335]
[208.83947754 497.39080811]
[219.75662231 487.08239746]
[231.72431946 478.01480103]
[244.60224915 470.29431152]
[238.32489014 456.67098999]
[232.04753113 443.04766846]
[225.77017212 429.42434692]
[222.60681152 427.86694336]
[220.04063416 424.69995117]
[218.81993103 420.22076416]
[219.53189087 415.04968262]
[213.86911011 401.15963745]
[208.20631409 387.26962280]
[202.54353333 373.37960815]
[196.88075256 359.48956299]
[191.21795654 345.59954834]
[185.55517578 331.70950317]
[179.68621826 317.90533447]
[173.61238098 304.19006348]
[167.53854370 290.47479248]
[161.46470642 276.75955200]
[157.41120911 274.23403931]
[154.90119934 269.13531494]
[155.42098999 262.54431152]
[149.75820923 248.65429688]
[144.09541321 234.76426697]
[138.43263245 220.87423706]
[132.99658203 215.86711121]
[132.79063416 206.73500061]
[127.33527374 192.76220703]
[115.49903870 183.72048950]
[117.68750000 168.05137634]
[112.23213959 154.07856750]
[101.28311157 148.93606567]
[96.62380981 137.33975220]
[101.25811005 125.30287933]
[96.01139069 111.25041199]
[93.61656189 126.05799866]
[86.09730530 139.03724670]
[74.44290161 148.48049927]
[60.18670273 153.14533997]
[45.20434570 152.41802979]
[31.46702003 146.39424133]
[20.78210831 135.86653137]
[14.55539227 122.22000122]
[13.60610485 107.25006866]
[18.05914116 92.92629242]
[27.32862663 81.13321686]
[40.19500351 73.42242432]
[54.96547318 70.80839539]
[69.69673157 73.63504791]
[82.45063019 81.53050232]
[91.55024719 93.45808411]
[89.54622650 78.59255981]
[87.54221344 63.72702789]
[85.53820038 48.86149979]
[75.77305603 40.43507004]
[74.40995026 28.01227951]
[81.63745880 18.31229591]
[79.85498810 3.41857839]
[78.07252502 -11.47513866]
[76.29005432 -26.36885643]
[66.96768951 -39.15181732]
[73.13777161 -52.70833969]
[71.13375854 -67.57386780]
[68.90864563 -82.40791321]
[66.68352509 -97.24195862]
[64.45840454 -112.07599640]
[53.57927704 -101.74911499]
[38.70209122 -103.66466522]
[30.79375839 -116.41057587]
[35.68400574 -130.59103394]
[49.76792526 -135.75274658]
[62.66245651 -128.09204102]
[61.54681015 -143.05049133]
[60.43115997 -158.00894165]
[51.68888092 -171.19541931]
[58.45814133 -184.46292114]
[57.34249115 -199.42137146]
[56.22684097 -214.37982178]
[53.28645325 -218.69273376]
[52.38462830 -223.24685669]
[53.27186966 -227.22528076]
[55.41062164 -230.02850342]
[54.96401596 -245.02185059]
[54.51741028 -260.01519775]
[54.07080460 -275.00854492]
[53.62419891 -290.00189209]
[39.66064835 -296.16485596]
[29.76045609 -307.78161621]
[25.88932037 -322.54565430]
[28.81585312 -337.52557373]
[37.95899200 -349.74710083]
[51.50336075 -356.78366089]
[66.75971222 -357.23809814]
[80.69888306 -351.02020264]
[90.55325317 -339.36453247]
[94.36621857 -324.58535767]
[91.38071442 -309.61709595]
[82.18952179 -297.43167114]
[68.61754608 -290.44851685]
[69.06415558 -275.45516968]
[69.51076508 -260.46182251]
[69.95736694 -245.46846008]
[70.40397644 -230.47511292]
[71.18529510 -215.49546814]
[72.30094147 -200.53701782]
[73.41659546 -185.57856750]
[82.07907104 -173.46202087]
[75.38961029 -159.12460327]
[76.50526428 -144.16613770]
[77.62091064 -129.20768738]
[79.29244995 -114.30111694]
[81.51757050 -99.46707153]
[83.74268341 -84.63302612]
[85.96780396 -69.79898834]
[89.20782471 -66.29023743]
[90.27806854 -60.70887756]
[88.03149414 -54.49080658]
[97.22636414 -42.77314377]
[91.18377686 -28.15132141]
[92.96623993 -13.25760460]
[94.74870300 1.63611245]
[96.53117371 16.52982903]
[107.79115295 29.99013519]
[100.40373230 46.85748672]
[102.40774536 61.72301483]
[104.41175842 76.58854675]
[106.41577148 91.45407104]
[110.06385803 106.00369263]
[115.31057739 120.05615997]
[129.78221130 131.44270325]
[126.20494080 148.62321472]
[131.66029358 162.59600830]
[143.88673401 172.63716125]
[141.30807495 187.30685425]
[146.76342773 201.27964783]
[152.32266235 215.21145630]
[157.98544312 229.10147095]
[163.64822388 242.99150085]
[169.31101990 256.88153076]
[175.17997742 270.68569946]
[181.25381470 284.40097046]
[187.32765198 298.11624146]
[193.40147400 311.83151245]
[198.50859070 316.03018188]
[200.43888855 321.37536621]
[199.44520569 326.04672241]
[205.10798645 339.93676758]
[210.77076721 353.82678223]
[216.43356323 367.71679688]
[222.09634399 381.60684204]
[227.75914001 395.49685669]
[233.42192078 409.38690186]
[239.39347839 423.14700317]
[245.67083740 436.77032471]
[251.94819641 450.39361572]
[258.22555542 464.01693726]
[272.46160889 459.24383545]
[287.13024902 456.03793335]
[302.05953979 454.43682861]
[317.07443237 454.45925903]
[331.99887085 456.10498047]
[346.65786743 459.35467529]
[360.87957764 464.17028809]
[374.49725342 470.49533081]
[387.35122681 478.25564575]
[399.29080200 487.36026001]
[410.17599487 497.70242310]
[419.87915039 509.16085815]
[428.28652954 521.60125732]
[435.29956055 534.87768555]
[440.83602905 548.83459473]
[444.83099365 563.30828857]
[447.23764038 578.12902832]
[448.02774048 593.12316895]
[447.19204712 608.11480713]
[444.74032593 622.92816162]
[440.70135498 637.38964844]
[435.12246704 651.32958984]
[428.06909180 664.58471680]
[419.62390137 676.99945068]
[409.88592529 688.42834473]
[398.96936035 698.73730469]
[387.00213623 707.80554199]
[374.12463379 715.52673340]
[360.48779297 721.81036377]
[346.25149536 726.58270264]
[331.58267212 729.78778076]
[316.65328979 731.38812256]
[301.63839722 731.36486816]
[286.71405029 729.71838379]
[272.05520630 726.46783447]
[257.83377075 721.65148926]
[244.21643066 715.32568359]
[231.36286926 707.56469727]
[219.42379761 698.45941162]
[208.53916931 688.11669922]
[198.83662415 676.65771484]
[190.42990112 664.21691895]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 168]
[15 167]
[16 166]
[17 165]
[21 164]
[22 163]
[23 162]
[24 161]
[25 160]
[26 159]
[27 158]
[28 155]
[29 154]
[30 153]
[31 152]
[34 151]
[35 150]
[36 149]
[37 148]
[39 147]
[40 146]
[42 144]
[43 143]
[46 141]
[47 140]
[63 139]
[64 138]
[65 137]
[66 136]
[69 134]
[70 133]
[71 132]
[72 131]
[74 129]
[75 126]
[76 125]
[77 124]
[78 123]
[84 122]
[85 121]
[86 120]
[88 118]
[89 117]
[90 116]
[94 115]
[95 114]
[96 113]
[97 112]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
