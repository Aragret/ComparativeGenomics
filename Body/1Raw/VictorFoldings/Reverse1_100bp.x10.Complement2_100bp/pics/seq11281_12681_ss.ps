%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAGAAAUGAUAUUUUCGAUAACACAUUCGAUCAGUAUAAUUCAACAACCGAGUCCUCAAACUAUCAAGAACCCGUCACUCUCACUCAUCAUCUUACAAxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[53.45407867 666.37237549]
[39.50774765 671.91851807]
[25.15105057 676.29400635]
[10.48206520 679.46893311]
[-4.39900684 681.42169189]
[-19.39051056 682.13891602]
[-34.39003372 681.61566162]
[-49.29512024 679.85552979]
[-64.00394440 676.87054443]
[-78.41603088 672.68115234]
[-92.43292999 667.31585693]
[-105.95888519 660.81140137]
[-118.90151215 653.21221924]
[-131.17239380 644.57012939]
[-142.68768311 634.94427490]
[-153.36875916 624.40032959]
[-163.14262390 613.01037598]
[-171.94252014 600.85223389]
[-179.70834351 588.00885010]
[-186.38703918 574.56811523]
[-191.93298340 560.62170410]
[-196.30830383 546.26495361]
[-199.48309326 531.59594727]
[-201.43565369 516.71484375]
[-202.15267944 501.72332764]
[-201.62925720 486.72381592]
[-199.86897278 471.81875610]
[-196.88383484 457.10995483]
[-192.69422913 442.69790649]
[-187.32879639 428.68109131]
[-180.82417297 415.15521240]
[-173.22480774 402.21267700]
[-164.58261108 389.94189453]
[-154.95660400 378.42669678]
[-144.41255188 367.74575806]
[-133.02247620 357.97204590]
[-120.86419678 349.17227173]
[-108.02075958 341.40661621]
[-94.57990265 334.72805786]
[-80.63343811 329.18228149]
[-66.27663422 324.80715942]
[-51.60757446 321.63253784]
[-36.72645569 319.68014526]
[-21.73493767 318.96328735]
[-6.73542500 319.48690796]
[8.16961670 321.24737549]
[22.87837029 324.23269653]
[27.06538200 309.82891846]
[31.25239182 295.42510986]
[35.43940353 281.02133179]
[39.62641525 266.61755371]
[32.25009918 253.72859192]
[36.29113770 239.06146240]
[49.86029053 231.41189575]
[54.04730225 217.00811768]
[58.23431396 202.60432434]
[62.42132568 188.20054626]
[61.05270386 184.95104980]
[61.19000626 180.87721252]
[63.20354080 176.69403076]
[67.13027954 173.25486755]
[71.95627594 159.05241394]
[76.78227234 144.84996033]
[73.55114746 130.31004333]
[85.31703186 119.73297119]
[90.14302826 105.53051758]
[77.16040039 113.04392242]
[62.22946548 111.60614777]
[50.91909790 101.75345612]
[47.44778442 87.16064453]
[53.11024094 73.27048492]
[65.79450989 65.26365662]
[80.76966858 66.12651062]
[92.45036316 75.53721619]
[96.47992706 89.98699188]
[102.95942688 76.45864868]
[109.43891907 62.93030167]
[115.91841888 49.40195465]
[122.39791107 35.87360764]
[126.37001038 21.40908432]
[127.70824432 6.46890020]
[125.35692596 -2.35771561]
[129.17924500 -8.68319702]
[130.73976135 -23.60180283]
[132.18917847 -38.53161240]
[133.52742004 -53.47179413]
[134.86564636 -68.41197968]
[136.20388794 -83.35216522]
[137.54211426 -98.29235077]
[138.88035583 -113.23253632]
[140.21858215 -128.17271423]
[125.69927979 -132.09202576]
[112.08121490 -138.47319031]
[99.77822876 -147.12232971]
[89.16419220 -157.77659607]
[80.56166077 -170.11221313]
[74.23204041 -183.75433350]
[70.36769867 -198.28836060]
[69.08605957 -213.27262878]
[70.42607880 -228.25180054]
[74.34702301 -242.77066040]
[80.72974396 -256.38800049]
[89.38027954 -268.69000244]
[100.03574371 -279.30282593]
[112.37233734 -287.90396118]
[126.01516724 -294.23202515]
[140.54963684 -298.09472656]
[155.53405762 -299.37466431]
[170.51307678 -298.03295898]
[185.03147888 -294.11038208]
[198.64810181 -287.72610474]
[210.94912720 -279.07418823]
[221.56074524 -268.41751099]
[230.16049194 -256.07992554]
[236.48699951 -242.43638611]
[240.34805298 -227.90148926]
[241.62629700 -212.91691589]
[240.28288269 -197.93804932]
[236.35864258 -183.42008972]
[229.97283936 -169.80418396]
[221.31950378 -157.50415039]
[210.66163635 -146.89373779]
[198.32308960 -138.29539490]
[184.67883301 -131.97042847]
[170.14347839 -128.11102295]
[155.15876770 -126.83448792]
[153.82054138 -111.89430237]
[152.48229980 -96.95411682]
[151.14407349 -82.01393127]
[149.80583191 -67.07374573]
[148.46760559 -52.13356018]
[147.12936401 -37.19337845]
[149.66358948 -30.25078773]
[145.65837097 -22.04127884]
[144.09783936 -7.12267447]
[142.64842224 7.80713415]
[141.31019592 22.74732018]
[149.13858032 9.95214844]
[159.76686096 -0.63272697]
[172.59396362 -8.40868092]
[186.89445496 -12.93594551]
[201.85955811 -13.95848179]
[216.64292908 -11.41846085]
[230.40850830 -5.45953321]
[242.37777710 3.58129573]
[251.87382507 15.19272232]
[258.35958862 28.71806526]
[261.46826172 43.39239883]
[261.02404785 58.38581848]
[257.05209351 72.85037994]
[249.77697754 85.96803284]
[239.61018372 96.99691010]
[227.12667847 105.31328583]
[213.03247070 110.44682312]
[198.12464905 112.10719299]
[183.24632263 110.20049286]
[169.23893738 104.83455658]
[156.89468384 96.31285858]
[146.91168213 85.11734009]
[139.85452271 71.88115692]
[136.12231445 57.35289001]
[135.92625427 42.35310364]
[129.44676208 55.88145065]
[122.96726227 69.40979767]
[116.48777008 82.93814087]
[110.00827026 96.46648407]
[104.34548950 110.35651398]
[99.51948547 124.55896759]
[102.40542603 140.11473083]
[90.98473358 149.67596436]
[86.15872955 163.87841797]
[81.33273315 178.08087158]
[76.82510376 192.38755798]
[72.63809204 206.79133606]
[68.45108032 221.19512939]
[64.26407623 235.59890747]
[71.61795807 249.33055115]
[67.16654205 263.87838745]
[54.03019714 270.80456543]
[49.84318542 285.20834351]
[45.65617371 299.61212158]
[41.46916199 314.01593018]
[37.28215027 328.41970825]
[51.29917908 333.78463745]
[64.82529449 340.28875732]
[77.76809692 347.88766479]
[90.03917694 356.52941895]
[101.55471039 366.15502930]
[112.23603058 376.69869995]
[122.01016998 388.08840942]
[130.81036377 400.24639893]
[138.57649231 413.08953857]
[145.25550842 426.53015137]
[150.80178833 440.47644043]
[155.17742920 454.83306885]
[158.35256958 469.50201416]
[160.30549622 484.38308716]
[161.02288818 499.37457275]
[160.49981689 514.37408447]
[158.73988342 529.27917480]
[155.75508118 543.98803711]
[151.56582642 558.40020752]
[146.20072937 572.41717529]
[139.69644165 585.94317627]
[132.09738159 598.88592529]
[123.45546722 611.15692139]
[113.82973480 622.67230225]
[103.28594208 633.35351562]
[91.89610291 643.12750244]
[79.73802948 651.92755127]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 183]
[48 182]
[49 181]
[50 180]
[51 179]
[54 176]
[55 175]
[56 174]
[57 173]
[61 172]
[62 171]
[63 170]
[65 168]
[66 167]
[75 166]
[76 165]
[77 164]
[78 163]
[79 162]
[80 137]
[81 136]
[83 135]
[84 134]
[85 132]
[86 131]
[87 130]
[88 129]
[89 128]
[90 127]
[91 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
