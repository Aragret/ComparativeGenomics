%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[125.73011017 548.49603271]
[113.33393860 539.16247559]
[108.82353210 524.31542969]
[113.93323517 509.66375732]
[126.69825745 500.84143066]
[126.92158508 485.84307861]
[127.14491272 470.84475708]
[127.36824036 455.84640503]
[127.59156799 440.84808350]
[127.81489563 425.84973145]
[128.03822327 410.85137939]
[126.81124878 395.90167236]
[124.14545441 381.14044189]
[121.47966003 366.37921143]
[110.91281891 377.02545166]
[95.98519897 375.55368042]
[87.70087433 363.04888916]
[92.16674805 348.72912598]
[106.09074402 343.15036011]
[119.20764923 350.42376709]
[117.64712524 335.50515747]
[104.68086243 328.22409058]
[98.41416168 314.54223633]
[101.44083405 299.61935425]
[112.80557251 289.21987915]
[111.24504852 274.30130005]
[109.68452454 259.38269043]
[108.12400055 244.46408081]
[106.45246124 229.55751038]
[104.66999817 214.66378784]
[95.35762024 206.94328308]
[93.75072479 194.54966736]
[101.25163269 184.05685425]
[99.69110870 169.13824463]
[98.13059235 154.21963501]
[96.57006836 139.30104065]
[87.55067444 127.44777679]
[93.81028748 112.91754150]
[85.75378418 101.49018860]
[91.27111053 88.64298248]
[79.27744293 78.70368195]
[77.90737152 63.55186462]
[87.45688629 52.17898941]
[85.89636230 37.26038361]
[84.33583832 22.34177971]
[82.77531433 7.42317486]
[78.91101074 -7.07051849]
[72.83717346 -20.78578568]
[66.76334381 -34.50105286]
[60.68950653 -48.21632004]
[54.61567307 -61.93158340]
[48.54183960 -75.64685059]
[44.78371048 -61.12526703]
[33.84377289 -50.86282349]
[19.11188126 -48.03945541]
[5.15287685 -53.53001022]
[-3.70789266 -65.63317871]
[-4.72482109 -80.59867096]
[2.41719770 -93.78925323]
[15.50513172 -101.11769104]
[30.48354149 -100.31318665]
[42.71136475 -91.62481689]
[38.52435303 -106.02859497]
[34.33734131 -120.43238068]
[17.39829445 -128.91665649]
[12.13022614 -146.78172302]
[21.43125153 -162.54898071]
[9.82414818 -173.30006409]
[13.27139378 -187.79025269]
[8.65738392 -202.06298828]
[-3.96072245 -206.77445984]
[-11.45206928 -217.73303223]
[-11.26672649 -230.81155396]
[-3.69639134 -241.23841858]
[-8.09738922 -255.57826233]
[-12.49838734 -269.91812134]
[-16.89938545 -284.25796509]
[-31.80232239 -282.26989746]
[-46.82921982 -282.76208496]
[-61.57013321 -285.72100830]
[-75.62291718 -291.06600952]
[-88.60420990 -298.65127563]
[-100.15985870 -308.26983643]
[-109.97462463 -319.65930176]
[-117.78076172 -332.50897217]
[-123.36529541 -346.46832275]
[-126.57588959 -361.15646362]
[-127.32495117 -376.17276001]
[-125.59204102 -391.10751343]
[-121.42444611 -405.55331421]
[-114.93585205 -419.11605835]
[-106.30327606 -431.42575073]
[-95.76221466 -442.14654541]
[-83.60025024 -450.98602295]
[-70.14915466 -457.70303345]
[-55.77589035 -462.11428833]
[-40.87257004 -464.09945679]
[-25.84576988 -463.60440063]
[-11.10542679 -460.64260864]
[2.94632864 -455.29489136]
[15.92615509 -447.70715332]
[27.47995377 -438.08636475]
[37.29252625 -426.69500732]
[45.09618378 -413.84381104]
[50.67803192 -399.88342285]
[53.88579559 -385.19464111]
[54.63196182 -370.17822266]
[52.89617920 -355.24377441]
[48.72579956 -340.79879761]
[42.23459244 -327.23730469]
[33.59964371 -314.92926025]
[23.05652237 -304.21047974]
[10.89284992 -295.37335205]
[-2.55953836 -288.65896606]
[1.84145963 -274.31912231]
[6.24245787 -259.97924805]
[10.64345551 -245.63941956]
[25.82429504 -238.40194702]
[31.17902756 -222.10342407]
[22.93011856 -206.67700195]
[27.54412651 -192.40426636]
[38.82120514 -182.67407227]
[35.70398331 -167.16299438]
[46.74625015 -164.29338074]
[55.11873627 -156.36766052]
[58.66191101 -145.27081299]
[56.38535309 -133.72447205]
[48.74112320 -124.61939240]
[52.92813492 -110.21560669]
[57.11514664 -95.81182861]
[62.25710678 -81.72068787]
[68.33094025 -68.00541687]
[74.40477753 -54.29015350]
[80.47860718 -40.57488632]
[86.55244446 -26.85961914]
[92.62627411 -13.14435196]
[93.39529419 -28.12462616]
[98.12502289 -42.35943222]
[106.47402191 -54.82114410]
[117.83956146 -64.61014557]
[131.40115356 -71.01975250]
[146.17979431 -73.58724976]
[161.10856628 -72.12730408]
[175.10978699 -66.74528503]
[187.17266846 -57.82974625]
[196.42639160 -46.02429581]
[202.20291138 -32.18118668]
[204.08523560 -17.29976082]
[201.93746948 -2.45432019]
[195.91465759 11.28342724]
[186.45158386 22.92174339]
[174.23141479 31.62044716]
[160.13632202 36.75157166]
[145.18385315 37.94469833]
[130.45343018 35.11368942]
[117.00846100 28.46292496]
[105.81954193 18.47252464]
[97.69391632 5.86265182]
[99.25444031 20.78125572]
[100.81496429 35.69985962]
[102.37548828 50.61846542]
[114.07180023 59.76897812]
[115.86691284 74.87633514]
[106.18971252 87.08245850]
[114.24621582 98.50981140]
[108.72888947 111.35701752]
[117.85990906 124.27735901]
[111.48867035 137.74050903]
[113.04919434 152.65911865]
[114.60971832 167.57772827]
[116.17024231 182.49632263]
[127.32935333 197.14404297]
[119.56371307 212.88131714]
[121.34617615 227.77503967]
[125.47318268 235.92401123]
[123.04261017 242.90354919]
[124.60313416 257.82217407]
[126.16365051 272.74075317]
[127.72417450 287.65936279]
[140.99497986 295.48190308]
[147.04429626 309.45541382]
[143.74456787 324.13790894]
[132.56573486 333.94464111]
[134.12625122 348.86322021]
[136.24087524 363.71343994]
[138.90667725 378.47463989]
[141.57246399 393.23587036]
[147.02845764 379.26330566]
[157.63847351 368.66012573]
[171.61451721 363.21310425]
[186.60140991 363.84020996]
[200.07357788 370.43569946]
[209.76072693 381.88818359]
[214.03039551 396.26766968]
[212.16308594 411.15100098]
[204.47346497 424.03002930]
[192.25737000 432.73446655]
[177.57342529 435.79739380]
[162.89613342 432.70272827]
[150.69886780 423.97192383]
[143.03656006 411.07470703]
[142.81323242 426.07305908]
[142.58990479 441.07141113]
[142.36657715 456.06973267]
[142.14324951 471.06808472]
[141.91992188 486.06640625]
[141.69659424 501.06475830]
[154.19328308 510.26324463]
[158.86448669 525.06054688]
[153.91403198 539.76672363]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 207]
[6 206]
[7 205]
[8 204]
[9 203]
[10 202]
[11 201]
[12 187]
[13 186]
[14 185]
[20 184]
[21 183]
[25 179]
[26 178]
[27 177]
[28 176]
[29 174]
[30 173]
[33 171]
[34 170]
[35 169]
[36 168]
[38 166]
[40 164]
[43 161]
[44 160]
[45 159]
[46 158]
[47 136]
[48 135]
[49 134]
[50 133]
[51 132]
[52 131]
[62 130]
[63 129]
[64 128]
[67 123]
[69 121]
[70 120]
[74 117]
[75 116]
[76 115]
[77 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
