%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[81.97841644 178.35511780]
[86.01981354 192.81199646]
[88.68966675 207.58381653]
[89.96452332 222.54072571]
[89.83316803 237.55130005]
[88.29676819 252.48361206]
[85.36882019 267.20642090]
[81.07505035 281.59039307]
[75.45320129 295.50903320]
[68.55268097 308.84011841]
[60.43412399 321.46640015]
[51.16888046 333.27697754]
[40.83837891 344.16806030]
[29.53340340 354.04388428]
[17.35330772 362.81768799]
[4.40512896 370.41238403]
[-9.19733810 376.76116943]
[-23.33455276 381.80831909]
[-37.88227463 385.50942993]
[-52.71265411 387.83200073]
[-67.69535828 388.75561523]
[-82.69871521 388.27215576]
[-97.59087372 386.38586426]
[-112.24095154 383.11331177]
[-126.52021790 378.48327637]
[-140.30316162 372.53643799]
[-153.46867371 365.32507324]
[-165.90103149 356.91253662]
[-177.49099731 347.37274170]
[-188.13670349 336.78958130]
[-197.74459839 325.25604248]
[-206.23023987 312.87344360]
[-213.51905823 299.75067139]
[-219.54699707 286.00299072]
[-224.26109314 271.75128174]
[-227.61990356 257.12072754]
[-229.59390259 242.23994446]
[-230.16577148 227.23968506]
[-229.33044434 212.25180054]
[-227.09530640 197.40798950]
[-223.47996521 182.83871460]
[-218.51620483 168.67201233]
[-212.24765015 155.03237915]
[-204.72940063 142.03967285]
[-196.02751160 129.80809021]
[-186.21846008 118.44512177]
[-175.38845825 108.05062866]
[-163.63267517 98.71596527]
[-151.05442810 90.52314758]
[-137.76425171 83.54419708]
[-123.87895203 77.84043884]
[-109.52054596 73.46199799]
[-94.81523132 70.44734955]
[-79.89222717 68.82299042]
[-64.88269806 68.60320282]
[-49.91852951 69.78990936]
[-35.13124847 72.37268066]
[-20.65079689 76.32881927]
[-6.60444021 81.62356567]
[6.88438272 88.21038055]
[19.69712830 96.03137970]
[31.72119522 105.01782990]
[42.85091019 115.09075928]
[52.98846817 126.16163635]
[64.95080566 117.11164093]
[76.91313934 108.06163788]
[88.87548065 99.01164246]
[100.77011108 89.87284088]
[112.59638214 80.64573669]
[124.42265320 71.41864014]
[136.24891663 62.19154358]
[148.07519531 52.96444321]
[150.90571594 46.98952484]
[155.62095642 43.81721497]
[160.39373779 43.64496231]
[172.48948669 34.77406693]
[184.58523560 25.90317154]
[196.68098450 17.03227615]
[208.77673340 8.16138077]
[220.87249756 -0.70951456]
[232.96824646 -9.58041000]
[245.06399536 -18.45130539]
[236.88932800 -31.03288269]
[229.43955994 -44.05678940]
[222.73855591 -57.48131180]
[216.80778503 -71.26344299]
[211.66622925 -85.35903168]
[207.33036804 -99.72293091]
[203.81410217 -114.30912018]
[201.12867737 -129.07089233]
[199.28271484 -143.96093750]
[198.28210449 -158.93157959]
[198.13006592 -173.93484497]
[198.82707214 -188.92268372]
[200.37092590 -203.84709167]
[202.75663757 -218.66023254]
[205.97659302 -233.31469727]
[210.02047729 -247.76351929]
[214.87532043 -261.96038818]
[220.52557373 -275.85989380]
[226.95315552 -289.41744995]
[234.13745117 -302.58966064]
[242.05546570 -315.33432007]
[250.68183899 -327.61059570]
[259.98892212 -339.37918091]
[269.94689941 -350.60235596]
[280.52389526 -361.24417114]
[291.68600464 -371.27056885]
[303.39749146 -380.64938354]
[315.62081909 -389.35061646]
[328.31683350 -397.34637451]
[341.44488525 -404.61105347]
[354.96292114 -411.12136841]
[368.82760620 -416.85647583]
[382.99456787 -421.79800415]
[397.41839600 -425.93008423]
[412.05288696 -429.23956299]
[426.85119629 -431.71575928]
[441.76589966 -433.35076904]
[456.74917603 -434.13937378]
[471.75311279 -434.07904053]
[486.72958374 -433.16995239]
[501.63064575 -431.41500854]
[516.40850830 -428.81985474]
[531.01593018 -425.39279175]
[545.40606689 -421.14480591]
[559.53283691 -416.08947754]
[573.35095215 -410.24304199]
[586.81616211 -403.62420654]
[599.88537598 -396.25418091]
[612.51666260 -388.15655518]
[624.66961670 -379.35729980]
[636.30523682 -369.88458252]
[647.38635254 -359.76870728]
[657.87744141 -349.04214478]
[667.74481201 -337.73925781]
[676.95690918 -325.89617920]
[685.48425293 -313.55090332]
[693.29949951 -300.74298096]
[700.37762451 -287.51342773]
[706.69592285 -273.90460205]
[712.23425293 -259.96011353]
[716.97473145 -245.72462463]
[720.90222168 -231.24375916]
[724.00421143 -216.56387329]
[726.27069092 -201.73200989]
[727.69445801 -186.79566956]
[728.27087402 -171.80270386]
[727.99816895 -156.80114746]
[726.87719727 -141.83903503]
[724.91149902 -126.96432495]
[722.10742188 -112.22463226]
[718.47393799 -97.66719818]
[714.02270508 -83.33863831]
[708.76794434 -69.28485870]
[702.72650146 -55.55088043]
[695.91772461 -42.18069458]
[688.36346436 -29.21713066]
[680.08782959 -16.70171547]
[671.11743164 -4.67453766]
[661.48095703 6.82587385]
[651.20928955 17.76268005]
[640.33532715 28.10084534]
[628.89385986 37.80725479]
[616.92156982 46.85081863]
[604.45684814 55.20256424]
[591.53955078 62.83573532]
[578.21112061 69.72588348]
[564.51422119 75.85094452]
[550.49279785 81.19128418]
[536.19158936 85.72980499]
[521.65661621 89.45196533]
[506.93426514 92.34584045]
[492.07180786 94.40216827]
[477.11682129 95.61434937]
[462.11721802 95.97850800]
[447.12100220 95.49348450]
[432.17626953 94.16082001]
[417.33087158 91.98478699]
[402.63235474 88.97235870]
[388.12777710 85.13318634]
[373.86367798 80.47956848]
[359.88568115 75.02639771]
[346.23858643 68.79116058]
[332.96612549 61.79382706]
[320.11077881 54.05680466]
[307.71377563 45.60488129]
[295.81475830 36.46512985]
[284.45190430 26.66683197]
[273.66159058 16.24137115]
[263.47839355 5.22214222]
[253.93489075 -6.35555363]
[241.83914185 2.51534200]
[229.74339294 11.38623714]
[217.64762878 20.25713348]
[205.55187988 29.12802887]
[193.45613098 37.99892426]
[181.36038208 46.86981964]
[169.26463318 55.74071503]
[157.30229187 64.79071808]
[145.47601318 74.01781464]
[133.64974976 83.24491119]
[121.82347870 92.47200775]
[109.99720764 101.69910431]
[106.08441162 108.74627686]
[97.92547607 110.97397614]
[85.96314240 120.02397919]
[74.00080872 129.07397461]
[62.03847122 138.12397766]
[69.93482971 150.89041138]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[64 209]
[65 208]
[66 207]
[67 206]
[68 204]
[69 203]
[70 202]
[71 201]
[72 200]
[75 199]
[76 198]
[77 197]
[78 196]
[79 195]
[80 194]
[81 193]
[82 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
