%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGAUGCGGGAGAGUCGGCUACUUGUCAACCUUAUCCAACAAUCGCCAUUGAUUCUAAUCAUACCAUUAAUCCUUCUACUCAUCUAUAAACUUCUUGACxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[0.62313318 442.67056274]
[8.44140911 455.53366089]
[13.50999451 469.70739746]
[15.62133408 484.61132812]
[14.68897057 499.63516235]
[10.75108337 514.16369629]
[3.96892548 527.60192871]
[-5.37977695 539.39971924]
[-16.91220093 549.07379150]
[-30.15609932 556.22808838]
[-44.56914520 560.56964111]
[-59.56113434 561.92065430]
[-74.51815033 560.22576904]
[-88.82771301 555.55444336]
[-101.90386200 548.09796143]
[-113.21112823 538.16162109]
[-122.28648376 526.15234375]
[-128.75831604 512.56188965]
[-132.36158752 497.94677734]
[-132.94876099 482.90551758]
[-130.49577332 468.05398560]
[-125.10309601 454.00036621]
[-116.99154663 441.32015991]
[-106.49327850 430.53262329]
[-94.03820801 422.07946777]
[-80.13634491 416.30682373]
[-65.35697174 413.45114136]
[-50.30528641 413.62933350]
[-35.59765244 416.83407593]
[-29.52381897 403.11880493]
[-23.44998550 389.40353394]
[-17.37615204 375.68829346]
[-19.29720497 360.91809082]
[-6.63459921 351.43289185]
[-0.86856562 337.58538818]
[4.58679152 323.61260986]
[10.04214859 309.63980103]
[1.85925698 297.22296143]
[2.56534839 282.19079590]
[12.09898472 270.31802368]
[26.96749878 266.28894043]
[32.42285538 252.31613159]
[29.84419441 237.64643860]
[42.07063293 227.60528564]
[47.52598953 213.63249207]
[44.94733047 198.96279907]
[57.17377090 188.92164612]
[62.62912750 174.94885254]
[68.08448029 160.97605896]
[73.53984070 147.00325012]
[78.99520111 133.03045654]
[84.45055389 119.05766296]
[89.90591431 105.08486176]
[76.60073853 112.01107025]
[61.74889374 109.90802765]
[50.88975525 99.56012726]
[48.07350922 84.82687378]
[54.35054398 71.20340729]
[67.37968445 63.77094650]
[82.30138397 65.30161285]
[93.55021667 75.22451019]
[96.93054199 89.83979797]
[98.22021484 80.79686737]
[104.21274567 76.47119904]
[111.48596954 63.35250473]
[118.75920105 50.23381042]
[107.93479156 39.73298645]
[100.20343018 26.79809189]
[96.08699036 12.31393337]
[95.86029816 -2.73050976]
[99.53279877 -17.30961800]
[106.84832764 -30.43105125]
[117.30297089 -41.20328903]
[130.17974854 -48.89620972]
[144.59780884 -52.99056625]
[159.57270813 -53.21303940]
[174.08354187 -49.55446625]
[181.35676575 -62.67316055]
[188.62998962 -75.79185486]
[195.90322876 -88.91054535]
[195.82778931 -104.73157501]
[208.76589966 -112.11090851]
[216.03913879 -125.22960663]
[217.46330261 -134.25233459]
[223.51956177 -138.48829651]
[230.98730469 -151.49725342]
[238.45504761 -164.50621033]
[245.92279053 -177.51515198]
[246.08291626 -193.33555603]
[259.12945557 -200.52143860]
[266.59719849 -213.53039551]
[274.06494141 -226.53935242]
[281.53268433 -239.54829407]
[269.34921265 -248.32138062]
[258.13238525 -258.30068970]
[248.00109863 -269.38046265]
[239.06275940 -281.44320679]
[231.41212463 -294.36108398]
[225.13027954 -307.99716187]
[220.28384399 -322.20687866]
[216.92416382 -336.83959961]
[215.08685303 -351.74023438]
[214.79141235 -366.75079346]
[216.04096985 -381.71215820]
[218.82225037 -396.46575928]
[223.10580444 -410.85516357]
[228.84620667 -424.72787476]
[235.98260498 -437.93679810]
[244.43936157 -450.34191895]
[254.12681580 -461.81176758]
[264.94229126 -472.22473145]
[276.77111816 -481.47042847]
[289.48791504 -489.45083618]
[302.95785522 -496.08139038]
[317.03820801 -501.29177856]
[331.57965088 -505.02676392]
[346.42807007 -507.24679565]
[361.42605591 -507.92828369]
[376.41461182 -507.06402588]
[391.23489380 -504.66320801]
[405.72973633 -500.75125122]
[419.74551392 -495.36962891]
[433.13366699 -488.57537842]
[445.75222778 -480.44055176]
[457.46749878 -471.05136108]
[468.15524292 -460.50735474]
[477.70217896 -448.92028809]
[486.00708008 -436.41299438]
[492.98196411 -423.11807251]
[498.55285645 -409.17642212]
[502.66067505 -394.73587036]
[505.26193237 -379.94946289]
[506.32904053 -364.97399902]
[505.85064697 -349.96813965]
[503.83187866 -335.09103394]
[500.29409790 -320.50033569]
[495.27481079 -306.35076904]
[488.82723999 -292.79226685]
[481.01971436 -279.96859741]
[471.93499756 -268.01565552]
[461.66943359 -257.06021118]
[450.33178711 -247.21836853]
[438.04229736 -238.59443665]
[424.93118286 -231.27986145]
[411.13748169 -225.35217285]
[396.80737305 -220.87420654]
[382.09280396 -217.89341736]
[367.14971924 -216.44143677]
[352.13653564 -216.53363037]
[337.21240234 -218.16902161]
[322.53555298 -221.33029175]
[308.26150513 -225.98391724]
[294.54162598 -232.08055115]
[287.07388306 -219.07160950]
[279.60617065 -206.06265259]
[272.13842773 -193.05369568]
[272.51242065 -178.16378784]
[258.93173218 -170.04740906]
[251.46400452 -157.03846741]
[243.99626160 -144.02951050]
[236.52851868 -131.02055359]
[229.15782166 -117.95637512]
[221.88459778 -104.83767700]
[222.48025513 -89.95499420]
[209.02192688 -81.63732147]
[201.74868774 -68.51862335]
[194.47546387 -55.39992905]
[187.20222473 -42.28123474]
[197.99273682 -31.91231346]
[205.73742676 -19.09371185]
[209.90324402 -4.69612837]
[210.20045471 10.30067253]
[206.60278320 24.87452888]
[199.34963989 38.03054810]
[188.93019104 48.86903381]
[176.05035400 56.64699936]
[161.58502197 60.82910156]
[146.51856995 61.12449646]
[131.87789917 57.50704193]
[124.60466766 70.62573242]
[117.33143616 83.74443054]
[110.15607452 96.91690063]
[103.87870789 110.54022217]
[98.42335510 124.51301575]
[92.96799469 138.48580933]
[87.51264191 152.45861816]
[82.05728149 166.43141174]
[76.60192108 180.40420532]
[71.14656830 194.37701416]
[73.33502197 210.04612732]
[61.49879074 219.08784485]
[56.04343033 233.06065369]
[58.23188782 248.72976685]
[46.39565277 257.77148438]
[40.94029617 271.74429321]
[49.14548874 284.78195190]
[48.11243820 299.97360229]
[38.44640732 311.50756836]
[24.01494598 315.09515381]
[18.55958939 329.06796265]
[13.10423183 343.04074097]
[13.89310551 348.20068359]
[12.73922634 352.69754028]
[10.22048569 355.90237427]
[7.08066750 357.50671387]
[8.56727982 373.25793457]
[-3.66088510 381.76211548]
[-9.73471928 395.47738647]
[-15.80855274 409.19265747]
[-21.88238716 422.90792847]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 210]
[30 209]
[31 208]
[32 207]
[34 205]
[35 201]
[36 200]
[37 199]
[41 195]
[42 194]
[44 192]
[45 191]
[47 189]
[48 188]
[49 187]
[50 186]
[51 185]
[52 184]
[53 183]
[62 182]
[64 181]
[65 180]
[66 179]
[77 168]
[78 167]
[79 166]
[80 165]
[82 163]
[83 162]
[85 161]
[86 160]
[87 159]
[88 158]
[90 156]
[91 155]
[92 154]
[93 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
