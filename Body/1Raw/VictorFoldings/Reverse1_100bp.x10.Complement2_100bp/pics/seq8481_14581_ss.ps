%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[264.41293335 439.69363403]
[276.01327515 430.13684082]
[268.35266113 417.24050903]
[260.69207764 404.34417725]
[253.03146362 391.44784546]
[245.17971802 378.66699219]
[237.13853455 366.00448608]
[221.30670166 368.17321777]
[206.05853271 363.20257568]
[194.46250916 352.03942871]
[188.87536621 336.88211060]
[190.46327209 320.74761963]
[198.95884705 306.87103271]
[190.73004150 294.32965088]
[177.27891541 287.93304443]
[176.17742920 272.15020752]
[167.94860840 259.60882568]
[159.71980286 247.06741333]
[151.49099731 234.52601624]
[143.26219177 221.98461914]
[135.03338623 209.44322205]
[126.80457306 196.90182495]
[118.57576752 184.36041260]
[120.25955200 199.26560974]
[117.91407776 214.08110046]
[111.70867157 227.73735046]
[102.09130859 239.24848938]
[89.75626373 247.78352356]
[75.59403229 252.72630310]
[60.62697983 253.72000122]
[45.93560410 250.69288635]
[32.58047867 243.86347961]
[21.52573013 233.72482300]
[13.56940365 221.00880432]
[9.28587627 206.63343811]
[8.98437977 191.63645935]
[12.68667793 177.10054016]
[20.12549973 164.07502747]
[30.76382828 153.50025940]
[43.83367538 146.13961792]
[58.39152145 142.52447510]
[73.38641357 142.91581726]
[87.73586273 147.28540039]
[100.40397644 155.31777954]
[110.47687531 166.43403625]
[106.50478363 151.96951294]
[102.53268433 137.50498962]
[98.56058502 123.04046631]
[94.58849335 108.57594299]
[89.58687592 102.25483704]
[90.66664886 93.86645508]
[86.91034698 79.34439087]
[83.15405273 64.82233429]
[68.99810028 63.25386429]
[56.25452042 56.96081543]
[46.44505692 46.71740341]
[40.73329926 33.76816940]
[39.78670120 19.67681885]
[43.69861603 6.13738012]
[51.97955704 -5.22943640]
[63.61833191 -13.07024384]
[60.07865906 -27.64661980]
[56.53898621 -42.22299576]
[52.99931335 -56.79936981]
[49.45964050 -71.37574768]
[45.70334244 -85.89780426]
[42.77467728 -71.18648529]
[36.18593979 -57.71100616]
[26.37413406 -46.36515045]
[13.99004459 -37.90144348]
[-0.14493725 -32.88125229]
[-15.09328842 -31.63755417]
[-29.86353874 -34.25283432]
[-43.47603226 -40.55363083]
[-55.02790070 -50.12203598]
[-63.75294495 -62.32341003]
[-69.07247162 -76.34848022]
[-70.63365173 -91.26702118]
[-68.33293915 -106.08952332]
[-62.32292938 -119.83287811]
[-53.00225067 -131.58554077]
[-40.98910141 -140.56797791]
[-27.08027840 -146.18443298]
[-12.19830036 -148.06239319]
[2.66976476 -146.07728577]
[16.53777122 -140.36077881]
[28.48590279 -131.29203796]
[37.72168350 -119.47254944]
[43.63393784 -105.68132019]
[44.52675247 -120.65472412]
[45.41956711 -135.62812805]
[46.31238556 -150.60153198]
[47.20520020 -165.57495117]
[48.09801483 -180.54835510]
[48.99083328 -195.52175903]
[49.88364792 -210.49516296]
[41.26215363 -226.76634216]
[51.48981476 -241.02684021]
[52.15959930 -256.01187134]
[52.82938385 -270.99691772]
[39.18872070 -277.76834106]
[29.48654366 -289.50665283]
[25.40381432 -304.17810059]
[27.64789200 -319.24075317]
[35.82997513 -332.08496094]
[48.53246689 -340.48535156]
[63.55458450 -342.98651123]
[78.29365540 -339.15512085]
[90.19605255 -329.65496826]
[97.19960022 -316.13201904]
[98.09090424 -300.92919922]
[92.71553802 -286.68051147]
[82.00480652 -275.85461426]
[67.81442261 -270.32714844]
[67.14463806 -255.34210205]
[66.47485352 -240.35705566]
[74.40379333 -231.22149658]
[73.96842194 -218.73173523]
[64.85705566 -209.60234070]
[63.96423721 -194.62893677]
[63.07142258 -179.65553284]
[62.17860413 -164.68212891]
[61.28578949 -149.70872498]
[60.39297485 -134.73532104]
[59.50016022 -119.76190948]
[58.60734177 -104.78850555]
[60.16786575 -89.86990356]
[63.80187988 -86.77103424]
[65.52777863 -81.35639191]
[64.03601837 -74.91542053]
[67.57569122 -60.33904266]
[71.11536407 -45.76266861]
[74.65503693 -31.18629265]
[78.19470978 -16.60991669]
[93.88860321 -14.41272354]
[107.57096100 -6.34165668]
[117.13163757 6.39287710]
[121.08300781 21.85866165]
[118.79135132 37.69482422]
[110.57831573 51.47221756]
[97.67610931 61.06603241]
[101.43241119 75.58809662]
[105.18871307 90.11015320]
[109.05301666 104.60384369]
[113.02510834 119.06836700]
[116.99720764 133.53289795]
[120.96930695 147.99742126]
[124.94139862 162.46194458]
[131.11717224 176.13160706]
[139.34597778 188.67300415]
[147.57478333 201.21441650]
[155.80358887 213.75581360]
[164.03239441 226.29721069]
[172.26121521 238.83860779]
[180.49002075 251.38002014]
[188.71882629 263.92141724]
[202.75852966 271.21505737]
[203.27143860 286.10083008]
[211.50024414 298.64224243]
[225.42953491 296.25021362]
[239.17677307 299.33850098]
[250.67367554 307.40863037]
[258.20339966 319.21511841]
[260.65698242 332.95773315]
[257.69644165 346.55581665]
[249.80107117 357.96331787]
[257.84222412 370.62582397]
[263.51568604 374.02044678]
[266.21752930 379.02017212]
[265.92779541 383.78726196]
[273.58837891 396.68356323]
[281.24899292 409.57989502]
[288.90957642 422.47622681]
[302.85116577 416.86080933]
[317.48654175 413.43945312]
[332.47271729 412.29238892]
[347.45831299 413.44653320]
[362.09210205 416.87478638]
[376.03100586 422.49679565]
[388.94830322 430.18078613]
[400.54119873 439.74664307]
[410.53793335 450.97009277]
[418.70413208 463.58807373]
[424.84841919 477.30477905]
[428.82675171 491.79867554]
[430.54586792 506.73004150]
[429.96545410 521.74877930]
[427.09912109 536.50292969]
[422.01406860 550.64660645]
[414.82949829 563.84820557]
[405.71383667 575.79827881]
[394.88073730 586.21673584]
[382.58416748 594.85937500]
[369.11236572 601.52355957]
[354.78112793 606.05303955]
[339.92642212 608.34167480]
[324.89642334 608.33581543]
[310.04348755 606.03558350]
[295.71578979 601.49493408]
[282.24920654 594.82031250]
[269.95935059 586.16815186]
[259.13436890 575.74121094]
[250.02799988 563.78405762]
[242.85371399 550.57684326]
[237.77967834 536.42926025]
[234.92483521 521.67285156]
[234.35612488 506.65365601]
[236.08685303 491.72366333]
[240.07646179 477.23284912]
[246.23143005 463.52093506]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 173]
[3 172]
[4 171]
[5 170]
[6 167]
[7 166]
[13 159]
[14 158]
[16 156]
[17 155]
[18 154]
[19 153]
[20 152]
[21 151]
[22 150]
[23 149]
[45 148]
[46 147]
[47 146]
[48 145]
[49 144]
[51 143]
[52 142]
[53 141]
[61 134]
[62 133]
[63 132]
[64 131]
[65 130]
[66 127]
[89 126]
[90 125]
[91 124]
[92 123]
[93 122]
[94 121]
[95 120]
[96 119]
[98 116]
[99 115]
[100 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
