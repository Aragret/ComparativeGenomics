%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxGGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUA\
) } def
/len { sequence length } bind def

/coor [
[78.78182220 770.74310303]
[67.51988220 760.78979492]
[57.90938950 749.23388672]
[50.17562103 736.34631348]
[44.49987030 722.42919922]
[41.01518631 707.80877686]
[39.80325317 692.82769775]
[40.89248276 677.83721924]
[44.25733948 663.18878174]
[49.81894684 649.22564697]
[57.44692993 636.27514648]
[66.96248627 624.64099121]
[78.14254761 614.59576416]
[90.72504425 606.37493896]
[104.41501617 600.17132568]
[118.89156342 596.13031006]
[117.10910034 581.23657227]
[115.32662964 566.34283447]
[104.06665802 552.88256836]
[111.45407104 536.01519775]
[109.45005798 521.14965820]
[107.44604492 506.28414917]
[93.05473328 504.94329834]
[79.31774902 500.42440796]
[66.92807007 492.95190430]
[56.51149750 482.89926147]
[48.59504700 470.77047729]
[43.58026505 457.17462158]
[41.72290039 442.79534912]
[43.11982346 428.35650635]
[47.70401764 414.58572388]
[55.24775314 402.17764282]
[65.37391663 391.75906372]
[77.57486725 383.85708618]
[91.23785400 378.87249756]
[89.45538330 363.97879028]
[87.67292023 349.08508301]
[85.89045715 334.19134521]
[84.10798645 319.29763794]
[82.32552338 304.40393066]
[75.39962006 317.70925903]
[63.13666534 326.34753418]
[48.27622604 328.38894653]
[34.13816452 323.37744141]
[23.88096428 312.43258667]
[19.79610443 297.99948120]
[22.79615593 283.30255127]
[32.21089935 271.62512207]
[45.93705750 265.57595825]
[60.90816879 266.50640869]
[73.77964783 274.20867920]
[81.67598724 286.96206665]
[82.34577179 271.97702026]
[79.50408173 265.15451050]
[83.13873291 256.77435303]
[84.03154755 241.80094910]
[84.92436218 226.82754517]
[85.81717682 211.85414124]
[86.70999146 196.88073730]
[87.60280609 181.90731812]
[88.49562836 166.93391418]
[89.38844299 151.96051025]
[90.28125763 136.98710632]
[91.17407227 122.01370239]
[92.06688690 107.04029846]
[92.17855835 92.04071045]
[91.50877380 77.05567169]
[90.83898926 62.07063293]
[89.16744232 47.16405869]
[86.50164795 32.40284348]
[83.83585358 17.64162445]
[80.62258148 2.98983741]
[76.86627960 -11.53222179]
[73.10997772 -26.05428123]
[69.35367584 -40.57633972]
[65.59737396 -55.09840012]
[60.88418961 -40.85810852]
[50.52153778 -30.01304436]
[36.51028824 -24.65721512]
[21.55579567 -25.82474709]
[8.54553604 -33.29021072]
[-0.00841224 -45.61214066]
[-2.45441604 -60.41136551]
[1.67980945 -74.83039093]
[11.59601021 -86.08512115]
[25.37952423 -92.00244904]
[40.36896896 -91.43982697]
[53.67011642 -84.50589752]
[62.71525574 -72.53832245]
[61.59960556 -87.49677277]
[60.48395920 -102.45523071]
[57.08327484 -108.12505341]
[57.05995178 -113.80805206]
[59.56455612 -117.87449646]
[58.89477158 -132.85954285]
[58.22498703 -147.84457397]
[43.83210373 -152.66218567]
[32.15395355 -162.35678101]
[24.76991844 -175.61726379]
[22.67862129 -190.65025330]
[26.16289711 -205.42268372]
[34.75152206 -217.93666077]
[47.28296280 -226.49981689]
[62.06243515 -229.95402527]
[77.09114075 -227.83215332]
[90.33657837 -220.42114258]
[100.00740051 -208.72329712]
[104.79570770 -194.32064819]
[104.05393219 -179.16101074]
[97.88237762 -165.29464722]
[87.11570740 -154.59683228]
[73.21002960 -148.51435852]
[73.87981415 -133.52932739]
[74.54959869 -118.54428101]
[75.44241333 -103.57087708]
[76.55805969 -88.61242676]
[77.67370605 -73.65396881]
[80.11943817 -58.85470200]
[83.87574005 -44.33264160]
[87.63204193 -29.81058121]
[91.38833618 -15.28852272]
[95.14463806 -0.76646316]
[104.89038086 -12.16911793]
[119.88612366 -11.81170845]
[129.07756042 0.04229719]
[125.68910980 14.65456676]
[112.21861267 21.25347900]
[98.59706879 14.97582912]
[101.26286316 29.73704720]
[103.92866516 44.49826431]
[111.00743103 31.27362823]
[124.06011963 23.88260078]
[139.04222107 24.61537170]
[151.31134033 33.24488449]
[157.06578064 47.09719086]
[154.52246094 61.88000107]
[144.46945190 73.01270294]
[130.02180481 77.04570770]
[115.65625000 72.72933960]
[105.82402802 61.40084839]
[106.49381256 76.38588715]
[107.16359711 91.37092590]
[117.22106171 80.24224854]
[132.06109619 78.05750275]
[144.89906311 85.81552887]
[149.86558533 99.96945190]
[144.69004822 114.04830170]
[131.73864746 121.61540222]
[116.93257904 119.21118927]
[107.04029846 107.93311310]
[106.14747620 122.90651703]
[105.25466156 137.87992859]
[104.36184692 152.85333252]
[103.46903229 167.82673645]
[102.57621765 182.80014038]
[101.68340302 197.77354431]
[100.79058075 212.74694824]
[99.89776611 227.72035217]
[99.00495148 242.69375610]
[98.11213684 257.66717529]
[97.33081055 272.64682007]
[96.66102600 287.63183594]
[97.21923828 302.62145996]
[99.00170898 317.51516724]
[100.78417206 332.40887451]
[102.56663513 347.30261230]
[104.34910583 362.19631958]
[106.13156891 377.09002686]
[121.61001587 378.95242310]
[136.18754578 384.45465088]
[149.02188110 393.27432251]
[159.37254333 404.89752197]
[166.64352417 418.64874268]
[170.41767883 433.73013306]
[170.48062134 449.26773071]
[166.83283997 464.36218262]
[159.68954468 478.14086914]
[149.46789551 489.80816650]
[136.76264954 498.69149780]
[122.31157684 504.28012085]
[124.31558990 519.14562988]
[126.31960297 534.01116943]
[136.08474731 542.43762207]
[137.44786072 554.86041260]
[130.22035217 564.56036377]
[132.00282288 579.45410156]
[133.78527832 594.34783936]
[148.80657959 594.85858154]
[163.57385254 597.65649414]
[177.74092102 602.67590332]
[190.97569275 609.79919434]
[202.96794128 618.85937500]
[213.43652344 629.64404297]
[222.13604736 641.90039062]
[228.86259460 655.34118652]
[233.45849609 669.65124512]
[235.81597900 684.49517822]
[235.87982178 699.52502441]
[233.64849854 714.38848877]
[229.17433167 728.73706055]
[222.56219482 742.23449707]
[213.96708679 754.56427002]
[203.59048462 765.43750000]
[191.67564392 774.59918213]
[178.50184631 781.83465576]
[164.37792969 786.97424316]
[149.63494873 789.89746094]
[134.61853027 790.53582764]
[119.68066406 788.87432861]
[105.17151642 784.95196533]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 187]
[17 186]
[18 185]
[20 182]
[21 181]
[22 180]
[35 168]
[36 167]
[37 166]
[38 165]
[39 164]
[40 163]
[52 162]
[53 161]
[55 160]
[56 159]
[57 158]
[58 157]
[59 156]
[60 155]
[61 154]
[62 153]
[63 152]
[64 151]
[65 150]
[66 142]
[67 141]
[68 140]
[69 130]
[70 129]
[71 128]
[72 122]
[73 121]
[74 120]
[75 119]
[76 118]
[89 117]
[90 116]
[91 115]
[94 114]
[95 113]
[96 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
