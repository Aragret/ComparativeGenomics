%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[111.75675201 564.90277100]
[121.66728973 552.28686523]
[121.22068787 537.29351807]
[120.77407837 522.30017090]
[120.32747650 507.30682373]
[119.88086700 492.31344604]
[119.43426514 477.32009888]
[118.98765564 462.32675171]
[118.54105377 447.33340454]
[117.53678894 432.36706543]
[115.97626495 417.44845581]
[114.41574097 402.52984619]
[112.85522461 387.61123657]
[103.65882111 379.75296021]
[102.23663330 367.33679199]
[109.89292908 356.95681763]
[108.55469513 342.01663208]
[107.21646118 327.07644653]
[105.87822723 312.13626099]
[97.03630829 300.15002441]
[103.51156616 285.71459961]
[102.17333221 270.77441406]
[99.71662140 268.24520874]
[98.36290741 264.40039062]
[98.71717072 259.77139282]
[101.12422180 255.13961792]
[100.45442963 240.15458679]
[99.78464508 225.16954041]
[99.00332642 210.18991089]
[98.11051178 195.21649170]
[89.62938690 182.97232056]
[96.53157043 168.73608398]
[95.63875580 153.76268005]
[94.74593353 138.78927612]
[93.85311890 123.81586456]
[92.96030426 108.84246063]
[83.77481842 120.70108032]
[69.40596008 125.00641632]
[55.21295929 120.15267944]
[46.48945236 107.95020294]
[46.48909760 92.95020294]
[55.21202087 80.74730682]
[69.40479279 75.89289856]
[83.77385712 80.19754791]
[92.96030426 92.05683136]
[93.85311890 77.08342743]
[94.74593353 62.11001968]
[95.63875580 47.13661194]
[96.53157043 32.16320801]
[97.42438507 17.18980217]
[98.31719971 2.21639585]
[99.21001434 -12.75700951]
[100.10282898 -27.73041534]
[100.66104126 -42.72002411]
[100.88436890 -57.71836090]
[101.10769653 -72.71669769]
[101.33102417 -87.71503448]
[101.55435181 -102.71337128]
[101.77767944 -117.71171570]
[98.77639008 -126.33899689]
[102.11764526 -132.93124390]
[102.56424713 -147.92460632]
[103.01085663 -162.91795349]
[103.45746613 -177.91130066]
[102.45320129 -192.87763977]
[100.00747681 -207.67691040]
[97.56174469 -222.47618103]
[95.11602020 -237.27545166]
[80.83666992 -242.75700378]
[71.28134918 -254.57192993]
[68.93840027 -269.48425293]
[74.33812714 -283.47348022]
[85.93694305 -292.81869507]
[83.49121857 -307.61798096]
[81.04548645 -322.41723633]
[78.59976196 -337.21652222]
[76.15402985 -352.01577759]
[73.70830536 -366.81506348]
[63.82444763 -379.16900635]
[69.38304901 -392.98751831]
[66.93731689 -407.78677368]
[64.49159241 -422.58605957]
[62.04586411 -437.38531494]
[59.60013580 -452.18460083]
[55.70717621 -457.52841187]
[55.17693710 -463.18667603]
[57.30876160 -467.46035767]
[55.30474854 -482.32589722]
[53.30073547 -497.19140625]
[51.29672241 -512.05694580]
[36.34458542 -514.13928223]
[22.50919342 -520.17956543]
[10.81721878 -529.72943115]
[2.13628674 -542.08032227]
[-2.88942051 -556.31561279]
[-3.88696265 -571.37908936]
[-0.78231484 -586.15283203]
[6.19413710 -599.54058838]
[16.52469444 -610.54882812]
[29.44276047 -618.36077881]
[43.98973083 -622.39666748]
[59.08612061 -622.35699463]
[73.61167908 -618.24475098]
[86.48851776 -610.36499023]
[96.76107788 -599.30261230]
[103.66707611 -585.87835693]
[106.69404602 -571.08850098]
[105.61735535 -556.03051758]
[100.51690674 -541.82177734]
[91.77119446 -529.51672363]
[80.02919769 -520.02838135]
[66.16224670 -514.06097412]
[68.16625977 -499.19543457]
[70.17028046 -484.32989502]
[72.17429352 -469.46435547]
[74.39940643 -454.63034058]
[76.84513855 -439.83105469]
[79.29086304 -425.03179932]
[81.73658752 -410.23251343]
[84.18231964 -395.43325806]
[93.89124298 -384.13784790]
[88.50757599 -369.26077271]
[90.95330811 -354.46151733]
[93.39903259 -339.66223145]
[95.84475708 -324.86297607]
[98.29048920 -310.06369019]
[100.73621368 -295.26443481]
[114.72499084 -290.14782715]
[124.33842468 -278.63964844]
[126.91783142 -263.76641846]
[121.67182159 -249.50541687]
[109.91529083 -239.72119141]
[112.36101532 -224.92190552]
[114.80674744 -210.12263489]
[117.25247192 -195.32336426]
[122.91589355 -209.21313477]
[133.68258667 -219.65719604]
[147.73818970 -224.89552307]
[162.71408081 -224.04536438]
[176.08656311 -217.25001526]
[185.60212708 -205.65457153]
[189.65724182 -191.21310425]
[187.56854248 -176.35923767]
[179.68801880 -163.59611511]
[167.34368896 -155.07453918]
[152.61575317 -152.23054504]
[137.98616028 -155.54341125]
[125.92024994 -164.45484924]
[118.45081329 -177.46469116]
[118.00420380 -162.47134399]
[117.55760193 -147.47799683]
[117.11099243 -132.48464966]
[116.77601624 -117.48838806]
[116.55268860 -102.49004364]
[116.32936096 -87.49170685]
[116.10603333 -72.49337006]
[115.88270569 -57.49503326]
[115.65937805 -42.49669647]
[117.83963013 -39.72562408]
[118.78601074 -35.76085281]
[117.95208740 -31.19381142]
[115.07624054 -26.83760071]
[114.18341827 -11.86419392]
[113.29060364 3.10921168]
[112.39778900 18.08261681]
[111.50497437 33.05602264]
[110.61215973 48.02943039]
[109.71934509 63.00283432]
[108.82652283 77.97624207]
[107.93370819 92.94964600]
[107.93370819 107.94964600]
[108.82652283 122.92304993]
[109.71934509 137.89645386]
[110.61215973 152.86985779]
[111.50497437 167.84326172]
[120.04995728 181.15844727]
[113.08391571 194.32368469]
[113.97673035 209.29708862]
[117.61138153 217.67724609]
[114.76968384 224.49975586]
[115.43946838 239.48478699]
[116.10926056 254.46983337]
[117.11351776 269.43618774]
[118.45175171 284.37637329]
[127.38938904 297.43121338]
[120.81841278 310.79803467]
[122.15664673 325.73822021]
[123.49488068 340.67840576]
[124.83311462 355.61859131]
[135.77290344 370.43081665]
[127.77382660 386.05072021]
[129.33435059 400.96932983]
[130.89486694 415.88793945]
[132.45539856 430.80654907]
[143.78479004 420.97573853]
[158.56161499 423.55368042]
[165.89291382 436.64001465]
[160.37435913 450.58795166]
[146.07400513 455.11563110]
[133.53439331 446.88681030]
[133.98100281 461.88015747]
[134.42761230 476.87350464]
[134.87422180 491.86685181]
[135.32083130 506.86019897]
[135.76742554 521.85357666]
[136.21403503 536.84692383]
[136.66064453 551.84027100]
[147.30451965 563.84387207]
[144.41419983 579.62445068]
[130.20689392 587.07641602]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 207]
[3 206]
[4 205]
[5 204]
[6 203]
[7 202]
[8 201]
[9 200]
[10 194]
[11 193]
[12 192]
[13 191]
[16 189]
[17 188]
[18 187]
[19 186]
[21 184]
[22 183]
[26 182]
[27 181]
[28 180]
[29 178]
[30 177]
[32 175]
[33 174]
[34 173]
[35 172]
[36 171]
[45 170]
[46 169]
[47 168]
[48 167]
[49 166]
[50 165]
[51 164]
[52 163]
[53 162]
[54 158]
[55 157]
[56 156]
[57 155]
[58 154]
[59 153]
[61 152]
[62 151]
[63 150]
[64 149]
[65 135]
[66 134]
[67 133]
[68 132]
[73 127]
[74 126]
[75 125]
[76 124]
[77 123]
[78 122]
[80 120]
[81 119]
[82 118]
[83 117]
[84 116]
[87 115]
[88 114]
[89 113]
[90 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
