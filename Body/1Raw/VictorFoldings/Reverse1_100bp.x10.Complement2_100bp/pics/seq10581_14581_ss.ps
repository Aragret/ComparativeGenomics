%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGCGUCCGCCGUUUCUGAUCAUACCGUUAUCCGUGUUAUAACCGAUUCUCCCUCACCCACAACUCCCAAUACUCUCAUCGAUAUUACUUGUCGCUAUxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[76.97768402 570.08233643]
[64.77075958 561.33758545]
[53.61971664 551.28100586]
[43.66478729 540.03912354]
[35.03116608 527.75335693]
[27.82743454 514.57812500]
[22.14418221 500.67919922]
[18.05288506 486.23132324]
[15.60499191 471.41619873]
[14.83129215 456.42016602]
[15.74151230 441.43176270]
[18.32420731 426.63955688]
[22.54689598 412.22952271]
[28.35647583 398.38290405]
[35.67988205 385.27383423]
[44.42501831 373.06716919]
[54.48189926 361.91644287]
[65.72406006 351.96185303]
[78.01010132 343.32858276]
[91.18553162 336.12524414]
[105.08464813 330.44241333]
[119.53265381 326.35153198]
[117.08692169 311.55227661]
[114.64119720 296.75299072]
[112.19547272 281.95373535]
[109.74974060 267.15444946]
[107.30401611 252.35519409]
[104.85828400 237.55592346]
[91.48163605 231.05952454]
[84.41168976 217.77494812]
[86.54476929 202.69836426]
[97.27037048 191.64089966]
[94.82464600 176.84162903]
[92.37891388 162.04235840]
[86.71549988 175.93212891]
[75.94879913 186.37617493]
[61.89319611 191.61450195]
[46.91730881 190.76435852]
[33.54483414 183.96899414]
[24.02926826 172.37356567]
[19.97415352 157.93209839]
[22.06284714 143.07823181]
[29.94336700 130.31509399]
[42.28770828 121.79352570]
[57.01563263 118.94953918]
[71.64522552 122.26239777]
[83.71114349 131.17382812]
[91.18058014 144.18368530]
[91.62718201 129.19032288]
[92.07379150 114.19698334]
[84.61260986 105.25426483]
[85.04602814 93.61582184]
[93.15166473 85.25281525]
[93.82144928 70.26777649]
[94.49123383 55.28274155]
[95.16101837 40.29770279]
[95.49599457 25.30144310]
[95.49599457 10.30144215]
[95.49599457 -4.69855738]
[95.49599457 -19.69855690]
[95.49599457 -34.69855881]
[92.36658478 -43.28020096]
[95.60932922 -49.92147064]
[95.83265686 -64.91980743]
[93.27682495 -79.70046234]
[88.03010559 -93.75292969]
[82.78338623 -107.80540466]
[77.53666687 -121.85787201]
[72.28994751 -135.91033936]
[67.04322815 -149.96281433]
[61.79651260 -164.01528931]
[56.54979324 -178.06776428]
[41.86864471 -174.86705017]
[26.88140869 -173.78834534]
[11.89321518 -174.85362244]
[-2.79079914 -178.04116821]
[-16.87168694 -183.28610229]
[-30.06277657 -190.48165894]
[-42.09551620 -199.48130798]
[-52.72493744 -210.10186768]
[-61.73463440 -222.12710571]
[-68.94118500 -235.31217957]
[-74.19786835 -249.38868713]
[-77.39766693 -264.07003784]
[-78.47544098 -279.05734253]
[-77.40924835 -294.04547119]
[-74.22078705 -308.72927856]
[-68.97497559 -322.80984497]
[-61.77861404 -336.00048828]
[-52.77820969 -348.03268433]
[-42.15699387 -358.66143799]
[-30.13120842 -367.67037964]
[-16.94568062 -374.87612915]
[-2.86884856 -380.13192749]
[11.81269932 -383.33084106]
[26.80006599 -384.40768433]
[41.78812790 -383.34054565]
[56.47174835 -380.15118408]
[70.55198669 -374.90451050]
[83.74218750 -367.70733643]
[95.77381134 -358.70617676]
[106.40191650 -348.08428955]
[115.41012573 -336.05795288]
[122.61504364 -322.87197876]
[127.86998749 -308.79483032]
[131.06796265 -294.11306763]
[132.14389038 -279.12564087]
[131.07583618 -264.13766479]
[127.88555908 -249.45422363]
[122.63800812 -235.37431335]
[115.44001007 -222.18455505]
[106.43811798 -210.15348816]
[95.81558990 -199.52604675]
[83.78868866 -190.51858521]
[70.60226440 -183.31448364]
[75.84898376 -169.26200867]
[81.09570312 -155.20953369]
[86.34242249 -141.15705872]
[91.58914185 -127.10459137]
[96.83585358 -113.05212402]
[102.08257294 -98.99964905]
[107.32929230 -84.94718170]
[108.84316254 -99.87059021]
[113.71285248 -114.05812073]
[121.68291473 -126.76552582]
[132.33525085 -137.32620239]
[145.11105347 -145.18615723]
[159.34013367 -149.93305969]
[174.27607727 -151.31791687]
[189.13534546 -149.26806641]
[203.13847351 -143.89105225]
[215.55088806 -135.46891785]
[225.72145081 -124.44351196]
[233.11662292 -111.39316559]
[237.34848022 -97.00249481]
[238.19502258 -82.02640533]
[235.61186218 -67.25050354]
[229.73446655 -53.44991302]
[220.87120056 -41.34857559]
[209.48696899 -31.58131218]
[196.17900085 -24.66048813]
[181.64538574 -20.94915771]
[166.64852905 -20.64201164]
[151.97514343 -23.75515938]
[138.39495850 -30.12529373]
[126.62036133 -39.41824722]
[117.26903534 -51.14653397]
[110.83099365 -64.69647980]
[110.60766602 -49.69814301]
[110.49599457 -34.69855881]
[110.49599457 -19.69855690]
[110.49599457 -4.69855738]
[110.49599457 10.30144215]
[110.49599457 25.30144310]
[112.71726227 28.03974724]
[113.72256470 31.98999023]
[112.95673370 36.56894302]
[110.14605713 40.96748734]
[109.47627258 55.95252609]
[108.80648804 70.93756104]
[108.13670349 85.92259979]
[116.24847412 100.60508728]
[107.06713867 114.64358521]
[106.62053680 129.63693237]
[106.17392731 144.63027954]
[107.17818451 159.59663391]
[109.62391663 174.39590454]
[112.06964111 189.19517517]
[125.78252411 196.21394348]
[132.65283203 209.80262756]
[130.23286438 224.65548706]
[119.65755463 235.11019897]
[122.10328674 249.90946960]
[124.54901123 264.70874023]
[126.99474335 279.50799561]
[129.44047546 294.30728149]
[131.88619995 309.10653687]
[134.33192444 323.90582275]
[149.32789612 323.13076782]
[164.31636047 324.03964233]
[179.10881042 326.62100220]
[193.51921082 330.84240723]
[207.36634827 336.65075684]
[220.47607422 343.97299194]
[232.68353271 352.71701050]
[243.83517456 362.77288818]
[253.79077148 374.01416016]
[262.42514038 386.29943848]
[269.62963867 399.47421265]
[275.31375122 413.37283325]
[279.40591431 427.82046509]
[281.85467529 442.63543701]
[282.62927246 457.63143921]
[281.71994019 472.61987305]
[279.13815308 487.41223145]
[274.91632080 501.82250977]
[269.10757446 515.66949463]
[261.78494263 528.77899170]
[253.04054260 540.98620605]
[242.98431396 552.13751221]
[231.74275208 562.09277344]
[219.45722961 570.72680664]
[206.28222656 577.93090820]
[192.38345337 583.61456299]
[177.93569946 587.70629883]
[163.12065125 590.15466309]
[148.12461853 590.92877197]
[133.13621521 590.01904297]
[118.34392548 587.43676758]
[103.93376923 583.21453857]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 178]
[23 177]
[24 176]
[25 175]
[26 174]
[27 173]
[28 172]
[32 168]
[33 167]
[34 166]
[48 165]
[49 164]
[50 163]
[53 161]
[54 160]
[55 159]
[56 158]
[57 154]
[58 153]
[59 152]
[60 151]
[61 150]
[63 149]
[64 148]
[65 122]
[66 121]
[67 120]
[68 119]
[69 118]
[70 117]
[71 116]
[72 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
