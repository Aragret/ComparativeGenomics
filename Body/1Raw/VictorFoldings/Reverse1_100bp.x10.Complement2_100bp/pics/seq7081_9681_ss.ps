%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxAUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUA\
) } def
/len { sequence length } bind def

/coor [
[50.90804672 471.67913818]
[52.96481705 486.65451050]
[50.51450729 501.57052612]
[43.77499771 515.10089111]
[33.34555817 526.04241943]
[20.15357208 533.42236328]
[5.37205505 536.58435059]
[-9.68462563 535.24725342]
[-23.67764282 529.53002930]
[-35.36274338 519.94097900]
[-43.70090103 507.33276367]
[-47.95068741 492.82653809]
[-47.73421860 477.71215820]
[-43.07073975 463.33358765]
[-34.37492371 450.96936035]
[-22.42000198 441.71887207]
[-8.26899242 436.40472412]
[6.81980467 435.49938965]
[10.35947704 420.92300415]
[13.89914989 406.34664917]
[17.43882179 391.77026367]
[20.97849464 377.19387817]
[11.62290955 363.21847534]
[15.34291077 346.47106934]
[30.31333160 337.42086792]
[33.63559341 322.79342651]
[36.95785141 308.16595459]
[35.57976151 305.72485352]
[35.08559418 302.59078979]
[35.74412918 299.09768677]
[37.69841385 295.67053223]
[40.93783188 292.77914429]
[45.12483978 278.37536621]
[49.31185150 263.97158813]
[53.49886322 249.56779480]
[57.68587494 235.16401672]
[61.87288666 220.76023865]
[66.05989838 206.35644531]
[70.24691010 191.95266724]
[64.69768524 181.20405579]
[68.06806946 169.16975403]
[79.07646179 162.44828796]
[83.47745514 148.10844421]
[87.87845612 133.76858521]
[90.76372528 119.04869843]
[81.53729248 110.35810089]
[78.92923737 97.95440674]
[83.87445831 86.28399658]
[94.60025024 79.53040314]
[96.16077423 64.61180115]
[97.72129822 49.69319534]
[99.05953217 34.75300980]
[100.17517853 19.79455566]
[101.29082489 4.83610249]
[102.40647888 -10.12235069]
[103.52212524 -25.08080482]
[92.83466339 -14.55568600]
[78.01941681 -12.20864105]
[64.60211945 -18.91506004]
[57.58708191 -32.17361450]
[59.59074020 -47.03918839]
[69.86578369 -57.96729660]
[84.57987213 -60.88201904]
[98.24501801 -54.69623947]
[105.76470184 -41.71595764]
[108.64997101 -56.43584824]
[111.53524780 -71.15573883]
[114.42051697 -85.87563324]
[117.30579376 -100.59552002]
[105.21620941 -108.12500763]
[96.44129181 -119.30543518]
[92.01905060 -132.78121948]
[92.46131134 -146.92729187]
[97.69457245 -160.04502869]
[107.07127380 -170.56629944]
[119.44985199 -177.24082947]
[133.33370972 -179.28480530]
[136.43782043 -193.96011353]
[139.54193115 -208.63542175]
[142.64604187 -223.31071472]
[129.82733154 -231.36717224]
[120.55585480 -243.30079651]
[115.93534851 -257.65945435]
[116.50511169 -272.70425415]
[122.17709351 -286.62005615]
[132.24885559 -297.73464966]
[145.49047852 -304.71954346]
[160.29478455 -306.74871826]
[163.39889526 -321.42401123]
[166.50300598 -336.09933472]
[169.60711670 -350.77462769]
[171.72174072 -365.62481689]
[172.83738708 -380.58328247]
[173.95303345 -395.54174805]
[175.06867981 -410.50018311]
[176.18434143 -425.45864868]
[161.89306641 -430.27636719]
[149.24934387 -438.49749756]
[139.04797363 -449.60528564]
[131.93022156 -462.90145874]
[128.34350586 -477.55023193]
[128.51329041 -492.63073730]
[132.42892456 -507.19503784]
[139.84423828 -520.32757568]
[150.29312134 -531.20288086]
[163.11872864 -539.13726807]
[177.51484680 -543.63195801]
[192.57652283 -544.40447998]
[207.35696411 -541.40625000]
[220.92706299 -534.82574463]
[232.43377686 -525.07653809]
[241.15379333 -512.77160645]
[246.53897095 -498.68435669]
[248.25079346 -483.70034790]
[246.18164062 -468.76147461]
[240.46159363 -454.80685425]
[231.45022583 -442.71362305]
[219.71397400 -433.24203491]
[205.99061584 -426.98742676]
[191.14279175 -424.34298706]
[190.02714539 -409.38455200]
[188.91149902 -394.42608643]
[187.79583740 -379.46762085]
[186.68019104 -364.50918579]
[196.84512329 -375.53976440]
[211.33279419 -379.42663574]
[225.65400696 -374.96542358]
[235.37120056 -363.53842163]
[237.47340393 -348.68646240]
[231.30920410 -335.01156616]
[218.78866577 -326.75106812]
[203.79139709 -326.46453857]
[190.96447754 -334.24078369]
[184.28242493 -347.67053223]
[181.17831421 -332.99520874]
[178.07420349 -318.31991577]
[174.97009277 -303.64462280]
[187.68476868 -295.79461670]
[196.96392822 -284.04617310]
[201.67250061 -269.80523682]
[201.22386169 -254.78459167]
[195.65284729 -240.79766846]
[185.61395264 -229.53974915]
[172.30436707 -222.38246155]
[157.32133484 -220.20660400]
[154.21722412 -205.53131104]
[151.11311340 -190.85600281]
[148.00900269 -176.18069458]
[161.21405029 -167.41984558]
[170.06761169 -154.23030090]
[173.18939209 -138.61526489]
[170.07238770 -122.95998383]
[161.16488647 -109.66742706]
[147.80625916 -100.78949738]
[132.02568054 -97.71025085]
[129.14041138 -82.99035645]
[126.25513458 -68.27046967]
[123.36986542 -53.55057526]
[120.48459625 -38.83068466]
[118.48057556 -23.96515465]
[117.36492920 -9.00670242]
[116.24928284 5.95175123]
[115.13363647 20.91020393]
[114.01798248 35.86865997]
[116.40040588 40.00787354]
[116.20788574 45.68766022]
[112.63990021 51.25371933]
[111.07937622 66.17232513]
[109.51885223 81.09092712]
[120.20149994 93.67062378]
[118.60679626 110.09696960]
[105.70391083 120.38693237]
[114.44559479 108.19747162]
[127.14583588 100.21600342]
[141.92063904 97.62653351]
[156.57823181 100.81318665]
[168.94425964 109.30325317]
[177.18431091 121.83728027]
[180.07598877 136.55590820]
[177.19035339 151.27572632]
[168.95547485 163.81314087]
[156.59292603 172.30828857]
[141.93664551 175.50097656]
[127.16078186 172.91758728]
[114.45726013 164.94132996]
[105.71056366 152.75546265]
[102.21829987 138.16958618]
[97.81730652 152.50942993]
[93.41630554 166.84928894]
[97.95467377 184.69541931]
[84.65068817 196.13967896]
[80.46367645 210.54345703]
[76.27666473 224.94725037]
[72.08966064 239.35102844]
[67.90264893 253.75480652]
[63.71563339 268.15859985]
[59.52862167 282.56237793]
[55.34161377 296.96615601]
[51.58531189 311.48822021]
[48.26305389 326.11566162]
[44.94079208 340.74313354]
[53.38309479 351.23800659]
[54.22720718 364.48556519]
[47.38857269 375.63522339]
[35.55487061 380.73355103]
[32.01519775 395.30993652]
[28.47552490 409.88632202]
[24.93585205 424.46267700]
[21.39617920 439.03906250]
[34.38930893 446.76370239]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 209]
[19 208]
[20 207]
[21 206]
[22 205]
[25 201]
[26 200]
[27 199]
[32 198]
[33 197]
[34 196]
[35 195]
[36 194]
[37 193]
[38 192]
[39 191]
[42 189]
[43 188]
[44 187]
[45 172]
[49 169]
[50 168]
[51 167]
[52 164]
[53 163]
[54 162]
[55 161]
[56 160]
[65 159]
[66 158]
[67 157]
[68 156]
[69 155]
[77 148]
[78 147]
[79 146]
[80 145]
[88 137]
[89 136]
[90 135]
[91 134]
[92 124]
[93 123]
[94 122]
[95 121]
[96 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
