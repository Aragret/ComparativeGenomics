%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAUUCCUCUAAACAUCCCUCUAAUCAUAUCUCUCCAUCUCAAAAAAAGCACUAUCACCAAGUGACCUAUUCACCGCAACCGAACGGUACUAACACUCxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[37.71679306 649.34014893]
[31.45608521 663.16650391]
[20.62075615 673.79473877]
[6.67619514 679.78753662]
[-8.49171066 680.33441162]
[-22.83162880 675.36132812]
[-34.40420151 665.54095459]
[-41.64432907 652.20135498]
[-43.57285309 637.14660645]
[-39.92894745 622.41278076]
[-31.20542717 609.99243164]
[-18.58207321 601.56536865]
[-3.76609039 598.27130127]
[-1.54097319 583.43725586]
[0.68414402 568.60321045]
[2.90926123 553.76916504]
[4.58080196 538.86254883]
[5.69645071 523.90411377]
[6.81209946 508.94567871]
[7.92774820 493.98721313]
[9.04339695 479.02874756]
[10.15904522 464.07031250]
[11.27469444 449.11184692]
[12.39034271 434.15341187]
[3.60918617 446.31445312]
[-9.31801224 453.92285156]
[-24.21279144 455.69641113]
[-38.56512070 451.33630371]
[-49.95637894 441.57723999]
[-56.46693802 428.06381226]
[-56.99966049 413.07327271]
[-51.46476364 399.13177490]
[-40.79498291 388.58874512]
[-26.78836250 383.22082520]
[-11.80525970 383.93261719]
[1.62940574 390.60418701]
[11.25165749 402.11123657]
[15.44010448 416.51629639]
[7.87271070 403.73858643]
[11.69492817 389.01290894]
[25.14868546 381.16217041]
[29.12078285 366.69763184]
[33.09288025 352.23312378]
[37.06497574 337.76858521]
[41.03707123 323.30407715]
[36.94624329 308.98226929]
[48.06170654 297.72360229]
[52.03380585 283.25909424]
[56.00590134 268.79455566]
[59.65398788 254.24494934]
[62.97624969 239.61749268]
[66.29850769 224.99002075]
[69.62076569 210.36256409]
[72.94302368 195.73510742]
[62.27240372 180.86051941]
[65.92562103 162.59669495]
[82.04019165 152.63502502]
[84.92546844 137.91513062]
[87.81073761 123.19524384]
[90.69601440 108.47534943]
[93.25184631 93.69470215]
[95.47695923 78.86065674]
[97.70207977 64.02661133]
[99.92719269 49.19256592]
[91.13504791 41.19039536]
[87.33629608 30.05170441]
[89.36516571 18.58097649]
[96.60370636 9.60772705]
[107.16359711 5.28858948]
[109.82939148 -9.47262764]
[112.49518585 -24.23384476]
[115.16098022 -38.99506378]
[117.82677460 -53.75627899]
[104.24674988 -62.36390305]
[95.03174591 -75.49227905]
[91.56860352 -91.11412811]
[94.35873413 -106.83097076]
[102.94577789 -120.24131775]
[115.98993683 -129.30767822]
[131.47694397 -132.66604614]
[133.92266846 -147.46531677]
[136.36840820 -162.26458740]
[138.81413269 -177.06385803]
[141.14961243 -191.88092041]
[143.37474060 -206.71496582]
[136.23925781 -223.69044495]
[147.69839478 -236.98161316]
[149.70240784 -251.84713745]
[151.59570312 -266.72717285]
[153.37817383 -281.62088013]
[155.16062927 -296.51461792]
[156.94309998 -311.40832520]
[158.72557068 -326.30203247]
[159.84121704 -341.26049805]
[160.28782654 -356.25384521]
[160.73442078 -371.24719238]
[161.18103027 -386.24053955]
[161.62763977 -401.23388672]
[162.07424927 -416.22723389]
[148.19552612 -422.42800903]
[137.74981689 -433.47137451]
[132.33003235 -447.67327881]
[132.76263428 -462.86807251]
[138.98165894 -476.73861694]
[150.03874207 -487.16976929]
[164.24777222 -492.57089233]
[179.44197083 -492.11828613]
[193.30433655 -485.88104248]
[203.72094727 -474.81024170]
[209.10334778 -460.59411621]
[208.63076782 -445.40051270]
[202.37527466 -431.54638672]
[191.29078674 -421.14434814]
[177.06759644 -415.78063965]
[176.62098694 -400.78729248]
[176.17437744 -385.79394531]
[175.72778320 -370.80059814]
[175.28117371 -355.80725098]
[174.83456421 -340.81387329]
[186.46649170 -350.28479004]
[201.40188599 -348.89398193]
[211.08503723 -337.43814087]
[209.96903992 -322.47970581]
[198.69316101 -312.58755493]
[183.71673584 -313.42837524]
[173.61927795 -324.51956177]
[171.83682251 -309.62585449]
[170.05435181 -294.73214722]
[168.27188110 -279.83840942]
[166.48942566 -264.94470215]
[168.81581116 -257.92974854]
[164.56794739 -249.84312439]
[162.56391907 -234.97760010]
[169.64620972 -225.17108154]
[168.09829712 -212.76995850]
[158.20878601 -204.48985291]
[155.98365784 -189.65580750]
[158.10015869 -182.57469177]
[153.61340332 -174.61813354]
[151.16767883 -159.81886292]
[148.72195435 -145.01959229]
[146.27621460 -130.22032166]
[158.46592712 -123.26687622]
[167.56936646 -112.54745483]
[172.47746277 -99.33647156]
[172.58154297 -85.21374512]
[167.84872437 -71.87555695]
[158.82830811 -60.93092346]
[146.58807373 -53.70748138]
[132.58799744 -51.09048462]
[129.92219543 -36.32926559]
[127.25640106 -21.56805038]
[124.59060669 -6.80683231]
[121.92481232 7.95438480]
[133.24897766 22.33767319]
[130.41493225 40.74639511]
[114.76123810 51.41768646]
[112.53612518 66.25173187]
[110.31100464 81.08576965]
[108.08588409 95.91981506]
[109.91548920 99.31465912]
[110.23980713 103.49947357]
[108.73959351 107.78390503]
[105.41590118 111.36062622]
[102.53063202 126.08051300]
[99.64535522 140.80041504]
[96.76008606 155.52029419]
[105.18614960 163.90707397]
[108.48374176 175.20428467]
[105.94470215 186.57298279]
[98.31270599 195.21406555]
[87.57048798 199.05735779]
[84.24822998 213.68482971]
[80.92596436 228.31228638]
[77.60370636 242.93974304]
[74.28144836 257.56719971]
[75.82701874 262.55300903]
[75.35298157 267.17129517]
[73.33751678 270.71432495]
[70.47042084 272.76666260]
[66.49832916 287.23120117]
[62.52623367 301.69570923]
[66.33294678 317.05212402]
[55.50159454 327.27615356]
[51.52949905 341.74069214]
[47.55740356 356.20520020]
[43.58530426 370.66973877]
[39.61320877 385.13427734]
[47.17072296 398.75491333]
[42.93639755 413.36740112]
[29.90462875 420.48840332]
[27.34879684 435.26904297]
[26.23314667 450.22750854]
[25.11749840 465.18594360]
[24.00185013 480.14440918]
[22.88620186 495.10287476]
[21.77055359 510.06130981]
[20.65490341 525.01977539]
[19.53925514 539.97821045]
[32.43543243 532.31738281]
[46.51886368 537.48040771]
[51.40777206 551.66131592]
[43.49823380 564.40649414]
[28.62086487 566.32061768]
[17.74330521 555.99426270]
[15.51818752 570.82830811]
[13.29307079 585.66235352]
[11.06795311 600.49639893]
[24.26539230 607.99255371]
[33.86069107 619.75238037]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 208]
[14 207]
[15 206]
[16 205]
[17 199]
[18 198]
[19 197]
[20 196]
[21 195]
[22 194]
[23 193]
[24 192]
[38 191]
[41 188]
[42 187]
[43 186]
[44 185]
[45 184]
[47 182]
[48 181]
[49 180]
[50 176]
[51 175]
[52 174]
[53 173]
[54 172]
[57 167]
[58 166]
[59 165]
[60 164]
[61 160]
[62 159]
[63 158]
[64 157]
[69 154]
[70 153]
[71 152]
[72 151]
[73 150]
[80 142]
[81 141]
[82 140]
[83 139]
[84 137]
[85 136]
[87 133]
[88 132]
[89 130]
[90 129]
[91 128]
[92 127]
[93 126]
[94 119]
[95 118]
[96 117]
[97 116]
[98 115]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
