%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAUCGCCCCACUACGGACAACCCCCGGUCACGGGAGGAUUAACCCCCCAUCCCCGAUCCGACCUCACCAUUUUCCGAGUCUUUUUAGGACGCUUCUUUxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[123.09300995 734.64270020]
[118.09079742 720.31292725]
[118.60678864 705.14392090]
[124.57120514 691.18719482]
[135.17739868 680.33026123]
[148.99099731 674.04144287]
[148.09817505 659.06805420]
[147.20535278 644.09466553]
[146.31254578 629.12121582]
[132.28082275 626.19586182]
[119.47557831 619.72894287]
[108.77441406 610.15667725]
[100.91255951 598.12823486]
[96.43232727 584.46191406]
[95.64576721 570.08935547]
[98.61287689 555.99200439]
[105.13713074 543.13415527]
[114.77843475 532.39709473]
[126.88285065 524.51849365]
[140.62690735 520.04174805]
[139.95712280 505.05673218]
[128.82620239 495.22625732]
[127.93347931 480.03884888]
[138.32003784 468.43035889]
[137.65025330 453.44531250]
[136.42327881 438.49557495]
[134.64082336 423.60186768]
[132.85835266 408.70812988]
[118.04010773 406.61785889]
[104.25732422 400.75854492]
[92.45185852 391.52407837]
[83.43216705 379.53918457]
[77.81787872 365.61724854]
[75.99728394 350.70501709]
[78.10042572 335.81829834]
[83.98991394 321.97271729]
[93.26979065 310.11437988]
[105.31221008 301.05538940]
[119.29989624 295.41802979]
[117.51743317 280.52429199]
[115.73496246 265.63058472]
[113.95249939 250.73687744]
[102.12124634 241.76152039]
[100.10140228 226.68255615]
[109.59580231 214.33370972]
[107.81333923 199.43998718]
[106.03086853 184.54627991]
[103.91624451 169.69607544]
[101.47052002 154.89680481]
[99.02479553 140.09753418]
[96.57906342 125.29826355]
[94.13333893 110.49899292]
[91.46754456 95.73777771]
[88.47277069 81.03977203]
[85.36865997 66.36447144]
[82.26454926 51.68916702]
[79.16043854 37.01386261]
[76.05632782 22.33856201]
[72.95221710 7.66325951]
[69.46198273 3.78185105]
[67.95980072 -0.61095709]
[68.30757141 -4.67225075]
[70.05263519 -7.73608589]
[67.60691071 -22.53535652]
[65.05107880 -37.31600952]
[62.38528442 -52.07722855]
[59.71948624 -66.83844757]
[57.05369186 -81.59966278]
[47.63346863 -69.92664337]
[32.73356628 -68.19663239]
[20.88932800 -77.40065002]
[18.88567162 -92.26622772]
[27.87038040 -104.27767944]
[42.69660568 -106.55430603]
[54.87070847 -97.79275513]
[53.53247452 -112.73293304]
[49.64992905 -121.00116730]
[52.28723145 -127.90525818]
[51.17158508 -142.86370850]
[37.37070084 -145.11248779]
[24.42821121 -150.38449097]
[12.99693680 -158.40998840]
[3.65263009 -168.78050232]
[-3.13502765 -180.96952820]
[-7.02603388 -194.35929871]
[-7.82709312 -208.27207947]
[-5.50121832 -222.00447083]
[-0.16942134 -234.86300659]
[7.89557695 -246.19911194]
[18.28329468 -255.44186401]
[30.46637917 -262.12673950]
[43.82738113 -265.91894531]
[43.15759659 -280.90396118]
[42.48780823 -295.88900757]
[41.81802368 -310.87405396]
[27.28528595 -315.12588501]
[14.92198086 -323.86816406]
[6.06919146 -336.15258789]
[1.68720138 -350.64660645]
[2.25133562 -365.77804565]
[7.70040131 -379.90554810]
[17.44332504 -391.49667358]
[30.42326546 -399.29409790]
[45.23225784 -402.45202637]
[60.26393509 -400.62789917]
[73.88777161 -394.01959229]
[84.62594604 -383.34390259]
[91.31368256 -369.75888062]
[93.22552490 -354.73809814]
[90.15410614 -339.91091919]
[82.43257904 -326.88568115]
[70.89852142 -317.07525635]
[56.80306244 -311.54382324]
[57.47284698 -296.55880737]
[58.14263535 -281.57376099]
[58.81241989 -266.58871460]
[74.54555511 -263.31838989]
[88.91268158 -256.09640503]
[100.93933105 -245.40637207]
[109.80818939 -231.96742249]
[114.91462708 -216.68566895]
[115.90793610 -200.59323120]
[112.71538544 -184.77844238]
[105.54753876 -170.31234741]
[94.88436890 -158.17608643]
[81.44310760 -149.19433594]
[66.13003540 -143.97935486]
[67.24568939 -129.02090454]
[68.47266388 -114.07117462]
[69.81089783 -99.13098907]
[71.81491089 -84.26545715]
[74.48070526 -69.50424194]
[77.14649963 -54.74302292]
[79.81229401 -39.98180771]
[84.09449005 -33.95813370]
[82.40618134 -24.98108482]
[84.85190582 -10.18181324]
[87.62751770 4.55914927]
[90.73162842 19.23445129]
[93.83573914 33.90975571]
[96.93984985 48.58505630]
[100.04396057 63.26036072]
[103.14807129 77.93566132]
[107.60771179 83.82916260]
[106.18743134 92.85250092]
[109.76513672 96.68838501]
[110.93899536 102.25573730]
[108.93260956 108.05326843]
[111.37833405 122.85253906]
[113.82406616 137.65180969]
[116.26979065 152.45108032]
[118.71551514 167.25035095]
[122.02896118 171.28373718]
[123.33348846 175.73924255]
[122.80471802 179.78094482]
[120.92459106 182.76380920]
[122.70705414 197.65753174]
[124.48951721 212.55123901]
[136.62983704 222.31086731]
[138.22534180 237.44061279]
[128.84622192 248.95440674]
[130.62867737 263.84811401]
[132.41114807 278.74185181]
[134.19361877 293.63555908]
[149.11656189 295.81292725]
[162.95660400 301.77432251]
[174.77270508 311.10791016]
[183.76312256 323.17269897]
[189.31982422 337.14270020]
[191.06959534 352.06338501]
[188.89913940 366.91699219]
[182.96234131 380.69186401]
[173.66941833 392.45138550]
[161.65855408 401.39764404]
[147.75205994 406.92568970]
[149.53453064 421.81939697]
[151.31700134 436.71310425]
[162.49877930 426.71472168]
[177.31233215 429.07235718]
[184.83766174 442.04809570]
[179.52738953 456.07666016]
[165.29602051 460.81674194]
[152.63529968 452.77551270]
[153.30508423 467.76055908]
[164.68588257 478.39611816]
[165.15167236 493.60263062]
[154.94216919 504.38693237]
[155.61195374 519.37194824]
[170.89863586 523.06744385]
[184.51431274 530.90936279]
[195.36192322 542.25646973]
[202.57008362 556.18530273]
[205.56309509 571.56573486]
[204.10693359 587.15222168]
[198.32749939 601.68511963]
[188.69979858 613.99200439]
[176.00891113 623.08264160]
[161.28594971 628.22845459]
[162.17875671 643.20184326]
[163.07157898 658.17523193]
[163.96440125 673.14862061]
[178.42741394 677.75140381]
[190.24859619 687.27105713]
[197.82925415 700.42016602]
[200.14413452 715.42034912]
[196.88018799 730.24298096]
[188.47882080 742.88348389]
[176.07626343 751.63226318]
[161.34985352 755.30615234]
[146.29122925 753.40826416]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 201]
[7 200]
[8 199]
[9 198]
[20 188]
[21 187]
[24 184]
[25 183]
[26 177]
[27 176]
[28 175]
[39 164]
[40 163]
[41 162]
[42 161]
[45 158]
[46 157]
[47 156]
[48 152]
[49 151]
[50 150]
[51 149]
[52 148]
[53 145]
[54 143]
[55 142]
[56 141]
[57 140]
[58 139]
[59 138]
[63 137]
[64 136]
[65 134]
[66 133]
[67 132]
[68 131]
[75 130]
[76 129]
[78 128]
[79 127]
[92 116]
[93 115]
[94 114]
[95 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
