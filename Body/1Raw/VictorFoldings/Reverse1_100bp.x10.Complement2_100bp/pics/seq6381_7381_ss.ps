%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxCACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAA\
) } def
/len { sequence length } bind def

/coor [
[147.49633789 500.27975464]
[142.68241882 486.06240845]
[139.16233826 471.47079468]
[136.96440125 456.62237549]
[136.10633850 441.63671875]
[136.59504700 426.63449097]
[138.42660522 411.73645020]
[141.58622742 397.06256104]
[146.04852295 382.73095703]
[151.77752686 368.85708618]
[158.72712708 355.55261230]
[166.84136963 342.92465210]
[176.05491638 331.07489014]
[186.29357910 320.09872437]
[197.47492981 310.08456421]
[209.50894165 301.11300659]
[201.65718079 288.33215332]
[193.80543518 275.55133057]
[185.95367432 262.77047729]
[178.10192871 249.98963928]
[163.27528381 251.61335754]
[149.15591431 246.61810303]
[138.56214905 235.94415283]
[133.63325500 221.67088318]
[135.39744568 206.61184692]
[143.55801392 193.76013184]
[135.70625305 180.97929382]
[127.85449982 168.19845581]
[120.00274658 155.41760254]
[115.47298431 169.71730042]
[102.22262573 176.74780273]
[87.84206390 172.48170471]
[80.56915283 159.36283875]
[84.57013702 144.90628052]
[97.55307007 137.39340210]
[112.07998657 141.12734985]
[105.39978790 127.69697571]
[98.71959686 114.26660156]
[87.17493439 106.37911224]
[87.85002899 92.41358948]
[81.16983032 78.98321533]
[74.48963928 65.55284119]
[67.80944824 52.12246323]
[61.12924957 38.69208908]
[55.83974457 34.72564316]
[53.67270660 29.47198296]
[54.45681381 24.76090813]
[48.17945480 11.13759232]
[41.90209198 -2.48572421]
[35.62473297 -16.10904121]
[29.42782021 -2.44894242]
[15.43589973 2.95718217]
[1.66417992 -2.98754025]
[-3.99827385 -16.87770271]
[1.69224942 -30.75638962]
[15.47595978 -36.67325974]
[29.45623207 -31.23951149]
[24.41931534 -45.36854172]
[19.38240051 -59.49757004]
[14.34548378 -73.62660217]
[9.30856705 -87.75563049]
[4.27165079 -101.88465881]
[-10.28890610 -98.23148346]
[-25.13407516 -96.00067902]
[-40.12524414 -95.21306610]
[-55.12244415 -95.87600708]
[-69.98564911 -97.98331451]
[-84.57607269 -101.51530457]
[-98.75749969 -106.43899536]
[-112.39750671 -112.70842743]
[-125.36873627 -120.26505280]
[-137.55007935 -129.03833008]
[-148.82780457 -138.94631958]
[-159.09661865 -149.89653015]
[-168.26062012 -161.78671265]
[-176.23426819 -174.50585938]
[-182.94309998 -187.93519592]
[-188.32446289 -201.94934082]
[-192.32814026 -216.41744995]
[-194.91673279 -231.20443726]
[-196.06607056 -246.17221069]
[-195.76542664 -261.18106079]
[-194.01760864 -276.09078979]
[-190.83894348 -290.76226807]
[-186.25909424 -305.05841064]
[-180.32083130 -318.84582520]
[-173.07958984 -331.99572754]
[-164.60299683 -344.38537598]
[-154.97018433 -355.89901733]
[-144.27110291 -366.42922974]
[-132.60565186 -375.87765503]
[-120.08274078 -384.15606689]
[-106.81930542 -391.18719482]
[-92.93917847 -396.90536499]
[-78.57195282 -401.25720215]
[-63.85178757 -404.20208740]
[-48.91611862 -405.71249390]
[-33.90440369 -405.77432251]
[-18.95679665 -404.38699341]
[-4.21287203 -401.56350708]
[10.18971062 -397.33016968]
[24.11647415 -391.72653198]
[37.43738556 -384.80490112]
[50.02806854 -376.62994385]
[61.77096176 -367.27792358]
[72.55642700 -356.83621216]
[82.28376007 -345.40231323]
[90.86212921 -333.08291626]
[98.21144867 -319.99310303]
[104.26309204 -306.25509644]
[108.96055603 -291.99713135]
[112.25998688 -277.35235596]
[114.13056946 -262.45751953]
[114.55484009 -247.45167542]
[113.52883911 -232.47492981]
[111.06214905 -217.66712952]
[107.17780304 -203.16653442]
[101.91205597 -189.10853577]
[95.31408691 -175.62437439]
[87.44549561 -162.83998108]
[78.37975311 -150.87471008]
[68.20149994 -139.84027100]
[57.00577927 -129.83970642]
[44.89711761 -120.96638489]
[31.98857689 -113.30316162]
[18.40068054 -106.92157745]
[23.43759727 -92.79254913]
[28.47451210 -78.66351318]
[33.51142883 -64.53448486]
[38.54834366 -50.40545654]
[43.58526230 -36.27642822]
[49.24804688 -22.38640022]
[55.52540970 -8.76308441]
[61.80276871 4.86023140]
[68.08013153 18.48354721]
[74.55962372 32.01189423]
[81.23982239 45.44226837]
[87.92001343 58.87264633]
[94.60021210 72.30302429]
[101.28040314 85.73339844]
[112.82506561 93.62088776]
[112.14997101 107.58641052]
[118.83016968 121.01678467]
[125.51036072 134.44715881]
[132.78358459 147.56585693]
[140.63534546 160.34669495]
[148.48710632 173.12753296]
[156.33885193 185.90838623]
[171.49139404 184.43797302]
[185.72174072 189.67095947]
[196.22589111 200.51913452]
[200.95887756 214.79357910]
[199.03279114 229.64617920]
[190.88276672 242.13787842]
[198.73451233 254.91871643]
[206.58627319 267.69955444]
[214.43803406 280.48040771]
[222.28977966 293.26126099]
[235.73194885 286.58181763]
[249.71873474 281.13424683]
[264.13754272 276.96240234]
[278.87225342 274.09982300]
[293.80426025 272.56961060]
[308.81332397 272.38406372]
[323.77856445 273.54467773]
[338.57955933 276.04208374]
[353.09707642 279.85623169]
[367.21426392 284.95635986]
[380.81744385 291.30142212]
[393.79708862 298.84036255]
[406.04867554 307.51242065]
[417.47357178 317.24780273]
[427.97979736 327.96813965]
[437.48278809 339.58706665]
[445.90594482 352.01110840]
[453.18154907 365.14016724]
[459.25094604 378.86853027]
[464.06527710 393.08572388]
[467.58581543 407.67724609]
[469.78421021 422.52557373]
[470.64273071 437.51119995]
[470.15447998 452.51345825]
[468.32336426 467.41156006]
[465.16418457 482.08554077]
[460.70233154 496.41726685]
[454.97375488 510.29132080]
[448.02456665 523.59600830]
[439.91070557 536.22424316]
[430.69754028 548.07427979]
[420.45919800 559.05072021]
[409.27813721 569.06524658]
[397.24441528 578.03717041]
[384.45486450 585.89428711]
[371.01251221 592.57330322]
[357.02557373 598.02044678]
[342.60662842 602.19183350]
[327.87182617 605.05395508]
[312.93978882 606.58374023]
[297.93072510 606.76879883]
[282.96548462 605.60772705]
[268.16458130 603.10986328]
[253.64717102 599.29528809]
[239.53013611 594.19470215]
[225.92715454 587.84924316]
[212.94775391 580.30993652]
[200.69642639 571.63751221]
[189.27180481 561.90173340]
[178.76591492 551.18109131]
[169.26330566 539.56188965]
[160.84049988 527.13757324]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 158]
[17 157]
[18 156]
[19 155]
[20 154]
[26 148]
[27 147]
[28 146]
[29 145]
[36 144]
[37 143]
[38 142]
[40 140]
[41 139]
[42 138]
[43 137]
[44 136]
[47 135]
[48 134]
[49 133]
[50 132]
[57 131]
[58 130]
[59 129]
[60 128]
[61 127]
[62 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
