%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCCUUCAGUCCCAAUCCCACCAAUAUCAUCACACGUACCAAUAAUGAAAAUAAACCUCAACGUGGUUUUAAAAACCCCGGAUUCUGGUUACCUAUCGAxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[57.00580978 758.44848633]
[42.32968903 755.29138184]
[28.02678490 750.73260498]
[14.23064518 744.81469727]
[1.07008255 737.59283447]
[-11.33202267 729.13452148]
[-22.85987282 719.51867676]
[-33.40583420 708.83514404]
[-42.87143707 697.18359375]
[-51.16830063 684.67291260]
[-58.21895981 671.41986084]
[-63.95758438 657.54815674]
[-68.33058929 643.18737793]
[-71.29714966 628.47155762]
[-72.82955933 613.53814697]
[-72.91351318 598.52655029]
[-71.54823303 583.57690430]
[-68.74645996 568.82879639]
[-64.53434753 554.42004395]
[-58.95124054 540.48498535]
[-52.04925919 527.15393066]
[-43.89284515 514.55120850]
[-34.55815887 502.79452515]
[-24.13235474 491.99368286]
[-12.71277905 482.24951172]
[-0.40605697 473.65301514]
[12.67290497 466.28442383]
[26.40199089 460.21252441]
[40.65300751 455.49404907]
[55.29290009 452.17306519]
[70.18497467 450.28051758]
[69.73836517 435.28717041]
[69.29176331 420.29382324]
[68.84515381 405.30047607]
[68.39855194 390.30712891]
[67.95194244 375.31378174]
[65.65013123 372.64282227]
[64.52766418 368.72424316]
[65.15682220 364.12454224]
[67.83528900 359.64425659]
[68.05861664 344.64590454]
[68.28194427 329.64758301]
[68.50527191 314.64923096]
[56.08794403 323.06411743]
[41.72217178 318.74847412]
[35.99786758 304.88369751]
[43.13477707 291.69033813]
[57.87183762 288.89407349]
[69.34474945 298.55468750]
[59.62696457 287.32525635]
[60.77129745 272.15472412]
[72.61565399 262.03796387]
[73.95388794 247.09777832]
[66.44078064 237.61727905]
[67.43341064 225.15940857]
[76.94334412 216.44596863]
[78.50386810 201.52735901]
[80.06439209 186.60876465]
[81.62491608 171.69015503]
[83.18543243 156.77154541]
[84.74595642 141.85295105]
[86.30648041 126.93434143]
[76.60567474 138.37524414]
[62.73403931 144.08293152]
[47.79053497 142.78230286]
[35.11357498 134.76390076]
[27.53523064 121.81906891]
[26.74851990 106.83971405]
[32.92919540 93.17225647]
[44.69647980 83.87005615]
[59.42153168 81.01123047]
[73.81473541 85.23446655]
[84.66061401 95.59626770]
[89.53617096 109.78180695]
[86.18740082 96.20692444]
[95.99930573 86.24610138]
[99.97139740 71.78157043]
[103.94349670 57.31705093]
[107.91558838 42.85252762]
[111.88768768 28.38800240]
[115.85978699 13.92347813]
[119.18204498 -0.70398170]
[121.84783936 -15.46519852]
[124.51363373 -30.22641563]
[127.17942810 -44.98763275]
[129.84523010 -59.74885178]
[128.29075623 -68.75004578]
[132.66215515 -74.70928955]
[135.54743958 -89.42918396]
[137.66206360 -104.27938080]
[138.66632080 -119.24571991]
[139.33610535 -134.23075867]
[140.00588989 -149.21580505]
[140.67567444 -164.20083618]
[141.34545898 -179.18588257]
[141.56878662 -194.18421936]
[141.34545898 -209.18255615]
[141.12213135 -224.18089294]
[127.10260773 -230.12840271]
[116.71895599 -241.26840210]
[111.77021027 -255.67082214]
[113.11376190 -270.84036255]
[120.51683807 -284.14880371]
[132.69680786 -293.29034424]
[147.54342651 -296.68121338]
[162.48440552 -293.73388672]
[174.93116760 -284.95904541]
[182.72720337 -271.87692261]
[184.52180481 -256.75411987]
[180.00405884 -242.21073914]
[169.95669556 -230.76651001]
[156.12046814 -224.40422058]
[156.34379578 -209.40588379]
[156.56712341 -194.40754700]
[158.48234558 -192.36058044]
[159.70213318 -189.43162537]
[159.88648987 -185.88177490]
[158.79612732 -182.09025574]
[156.33050537 -178.51609802]
[155.66072083 -163.53105164]
[154.99092102 -148.54602051]
[154.32113647 -133.56097412]
[153.65135193 -118.57593536]
[155.74813843 -115.74118042]
[156.57604980 -111.74999237]
[155.60652161 -107.20980072]
[152.60224915 -102.94114685]
[164.05635071 -112.62636566]
[179.05523682 -112.80888367]
[190.74162292 -103.40525055]
[193.77264404 -88.71467590]
[186.76257324 -75.45349884]
[172.91629028 -69.68455505]
[158.56416321 -74.04531860]
[150.26731873 -86.54390717]
[147.38204956 -71.82402039]
[144.60644531 -57.08305359]
[141.94064331 -42.32183838]
[139.27485657 -27.56062126]
[136.60905457 -12.79940319]
[133.94326782 1.96181381]
[146.85142517 -5.67881966]
[161.41525269 -2.08784533]
[169.29190063 10.67766380]
[165.96929932 25.30504417]
[153.35075378 33.41506958]
[138.66476440 30.36194611]
[130.32431030 17.89557457]
[126.35221100 32.36009979]
[122.38011932 46.82462311]
[118.40802002 61.28914642]
[114.43592072 75.75366974]
[110.46382904 90.21819305]
[113.81259918 103.79307556]
[104.00069427 113.75389862]
[101.22508240 128.49485779]
[99.66456604 143.41346741]
[98.10404205 158.33207703]
[96.54351807 173.25068665]
[94.98299408 188.16928101]
[93.42247009 203.08789062]
[91.86194611 218.00650024]
[99.74829865 234.64642334]
[88.89407349 248.43600464]
[87.55583954 263.37619019]
[97.41370392 275.43688965]
[95.84371185 290.56930542]
[84.28493500 299.89294434]
[83.50360870 314.87255859]
[83.28028107 329.87091064]
[83.05695343 344.86923218]
[82.83362579 359.86758423]
[82.94529724 374.86715698]
[83.39189911 389.86050415]
[83.83850861 404.85385132]
[84.28511047 419.84722900]
[84.73171997 434.84057617]
[85.17832184 449.83392334]
[100.15663910 450.83670044]
[114.96824646 453.28042603]
[129.47485352 457.14230347]
[143.54100037 462.38626099]
[157.03535461 468.96331787]
[169.83193970 476.81207275]
[181.81124878 485.85925293]
[192.86143494 496.02041626]
[202.87934875 507.20062256]
[211.77142334 519.29553223]
[219.45465088 532.19213867]
[225.85728455 545.77014160]
[230.91955566 559.90270996]
[234.59419250 574.45782471]
[236.84686279 589.29974365]
[237.65657043 604.28973389]
[237.01573181 619.28784180]
[234.93032837 634.15417480]
[231.41984558 648.74975586]
[226.51705933 662.93841553]
[220.26773071 676.58764648]
[212.73022461 689.57000732]
[203.97491455 701.76428223]
[194.08354187 713.05657959]
[183.14848328 723.34155273]
[171.27180481 732.52307129]
[158.56443787 740.51544189]
[145.14498901 747.24401855]
[131.13879395 752.64605713]
[116.67660522 756.67102051]
[101.89345551 759.28143311]
[86.92738342 760.45281982]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 178]
[32 177]
[33 176]
[34 175]
[35 174]
[36 173]
[40 172]
[41 171]
[42 170]
[43 169]
[49 168]
[52 165]
[53 164]
[56 162]
[57 161]
[58 160]
[59 159]
[60 158]
[61 157]
[62 156]
[74 155]
[76 153]
[77 152]
[78 151]
[79 150]
[80 149]
[81 148]
[82 141]
[83 140]
[84 139]
[85 138]
[86 137]
[88 136]
[89 135]
[90 127]
[91 123]
[92 122]
[93 121]
[94 120]
[95 119]
[96 114]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
