%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxUUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUG\
) } def
/len { sequence length } bind def

/coor [
[127.73964691 440.32070923]
[120.76516724 426.98831177]
[116.44016266 412.57681274]
[114.92097473 397.60723877]
[116.26251984 382.62069702]
[120.41630554 368.15893555]
[127.23217010 354.74472046]
[136.46372986 342.86303711]
[147.77726746 332.94332886]
[160.76379395 325.34423828]
[174.95388794 320.34042358]
[172.72875977 305.50637817]
[170.50364685 290.67233276]
[168.27853394 275.83828735]
[166.05342102 261.00424194]
[161.75929260 246.63204956]
[155.48193359 233.00872803]
[149.20457458 219.38540649]
[142.92721558 205.76210022]
[136.64984131 192.13877869]
[130.37248230 178.51545715]
[118.01906586 170.19427490]
[119.27099609 154.42268372]
[112.69097137 140.94294739]
[105.81156158 127.61351776]
[98.93214417 114.28408813]
[87.27133179 106.56935883]
[87.73842621 92.59532928]
[80.85900879 79.26589966]
[73.97959900 65.93647003]
[67.10018921 52.60704041]
[53.89546204 43.89234924]
[54.93397141 29.03399467]
[47.36959457 16.08099556]
[39.14078522 3.53959513]
[30.91197777 -9.00180531]
[22.68316841 -21.54320526]
[14.45436192 -34.08460617]
[15.17204571 -19.10178375]
[10.17381191 -4.95902443]
[0.20111984 6.24568033]
[-13.26664162 12.85017776]
[-28.23161125 13.87473106]
[-42.47382355 9.16735363]
[-53.88053131 -0.57364386]
[-60.75961685 -13.90324211]
[-62.09060669 -28.84407425]
[-57.67606354 -43.17975616]
[-48.17084885 -54.78367615]
[-34.98501205 -61.93445969]
[-20.07459259 -63.57133102]
[-5.65145969 -59.45147324]
[6.14355135 -50.18748474]
[0.68819433 -64.16028595]
[-4.76716280 -78.13307953]
[-10.22251987 -92.10588074]
[-15.67787647 -106.07867432]
[-21.85364532 -119.74834442]
[-28.73305702 -133.07777405]
[-35.61246872 -146.40721130]
[-42.49188232 -159.73663330]
[-49.37129593 -173.06607056]
[-56.25070953 -186.39549255]
[-63.13011932 -199.72492981]
[-77.20861053 -194.49487305]
[-91.81488037 -190.99998474]
[-106.73592377 -189.29119873]
[-121.75414276 -189.39346313]
[-136.65052795 -191.30525208]
[-151.20785522 -194.99871826]
[-165.21382141 -200.41998291]
[-178.46420288 -207.48999023]
[-190.76573181 -216.10563660]
[-201.93905640 -226.14129639]
[-211.82121277 -237.45059204]
[-220.26809692 -249.86863708]
[-227.15652466 -263.21429443]
[-232.38603210 -277.29299927]
[-235.88038635 -291.89938354]
[-237.58860779 -306.82049561]
[-237.48579407 -321.83871460]
[-235.57344055 -336.73501587]
[-231.87942505 -351.29220581]
[-226.45764160 -365.29797363]
[-219.38714600 -378.54809570]
[-210.77102661 -390.84930420]
[-200.73495483 -402.02224731]
[-189.42527771 -411.90399170]
[-177.00692749 -420.35040283]
[-163.66101074 -427.23834229]
[-149.58212280 -432.46731567]
[-134.97558594 -435.96112061]
[-120.05442047 -437.66879272]
[-105.03620911 -437.56539917]
[-90.13996887 -435.65249634]
[-75.58291626 -431.95794678]
[-61.57735443 -426.53564453]
[-48.32751083 -419.46463013]
[-36.02661514 -410.84805298]
[-24.85404587 -400.81158447]
[-14.97273731 -389.50152588]
[-6.52678442 -377.08285522]
[0.36064434 -363.73669434]
[5.58911085 -349.65759277]
[9.08236790 -335.05093384]
[10.78947449 -320.12969971]
[10.68553543 -305.11151123]
[8.77206612 -290.21533203]
[5.07697105 -275.65841675]
[-0.34586450 -261.65304565]
[-7.41735983 -248.40347290]
[-16.03439140 -236.10290527]
[-26.07129669 -224.93070984]
[-37.38171005 -215.04981995]
[-49.80068970 -206.60433960]
[-42.92127991 -193.27490234]
[-36.04186630 -179.94548035]
[-29.16245461 -166.61604309]
[-22.28304100 -153.28662109]
[-15.40362835 -139.95718384]
[-8.52421570 -126.62776184]
[-4.04706287 -140.94401550]
[8.51668167 -149.13867188]
[23.42304420 -147.46522522]
[33.85703278 -136.68878174]
[35.04837418 -121.73616791]
[26.45239830 -109.44351959]
[11.99907112 -105.43087006]
[-1.70507896 -111.53403473]
[3.75027800 -97.56123352]
[9.20563507 -83.58843994]
[14.66099262 -69.61563873]
[20.11635017 -55.64284134]
[26.99576187 -42.31341553]
[35.22457123 -29.77201271]
[43.45337677 -17.23061371]
[51.68218613 -4.68921280]
[59.91099167 7.85218763]
[62.87446213 -6.85216045]
[74.51750183 -16.30941200]
[89.51707458 -16.19584084]
[101.01557159 -6.56336784]
[103.75604248 8.18416882]
[96.48557281 21.30439377]
[82.52812958 26.79891777]
[68.26339722 22.15458107]
[80.97606659 29.91586113]
[80.42961884 45.72762680]
[87.30902863 59.05705643]
[94.18843842 72.38648224]
[101.06785583 85.71591187]
[112.72866821 93.43064117]
[112.26157379 107.40467072]
[119.14099121 120.73410034]
[126.02040100 134.06353760]
[130.41386414 136.88214111]
[133.02566528 140.72035217]
[133.76576233 144.72874451]
[132.89431763 148.14530945]
[145.69673157 157.44093323]
[143.99580383 172.23809814]
[150.27316284 185.86141968]
[156.55052185 199.48472595]
[162.82788086 213.10804749]
[169.10523987 226.73136902]
[175.38261414 240.35467529]
[176.08621216 225.37118530]
[181.11848450 211.24050903]
[190.04409790 199.18507385]
[202.09089661 190.24781799]
[216.21670532 185.20188904]
[231.19950867 184.48381042]
[245.74314880 188.15571594]
[258.58944702 195.89993286]
[268.62704468 207.04650879]
[274.98764038 220.63116455]
[277.12094116 235.47869873]
[274.84240723 250.30462646]
[268.34915161 263.82638550]
[258.20291138 274.87417603]
[245.28143311 282.49227905]
[230.70256042 286.02163696]
[215.72750854 285.15695190]
[201.65176392 279.97299194]
[189.69302368 270.91824341]
[180.88745117 258.77914429]
[183.11257935 273.61318970]
[185.33769226 288.44723511]
[187.56280518 303.28128052]
[189.78793335 318.11532593]
[204.82160950 318.73553467]
[219.46618652 322.18994141]
[233.19224548 328.35369873]
[245.50361633 337.00393677]
[255.95524597 347.82797241]
[264.16928101 360.43457031]
[269.84884644 374.36795044]
[272.78860474 389.12445068]
[272.88226318 404.17062378]
[270.12646484 418.96258545]
[264.62081909 432.96560669]
[256.56433105 445.67346191]
[246.24829102 456.62680054]
[234.04557800 465.42965698]
[220.39730835 471.76379395]
[205.79687500 475.40026855]
[190.77207947 476.20761108]
[175.86604309 474.15661621]
[161.61761475 469.32147217]
[148.54185486 461.87692261]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 190]
[12 189]
[13 188]
[14 187]
[15 186]
[16 166]
[17 165]
[18 164]
[19 163]
[20 162]
[21 161]
[23 159]
[24 155]
[25 154]
[26 153]
[28 151]
[29 150]
[30 149]
[31 148]
[33 146]
[34 138]
[35 137]
[36 136]
[37 135]
[38 134]
[53 133]
[54 132]
[55 131]
[56 130]
[57 129]
[58 121]
[59 120]
[60 119]
[61 118]
[62 117]
[63 116]
[64 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
