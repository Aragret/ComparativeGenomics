%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxCGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAA\
) } def
/len { sequence length } bind def

/coor [
[135.65776062 541.74572754]
[134.81164551 526.71673584]
[137.00851440 511.82519531]
[142.15837097 497.68081665]
[150.05036926 484.86279297]
[160.36129761 473.89605713]
[172.66896057 465.22964478]
[186.46936035 459.21850586]
[183.36524963 444.54318237]
[173.16163635 433.69259644]
[177.87564087 418.58996582]
[174.77153015 403.91467285]
[171.66741943 389.23937988]
[157.19281006 380.67639160]
[153.31350708 363.96514893]
[162.90580750 349.33615112]
[159.58354187 334.70870972]
[156.26129150 320.08123779]
[152.93902588 305.45379639]
[149.61676025 290.82632446]
[146.07710266 276.24993896]
[135.39916992 265.86578369]
[139.43409729 250.56773376]
[128.75616455 240.18356323]
[132.79109192 224.88552856]
[129.03479004 210.36346436]
[125.27848816 195.84141541]
[121.52218628 181.31935120]
[117.01455688 167.01266479]
[105.31424713 157.79571533]
[107.73575592 142.16091919]
[102.48903656 128.10845947]
[97.24231720 114.05598450]
[86.58087921 105.01024628]
[88.70520782 91.19073486]
[83.45848846 77.13826752]
[78.21177673 63.08579636]
[72.96505737 49.03332520]
[67.03163147 42.08837891]
[67.74653625 34.73237991]
[62.70962143 20.60335159]
[57.67270279 6.47432184]
[52.63578796 -7.65470743]
[47.59887314 -21.78373718]
[42.56195450 -35.91276550]
[27.53573608 -38.76932907]
[16.03277969 -48.69801331]
[11.07691765 -62.95655060]
[13.90452671 -77.68273926]
[23.65786934 -88.94052887]
[18.62095261 -103.06955719]
[13.58403778 -117.19858551]
[8.54712105 -131.32762146]
[-3.37493587 -141.72834778]
[-0.36064649 -156.31475830]
[-5.39756250 -170.44378662]
[-7.54146242 -155.59777832]
[-14.11164474 -142.11325073]
[-24.48188400 -131.27543640]
[-37.66374969 -124.11734009]
[-52.40083694 -121.32122040]
[-67.28849792 -123.15358734]
[-80.90773773 -129.43980408]
[-91.96044922 -139.58068848]
[-99.39316559 -152.60968018]
[-102.49744415 -167.28494263]
[-100.97740936 -182.20773315]
[-94.97794342 -195.95568848]
[-85.07086945 -207.21844482]
[-72.20046234 -214.92251587]
[-57.59346390 -218.33360291]
[-42.64210510 -217.12657166]
[-28.77146149 -211.41647339]
[-17.30359459 -201.74755859]
[-9.33109665 -189.04035950]
[-10.44674492 -203.99880981]
[-11.56239414 -218.95726013]
[-22.28044319 -233.93074036]
[-14.04968834 -249.42982483]
[-15.38792229 -264.36999512]
[-16.72615623 -279.31018066]
[-18.17557526 -294.23999023]
[-19.73609924 -309.15859985]
[-28.86711311 -322.07894897]
[-22.49587822 -335.54208374]
[-24.05640030 -350.46069336]
[-39.04740143 -351.75158691]
[-53.52312088 -355.85647583]
[-66.96026611 -362.62698364]
[-78.87310028 -371.81832886]
[-88.83097839 -383.09826660]
[-96.47392273 -396.05905151]
[-101.52565765 -410.23214722]
[-103.80355835 -425.10519409]
[-103.22528076 -440.14056396]
[-99.81172943 -454.79470825]
[-93.68630981 -468.53790283]
[-85.07044220 -480.87335205]
[-74.27558899 -491.35513306]
[-61.69197083 -499.60430908]
[-47.77448654 -505.32272339]
[-33.02624130 -508.30361938]
[-17.98037529 -508.43927002]
[-3.18078566 -505.72473145]
[10.83753014 -500.25817871]
[23.56781960 -492.23718262]
[34.54989243 -481.95172119]
[43.38674927 -469.77362061]
[49.75894547 -456.14306641]
[53.43613434 -441.55285645]
[54.28538132 -426.53036499]
[52.27598953 -411.61865234]
[47.48059464 -397.35678101]
[40.07255554 -384.26031494]
[30.31965637 -372.80270386]
[18.57446671 -363.39807129]
[5.26156473 -356.38641357]
[-9.13779640 -352.02124023]
[-7.57727289 -337.10263062]
[1.44212210 -325.24935913]
[-4.81749392 -310.71911621]
[-3.25697088 -295.80050659]
[0.56534141 -289.47503662]
[-1.78597176 -280.64843750]
[-0.44773760 -265.70825195]
[0.89049655 -250.76805115]
[9.96887493 -242.77371216]
[11.20605183 -230.33773804]
[3.39605927 -220.07290649]
[4.51170826 -205.11445618]
[5.62735653 -190.15600586]
[8.73146725 -175.48069763]
[13.76838303 -161.35166931]
[25.33016586 -151.96154785]
[22.67615128 -136.36453247]
[27.71306610 -122.23550415]
[32.74998474 -108.10647583]
[37.78689957 -93.97744751]
[52.46231079 -91.42835999]
[63.96793747 -81.81188965]
[69.14955139 -67.63383484]
[66.52151489 -52.66753006]
[56.69098663 -40.94968414]
[61.72790146 -26.82065392]
[66.76481628 -12.69162369]
[71.80173492 1.43740571]
[76.83865356 15.56643486]
[81.87556458 29.69546509]
[87.01752472 43.78660583]
[92.26424408 57.83907700]
[97.51096344 71.89154816]
[102.75768280 85.94401550]
[113.41912079 94.98975372]
[111.29479218 108.80926514]
[116.54151154 122.86173248]
[121.78822327 136.91419983]
[133.86381531 147.13627625]
[131.06703186 161.76594543]
[137.21366882 148.08316040]
[150.66217041 141.43952942]
[165.26406860 144.87245178]
[174.34355164 156.81242371]
[173.74960327 171.80065918]
[163.75379944 182.98474121]
[148.92605591 185.25144958]
[136.04425049 177.56304932]
[139.80055237 192.08511353]
[143.55683899 206.60717773]
[147.31314087 221.12922668]
[158.25975037 232.55212402]
[153.95614624 246.81143188]
[164.90275574 258.23431396]
[160.59915161 272.49365234]
[164.95333862 277.46884155]
[165.98628235 283.05722046]
[164.24423218 287.50405884]
[167.56648254 302.13153076]
[170.88874817 316.75897217]
[174.21101379 331.38644409]
[177.53326416 346.01391602]
[189.68072510 351.83230591]
[196.16452026 363.41552734]
[194.81311035 376.42535400]
[186.34271240 386.13525391]
[189.44682312 400.81057739]
[192.55093384 415.48587036]
[202.97657776 427.38613892]
[198.04054260 441.43908691]
[201.14465332 456.11437988]
[216.19711304 456.02261353]
[230.95985413 458.96310425]
[244.82835388 464.81542969]
[257.23468018 473.33993530]
[267.67086792 484.18759155]
[275.70947266 496.91415405]
[281.02139282 510.99847412]
[283.38909912 525.86383057]
[282.71557617 540.90148926]
[279.02847290 555.49566650]
[272.47872925 569.04876709]
[263.33459473 581.00573730]
[251.97045898 590.87701416]
[238.85173035 598.25830078]
[224.51557922 602.84741211]
[209.54908752 604.45635986]
[194.56510925 603.01934814]
[180.17721558 598.59515381]
[166.97460938 591.36492920]
[155.49790955 581.62475586]
[146.21708679 569.77355957]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 189]
[9 188]
[11 186]
[12 185]
[13 184]
[16 180]
[17 179]
[18 178]
[19 177]
[20 176]
[21 173]
[23 171]
[25 169]
[26 168]
[27 167]
[28 166]
[29 158]
[31 156]
[32 155]
[33 154]
[35 152]
[36 151]
[37 150]
[38 149]
[40 148]
[41 147]
[42 146]
[43 145]
[44 144]
[45 143]
[50 138]
[51 137]
[52 136]
[53 135]
[55 133]
[56 132]
[75 131]
[76 130]
[77 129]
[79 126]
[80 125]
[81 124]
[82 122]
[83 121]
[85 119]
[86 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
