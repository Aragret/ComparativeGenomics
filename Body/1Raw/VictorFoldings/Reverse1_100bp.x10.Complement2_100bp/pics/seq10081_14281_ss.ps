%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCGGCGUGAGCAUUCCCCACCUAAAAAGAUACAUCGGCAACUCAACACCAUCAGUUUUACAUUAUUAAUAAUCAUCAUUCCGAUCCUCCCACAACUAAxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[67.25524139 624.05108643]
[59.78864670 611.02374268]
[53.80051804 597.25396729]
[49.36354446 582.90905762]
[46.53158951 568.16314697]
[45.33902740 553.19512939]
[45.80033493 538.18676758]
[47.90991592 523.32025146]
[51.64215851 508.77609253]
[56.95175934 494.73074341]
[63.77426147 481.35476685]
[72.02684784 468.81054688]
[81.60933685 457.25030518]
[92.40541077 446.81439209]
[104.28401184 437.62951660]
[117.10095215 429.80715942]
[130.70063782 423.44226074]
[125.87463379 409.23980713]
[121.04863739 395.03735352]
[116.22264099 380.83489990]
[111.39664459 366.63244629]
[106.57064056 352.42999268]
[101.74464417 338.22753906]
[99.37995148 353.03997803]
[92.60972595 366.42517090]
[82.07928467 377.10739136]
[68.79230499 384.06845093]
[54.01521683 386.64483643]
[39.15649033 384.59100342]
[25.63235474 378.10272217]
[14.73184872 367.79843140]
[7.49393749 354.66021729]
[4.60849285 339.94033813]
[6.35053682 325.04183960]
[12.55402946 311.38473511]
[22.62769318 300.27072144]
[35.61137009 292.75912476]
[50.26753998 289.56588745]
[65.19926453 290.99539185]
[78.98336029 296.91137695]
[90.30599976 306.74996948]
[98.08842468 319.57446289]
[97.19561005 304.60104370]
[93.65955353 298.11120605]
[96.40264893 289.39837646]
[95.73286438 274.41333008]
[95.06307983 259.42831421]
[94.39329529 244.44326782]
[93.72351074 229.45822144]
[93.05372620 214.47319031]
[92.38394165 199.48814392]
[91.71415710 184.50311279]
[89.73883820 182.51406860]
[88.43238831 179.62274170]
[88.14242554 176.07995605]
[89.11941528 172.25765991]
[91.47753143 168.61166382]
[91.70085907 153.61332703]
[91.92418671 138.61499023]
[84.37723541 125.77392578]
[92.31913757 112.09048462]
[85.67764282 99.78673553]
[92.68252563 87.68618774]
[92.90585327 72.68785095]
[93.12918091 57.68951416]
[93.35250854 42.69117737]
[93.57583618 27.69284058]
[93.79916382 12.69450283]
[94.02249146 -2.30383492]
[81.60516357 6.11102867]
[67.23938751 1.79540908]
[61.51508331 -12.06937885]
[68.65199280 -25.26272964]
[83.38905334 -28.05899620]
[94.86196136 -18.39837837]
[96.20019531 -33.33856201]
[97.53842926 -48.27874756]
[98.87666321 -63.21893311]
[92.40141296 -77.65436554]
[101.24333191 -89.64059448]
[102.58156586 -104.58078003]
[103.91979980 -119.52096558]
[101.56848145 -128.34757996]
[105.39079285 -134.67306519]
[106.95131683 -149.59167480]
[107.06298828 -164.59124756]
[105.72475433 -179.53143311]
[104.38652039 -194.47161865]
[103.04828644 -209.41180420]
[101.71005249 -224.35198975]
[100.26062775 -239.28179932]
[98.70011139 -254.20040894]
[83.86753082 -257.11349487]
[70.55335999 -264.27059937]
[59.94148254 -275.03533936]
[52.97549438 -288.45050049]
[50.27481461 -303.32321167]
[52.07958221 -318.33102417]
[58.22931671 -332.13943481]
[68.17718506 -343.52059937]
[81.03864288 -351.46255493]
[95.67004395 -355.25906372]
[110.77037811 -354.57257080]
[124.99693298 -349.46408081]
[137.08470154 -340.38790894]
[145.95883179 -328.15103149]
[150.83026123 -313.84155273]
[151.26580811 -298.73190308]
[147.22676086 -284.16558838]
[139.07225037 -271.43783569]
[127.52738190 -261.68041992]
[113.61871338 -255.76092529]
[115.17923737 -240.84233093]
[119.00154877 -234.51684570]
[116.65023804 -225.69023132]
[117.98847198 -210.75004578]
[119.32670593 -195.80986023]
[120.66493988 -180.86967468]
[122.00317383 -165.92948914]
[128.68397522 -179.35955811]
[140.19764709 -188.97389221]
[154.60392761 -193.15229797]
[169.47511292 -191.19064331]
[182.30513000 -183.41950989]
[190.93190002 -171.14846802]
[193.90168762 -156.44538879]
[190.71398926 -141.78800964]
[181.90602112 -129.64636230]
[168.96206665 -122.06652069]
[154.06341553 -120.32582092]
[139.72073364 -124.71760559]
[128.35104370 -134.50178528]
[121.86992645 -148.03114319]
[120.30940247 -133.11253357]
[118.85998535 -118.18273163]
[117.52175140 -103.24254608]
[116.18351746 -88.30236053]
[122.75448608 -74.93555450]
[113.81684875 -61.88069916]
[112.47861481 -46.94051361]
[111.14038086 -32.00032806]
[109.80214691 -17.06014442]
[109.02082825 -2.08050728]
[108.79750061 12.91783047]
[108.57417297 27.91616821]
[108.35084534 42.91450500]
[108.12751770 57.91284180]
[107.90419006 72.91117859]
[107.68086243 87.90951538]
[114.32235718 100.21326447]
[107.31747437 112.31381226]
[114.84845734 126.22765350]
[106.92252350 138.83831787]
[106.69919586 153.83665466]
[106.47586823 168.83499146]
[106.69919586 183.83332825]
[107.36898041 198.81835938]
[108.03876495 213.80340576]
[108.70854950 228.78843689]
[109.37833405 243.77348328]
[110.04811859 258.75851440]
[110.71790314 273.74356079]
[111.38768768 288.72860718]
[112.16901398 303.70822144]
[113.06182861 318.68164062]
[115.94709778 333.40151978]
[120.77310181 347.60397339]
[125.59909821 361.80645752]
[130.42509460 376.00891113]
[135.25109863 390.21136475]
[140.07708740 404.41381836]
[144.90309143 418.61627197]
[159.56513977 415.37780762]
[174.49444580 413.77200317]
[189.50981140 413.81829834]
[204.42893982 415.51617432]
[219.07073975 418.84500122]
[233.25746155 423.76434326]
[246.81689453 430.21453857]
[259.58444214 438.11724854]
[271.40512085 447.37655640]
[282.13543701 457.88006592]
[291.64514160 469.50024414]
[299.81875610 482.09606934]
[306.55712891 495.51464844]
[311.77838135 509.59304810]
[315.41921997 524.16040039]
[317.43536377 539.03985596]
[317.80239868 554.05078125]
[316.51586914 569.01098633]
[313.59133911 583.73889160]
[309.06436157 598.05566406]
[302.98986816 611.78747559]
[295.44158936 624.76776123]
[286.51116943 636.83880615]
[276.30700684 647.85418701]
[264.95297241 657.68011475]
[252.58692932 666.19738770]
[239.35893250 673.30255127]
[225.42958069 678.90936279]
[210.96797180 682.94982910]
[196.14965820 685.37481689]
[181.15449524 686.15490723]
[166.16453552 685.28063965]
[151.36174011 682.76263428]
[136.92579651 678.63146973]
[123.03193665 672.93725586]
[109.84883118 665.74914551]
[97.53651428 657.15435791]
[86.24443054 647.25726318]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 172]
[18 171]
[19 170]
[20 169]
[21 168]
[22 167]
[23 166]
[42 165]
[43 164]
[45 163]
[46 162]
[47 161]
[48 160]
[49 159]
[50 158]
[51 157]
[52 156]
[57 155]
[58 154]
[59 153]
[61 151]
[63 149]
[64 148]
[65 147]
[66 146]
[67 145]
[68 144]
[69 143]
[75 142]
[76 141]
[77 140]
[78 139]
[80 137]
[81 136]
[82 135]
[84 134]
[85 133]
[86 119]
[87 118]
[88 117]
[89 116]
[90 115]
[91 113]
[92 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
