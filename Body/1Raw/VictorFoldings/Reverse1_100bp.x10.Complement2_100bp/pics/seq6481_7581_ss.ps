%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxGAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAG\
) } def
/len { sequence length } bind def

/coor [
[96.07922363 453.54428101]
[86.93801117 465.46701050]
[76.25841522 476.03396606]
[64.23937988 485.04818726]
[51.10482025 492.34182739]
[37.09941864 497.77896118]
[22.48409271 501.25833130]
[7.53111410 502.71508789]
[-7.48095274 502.12213135]
[-22.27244186 499.49047852]
[-36.56779480 494.86914062]
[-50.10070038 488.34426880]
[-62.61904907 480.03735352]
[-73.88962555 470.10317993]
[-83.70247650 458.72680664]
[-91.87478638 446.12017822]
[-98.25431061 432.51815796]
[-102.72220612 418.17410278]
[-105.19524384 403.35525513]
[-105.62733459 388.33770752]
[-104.01044464 373.40118408]
[-100.37469482 358.82397461]
[-94.78780365 344.87765503]
[-87.35386658 331.82199097]
[-78.21137238 319.90020752]
[-67.53063202 309.33444214]
[-55.51062012 300.32150269]
[-42.37527084 293.02929688]
[-28.36928177 287.59365845]
[-13.75357819 284.11587524]
[1.19955885 282.66073608]
[16.21156120 283.25531006]
[31.00276566 285.88858032]
[35.61677551 271.61584473]
[40.23078156 257.34310913]
[44.84479141 243.07038879]
[49.45880127 228.79765320]
[48.12042999 224.21313477]
[49.64781189 218.73918152]
[54.42850494 214.17228699]
[59.46541977 200.04325867]
[64.50233459 185.91423035]
[69.43392944 171.74809265]
[74.15406036 157.51010132]
[78.76807404 143.23736572]
[83.27570343 128.93067932]
[87.67669678 114.59083557]
[80.98094177 101.74120331]
[85.23217010 87.88936615]
[97.98345184 81.00816345]
[102.38445282 66.66831970]
[89.17402649 73.77356720]
[74.46203613 70.84825134]
[64.97461700 59.22978592]
[65.04927826 44.22997284]
[74.65189362 32.70652390]
[89.39226532 29.92781067]
[102.53131104 37.16421890]
[108.06208038 51.10921478]
[113.93104553 37.30503845]
[119.80000305 23.50086021]
[125.66896057 9.69668388]
[131.53791809 -4.10749340]
[130.90303040 -9.28861237]
[132.19029236 -13.74913597]
[134.80332947 -16.87756348]
[137.98951721 -18.38769913]
[137.86294556 -24.99795723]
[140.67199707 -29.93822670]
[144.86863708 -32.21799088]
[151.74804688 -45.54742050]
[158.62745667 -58.87685013]
[165.50686646 -72.20627594]
[165.14791870 -76.53353119]
[166.08990479 -80.36461639]
[168.01707458 -83.35148621]
[170.53312683 -85.28438568]
[173.21321106 -86.10615540]
[180.87379456 -99.00248718]
[172.61387634 -110.47071075]
[169.35867310 -124.17939758]
[171.56756592 -138.05117798]
[178.87442017 -149.99690247]
[190.14788818 -158.23025513]
[203.66645813 -161.53482056]
[217.38125610 -159.44375610]
[225.23301697 -172.22460938]
[233.08477783 -185.00544739]
[240.93652344 -197.78628540]
[248.78828430 -210.56712341]
[256.64004517 -223.34797668]
[264.49179077 -236.12881470]
[272.34353638 -248.90965271]
[280.19531250 -261.69049072]
[288.04705811 -274.47134399]
[295.89880371 -287.25219727]
[303.75057983 -300.03302002]
[311.60232544 -312.81387329]
[319.45407104 -325.59472656]
[307.71920776 -334.96871948]
[297.22525024 -345.71380615]
[288.13131714 -357.66705322]
[280.57528687 -370.64727783]
[274.67166138 -384.45767212]
[270.50997925 -398.88888550]
[268.15332031 -413.72213745]
[267.63739014 -428.73257446]
[268.97003174 -443.69265747]
[272.13104248 -458.37554932]
[277.07247925 -472.55871582]
[283.71945190 -486.02709961]
[291.97119141 -498.57653809]
[301.70260620 -510.01678467]
[312.76614380 -520.17437744]
[324.99414062 -528.89544678]
[338.20117188 -536.04760742]
[352.18701172 -541.52258301]
[366.73971558 -545.23730469]
[381.63858032 -547.13543701]
[396.65780640 -547.18829346]
[411.56967163 -545.39495850]
[426.14810181 -541.78271484]
[440.17214966 -536.40631104]
[453.42916870 -529.34716797]
[465.71820068 -520.71240234]
[476.85293579 -510.63284302]
[486.66458130 -499.26132202]
[495.00439453 -486.77023315]
[501.74594116 -473.34896851]
[506.78704834 -459.20092773]
[510.05123901 -444.54061890]
[511.48907471 -429.59030151]
[511.07876587 -414.57659912]
[508.82650757 -399.72711182]
[504.76641846 -385.26696777]
[498.96011353 -371.41540527]
[491.49557495 -358.38235474]
[482.48596191 -346.36541748]
[472.06784058 -335.54678345]
[460.39920044 -326.09045410]
[447.65689087 -318.13977051]
[434.03411865 -311.81527710]
[419.73736572 -307.21286011]
[404.98336792 -304.40225220]
[389.99581909 -303.42608643]
[375.00189209 -304.29916382]
[360.22894287 -307.00827026]
[345.90087891 -311.51226807]
[332.23492432 -317.74295044]
[324.38317871 -304.96212769]
[316.53140259 -292.18127441]
[308.67965698 -279.40042114]
[300.82791138 -266.61959839]
[292.97613525 -253.83874512]
[285.12438965 -241.05790710]
[277.27264404 -228.27705383]
[269.42086792 -215.49621582]
[261.56912231 -202.71537781]
[253.71737671 -189.93453979]
[245.86561584 -177.15368652]
[238.01385498 -164.37284851]
[230.16210938 -151.59201050]
[239.05596924 -138.31608582]
[241.27798462 -122.43288422]
[236.33305359 -107.11520386]
[225.16285706 -95.44528961]
[209.96702576 -89.79456329]
[193.77012634 -91.34188843]
[186.10952759 -78.44555664]
[178.83630371 -65.32686615]
[171.95689392 -51.99743652]
[165.07748413 -38.66800690]
[158.19805908 -25.33857918]
[151.51786804 -11.90820312]
[145.34210205 1.76146746]
[139.47314453 15.56564426]
[133.60418701 29.36982155]
[127.73522186 43.17399979]
[121.86625671 56.97817612]
[116.72429657 71.06931305]
[112.32330322 85.40916443]
[119.01905823 98.25879669]
[114.76782990 112.11063385]
[102.01654816 118.99183655]
[97.61554718 133.33168030]
[98.08937836 142.45381165]
[93.04080963 147.85137939]
[88.42679596 162.12411499]
[88.76476288 171.25228882]
[83.63638306 176.57409668]
[83.83840179 185.70628357]
[78.63136292 190.95114136]
[73.59445190 205.08016968]
[68.55753326 219.20919800]
[63.73153687 233.41166687]
[59.11752701 247.68438721]
[54.50351715 261.95712280]
[49.88950729 276.22985840]
[45.27549744 290.50259399]
[58.80910873 297.02603149]
[71.32835388 305.33157349]
[82.60001373 315.26452637]
[92.41409302 326.63983154]
[100.58776855 339.24557495]
[106.96876526 352.84692383]
[111.43821716 367.19049072]
[113.91284943 382.00906372]
[114.34657288 397.02655029]
[112.73129272 411.96325684]
[109.09712219 426.54086304]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 199]
[34 198]
[35 197]
[36 196]
[37 195]
[40 194]
[41 193]
[42 192]
[43 190]
[44 188]
[45 187]
[46 185]
[47 184]
[50 181]
[51 180]
[59 179]
[60 178]
[61 177]
[62 176]
[63 175]
[67 174]
[70 173]
[71 172]
[72 171]
[73 170]
[78 169]
[79 168]
[86 162]
[87 161]
[88 160]
[89 159]
[90 158]
[91 157]
[92 156]
[93 155]
[94 154]
[95 153]
[96 152]
[97 151]
[98 150]
[99 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
