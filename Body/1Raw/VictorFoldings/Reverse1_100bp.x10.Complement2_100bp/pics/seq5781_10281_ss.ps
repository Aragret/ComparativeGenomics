%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[10.78531170 610.75390625]
[2.59943676 623.34387207]
[-6.99272633 634.89837646]
[-17.86145401 645.26116943]
[-29.85975838 654.29211426]
[-42.82537842 661.86895752]
[-56.58296585 667.88940430]
[-70.94647217 672.27191162]
[-85.72163391 674.95721436]
[-100.70864868 675.90905762]
[-115.70481873 675.11456299]
[-130.50735474 672.58441162]
[-144.91606140 668.35290527]
[-158.73606873 662.47723389]
[-171.78048706 655.03680420]
[-183.87290955 646.13232422]
[-194.84979248 635.88415527]
[-204.56268311 624.43096924]
[-212.88023376 611.92755127]
[-219.68995667 598.54309082]
[-224.89976501 584.45855713]
[-228.43917847 569.86437988]
[-230.26036072 554.95800781]
[-230.33865356 539.94104004]
[-228.67301941 525.01647949]
[-225.28598022 510.38619995]
[-220.22334290 496.24810791]
[-213.55355835 482.79333496]
[-205.36683655 470.20388794]
[-195.77391052 458.65002441]
[-184.90447998 448.28796387]
[-172.90557861 439.25784302]
[-159.93945312 431.68182373]
[-146.18145752 425.66235352]
[-131.81767273 421.28079224]
[-117.04232788 418.59646606]
[-102.05525208 417.64559937]
[-87.05912781 418.44113159]
[-72.25676727 420.97222900]
[-57.84834290 425.20471191]
[-51.97938156 411.40054321]
[-46.11042023 397.59637451]
[-40.24145889 383.79217529]
[-34.37249756 369.98800659]
[-28.50353813 356.18383789]
[-37.41772842 345.83712769]
[-41.02159500 332.59548950]
[-38.55682755 319.02810669]
[-30.44833946 307.79287720]
[-18.23229218 301.11572266]
[-4.26532888 300.34973145]
[1.80850506 286.63446045]
[7.88233900 272.91918945]
[3.81888914 261.52557373]
[8.76685333 250.04943848]
[20.57454681 244.85894775]
[26.85190773 231.23562622]
[33.12926865 217.61231995]
[39.40662766 203.98899841]
[38.53518295 200.57243347]
[39.27528763 196.56402588]
[41.88708115 192.72581482]
[46.28054428 189.90721130]
[53.15995407 176.57777405]
[60.03936768 163.24835205]
[66.81935883 149.86807251]
[73.49955750 136.43769836]
[80.17974854 123.00732422]
[86.85994720 109.57695007]
[85.38820648 92.86736298]
[99.46766663 83.74897766]
[105.94716644 70.22063446]
[104.93018341 54.43214798]
[117.40612793 46.29580307]
[123.88562012 32.76745987]
[130.36511230 19.23911285]
[126.82318115 6.83679676]
[132.49847412 -4.29759979]
[143.86262512 -8.44277382]
[150.54283142 -21.87314987]
[157.22302246 -35.30352402]
[162.04902649 -49.50598145]
[157.11068726 -64.53673553]
[167.15161133 -75.53805542]
[170.03688049 -90.25794220]
[172.92216492 -104.97783661]
[175.80743408 -119.69773102]
[178.69270325 -134.41761780]
[181.57797241 -149.13751221]
[184.46324158 -163.85740662]
[179.52491760 -178.88815308]
[189.56584167 -189.88948059]
[175.42994690 -194.99604797]
[162.23930359 -202.20069885]
[150.30308533 -211.33456421]
[139.90112305 -222.18350220]
[131.27723694 -234.49320984]
[124.63359070 -247.97514343]
[120.12591553 -262.31326294]
[117.85988617 -277.17141724]
[117.88861084 -292.20138550]
[120.21142578 -307.05078125]
[124.77388000 -321.37155151]
[131.46900940 -334.82800293]
[140.13989258 -347.10464478]
[150.58325195 -357.91375732]
[162.55430603 -367.00192261]
[175.77239990 -374.15609741]
[189.92770386 -379.20858765]
[204.68840027 -382.04095459]
[219.70846558 -382.58682251]
[234.63581848 -380.83337402]
[249.12054443 -376.82171631]
[262.82308960 -370.64587402]
[275.42224121 -362.45065308]
[286.62265015 -352.42813110]
[296.16180420 -340.81326294]
[303.81604004 -327.87832642]
[309.40597534 -313.92651367]
[312.80056763 -299.28488159]
[313.92019653 -284.29666138]
[312.73867798 -269.31317139]
[309.28369141 -254.68568420]
[303.63619995 -240.75708008]
[295.92858887 -227.85385132]
[286.34155273 -216.27847290]
[275.09985352 -206.30227661]
[262.46697998 -198.15914917]
[248.73904419 -192.03994751]
[234.23788452 -188.08813477]
[219.30342102 -186.39633179]
[204.28573608 -187.00419617]
[209.43043518 -173.02632141]
[199.18313599 -160.97213745]
[196.29786682 -146.25224304]
[193.41259766 -131.53234863]
[190.52732849 -116.81245422]
[187.64204407 -102.09256744]
[184.75677490 -87.37267303]
[181.87150574 -72.65277863]
[187.01620483 -58.67489624]
[176.76890564 -46.62070847]
[186.19409180 -58.28973007]
[198.72947693 -66.52769470]
[213.18028259 -70.54940796]
[228.16914368 -69.97155762]
[242.26742554 -64.84920502]
[254.13136292 -55.67058945]
[262.63015747 -43.31055832]
[266.95379639 -28.94719124]
[266.69009399 -13.94950867]
[261.86428833 0.25300372]
[252.93624878 12.30665207]
[240.75700378 21.06256104]
[226.48738098 25.68617249]
[211.48747253 25.73679161]
[197.18696594 21.20959663]
[184.94889832 12.53608894]
[175.93972778 0.54297310]
[171.01814270 -13.62664413]
[170.65339661 -28.62333107]
[163.97320557 -15.19295502]
[157.29301453 -1.76257896]
[159.32325745 15.66857243]
[143.89346313 25.71860886]
[137.41397095 39.24695587]
[130.93447876 52.77529907]
[132.41491699 67.59615326]
[119.47550964 76.70012665]
[112.99600983 90.22847748]
[116.19704437 101.42645264]
[111.08808899 111.89257812]
[100.29032135 116.25714874]
[93.61012268 129.68751526]
[86.92993164 143.11790466]
[80.24973297 156.54827881]
[79.22987366 165.62559509]
[73.36879730 170.12776184]
[66.48938751 183.45719910]
[59.60997391 196.78662109]
[53.02994537 210.26635742]
[46.75258255 223.88967896]
[40.47522354 237.51298523]
[34.19786453 251.13630676]
[36.31128311 269.42880249]
[21.59760666 278.99304199]
[15.52377129 292.70828247]
[9.44993782 306.42355347]
[19.33240700 319.67984009]
[21.17067909 336.01739502]
[14.55712318 350.96658325]
[1.38342333 360.48547363]
[-14.69936180 362.05279541]
[-20.56832314 375.85696411]
[-26.43728256 389.66116333]
[-32.30624390 403.46533203]
[-38.17520523 417.26950073]
[-44.04416656 431.07366943]
[-30.99924660 438.51321411]
[-18.90623283 447.41690063]
[-7.92866659 457.66430664]
[1.78499234 469.11688232]
[10.10337830 481.61972046]
[16.91399384 495.00375366]
[22.12473297 509.08795166]
[25.66512871 523.68182373]
[27.48729706 538.58807373]
[27.56659889 553.60510254]
[25.90196228 568.52972412]
[22.51589584 583.16021729]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 198]
[41 197]
[42 196]
[43 195]
[44 194]
[45 193]
[51 188]
[52 187]
[53 186]
[56 184]
[57 183]
[58 182]
[59 181]
[63 180]
[64 179]
[65 178]
[66 176]
[67 175]
[68 174]
[69 173]
[71 170]
[72 169]
[74 167]
[75 166]
[76 165]
[79 163]
[80 162]
[81 161]
[82 142]
[84 140]
[85 139]
[86 138]
[87 137]
[88 136]
[89 135]
[90 134]
[92 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
