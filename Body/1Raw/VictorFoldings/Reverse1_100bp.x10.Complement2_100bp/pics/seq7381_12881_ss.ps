%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[101.85995483 524.95922852]
[94.11014557 510.50677490]
[102.98019409 496.71350098]
[103.20352173 481.71517944]
[103.31518555 466.71560669]
[103.31518555 451.71560669]
[103.31518555 436.71560669]
[92.63431549 426.39791870]
[92.42063141 411.18579102]
[103.31518555 400.05264282]
[103.31518555 385.05264282]
[103.31518555 370.05264282]
[103.31518555 355.05264282]
[103.31518555 340.05264282]
[102.98020935 325.05639648]
[102.31042480 310.07135010]
[101.52910614 295.09170532]
[100.63628387 280.11831665]
[92.15516663 267.87414551]
[99.05734253 253.63789368]
[98.16452789 238.66448975]
[97.27171326 223.69108582]
[96.37889862 208.71768188]
[86.40708160 203.17430115]
[80.28612518 193.40447998]
[79.63471222 181.77392578]
[84.73017120 171.16557312]
[94.41092682 164.26487732]
[86.29811859 151.77362061]
[93.62110901 137.74919128]
[93.17449951 122.75584412]
[92.72789764 107.76249695]
[91.16737366 92.84388733]
[88.50157928 78.08267212]
[85.83577728 63.32145691]
[83.16998291 48.56023788]
[80.50418854 33.79902267]
[73.94816589 47.29044342]
[61.58042526 55.77802658]
[46.63386917 57.04312897]
[33.01549149 50.75506210]
[24.28510284 38.55751038]
[22.72480583 23.63888168]
[28.74245834 9.89887142]
[40.76506042 0.92908651]
[55.64993286 -0.92579424]
[69.50620270 4.81909084]
[78.71153259 16.66122627]
[78.26493073 1.66787672]
[77.81832123 -13.32547283]
[75.40618134 -16.93595123]
[74.37239075 -20.74328613]
[74.60958099 -24.28999710]
[75.87284088 -27.20045853]
[77.81832123 -29.21868515]
[78.26493073 -44.21203613]
[78.71153259 -59.20538330]
[79.15814209 -74.19873810]
[79.49311829 -89.19499207]
[79.71644592 -104.19332886]
[71.30932617 -113.97510529]
[71.80410767 -126.46266174]
[80.39055634 -134.98318481]
[80.83716583 -149.97653198]
[81.28376770 -164.96989441]
[72.18164062 -180.97715759]
[81.98017883 -195.53585815]
[82.20350647 -210.53419495]
[72.86406708 -226.40417480]
[82.44475555 -241.10714722]
[82.44475555 -256.10714722]
[82.44475555 -271.10714722]
[79.31535339 -279.68878174]
[82.55809021 -286.33004761]
[82.78141785 -301.32839966]
[83.00474548 -316.32672119]
[83.22807312 -331.32507324]
[68.32405853 -333.14236450]
[53.69765854 -336.53359985]
[39.51458740 -341.46032715]
[25.93556023 -347.86672974]
[13.11443233 -355.68023682]
[1.19647896 -364.81228638]
[-9.68326092 -375.15942383]
[-19.40151024 -386.60440063]
[-27.84815598 -399.01757812]
[-34.92749023 -412.25823975]
[-40.55929565 -426.17636108]
[-44.67976379 -440.61431885]
[-47.24220657 -455.40841675]
[-48.21758652 -470.39111328]
[-47.59485245 -485.39257812]
[-45.38106537 -500.24288940]
[-41.60130310 -514.77374268]
[-36.29839325 -528.82049561]
[-29.53242493 -542.22399902]
[-21.38006020 -554.83233643]
[-11.93367386 -566.50274658]
[-1.30029821 -577.10290527]
[10.39958191 -586.51269531]
[23.03339767 -594.62561035]
[36.45799637 -601.34960938]
[50.52127075 -606.60852051]
[65.06387329 -610.34283447]
[79.92102051 -612.51013184]
[94.92436981 -613.08593750]
[109.90392303 -612.06372070]
[124.68995667 -609.45495605]
[139.11492920 -605.28936768]
[153.01538086 -599.61407471]
[166.23384094 -592.49334717]
[178.62049866 -584.00787354]
[190.03503418 -574.25390625]
[200.34808350 -563.34179688]
[209.44281006 -551.39538574]
[217.21615601 -538.54986572]
[223.58006287 -524.95086670]
[228.46238708 -510.75244141]
[231.80784607 -496.11547852]
[233.57850647 -481.20587158]
[233.75430298 -466.19250488]
[232.33326721 -451.24551392]
[229.33148193 -436.53424072]
[224.78297424 -422.22537231]
[218.73927307 -408.48107910]
[211.26884460 -395.45706177]
[202.45635986 -383.30090332]
[192.40165710 -372.15036011]
[181.21867371 -362.13171387]
[169.03410339 -353.35855103]
[155.98602295 -345.93026733]
[142.22227478 -339.93096924]
[127.89881134 -335.42871094]
[113.17791748 -332.47448730]
[98.22640991 -331.10174561]
[98.00308228 -316.10339355]
[97.77975464 -301.10507202]
[97.55642700 -286.10671997]
[97.44475555 -271.10714722]
[97.44475555 -256.10714722]
[97.44475555 -241.10714722]
[105.77371216 -232.33474731]
[105.89647675 -219.83799744]
[97.20184326 -210.31086731]
[96.97851562 -195.31253052]
[105.17594147 -186.41709900]
[105.11263275 -173.91990662]
[96.27711487 -164.52328491]
[95.83051300 -149.52993774]
[95.38390350 -134.53657532]
[104.52259064 -119.55487823]
[94.71478271 -103.97000122]
[94.49145508 -88.97166443]
[97.53501892 -82.23679352]
[94.15148926 -73.75212860]
[93.70488739 -58.75877762]
[93.25827789 -43.76543045]
[92.81166840 -28.77207947]
[92.81166840 -13.77207947]
[93.25827789 1.22127080]
[93.70488739 16.21462059]
[95.26540375 31.13322639]
[97.93120575 45.89444351]
[100.59700012 60.65565872]
[103.26279449 75.41687775]
[105.92858887 90.17809296]
[112.48461151 76.68666840]
[124.85235596 68.19908905]
[139.79890442 66.93398285]
[153.41728210 73.22205353]
[162.14767456 85.41960907]
[163.70797729 100.33823395]
[157.69032288 114.07824707]
[145.66772461 123.04802704]
[130.78285217 124.90290833]
[116.92657471 119.15802765]
[107.72124481 107.31588745]
[108.16784668 122.30924225]
[108.61445618 137.30258179]
[116.75920868 150.86627197]
[109.40427399 163.81826782]
[123.67897034 176.27409363]
[124.30541229 194.88916016]
[111.35230255 207.82487488]
[112.24511719 222.79827881]
[113.13793182 237.77168274]
[114.03075409 252.74508667]
[122.57573700 266.06027222]
[115.60969543 279.22549438]
[116.50251007 294.19891357]
[120.13716125 302.57907104]
[117.29546356 309.40158081]
[117.96524811 324.38659668]
[120.77592468 328.78515625]
[121.54175568 333.36410522]
[120.53645325 337.31436157]
[118.31518555 340.05264282]
[118.31518555 355.05264282]
[118.31518555 370.05264282]
[118.31518555 385.05264282]
[118.31518555 400.05264282]
[129.20973206 411.18579102]
[128.99606323 426.39791870]
[118.31518555 436.71560669]
[118.31518555 451.71560669]
[118.31518555 466.71560669]
[121.44459534 475.29724121]
[118.20185852 481.93850708]
[117.97853088 496.93682861]
[126.43396759 510.98809814]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 209]
[4 208]
[5 206]
[6 205]
[7 204]
[10 201]
[11 200]
[12 199]
[13 198]
[14 197]
[15 193]
[16 192]
[17 190]
[18 189]
[20 187]
[21 186]
[22 185]
[23 184]
[28 181]
[30 179]
[31 178]
[32 177]
[33 166]
[34 165]
[35 164]
[36 163]
[37 162]
[48 161]
[49 160]
[50 159]
[55 158]
[56 157]
[57 156]
[58 155]
[59 153]
[60 152]
[63 150]
[64 149]
[65 148]
[67 145]
[68 144]
[70 141]
[71 140]
[72 139]
[74 138]
[75 137]
[76 136]
[77 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
