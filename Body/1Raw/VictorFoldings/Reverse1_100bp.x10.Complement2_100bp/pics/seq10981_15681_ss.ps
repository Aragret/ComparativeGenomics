%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAUUCCUCUAAACAUCCCUCUAAUCAUAUCUCUCCAUCUCAAAAAAAGCACUAUCACCAAGUGACCUAUUCACCGCAACCGAACGGUACUAACACUCxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[130.19360352 789.17248535]
[116.52974701 782.93530273]
[103.75537872 775.03472900]
[92.07198334 765.59539795]
[81.66381836 754.76611328]
[72.69503021 742.71771240]
[65.30706787 729.64019775]
[59.61646271 715.73980713]
[55.71295547 701.23583984]
[53.65811157 686.35693359]
[53.48433685 671.33782959]
[55.19437408 656.41540527]
[58.76125336 641.82501221]
[64.12871552 627.79669189]
[71.21212006 614.55175781]
[79.89974213 602.29901123]
[90.05455780 591.23187256]
[101.51642609 581.52471924]
[114.10457611 573.33068848]
[127.62046051 566.77905273]
[141.85092163 561.97308350]
[156.57153320 558.98864746]
[155.45588684 544.03021240]
[154.34024048 529.07171631]
[153.22459412 514.11328125]
[152.10893250 499.15481567]
[150.99328613 484.19638062]
[149.87763977 469.23791504]
[141.21516418 457.12136841]
[147.90461731 442.78396606]
[146.78897095 427.82550049]
[145.56199646 412.87576294]
[144.22377014 397.93557739]
[140.49604797 391.55389404]
[142.97851562 382.76327515]
[141.86286926 367.80480957]
[140.74722290 352.84634399]
[139.63157654 337.88790894]
[138.51593018 322.92944336]
[136.40130615 308.07925415]
[133.29719543 293.40396118]
[130.19308472 278.72863770]
[127.08896637 264.05334473]
[123.98486328 249.37803650]
[109.18054962 247.34884644]
[95.93891907 240.36398315]
[85.86716461 229.24937439]
[80.19518280 215.33355713]
[79.62541962 200.28877258]
[84.24592590 185.93011475]
[93.51741028 173.99649048]
[106.33610535 165.94003296]
[103.23199463 151.26473999]
[100.12789154 136.58943176]
[97.02378082 121.91413116]
[93.91967010 107.23882294]
[90.28524780 103.45663452]
[89.02863312 97.90737915]
[90.94847870 92.08061981]
[88.28268433 77.31940460]
[85.61688995 62.55818558]
[82.84127808 47.81722260]
[79.95600891 33.09733200]
[73.07491302 46.42589569]
[60.13371277 54.01043701]
[45.14237213 53.50080872]
[32.74612427 45.05492020]
[26.78607941 31.28982544]
[29.10902405 16.47078514]
[38.99516678 5.18964338]
[53.38117981 0.94198269]
[67.80940247 5.04398775]
[77.80919647 16.22484016]
[76.91638184 1.25143409]
[76.02356720 -13.72197151]
[75.13075256 -28.69537735]
[74.23793793 -43.66878128]
[73.23367310 -58.63512802]
[72.11802673 -73.59358215]
[56.01459503 -78.62660980]
[43.10768509 -89.43512726]
[35.35918045 -104.33937073]
[33.93270493 -121.03987122]
[39.01894379 -136.97224426]
[49.81072235 -149.70092773]
[64.63095093 -157.29148865]
[63.07042694 -172.21009827]
[61.50990295 -187.12870789]
[59.94937897 -202.04730225]
[57.27538681 -205.46838379]
[55.96128464 -209.18827820]
[55.93402481 -212.74281311]
[56.97731400 -215.73916626]
[58.76729584 -217.89649963]
[58.09751129 -232.88153076]
[57.42772675 -247.86657715]
[56.75794220 -262.85162354]
[42.56755447 -268.37908936]
[31.85682869 -279.20498657]
[26.48146057 -293.45367432]
[27.37276268 -308.65649414]
[34.37631607 -322.17944336]
[46.27870560 -331.67959595]
[61.01778030 -335.51098633]
[76.03990173 -333.00982666]
[88.74239349 -324.60943604]
[96.92446899 -311.76522827]
[99.16854858 -296.70257568]
[95.08582306 -282.03112793]
[85.38364410 -270.29281616]
[71.74298096 -263.52139282]
[72.41276550 -248.53636169]
[73.08255005 -233.55131531]
[73.75233459 -218.56628418]
[74.86798859 -203.60783386]
[76.42850494 -188.68922424]
[77.98902893 -173.77061462]
[79.54955292 -158.85202026]
[92.47557831 -155.90049744]
[103.88273621 -149.09793091]
[112.65374756 -139.09428406]
[117.92449951 -126.85379028]
[119.16916656 -113.56211090]
[116.25265503 -100.51141357]
[109.44508362 -88.97480774]
[99.39684296 -80.08210754]
[87.07647705 -74.70922852]
[88.19213104 -59.75077438]
[91.82441711 -53.31429291]
[89.21134186 -44.56159973]
[90.10415649 -29.58819389]
[90.99697113 -14.61478710]
[91.88978577 0.35861826]
[92.78260803 15.33202362]
[94.67589569 30.21205902]
[97.56117249 44.93194962]
[101.93257141 50.89119720]
[100.37810516 59.89239120]
[103.04389954 74.65361023]
[105.70969391 89.41482544]
[108.59497070 104.13471985]
[111.69908142 118.81002045]
[114.80319214 133.48532104]
[117.90730286 148.16062927]
[121.01141357 162.83592224]
[135.99443054 165.01177979]
[149.30401611 172.16906738]
[159.34292603 183.42698669]
[164.91392517 197.41390991]
[165.36257935 212.43457031]
[160.65400696 226.67549133]
[151.37483215 238.42395020]
[138.66015625 246.27392578]
[141.76426697 260.94924927]
[144.86837769 275.62454224]
[147.97248840 290.29983521]
[151.07659912 304.97512817]
[157.75848389 291.54559326]
[170.58532715 283.76922607]
[185.58259583 284.05560303]
[198.10322571 292.31597900]
[204.26754761 305.99081421]
[202.16549683 320.84280396]
[192.44841003 332.26989746]
[178.12722778 336.73126221]
[163.63952637 332.84454346]
[153.47438049 321.81381226]
[154.59002686 336.77224731]
[155.70567322 351.73071289]
[156.82131958 366.68914795]
[157.93696594 381.64761353]
[159.16394043 396.59735107]
[160.50218201 411.53753662]
[164.38473511 419.80575562]
[161.74742126 426.70983887]
[162.86306763 441.66830444]
[171.60534668 454.85476685]
[164.83609009 468.12228394]
[165.95173645 483.08071899]
[167.06739807 498.03918457]
[168.18304443 512.99761963]
[169.29869080 527.95611572]
[170.41433716 542.91455078]
[171.52998352 557.87298584]
[186.53044128 558.64074707]
[201.31639099 561.28253174]
[215.65461731 565.75677490]
[229.31900024 571.99279785]
[242.09402466 579.89227295]
[253.77821350 589.33062744]
[264.18728638 600.15905762]
[273.15710449 612.20666504]
[280.54617310 625.28356934]
[286.23794556 639.18347168]
[290.14266968 653.68713379]
[292.19876099 668.56585693]
[292.37380981 683.58489990]
[290.66500854 698.50750732]
[287.09936523 713.09820557]
[281.73309326 727.12695312]
[274.65078735 740.37249756]
[265.96420288 752.62597656]
[255.81031799 763.69396973]
[244.34927368 773.40209961]
[231.76181030 781.59716797]
[218.24647522 788.14996338]
[204.01641846 792.95709229]
[189.29606628 795.94281006]
[174.31756592 797.05993652]
[159.31716919 796.29089355]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 184]
[23 183]
[24 182]
[25 181]
[26 180]
[27 179]
[28 178]
[30 176]
[31 175]
[32 173]
[33 172]
[35 171]
[36 170]
[37 169]
[38 168]
[39 167]
[40 157]
[41 156]
[42 155]
[43 154]
[44 153]
[52 145]
[53 144]
[54 143]
[55 142]
[56 141]
[59 140]
[60 139]
[61 138]
[62 136]
[63 135]
[73 134]
[74 133]
[75 132]
[76 131]
[77 130]
[78 128]
[79 127]
[86 118]
[87 117]
[88 116]
[89 115]
[94 114]
[95 113]
[96 112]
[97 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
