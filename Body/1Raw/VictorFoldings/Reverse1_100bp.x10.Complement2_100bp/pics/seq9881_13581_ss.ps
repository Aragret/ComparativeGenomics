%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUUAUCUACCUCUGUAUGUCUUUAUCAGUUUGGUGUAGAUGUUUUACGGUCAUAGUCCGCCGCCGAAGCUUCGGUUUCACUACAAACCUACAUUUCACxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[5.25422192 639.56164551]
[-4.71541166 650.78540039]
[-15.73717403 660.97796631]
[-27.70491791 670.04107666]
[-40.50338364 677.88745117]
[-54.00930786 684.44158936]
[-68.09262848 689.64031982]
[-82.61769867 693.43365479]
[-97.44464111 695.78491211]
[-112.43065643 696.67156982]
[-127.43141174 696.08508301]
[-142.30244446 694.03106689]
[-156.90054321 690.52929688]
[-171.08509827 685.61346436]
[-184.71951294 679.33099365]
[-197.67248535 671.74237061]
[-209.81924438 662.92059326]
[-221.04281616 652.95074463]
[-231.23512268 641.92877197]
[-240.29798889 629.96087646]
[-248.14414978 617.16223145]
[-254.69801331 603.65618896]
[-259.89648438 589.57275391]
[-263.68948364 575.04760742]
[-266.04046631 560.22064209]
[-266.92684937 545.23461914]
[-266.34002686 530.23382568]
[-264.28570557 515.36285400]
[-260.78363037 500.76483154]
[-255.86755371 486.58038330]
[-249.58479309 472.94607544]
[-241.99589539 459.99325562]
[-233.17391968 447.84667969]
[-223.20384216 436.62329102]
[-212.18167114 426.43121338]
[-200.21356201 417.36859131]
[-187.41477966 409.52270508]
[-173.90859985 402.96908569]
[-159.82507324 397.77090454]
[-145.29985046 393.97821045]
[-130.47280884 391.62750244]
[-115.48675537 390.74142456]
[-100.48602295 391.32855225]
[-85.61506653 393.38317871]
[-71.01711273 396.88552856]
[-56.83275223 401.80191040]
[-50.55539322 388.17858887]
[-44.27803040 374.55526733]
[-38.00067139 360.93194580]
[-31.72331047 347.30865479]
[-25.44594955 333.68533325]
[-19.16858864 320.06201172]
[-12.89122772 306.43869019]
[-6.61386681 292.81536865]
[-0.33650622 279.19204712]
[-4.22987127 267.73919678]
[0.88840705 256.33801270]
[12.77206993 251.32388306]
[19.25156593 237.79554749]
[25.73106194 224.26719666]
[32.21055603 210.73884583]
[38.69005203 197.21051025]
[45.16954803 183.68215942]
[43.68910980 168.86131287]
[56.62851334 159.75733948]
[42.15785980 163.70704651]
[29.06485748 156.38766479]
[24.84976959 141.99208069]
[31.92719269 128.76672363]
[46.24285507 124.28768158]
[59.59609604 131.12075806]
[64.33763885 145.35070801]
[71.99823761 132.45437622]
[79.65883636 119.55805206]
[87.31942749 106.66172028]
[87.68491364 92.68466949]
[99.78424072 85.67768097]
[107.44483948 72.78135681]
[103.76395416 57.64567184]
[111.71659851 44.67609024]
[126.16883850 41.26020432]
[133.82943726 28.36387634]
[141.49003601 15.46754932]
[148.95777893 2.45859694]
[156.23100281 -10.66009712]
[163.50424194 -23.77879143]
[170.77746582 -36.89748383]
[170.70204163 -52.71851349]
[183.64015198 -60.09784698]
[190.91337585 -73.21653748]
[198.18659973 -86.33523560]
[205.45983887 -99.45392609]
[212.73306274 -112.57262421]
[208.60316467 -127.59199524]
[216.16613770 -140.79261780]
[230.51025391 -144.63728333]
[237.78349304 -157.75598145]
[245.05671692 -170.87466431]
[232.93611145 -179.74565125]
[222.02294922 -190.06582642]
[212.48933411 -201.67243958]
[204.48564148 -214.38243103]
[198.13807678 -227.99536133]
[193.54678345 -242.29652405]
[190.78413391 -257.06036377]
[189.89373779 -272.05404663]
[190.88960266 -287.04107666]
[193.75605774 -301.78512573]
[198.44786072 -316.05361938]
[204.89103699 -329.62155151]
[212.98396301 -342.27493286]
[222.59899902 -353.81417847]
[233.58450317 -364.05731201]
[245.76721191 -372.84280396]
[258.95498657 -380.03207397]
[272.93988037 -385.51171875]
[287.50125122 -389.19534302]
[302.40951538 -391.02487183]
[317.42950439 -390.97137451]
[332.32437134 -389.03579712]
[346.85916138 -385.24856567]
[360.80465698 -379.66949463]
[373.94094849 -372.38650513]
[386.06079102 -363.51452637]
[396.97308350 -353.19342041]
[406.50573730 -341.58599854]
[414.50836182 -328.87533569]
[420.85476685 -315.26187134]
[425.44485474 -300.96032715]
[428.20626831 -286.19625854]
[429.09539795 -271.20251465]
[428.09826660 -256.21554565]
[425.23059082 -241.47174072]
[420.53756714 -227.20362854]
[414.09326172 -213.63624573]
[405.99926758 -200.98355103]
[396.38327026 -189.44511414]
[385.39691162 -179.20289612]
[373.21343994 -170.41844177]
[360.02505493 -163.23028564]
[346.03973389 -157.75181580]
[331.47802734 -154.06941223]
[316.56961060 -152.24114990]
[301.54962158 -152.29588318]
[286.65493774 -154.23274231]
[272.12045288 -158.02117920]
[258.17541504 -163.60144043]
[250.90219116 -150.48274231]
[243.62895203 -137.36405945]
[247.96737671 -123.16145325]
[240.77816772 -109.75362396]
[225.85176086 -105.29939270]
[218.57852173 -92.18070221]
[211.30529785 -79.06200409]
[204.03207397 -65.94331360]
[196.75883484 -52.82461548]
[197.35450745 -37.94192886]
[183.89616394 -29.62425613]
[176.62292480 -16.50556183]
[169.34970093 -3.38686752]
[162.07647705 9.73182678]
[162.50801086 14.48817158]
[159.95622253 19.56610489]
[154.38636780 23.12814713]
[146.72576904 36.02447510]
[139.06517029 48.92079926]
[142.97879028 63.24627304]
[135.39356995 76.43410492]
[120.34116364 80.44194794]
[112.68057251 93.33827972]
[112.31508636 107.31533051]
[100.21575928 114.32231903]
[92.55516052 127.21864319]
[84.89456177 140.11497498]
[77.23396301 153.01130676]
[70.15686035 166.23683167]
[71.17384338 182.02531433]
[58.69789505 190.16165161]
[52.21839905 203.69000244]
[45.73890305 217.21835327]
[39.25940704 230.74668884]
[32.77991104 244.27503967]
[26.30041504 257.80337524]
[28.14125252 276.12530518]
[13.28680992 285.46942139]
[7.00944901 299.09274292]
[0.73208857 312.71606445]
[-5.54527235 326.33935547]
[-11.82263279 339.96267700]
[-18.09999275 353.58599854]
[-24.37735367 367.20932007]
[-30.65471458 380.83264160]
[-36.93207550 394.45596313]
[-43.20943451 408.07925415]
[-30.25617027 415.66738892]
[-18.10905457 424.48864746]
[-6.88507748 434.45803833]
[3.30766678 445.47961426]
[12.37101364 457.44717407]
[20.21767616 470.24548340]
[26.77208328 483.75128174]
[31.97111320 497.83447266]
[35.76469421 512.35949707]
[38.11629105 527.18640137]
[39.00325394 542.17236328]
[38.41704178 557.17315674]
[36.36330414 572.04425049]
[32.86181641 586.64239502]
[27.94630051 600.82702637]
[21.66409874 614.46160889]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 194]
[47 193]
[48 192]
[49 191]
[50 190]
[51 189]
[52 188]
[53 187]
[54 186]
[55 185]
[58 183]
[59 182]
[60 181]
[61 180]
[62 179]
[63 178]
[65 176]
[72 175]
[73 174]
[74 173]
[75 172]
[77 170]
[78 169]
[81 166]
[82 165]
[83 164]
[84 161]
[85 160]
[86 159]
[87 158]
[89 156]
[90 155]
[91 154]
[92 153]
[93 152]
[96 149]
[97 148]
[98 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
