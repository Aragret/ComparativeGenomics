%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxCUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUA\
) } def
/len { sequence length } bind def

/coor [
[127.91476440 331.89315796]
[122.08419800 345.72775269]
[114.88391113 358.90145874]
[106.38778687 371.27914429]
[96.68300629 382.73373413]
[85.86915588 393.14776611]
[74.05721283 402.41430664]
[61.36837387 410.43829346]
[47.93285751 417.13739014]
[33.88853073 422.44287109]
[19.37951088 426.30023193]
[4.55468321 428.66995239]
[-10.43382263 429.52767944]
[-25.43220139 428.86462402]
[-40.28654480 426.68759155]
[-54.84442520 423.01889038]
[-68.95645142 417.89624023]
[-82.47780609 411.37213135]
[-95.26975250 403.51354980]
[-107.20101166 394.40115356]
[-118.14915466 384.12841797]
[-128.00183105 372.80075073]
[-136.65794373 360.53442383]
[-144.02865601 347.45529175]
[-150.03834534 333.69760132]
[-154.62533569 319.40246582]
[-157.74255371 304.71661377]
[-159.35801697 289.79077148]
[-159.45515442 274.77804565]
[-158.03295898 259.83255005]
[-155.10601807 245.10758972]
[-150.70437622 230.75431824]
[-144.87319946 216.91999817]
[-137.67233276 203.74659729]
[-129.17565918 191.36929321]
[-119.47038269 179.91510010]
[-108.65607452 169.50155640]
[-96.84371948 160.23553467]
[-84.15453339 152.21209717]
[-70.71871948 145.51359558]
[-56.67416000 140.20875549]
[-42.16497040 136.35202026]
[-27.34003830 133.98295593]
[-12.35149479 133.12588501]
[2.64685440 133.78961182]
[17.50110245 135.96730042]
[32.05881882 139.63661194]
[46.17061996 144.75990295]
[59.69169235 151.28460693]
[67.54344940 138.50375366]
[75.39520264 125.72291565]
[83.24695587 112.94207001]
[78.85632324 101.05191040]
[82.04511261 88.78466797]
[91.67023468 80.53781128]
[104.28134918 79.26761627]
[112.32251740 66.60509491]
[120.36369324 53.94256592]
[128.40486145 41.28004074]
[116.13692474 32.64388275]
[104.29380798 23.43377113]
[92.90234375 13.67057323]
[81.98832703 3.37640548]
[71.57649231 -7.42541313]
[61.69042206 -18.71041298]
[52.35251236 -30.45302963]
[43.58391571 -42.62666321]
[35.40449905 -55.20373154]
[27.83278656 -68.15574646]
[20.88593292 -81.45337677]
[14.57967663 -95.06648254]
[8.92830086 -108.96423340]
[3.94460940 -123.11515045]
[-0.36010888 -137.48716736]
[-3.97610211 -152.04774475]
[-6.89517879 -166.76387024]
[-9.11072636 -181.60223389]
[-10.61772537 -196.52920532]
[-11.41276264 -211.51098633]
[-11.49403763 -226.51361084]
[-10.86136436 -241.50312805]
[-9.51617813 -256.44555664]
[-7.46152496 -271.30703735]
[-4.70205975 -286.05392456]
[-1.24403346 -300.65283203]
[2.90472031 -315.07064819]
[7.73480320 -329.27471924]
[13.23527336 -343.23287964]
[19.39367104 -356.91351318]
[26.19604492 -370.28564453]
[33.62698364 -383.31893921]
[41.66965866 -395.98388672]
[50.30584717 -408.25180054]
[59.51598358 -420.09490967]
[69.27920532 -431.48635864]
[79.57340240 -442.40032959]
[90.37524414 -452.81213379]
[101.66026306 -462.69818115]
[113.40290070 -472.03607178]
[125.57655334 -480.80462646]
[138.15364075 -488.98403931]
[151.10568237 -496.55572510]
[164.40332031 -503.50253296]
[178.01644897 -509.80877686]
[191.91421509 -515.46008301]
[206.06513977 -520.44378662]
[220.43716431 -524.74847412]
[234.99774170 -528.36444092]
[249.71388245 -531.28344727]
[264.55224609 -533.49896240]
[279.47921753 -535.00592041]
[294.46099854 -535.80096436]
[309.46362305 -535.88220215]
[324.45312500 -535.24945068]
[339.39556885 -533.90423584]
[354.25704956 -531.84954834]
[369.00393677 -529.09008789]
[383.60281372 -525.63201904]
[398.02062988 -521.48321533]
[412.22470093 -516.65307617]
[426.18286133 -511.15261841]
[439.86346436 -504.99417114]
[453.23556519 -498.19177246]
[466.26882935 -490.76080322]
[478.93377686 -482.71810913]
[491.20169067 -474.08187866]
[503.04476929 -464.87170410]
[514.43615723 -455.10845947]
[525.35015869 -444.81423950]
[535.76190186 -434.01239014]
[545.64794922 -422.72735596]
[554.98577881 -410.98468018]
[563.75433350 -398.81100464]
[571.93371582 -386.23391724]
[579.50537109 -373.28186035]
[586.45214844 -359.98419189]
[592.75836182 -346.37106323]
[598.40966797 -332.47326660]
[603.39331055 -318.32232666]
[607.69793701 -303.95028687]
[611.31384277 -289.38970947]
[614.23291016 -274.67355347]
[616.44836426 -259.83520508]
[617.95532227 -244.90821838]
[618.75024414 -229.92643738]
[618.83148193 -214.92381287]
[618.19873047 -199.93429565]
[616.85345459 -184.99188232]
[614.79876709 -170.13040161]
[612.03924561 -155.38351440]
[608.58111572 -140.78463745]
[604.43231201 -126.36684418]
[599.60217285 -112.16278076]
[594.10162354 -98.20464325]
[587.94317627 -84.52403259]
[581.14074707 -71.15195465]
[573.70971680 -58.11869812]
[565.66699219 -45.45378494]
[557.03076172 -33.18590164]
[547.82055664 -21.34284782]
[538.05731201 -9.95144463]
[527.76306152 0.96249920]
[516.96118164 11.37426090]
[505.67608643 21.26025391]
[493.93341064 30.59808350]
[481.75973511 39.36659622]
[469.18258667 47.54592896]
[456.23052979 55.11755371]
[442.93286133 62.06431580]
[429.31970215 68.37048340]
[415.42190552 74.02175903]
[401.27096558 79.00535583]
[386.89892578 83.30997467]
[372.33831787 86.92587280]
[357.62216187 89.84484863]
[342.78378296 92.06029510]
[327.85681152 93.56719208]
[312.87503052 94.36212921]
[297.87240601 94.44330597]
[282.88290405 93.81053162]
[267.94049072 92.46524048]
[253.07899475 90.41048431]
[238.33212280 87.65091705]
[223.73326111 84.19279480]
[209.31546021 80.04394531]
[195.11141968 75.21376038]
[181.15328979 69.71319580]
[167.47270203 63.55471039]
[154.10063171 56.75224304]
[141.06739807 49.32121658]
[133.02621460 61.98374176]
[124.98504639 74.64626312]
[116.94387054 87.30879211]
[120.90634918 103.32960510]
[112.16310120 117.32687378]
[96.02780151 120.79383087]
[88.17604828 133.57467651]
[80.32428741 146.35551453]
[72.47253418 159.13635254]
[84.40419769 168.24824524]
[95.35279083 178.52049255]
[105.20597076 189.84771729]
[113.86261749 202.11366272]
[121.23390961 215.19245911]
[127.24420929 228.94992065]
[131.83181763 243.24484253]
[134.94969177 257.93054199]
[136.56581116 272.85632324]
[136.66360474 287.86904907]
[135.24206543 302.81460571]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 199]
[50 198]
[51 197]
[52 196]
[56 193]
[57 192]
[58 191]
[59 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
