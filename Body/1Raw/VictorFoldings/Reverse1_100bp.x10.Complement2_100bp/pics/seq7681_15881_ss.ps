%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[91.63883209 448.23196411]
[96.76194763 433.94497681]
[106.70313263 422.47598267]
[120.11791229 415.37612915]
[118.33544159 400.48239136]
[116.55297852 385.58868408]
[114.77050781 370.69497681]
[102.93925476 361.71960449]
[100.91941833 346.64065552]
[110.41381836 334.29180908]
[108.63134766 319.39807129]
[106.84888458 304.50436401]
[105.06641388 289.61065674]
[103.28395081 274.71691895]
[92.10217285 284.71533203]
[77.28862000 282.35766602]
[69.76328278 269.38195801]
[75.07357025 255.35337830]
[89.30493164 250.61329651]
[101.96565247 258.65451050]
[101.29586792 243.66947937]
[100.62608337 228.68443298]
[99.95629883 213.69940186]
[89.72863770 199.43890381]
[98.35013580 183.16770935]
[97.45732117 168.19430542]
[96.56449890 153.22090149]
[95.67168427 138.24749756]
[94.55603790 123.28904724]
[93.21780396 108.34886169]
[88.92368317 93.97664642]
[81.84657288 80.75112152]
[74.76947021 67.52558899]
[67.59410095 54.35311508]
[60.32087326 41.23442078]
[47.03213882 39.03804398]
[37.57278442 29.72508812]
[35.23899460 16.85514259]
[40.66233826 5.16682100]
[33.58523178 -8.05870628]
[26.50812721 -21.28423500]
[19.43102264 -34.50976181]
[12.35391712 -47.73529053]
[5.27681112 -60.96081543]
[-1.80029416 -74.18634796]
[-8.87739944 -87.41187286]
[-15.95450497 -100.63739777]
[-15.45494461 -85.64572144]
[-18.04088974 -70.87030792]
[-23.60238457 -56.93941116]
[-31.90295219 -44.44538879]
[-42.58964539 -33.91949081]
[-55.20806503 -25.80928230]
[-69.22166443 -20.45961189]
[-84.03458405 -18.09795189]
[-99.01696777 -18.82472229]
[-113.53176117 -22.60901833]
[-126.96177673 -29.28993225]
[-138.73597717 -38.58338547]
[-148.35369873 -50.09421921]
[-155.40602112 -63.33298111]
[-159.59304810 -77.73675537]
[-160.73675537 -92.69309235]
[-158.78851318 -107.56603241]
[-153.83116150 -121.72317505]
[-146.07548523 -134.56254578]
[-135.85127258 -145.53822327]
[-123.59323883 -154.18348694]
[-109.82262421 -160.13076782]
[-95.12495422 -163.12716675]
[-80.12517548 -163.04528809]
[-65.46109009 -159.88859558]
[-51.75622940 -153.79132080]
[-39.59332275 -145.01272583]
[-29.48954582 -133.92608643]
[-21.87444305 -121.00263977]
[-22.99009132 -135.96109009]
[-24.10573959 -150.91954041]
[-25.22138786 -165.87800598]
[-26.33703613 -180.83645630]
[-27.89756012 -195.75505066]
[-29.90157318 -210.62059021]
[-31.90558624 -225.48611450]
[-33.90959930 -240.35163879]
[-35.91361618 -255.21716309]
[-40.16148376 -263.30380249]
[-37.83509445 -270.31875610]
[-39.61756134 -285.21246338]
[-41.40002823 -300.10620117]
[-56.36325455 -301.94064331]
[-70.45241547 -307.30337524]
[-82.84838104 -315.88262939]
[-92.83047485 -327.17959595]
[-99.81833649 -340.53747559]
[-103.40570831 -355.17968750]
[-103.38402557 -370.25494385]
[-99.75455475 -384.88674927]
[-92.72829437 -398.22448730]
[-82.71376038 -409.49270630]
[-70.29316711 -418.03625488]
[-56.18863678 -423.35842896]
[-41.22019577 -425.14984131]
[-26.25808144 -423.30633545]
[-12.17217541 -417.93502808]
[0.21858820 -409.34829712]
[10.19382572 -398.04525757]
[17.17358971 -384.68313599]
[20.75208664 -370.03875732]
[20.72126579 -354.96353149]
[17.08292198 -340.33392334]
[10.04858017 -327.00045776]
[0.02721008 -315.73831177]
[-12.39855957 -307.20230103]
[-26.50630951 -301.88864136]
[-24.72384453 -286.99493408]
[-22.94137764 -272.10122681]
[-21.04808617 -257.22119141]
[-19.04407310 -242.35565186]
[-17.04005814 -227.49012756]
[-15.03604507 -212.62460327]
[-13.03203201 -197.75906372]
[-10.88714027 -195.95419312]
[-9.32794762 -193.19094849]
[-8.72306442 -189.68815613]
[-9.35515022 -185.79393005]
[-11.37858391 -181.95210266]
[-10.26293468 -166.99365234]
[-9.14728642 -152.03518677]
[-8.03163719 -137.07673645]
[-6.91598892 -122.11828613]
[-2.72897744 -107.71450806]
[4.34812784 -94.48897552]
[11.42523289 -81.26345062]
[18.50233841 -68.03792572]
[25.57944489 -54.81239319]
[32.65655136 -41.58686829]
[39.73365402 -28.36133957]
[46.81076050 -15.13581181]
[53.88786697 -1.91028452]
[70.17736053 2.27197075]
[78.56713867 17.23614120]
[73.43956757 33.96119308]
[80.71279907 47.07988739]
[86.70532227 51.40555954]
[87.99499512 60.44848633]
[95.07210541 73.67401123]
[102.14920807 86.89954376]
[101.64382935 71.90805817]
[104.32926178 57.15040207]
[110.08335114 43.29794693]
[118.64431763 30.98089027]
[129.62269592 20.75957298]
[142.51902771 13.09899902]
[156.74664307 8.34767246]
[171.65826416 6.72174597]
[186.57550049 8.29518986]
[200.81974792 12.99642181]
[213.74296570 20.61156845]
[224.75723267 30.79418945]
[233.36149597 43.08104706]
[239.16429138 56.91316605]
[241.90164185 71.66127777]
[241.44902039 86.65444946]
[237.82701111 101.21058655]
[231.20039368 114.66748047]
[221.87063599 126.41293335]
[210.26217651 135.91259766]
[196.90313721 142.73431396]
[182.40124512 146.56774902]
[167.41624451 147.23847961]
[152.62986755 144.71601868]
[138.71476746 139.11509705]
[126.30402374 130.69053650]
[115.96221161 119.82559204]
[108.15798950 107.01062775]
[109.49622345 121.95081329]
[112.98094177 127.56937408]
[113.08887482 133.25138855]
[110.64509583 137.35467529]
[111.53791046 152.32809448]
[112.43072510 167.30149841]
[113.32353973 182.27490234]
[122.43490601 191.40429688]
[122.87027740 203.89405823]
[114.94133759 213.02961731]
[115.61112213 228.01464844]
[116.28090668 242.99969482]
[116.95069122 257.98474121]
[118.17766571 272.93447876]
[119.96013641 287.82818604]
[121.74259949 302.72189331]
[123.52507019 317.61560059]
[125.30753326 332.50933838]
[137.44786072 342.26895142]
[139.04336548 357.39871216]
[129.66423035 368.91250610]
[131.44670105 383.80621338]
[133.22915649 398.69992065]
[135.01162720 413.59365845]
[149.72296143 417.32742310]
[162.08981323 426.12658691]
[170.43966675 438.80114746]
[173.64328003 453.63696289]
[171.26737976 468.62759399]
[163.63328552 481.74572754]
[151.77345276 491.21719360]
[137.29182434 495.76107788]
[122.14692688 494.76287842]
[108.38697815 488.35754395]
[97.87289429 477.41137695]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 199]
[5 198]
[6 197]
[7 196]
[10 193]
[11 192]
[12 191]
[13 190]
[14 189]
[20 188]
[21 187]
[22 186]
[23 185]
[25 182]
[26 181]
[27 180]
[28 179]
[29 176]
[30 175]
[31 147]
[32 146]
[33 145]
[34 143]
[35 142]
[39 139]
[40 138]
[41 137]
[42 136]
[43 135]
[44 134]
[45 133]
[46 132]
[47 131]
[76 130]
[77 129]
[78 128]
[79 127]
[80 126]
[81 121]
[82 120]
[83 119]
[84 118]
[85 117]
[87 116]
[88 115]
[89 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
