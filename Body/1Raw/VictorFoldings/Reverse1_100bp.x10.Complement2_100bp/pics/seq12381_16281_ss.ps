%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCUGACUAUUAUUUCCACCUACGCUGUUACCUAAAAUGUAUUACCCCCAUACUCAAAAAAAACAAUCCCAAUUGCUCCCACCAUUCCUACCCCCCUUAxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[70.34729767 654.48510742]
[55.60253143 651.50073242]
[41.65728760 645.85760498]
[28.98654175 637.74792480]
[18.02184868 627.44793701]
[9.13666630 615.30841064]
[2.63361812 601.74279785]
[-1.26580381 587.21319580]
[-2.42878652 572.21447754]
[-0.81571937 557.25744629]
[3.51845717 542.85156250]
[10.42612267 529.48748779]
[19.67200470 517.62036133]
[30.94119263 507.65441895]
[43.84986115 499.92907715]
[57.95834351 494.70745850]
[72.78611755 492.16741943]
[73.00944519 477.16906738]
[69.96587372 470.43420410]
[73.34940338 461.94952393]
[73.79601288 446.95617676]
[74.24261475 431.96282959]
[71.67774963 427.93411255]
[71.61645508 422.25140381]
[74.93235016 416.53158569]
[75.82516479 401.55816650]
[76.71797943 386.58477783]
[69.75193787 373.41952515]
[78.29692078 360.10437012]
[79.18973541 345.13095093]
[72.22369385 331.96572876]
[80.76867676 318.65054321]
[81.66149139 303.67712402]
[82.55431366 288.70373535]
[83.44712830 273.73031616]
[84.33994293 258.75692749]
[85.23275757 243.78350830]
[78.26671600 230.61827087]
[86.81169891 217.30310059]
[87.70451355 202.32969666]
[79.01594543 187.08255005]
[89.28342438 171.79658508]
[89.95320892 156.81155396]
[90.62299347 141.82650757]
[91.29277802 126.84147644]
[91.96256256 111.85643768]
[85.69034576 99.36040497]
[93.05239868 87.47377777]
[92.82907104 72.47544098]
[91.71341705 57.51699066]
[90.59777069 42.55853653]
[89.48212433 27.60008240]
[75.09011841 22.78906631]
[63.66729355 12.86122131]
[56.93387604 -0.64710158]
[55.88806915 -15.66355515]
[60.65816879 -29.89770508]
[70.48775482 -41.19038391]
[83.85546875 -47.84120560]
[82.73982239 -62.79965973]
[81.62417603 -77.75811005]
[72.37789154 -86.75083923]
[71.75661469 -99.23273468]
[79.54866028 -108.48533630]
[78.65584564 -123.45874023]
[77.76303101 -138.43214417]
[76.20250702 -153.35075378]
[73.97739410 -168.18479919]
[61.55187225 -177.57862854]
[59.50660324 -192.65415955]
[68.53877258 -204.44210815]
[66.31365204 -219.27615356]
[64.08853149 -234.11018372]
[61.86341858 -248.94422913]
[58.61039352 -253.02650452]
[57.37234497 -257.50094604]
[57.96123123 -261.53433228]
[59.88556290 -264.48886108]
[58.32504272 -279.40747070]
[56.76451874 -294.32608032]
[55.20399475 -309.24468994]
[53.64347076 -324.16326904]
[52.08295059 -339.08187866]
[50.52242661 -354.00048828]
[38.52875900 -363.93978882]
[37.15868759 -379.09161377]
[46.70820236 -390.46447754]
[45.14767838 -405.38308716]
[43.58715820 -420.30169678]
[28.64068413 -422.22515869]
[14.54088879 -427.54421997]
[2.04815507 -435.97204590]
[-8.16380024 -447.05413818]
[-15.54425907 -460.19284058]
[-19.69520378 -474.67959595]
[-20.39277649 -489.73318481]
[-17.59935951 -504.54174805]
[-11.46559906 -518.30670166]
[-2.32227969 -530.28570557]
[9.33751011 -539.83276367]
[22.88497353 -546.43298340]
[37.58951187 -549.73040771]
[52.65812683 -549.54730225]
[67.27819061 -545.89349365]
[80.66125488 -538.96600342]
[92.08559418 -529.13842773]
[100.93511200 -516.94073486]
[106.73255157 -503.03082275]
[109.16527557 -488.15872192]
[108.10208893 -473.12655640]
[103.60031891 -458.74493408]
[95.90275574 -445.78945923]
[85.42450714 -434.95883179]
[72.73065186 -426.83706665]
[58.50576019 -421.86221313]
[60.06628418 -406.94360352]
[61.62680817 -392.02499390]
[73.32312012 -382.87451172]
[75.11823273 -367.76715088]
[65.44103241 -355.56100464]
[67.00155640 -340.64239502]
[68.56208038 -325.72381592]
[70.12259674 -310.80520630]
[71.68312073 -295.88659668]
[73.24364471 -280.96798706]
[74.80416870 -266.04937744]
[76.69746399 -251.16935730]
[78.92257690 -236.33531189]
[81.14769745 -221.50126648]
[83.37281036 -206.66722107]
[95.46604919 -198.04809570]
[97.93395233 -183.03596497]
[88.81143188 -170.40991211]
[91.03655243 -155.57586670]
[100.80014801 -166.96324158]
[115.74495697 -168.24885559]
[127.30990601 -158.69627380]
[128.87007141 -143.77761841]
[119.53171539 -132.03900146]
[104.64427948 -130.20481873]
[92.73643494 -139.32496643]
[93.62925720 -124.35155487]
[94.52207184 -109.37815094]
[104.96091461 -95.27149963]
[96.58262634 -78.87376404]
[97.69828033 -63.91530991]
[98.81392670 -48.95685577]
[113.02033234 -44.36259842]
[124.41634369 -34.65299225]
[131.24517822 -21.28392601]
[132.43849182 -6.27847433]
[127.78341675 8.07923794]
[117.95967865 19.59171867]
[104.44057465 26.48443413]
[105.55622101 41.44288635]
[106.67187500 56.40134048]
[107.78752136 71.35979462]
[116.79543304 59.36573029]
[131.09860229 54.84694290]
[145.36228943 59.48882675]
[154.26651001 71.56007385]
[154.49018860 86.55840302]
[145.94992065 98.88981628]
[131.83099365 103.95499420]
[117.39943695 99.86475372]
[108.03743744 88.14356232]
[114.30965424 100.63959503]
[106.94760132 112.52622223]
[106.27781677 127.51126099]
[105.60803223 142.49629211]
[104.93824768 157.48133850]
[104.26846313 172.46636963]
[112.38061523 182.49412537]
[111.51425171 194.96141052]
[102.67791748 203.22250366]
[101.78510284 218.19592285]
[108.68728638 232.43215942]
[100.20616150 244.67633057]
[99.31334686 259.64974976]
[98.42053223 274.62313843]
[97.52771759 289.59655762]
[96.63490295 304.56994629]
[95.74208069 319.54336548]
[102.64426422 333.77960205]
[94.16313934 346.02377319]
[93.27032471 360.99716187]
[100.17250824 375.23342896]
[91.69138336 387.47760010]
[90.79856873 402.45098877]
[89.90575409 417.42440796]
[89.23596954 432.40945435]
[88.78936005 447.40280151]
[88.34275818 462.39614868]
[88.00778198 477.39239502]
[87.78445435 492.39074707]
[102.53002167 495.37112427]
[116.47678375 501.01049805]
[129.14971924 509.11676025]
[140.11718750 519.41381836]
[149.00564575 531.55096436]
[155.51234436 545.11480713]
[159.41567993 559.64331055]
[160.58270264 574.64172363]
[158.97367859 589.59918213]
[154.64338684 604.00628662]
[147.73931885 617.37219238]
[138.49662781 629.24182129]
[127.23013306 639.21081543]
[114.32354736 646.93963623]
[100.21647644 652.16503906]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 195]
[18 194]
[20 193]
[21 192]
[22 191]
[25 190]
[26 189]
[27 188]
[29 186]
[30 185]
[32 183]
[33 182]
[34 181]
[35 180]
[36 179]
[37 178]
[39 176]
[40 175]
[42 172]
[43 171]
[44 170]
[45 169]
[46 168]
[48 166]
[49 157]
[50 156]
[51 155]
[52 154]
[59 147]
[60 146]
[61 145]
[64 143]
[65 142]
[66 141]
[67 134]
[68 133]
[71 130]
[72 129]
[73 128]
[74 127]
[78 126]
[79 125]
[80 124]
[81 123]
[82 122]
[83 121]
[84 120]
[87 117]
[88 116]
[89 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
