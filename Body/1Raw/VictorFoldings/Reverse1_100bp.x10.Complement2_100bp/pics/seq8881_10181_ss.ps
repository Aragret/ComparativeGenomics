%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[-32.19617081 325.19924927]
[-24.97771454 338.37203979]
[-19.50307083 352.35977173]
[-15.86213779 366.93276978]
[-14.11470413 381.85168457]
[-14.28946304 396.87161255]
[-16.38354683 411.74584961]
[-20.36256599 426.23019409]
[-26.16118240 440.08676147]
[-33.68417740 453.08801270]
[-42.80801773 465.02047729]
[-53.38288116 475.68823242]
[-65.23512268 484.91604614]
[-78.17010498 492.55242920]
[-91.97544098 498.47198486]
[-106.42442322 502.57751465]
[-121.27978516 504.80157471]
[-136.29759216 505.10763550]
[-151.23124695 503.49072266]
[-165.83551025 499.97735596]
[-179.87057495 494.62524414]
[-193.10597229 487.52224731]
[-205.32437134 478.78500366]
[-216.32511902 468.55700684]
[-225.92758179 457.00619507]
[-233.97407532 444.32226562]
[-240.33247375 430.71347046]
[-244.89836121 416.40332031]
[-247.59677124 401.62673950]
[-248.38339233 386.62643433]
[-247.24528503 371.64868164]
[-244.20117188 356.93942261]
[-239.30101013 342.74026489]
[-232.62528992 329.28430176]
[-224.28361511 316.79251099]
[-214.41297913 305.47000122]
[-203.17544556 295.50274658]
[-190.75555420 287.05438232]
[-177.35726929 280.26367188]
[-163.20057678 275.24206543]
[-148.51794434 272.07208252]
[-133.55049133 270.80575562]
[-118.54398346 271.46386719]
[-103.74485016 274.03561401]
[-89.39609528 278.47875977]
[-75.73334503 284.72036743]
[-62.98096085 292.65792847]
[-53.49206161 281.04067993]
[-44.00316238 269.42340088]
[-34.51426697 257.80615234]
[-25.02536774 246.18888855]
[-27.42617035 229.54331970]
[-16.83681107 216.04589844]
[0.57423228 214.35034180]
[9.88911533 202.59309387]
[19.20399857 190.83584595]
[21.04290962 176.05519104]
[35.67733383 170.04318237]
[37.51624298 155.26254272]
[52.15066910 149.25053406]
[61.46555328 137.49328613]
[63.08647156 120.01931763]
[80.26201630 113.37987518]
[89.40081787 101.48524475]
[96.96520233 88.53224182]
[94.30808258 70.31079865]
[108.73046875 60.31271744]
[114.39325714 46.42268753]
[120.05604553 32.53266144]
[125.71883392 18.64263535]
[128.71360779 3.94463134]
[128.93693542 -11.05370617]
[129.16026306 -26.05204391]
[129.38359070 -41.05038071]
[120.97647095 -50.83215714]
[121.47125244 -63.31970978]
[130.05770874 -71.84024048]
[130.50430298 -86.83358765]
[130.95091248 -101.82693481]
[131.28588867 -116.82319641]
[120.55830383 -128.11729431]
[120.99844360 -143.32455444]
[131.83174133 -153.48207092]
[132.05506897 -168.48040771]
[132.27839661 -183.47874451]
[132.50172424 -198.47708130]
[132.72505188 -213.47541809]
[117.92366791 -216.10507202]
[103.73582458 -221.07510376]
[90.52902222 -228.25677490]
[78.64534760 -237.46408081]
[68.39262390 -248.45852661]
[60.03641891 -260.95532227]
[53.79317474 -274.63079834]
[49.82461166 -289.13067627]
[48.23352051 -304.07940674]
[49.06111526 -319.08978271]
[52.28595734 -333.77297974]
[57.82452393 -347.74868774]
[65.53334045 -360.65490723]
[75.21274567 -372.15731812]
[86.61199951 -381.95797729]
[99.43585205 -389.80303955]
[113.35212708 -395.48928833]
[128.00036621 -398.86944580]
[143.00112915 -399.85595703]
[157.96586609 -398.42324829]
[172.50697327 -394.60845947]
[186.24777222 -388.51040649]
[198.83236694 -380.28698730]
[209.93476868 -370.15127563]
[219.26741028 -358.36578369]
[226.58854675 -345.23577881]
[231.70854187 -331.10134888]
[234.49478149 -316.32864380]
[234.87509155 -301.30029297]
[232.83963013 -286.40554810]
[228.44110107 -272.03024292]
[221.79345703 -258.54675293]
[213.06887817 -246.30427551]
[202.49336243 -235.61996460]
[190.34082031 -226.77056885]
[176.92605591 -219.98529053]
[162.59651184 -215.43988037]
[147.72338867 -213.25209045]
[147.50006104 -198.25375366]
[147.27673340 -183.25541687]
[147.05340576 -168.25708008]
[146.83007812 -153.25874329]
[157.35615540 -142.78318787]
[157.34332275 -127.56955719]
[146.28422546 -116.59986877]
[149.32778931 -109.86499786]
[145.94425964 -101.38033295]
[145.49766541 -86.38698578]
[145.05105591 -71.39363098]
[154.18974304 -56.41193008]
[144.38192749 -40.82705307]
[144.15859985 -25.82871628]
[143.93527222 -10.83037853]
[143.71194458 4.16795874]
[150.54965210 -9.18291473]
[160.24572754 -20.62782288]
[172.29156494 -29.56638908]
[186.05523682 -35.52971649]
[200.81474304 -38.20497513]
[215.79582214 -37.45183182]
[230.21260071 -33.30979156]
[243.30880737 -25.99614143]
[254.39743042 -15.89453602]
[262.89678955 -3.53488779]
[268.36102295 10.43444061]
[270.50347900 25.28064728]
[269.21179199 40.22492599]
[264.55371094 54.48333740]
[256.77359009 67.30790710]
[246.27954102 78.02588654]
[233.62208557 86.07502747]
[219.46519470 91.03309631]
[204.55151367 92.63999939]
[189.66339111 90.81143951]
[175.58180237 85.64334106]
[163.04548645 77.40680695]
[152.71202087 66.53392029]
[145.12351990 53.59503937]
[140.67803955 39.26892090]
[139.60885620 24.30542183]
[133.94607544 38.19544983]
[128.28327942 52.08547592]
[122.62049866 65.97550201]
[127.02137756 77.24310303]
[122.41729736 88.86145782]
[110.76937866 94.40120697]
[122.48728180 85.03687286]
[136.58854675 79.92276001]
[151.58505249 79.59856415]
[165.89414978 84.09850311]
[178.00579834 92.94769287]
[186.64179993 105.21224976]
[190.89079285 119.59786987]
[190.30436707 134.58641052]
[184.94441223 148.59606934]
[175.37657166 160.14840698]
[162.61056519 168.02426147]
[147.99362183 171.39247131]
[133.06829834 169.89758301]
[119.40969849 163.69737244]
[108.45925140 153.44613647]
[101.37258148 140.22573853]
[98.89756012 125.43133545]
[101.29545593 110.62404633]
[92.15665436 122.51867676]
[93.05537415 135.38549805]
[85.19876862 145.10443115]
[73.22280121 146.80816650]
[63.90792084 158.56541443]
[61.40274811 174.18702698]
[47.43458557 179.35807800]
[44.92941284 194.97967529]
[30.96124840 200.15072632]
[21.64636612 211.90797424]
[12.33148384 223.66523743]
[15.41208172 236.77722168]
[10.45087624 249.08969116]
[-0.53310174 256.19140625]
[-13.40810394 255.67778015]
[-22.89700317 267.29504395]
[-32.38590240 278.91232300]
[-41.87479782 290.52957153]
[-51.36369705 302.14682007]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 210]
[48 209]
[49 208]
[50 207]
[51 206]
[54 202]
[55 201]
[56 200]
[58 198]
[60 196]
[61 195]
[63 192]
[64 191]
[65 173]
[67 170]
[68 169]
[69 168]
[70 167]
[71 141]
[72 140]
[73 139]
[74 138]
[77 136]
[78 135]
[79 134]
[80 132]
[83 129]
[84 128]
[85 127]
[86 126]
[87 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
