%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[77.62739563 380.78833008]
[74.24862671 395.42724609]
[68.90792847 409.46972656]
[61.70479584 422.65411377]
[52.77341843 434.73486328]
[42.28018951 445.48687744]
[30.42058182 454.70986938]
[17.41553688 462.23199463]
[3.50733113 467.91317749]
[-11.04493523 471.64749146]
[-25.97016144 473.36544800]
[-40.99029922 473.03503418]
[-55.82553482 470.66235352]
[-70.19949341 466.29165649]
[-83.84440613 460.00436401]
[-96.50605774 451.91757202]
[-107.94859314 442.18194580]
[-117.95882416 430.97885132]
[-126.35028076 418.51702881]
[-132.96662903 405.02859497]
[-137.68460083 390.76486206]
[-140.41632080 375.99151611]
[-141.11090088 360.98382568]
[-139.75537109 346.02130127]
[-136.37501526 331.38278198]
[-131.03280640 317.34088135]
[-123.82824707 304.15725708]
[-114.89556122 292.07748413]
[-104.40116882 281.32659912]
[-92.54056549 272.10488892]
[-79.53470612 264.58416748]
[-65.62588501 258.90451050]
[-51.07321548 255.17175293]
[-36.14780045 253.45541382]
[-21.12769890 253.78747559]
[-6.29272032 256.16174316]
[8.08076668 260.53399658]
[14.35812759 246.91067505]
[20.63548851 233.28736877]
[26.91284943 219.66404724]
[26.12874222 214.95297241]
[28.29578018 209.69931030]
[33.58528519 205.73286438]
[40.26548004 192.30249023]
[46.94567490 178.87211609]
[53.62586975 165.44174194]
[60.30606461 152.01136780]
[59.04645157 137.17012024]
[72.11996460 128.25979614]
[59.03012848 135.58483887]
[44.03829956 136.07994080]
[30.49369431 129.63450623]
[21.42220879 117.68845367]
[18.85043716 102.91056824]
[23.35291862 88.60225677]
[33.92378616 77.96004486]
[48.20148468 73.36141968]
[62.99633789 75.83373260]
[75.00313568 84.82466125]
[81.53953552 98.32560730]
[81.14527130 113.32044983]
[89.92588043 101.15898895]
[91.71604156 93.29973602]
[98.92884827 88.88314819]
[107.88954926 76.85376740]
[116.85024261 64.82439423]
[125.81093597 52.79501343]
[134.77163696 40.76563644]
[120.27745819 44.62811661]
[105.96376801 40.14277267]
[96.26581573 28.69944382]
[94.18862915 13.84396458]
[100.37583160 0.17946723]
[112.91026306 -8.05995369]
[127.90798950 -8.32122421]
[140.72180176 -0.52338737]
[147.38119507 12.91731262]
[145.82260132 27.83636856]
[156.31010437 17.11198807]
[166.79760742 6.38760805]
[165.09782410 -6.97372961]
[171.31303406 -18.70324898]
[182.97624207 -24.62370872]
[195.72793579 -22.77341652]
[206.37394714 -33.34046555]
[210.71769714 -48.55369568]
[225.20137024 -52.02825165]
[235.84738159 -62.59529877]
[244.98619080 -74.48992920]
[252.45393372 -87.49888611]
[259.92166138 -100.50783539]
[267.38940430 -113.51678467]
[274.85714722 -126.52574158]
[282.32489014 -139.53469849]
[289.79263306 -152.54364014]
[297.26037598 -165.55259705]
[304.72811890 -178.56155396]
[312.19586182 -191.57049561]
[300.18707275 -200.59097290]
[289.37786865 -211.01884460]
[279.93206787 -222.69602966]
[271.99291992 -235.44551086]
[265.68072510 -249.07400513]
[261.09121704 -263.37490845]
[258.29394531 -278.13143921]
[257.33132935 -293.11987305]
[258.21795654 -308.11297607]
[260.94039917 -322.88348389]
[265.45736694 -337.20748901]
[271.70037842 -350.86779785]
[279.57482910 -363.65734863]
[288.96130371 -375.38229370]
[299.71752930 -385.86480713]
[311.68041992 -394.94601440]
[324.66864014 -402.48828125]
[338.48532104 -408.37722778]
[352.92092896 -412.52359009]
[367.75668335 -414.86450195]
[382.76766968 -415.36447144]
[397.72631836 -414.01593018]
[412.40585327 -410.83935547]
[426.58377075 -405.88284302]
[440.04507446 -399.22155762]
[452.58575439 -390.95651245]
[464.01565552 -381.21295166]
[474.16149902 -370.13861084]
[482.86953735 -357.90136719]
[490.00769043 -344.68673706]
[495.46780396 -330.69506836]
[499.16705322 -316.13845825]
[501.04937744 -301.23757935]
[501.08627319 -286.21829224]
[499.27713013 -271.30834961]
[495.64938354 -256.73373413]
[490.25805664 -242.71543884]
[483.18484497 -229.46592712]
[474.53701782 -217.18608093]
[464.44564819 -206.06205750]
[453.06372070 -196.26249695]
[440.56381226 -187.93594360]
[427.13534546 -181.20866394]
[412.98196411 -176.18260193]
[398.31820679 -172.93395996]
[383.36636353 -171.51199341]
[368.35308838 -171.93826294]
[353.50601196 -174.20631409]
[339.05020142 -178.28173828]
[325.20480347 -184.10276794]
[317.73706055 -171.09381104]
[310.26931763 -158.08485413]
[302.80157471 -145.07589722]
[295.33383179 -132.06695557]
[287.86608887 -119.05799866]
[280.39834595 -106.04904938]
[272.93063354 -93.04009247]
[265.46289062 -80.03114319]
[257.99514771 -67.02218628]
[270.67349243 -75.03838348]
[285.19281006 -78.80528259]
[300.16918945 -77.96386719]
[314.17517090 -72.59431458]
[325.87582397 -63.20843506]
[334.15591431 -50.70082474]
[338.22619629 -36.26362228]
[337.69876099 -21.27289963]
[332.62384033 -7.15747213]
[323.48519897 4.73726749]
[311.15380859 13.27758789]
[296.80505371 17.64948082]
[281.80657959 17.43624306]
[267.58792114 12.65820217]
[255.50430298 3.77076817]
[246.70748901 -8.37896442]
[242.03591919 -22.63295937]
[241.93484497 -37.63261795]
[246.41442871 -51.94928741]
[235.76841736 -41.38224030]
[232.18614197 -26.92483711]
[216.94099426 -22.69445610]
[206.29498291 -12.12740898]
[206.95103455 4.67760134]
[195.01493835 17.00011826]
[177.52198792 16.87510872]
[167.03448486 27.59948921]
[156.54698181 38.32386780]
[146.80101013 49.72632980]
[137.84031677 61.75571060]
[128.87962341 73.78508759]
[119.91892242 85.81446075]
[110.95822906 97.84384155]
[102.08733368 109.93959045]
[93.30673218 122.10105133]
[85.55033875 134.93998718]
[86.33213806 150.74186707]
[73.73644257 158.69155884]
[67.05624390 172.12193298]
[60.37604904 185.55230713]
[53.69585419 198.98268127]
[47.01565933 212.41307068]
[40.53616714 225.94140625]
[34.25880432 239.56472778]
[27.98144341 253.18804932]
[21.70408249 266.81137085]
[34.36661530 274.89678955]
[45.81019974 284.63116455]
[55.82164764 295.83316040]
[64.21444702 308.29406738]
[70.83225250 321.78179932]
[75.55178070 336.04501343]
[78.28509521 350.81805420]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 203]
[38 202]
[39 201]
[40 200]
[43 199]
[44 198]
[45 197]
[46 196]
[47 195]
[49 193]
[61 192]
[62 191]
[64 190]
[65 189]
[66 188]
[67 187]
[68 186]
[78 185]
[79 184]
[80 183]
[84 180]
[85 179]
[87 177]
[88 176]
[89 157]
[90 156]
[91 155]
[92 154]
[93 153]
[94 152]
[95 151]
[96 150]
[97 149]
[98 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
