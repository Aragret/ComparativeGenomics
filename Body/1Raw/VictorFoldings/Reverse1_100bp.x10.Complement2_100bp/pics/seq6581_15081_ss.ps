%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[130.48918152 530.45880127]
[126.11543274 516.08874512]
[123.61525726 501.27737427]
[123.02969360 486.26785278]
[124.36837006 471.30670166]
[127.60929871 456.63955688]
[132.69926453 442.50729370]
[139.55467224 429.14199829]
[148.06297302 416.76309204]
[158.08444214 405.57388306]
[169.45449829 395.75808716]
[181.98646545 387.47689819]
[195.47454834 380.86627197]
[190.64855957 366.66381836]
[185.82255554 352.46136475]
[180.99655151 338.25891113]
[176.17056274 324.05645752]
[171.34455872 309.85400391]
[157.91204834 303.52130127]
[152.81547546 289.18673706]
[159.54887390 275.14041138]
[154.72288513 260.93795776]
[140.92115784 250.09918213]
[144.65812683 232.06819153]
[139.62120056 217.93916321]
[134.27001953 203.92613220]
[128.60723877 190.03610229]
[122.94445038 176.14608765]
[117.28166199 162.25605774]
[105.31211853 153.39155579]
[107.26704407 137.69158936]
[101.60425568 123.80156708]
[95.94147491 109.91153717]
[88.47373199 96.90258789]
[73.93043518 90.67337036]
[72.31179047 75.86697388]
[63.17298889 63.97233963]
[54.03418732 52.07770920]
[44.89538574 40.18307495]
[35.75658417 28.28844261]
[26.61778069 16.39381027]
[17.47897911 4.49917698]
[19.87686920 19.30627441]
[17.40191460 34.10068512]
[10.31530094 47.32112122]
[-0.63510317 57.57239532]
[-14.29367542 63.77267075]
[-29.21899414 65.26761627]
[-43.83595657 61.89946365]
[-56.60199738 54.02366257]
[-66.16988373 42.47137070]
[-71.52989960 28.46172142]
[-72.11638641 13.47319221]
[-67.86745453 -0.91244501]
[-59.23149872 -13.17703819]
[-47.11989212 -22.02627563]
[-32.81080246 -26.52627754]
[-17.81430626 -26.20214653]
[-3.71301484 -21.08809090]
[8.00505638 -11.72366333]
[2.13609529 -25.52783966]
[-4.10152102 -32.20091629]
[-3.71578836 -39.58150101]
[-9.37857533 -53.47152710]
[-15.04136181 -67.36155701]
[-20.70414734 -81.25157928]
[-35.84293365 -83.43433380]
[-47.77775574 -92.83948517]
[-53.36535263 -106.86251068]
[-51.19812012 -121.70026398]
[-41.95719147 -133.38233948]
[-47.61997986 -147.27236938]
[-53.28276443 -161.16239929]
[-58.94555283 -175.05241394]
[-73.61169434 -171.74272156]
[-88.62258148 -170.89228821]
[-103.56869507 -172.52430725]
[-118.04229736 -176.59428406]
[-131.64854431 -182.99114990]
[-144.01625061 -191.54040527]
[-154.80799866 -202.00883484]
[-163.72938538 -214.11083984]
[-170.53704834 -227.51628113]
[-175.04525757 -241.85943604]
[-177.13101196 -256.74899292]
[-176.73742676 -271.77880859]
[-173.87524414 -286.53881836]
[-168.62252808 -300.62634277]
[-161.12258911 -313.65713501]
[-151.58003235 -325.27560425]
[-140.25518799 -335.16488647]
[-127.45698547 -343.05514526]
[-113.53459167 -348.73110962]
[-98.86781311 -352.03799438]
[-83.85676575 -352.88552856]
[-68.91096497 -351.25061035]
[-54.43814087 -347.17788696]
[-40.83312988 -340.77838135]
[-28.46707916 -332.22674561]
[-17.67734528 -321.75622559]
[-8.75828266 -309.65249634]
[-1.95320725 -296.24575806]
[2.55223227 -281.90173340]
[4.63512468 -267.01174927]
[4.23864698 -251.98204041]
[1.37361562 -237.22257996]
[-3.88180947 -223.13604736]
[-11.38425636 -210.10673523]
[-20.92905235 -198.49008179]
[-32.25580978 -188.60299683]
[-45.05552673 -180.71520996]
[-39.39273834 -166.82518005]
[-33.72995377 -152.93515015]
[-28.06716537 -139.04512024]
[-13.29256725 -137.15386963]
[-1.36902046 -128.06074524]
[4.44051075 -114.12820435]
[2.48337388 -99.05948639]
[-6.81412125 -86.91436768]
[-1.15133452 -73.02433777]
[4.51145220 -59.13431168]
[10.17423820 -45.24428558]
[15.94027233 -31.39680099]
[21.80923271 -17.59262466]
[29.37361145 -4.63962555]
[38.51241302 7.25500774]
[47.65121841 19.14964104]
[56.79001999 31.04427338]
[65.92881775 42.93890762]
[75.06762695 54.83353806]
[84.20642853 66.72817230]
[98.09605408 72.10661316]
[100.36836243 87.76378632]
[97.84168243 72.97811890]
[99.94545746 58.12638474]
[106.47918701 44.62414551]
[116.82009888 33.75835419]
[129.98257446 26.56466866]
[144.71206665 23.72874260]
[159.60461426 25.52088165]
[173.24078369 31.77026749]
[184.32086182 41.88124847]
[191.78875732 54.89011383]
[194.93267822 69.55693817]
[193.45297241 84.48377991]
[187.49066162 98.24789429]
[177.61405945 109.53738403]
[164.76451111 117.27620697]
[150.16677856 120.72674561]
[135.21221924 119.56011200]
[121.32619476 113.88750458]
[109.83149719 104.24875641]
[115.49428558 118.13877869]
[121.15707397 132.02880859]
[133.53166199 141.88681030]
[131.17169189 156.59326172]
[136.83447266 170.48329163]
[142.49726868 184.37332153]
[148.16004944 198.26335144]
[152.28453064 201.46269226]
[154.54348755 205.51860046]
[154.92301941 209.57704163]
[153.75024414 212.90223694]
[158.78715515 227.03126526]
[170.08468628 233.25450134]
[173.98907471 245.12629700]
[168.92533875 256.11196899]
[173.75132751 270.31442261]
[187.64852905 277.35046387]
[192.34045410 291.82254028]
[185.54701233 305.02801514]
[190.37301636 319.23046875]
[195.19902039 333.43292236]
[200.02500916 347.63537598]
[204.85101318 361.83782959]
[209.67700195 376.04028320]
[224.40025330 373.06466675]
[239.38314819 371.99630737]
[254.37963867 372.85275269]
[269.14349365 375.61990356]
[283.43225098 380.25238037]
[297.01129150 386.67404175]
[309.65762329 394.77951050]
[321.16360474 404.43563843]
[331.34027100 415.48385620]
[340.02053833 427.74279785]
[347.06185913 441.01110840]
[352.34860229 455.07095337]
[355.79394531 469.69140625]
[357.34130859 484.63241577]
[356.96533203 499.64865112]
[354.67214966 514.49346924]
[350.49942017 528.92321777]
[344.51565552 542.70080566]
[336.81915283 555.60015869]
[327.53622437 567.40930176]
[316.81939697 577.93438721]
[304.84457397 587.00256348]
[291.80844116 594.46496582]
[277.92501831 600.19903564]
[263.42233276 604.11059570]
[248.53849792 606.13537598]
[233.51794434 606.24023438]
[218.60729980 604.42333984]
[204.05142212 600.71466064]
[190.08932495 595.17492676]
[176.95028687 587.89526367]
[164.85005188 578.99505615]
[153.98733521 568.62060547]
[144.54049683 556.94219971]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 176]
[14 175]
[15 174]
[16 173]
[17 172]
[18 171]
[21 168]
[22 167]
[24 164]
[25 163]
[26 159]
[27 158]
[28 157]
[29 156]
[31 154]
[32 153]
[33 152]
[34 133]
[36 131]
[37 130]
[38 129]
[39 128]
[40 127]
[41 126]
[42 125]
[60 124]
[61 123]
[63 122]
[64 121]
[65 120]
[66 119]
[71 114]
[72 113]
[73 112]
[74 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
