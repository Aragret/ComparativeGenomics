%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUACCAACUAUAACGAUCCCACCGCGAAGGUUAAUCCACGUACUCAUCCACCGGACGUCAUUACAAUCGCCAAUCCGCAUGCCGGUCCCGAUAACCAxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[92.29299164 691.14434814]
[81.55610657 680.65692139]
[71.73444366 669.30780029]
[62.89691162 657.17669678]
[55.10548401 644.34857178]
[48.41482162 630.91351318]
[42.87185287 616.96569824]
[38.51545715 602.60290527]
[35.37619019 587.92602539]
[33.47607803 573.03790283]
[32.82844543 558.04296875]
[33.43783188 543.04650879]
[35.29996872 528.15356445]
[38.40179443 513.46868896]
[42.72154617 499.09490967]
[48.22892761 485.13299561]
[54.88530350 471.68087769]
[62.64398956 458.83294678]
[71.45055389 446.67929077]
[81.24324036 435.30520630]
[91.95333862 424.79046631]
[103.50573730 415.20877075]
[115.81940460 406.62738037]
[128.80795288 399.10647583]
[142.38029480 392.69882202]
[137.13357544 378.64636230]
[131.88685608 364.59387207]
[126.64014435 350.54141235]
[121.28896332 336.52838135]
[115.83360291 322.55557251]
[110.37824249 308.58279419]
[108.94108582 323.51379395]
[103.58045959 337.52319336]
[94.68334961 349.59967041]
[82.89204407 358.87139893]
[69.05776215 364.66906738]
[54.17922974 366.57409668]
[39.33052826 364.44900513]
[25.58360100 358.44717407]
[13.93085003 349.00189209]
[5.21349859 336.79501343]
[0.06085894 322.70779419]
[-1.15509522 307.75714111]
[1.65341687 293.02243042]
[8.28364658 279.56729126]
[18.25695229 268.36312866]
[30.85334969 260.21878052]
[45.16349792 255.72215271]
[60.15433502 255.19787598]
[74.74365234 258.68380737]
[87.87824249 265.92828369]
[98.60990906 276.40832520]
[106.16436005 289.36846924]
[105.27154541 274.39505005]
[94.83270264 260.28839111]
[103.21099091 243.89067078]
[94.54850769 231.77412415]
[101.23796844 217.43669128]
[100.12232208 202.47824097]
[99.00666809 187.51979065]
[97.89102173 172.56134033]
[96.77537537 157.60289001]
[95.65972900 142.64442444]
[94.54407501 127.68597412]
[93.42842865 112.72752380]
[85.71572876 101.06536865]
[91.61312103 88.38812256]
[88.67272949 84.07521820]
[87.77090454 79.52109528]
[88.65814972 75.54267120]
[90.79689789 72.73944855]
[90.35029602 57.74609756]
[89.90368652 42.75274658]
[89.45708466 27.75939560]
[80.62156677 18.36277390]
[80.55825806 5.86558390]
[88.75568390 -3.02985191]
[88.53235626 -18.02818871]
[88.30902863 -33.02652740]
[88.08570099 -48.02486420]
[87.86237335 -63.02320099]
[87.19258881 -78.00823975]
[86.07694244 -92.96669006]
[84.84996033 -107.91642761]
[83.51172638 -122.85661316]
[82.17349243 -137.79679871]
[69.02062988 -145.81604004]
[63.18003464 -159.87808228]
[66.69799042 -174.50982666]
[78.02159882 -184.14900208]
[76.68336487 -199.08918762]
[75.34513092 -214.02937317]
[60.52692795 -216.96153259]
[47.13568497 -223.95091248]
[36.25697708 -234.43090820]
[28.77268791 -247.55195618]
[25.28953552 -262.25039673]
[26.08988380 -277.33471680]
[31.10885048 -291.58206177]
[39.93957520 -303.83746338]
[51.86618423 -313.10745239]
[65.92184448 -318.64053345]
[80.96712494 -319.98818970]
[95.78237915 -317.04113770]
[109.16658783 -310.03829956]
[120.03476715 -299.54739380]
[127.50586700 -286.41882324]
[130.97425842 -271.71688843]
[130.15875244 -256.63339233]
[125.12547302 -242.39111328]
[116.28244781 -230.14457703]
[104.34652710 -220.88658142]
[90.28531647 -215.36761475]
[91.62355042 -200.42742920]
[92.96178436 -185.48724365]
[105.81820679 -178.01393127]
[111.88050842 -164.24031067]
[108.63198853 -149.36413574]
[97.11367798 -139.13502502]
[98.45191193 -124.19484711]
[99.79014587 -109.25466156]
[103.51786041 -102.87297058]
[101.03539276 -94.08234406]
[102.15103912 -79.12388611]
[104.18470001 -77.19454193]
[105.57666016 -74.34339142]
[105.97197723 -70.81081390]
[105.10922241 -66.96111298]
[102.86071014 -63.24652863]
[103.08403778 -48.24819183]
[103.30736542 -33.24985504]
[103.53069305 -18.25151634]
[103.75402069 -3.25317955]
[113.55255890 11.30551529]
[104.45043182 27.31278992]
[104.89704132 42.30614090]
[105.34364319 57.29948807]
[105.79025269 72.29283905]
[106.57157135 87.27247620]
[114.28427124 98.93463135]
[108.38687897 111.61187744]
[109.50253296 126.57032776]
[110.61817932 141.52877808]
[111.73382568 156.48722839]
[112.84947968 171.44569397]
[113.96512604 186.40414429]
[115.08077240 201.36259460]
[116.19641876 216.32104492]
[124.93869781 229.50752258]
[118.16944122 242.77502441]
[127.41572571 251.76774597]
[128.03700256 264.24963379]
[120.24495697 273.50222778]
[121.13777161 288.47564697]
[124.35104370 303.12744141]
[129.80639648 317.10021973]
[135.26176453 331.07302856]
[141.29792786 337.92886353]
[140.69261169 345.29467773]
[145.93933105 359.34716797]
[151.18605042 373.39962769]
[156.43276978 387.45208740]
[170.88345337 383.39691162]
[185.62277222 380.56515503]
[200.54736328 378.97671509]
[215.55252075 378.64270020]
[230.53302002 379.56546021]
[245.38374329 381.73852539]
[260.00054932 385.14666748]
[274.28091431 389.76596069]
[288.12466431 395.56402588]
[301.43466187 402.50015259]
[314.11758423 410.52575684]
[326.08447266 419.58447266]
[337.25134277 429.61279297]
[347.53991699 440.54037476]
[356.87799072 452.29055786]
[365.20010376 464.78091431]
[372.44781494 477.92385864]
[378.57034302 491.62719727]
[383.52471924 505.79476929]
[387.27621460 520.32727051]
[389.79846191 535.12268066]
[391.07385254 550.07727051]
[391.09335327 565.08618164]
[389.85687256 580.04400635]
[387.37307739 594.84594727]
[383.65939331 609.38812256]
[378.74188232 623.56854248]
[372.65499878 637.28778076]
[365.44146729 650.44952393]
[357.15185547 662.96148682]
[347.84436035 674.73590088]
[337.58425903 685.69018555]
[326.44348145 695.74749756]
[314.50018311 704.83728027]
[301.83816528 712.89581299]
[288.54623413 719.86657715]
[274.71762085 725.70056152]
[260.44931030 730.35699463]
[245.84143066 733.80316162]
[230.99638367 736.01483154]
[216.01835632 736.97650146]
[201.01237488 736.68151855]
[186.08369446 735.13183594]
[171.33706665 732.33843994]
[156.87590027 728.32086182]
[142.80162048 723.10723877]
[129.21299744 716.73419189]
[116.20529938 709.24645996]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 162]
[26 161]
[27 160]
[28 159]
[29 157]
[30 156]
[31 155]
[53 154]
[54 153]
[56 150]
[58 148]
[59 147]
[60 146]
[61 145]
[62 144]
[63 143]
[64 142]
[65 141]
[67 139]
[71 138]
[72 137]
[73 136]
[74 135]
[77 133]
[78 132]
[79 131]
[80 130]
[81 129]
[82 124]
[83 123]
[84 121]
[85 120]
[86 119]
[90 115]
[91 114]
[92 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
