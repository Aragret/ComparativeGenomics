%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[10.76855850 264.78900146]
[12.40450287 279.70922852]
[12.73382664 294.71527100]
[11.75402451 309.69290161]
[9.47255325 324.52813721]
[5.90677547 339.10806274]
[1.08383048 353.32174683]
[-4.95957565 367.06097412]
[-12.17744827 380.22122192]
[-20.51485443 392.70227051]
[-29.90834045 404.40917969]
[-40.28641510 415.25283813]
[-51.57009125 425.15072632]
[-63.67349243 434.02749634]
[-76.50450897 441.81558228]
[-89.96547699 448.45574951]
[-103.95395660 453.89743042]
[-118.36347961 458.09921265]
[-133.08438110 461.02911377]
[-148.00462341 462.66485596]
[-163.01066589 462.99395752]
[-177.98828125 462.01394653]
[-192.82348633 459.73226929]
[-207.40336609 456.16629028]
[-221.61697388 451.34313965]
[-235.35612488 445.29953003]
[-248.51626587 438.08148193]
[-260.99722290 429.74389648]
[-272.70397949 420.35025024]
[-283.54751587 409.97201538]
[-293.44522095 398.68820190]
[-302.32180786 386.58468628]
[-310.10974121 373.75357056]
[-316.74969482 360.29251099]
[-322.19119263 346.30395508]
[-326.39276123 331.89434814]
[-329.32244873 317.17343140]
[-330.95797729 302.25314331]
[-331.28689575 287.24710083]
[-330.30667114 272.26950073]
[-328.02478027 257.43432617]
[-324.45858765 242.85449219]
[-319.63525391 228.64096069]
[-313.59146118 214.90188599]
[-306.37322998 201.74186707]
[-298.03546143 189.26103210]
[-288.64166260 177.55438232]
[-278.26327515 166.71101379]
[-266.97930908 156.81344604]
[-254.87567139 147.93702698]
[-242.04443359 140.14929199]
[-228.58328247 133.50950623]
[-214.59465027 128.06822205]
[-200.18499756 123.86685181]
[-185.46401978 120.93735504]
[-170.54373169 119.30204010]
[-155.53768921 118.97334290]
[-140.56008911 119.95378113]
[-125.72495270 122.23587036]
[-111.14516449 125.80226135]
[-96.93169403 130.62580872]
[-83.19271088 136.66979980]
[-70.03278351 143.88821411]
[-57.55207062 152.22615051]
[-45.84555435 161.62013245]
[-35.00233078 171.99865723]
[-25.10492516 183.28274536]
[-13.00917435 174.41184998]
[-0.91342217 165.54095459]
[11.18233013 156.67005920]
[23.21170807 147.70936584]
[35.17404556 138.65936279]
[47.13637924 129.60937500]
[50.57405853 123.06687927]
[59.34486389 120.51525879]
[71.44061279 111.64436340]
[69.20817566 98.24131012]
[72.95216370 85.17961121]
[81.94589996 74.99441528]
[94.44379425 69.66259766]
[108.02009583 70.21900177]
[120.03976440 76.55564880]
[132.26625061 67.86582184]
[139.03236389 53.56442261]
[153.88874817 52.49790192]
[166.11523438 43.80807877]
[178.34172058 35.11825562]
[190.56820679 26.42843056]
[202.79467773 17.73860550]
[215.02116394 9.04878139]
[227.24765015 0.35895655]
[239.47413635 -8.33086777]
[251.16172791 -17.73301888]
[262.26895142 -27.81415749]
[273.37619019 -37.89529800]
[284.33209229 -48.14068985]
[295.13424683 -58.54806137]
[305.93640137 -68.95543671]
[316.73855591 -79.36280823]
[307.36514282 -91.08730316]
[299.11352539 -103.62665558]
[292.05410767 -116.87389374]
[286.24713135 -130.71598816]
[281.74212646 -145.03483582]
[278.57751465 -159.70828247]
[276.78030396 -174.61112976]
[276.36584473 -189.61621094]
[277.33767700 -204.59555054]
[279.68746948 -219.42129517]
[283.39523315 -233.96699524]
[288.42929077 -248.10853577]
[294.74667358 -261.72525024]
[302.29354858 -274.70098877]
[311.00549316 -286.92501831]
[320.80813599 -298.29302979]
[331.61791992 -308.70809937]
[343.34255981 -318.08132935]
[355.88208008 -326.33273315]
[369.12942505 -333.39193726]
[382.97161865 -339.19866943]
[397.29052734 -343.70346069]
[411.96401978 -346.86782837]
[426.86691284 -348.66476440]
[441.87200928 -349.07897949]
[456.85131836 -348.10690308]
[471.67703247 -345.75686646]
[486.22265625 -342.04885864]
[500.36410522 -337.01458740]
[513.98071289 -330.69696045]
[526.95635986 -323.14987183]
[539.18023682 -314.43774414]
[550.54809570 -304.63488770]
[560.96295166 -293.82492065]
[570.33599854 -282.10012817]
[578.58721924 -269.56048584]
[585.64617920 -256.31301880]
[591.45269775 -242.47073364]
[595.95721436 -228.15173340]
[599.12133789 -213.47817993]
[600.91802979 -198.57528687]
[601.33203125 -183.57017517]
[600.35968018 -168.59088135]
[598.00939941 -153.76519775]
[594.30114746 -139.21963501]
[589.26666260 -125.07826233]
[582.94879150 -111.46175385]
[575.40148926 -98.48628235]
[566.68914795 -86.26254272]
[556.88610840 -74.89482880]
[546.07598877 -64.48012543]
[534.35101318 -55.10729980]
[521.81121826 -46.85631180]
[508.56365967 -39.79755783]
[494.72128296 -33.99126053]
[480.40219116 -29.48695755]
[465.72860718 -26.32308388]
[450.82565308 -24.52663040]
[435.82055664 -24.11292267]
[420.84127808 -25.08549309]
[406.01562500 -27.43604279]
[391.47012329 -31.14451599]
[377.32882690 -36.17927551]
[363.71243286 -42.49736023]
[350.73709106 -50.04487228]
[338.51348877 -58.75741577]
[327.14593506 -68.56065369]
[316.34378052 -58.15327835]
[305.54162598 -47.74590683]
[294.73947144 -37.33853149]
[293.75650024 -32.66490173]
[289.82717896 -28.55913925]
[283.45733643 -26.78806305]
[272.35009766 -16.70692444]
[261.24285889 -6.62578535]
[276.24032593 -6.90181112]
[288.60147095 1.59537590]
[293.71588135 15.69653511]
[289.67602539 30.14228249]
[277.98867798 39.54471207]
[263.01290894 40.39694977]
[250.33432007 32.38113022]
[244.68170166 18.48695946]
[248.16397095 3.89561772]
[235.93748474 12.58544254]
[223.71099854 21.27526665]
[211.48451233 29.96509171]
[199.25802612 38.65491486]
[187.03153992 47.34473801]
[174.80505371 56.03456497]
[162.57856750 64.72438812]
[156.68696594 78.40423584]
[140.95606995 80.09230804]
[128.72958374 88.78213501]
[130.47308350 104.75612640]
[123.94477081 119.43907928]
[110.91672516 128.84536743]
[94.92536926 130.42166138]
[80.31150818 123.74011230]
[68.21575928 132.61100769]
[56.18638229 141.57170105]
[44.22404480 150.62170410]
[32.26170731 159.67170715]
[27.30601692 167.34497070]
[20.05322456 168.76582336]
[7.95747328 177.63671875]
[-4.13827848 186.50761414]
[-16.23402977 195.37850952]
[-8.44575310 208.20941162]
[-1.80540943 221.67028809]
[3.63646197 235.65869141]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[67 207]
[68 206]
[69 205]
[70 204]
[71 202]
[72 201]
[73 200]
[75 199]
[76 198]
[82 193]
[83 192]
[85 190]
[86 189]
[87 188]
[88 187]
[89 186]
[90 185]
[91 184]
[92 183]
[93 174]
[94 173]
[95 172]
[96 169]
[97 168]
[98 167]
[99 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
