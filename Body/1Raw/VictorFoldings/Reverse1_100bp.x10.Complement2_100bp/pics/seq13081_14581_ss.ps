%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGGAUUCGUAUCACAAUCUCAAACCUAAUCACCCGAUAAAAGACGAUCCCCCACCUUCGCCUACUCAUUCUUCUAAGGACGAUGUUGAUAUCACGAACxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[102.19520569 477.38934326]
[97.31079865 463.18280029]
[94.36358643 448.45196533]
[93.40616608 433.45974731]
[94.45561981 418.47366333]
[97.49322510 403.76119995]
[102.46475983 389.58493042]
[109.28150940 376.19778442]
[117.82182312 363.83871460]
[127.93328094 352.72827148]
[139.43544006 343.06475830]
[152.12303162 335.02059937]
[165.76962280 328.73934937]
[161.36862183 314.39950562]
[156.96762085 300.05966187]
[152.56661987 285.71981812]
[148.16563416 271.37997437]
[144.44096375 268.39065552]
[142.55461121 263.02981567]
[143.85394287 256.54727173]
[139.88185120 242.08276367]
[135.90974426 227.61822510]
[131.93765259 213.15370178]
[127.96555328 198.68917847]
[123.99346161 184.22465515]
[119.27332306 169.98667908]
[113.81797028 156.01387024]
[108.36260986 142.04107666]
[102.90725708 128.06828308]
[97.45189667 114.09548187]
[86.65695953 105.20948029]
[88.57530212 91.35987854]
[83.11994934 77.38707733]
[77.66458893 63.41427994]
[72.20923615 49.44148254]
[66.75387573 35.46868515]
[61.83933258 31.04615211]
[60.14964294 25.62010574]
[61.35092545 20.99777222]
[56.31401062 6.86874342]
[51.27709579 -7.26028585]
[46.24017715 -21.38931465]
[41.20326233 -35.51834488]
[36.16634369 -49.64737320]
[31.12942886 -63.77640533]
[19.20737267 -74.17713165]
[22.22166252 -88.76354218]
[17.18474579 -102.89257050]
[12.14782906 -117.02159882]
[5.36783791 -130.40187073]
[-3.04678082 -142.81936646]
[-11.46139908 -155.23686218]
[-19.87601852 -167.65435791]
[-28.29063606 -180.07185364]
[-36.70525360 -192.48934937]
[-49.92149734 -185.36741638]
[-63.79045486 -179.61911011]
[-78.16980743 -175.30342102]
[-92.91200256 -172.46463013]
[-107.86575317 -171.13185120]
[-122.87761688 -171.31880188]
[-137.79354858 -173.02352905]
[-152.46047974 -176.22854614]
[-166.72790527 -180.90097046]
[-180.44941711 -186.99284363]
[-193.48422241 -194.44168091]
[-205.69854736 -203.17102051]
[-216.96705627 -213.09129333]
[-227.17410278 -224.10069275]
[-236.21498108 -236.08624268]
[-243.99688721 -248.92497253]
[-250.43998718 -262.48510742]
[-255.47813416 -276.62753296]
[-259.05966187 -291.20709229]
[-261.14779663 -306.07421875]
[-261.72109985 -321.07629395]
[-260.77374268 -336.05938721]
[-258.31536865 -350.86978149]
[-254.37127686 -365.35546875]
[-248.98190308 -379.36779785]
[-242.20254517 -392.76300049]
[-234.10278320 -405.40359497]
[-224.76574707 -417.15991211]
[-214.28721619 -427.91125488]
[-202.77474976 -437.54733276]
[-190.34646606 -445.96926880]
[-177.12991333 -453.09060669]
[-163.26069641 -458.83831787]
[-148.88116455 -463.15338135]
[-134.13883972 -465.99151611]
[-119.18502808 -467.32363892]
[-104.17317200 -467.13601685]
[-89.25732422 -465.43063354]
[-74.59053040 -462.22497559]
[-60.32331085 -457.55194092]
[-46.60206604 -451.45944214]
[-33.56759262 -444.01004028]
[-21.35365486 -435.28015137]
[-10.08558369 -425.35940552]
[0.12099207 -414.34954834]
[9.16133690 -402.36358643]
[16.94268036 -389.52450562]
[23.38517380 -375.96408081]
[28.42270660 -361.82144165]
[32.00358582 -347.24172974]
[34.09106827 -332.37454224]
[34.66372681 -317.37243652]
[33.71569061 -302.38937378]
[31.25668335 -287.57910156]
[27.31194305 -273.09356689]
[21.92194557 -259.08148193]
[15.14200497 -245.68656921]
[7.04169083 -233.04632568]
[-2.29587221 -221.29043579]
[-12.77486610 -210.53955078]
[-24.28775978 -200.90396118]
[-15.87314129 -188.48648071]
[-7.45852232 -176.06898499]
[0.95609611 -163.65148926]
[9.37071514 -151.23399353]
[17.78533363 -138.81649780]
[16.27302933 -153.74006653]
[19.62417412 -168.36093140]
[27.48511887 -181.13612366]
[39.02627563 -190.71743774]
[53.02967834 -196.09375000]
[68.01751709 -196.69767761]
[82.40808868 -192.46548462]
[94.68271637 -183.84379578]
[103.54603577 -171.74249268]
[108.06268311 -157.43864441]
[107.75599670 -142.44178772]
[102.65834808 -128.33454895]
[93.30770111 -116.60572815]
[80.69084930 -108.49307251]
[66.13928986 -104.85274506]
[51.18867111 -106.06890869]
[37.41677475 -112.01322174]
[26.27685928 -122.05851746]
[31.31377411 -107.92948914]
[36.35069275 -93.80045319]
[47.91247559 -84.41033173]
[45.25845718 -68.81332397]
[50.29537582 -54.68429184]
[55.33229065 -40.55525970]
[60.36920929 -26.42623138]
[65.40612030 -12.29720211]
[70.44303894 1.83182740]
[75.47995758 15.96085644]
[80.72667694 30.01332855]
[86.18202972 43.98612595]
[91.63739014 57.95892334]
[97.09274292 71.93172455]
[102.54810333 85.90451813]
[113.34304047 94.79051971]
[111.42469788 108.64012146]
[116.88005066 122.61292267]
[122.33541107 136.58572388]
[127.79076385 150.55851746]
[133.24612427 164.53131104]
[139.18836975 150.75852966]
[152.53646851 143.91540527]
[167.18785095 147.13053894]
[176.44409180 158.93402100]
[176.07337952 173.92942810]
[166.24517822 185.26109314]
[151.45283508 187.74832153]
[138.45797729 180.25256348]
[142.43008423 194.71708679]
[146.40217590 209.18161011]
[150.37426758 223.64613342]
[154.34637451 238.11065674]
[158.31846619 252.57518005]
[162.50547791 266.97897339]
[166.90647888 281.31881714]
[171.30747986 295.65866089]
[175.70846558 309.99850464]
[180.10946655 324.33834839]
[194.93019104 321.88278198]
[209.94595337 321.42459106]
[224.88882446 322.97195435]
[239.49209595 326.49728394]
[253.49516296 331.93762207]
[266.64813232 339.19589233]
[278.71627808 348.14260864]
[289.48422241 358.61804199]
[298.75979614 370.43527222]
[306.37747192 383.38342285]
[312.20129395 397.23141479]
[316.12731934 411.73208618]
[318.08554077 426.62667847]
[318.04092407 441.64938354]
[315.99435425 456.53207397]
[311.98226929 471.00918579]
[306.07635498 484.82235718]
[298.38192749 497.72506714]
[289.03637695 509.48703003]
[278.20642090 519.89837646]
[266.08538818 528.77325439]
[252.88954163 535.95330811]
[238.85441589 541.31042480]
[224.23046875 544.74896240]
[209.27868652 546.20758057]
[194.26589966 545.66027832]
[179.46002197 543.11676025]
[165.12528992 538.62243652]
[151.51753235 532.25750732]
[138.87956238 524.13562012]
[127.43695831 514.40167236]
[117.39389801 503.22933960]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 178]
[14 177]
[15 176]
[16 175]
[17 174]
[20 173]
[21 172]
[22 171]
[23 170]
[24 169]
[25 168]
[26 160]
[27 159]
[28 158]
[29 157]
[30 156]
[32 154]
[33 153]
[34 152]
[35 151]
[36 150]
[39 149]
[40 148]
[41 147]
[42 146]
[43 145]
[44 144]
[45 143]
[47 141]
[48 140]
[49 139]
[50 121]
[51 120]
[52 119]
[53 118]
[54 117]
[55 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
