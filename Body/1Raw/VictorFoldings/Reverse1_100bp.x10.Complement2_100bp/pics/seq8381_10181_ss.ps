%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[238.31977844 602.94323730]
[242.66827393 588.37756348]
[252.26367188 576.58789062]
[265.64276123 569.37200928]
[264.08224487 554.45343018]
[262.52172852 539.53485107]
[260.96118164 524.61621094]
[259.40066528 509.69760132]
[255.53636169 495.20391846]
[249.46252441 481.48864746]
[238.29479980 476.84017944]
[233.12234497 465.46347046]
[237.21453857 453.23168945]
[231.34558105 439.42749023]
[225.47662354 425.62332153]
[219.60765076 411.81915283]
[205.74134827 406.50305176]
[199.59274292 392.58724976]
[205.26277161 378.07904053]
[199.39379883 364.27487183]
[193.52484131 350.47067261]
[179.28486633 353.41180420]
[164.73966980 353.51007080]
[150.45149231 350.75970459]
[136.97294617 345.26513672]
[124.82575989 337.23693848]
[114.48052216 326.98379517]
[106.33848572 314.90060425]
[100.71595764 301.45339966]
[97.83206940 287.16110229]
[97.80020142 272.57586670]
[100.62351990 258.26135254]
[106.19480896 244.77130127]
[114.30052948 232.62785339]
[124.62898254 222.30145264]
[136.78233337 214.19264221]
[131.11953735 200.30261230]
[125.45675659 186.41258240]
[119.79396820 172.52256775]
[114.13117981 158.63253784]
[110.15467834 155.98745728]
[107.79757690 150.81626892]
[108.51338196 144.24366760]
[103.26666260 130.19119263]
[98.01994324 116.13872528]
[87.73484039 110.67449188]
[83.74244690 99.73365021]
[88.09108734 88.92945862]
[83.05416870 74.80043030]
[79.94939423 89.47559357]
[71.21019745 101.66683960]
[58.30929947 109.31973267]
[43.42072296 111.14463043]
[29.05345345 106.83399963]
[17.62862778 97.11425781]
[11.07153320 83.62335205]
[10.48715210 68.63473511]
[15.97396564 54.67426300]
[26.60734749 44.09450912]
[40.59538651 38.67834854]
[55.58085251 39.33850479]
[69.03842926 45.96372986]
[78.70107269 57.43901062]
[76.47595215 42.60496902]
[74.25083160 27.77092361]
[72.02571869 12.93688011]
[57.50584793 8.36142826]
[46.45744324 -2.02219844]
[41.03520203 -16.11544228]
[42.26461029 -31.10375595]
[49.84843826 -44.01866913]
[62.23628235 -52.32570267]
[60.01116562 -67.15974426]
[57.78604889 -81.99378967]
[55.45056152 -96.81085968]
[53.00483322 -111.61013031]
[46.24866867 -98.21781158]
[33.75593185 -89.91530609]
[18.79219818 -88.87287140]
[5.26895046 -95.36299896]
[-3.27886701 -107.68918610]
[-4.61687517 -122.62939453]
[1.60467803 -136.27828979]
[13.75949383 -145.06806946]
[28.67033195 -146.70114136]
[42.43953705 -140.75059509]
[51.46753311 -128.77272034]
[51.24420547 -143.77105713]
[51.02087784 -158.76939392]
[43.07897186 -172.45283508]
[50.62592316 -185.29389954]
[50.40259552 -200.29223633]
[50.17926788 -215.29057312]
[49.95594025 -230.28890991]
[42.01403427 -243.97235107]
[49.56098557 -256.81341553]
[49.33765793 -271.81173706]
[49.11433029 -286.81008911]
[35.09481049 -292.75759888]
[24.71115875 -303.89761353]
[19.76240921 -318.30001831]
[21.10596085 -333.46954346]
[28.50903702 -346.77798462]
[40.68900681 -355.91955566]
[55.53562164 -359.31042480]
[70.47660828 -356.36309814]
[82.92336273 -347.58822632]
[90.71939850 -334.50610352]
[92.51400757 -319.38330078]
[87.99626160 -304.83993530]
[77.94889832 -293.39569092]
[64.11267090 -287.03341675]
[64.33599854 -272.03506470]
[64.55932617 -257.03674316]
[72.48526001 -244.42607117]
[64.95427704 -230.51223755]
[65.17760468 -215.51390076]
[65.40093231 -200.51556396]
[65.62425995 -185.51722717]
[73.55019379 -172.90655518]
[66.01921844 -158.99272156]
[66.24254608 -143.99438477]
[66.46587372 -128.99604797]
[67.80410767 -114.05585480]
[70.24983215 -99.25658417]
[74.44186401 -93.16982269]
[72.62009430 -84.21891022]
[74.84520721 -69.38486481]
[77.07032776 -54.55081940]
[91.35026550 -50.24397278]
[102.38955688 -40.12253952]
[107.96243286 -26.15457344]
[106.91378021 -11.09069252]
[99.39817047 2.07754993]
[86.85976410 10.71176243]
[89.08487701 25.54580688]
[91.30999756 40.37984848]
[93.53511047 55.21389389]
[97.18319702 69.76351166]
[102.22011566 83.89254761]
[115.27455139 94.42620850]
[112.07241821 110.89200592]
[117.31913757 124.94448090]
[122.56585693 138.99694824]
[128.02120972 152.96974182]
[133.68399048 166.85977173]
[139.34678650 180.74980164]
[145.00956726 194.63983154]
[150.67236328 208.52986145]
[165.91503906 205.75823975]
[181.39549255 206.20716858]
[196.44094849 209.85481262]
[210.39802551 216.54031372]
[222.66110229 225.97102356]
[232.69860840 237.73515320]
[240.07606506 251.31990051]
[244.47486877 266.13366699]
[245.70606995 281.53195190]
[243.71849060 296.84524536]
[238.60086060 311.40835571]
[230.57780457 324.58901978]
[220.00003052 335.81558228]
[207.32902527 344.60171509]
[213.19798279 358.40588379]
[219.06694031 372.21008301]
[233.44895935 378.19299316]
[239.20426941 392.27600098]
[233.41183472 405.95019531]
[239.28079224 419.75436401]
[245.14974976 433.55853271]
[251.01872253 447.36273193]
[265.98434448 458.09170532]
[263.17779541 475.41482544]
[269.25161743 489.13009644]
[270.02066040 474.14981079]
[274.75036621 459.91500854]
[283.09936523 447.45330811]
[294.46490479 437.66430664]
[308.02651978 431.25469971]
[322.80514526 428.68719482]
[337.73391724 430.14712524]
[351.73513794 435.52914429]
[363.79800415 444.44470215]
[373.05172729 456.25015259]
[378.82827759 470.09326172]
[380.71060181 484.97467041]
[378.56283569 499.82012939]
[372.54000854 513.55786133]
[363.07693481 525.19616699]
[350.85678101 533.89489746]
[336.76168823 539.02600098]
[321.80920410 540.21911621]
[307.07879639 537.38812256]
[293.63381958 530.73736572]
[282.44488525 520.74694824]
[274.31927490 508.13708496]
[275.87979126 523.05566406]
[277.44030762 537.97430420]
[279.00085449 552.89288330]
[280.56137085 567.81152344]
[295.14410400 572.10247803]
[306.97155762 581.65130615]
[314.24014282 595.00177002]
[315.84146118 610.11816406]
[311.53131104 624.69519043]
[301.96694946 636.51013184]
[288.60690308 643.76110840]
[273.48846436 645.34252930]
[258.91705322 641.01324463]
[247.11476135 631.43334961]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 200]
[5 199]
[6 198]
[7 197]
[8 196]
[9 174]
[10 173]
[13 171]
[14 170]
[15 169]
[16 168]
[19 165]
[20 164]
[21 163]
[36 149]
[37 148]
[38 147]
[39 146]
[40 145]
[43 144]
[44 143]
[45 142]
[48 140]
[49 139]
[63 138]
[64 137]
[65 136]
[66 135]
[72 129]
[73 128]
[74 127]
[75 125]
[76 124]
[87 123]
[88 122]
[89 121]
[91 119]
[92 118]
[93 117]
[94 116]
[96 114]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
