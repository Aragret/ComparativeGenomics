%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[74.01857758 729.00573730]
[75.53181458 714.04711914]
[79.48667145 699.54168701]
[85.77524567 685.88500977]
[94.22599030 673.44976807]
[104.60836029 662.57525635]
[116.63910675 653.55798340]
[129.99003601 646.64404297]
[125.37602997 632.37127686]
[120.76201630 618.09857178]
[116.14801025 603.82580566]
[113.66889191 618.61956787]
[106.99311066 632.05212402]
[96.69817352 642.96148682]
[83.67470551 650.40386963]
[69.04936981 653.73547363]
[54.08739853 652.66802979]
[40.08315659 647.29394531]
[28.24814224 638.07806396]
[19.60621071 625.81768799]
[14.90497303 611.57342529]
[14.55113316 596.57757568]
[18.57530212 582.12750244]
[26.62934875 569.47314453]
[38.01651764 559.70928955]
[51.75170517 553.68066406]
[66.64667511 551.90869141]
[81.41287231 554.54681396]
[94.77287292 561.36663818]
[105.57089233 571.77832031]
[112.87155914 584.87774658]
[112.42495728 569.88439941]
[111.97834778 554.89105225]
[111.53174591 539.89770508]
[111.08513641 524.90435791]
[110.63853455 509.91104126]
[110.19192505 494.91766357]
[102.07911682 482.42642212]
[109.40210724 468.40200806]
[99.38789368 453.99078369]
[108.25068665 437.84979248]
[107.58090210 422.86474609]
[106.91111755 407.87969971]
[106.24133301 392.89465332]
[92.48694611 387.12557983]
[82.56053925 375.91058350]
[78.47106171 361.43865967]
[81.08119202 346.56561279]
[89.92597198 334.25070190]
[103.29460144 326.96777344]
[102.62481689 311.98272705]
[101.95503235 296.99771118]
[91.72737885 282.73718262]
[100.34886932 266.46600342]
[91.86774445 254.22184753]
[98.76992798 239.98559570]
[97.87711334 225.01219177]
[96.98429871 210.03878784]
[84.60371399 206.10623169]
[74.27099609 198.18098450]
[67.22920990 187.18914795]
[64.33478546 174.42732239]
[65.95339966 161.40968323]
[71.91393280 149.68833923]
[81.52628326 140.66828918]
[93.66117096 135.43894958]
[93.21456909 120.44560242]
[92.76795959 105.45225525]
[90.36415100 102.43661499]
[89.30126953 98.37605286]
[90.01617432 93.89320374]
[92.65130615 89.78273773]
[92.87463379 74.78440094]
[85.34365082 60.87055969]
[93.26958466 48.25989532]
[91.02107239 44.54531097]
[90.15831757 40.69561005]
[90.55364227 37.16302872]
[91.94559479 34.31187820]
[93.97925568 32.38253403]
[95.09490204 17.42408180]
[88.40544128 3.08665848]
[97.06792450 -9.02988815]
[98.18357086 -23.98834229]
[91.49411774 -38.32576370]
[100.15659332 -50.44231033]
[100.60320282 -65.43566132]
[100.37987518 -80.43399811]
[92.43796539 -94.11744690]
[99.98491669 -106.95850372]
[99.76158905 -121.95684052]
[89.95378113 -137.54171753]
[99.09246826 -152.52342224]
[98.64585876 -167.51676941]
[98.19925690 -182.51011658]
[97.75264740 -197.50346375]
[83.35263062 -202.23794556]
[71.44224548 -211.61444092]
[63.45973587 -224.50068665]
[60.36902237 -239.34060669]
[62.54332352 -254.34220886]
[69.72008514 -267.69400024]
[81.03268433 -277.78363037]
[95.11505127 -283.39279175]
[110.26669312 -283.84411621]
[124.65795898 -279.08309937]
[136.55104065 -269.68466187]
[144.50979614 -256.78375244]
[147.57315063 -241.93815613]
[145.37120056 -226.94058228]
[138.16984558 -213.60205078]
[126.83868408 -203.53326416]
[112.74599457 -197.95007324]
[113.19260406 -182.95672607]
[113.63920593 -167.96337891]
[114.08581543 -152.97003174]
[122.67226410 -144.44949341]
[123.16704559 -131.96194458]
[114.75992584 -122.18016815]
[114.98325348 -107.18183136]
[122.90918732 -94.57116699]
[115.37821198 -80.65732574]
[115.60153961 -65.65898895]
[126.79897308 -75.63984680]
[141.78155518 -74.91730499]
[151.96659851 -63.90526199]
[151.51962280 -48.91192245]
[140.69670105 -38.52614975]
[125.69767761 -38.69738770]
[115.11505127 -49.32666016]
[121.88430786 -36.05916595]
[113.14202881 -22.87269211]
[112.02638245 -7.91423941]
[118.79563904 5.35325480]
[110.05335999 18.53973007]
[108.93771362 33.49818420]
[108.26792145 48.48322296]
[115.81488037 61.32427979]
[107.87297058 75.00772858]
[107.64964294 90.00606537]
[107.76130676 105.00564575]
[108.20791626 119.99900055]
[108.65451813 134.99235535]
[124.46958923 141.68363953]
[135.73246765 154.57313538]
[140.21365356 171.03576660]
[137.05825806 187.74674988]
[126.94868469 201.35301208]
[111.95770264 209.14598083]
[112.85051727 224.11938477]
[113.74333191 239.09278870]
[122.28831482 252.40795898]
[115.32227325 265.57321167]
[124.43364716 274.70257568]
[124.86901093 287.19235229]
[116.94007111 296.32791138]
[117.60985565 311.31295776]
[118.27964020 326.29800415]
[132.24472046 332.35919189]
[142.15290833 343.83587646]
[146.07954407 358.41674805]
[143.29750061 373.19583130]
[134.41122437 385.25167847]
[121.22637177 392.22488403]
[121.89615631 407.20993042]
[122.56594086 422.19494629]
[123.23572540 437.17999268]
[132.21015930 446.44403076]
[132.45953369 458.93890381]
[124.39545441 467.95538330]
[132.54020691 481.51907349]
[125.18527985 494.47106934]
[125.63188171 509.46441650]
[126.07849121 524.45776367]
[126.52509308 539.45111084]
[126.97170258 554.44445801]
[127.41830444 569.43780518]
[127.86491394 584.43115234]
[130.42074585 599.21185303]
[135.03475952 613.48455811]
[139.64875793 627.75726318]
[144.26277161 642.03002930]
[159.13446045 639.82031250]
[174.16702271 640.08868408]
[188.95034790 642.82781982]
[203.08116150 647.96301270]
[216.17393494 655.35418701]
[227.87152100 664.79962158]
[237.85476685 676.04168701]
[245.85134888 688.77374268]
[251.64309692 702.64837646]
[255.07202148 717.28710938]
[256.04455566 732.29058838]
[254.53421021 747.24945068]
[250.58215332 761.75567627]
[244.29620361 775.41357422]
[235.84785461 787.85040283]
[225.46759033 798.72698975]
[213.43856812 807.74652100]
[200.08897400 814.66302490]
[185.78298950 819.28784180]
[170.91087341 821.49468994]
[155.87837219 821.22338867]
[141.09556580 818.48138428]
[126.96574402 813.34350586]
[113.87438202 805.94982910]
[102.17862701 796.50213623]
[92.19754028 785.25811768]
[84.20341492 772.52453613]
[78.41433716 758.64880371]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 182]
[9 181]
[10 180]
[11 179]
[31 178]
[32 177]
[33 176]
[34 175]
[35 174]
[36 173]
[37 172]
[39 170]
[41 167]
[42 166]
[43 165]
[44 164]
[50 158]
[51 157]
[52 156]
[54 153]
[56 151]
[57 150]
[58 149]
[66 143]
[67 142]
[68 141]
[72 140]
[73 139]
[75 137]
[80 136]
[81 135]
[83 133]
[84 132]
[86 130]
[87 123]
[88 122]
[90 120]
[91 119]
[93 116]
[94 115]
[95 114]
[96 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
