%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[47.96554565 738.47271729]
[32.96025848 739.03955078]
[17.98585701 737.92272949]
[3.23066354 735.13629150]
[-11.11975956 730.71527100]
[-24.88493919 724.71527100]
[-37.89176559 717.21179199]
[-49.97666550 708.29913330]
[-60.98765564 698.08941650]
[-70.78626251 686.71105957]
[-79.24925995 674.30712891]
[-86.27021027 661.03363037]
[-91.76082611 647.05743408]
[-95.65204620 632.55438232]
[-97.89495087 617.70684814]
[-98.46131897 602.70153809]
[-97.34403229 587.72717285]
[-94.55714417 572.97204590]
[-90.13569641 558.62176514]
[-84.13529968 544.85675049]
[-76.63141632 531.85015869]
[-67.71841431 519.76556396]
[-57.50837708 508.75485229]
[-46.12971115 498.95660400]
[-33.72551727 490.49395752]
[-20.45179176 483.47341919]
[-6.47546434 477.98321533]
[8.02769947 474.09243774]
[22.87530518 471.84997559]
[37.88063049 471.28405762]
[38.99627686 456.32559204]
[40.11192703 441.36712646]
[41.22757339 426.40869141]
[42.34322357 411.45022583]
[43.45887375 396.49179077]
[32.15023804 406.34646606]
[17.15572929 406.75225830]
[5.33063126 397.52368164]
[2.08122110 382.87985229]
[8.89308453 369.51577759]
[22.65192986 363.54132080]
[37.06739807 367.68792725]
[45.54940033 380.06158447]
[48.21519470 365.30038452]
[50.88099289 350.53915405]
[53.43682480 335.75851440]
[55.88255310 320.95922852]
[58.32827759 306.15997314]
[52.76968002 292.34146118]
[62.65353775 279.98751831]
[65.09926605 265.18823242]
[67.54499054 250.38897705]
[69.99072266 235.58970642]
[72.43644714 220.79043579]
[66.87785339 206.97192383]
[76.76171112 194.61798096]
[71.20310974 180.79946899]
[81.08696747 168.44551086]
[83.53269196 153.64624023]
[85.97842407 138.84696960]
[88.42414856 124.04770660]
[90.86988068 109.24843597]
[92.87389374 94.38290405]
[94.43441772 79.46430206]
[86.54806519 62.82437897]
[97.40229034 49.03479004]
[98.74052429 34.09460449]
[100.07875824 19.15441895]
[93.60350037 4.71898985]
[102.44541931 -7.26724195]
[103.78365326 -22.20742798]
[104.00698090 -37.20576477]
[103.11416626 -52.17916870]
[102.22135162 -67.15257263]
[101.32853699 -82.12598419]
[92.78355408 -95.44115448]
[99.74959564 -108.60639191]
[98.85677338 -123.57980347]
[96.33821106 -127.11685944]
[95.19152069 -130.89172363]
[95.32300568 -134.44392395]
[96.49904633 -137.39071655]
[98.38357544 -139.46597290]
[98.38357544 -154.46597290]
[98.38357544 -169.46597290]
[98.38357544 -184.46597290]
[98.38357544 -199.46597290]
[83.38355255 -204.83616638]
[71.14984131 -215.00090027]
[63.14983749 -228.71702576]
[60.33491898 -244.31694031]
[63.02734756 -259.91122437]
[70.88347626 -273.61755371]
[82.93749237 -283.78787231]
[97.72014618 -289.20657349]
[97.49681854 -304.20492554]
[97.27349091 -319.20324707]
[97.05016327 -334.20159912]
[96.82683563 -349.19992065]
[83.14140320 -356.05322266]
[74.21786499 -368.48818970]
[72.10676575 -383.64743042]
[77.29324341 -398.04739380]
[88.58546448 -408.37908936]
[103.38856506 -412.26840210]
[118.30091095 -408.82156372]
[129.89573669 -398.83065796]
[135.50865173 -384.59149170]
[133.84983826 -369.37612915]
[125.30049133 -356.68096924]
[111.82517242 -349.42324829]
[112.04850006 -334.42492676]
[112.27182770 -319.42657471]
[112.49515533 -304.42825317]
[112.71848297 -289.42990112]
[126.22673035 -285.19424438]
[137.78399658 -276.98141479]
[146.25265503 -265.58352661]
[150.79411316 -252.10707092]
[150.95178223 -237.86540222]
[146.69700623 -224.25074768]
[138.43313599 -212.59817505]
[126.95729828 -204.05461121]
[113.38357544 -199.46597290]
[113.38357544 -184.46597290]
[113.38357544 -169.46597290]
[113.38357544 -154.46597290]
[113.38357544 -139.46597290]
[113.83018494 -124.47261810]
[114.72299957 -109.49920654]
[123.20412445 -97.25503540]
[116.30194092 -83.01879883]
[117.19475555 -68.04539490]
[118.08757019 -53.07198715]
[118.98038483 -38.09857941]
[127.09316254 -50.71535110]
[140.38185120 -57.67312241]
[155.37283325 -57.15314865]
[168.14750671 -49.29134750]
[175.36659241 -36.14278030]
[175.14303589 -21.14444542]
[167.53527832 -8.21687412]
[154.53198242 -0.73930323]
[139.53215027 -0.66635042]
[126.45673370 -8.01708603]
[118.72383881 -20.86919212]
[117.38560486 -5.92900801]
[123.95658112 7.43779993]
[115.01894379 20.49265480]
[113.68070984 35.43283844]
[112.34247589 50.37302399]
[119.85558319 59.85351944]
[118.86294556 72.31138611]
[109.35301971 81.02482605]
[107.79249573 95.94342804]
[109.50417328 98.46527100]
[110.33609009 101.66564941]
[110.03514862 105.21992493]
[108.47174835 108.71450043]
[105.66915131 111.69416046]
[103.22341919 126.49343109]
[100.77769470 141.29270935]
[98.33197021 156.09197998]
[95.88623810 170.89125061]
[101.26990509 185.76829529]
[91.56098175 197.06370544]
[96.94464111 211.94075012]
[87.23571777 223.23616028]
[84.78999329 238.03543091]
[82.34426117 252.83470154]
[79.89853668 267.63397217]
[77.45281219 282.43322754]
[82.83647156 297.31030273]
[73.12754822 308.60568237]
[70.68182373 323.40496826]
[68.23609161 338.20422363]
[69.92440033 347.18127441]
[65.64221191 353.20495605]
[62.97641373 367.96618652]
[60.31061935 382.72738647]
[58.41732407 397.60742188]
[57.30167770 412.56588745]
[56.18602753 427.52432251]
[55.07038116 442.48278809]
[53.95473099 457.44125366]
[52.83908081 472.39968872]
[67.59444427 475.18527222]
[81.94512939 479.60540771]
[95.71067047 485.60458374]
[108.71794128 493.10729980]
[120.80337524 502.01922607]
[131.81497192 512.22827148]
[141.61425781 523.60607910]
[150.07800293 536.00946045]
[157.09974670 549.28259277]
[162.59120178 563.25842285]
[166.48329163 577.76123047]
[168.72708130 592.60864258]
[169.29434204 607.61389160]
[168.17794800 622.58831787]
[165.39195251 637.34362793]
[160.97135925 651.69415283]
[154.97178650 665.45953369]
[147.46868896 678.46661377]
[138.55639648 690.55175781]
[128.34701538 701.56304932]
[116.96894073 711.36199951]
[104.56525421 719.82537842]
[91.29194641 726.84674072]
[77.31594849 732.33776855]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 186]
[31 185]
[32 184]
[33 183]
[34 182]
[35 181]
[43 180]
[44 179]
[45 178]
[46 176]
[47 175]
[48 174]
[50 172]
[51 171]
[52 170]
[53 169]
[54 168]
[56 166]
[58 164]
[59 163]
[60 162]
[61 161]
[62 160]
[63 155]
[64 154]
[66 151]
[67 150]
[68 149]
[70 147]
[71 146]
[72 135]
[73 134]
[74 133]
[75 132]
[77 130]
[78 129]
[83 128]
[84 127]
[85 126]
[86 125]
[87 124]
[95 115]
[96 114]
[97 113]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
