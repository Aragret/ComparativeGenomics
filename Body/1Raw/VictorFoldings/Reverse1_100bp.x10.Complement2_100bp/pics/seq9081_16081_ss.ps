%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[125.58803558 466.16906738]
[118.59456635 452.88854980]
[112.76865387 439.05596924]
[108.15343475 424.77377319]
[104.78307343 410.14767456]
[102.68252563 395.28601074]
[101.86734772 380.29879761]
[102.34357452 365.29696655]
[104.10767365 350.39163208]
[107.14659119 335.69311523]
[111.43782806 321.31024170]
[116.94960022 307.34951782]
[123.64112091 293.91430664]
[131.46282959 281.10406494]
[140.35682678 269.01364136]
[150.25724792 257.73254395]
[161.09082031 247.34431458]
[172.77729797 237.92585754]
[185.23019409 229.54689026]
[177.95695496 216.42820740]
[170.68373108 203.30950928]
[163.41050720 190.19081116]
[154.90367126 177.83630371]
[145.24285889 166.36160278]
[135.58206177 154.88690186]
[125.92124176 143.41220093]
[119.20857239 140.31997681]
[116.20355988 131.69398499]
[106.71466064 120.07672882]
[90.26081848 118.79654694]
[79.72591400 106.09286499]
[81.51246643 89.68627930]
[71.85165405 78.21157837]
[62.19084549 66.73687744]
[52.44488144 55.33441925]
[34.90460205 49.72905731]
[32.24648666 32.38254929]
[22.24831390 21.20057487]
[12.25014114 10.01860046]
[1.76264012 -0.70577967]
[-9.19326973 -10.95117092]
[-20.14917946 -21.19656372]
[-31.10508728 -31.44195366]
[-42.06099701 -41.68734741]
[-53.26774979 -31.70115662]
[-65.33616638 -22.77543831]
[-78.16625214 -14.98415089]
[-91.65168762 -8.39185905]
[-105.68072510 -3.05318999]
[-120.13710785 0.98761892]
[-134.90106201 3.69708300]
[-149.85021973 5.05275011]
[-164.86071777 5.04338694]
[-179.80818176 3.66907048]
[-194.56872559 0.94118971]
[-209.02006531 -3.11765122]
[-223.04241943 -8.47381878]
[-236.51962280 -15.08292961]
[-249.33998108 -22.89021683]
[-261.39724731 -31.83098412]
[-272.59155273 -41.83114624]
[-282.83007812 -52.80783844]
[-292.02801514 -64.67009735]
[-300.10913086 -77.31963348]
[-307.00646973 -90.65161896]
[-312.66290283 -104.55558014]
[-317.03149414 -118.91631317]
[-320.07611084 -133.61480713]
[-321.77148438 -148.52925110]
[-322.10357666 -163.53608704]
[-321.06961060 -178.51094055]
[-318.67822266 -193.32972717]
[-314.94915771 -207.86964417]
[-309.91336060 -222.01022339]
[-303.61251831 -235.63427734]
[-296.09887695 -248.62890625]
[-287.43469238 -260.88644409]
[-277.69177246 -272.30529785]
[-266.95080566 -282.79089355]
[-255.30085754 -292.25628662]
[-242.83842468 -300.62304688]
[-229.66677856 -307.82186890]
[-215.89508057 -313.79312134]
[-201.63745117 -318.48727417]
[-187.01202393 -321.86544800]
[-172.13998413 -323.89962769]
[-157.14459229 -324.57299805]
[-142.15010071 -323.87997437]
[-127.28075409 -321.82626343]
[-112.65975952 -318.42892456]
[-98.40829468 -313.71609497]
[-84.64443970 -307.72680664]
[-71.48225403 -300.51071167]
[-59.03079987 -292.12759399]
[-47.39326096 -282.64694214]
[-36.66606903 -272.14727783]
[-26.93811989 -260.71563721]
[-18.29001808 -248.44676208]
[-10.79342937 -235.44227600]
[-4.51047230 -221.80998230]
[0.50678837 -207.66281128]
[4.21677780 -193.11801147]
[6.58875275 -178.29609680]
[7.60305834 -163.31990051]
[7.25128889 -148.31352234]
[5.53636026 -133.40130615]
[2.47248268 -118.70681763]
[-1.91495502 -104.35183716]
[-7.58959627 -90.45529938]
[-14.50441837 -77.13237000]
[-22.60212326 -64.49344635]
[-31.81560516 -52.64325714]
[-20.85969734 -42.39786530]
[-9.90378666 -32.15247345]
[1.05212224 -21.90708160]
[12.00803185 -11.66168880]
[12.58943558 -26.65041733]
[23.50506401 -36.93871689]
[38.50194550 -36.63298035]
[48.98919296 -25.90834808]
[48.95922470 -10.90837765]
[38.42921829 -0.22573273]
[23.43211555 0.02042802]
[33.43028641 11.20240307]
[43.42845917 22.38437653]
[55.48460388 23.37227249]
[63.90576172 32.60633469]
[63.77447510 45.50383759]
[70.53244019 48.49577713]
[73.66555023 57.07606888]
[83.32635498 68.55077362]
[92.98716736 80.02546692]
[105.65492249 79.59942627]
[116.29554749 86.48642731]
[121.09466553 98.21766663]
[118.33192444 110.58782959]
[127.82082367 122.20509338]
[137.39595032 133.75138855]
[147.05676270 145.22608948]
[156.71755981 156.70079041]
[166.37837219 168.17549133]
[164.15393066 153.34135437]
[168.07681274 138.86340332]
[177.48594666 127.18143463]
[190.79571533 120.26406860]
[205.76319885 119.27700806]
[219.86611938 124.38657379]
[230.72787476 134.73173523]
[236.51808167 148.56912231]
[236.26097107 163.56692505]
[229.99989319 177.19772339]
[218.78993225 187.16450500]
[204.52015686 191.78768921]
[189.59529114 190.28817749]
[176.52919006 182.91758728]
[183.80242920 196.03627014]
[191.07565308 209.15496826]
[198.34889221 222.27366638]
[212.05265808 216.15092468]
[226.23205566 211.22889709]
[240.78207397 207.54403687]
[255.59500122 205.12361145]
[270.56118774 203.98554993]
[285.56979370 204.13827515]
[300.50970459 205.58065796]
[315.27029419 208.30201721]
[329.74234009 212.28219604]
[343.81863403 217.49176025]
[357.39495850 223.89208984]
[370.37084961 231.43583679]
[382.65017700 240.06713867]
[394.14205933 249.72209167]
[404.76141357 260.32919312]
[414.42962646 271.80993652]
[423.07507324 284.07931519]
[430.63378906 297.04647827]
[437.04977417 310.61541748]
[442.27557373 324.68569946]
[446.27243042 339.15313721]
[449.01083374 353.91058350]
[450.47042847 368.84881592]
[450.64047241 383.85723877]
[449.51968384 398.82470703]
[447.11633301 413.64044189]
[443.44827271 428.19470215]
[438.54260254 442.37976074]
[432.43566895 456.09057617]
[425.17266846 469.22567749]
[416.80740356 481.68777466]
[407.40182495 493.38461304]
[397.02551270 504.22958374]
[385.75531006 514.14239502]
[373.67468262 523.04968262]
[360.87304688 530.88549805]
[347.44519043 537.59179688]
[333.49053955 543.11889648]
[319.11239624 547.42596436]
[304.41723633 550.48101807]
[289.51382446 552.26153564]
[274.51254272 552.75421143]
[259.52444458 551.95556641]
[244.66046143 549.87133789]
[230.03068542 546.51708984]
[215.74342346 541.91754150]
[201.90444946 536.10687256]
[188.61622620 529.12799072]
[175.97712708 521.03265381]
[164.08074951 511.88070679]
[153.01515198 501.73999023]
[142.86227417 490.68557739]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 158]
[20 157]
[21 156]
[22 155]
[23 141]
[24 140]
[25 139]
[26 138]
[28 137]
[29 136]
[32 132]
[33 131]
[34 130]
[35 128]
[37 125]
[38 124]
[39 123]
[40 116]
[41 115]
[42 114]
[43 113]
[44 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
