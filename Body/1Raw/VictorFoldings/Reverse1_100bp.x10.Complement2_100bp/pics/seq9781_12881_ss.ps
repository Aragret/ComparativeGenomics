%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[129.49903870 649.52062988]
[117.18431854 640.56140137]
[109.58391571 627.36468506]
[108.01466370 612.21685791]
[112.74843597 597.74230957]
[122.96508026 586.44897461]
[136.89450073 580.29339600]
[136.89450073 565.29339600]
[136.89450073 550.29339600]
[136.89450073 535.29339600]
[129.15719604 522.56610107]
[136.89450073 508.76593018]
[136.89450073 493.76593018]
[136.00167847 478.79254150]
[134.21920776 463.89883423]
[132.43675232 449.00509644]
[130.65428162 434.11138916]
[128.87181091 419.21768188]
[119.55944061 411.49716187]
[117.95254517 399.10354614]
[125.45345306 388.61074829]
[123.89292908 373.69213867]
[122.33240509 358.77352905]
[120.77188873 343.85491943]
[109.07556915 334.70440674]
[107.28045654 319.59704590]
[116.95766449 307.39093018]
[115.39714050 292.47232056]
[113.83661652 277.55371094]
[104.64022064 269.69540405]
[103.21802521 257.27926636]
[110.87432861 246.89927673]
[109.53609467 231.95909119]
[108.19786072 217.01890564]
[90.77304840 208.13125610]
[82.19144440 190.39323425]
[86.09462738 170.93159485]
[101.06861115 157.68316650]
[98.84349060 142.84913635]
[96.61837769 128.01509094]
[94.39325714 113.18103790]
[85.83453369 102.12483215]
[90.77269745 89.04407501]
[76.06272888 85.31681061]
[63.93314362 76.26605988]
[56.21367645 63.29595566]
[54.05389023 48.39888000]
[57.75209045 33.84937286]
[66.71454620 21.85688019]
[79.55056763 14.23023224]
[77.32544708 -0.60381109]
[75.10033417 -15.43785477]
[72.87521362 -30.27189827]
[60.44969559 -39.66573715]
[58.40442657 -54.74126434]
[67.43659210 -66.52920532]
[65.21147919 -81.36325073]
[62.98635864 -96.19729614]
[60.76124191 -111.03134155]
[58.53612518 -125.86538696]
[56.31100845 -140.69943237]
[52.49803925 -146.10061646]
[52.05210114 -151.76614380]
[54.24731827 -156.00761414]
[52.46485519 -170.90132141]
[50.57156372 -185.78135681]
[48.56754684 -200.64688110]
[46.56353378 -215.51242065]
[31.70157623 -218.26553345]
[18.43620491 -225.46778870]
[8.06053162 -236.40277100]
[1.58155227 -249.99092102]
[-0.37758654 -264.89608765]
[2.36250377 -279.65695190]
[9.52110481 -292.83020020]
[20.38609695 -303.13177490]
[33.88477707 -309.56188965]
[31.88076210 -324.42742920]
[29.87674904 -339.29293823]
[27.87273598 -354.15847778]
[21.50075340 -340.57916260]
[9.92279625 -331.04232788]
[-4.62561464 -327.38943481]
[-19.33540916 -330.32574463]
[-31.36635399 -339.28433228]
[-38.39546585 -352.53543091]
[-39.06553268 -367.52047729]
[-33.24716949 -381.34603882]
[-22.06381989 -391.34268188]
[-7.67480755 -395.58016968]
[7.14157295 -393.24032593]
[19.52451134 -384.77493286]
[27.08343887 -371.81732178]
[27.75322533 -386.80236816]
[20.63985252 -400.93426514]
[28.93773651 -413.30334473]
[29.60752296 -428.28839111]
[15.37118053 -433.36950684]
[3.26600814 -442.42248535]
[-5.63161087 -454.64230347]
[-10.53050613 -468.94238281]
[-10.99507141 -484.05117798]
[-6.98399782 -498.62521362]
[1.14605260 -511.36859131]
[12.67216110 -521.14819336]
[26.56943512 -527.09436035]
[41.60213852 -528.67840576]
[56.43357086 -525.75952148]
[69.74493408 -518.59716797]
[80.35258484 -507.82830811]
[87.31330872 -494.41040039]
[90.00815582 -479.53662109]
[88.19750214 -464.52954102]
[82.04235077 -450.72354126]
[72.09001923 -439.34625244]
[59.22544861 -431.40936279]
[44.59255981 -427.61859131]
[43.92277527 -412.63354492]
[51.08405685 -399.57348633]
[42.73826218 -386.13256836]
[42.06847763 -371.14752197]
[42.73826218 -356.16250610]
[44.74227905 -341.29696655]
[46.74629211 -326.43142700]
[48.75030518 -311.56591797]
[63.46984482 -308.93984985]
[76.67488861 -301.88317871]
[87.06629944 -291.07583618]
[93.61734772 -277.56750488]
[95.67513275 -262.67562866]
[93.02567291 -247.85687256]
[85.91604614 -234.56471252]
[75.03142548 -224.10681152]
[61.42906189 -217.51643372]
[63.43307495 -202.65089417]
[65.43708801 -187.78536987]
[69.44603729 -181.57649231]
[67.35857391 -172.68379211]
[69.14103699 -157.79006958]
[71.14505005 -142.92454529]
[73.37017059 -128.09049988]
[75.59528351 -113.25645447]
[77.82040405 -98.42241669]
[80.04551697 -83.58837128]
[82.27063751 -68.75432587]
[94.36387634 -60.13520813]
[96.83177948 -45.12307739]
[87.70925903 -32.49701691]
[89.93437958 -17.66297150]
[92.15949249 -2.82892823]
[94.38461304 12.00511551]
[108.89337921 15.53002453]
[120.97998810 24.36514091]
[128.78425598 37.18927002]
[131.09031677 52.06440735]
[127.51601410 66.72858429]
[118.57574463 78.93982697]
[105.60674286 86.81896210]
[114.16546631 97.87516785]
[109.22730255 110.95592499]
[111.45242310 125.78997040]
[113.67753601 140.62400818]
[115.90265656 155.45805359]
[126.12302399 158.30496216]
[134.78276062 164.36798096]
[140.90986633 172.93553162]
[143.82698059 183.01675415]
[143.22619629 193.45603943]
[139.20133972 203.06553650]
[132.23443604 210.76028442]
[123.13803864 215.68067932]
[124.47627258 230.62086487]
[125.81451416 245.56105042]
[136.75430298 260.37329102]
[128.75521851 275.99319458]
[130.31575012 290.91180420]
[131.87626648 305.83041382]
[143.86993408 315.76971436]
[145.24000549 330.92150879]
[135.69049072 342.29440308]
[137.25100708 357.21301270]
[138.81153870 372.13159180]
[140.37205505 387.05020142]
[151.53117371 401.69793701]
[143.76553345 417.43521118]
[145.54800415 432.32891846]
[147.33045959 447.22262573]
[149.11293030 462.11636353]
[150.89540100 477.01007080]
[159.35876465 464.62576294]
[173.44589233 459.47280884]
[187.90261841 463.47314453]
[197.33695984 475.13476562]
[198.23013306 490.10815430]
[190.24900818 502.80859375]
[176.37034607 508.49917603]
[161.77053833 505.05740356]
[151.89450073 493.76593018]
[151.89450073 508.76593018]
[159.63179016 522.56610107]
[151.89450073 535.29339600]
[151.89450073 550.29339600]
[151.89450073 565.29339600]
[151.89450073 580.29339600]
[165.82391357 586.44897461]
[176.04055786 597.74230957]
[180.77432251 612.21685791]
[179.20507812 627.36468506]
[171.60467529 640.56140137]
[159.28994751 649.52062988]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 204]
[8 203]
[9 202]
[10 201]
[12 199]
[13 198]
[14 189]
[15 188]
[16 187]
[17 186]
[18 185]
[21 183]
[22 182]
[23 181]
[24 180]
[27 177]
[28 176]
[29 175]
[32 173]
[33 172]
[34 171]
[38 163]
[39 162]
[40 161]
[41 160]
[43 158]
[50 151]
[51 150]
[52 149]
[53 148]
[56 145]
[57 144]
[58 143]
[59 142]
[60 141]
[61 140]
[64 139]
[65 138]
[66 136]
[67 135]
[68 134]
[77 125]
[78 124]
[79 123]
[80 122]
[93 121]
[94 120]
[96 118]
[97 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
