%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[85.73042297 518.18029785]
[71.79461670 523.87048340]
[56.99858856 526.63861084]
[41.94822693 526.37127686]
[27.25983047 523.07952881]
[13.53488255 516.89801025]
[1.33540976 508.07998657]
[-8.83902645 496.98648071]
[-16.57178879 484.07180786]
[-21.54622650 469.86477661]
[-23.55863953 454.94714355]
[-22.52662086 439.92984009]
[-18.49242973 425.42776489]
[-11.62126446 412.03479004]
[-2.19449568 400.29931641]
[9.40185738 390.70196533]
[22.69293022 383.63568115]
[37.13446426 379.38986206]
[52.13508606 378.13833618]
[53.91754913 363.24462891]
[55.70001602 348.35092163]
[46.32088470 336.83712769]
[47.91639328 321.70736694]
[60.05671310 311.94775391]
[53.88663101 298.39123535]
[63.20899582 285.60827637]
[64.99146271 270.71453857]
[66.77392578 255.82083130]
[64.57871246 251.57936096]
[65.02465057 245.91383362]
[68.83761597 240.51264954]
[71.06273651 225.67860413]
[73.28784943 210.84455872]
[71.21988678 206.53961182]
[71.83431244 200.88987732]
[75.80640411 195.60461426]
[78.47219849 180.84339905]
[81.13799286 166.08218384]
[83.80378723 151.32096863]
[86.35961914 136.54031372]
[88.80535126 121.74104309]
[91.25107574 106.94177246]
[93.58656311 92.12470245]
[86.45109558 75.14923096]
[97.91022491 61.85806274]
[90.52280426 44.99071121]
[101.78278351 31.53040504]
[103.56525421 16.63668823]
[105.34771729 1.74297106]
[107.13018036 -13.15074635]
[108.91265106 -28.04446411]
[110.69511414 -42.93817902]
[112.47758484 -57.83189774]
[114.26004791 -72.72561646]
[116.04251099 -87.61933136]
[117.82498169 -102.51305389]
[105.12946320 -107.82990265]
[94.25606537 -116.24794769]
[85.94398499 -127.18653870]
[80.75612640 -139.89398193]
[79.04096985 -153.49917603]
[80.90919495 -167.07131958]
[86.22655487 -179.68360901]
[94.62348938 -190.47650146]
[105.52080536 -198.71632385]
[118.16965485 -203.84513855]
[131.70294189 -205.51846313]
[133.92805481 -220.35250854]
[132.10627747 -229.30343628]
[136.29830933 -235.39018250]
[138.74403381 -250.18945312]
[141.18977356 -264.98873901]
[143.63549805 -279.78799438]
[146.08122253 -294.58728027]
[148.52694702 -309.38653564]
[150.97267151 -324.18582153]
[141.09634399 -331.84909058]
[135.44812012 -342.92004395]
[135.04521179 -355.26983643]
[139.90275574 -366.55279541]
[149.04255676 -374.65197754]
[160.68940735 -378.07632446]
[163.57467651 -392.79623413]
[158.63635254 -407.82696533]
[168.67727661 -418.82830811]
[171.56254578 -433.54818726]
[174.44781494 -448.26809692]
[160.17535400 -452.94531250]
[146.58587646 -459.34106445]
[133.88537598 -467.35833740]
[122.26641083 -476.87567139]
[111.90509796 -487.74868774]
[102.95853424 -499.81262207]
[95.56233215 -512.88458252]
[89.82862854 -526.76635742]
[85.84432983 -541.24755859]
[83.66985321 -556.10864258]
[83.33815002 -571.12426758]
[84.85425568 -586.06689453]
[88.19519043 -600.70989990]
[93.31029510 -614.83135986]
[100.12203217 -628.21716309]
[108.52713776 -640.66436768]
[118.39820099 -651.98437500]
[129.58555603 -662.00543213]
[141.91963196 -670.57574463]
[155.21342468 -677.56536865]
[169.26542664 -682.86828613]
[183.86259460 -686.40417480]
[198.78364563 -688.11938477]
[213.80236816 -687.98791504]
[228.69110107 -686.01177979]
[243.22413635 -682.22088623]
[257.18115234 -676.67279053]
[270.35055542 -669.45153809]
[282.53268433 -660.66656494]
[293.54290771 -650.45117188]
[303.21426392 -638.96014404]
[311.40017700 -626.36761475]
[317.97656250 -612.86462402]
[322.84365845 -598.65582275]
[325.92773438 -583.95654297]
[327.18200684 -568.98968506]
[326.58749390 -553.98217773]
[324.15319824 -539.16143799]
[319.91598511 -524.75219727]
[313.94015503 -510.97293091]
[306.31622314 -498.03247070]
[297.15985107 -486.12701416]
[286.60977173 -475.43701172]
[274.82595825 -466.12457275]
[261.98706055 -458.33084106]
[248.28770447 -452.17398071]
[233.93554688 -447.74734497]
[219.14817810 -445.11798096]
[204.14978027 -444.32580566]
[189.16770935 -445.38281250]
[186.28244019 -430.66293335]
[183.39717102 -415.94302368]
[188.54187012 -401.96514893]
[178.29457092 -389.91094971]
[175.40930176 -375.19107056]
[188.02137756 -362.82952881]
[190.71197510 -345.21670532]
[182.21717834 -329.37631226]
[165.77194214 -321.74008179]
[163.32621765 -306.94082642]
[160.88049316 -292.14154053]
[158.43476868 -277.34228516]
[155.98904419 -262.54299927]
[153.54330444 -247.74372864]
[151.09757996 -232.94445801]
[148.76210022 -218.12739563]
[146.53697205 -203.29335022]
[161.24211121 -196.25222778]
[173.06871033 -185.00245667]
[180.85351562 -170.63470459]
[183.82583618 -154.54713440]
[181.68402100 -138.30929565]
[174.62588501 -123.50901794]
[163.33056641 -111.59712982]
[148.89318848 -103.74525452]
[132.71870422 -100.73058319]
[130.93623352 -85.83686829]
[129.15376282 -70.94315338]
[127.37129974 -56.04943085]
[125.58883667 -41.15571594]
[123.80636597 -26.26199722]
[122.02390289 -11.36828041]
[120.24143219 3.52543688]
[118.45896912 18.41915512]
[116.67650604 33.31287003]
[123.90401459 43.01285553]
[122.54090118 55.43564606]
[112.77575684 63.86207581]
[119.85804749 73.66859436]
[118.31012726 86.06970978]
[108.42060852 94.34981537]
[110.43428040 102.15479279]
[106.05034637 109.38749695]
[103.60462189 124.18676758]
[101.15888977 138.98603821]
[102.84719849 147.96308899]
[98.56501007 153.98675537]
[95.89921570 168.74797058]
[93.23341370 183.50920105]
[90.56761932 198.27041626]
[88.12189484 213.06968689]
[85.89677429 227.90373230]
[83.67166138 242.73776245]
[81.66764832 257.60330200]
[79.88517761 272.49700928]
[78.10271454 287.39074707]
[84.14530182 302.01254272]
[74.95043182 313.73022461]
[84.44483185 326.07907104]
[82.42498779 341.15802002]
[70.59373474 350.13339233]
[68.81126404 365.02709961]
[67.02880096 379.92080688]
[81.31045532 384.67678833]
[94.34220886 392.21060181]
[105.59043884 402.21371460]
[114.59452057 414.27651978]
[120.98574829 427.90505981]
[124.50241089 442.54125977]
[125.00049591 457.58575439]
[122.45960999 472.42248535]
[116.98380280 486.44390869]
[108.79730225 499.07583618]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 200]
[20 199]
[21 198]
[24 195]
[26 193]
[27 192]
[28 191]
[31 190]
[32 189]
[33 188]
[36 187]
[37 186]
[38 185]
[39 184]
[40 182]
[41 181]
[42 180]
[43 178]
[45 175]
[47 172]
[48 171]
[49 170]
[50 169]
[51 168]
[52 167]
[53 166]
[54 165]
[55 164]
[56 163]
[67 154]
[68 153]
[70 152]
[71 151]
[72 150]
[73 149]
[74 148]
[75 147]
[76 146]
[82 142]
[83 141]
[85 139]
[86 138]
[87 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
