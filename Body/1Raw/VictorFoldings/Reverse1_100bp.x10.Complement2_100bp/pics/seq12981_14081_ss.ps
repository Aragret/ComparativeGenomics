%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCACCUCAUCCCGACUCUGACCCCACCCCGGAAGAUACCGACUCCCCUCAGUCCCCACCUCUGGAUUAACCCGACUAAACGGACGACGACGAUCCUCCUCxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[207.44183350 344.82858276]
[215.71621704 332.29312134]
[225.49650574 320.89361572]
[236.62844849 310.80981445]
[228.02989197 298.51898193]
[219.43132019 286.22811890]
[210.83276367 273.93728638]
[202.23419189 261.64645386]
[193.63563538 249.35562134]
[185.03706360 237.06477356]
[176.43850708 224.77394104]
[167.83993530 212.48310852]
[159.24137878 200.19226074]
[150.64280701 187.90142822]
[144.23278809 184.22265625]
[142.00932312 175.36297607]
[133.59471130 162.94548035]
[125.18009186 150.52798462]
[111.63522339 144.33235168]
[110.29887390 128.56768799]
[101.88425446 116.15019226]
[90.60017395 113.26734161]
[84.13873291 103.57759857]
[85.81501007 92.05235291]
[77.58620453 79.51095581]
[69.35739136 66.96955109]
[61.12858582 54.42815399]
[52.89977646 41.88675308]
[39.73915100 46.85736465]
[25.83677483 48.96813202]
[11.80649567 48.12852478]
[-1.73275566 44.37822723]
[-14.18426132 37.88526535]
[-24.99981689 28.93848801]
[-33.70386505 17.93470383]
[-39.91440964 5.36109877]
[-43.35977554 -8.22634697]
[-43.89049530 -22.22743416]
[-41.48578644 -36.02426147]
[-36.25436401 -49.00849152]
[-28.42950630 -60.60818100]
[-18.35868263 -70.31296539]
[-26.21043777 -83.09381104]
[-34.06219482 -95.87465668]
[-41.91394806 -108.65549469]
[-54.25476837 -112.40608978]
[-60.53139496 -123.21292877]
[-57.85065460 -135.00869751]
[-65.51125336 -147.90502930]
[-73.17185211 -160.80134583]
[-86.66436005 -154.22778320]
[-100.65362549 -148.79089355]
[-115.04409790 -144.52778625]
[-129.73745728 -141.46762085]
[-144.63334656 -139.63127136]
[-159.62998962 -139.03131104]
[-174.62496948 -139.67181396]
[-189.51583862 -141.54841614]
[-204.20086670 -144.64830017]
[-218.57975769 -148.95027161]
[-232.55429077 -154.42497253]
[-246.02897644 -161.03498840]
[-258.91177368 -168.73515320]
[-271.11471558 -177.47290039]
[-282.55441284 -187.18850708]
[-293.15270996 -197.81562805]
[-302.83721924 -209.28164673]
[-311.54177856 -221.50825500]
[-319.20697021 -234.41192627]
[-325.78036499 -247.90451050]
[-331.21710205 -261.89385986]
[-335.48001099 -276.28436279]
[-338.54000854 -290.97775269]
[-340.37619019 -305.87365723]
[-340.97598267 -320.87033081]
[-340.33529663 -335.86529541]
[-338.45849609 -350.75613403]
[-335.35845947 -365.44113159]
[-331.05630493 -379.81997681]
[-325.58145142 -393.79443359]
[-318.97125244 -407.26904297]
[-311.27093506 -420.15176392]
[-302.53305054 -432.35458374]
[-292.81729126 -443.79415894]
[-282.19006348 -454.39233398]
[-270.72393799 -464.07672119]
[-258.49722290 -472.78112793]
[-245.59344482 -480.44616699]
[-232.10078430 -487.01940918]
[-218.11138916 -492.45596313]
[-203.72080994 -496.71871948]
[-189.02737427 -499.77853394]
[-174.13145447 -501.61453247]
[-159.13478088 -502.21414185]
[-144.13983154 -501.57327271]
[-129.24900818 -499.69631958]
[-114.56404114 -496.59609985]
[-100.18525696 -492.29376221]
[-86.21086121 -486.81872559]
[-72.73632812 -480.20840454]
[-59.85370255 -472.50793457]
[-47.65098190 -463.76989746]
[-36.21152496 -454.05401611]
[-25.61347961 -443.42663574]
[-15.92923832 -431.96038818]
[-7.22495747 -419.73358154]
[0.43990311 -406.82971191]
[7.01298380 -393.33697510]
[12.44938374 -379.34750366]
[16.71196556 -364.95687866]
[19.77161217 -350.26342773]
[21.60741997 -335.36746216]
[22.20685196 -320.37078857]
[21.56581116 -305.37585449]
[19.68867683 -290.48504639]
[16.58827400 -275.80010986]
[12.28577805 -261.42138672]
[6.81058264 -247.44705200]
[0.20008877 -233.97259521]
[-7.50054693 -221.09005737]
[-16.23871994 -208.88745117]
[-25.95473862 -197.44810486]
[-36.58223343 -186.85018921]
[-48.04860306 -177.16607666]
[-60.27552414 -168.46194458]
[-52.61492538 -155.56562805]
[-44.95432663 -142.66929626]
[-29.20837784 -134.92126465]
[-29.13310623 -116.50725555]
[-21.28135109 -103.72640991]
[-13.42959595 -90.94556427]
[-5.57784033 -78.16472626]
[9.59014988 -83.18931580]
[25.52685928 -84.45616913]
[41.31480408 -81.88832092]
[56.04410553 -75.62969971]
[68.86492157 -66.03704834]
[79.03648376 -53.65959930]
[85.96992493 -39.20763016]
[89.26230621 -23.51169586]
[88.72009277 -7.47491455]
[84.37051392 7.97901154]
[76.46018219 21.95899582]
[65.44117737 33.65794373]
[73.66998291 46.19934464]
[81.89879608 58.74074554]
[90.12760162 71.28214264]
[98.35640717 83.82354736]
[113.52787781 90.97915649]
[114.30175018 107.73557281]
[122.71636963 120.15306854]
[136.86309814 127.23687744]
[137.59759521 142.11335754]
[146.01220703 154.53085327]
[154.42681885 166.94834900]
[162.93365479 179.30285645]
[171.53221130 191.59370422]
[180.13078308 203.88453674]
[188.72933960 216.17536926]
[197.32791138 228.46621704]
[205.92646790 240.75704956]
[214.52503967 253.04789734]
[223.12359619 265.33871460]
[231.72216797 277.62957764]
[240.32072449 289.92041016]
[248.91929626 302.21124268]
[262.20809937 295.21047974]
[276.26959229 289.93051147]
[290.88195801 286.45462036]
[305.81475830 284.83755493]
[320.83245850 285.10491943]
[335.69824219 287.25241089]
[350.17764282 291.24618530]
[364.04229736 297.02328491]
[377.07351685 304.49258423]
[389.06582642 313.53625488]
[399.83004761 324.01168823]
[409.19644165 335.75366211]
[417.01727295 348.57699585]
[423.16918945 362.27941895]
[427.55517578 376.64489746]
[430.10607910 391.44677734]
[430.78161621 406.45169067]
[429.57119751 421.42291260]
[426.49386597 436.12438965]
[421.59817505 450.32421875]
[414.96130371 463.79849243]
[406.68798828 476.33462524]
[396.90866089 487.73498535]
[385.77755737 497.81973267]
[373.47024536 506.42980957]
[360.18084717 513.42944336]
[346.11892700 518.70825195]
[331.50625610 522.18292236]
[316.57333374 523.79870605]
[301.55563354 523.53009033]
[286.69003296 521.38134766]
[272.21096802 517.38635254]
[258.34683228 511.60806274]
[245.31620789 504.13769531]
[233.32467651 495.09301758]
[222.56132507 484.61666870]
[213.19593811 472.87390137]
[205.37617493 460.04992676]
[199.22541809 446.34695435]
[194.84062195 431.98114014]
[192.29098511 417.17901611]
[191.61669922 402.17407227]
[192.82838440 387.20291138]
[195.90695190 372.50170898]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 166]
[5 165]
[6 164]
[7 163]
[8 162]
[9 161]
[10 160]
[11 159]
[12 158]
[13 157]
[14 156]
[16 155]
[17 154]
[18 153]
[20 151]
[21 150]
[24 148]
[25 147]
[26 146]
[27 145]
[28 144]
[42 132]
[43 131]
[44 130]
[45 129]
[48 127]
[49 126]
[50 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
