%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCAGUGAGUAUCCGGUCUGAAUCCCGAUCCUACUACUAAUUAUUCUCCCUACUGUAUUGAUAAUCACCGUCCAAUCAACAAACAUCCCGAGUACCAUxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[-58.86886215 390.70352173]
[-58.67785645 405.71313477]
[-59.87258911 420.67633057]
[-62.44287109 435.46545410]
[-66.36676788 449.95431519]
[-71.61080933 464.01934814]
[-78.13024902 477.54049683]
[-85.86946106 490.40243530]
[-94.76242828 502.49539185]
[-104.73326111 513.71624756]
[-115.69689941 523.96917725]
[-127.55980682 533.16680908]
[-140.22076416 541.23059082]
[-153.57174683 548.09179688]
[-167.49885559 553.69183350]
[-181.88327026 557.98291016]
[-196.60224915 560.92846680]
[-211.53021240 562.50329590]
[-226.53982544 562.69409180]
[-241.50300598 561.49908447]
[-256.29208374 558.92858887]
[-270.78091431 555.00439453]
[-284.84582520 549.76013184]
[-298.36688232 543.24047852]
[-311.22866821 535.50103760]
[-323.32150269 526.60791016]
[-334.54214478 516.63684082]
[-344.79495239 505.67306519]
[-353.99237061 493.80999756]
[-362.05593872 481.14889526]
[-368.91690063 467.79779053]
[-374.51669312 453.87060547]
[-378.80755615 439.48611450]
[-381.75283813 424.76708984]
[-383.32748413 409.83908081]
[-383.51797485 394.82949829]
[-382.32275391 379.86633301]
[-379.75198364 365.07727051]
[-375.82757568 350.58853149]
[-370.58306885 336.52368164]
[-364.06320190 323.00274658]
[-356.32354736 310.14108276]
[-347.43017578 298.04843140]
[-337.45898438 286.82791138]
[-326.49499512 276.57531738]
[-314.63177490 267.37811279]
[-301.97055054 259.31472778]
[-288.61935425 252.45397949]
[-274.69204712 246.85443115]
[-260.30749512 242.56381226]
[-245.58840942 239.61875916]
[-230.66038513 238.04438782]
[-215.65077209 237.85412598]
[-200.68763733 239.04960632]
[-185.89863586 241.62063599]
[-171.40995789 245.54525757]
[-157.34519958 250.78999329]
[-143.82437134 257.31011963]
[-130.96282959 265.04995728]
[-118.87030792 273.94354248]
[-107.64997864 283.91494751]
[-96.69406891 273.66955566]
[-85.73815918 263.42416382]
[-74.78224945 253.17875671]
[-63.82633972 242.93336487]
[-59.81519699 228.58903503]
[-44.45085526 224.81442261]
[-33.49494553 214.56903076]
[-22.53903580 204.32363892]
[-11.58312702 194.07824707]
[-16.90812874 180.12928772]
[-16.48580551 165.16375732]
[-10.34938622 151.46305847]
[0.59445792 141.12768555]
[14.69943619 135.75523376]
[29.82725716 136.19348145]
[43.67177963 142.40676880]
[54.62768936 132.16137695]
[65.58359528 121.91598511]
[76.53950500 111.67059326]
[87.49541473 101.42520142]
[98.21979523 90.93769836]
[108.70729828 80.21331787]
[119.19480133 69.48893738]
[129.68229675 58.76456070]
[140.16979980 48.04018021]
[150.57717896 37.23802185]
[160.90383911 26.35868835]
[171.23051453 15.47935390]
[181.55717468 4.60001993]
[189.97180176 -7.81747580]
[196.24916077 -21.44079208]
[194.99722290 -37.21238708]
[207.35064697 -45.53357697]
[213.62800598 -59.15689087]
[219.90536499 -72.78020477]
[226.18272400 -86.40352631]
[232.46009827 -100.02684021]
[219.82119751 -108.15115356]
[208.43603516 -117.95545197]
[198.52622986 -129.24890137]
[190.28466797 -141.81164551]
[183.87179565 -155.39918518]
[179.41241455 -169.74700928]
[176.99333191 -184.57583618]
[176.66165161 -199.59703064]
[178.42382812 -214.51818848]
[182.24554443 -229.04885864]
[188.05241394 -242.90621948]
[195.73141479 -255.82051086]
[205.13307190 -267.54037476]
[216.07437134 -277.83764648]
[228.34234619 -286.51193237]
[241.69818115 -293.39434814]
[255.88191223 -298.35095215]
[270.61746216 -301.28524780]
[285.61795044 -302.14010620]
[300.59146118 -300.89889526]
[315.24645996 -297.58578491]
[329.29772949 -292.26525879]
[342.47177124 -285.04089355]
[354.51208496 -276.05331421]
[365.18435669 -265.47744751]
[374.28079224 -253.51916504]
[381.62438965 -240.41123962]
[387.07220459 -226.40882874]
[390.51812744 -211.78446960]
[391.89514160 -196.82286072]
[391.17639160 -181.81520081]
[388.37594604 -167.05364990]
[383.54824829 -152.82553101]
[376.78729248 -139.40779114]
[368.22467041 -127.06163025]
[358.02706909 -116.02735138]
[346.39300537 -106.51975250]
[333.54891968 -98.72389221]
[319.74481201 -92.79152679]
[305.24938965 -88.83812714]
[290.34484863 -86.94065094]
[275.32125854 -87.13603210]
[260.47109985 -89.42046356]
[246.08340454 -93.74948120]
[239.80604553 -80.12616730]
[233.52868652 -66.50284576]
[227.25132751 -52.87953186]
[220.97396851 -39.25621414]
[222.67489624 -24.45905113]
[209.87248230 -15.16343117]
[203.59510803 -1.54011500]
[215.31036377 -10.90776157]
[229.02955627 -16.97273064]
[243.84274292 -19.33275223]
[258.76739502 -17.83129692]
[272.81365967 -12.56794834]
[285.04986572 -3.89180756]
[294.66442871 7.62166882]
[301.01965332 21.20883369]
[303.69403076 35.96849823]
[302.51016235 50.92170715]
[297.54660034 65.07666779]
[289.13253784 77.49453735]
[277.82601929 87.35167694]
[264.37704468 93.99429321]
[249.67755127 96.98181915]
[234.70256042 96.11609650]
[220.44528198 91.45453644]
[207.85136414 83.30633545]
[197.75610352 72.21193695]
[190.82908630 58.90718079]
[187.52976990 44.27452850]
[188.07696533 29.28451157]
[192.43650818 14.92668819]
[182.10984802 25.80602264]
[171.78317261 36.68535614]
[161.45651245 47.56468964]
[159.13157654 54.58013916]
[150.89418030 58.52767944]
[140.40667725 69.25205994]
[129.91917419 79.97644043]
[119.43167877 90.70082092]
[108.94417572 101.42520142]
[108.44029999 105.24861145]
[106.25357056 108.83135986]
[102.52925110 111.42683411]
[97.74080658 112.38111115]
[86.78489685 122.62650299]
[75.82898712 132.87188721]
[64.87307739 143.11727905]
[53.91717148 153.36267090]
[59.18961334 167.59211731]
[58.61405563 182.71533203]
[52.30932236 196.42898560]
[41.26444244 206.65631104]
[27.18364525 211.86169434]
[12.22342014 211.28111267]
[-1.33773506 205.03416443]
[-12.29364491 215.27955627]
[-23.24955368 225.52494812]
[-34.20546341 235.77033997]
[-39.00024796 250.84748840]
[-53.58094788 253.88928223]
[-64.53685760 264.13467407]
[-75.49276733 274.38006592]
[-86.44867706 284.62545776]
[-97.40458679 294.87084961]
[-88.20677185 306.73358154]
[-80.14276123 319.39440918]
[-73.28135681 332.74530029]
[-67.68109894 346.67230225]
[-63.38977051 361.05664062]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[61 205]
[62 204]
[63 203]
[64 202]
[65 201]
[67 199]
[68 198]
[69 197]
[70 196]
[77 189]
[78 188]
[79 187]
[80 186]
[81 185]
[82 181]
[83 180]
[84 179]
[85 178]
[86 177]
[87 175]
[88 174]
[89 173]
[90 172]
[91 149]
[92 148]
[94 146]
[95 145]
[96 144]
[97 143]
[98 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
