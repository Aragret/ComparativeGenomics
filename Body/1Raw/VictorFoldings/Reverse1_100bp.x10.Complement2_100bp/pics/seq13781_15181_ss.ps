%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUAAAAUAAAAUUCAAACAACCAAUCCAUCAACUCCAGAUCCCGACAAUCUUCAGGAUCCUUUCACUGUCGCUCCCGACACUCAAAAUCCAUCUCCCCCxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[76.54956055 653.61846924]
[69.54175568 666.91021729]
[60.71360016 679.06939697]
[50.24481964 689.84832764]
[38.34853745 699.02758789]
[25.26695633 706.42034912]
[11.26639462 711.87609863]
[-3.36811280 715.28369141]
[-18.33862495 716.57385254]
[-33.34036255 715.72027588]
[-48.06791306 712.74035645]
[-62.22143555 707.69470215]
[-75.51278687 700.68609619]
[-87.67136383 691.85717773]
[-98.44964600 681.38769531]
[-107.62819672 669.49084473]
[-115.02015686 656.40881348]
[-120.47502136 642.40789795]
[-123.88174438 627.77319336]
[-125.17097473 612.80261230]
[-124.31645966 597.80090332]
[-121.33560181 583.07354736]
[-116.28907776 568.92034912]
[-109.27963257 555.62945557]
[-100.44996643 543.47137451]
[-89.97985077 532.69378662]
[-78.08243561 523.51593018]
[-64.99993896 516.12481689]
[-50.99870300 510.67080688]
[-36.36377335 507.26498413]
[-21.39310074 505.97668457]
[-6.39146805 506.83212280]
[8.33571053 509.81390381]
[13.37262630 495.68487549]
[18.40954208 481.55584717]
[23.44645882 467.42681885]
[28.48337555 453.29779053]
[21.47544861 444.29470825]
[19.66505051 432.90884399]
[23.61618614 421.95062256]
[32.45609283 414.18167114]
[44.06507874 411.61883545]
[49.52043533 397.64602661]
[54.97579193 383.67321777]
[60.32698059 369.66021729]
[65.57369995 355.60772705]
[70.82041168 341.55526733]
[76.06713104 327.50280762]
[81.20909119 313.41165161]
[86.24600983 299.28262329]
[88.69173431 284.48336792]
[88.46840668 269.48501587]
[88.24507904 254.48667908]
[85.98329163 251.78175354]
[84.91928864 247.84690857]
[85.61685944 243.25706482]
[88.36173248 238.81716919]
[88.80834198 223.82380676]
[89.25495148 208.83045959]
[89.70155334 193.83711243]
[90.14816284 178.84376526]
[78.27089691 169.89566040]
[73.88827515 155.49925232]
[78.88153076 141.11450195]
[91.53376007 132.32659912]
[91.98036957 117.33325958]
[82.12097931 106.71541595]
[82.55238342 92.23231506]
[93.02628326 82.22013855]
[93.47288513 67.22679138]
[93.24955750 52.22845078]
[84.70457458 38.91327667]
[91.67061615 25.74803734]
[90.77780151 10.77463245]
[82.23281860 -2.54054093]
[89.19886017 -15.70578003]
[88.30604553 -30.67918587]
[87.41323090 -45.65259171]
[78.86824799 -58.96776581]
[85.83428955 -72.13300323]
[74.29639435 -82.59793854]
[73.60425568 -97.79581451]
[83.65206909 -108.73094177]
[82.75925446 -123.70434570]
[81.86643982 -138.67774963]
[80.63946533 -153.62748718]
[79.07894135 -168.54609680]
[77.51841736 -183.46469116]
[73.95043182 -189.03076172]
[73.75791168 -194.71054077]
[76.14033508 -198.84976196]
[75.02468872 -213.80821228]
[73.90903473 -228.76666260]
[59.16976929 -232.12008667]
[46.07459641 -239.67042542]
[35.78792572 -250.74635315]
[29.22444916 -264.36294556]
[26.96778107 -279.30947876]
[29.21858597 -294.25689697]
[35.77672195 -307.87609863]
[46.05904388 -318.95605469]
[59.15125656 -326.51153564]
[73.88920593 -329.87072754]
[88.96240997 -328.73495483]
[103.03056335 -323.20516968]
[114.84273529 -313.77310181]
[123.34860229 -301.27743530]
[127.79181671 -286.82925415]
[127.77730560 -271.71334839]
[123.30634308 -257.27374268]
[114.77650452 -244.79443359]
[102.94623566 -235.38507080]
[88.86749268 -229.88230896]
[89.98313904 -214.92385864]
[91.09878540 -199.96540833]
[92.43701935 -185.02522278]
[93.99754333 -170.10661316]
[95.55806732 -155.18800354]
[98.05216217 -152.69564819]
[99.46296692 -148.87142944]
[99.17766571 -144.23765564]
[96.83984375 -139.57057190]
[97.73265839 -124.59716034]
[98.62547302 -109.62375641]
[109.90152740 -99.96010590]
[111.02027130 -84.78765869]
[100.80769348 -73.02581787]
[109.28881836 -60.78164673]
[102.38663483 -46.54540634]
[103.27944946 -31.57200241]
[104.17226410 -16.59859657]
[112.65338898 -4.35442162]
[105.75120544 9.88181591]
[106.64402008 24.85522270]
[115.12514496 37.09939575]
[108.22296143 51.33563614]
[118.96356201 40.86473846]
[133.96347046 40.91755676]
[144.63005066 51.46382523]
[144.85302734 66.46216583]
[134.50463867 77.32085419]
[119.51293945 77.81952667]
[108.46623993 67.67339325]
[108.01963043 82.66674042]
[117.87902069 93.28458405]
[117.44761658 107.76768494]
[106.97371674 117.77986145]
[106.52711487 132.77320862]
[118.63385010 142.29859924]
[122.76205444 156.95504761]
[117.53031921 171.06507874]
[105.14151001 179.29037476]
[104.69490051 194.28372192]
[104.24829865 209.27706909]
[103.80168915 224.27041626]
[103.35508728 239.26376343]
[103.24341583 254.26335144]
[103.46674347 269.26168823]
[103.69007111 284.26004028]
[110.14483643 270.71984863]
[119.61425018 259.08670044]
[131.56277466 250.01849365]
[145.31466675 244.02804565]
[160.09219360 241.45416260]
[175.05960083 242.44241333]
[189.37042236 246.93690491]
[202.21530151 254.68345642]
[212.86779785 265.24395752]
[220.72547913 278.02114868]
[225.34393311 292.29244995]
[226.46197510 307.25073242]
[224.01638794 322.05001831]
[218.14544678 335.85336304]
[209.18119812 347.88009644]
[197.63063049 357.45004272]
[184.14697266 364.02203369]
[169.49276733 367.22430420]
[154.49682617 366.87582397]
[140.00720215 362.99627686]
[126.84337616 355.80505371]
[115.74982452 345.70886230]
[107.35393524 333.27868652]
[102.13053131 319.21752930]
[100.37503815 304.31954956]
[95.33811951 318.44857788]
[95.40415192 327.58276367]
[90.11960602 332.74951172]
[84.87288666 346.80197144]
[79.62616730 360.85446167]
[74.37944794 374.90692139]
[74.30947876 384.04107666]
[68.94859314 389.12860107]
[63.49323273 403.10137939]
[58.03787613 417.07418823]
[66.30105591 434.12219238]
[59.59415054 451.49832153]
[42.61240387 458.33468628]
[37.57548904 472.46371460]
[32.53857422 486.59277344]
[27.50165558 500.72180176]
[22.46474075 514.85083008]
[35.75695801 521.85778809]
[47.91663361 530.68518066]
[58.69621277 541.15332031]
[67.87623596 553.04901123]
[75.26980591 566.13012695]
[80.72640991 580.13037109]
[84.13494110 594.76464844]
[85.42602539 609.73510742]
[84.57337189 624.73687744]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 201]
[34 200]
[35 199]
[36 198]
[37 197]
[42 194]
[43 193]
[44 192]
[45 190]
[46 189]
[47 188]
[48 187]
[49 185]
[50 184]
[51 159]
[52 158]
[53 157]
[57 156]
[58 155]
[59 154]
[60 153]
[61 152]
[65 148]
[66 147]
[69 144]
[70 143]
[71 136]
[73 134]
[74 133]
[76 131]
[77 130]
[78 129]
[80 127]
[83 124]
[84 123]
[85 122]
[86 118]
[87 117]
[88 116]
[91 115]
[92 114]
[93 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
