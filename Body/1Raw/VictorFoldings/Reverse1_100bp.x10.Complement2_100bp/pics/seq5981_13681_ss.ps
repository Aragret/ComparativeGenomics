%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[202.80967712 638.94879150]
[209.52662659 625.47784424]
[218.81803894 613.63488770]
[230.30345154 603.90502930]
[243.51251221 596.68664551]
[239.11152649 582.34680176]
[227.98056030 572.44976807]
[231.32836914 556.98681641]
[226.92736816 542.64697266]
[221.95971680 537.17486572]
[222.56932068 528.06079102]
[218.38230896 513.65698242]
[214.19529724 499.25320435]
[210.00828552 484.84942627]
[205.82127380 470.44564819]
[201.63426208 456.04187012]
[197.44725037 441.63809204]
[193.26023865 427.23431396]
[178.33908081 428.55084229]
[163.44303894 426.93045044]
[149.14480591 422.43353271]
[135.99449158 415.23110962]
[124.49839783 405.59835815]
[115.09957886 393.90408325]
[108.16072083 380.59658813]
[103.95016479 366.18640137]
[102.63153839 351.22686768]
[104.25739288 336.29278564]
[108.76709747 321.95834351]
[115.98911285 308.77496338]
[125.64751434 297.25027466]
[137.37252808 287.82843018]
[150.71470642 280.87295532]
[146.52769470 266.46917725]
[142.34068298 252.06539917]
[129.03669739 240.62113953]
[133.57505798 222.77499390]
[129.17407227 208.43515015]
[124.56005859 194.16241455]
[119.73406219 179.95996094]
[114.90806580 165.75750732]
[109.97647095 151.59136963]
[104.93955231 137.46234131]
[99.73251343 132.21748352]
[99.93453217 123.08528900]
[95.10853577 108.88283539]
[89.73954773 102.87063599]
[90.31812286 94.43286133]
[85.70411682 80.16012573]
[81.09010315 65.88739014]
[76.47609711 51.61465836]
[71.86208344 37.34192657]
[67.21949005 32.63471603]
[65.85575867 27.11771584]
[67.33003998 22.57507896]
[63.14302826 8.17129707]
[58.95601654 -6.23248482]
[55.71659851 -9.12387562]
[53.76231384 -12.55101681]
[53.10377884 -16.04411507]
[53.59794998 -19.17818832]
[54.97603989 -21.61929512]
[51.65377808 -36.24675751]
[48.33152008 -50.87421417]
[44.12739182 -55.97684860]
[43.26130295 -61.59351349]
[45.13497925 -65.98650360]
[32.30239487 -74.81614685]
[29.58600998 -89.78530884]
[38.08280563 -101.96480560]
[35.19753265 -116.68469238]
[32.31225967 -131.40458679]
[29.31748581 -146.10258484]
[26.21337700 -160.77789307]
[21.37581635 -168.52616882]
[23.17401314 -175.69473267]
[20.28874016 -190.41462708]
[17.40346718 -205.13452148]
[14.51819515 -219.85441589]
[11.63292313 -234.57429504]
[8.74765015 -249.29418945]
[5.86237764 -264.01406860]
[-1.01871347 -250.68551636]
[-13.95991516 -243.10098267]
[-28.95125580 -243.61061096]
[-41.34750366 -252.05648804]
[-47.30754852 -265.82159424]
[-44.98460388 -280.64062500]
[-35.09846115 -291.92178345]
[-20.71244812 -296.16943359]
[-6.28422785 -292.06741333]
[3.71557093 -280.88656616]
[2.82275510 -295.85998535]
[1.92993927 -310.83337402]
[1.03712332 -325.80679321]
[0.14430748 -340.78021240]
[-14.23227501 -345.71804810]
[-25.62156296 -355.78543091]
[-32.28677368 -369.44720459]
[-33.21150970 -384.61996460]
[-28.25475502 -398.99005127]
[-18.17238045 -410.36608887]
[-4.50187349 -417.01330566]
[10.67211151 -417.91809082]
[25.03565216 -412.94244385]
[36.39841461 -402.84512329]
[43.02765656 -389.16586304]
[43.91247177 -373.99072266]
[38.91793060 -359.63372803]
[28.80566025 -348.28427124]
[15.11771297 -341.67300415]
[16.01052856 -326.69961548]
[16.90334511 -311.72619629]
[17.79616165 -296.75280762]
[18.68897629 -281.77938843]
[20.58226967 -266.89935303]
[23.46754074 -252.17945862]
[26.35281372 -237.45957947]
[29.23808670 -222.73968506]
[32.12335968 -208.01979065]
[35.00863266 -193.29989624]
[37.89390564 -178.58000183]
[40.88867950 -163.88200378]
[43.99279022 -149.20669556]
[48.45243073 -143.31320190]
[47.03215408 -134.28985596]
[49.91742325 -119.56996918]
[52.80269623 -104.85007477]
[65.26873779 -96.77954865]
[68.40450287 -81.89258575]
[59.85486984 -68.87178040]
[62.95898056 -54.19647598]
[66.28124237 -39.56901550]
[69.60350037 -24.94155502]
[73.35980225 -10.41949558]
[77.54681396 3.98428631]
[81.73381805 18.38806915]
[86.13481903 32.72791672]
[90.74883270 47.00064850]
[95.36283875 61.27338028]
[99.97684479 75.54611206]
[104.59085846 89.81884766]
[109.31098938 104.05683899]
[114.13698578 118.25929260]
[119.06858063 132.42543030]
[124.10549927 146.55445862]
[129.93486023 153.58697510]
[129.11051941 160.93151855]
[133.93652344 175.13397217]
[138.76251221 189.33642578]
[143.47468567 193.97398376]
[144.92039490 199.47007751]
[143.51391602 204.03414917]
[147.91491699 218.37400818]
[158.92329407 225.09547424]
[162.29368591 237.12977600]
[156.74446106 247.87838745]
[160.93147278 262.28216553]
[165.11848450 276.68594360]
[180.11018372 275.40509033]
[195.05892944 277.07318115]
[209.39038086 281.62429810]
[222.55429077 288.88171387]
[234.04563904 298.56488037]
[243.42396545 310.30017090]
[250.33030701 323.63540649]
[254.50086975 338.05718994]
[255.77716064 353.01077271]
[254.11201477 367.92120361]
[249.57128906 382.21563721]
[242.33126831 395.34530640]
[232.67185974 406.80642700]
[220.96575928 416.15979004]
[207.66401672 423.04730225]
[211.85102844 437.45108032]
[216.03804016 451.85485840]
[220.22505188 466.25863647]
[224.41206360 480.66241455]
[228.59907532 495.06619263]
[232.78608704 509.47000122]
[236.97309875 523.87377930]
[241.26722717 538.24597168]
[245.66821289 552.58581543]
[257.11395264 563.50854492]
[253.45137024 577.94580078]
[257.85235596 592.28564453]
[272.83660889 590.85131836]
[287.80282593 592.46301270]
[302.13812256 597.05468750]
[315.25552368 604.43841553]
[326.61785889 614.31170654]
[335.75982666 626.27038574]
[342.30709839 639.82464600]
[345.99157715 654.41949463]
[346.66235352 669.45727539]
[344.29196167 684.32220459]
[338.97750854 698.40557861]
[330.93655396 711.13067627]
[320.49841309 721.97637939]
[308.09054565 730.49865723]
[294.22097778 736.34851074]
[279.45770264 739.28631592]
[264.40527344 739.19177246]
[249.68003845 736.06884766]
[235.88502502 730.04534912]
[223.58512878 721.36798096]
[213.28399658 710.39196777]
[205.40347290 697.56695557]
[200.26625061 683.41796875]
[198.08270264 668.52441406]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 186]
[6 185]
[8 183]
[9 182]
[11 181]
[12 180]
[13 179]
[14 178]
[15 177]
[16 176]
[17 175]
[18 174]
[33 159]
[34 158]
[35 157]
[37 154]
[38 153]
[39 150]
[40 149]
[41 148]
[42 146]
[43 145]
[45 144]
[46 143]
[48 142]
[49 141]
[50 140]
[51 139]
[52 138]
[55 137]
[56 136]
[57 135]
[62 134]
[63 133]
[64 132]
[67 131]
[70 128]
[71 127]
[72 126]
[73 124]
[74 123]
[76 122]
[77 121]
[78 120]
[79 119]
[80 118]
[81 117]
[82 116]
[92 115]
[93 114]
[94 113]
[95 112]
[96 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
