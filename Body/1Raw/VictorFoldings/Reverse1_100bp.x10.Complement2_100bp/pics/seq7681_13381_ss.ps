%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[87.43220520 572.40771484]
[74.74197388 564.37811279]
[63.06975174 554.92956543]
[52.57339096 544.18975830]
[43.39484787 532.30401611]
[35.65824890 519.43304443]
[29.46822166 505.75094604]
[24.90847969 491.44271851]
[22.04069138 476.70190430]
[20.90363503 461.72778320]
[21.51269341 446.72293091]
[23.85962677 431.89025879]
[27.91269493 417.43035889]
[33.61708450 403.53875732]
[40.89565277 390.40335083]
[49.64996719 378.20175171]
[59.76162720 367.09902954]
[71.09389496 357.24526978]
[83.49349976 348.77377319]
[96.79277039 341.79910278]
[110.81183624 336.41558838]
[125.36110687 332.69601440]
[123.35709381 317.83047485]
[121.35308075 302.96496582]
[117.34412384 296.75607300]
[119.43159485 287.86337280]
[117.64913177 272.96966553]
[115.86666870 258.07592773]
[113.64154816 243.24189758]
[110.97575378 228.48068237]
[108.30995941 213.71946716]
[105.64416504 198.95825195]
[102.97836304 184.19703674]
[100.75502014 182.48973083]
[99.07399750 179.79885864]
[98.31330872 176.32656860]
[98.77088165 172.40800476]
[100.62075043 168.47966003]
[98.83827972 153.58593750]
[97.05581665 138.69221497]
[95.27335358 123.79850769]
[93.49088287 108.90478516]
[82.30910492 118.90318298]
[67.49555206 116.54553223]
[59.97021484 103.56980896]
[65.28050232 89.54123688]
[79.51186371 84.80115509]
[92.17258453 92.84236908]
[91.50279999 77.85733032]
[90.83301544 62.87229538]
[90.16323090 47.88725662]
[89.49344635 32.90221786]
[88.82366180 17.91717911]
[88.15387726 2.93213987]
[84.61420441 -11.64423561]
[78.33684540 -25.26755142]
[72.05948639 -38.89086914]
[65.78211975 -52.51418304]
[49.14996719 -55.59111023]
[37.74234772 -67.85355377]
[35.90996170 -84.33396912]
[44.17808533 -98.51549530]
[37.69858932 -112.04383850]
[31.21909523 -125.57218170]
[24.73959923 -139.10052490]
[18.26010323 -152.62887573]
[11.68007565 -166.10861206]
[4.99988127 -179.53898621]
[-9.25254345 -174.78350830]
[-24.02811241 -172.05795288]
[-39.03921509 -171.41534424]
[-53.99365616 -172.86822510]
[-68.60034180 -176.38827515]
[-82.57495117 -181.90701294]
[-95.64546204 -189.31700134]
[-107.55744934 -198.47399902]
[-118.07905579 -209.19976807]
[-127.00546265 -221.28552246]
[-134.16291809 -234.49600220]
[-139.41210938 -248.57408142]
[-142.65083313 -263.24569702]
[-143.81608582 -278.22531128]
[-142.88514709 -293.22128296]
[-139.87615967 -307.94174194]
[-134.84768677 -322.10015869]
[-127.89762115 -335.42092896]
[-119.16123199 -347.64474487]
[-108.80858612 -358.53366089]
[-97.04119873 -367.87576294]
[-84.08811951 -375.48916626]
[-70.20149231 -381.22567749]
[-55.65161514 -384.97366333]
[-40.72171402 -386.66012573]
[-25.70240021 -386.25225830]
[-10.88603020 -383.75799561]
[3.43899155 -379.22592163]
[16.99382401 -372.74420166]
[29.51461983 -364.43902588]
[40.75765610 -354.47207642]
[50.50408554 -343.03732300]
[58.56418991 -330.35739136]
[64.78107452 -316.67907715]
[69.03373718 -302.26861572]
[71.23937988 -287.40655518]
[71.35508728 -272.38214111]
[69.37859344 -257.48785400]
[65.34837341 -243.01362610]
[59.34288788 -229.24118042]
[51.47902679 -216.43861389]
[41.90985870 -204.85513306]
[30.82165909 -194.71620178]
[18.43025780 -186.21917725]
[25.11045265 -172.78880310]
[30.90384865 -168.19987488]
[31.78844833 -159.10836792]
[38.26794434 -145.58003235]
[44.74744034 -132.05168152]
[51.22693634 -118.52333832]
[57.70643234 -104.99498749]
[71.00465393 -103.81203461]
[82.07058716 -96.15113831]
[87.95289612 -83.92543030]
[87.01874542 -70.28190613]
[79.40544128 -58.79154587]
[85.68280029 -45.16822815]
[91.96015930 -31.54491234]
[98.23751831 -17.92159653]
[98.62719727 -32.91653442]
[102.29933167 -47.46010590]
[109.07474518 -60.84269333]
[118.62285614 -72.41133881]
[130.47779846 -81.60157776]
[144.06112671 -87.96499634]
[158.71008301 -91.19111633]
[173.70993042 -91.12252045]
[188.32878113 -87.76255798]
[201.85334778 -81.27516937]
[213.62373352 -71.97689056]
[223.06562805 -60.32140350]
[229.71836853 -46.87740326]
[233.25732422 -32.30085754]
[233.50984192 -17.30298233]
[230.46359253 -2.61556005]
[224.26721191 11.04477692]
[215.22302246 23.01151085]
[203.77232361 32.70075607]
[190.47381592 39.63975906]
[175.97636414 43.48994446]
[160.98733521 44.06345367]
[146.23806763 41.33230972]
[132.44822693 35.42976379]
[120.29062653 26.64381790]
[110.35847473 15.40315723]
[103.13891602 2.26235485]
[103.80870056 17.24739456]
[104.47848511 32.23243332]
[105.14826965 47.21747208]
[105.81805420 62.20251083]
[106.48783875 77.18754578]
[107.15762329 92.17258453]
[108.38460541 107.12232208]
[110.16706848 122.01603699]
[111.94953156 136.90975952]
[113.73200226 151.80346680]
[115.51446533 166.69718933]
[117.73958588 181.53123474]
[120.40538025 196.29244995]
[123.07117462 211.05366516]
[125.73696899 225.81488037]
[128.40277100 240.57609558]
[131.32379150 243.78881836]
[132.91093445 247.40068054]
[133.20249939 250.94332886]
[132.38494873 254.00898743]
[130.76037598 256.29348755]
[132.54284668 271.18719482]
[134.32531738 286.08090210]
[136.21861267 300.96093750]
[138.22262573 315.82647705]
[140.22663879 330.69201660]
[155.24148560 330.42605591]
[170.18568420 331.90505981]
[184.85713196 335.10900879]
[199.05738831 339.99459839]
[212.59445190 346.49572754]
[225.28521729 354.52447510]
[236.95806885 363.97229004]
[247.45515442 374.71136475]
[256.63449097 386.59649658]
[264.37194824 399.46691895]
[270.56289673 413.14862061]
[275.12356567 427.45654297]
[277.99234009 442.19720459]
[279.13040161 457.17120361]
[278.52233887 472.17611694]
[276.17642212 487.00894165]
[272.12429810 501.46911621]
[266.42083740 515.36108398]
[259.14315796 528.49700928]
[250.38964844 540.69915771]
[240.27873230 551.80255127]
[228.94712830 561.65710449]
[216.54808044 570.12939453]
[203.24928284 577.10498047]
[189.23057556 582.48944092]
[174.68154907 586.20996094]
[159.79896545 588.21624756]
[144.78410339 588.48120117]
[129.83999634 587.00122070]
[115.16876984 583.79626465]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 180]
[23 179]
[24 178]
[26 177]
[27 176]
[28 175]
[29 170]
[30 169]
[31 168]
[32 167]
[33 166]
[38 165]
[39 164]
[40 163]
[41 162]
[42 161]
[48 160]
[49 159]
[50 158]
[51 157]
[52 156]
[53 155]
[54 154]
[55 127]
[56 126]
[57 125]
[58 124]
[62 119]
[63 118]
[64 117]
[65 116]
[66 115]
[67 113]
[68 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
