%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUAAUCAGUAACAACCCACCACUAAUCAGCCAACAACUACUCUAUAAACCUCCACCCCUAGUUAUCUCCCCCUUUAUCUUACUAGUCAUGACGCCxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[126.74451447 564.12060547]
[113.25978851 570.84808350]
[98.58694458 574.28387451]
[83.51727295 574.24261475]
[68.86345673 570.72656250]
[55.41576385 563.92535400]
[43.89941025 554.20581055]
[34.93545151 542.09197998]
[29.00731087 528.23724365]
[26.43468094 513.38873291]
[27.35630226 498.34722900]
[31.72247314 483.92385864]
[39.29772949 470.89651489]
[49.67354965 459.96768188]
[62.29037476 451.72677612]
[76.46780396 446.61822510]
[91.44125366 444.91751099]
[93.22372437 430.02380371]
[87.05364227 416.46728516]
[96.37600708 403.68432617]
[98.15847015 388.79058838]
[99.94093323 373.89688110]
[101.72340393 359.00317383]
[103.50586700 344.10943604]
[104.62152100 329.15100098]
[101.67855835 322.37155151]
[105.18804169 313.93820190]
[105.85782623 298.95315552]
[106.52761078 283.96813965]
[107.19739532 268.98309326]
[107.86717987 253.99804688]
[108.53696442 239.01301575]
[105.69527435 232.19050598]
[109.32991791 223.81034851]
[110.22274017 208.83694458]
[109.32991791 193.86354065]
[106.66412354 179.10231018]
[103.99832916 164.34109497]
[101.33253479 149.57987976]
[98.66674042 134.81866455]
[88.79071808 123.66906738]
[93.95228577 108.71350861]
[90.73901367 94.06172180]
[86.98271179 79.53965759]
[83.22641754 65.01760101]
[79.47011566 50.49554062]
[75.71381378 35.97348404]
[72.56192017 32.98692322]
[70.71054077 29.50311470]
[70.15629578 25.99195862]
[70.74356079 22.87398911]
[72.19371796 20.47499466]
[69.30844879 5.75510263]
[66.42317200 -8.96478844]
[63.53790283 -23.68467903]
[60.65262985 -38.40457153]
[57.76735687 -53.12446213]
[54.77258301 -67.82246399]
[51.66847229 -82.49777222]
[41.30364609 -90.17456055]
[39.02034760 -102.46156311]
[45.50638580 -112.67223358]
[42.62111282 -127.39212799]
[39.73583984 -142.11201477]
[36.85056686 -156.83190918]
[26.60326767 -168.88609314]
[31.74797249 -182.86398315]
[28.86269951 -197.58387756]
[24.72737694 -183.16516113]
[16.74606323 -170.46482849]
[5.54819632 -160.48445129]
[-7.98311138 -154.01115417]
[-22.78072548 -151.55541992]
[-37.67764282 -153.31092834]
[-51.49903488 -159.13923645]
[-63.15488052 -168.58070374]
[-71.72595978 -180.89071655]
[-76.53631592 -195.09848022]
[-77.20658875 -210.08349609]
[-73.68391418 -224.66398621]
[-66.24610901 -237.69007874]
[-55.47974396 -248.13447571]
[-42.23390198 -255.17349243]
[-27.55320740 -258.25198364]
[-12.59543800 -257.12719727]
[1.45977223 -251.88781738]
[13.50397110 -242.94705200]
[22.58730316 -231.01000977]
[27.99420166 -217.01470947]
[29.55472374 -231.93331909]
[31.11524773 -246.85191345]
[28.89561081 -255.71255493]
[32.81167603 -261.98043823]
[34.59414291 -276.87414551]
[36.37660599 -291.76788330]
[38.15907288 -306.66159058]
[39.60849380 -321.59140015]
[40.72414017 -336.54983521]
[41.83979034 -351.50830078]
[27.91527367 -357.45697021]
[16.67842293 -367.60644531]
[9.34813118 -380.85580444]
[6.71953011 -395.76785278]
[9.07775211 -410.72503662]
[16.16699409 -424.10491943]
[27.21826935 -434.45614624]
[41.03281784 -440.65591431]
[56.11214066 -442.03167725]
[70.82054138 -438.43426514]
[83.56257629 -430.25381470]
[92.95606995 -418.37774658]
[97.98208618 -404.09426880]
[98.09545135 -388.95275879]
[93.28386688 -374.59561157]
[84.06924438 -362.58023071]
[71.45113373 -354.20993042]
[56.79824448 -350.39263916]
[55.68259430 -335.43420410]
[54.56694412 -320.47573853]
[56.57839584 -317.57980347]
[57.28710556 -313.56573486]
[56.18282700 -309.05642700]
[53.05279160 -304.87911987]
[51.27032471 -289.98541260]
[49.48785782 -275.09167480]
[47.70539474 -260.19796753]
[46.03385162 -245.29139709]
[44.47332764 -230.37278748]
[42.91280746 -215.45417786]
[43.58259201 -200.46914673]
[46.46786499 -185.74925232]
[56.50878906 -174.74794006]
[51.57045746 -159.71717834]
[54.45573044 -144.99728394]
[57.34100342 -130.27740479]
[60.22627640 -115.55751038]
[72.45619965 -102.97196198]
[66.34377289 -85.60188293]
[69.44788361 -70.92657471]
[73.90752411 -65.03307343]
[72.48725128 -56.00973511]
[75.37252045 -41.28984451]
[78.25779724 -26.56995201]
[81.14306641 -11.85006142]
[84.02834320 2.86983013]
[86.91361237 17.58972168]
[90.23587036 32.21718216]
[93.99217224 46.73924255]
[97.74847412 61.26129913]
[101.50477600 75.78335571]
[105.26107788 90.30541992]
[115.00681305 78.90276337]
[130.00256348 79.26017761]
[139.19400024 91.11418152]
[135.80554199 105.72644806]
[122.33504486 112.32536316]
[108.71350861 106.04771423]
[118.78019714 118.25312805]
[113.42795563 132.15286255]
[116.09375000 146.91409302]
[118.75954437 161.67530823]
[121.42533875 176.43652344]
[124.09114075 191.19773865]
[128.90065002 176.98968506]
[138.22544861 165.24029541]
[150.97006226 157.32987976]
[165.63726807 154.18772888]
[180.50396729 156.18298340]
[193.82365417 163.08123779]
[204.03153992 174.07211304]
[209.92839050 187.86439514]
[210.82147217 202.83778381]
[206.60586548 217.23323059]
[197.77680969 229.35954285]
[185.37153625 237.79217529]
[170.84739685 241.54043579]
[155.91069031 240.16400146]
[142.31614685 233.82456970]
[131.66084290 223.26689148]
[125.19614410 209.72975159]
[124.30332947 224.70315552]
[123.52200317 239.68280029]
[122.85221863 254.66783142]
[122.18243408 269.65286255]
[121.51264954 284.63790894]
[120.84286499 299.62295532]
[120.17308044 314.60800171]
[119.61486816 329.59759521]
[131.24679565 320.12667847]
[146.18217468 321.51751709]
[155.86534119 332.97335815]
[154.74934387 347.93179321]
[143.47346497 357.82394409]
[128.49703979 356.98312378]
[118.39958954 345.89190674]
[116.61711884 360.78564453]
[114.83465576 375.67935181]
[113.05218506 390.57305908]
[111.26972198 405.46679688]
[117.31230927 420.08859253]
[108.11743927 431.80627441]
[106.33496857 446.69998169]
[120.48422241 451.88607788]
[133.05574036 460.19592285]
[143.37158203 471.18136597]
[150.87541199 484.25000000]
[155.16255188 498.69705200]
[156.00181580 513.74340820]
[153.34794617 528.57757568]
[147.34403992 542.39965820]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 202]
[18 201]
[20 199]
[21 198]
[22 197]
[23 196]
[24 195]
[25 188]
[27 187]
[28 186]
[29 185]
[30 184]
[31 183]
[32 182]
[34 181]
[35 180]
[36 163]
[37 162]
[38 161]
[39 160]
[40 159]
[42 157]
[43 151]
[44 150]
[45 149]
[46 148]
[47 147]
[52 146]
[53 145]
[54 144]
[55 143]
[56 142]
[57 141]
[58 139]
[59 138]
[62 136]
[63 135]
[64 134]
[65 133]
[67 131]
[68 130]
[89 129]
[90 128]
[91 127]
[93 126]
[94 125]
[95 124]
[96 123]
[97 119]
[98 118]
[99 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
