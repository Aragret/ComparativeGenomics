%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[157.08311462 472.57281494]
[159.49096680 457.73974609]
[164.03295898 443.41534424]
[170.61227417 429.90496826]
[179.08868408 417.49655151]
[189.28150940 406.45462036]
[200.97349548 397.01452637]
[213.91540527 389.37747192]
[208.25262451 375.48745728]
[202.58982849 361.59744263]
[196.92704773 347.70739746]
[191.26426697 333.81738281]
[185.60147095 319.92733765]
[179.93869019 306.03732300]
[166.15306091 300.51535034]
[160.21232605 286.50958252]
[166.09773254 272.08737183]
[160.43493652 258.19735718]
[154.66891479 244.34986877]
[148.79994202 230.54568481]
[142.93098450 216.74150085]
[137.06202698 202.93733215]
[121.21061707 197.31848145]
[114.18932343 181.66548157]
[120.78858185 165.46458435]
[114.71475220 151.74931335]
[108.64091492 138.03404236]
[102.56708527 124.31877899]
[96.49324799 110.60351562]
[90.31748199 96.93384552]
[78.50978851 91.74335480]
[73.56182098 80.26722717]
[77.62527466 68.87359619]
[71.55143738 55.15832901]
[65.47760773 41.44306183]
[59.40377045 27.72779465]
[55.80710220 25.29511261]
[53.41246796 22.15979004]
[52.29315567 18.78598595]
[52.36417770 15.61398983]
[53.40378189 13.01065159]
[48.15706253 -1.04181993]
[42.91034317 -15.09429073]
[37.66362381 -29.14676285]
[32.41690826 -43.19923401]
[22.27692032 -47.13488007]
[16.10395813 -55.82250214]
[15.73927402 -66.25395966]
[21.06200027 -74.97644043]
[16.23600197 -89.17889404]
[11.41000462 -103.38134766]
[6.47841120 -117.54748535]
[1.44149518 -131.67651367]
[-13.03492260 -127.72041321]
[-27.76907730 -124.87049103]
[-42.67657089 -123.14305115]
[-57.67201233 -122.54801178]
[-72.66950989 -123.08876038]
[-87.58316040 -124.76221466]
[-102.32753754 -127.55878448]
[-116.81818390 -131.46244812]
[-130.97209167 -136.45083618]
[-144.70820618 -142.49540710]
[-157.94783020 -149.56150818]
[-170.61512756 -157.60867310]
[-182.63755798 -166.59080505]
[-193.94622803 -176.45645142]
[-204.47639465 -187.14912415]
[-214.16770935 -198.60755920]
[-222.96469116 -210.76611328]
[-230.81692505 -223.55516052]
[-237.67944336 -236.90144348]
[-243.51295471 -250.72850037]
[-248.28402710 -264.95715332]
[-251.96531677 -279.50585938]
[-254.53576660 -294.29135132]
[-255.98065186 -309.22888184]
[-256.29165649 -324.23287964]
[-255.46705627 -339.21746826]
[-253.51153564 -354.09677124]
[-250.43630981 -368.78555298]
[-246.25900269 -383.19967651]
[-241.00350952 -397.25662231]
[-234.69996643 -410.87582397]
[-227.38446045 -423.97927856]
[-219.09890747 -436.49194336]
[-209.89074707 -448.34216309]
[-199.81275940 -459.46200562]
[-188.92262268 -469.78784180]
[-177.28276062 -479.26046753]
[-164.95982361 -487.82568359]
[-152.02439880 -495.43435669]
[-138.55058289 -502.04296875]
[-124.61555481 -507.61364746]
[-110.29912567 -512.11444092]
[-95.68331146 -515.51965332]
[-80.85182190 -517.80969238]
[-65.88961792 -518.97149658]
[-50.88239670 -518.99835205]
[-35.91612244 -517.89019775]
[-21.07652283 -515.65332031]
[-6.44859600 -512.30053711]
[7.88386774 -507.85104370]
[21.83877373 -502.33035278]
[35.33618546 -495.77008057]
[48.29879379 -488.20779419]
[60.65235138 -479.68682861]
[72.32608795 -470.25595093]
[83.25314331 -459.96923828]
[93.37093353 -448.88555908]
[102.62149048 -437.06842041]
[110.95183563 -424.58554077]
[118.31425476 -411.50836182]
[124.66657257 -397.91183472]
[129.97239685 -383.87384033]
[134.20133972 -369.47476196]
[137.32919312 -354.79708862]
[139.33802795 -339.92489624]
[140.21632385 -324.94338989]
[139.95907593 -309.93835449]
[138.56774902 -294.99572754]
[136.05029297 -280.20114136]
[132.42115784 -265.63931274]
[127.70111847 -251.39367676]
[121.91720581 -237.54579163]
[115.10255432 -224.17501831]
[107.29619598 -211.35791016]
[98.54285431 -199.16789246]
[88.89265442 -187.67480469]
[78.40088654 -176.94447327]
[67.12763214 -167.03834534]
[55.13747787 -158.01318359]
[42.49909592 -149.92068481]
[29.28488350 -142.80717468]
[15.57052517 -136.71342468]
[20.60744095 -122.58439636]
[25.81447983 -117.33953857]
[25.61246109 -108.20734406]
[30.43845749 -94.00489044]
[35.26445770 -79.80243683]
[50.69940567 -68.15557861]
[46.46937943 -48.44595337]
[51.71609879 -34.39348221]
[56.96281433 -20.34100914]
[62.20953369 -6.28853798]
[67.45625305 7.76393318]
[73.11904144 21.65395927]
[79.19287109 35.36922836]
[85.26670837 49.08449173]
[91.34053802 62.79975891]
[106.05421448 72.36399841]
[103.94079590 90.65648651]
[109.90612793 96.07749176]
[110.20851898 104.52967834]
[116.28234863 118.24494934]
[122.35618591 131.96022034]
[128.43002319 145.67547607]
[134.50384521 159.39074707]
[147.54364014 162.76393127]
[156.13441467 172.88366699]
[157.31069946 185.91050720]
[150.86619568 197.06837463]
[156.73516846 210.87254333]
[162.60412598 224.67672729]
[168.47308350 238.48089600]
[174.71070862 245.15397644]
[174.32496643 252.53456116]
[179.98774719 266.42459106]
[194.27909851 272.62097168]
[199.82409668 286.78811646]
[193.82872009 300.37454224]
[199.49150085 314.26455688]
[205.15428162 328.15460205]
[210.81707764 342.04461670]
[216.47985840 355.93463135]
[222.14265442 369.82467651]
[227.80543518 383.71469116]
[242.39794922 380.12631226]
[257.35742188 378.70095825]
[272.36502075 379.46899414]
[287.10086060 382.41406250]
[301.25079346 387.47338867]
[314.51327515 394.53912354]
[326.60559082 403.46066284]
[337.26995850 414.04785156]
[346.27911377 426.07504272]
[353.44104004 439.28582764]
[358.60302734 453.39865112]
[361.65505981 468.11267090]
[362.53210449 483.11428833]
[361.21545410 498.08374023]
[357.73318481 512.70196533]
[352.15948486 526.65728760]
[344.61322021 539.65234375]
[335.25518799 551.41015625]
[324.28488159 561.67999268]
[311.93612671 570.24304199]
[298.47210693 576.91674805]
[284.17987061 581.55889893]
[269.36401367 584.07049561]
[254.34034729 584.39807129]
[239.42909241 582.53460693]
[224.94810486 578.51977539]
[211.20603943 572.43920898]
[198.49580383 564.42248535]
[187.08830261 554.64050293]
[177.22673035 543.30175781]
[169.12124634 530.64794922]
[162.94464111 516.94879150]
[158.82855225 502.49624634]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 177]
[9 176]
[10 175]
[11 174]
[12 173]
[13 172]
[14 171]
[17 168]
[18 167]
[19 165]
[20 164]
[21 163]
[22 162]
[25 158]
[26 157]
[27 156]
[28 155]
[29 154]
[30 152]
[33 150]
[34 149]
[35 148]
[36 147]
[41 146]
[42 145]
[43 144]
[44 143]
[45 142]
[49 140]
[50 139]
[51 138]
[52 136]
[53 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
