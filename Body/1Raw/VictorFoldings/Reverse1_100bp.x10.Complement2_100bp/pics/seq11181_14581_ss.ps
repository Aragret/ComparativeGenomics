%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCACUCGGAUCCCACAACACUCACAUUUAAUCACGCUACUCAUCCCCUUCCCUCGGAUGAUCCCACAUCUUAUCCUUCAUACACGGACGCAAGUCCGCAxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[69.99451447 553.25665283]
[61.24051285 541.04406738]
[54.31372833 527.70989990]
[49.35518265 513.52557373]
[46.46582031 498.77999878]
[45.70446777 483.77331543]
[47.08662415 468.81100464]
[50.58415604 454.19772339]
[56.12585068 440.23095703]
[63.59888840 427.19506836]
[72.85112762 415.35543823]
[83.69421387 404.95312500]
[95.90737915 396.19989014]
[109.24198914 389.27392578]
[123.42656708 384.31625366]
[120.54129791 369.59634399]
[117.65602112 354.87646484]
[114.26255798 351.51589966]
[112.94416046 345.98788452]
[114.91085052 339.67572021]
[112.46511841 324.87643433]
[110.01939392 310.07714844]
[107.57366943 295.27789307]
[105.12793732 280.47860718]
[102.68221283 265.67935181]
[100.23648071 250.88008118]
[92.33454895 263.62997437]
[78.49156952 269.40679932]
[63.87062454 266.05596924]
[53.92497253 254.82725525]
[52.36409378 239.90867615]
[59.77016068 226.86451721]
[73.38088989 220.55990601]
[88.11981201 223.34631348]
[98.49019623 234.18553162]
[90.19230652 221.81643677]
[97.30567932 207.68455505]
[89.00779724 195.31546021]
[96.12117004 181.18356323]
[87.82328033 168.81446838]
[94.93665314 154.68257141]
[94.26686859 139.69754028]
[93.59708405 124.71250153]
[92.92729950 109.72746277]
[92.03448486 94.75405121]
[90.91883850 79.79560089]
[89.80318451 64.83715057]
[88.68753815 49.87869644]
[72.78965759 37.59305954]
[71.07887268 17.88070869]
[84.21100616 3.49108791]
[82.42854309 -11.40262985]
[80.64607239 -26.29634666]
[77.65129852 -40.99435043]
[73.46428680 -55.39813232]
[69.27728271 -69.80191803]
[65.09027100 -84.20569611]
[60.90325546 -98.60948181]
[49.62139893 -109.70137787]
[53.49854279 -124.08251190]
[49.31153107 -138.48629761]
[44.06481171 -152.53877258]
[37.78745270 -166.16207886]
[31.51009178 -179.78540039]
[25.23273087 -193.40872192]
[18.95536995 -207.03202820]
[6.15294743 -216.32765198]
[7.85388136 -231.12481689]
[1.57652080 -244.74813843]
[-4.70084000 -258.37145996]
[-19.11856651 -254.13505554]
[-33.99948502 -252.04313660]
[-49.02640915 -252.14028931]
[-63.87903595 -254.42442322]
[-78.24078369 -258.84686279]
[-91.80553436 -265.31335449]
[-104.28414154 -273.68606567]
[-115.41063690 -283.78649902]
[-124.94785309 -295.39941406]
[-132.69250488 -308.27722168]
[-138.47950745 -322.14547729]
[-142.18553162 -336.70855713]
[-143.73155212 -351.65603638]
[-143.08464050 -366.66934204]
[-140.25857544 -381.42846680]
[-135.31359863 -395.61877441]
[-128.35510254 -408.93783569]
[-119.53141785 -421.10174561]
[-109.03061676 -431.85119629]
[-97.07653046 -440.95712280]
[-83.92396545 -448.22537231]
[-69.85324860 -453.50106812]
[-55.16432190 -456.67175293]
[-40.17026520 -457.66983032]
[-25.19068146 -456.47399902]
[-10.54486465 -453.10980225]
[3.45501137 -447.64889526]
[16.51053810 -440.20773315]
[28.34343529 -430.94488525]
[38.70148468 -420.05780029]
[47.36390686 -407.77853394]
[54.14605331 -394.36880493]
[58.90336990 -380.11450195]
[61.53445435 -365.31939697]
[61.98321915 -350.29885864]
[60.24010468 -335.37304688]
[56.34226227 -320.86013794]
[50.37277603 -307.06945801]
[42.45888138 -294.29492188]
[32.76927185 -282.80889893]
[21.51047516 -272.85614014]
[8.92247677 -264.64880371]
[15.19983673 -251.02549744]
[21.47719765 -237.40217590]
[33.83062363 -229.08099365]
[32.57868576 -213.30938721]
[38.85604858 -199.68608093]
[45.13340759 -186.06275940]
[51.41077042 -172.43943787]
[57.68812943 -158.81613159]
[60.65673828 -173.51943970]
[70.50495148 -184.83370972]
[84.65845490 -189.80142212]
[99.41757202 -187.12402344]
[110.92430115 -177.50138855]
[116.17080688 -163.44883728]
[113.78566742 -148.63967896]
[104.39235687 -136.94499207]
[90.44625092 -131.42173767]
[75.59284210 -133.51368713]
[63.71531296 -142.67330933]
[67.90232849 -128.26953125]
[78.88469696 -118.20787811]
[75.30703735 -102.79649353]
[79.49404907 -88.39270782]
[83.68106079 -73.98892975]
[87.86807251 -59.58514404]
[92.05508423 -45.18136215]
[96.71888733 -59.43790054]
[107.40928650 -69.96004486]
[121.73801422 -74.39710999]
[136.50399780 -71.75784302]
[148.40847778 -62.63187790]
[154.79196167 -49.05796814]
[154.22837830 -34.06855774]
[146.84361267 -21.01232529]
[134.28744507 -12.80606270]
[119.36495972 -11.28307247]
[105.40988159 -16.78359222]
[95.53979492 -28.07881355]
[97.32225800 -13.18509483]
[99.10472870 1.70862198]
[108.58505249 5.64491367]
[115.63111115 13.22043514]
[118.92240906 23.11388206]
[117.80146790 33.56122589]
[112.40390778 42.67020416]
[103.64598846 48.76304626]
[104.76164246 63.72150040]
[105.87728882 78.67995453]
[106.99293518 93.63840485]
[110.08946991 97.87225342]
[110.59342957 103.53964233]
[107.91233826 109.05767822]
[108.58212280 124.04271698]
[109.25190735 139.02775574]
[109.92169189 154.01278687]
[118.26748657 167.45370483]
[111.10620880 180.51377869]
[119.45199585 193.95469666]
[112.29071808 207.01475525]
[120.63651276 220.45568848]
[113.47523499 233.51574707]
[115.03575134 248.43435669]
[117.48148346 263.23361206]
[119.92720795 278.03289795]
[122.37294006 292.83215332]
[124.81866455 307.63143921]
[127.26438904 322.43069458]
[129.71011353 337.22998047]
[132.37591553 351.99118042]
[135.26118469 366.71109009]
[138.14645386 381.43096924]
[153.15301514 380.66683960]
[168.11557007 382.04623413]
[182.72950745 385.54104614]
[196.69729614 391.08013916]
[209.73457336 398.55075073]
[221.57591248 407.80081177]
[231.98025513 418.64193726]
[240.73576355 430.85348511]
[247.66419983 444.18682861]
[252.62451172 458.37048340]
[255.51570129 473.11569214]
[256.27890015 488.12231445]
[254.89860535 503.08477783]
[251.40287781 517.69848633]
[245.86291504 531.66595459]
[238.39147949 544.70275879]
[229.14071655 556.54351807]
[218.29891968 566.94720459]
[206.08683777 575.70196533]
[192.75308228 582.62957764]
[178.56910706 587.58898926]
[163.82369995 590.47924805]
[148.81704712 591.24151611]
[133.85466003 589.86029053]
[119.24116516 586.36370850]
[105.27406311 580.82287598]
[92.23770905 573.35064697]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 183]
[16 182]
[17 181]
[20 180]
[21 179]
[22 178]
[23 177]
[24 176]
[25 175]
[26 174]
[35 173]
[37 171]
[39 169]
[41 167]
[42 166]
[43 165]
[44 164]
[45 161]
[46 160]
[47 159]
[48 158]
[51 152]
[52 151]
[53 150]
[54 138]
[55 137]
[56 136]
[57 135]
[58 134]
[60 132]
[61 131]
[62 120]
[63 119]
[64 118]
[65 117]
[66 116]
[68 114]
[69 113]
[70 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
