%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUUCGAAUCCCUCUCGACCCAACAAACCCAACACCGAGUCACAGUCAAGCUCUAUUAUUGAAGAACCAGAUCCGUGUACUUAUAACAACACCCCUxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[153.51266479 563.02770996]
[148.05798340 549.04113770]
[144.02304077 534.58093262]
[141.44795227 519.79083252]
[140.35829163 504.81777954]
[140.76489258 489.81066895]
[142.66372681 474.91864014]
[146.03590393 460.28964233]
[150.84793091 446.06912231]
[157.05195618 432.39840698]
[164.58634949 419.41336060]
[173.37620544 407.24304199]
[183.33416748 396.00836182]
[194.36128235 385.82104492]
[206.34793091 376.78231812]
[219.17498779 368.98199463]
[212.69549561 355.45364380]
[206.21600342 341.92529297]
[200.49156189 337.25061035]
[199.74243164 328.14694214]
[193.46505737 314.52365112]
[187.08645630 300.94741821]
[180.60696411 287.41909790]
[174.12747192 273.89074707]
[167.64797974 260.36239624]
[156.34678650 256.04849243]
[150.83789062 244.83082581]
[154.56410217 232.48262024]
[148.28674316 218.85929871]
[132.27505493 213.71488953]
[124.79083252 198.27789307]
[130.90480042 181.88768005]
[124.42531586 168.35934448]
[117.94581604 154.83099365]
[111.46632385 141.30264282]
[104.98682404 127.77430725]
[98.50733185 114.24595642]
[87.08138275 106.18746185]
[87.96432495 92.23353577]
[81.48483276 78.70519257]
[81.31845093 93.70426941]
[77.86325836 108.30090332]
[71.28784180 121.78288269]
[61.91302490 133.49240112]
[50.19623184 142.85812378]
[36.70914841 149.42308044]
[22.10983849 152.86694336]
[7.11063671 153.02166748]
[-7.55661392 149.87974548]
[-21.17626572 143.59443665]
[-33.08378601 134.47242737]
[-42.69817734 122.95880127]
[-49.55033493 109.61534119]
[-53.30593109 95.09310150]
[-53.78171158 80.10064697]
[-50.95447159 65.36949921]
[-44.96215439 51.61842346]
[-36.09713745 39.51836395]
[-24.79196930 29.65970612]
[-11.59824753 22.52347946]
[2.84027219 18.45787430]
[17.81910515 17.66126251]
[32.60739899 20.17251205]
[46.48360062 25.86909294]
[58.77065659 34.47305679]
[68.86906433 45.56459427]
[76.28347015 58.59645081]
[75.39065552 43.62304688]
[74.49784088 28.64964104]
[73.60501862 13.67623520]
[72.71220398 -1.29717028]
[71.81938934 -16.27057648]
[70.92657471 -31.24398232]
[61.81520462 -40.37337112]
[61.37983322 -52.86313629]
[69.30877686 -61.99869537]
[68.63899231 -76.98373413]
[61.08092880 -64.02704620]
[48.69830704 -55.56119537]
[33.88201523 -53.22079849]
[19.49284554 -57.45774841]
[8.30912113 -67.45396423]
[2.49024415 -81.27932739]
[3.15974927 -96.26438141]
[10.18836498 -109.51573944]
[22.21897697 -118.47477722]
[36.92866135 -121.41165161]
[51.47720718 -117.75928497]
[63.05552292 -108.22290039]
[69.42828369 -94.64257050]
[71.43229675 -109.50810242]
[73.43630981 -124.37362671]
[75.44033051 -139.23915100]
[77.11186981 -154.14573669]
[78.45010376 -169.08592224]
[79.78833771 -184.02610779]
[81.12657166 -198.96629333]
[82.46480560 -213.90647888]
[83.80303955 -228.84664917]
[69.88277435 -234.76962280]
[58.47544861 -244.70582581]
[50.69862747 -257.68179321]
[47.31420898 -272.42633057]
[48.65376282 -287.49487305]
[54.58605576 -301.41116333]
[64.52989197 -312.81182861]
[77.51109314 -320.57995605]
[92.25787354 -323.95449829]
[107.32550812 -322.60482788]
[121.23782349 -316.66320801]
[132.63182068 -306.71173096]
[140.39125061 -293.72534180]
[143.75590515 -278.97628784]
[142.39616394 -263.90957642]
[136.44522095 -250.00125122]
[126.48611450 -238.61392212]
[113.49451447 -230.86318970]
[98.74322510 -227.50842285]
[97.40499115 -212.56823730]
[96.06675720 -197.62805176]
[94.72852325 -182.68786621]
[93.39028931 -167.74768066]
[92.05205536 -152.80749512]
[94.02016449 -149.88194275]
[94.66902924 -145.85775757]
[93.49774170 -141.36538696]
[90.30585480 -137.23513794]
[88.30184174 -122.36961365]
[86.29782867 -107.50408936]
[84.29381561 -92.63855743]
[83.62403107 -77.65351868]
[84.29381561 -62.66847992]
[94.52147675 -48.40797806]
[85.89997864 -32.13679886]
[86.79279327 -17.16339111]
[87.68560791 -2.18998623]
[88.57843018 12.78341961]
[89.47124481 27.75682449]
[90.36405945 42.73023224]
[91.25687408 57.70363617]
[95.01317596 72.22569275]
[101.49266815 85.75404358]
[112.91861725 93.81253815]
[112.03567505 107.76646423]
[118.51516724 121.29480743]
[124.99466705 134.82315063]
[131.47416687 148.35150146]
[137.95365906 161.87985229]
[144.43315125 175.40818787]
[157.56759644 178.39163208]
[166.45585632 188.25111389]
[168.01948547 201.23715210]
[161.91004944 212.58193970]
[168.18740845 226.20526123]
[183.46586609 236.48390198]
[181.17631531 253.88290405]
[187.65580750 267.41125488]
[194.13531494 280.93960571]
[200.61480713 294.46792603]
[207.14416504 300.85583496]
[207.08837891 308.24627686]
[213.36573792 321.86959839]
[219.74435425 335.44580078]
[226.22384644 348.97415161]
[232.70333862 362.50250244]
[246.82125854 357.39730835]
[261.37734985 353.72323608]
[276.22692871 351.51672363]
[291.22241211 350.79974365]
[306.21478271 351.57943726]
[321.05499268 353.84802246]
[335.59558105 357.58294678]
[349.69204712 362.74713135]
[363.20425415 369.28921509]
[375.99792480 377.14416504]
[387.94589233 386.23397827]
[398.92944336 396.46823120]
[408.83938599 407.74526978]
[417.57723999 419.95300293]
[425.05618286 432.97006226]
[431.20184326 446.66714478]
[435.95315552 460.90805054]
[439.26287842 475.55126953]
[441.09817505 490.45129395]
[441.44076538 505.45999146]
[440.28723145 520.42822266]
[437.64907837 535.20721436]
[433.55249023 549.65008545]
[428.03817749 563.61328125]
[421.16098022 576.95806885]
[412.98922729 589.55175781]
[403.60415649 601.26922607]
[393.09899902 611.99395752]
[381.57818604 621.61944580]
[369.15625000 630.04998779]
[355.95660400 637.20178223]
[342.11047363 643.00372314]
[327.75543213 647.39825439]
[313.03417969 650.34155273]
[298.09301758 651.80450439]
[283.08041382 651.77246094]
[268.14562988 650.24584961]
[253.43707275 647.23974609]
[239.10092163 642.78405762]
[225.27964783 636.92303467]
[212.11064148 629.71502686]
[199.72476196 621.23156738]
[188.24513245 611.55700684]
[177.78584290 600.78753662]
[168.45082092 589.03015137]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 165]
[17 164]
[18 163]
[20 162]
[21 161]
[22 159]
[23 158]
[24 157]
[25 156]
[28 154]
[29 153]
[32 149]
[33 148]
[34 147]
[35 146]
[36 145]
[37 144]
[39 142]
[40 141]
[67 140]
[68 139]
[69 138]
[70 137]
[71 136]
[72 135]
[73 134]
[76 132]
[77 131]
[90 130]
[91 129]
[92 128]
[93 127]
[94 123]
[95 122]
[96 121]
[97 120]
[98 119]
[99 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
