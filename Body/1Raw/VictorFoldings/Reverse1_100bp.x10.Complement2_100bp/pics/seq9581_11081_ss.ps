%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[50.55641556 530.29943848]
[46.69596100 544.83032227]
[40.49631882 558.52758789]
[32.12660980 571.01745605]
[21.81517220 581.95935059]
[9.84330654 591.05462646]
[-3.46238518 598.05523682]
[-17.73891258 602.77014160]
[-32.59680557 605.07080078]
[-47.63072205 604.89434814]
[-62.43053436 602.24572754]
[-76.59249115 597.19708252]
[-89.73023987 589.88616943]
[-101.48537445 580.51245117]
[-111.53720856 569.33160400]
[-119.61151886 556.64874268]
[-125.48802948 542.80981445]
[-129.00643921 528.19232178]
[-130.07073975 513.19506836]
[-128.65191650 498.22720337]
[-124.78866577 483.69705200]
[-118.58638000 470.00103760]
[-110.21426392 457.51272583]
[-99.90071869 446.57287598]
[-87.92710114 437.47988892]
[-74.62006378 430.48184204]
[-60.34262466 425.76965332]
[-45.48429108 423.47189331]
[-30.45040703 423.65118408]
[-15.65110493 426.30270386]
[-10.61418819 412.17367554]
[-5.57727242 398.04464722]
[-0.54035616 383.91561890]
[-5.43997097 372.85577393]
[-1.35926592 361.04342651]
[10.02967167 354.98910522]
[15.27639008 340.93661499]
[20.10238838 326.73416138]
[24.50338554 312.39431763]
[28.90438461 298.05447388]
[33.30538177 283.71463013]
[37.70637894 269.37478638]
[42.10737610 255.03492737]
[46.50837708 240.69508362]
[50.90937424 226.35523987]
[55.31037140 212.01539612]
[54.26771545 204.69865417]
[59.88511276 197.49569702]
[64.49912262 183.22296143]
[69.11313629 168.95022583]
[73.72714233 154.67749023]
[68.50040436 143.76841736]
[72.22760773 131.83981323]
[83.43123627 125.44907379]
[88.25723267 111.24662018]
[84.56626892 94.88345337]
[97.30129242 83.96578979]
[101.91529846 69.69305420]
[106.52930450 55.42031860]
[111.14331818 41.14758682]
[108.02609253 25.63650894]
[119.30317688 15.90631008]
[112.36139679 1.96179724]
[117.24397278 -12.44705582]
[130.58071899 -18.97904778]
[135.19473267 -33.25178146]
[139.80873108 -47.52451324]
[126.49398804 -40.61673355]
[111.82718658 -43.76076508]
[102.51379395 -55.51919937]
[102.81177521 -70.51623535]
[112.58489227 -81.89543915]
[127.36500549 -84.45438385]
[140.39485168 -77.02315521]
[145.71739197 -62.99736023]
[151.79122925 -76.71263123]
[157.86505127 -90.42789459]
[163.93888855 -104.14316559]
[167.26115417 -118.77062225]
[167.70774841 -133.76397705]
[168.15435791 -148.75732422]
[168.60096741 -163.75067139]
[155.09297180 -177.03405762]
[155.57562256 -195.65339661]
[169.27571106 -207.79519653]
[169.27571106 -222.79519653]
[169.27571106 -237.79519653]
[169.27571106 -252.79519653]
[154.46464539 -255.40351868]
[140.33158875 -260.54431152]
[127.30601501 -268.06134033]
[115.78378296 -277.72616577]
[106.11502075 -289.24511719]
[98.59355927 -302.26812744]
[93.44795990 -316.39944458]
[90.83460236 -331.20962524]
[90.83289337 -346.24859619]
[93.44289398 -361.05938721]
[98.58528900 -375.19186401]
[106.10379791 -388.21658325]
[115.76994324 -399.73773193]
[127.28998566 -409.40518188]
[140.31384277 -416.92517090]
[154.44573975 -422.06915283]
[169.25622559 -424.68081665]
[184.29521179 -424.68081665]
[199.10568237 -422.06915283]
[213.23757935 -416.92517090]
[226.26144409 -409.40518188]
[237.78147888 -399.73773193]
[247.44763184 -388.21658325]
[254.96614075 -375.19186401]
[260.10852051 -361.05938721]
[262.71853638 -346.24859619]
[262.71682739 -331.20962524]
[260.10345459 -316.39944458]
[254.95787048 -302.26812744]
[247.43641663 -289.24511719]
[237.76765442 -277.72616577]
[226.24540710 -268.06134033]
[213.21984863 -260.54431152]
[199.08677673 -255.40351868]
[184.27571106 -252.79519653]
[184.27571106 -237.79519653]
[184.27571106 -222.79519653]
[184.27571106 -207.79519653]
[193.89990234 -201.66810608]
[199.42849731 -191.55126953]
[199.38648987 -179.90257263]
[193.66864014 -169.61631775]
[183.59431458 -163.30406189]
[183.14770508 -148.31071472]
[182.70111084 -133.31736755]
[182.25450134 -118.32401276]
[189.28134155 -131.57632446]
[199.04614258 -142.96266174]
[211.07244873 -151.92745972]
[224.77348328 -158.03332520]
[239.48074341 -160.98233032]
[254.47662354 -160.63059998]
[269.02941895 -156.99525452]
[282.42910767 -150.25372314]
[294.02188110 -140.73489380]
[303.24206543 -128.90324402]
[309.63983154 -115.33605957]
[312.90298462 -100.69529724]
[312.87234497 -85.69532776]
[309.54937744 -71.06803131]
[303.09622192 -57.52710342]
[293.82772827 -45.73323441]
[282.19616699 -36.26187515]
[268.76904297 -29.57515335]
[254.20149231 -25.99933052]
[239.20429993 -25.70887947]
[224.50923157 -28.71796989]
[210.83326721 -34.87977982]
[198.84368896 -43.89366913]
[189.12550354 -55.31982040]
[182.15289307 -68.60073090]
[178.26603699 -83.08839417]
[177.65415955 -98.06932831]
[171.58032227 -84.35406494]
[165.50648499 -70.63879395]
[159.43266296 -56.92352676]
[154.08146667 -42.91050339]
[149.46745300 -28.63777161]
[144.85345459 -14.36503792]
[151.84274292 -1.26216054]
[147.36680603 13.27814865]
[133.57591248 20.52031898]
[137.02314758 35.01051331]
[125.41604614 45.76159668]
[120.80204010 60.03432846]
[116.18803406 74.30706024]
[111.57402039 88.57979584]
[116.24241638 99.24972534]
[112.57754517 110.30458069]
[102.45968628 116.07261658]
[97.63368988 130.27507019]
[101.63869476 148.24842834]
[87.99987793 159.29150391]
[83.38586426 173.56423950]
[78.77185822 187.83695984]
[74.15784454 202.10969543]
[69.65022278 216.41638184]
[65.24922180 230.75624084]
[60.84822464 245.09608459]
[56.44722366 259.43594360]
[52.04622650 273.77578735]
[47.64522934 288.11563110]
[43.24423218 302.45547485]
[38.84323120 316.79531860]
[34.44223404 331.13516235]
[35.56451035 335.32974243]
[35.31838989 339.26724243]
[33.95271683 342.54907227]
[31.82023430 344.89834595]
[29.32886124 346.18334961]
[24.08214378 360.23580933]
[27.55024147 378.32043457]
[13.58867359 388.95254517]
[8.55175686 403.08157349]
[3.51484084 417.21060181]
[-1.52207530 431.33963013]
[11.61708164 438.64801025]
[23.37402344 448.01947021]
[33.42800903 459.19833374]
[41.50476456 471.87966919]
[47.38394547 485.71746826]
[50.90516281 500.33428955]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 204]
[31 203]
[32 202]
[33 201]
[36 199]
[37 198]
[38 193]
[39 192]
[40 191]
[41 190]
[42 189]
[43 188]
[44 187]
[45 186]
[46 185]
[48 184]
[49 183]
[50 182]
[51 181]
[54 179]
[55 178]
[57 175]
[58 174]
[59 173]
[60 172]
[62 170]
[65 167]
[66 166]
[67 165]
[75 164]
[76 163]
[77 162]
[78 161]
[79 134]
[80 133]
[81 132]
[82 131]
[85 126]
[86 125]
[87 124]
[88 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
