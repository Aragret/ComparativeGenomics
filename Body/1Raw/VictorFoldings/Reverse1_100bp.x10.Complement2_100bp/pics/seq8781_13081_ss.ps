%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[85.66735077 467.76211548]
[71.83880615 474.44546509]
[56.52245712 473.30310059]
[43.83832169 464.64236450]
[37.19836807 450.79293823]
[38.38871384 435.48025513]
[47.08916092 422.82333374]
[60.95933151 416.22680664]
[62.07498169 401.26837158]
[63.19062805 386.30990601]
[64.30627441 371.35147095]
[61.92385483 367.21224976]
[62.11637115 361.53247070]
[65.68436432 355.96640015]
[67.24488068 341.04779053]
[60.87364960 327.58462524]
[70.00466156 314.66430664]
[71.56518555 299.74569702]
[73.12570953 284.82708740]
[66.75447083 271.36392212]
[75.88549042 258.44360352]
[77.44601440 243.52499390]
[79.00653076 228.60638428]
[80.56705475 213.68777466]
[82.12757874 198.76918030]
[75.75634766 185.30601501]
[84.88735962 172.38568115]
[70.20957947 167.68019104]
[56.82614517 160.03413391]
[45.31854248 149.77967834]
[36.18675613 137.36238098]
[29.82754326 123.32176208]
[26.51720619 108.26784515]
[26.39957237 92.85470581]
[29.47974968 77.75202179]
[35.62391281 63.61596680]
[44.56510925 51.06074142]
[55.91485596 40.63183975]
[69.18002319 32.78238678]
[83.78427124 27.85342407]
[99.09306335 26.05910683]
[100.43129730 11.11892128]
[101.76953125 -3.82126355]
[103.10776520 -18.76144791]
[104.44599915 -33.70163345]
[105.22732544 -48.68127060]
[105.45065308 -63.67960739]
[102.44935608 -72.30689240]
[105.79061890 -78.89914703]
[106.23722076 -93.89249420]
[106.68383026 -108.88584900]
[107.13043213 -123.87919617]
[107.57704163 -138.87254333]
[99.34766388 -126.33152008]
[86.77308655 -118.15348816]
[71.97235870 -115.71660614]
[57.43965912 -119.43151093]
[45.62399673 -128.67219543]
[38.51652145 -141.88142395]
[37.31497192 -156.83322144]
[42.22182465 -171.00794983]
[52.41019058 -182.01690674]
[66.16315460 -188.00489807]
[81.16309357 -187.96282959]
[94.88226318 -181.89781189]
[105.00873566 -170.83189392]
[109.83621979 -156.62823486]
[113.15847778 -171.25569153]
[116.48074341 -185.88314819]
[119.80300140 -200.51062012]
[123.12525940 -215.13807678]
[126.44751740 -229.76553345]
[115.74684906 -245.39915466]
[119.80194855 -263.57797241]
[135.58169556 -272.85778809]
[138.46696472 -287.57766724]
[124.75182343 -281.50357056]
[111.38170624 -288.30355835]
[108.21257019 -302.96496582]
[117.58058929 -314.67993164]
[132.58000183 -314.81262207]
[142.15339661 -303.26681519]
[146.12548828 -317.73135376]
[150.09759521 -332.19586182]
[154.06968689 -346.66040039]
[158.04177856 -361.12490845]
[162.01387024 -375.58944702]
[148.06987000 -381.16119385]
[134.83738708 -388.25918579]
[122.48284912 -396.79415894]
[111.16162872 -406.65872192]
[101.01610565 -417.72888184]
[92.17385864 -429.86538696]
[84.74609375 -442.91561890]
[78.82622528 -456.71545410]
[74.48870850 -471.09130859]
[71.78807831 -485.86245728]
[70.75830078 -500.84310913]
[71.41233063 -515.84484863]
[73.74195099 -530.67901611]
[77.71784210 -545.15911865]
[83.29002380 -559.10290527]
[90.38841248 -572.33520508]
[98.92373657 -584.68945312]
[108.78865814 -596.01037598]
[119.85911560 -606.15557861]
[131.99588013 -614.99749756]
[145.04632568 -622.42486572]
[158.84632874 -628.34429932]
[173.22233582 -632.68139648]
[187.99356079 -635.38159180]
[202.97422791 -636.41094971]
[217.97595215 -635.75640869]
[232.81007385 -633.42639160]
[247.29000854 -629.45007324]
[261.23370361 -623.87744141]
[274.46575928 -616.77868652]
[286.81976318 -608.24298096]
[298.14041138 -598.37768555]
[308.28527832 -587.30694580]
[317.12680054 -575.16992188]
[324.55377197 -562.11926270]
[330.47280884 -548.31909180]
[334.80947876 -533.94293213]
[337.50921631 -519.17163086]
[338.53808594 -504.19091797]
[337.88317871 -489.18923950]
[335.55267334 -474.35519409]
[331.57589722 -459.87536621]
[326.00289917 -445.93185425]
[318.90371704 -432.70001221]
[310.36764526 -420.34625244]
[300.50204468 -409.02590942]
[289.43096924 -398.88137817]
[277.29370117 -390.04022217]
[264.24279785 -382.61361694]
[250.44244385 -376.69497681]
[236.06617737 -372.35876465]
[221.29478455 -369.65945435]
[206.31405640 -368.63101196]
[191.31237793 -369.28640747]
[176.47840881 -371.61734009]
[172.50630188 -357.15283203]
[168.53421021 -342.68829346]
[164.56211853 -328.22378540]
[160.59001160 -313.75924683]
[156.61791992 -299.29473877]
[153.18685913 -284.69241333]
[150.30158997 -269.97250366]
[158.56750488 -262.10861206]
[162.04685974 -251.11726379]
[159.76499939 -239.69418335]
[152.17535400 -230.69984436]
[141.07498169 -226.44328308]
[137.75271606 -211.81581116]
[134.43046570 -197.18835449]
[131.10820007 -182.56089783]
[127.78594208 -167.93344116]
[124.46368408 -153.30596924]
[122.57038879 -138.42593384]
[122.12378693 -123.43258667]
[121.67717743 -108.43923950]
[121.23056793 -93.44589233]
[120.78396606 -78.45253754]
[120.44898987 -63.45627975]
[120.22566223 -48.45794296]
[132.64299011 -56.87280655]
[147.00875854 -52.55718613]
[152.73306274 -38.69239807]
[145.59616089 -25.49904823]
[130.85910034 -22.70278168]
[119.38618469 -32.36339951]
[118.04795074 -17.42321396]
[116.70971680 -2.48302937]
[115.37148285 12.45715618]
[114.03324890 27.39734077]
[127.96437836 31.54511070]
[140.81498718 38.33789825]
[152.08856201 47.51324081]
[161.34948730 58.71660614]
[168.23994446 71.51512146]
[172.49368286 85.41425323]
[173.94635010 99.87696838]
[172.54182434 114.34442902]
[168.33435059 128.25764465]
[161.48652649 141.07901001]
[152.26292419 152.31314087]
[141.01995850 161.52593994]
[128.19201660 168.36145020]
[114.27477264 172.55555725]
[99.80596161 173.94619751]
[106.06558228 188.47644043]
[97.04618835 200.32969666]
[95.48566437 215.24830627]
[93.92514038 230.16690063]
[92.36461639 245.08551025]
[90.80409241 260.00411987]
[97.06370544 274.53436279]
[88.04431152 286.38760376]
[86.48378754 301.30621338]
[84.92327118 316.22482300]
[91.18288422 330.75506592]
[82.16349030 342.60830688]
[80.60296631 357.52691650]
[79.26473236 372.46710205]
[78.14908600 387.42556763]
[77.03343201 402.38400269]
[75.91778564 417.34246826]
[88.65596771 425.92352295]
[95.38261414 439.73104858]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 208]
[9 207]
[10 206]
[11 205]
[14 204]
[15 203]
[17 201]
[18 200]
[19 199]
[21 197]
[22 196]
[23 195]
[24 194]
[25 193]
[27 191]
[41 176]
[42 175]
[43 174]
[44 173]
[45 172]
[46 166]
[47 165]
[49 164]
[50 163]
[51 162]
[52 161]
[53 160]
[67 159]
[68 158]
[69 157]
[70 156]
[71 155]
[72 154]
[75 149]
[76 148]
[82 147]
[83 146]
[84 145]
[85 144]
[86 143]
[87 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
