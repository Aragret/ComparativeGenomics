%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxGAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUU\
) } def
/len { sequence length } bind def

/coor [
[132.85853577 496.55154419]
[128.35357666 482.21545410]
[125.98406219 467.37619019]
[125.80051422 452.35009766]
[127.80682373 437.45739746]
[131.96025085 423.01553345]
[138.17224121 409.33236694]
[146.31039429 396.69955444]
[156.20124817 385.38632202]
[167.63397217 375.63385010]
[180.36488342 367.65002441]
[194.12261963 361.60498047]
[190.15052795 347.14047241]
[186.17843628 332.67593384]
[182.20632935 318.21142578]
[179.83953857 316.70928955]
[177.92515564 314.17910767]
[176.85771179 310.78854370]
[176.96386719 306.84478760]
[178.45588684 302.76705933]
[175.35177612 288.09173584]
[172.24766541 273.41644287]
[169.14355469 258.74114990]
[166.03944397 244.06584167]
[162.93533325 229.39053345]
[157.58415222 215.37751770]
[150.11640930 202.36856079]
[142.64866638 189.35961914]
[135.18092346 176.35066223]
[122.13438416 169.16477966]
[121.97425079 153.34437561]
[114.50650787 140.33541870]
[107.03877258 127.32646942]
[99.57102966 114.31752014]
[87.57736206 107.13116455]
[87.42002106 93.15022278]
[79.95227814 80.14126587]
[72.48453522 67.13231659]
[65.01679230 54.12336349]
[48.79864883 55.42937088]
[33.68864059 49.55302811]
[22.69343185 37.71809769]
[17.97710609 22.32849312]
[20.43535805 6.48012733]
[29.52588844 -6.66189766]
[21.86529160 -19.55822372]
[14.20469379 -32.45455170]
[0.50467300 -40.36783218]
[0.65695620 -55.26165771]
[-7.00364113 -68.15798187]
[-14.66423893 -81.05431366]
[-21.73746490 -86.83421326]
[-22.34124374 -94.20016479]
[-29.80898476 -107.20912170]
[-37.27672577 -120.21807098]
[-50.85741043 -128.33444214]
[-50.48339844 -143.22434998]
[-57.95113754 -156.23330688]
[-71.67101288 -150.13665771]
[-85.94503784 -145.48303223]
[-100.62191010 -142.32177734]
[-115.54602814 -140.68637085]
[-130.55920410 -140.59417725]
[-145.50228882 -142.04617310]
[-160.21687317 -145.02694702]
[-174.54698181 -149.50491333]
[-188.34069824 -155.43261719]
[-201.45179749 -162.74719238]
[-213.74130249 -171.37110901]
[-225.07893372 -181.21296692]
[-235.34451294 -192.16841125]
[-244.42921448 -204.12133789]
[-252.23674011 -216.94500732]
[-258.68429565 -230.50350952]
[-263.70358276 -244.65309143]
[-267.24136353 -259.24377441]
[-269.26016235 -274.12091064]
[-269.73852539 -289.12673950]
[-268.67144775 -304.10223389]
[-266.07019043 -318.88861084]
[-261.96234131 -333.32916260]
[-256.39144897 -347.27081299]
[-249.41659546 -360.56573486]
[-241.11166382 -373.07302856]
[-231.56474304 -384.66009521]
[-220.87699890 -395.20410156]
[-209.16174316 -404.59329224]
[-196.54315186 -412.72811890]
[-183.15501404 -419.52236938]
[-169.13923645 -424.90399170]
[-154.64437866 -428.81594849]
[-139.82412720 -431.21676636]
[-124.83555603 -432.08102417]
[-109.83757019 -431.39953613]
[-94.98915100 -429.17953491]
[-80.44770050 -425.44451904]
[-66.36736298 -420.23413086]
[-52.89740372 -413.60357666]
[-40.18060684 -405.62316895]
[-28.35177803 -396.37747192]
[-17.53631020 -385.96450806]
[-7.84885550 -374.49468994]
[0.60789543 -362.08953857]
[7.74429607 -348.88061523]
[13.48469639 -335.00790405]
[17.76824570 -320.61849976]
[20.54953575 -305.86489868]
[21.79908180 -290.90353394]
[21.50363922 -275.89297485]
[19.66634178 -260.99237061]
[16.30666161 -246.35963440]
[11.46021652 -232.14991760]
[5.17837954 -218.51385498]
[-2.47225666 -205.59596252]
[-11.41059208 -193.53320312]
[-21.54187393 -182.45344543]
[-32.75870895 -172.47412109]
[-44.94218826 -163.70104980]
[-37.47444534 -150.69209290]
[-24.42790222 -143.50621033]
[-24.26777267 -127.68581390]
[-16.80003166 -114.67685699]
[-9.33229065 -101.66790771]
[-1.76791179 -88.71491241]
[5.89268541 -75.81858063]
[13.55328274 -62.92225647]
[26.70536804 -55.93140793]
[27.10102081 -40.11515045]
[34.76161957 -27.21882248]
[42.42221451 -14.32249546]
[56.16662598 -16.20913506]
[69.63449860 -12.70366192]
[80.78414917 -4.30338049]
[87.91233826 7.74981356]
[89.91443634 21.65294647]
[86.45550537 35.31164169]
[78.02574921 46.65562439]
[85.49349213 59.66457367]
[92.96122742 72.67353058]
[100.42897034 85.68247986]
[112.42263794 92.86883545]
[112.57997894 106.84977722]
[120.04772186 119.85873413]
[127.51546478 132.86769104]
[134.98320007 145.87663269]
[148.56388855 153.99301147]
[148.18988037 168.88291931]
[155.65762329 181.89187622]
[163.12536621 194.90081787]
[170.59309387 207.90977478]
[169.79948425 192.93078613]
[173.02262878 178.28117371]
[180.02986145 165.01849365]
[190.31533813 154.10020447]
[203.13652039 146.31449890]
[217.56784058 142.22343445]
[232.56750488 142.12234497]
[247.05265808 146.01853943]
[259.97760010 153.63073730]
[270.40930176 164.40942383]
[277.59463501 177.57644653]
[281.01495361 192.18130493]
[280.42327881 207.16963196]
[275.86233521 221.45941162]
[267.66140747 234.01905823]
[256.41253662 243.94187927]
[242.92773438 250.51155090]
[228.18052673 253.25378418]
[213.23550415 251.97061157]
[199.17158508 246.75468445]
[187.00402832 237.98252869]
[177.61064148 226.28643799]
[180.71475220 240.96173096]
[183.81886292 255.63703918]
[186.92297363 270.31234741]
[190.02708435 284.98764038]
[193.13117981 299.66293335]
[196.67085266 314.23931885]
[200.64295959 328.70385742]
[204.61505127 343.16836548]
[208.58714294 357.63290405]
[223.50267029 355.80398560]
[238.52554321 356.16635132]
[253.33554077 358.71234131]
[267.61697388 363.38760376]
[281.06546021 370.09252930]
[293.39434814 378.68420410]
[304.34082031 388.97946167]
[313.67153931 400.75891113]
[321.18768311 413.77142334]
[326.72897339 427.73968506]
[330.17733765 442.36590576]
[331.45928955 457.33834839]
[330.54745483 472.33792114]
[327.46130371 487.04483032]
[322.26660156 501.14566040]
[315.07406616 514.33978271]
[306.03704834 526.34606934]
[295.34814453 536.90850830]
[283.23516846 545.80194092]
[269.95635986 552.83691406]
[255.79470825 557.86340332]
[241.05210876 560.77429199]
[226.04277039 561.50756836]
[211.08662415 560.04748535]
[196.50247192 556.42529297]
[182.60118103 550.71813965]
[169.67903137 543.04766846]
[158.01148987 533.57739258]
[147.84722900 522.50915527]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 181]
[13 180]
[14 179]
[15 178]
[20 177]
[21 176]
[22 175]
[23 174]
[24 173]
[25 172]
[26 150]
[27 149]
[28 148]
[29 147]
[31 145]
[32 144]
[33 143]
[34 142]
[36 140]
[37 139]
[38 138]
[39 137]
[45 130]
[46 129]
[47 128]
[49 126]
[50 125]
[51 124]
[53 123]
[54 122]
[55 121]
[57 119]
[58 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
