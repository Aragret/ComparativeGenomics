%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxUUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUG\
) } def
/len { sequence length } bind def

/coor [
[191.65982056 601.60491943]
[204.52911377 593.74157715]
[200.12811279 579.40173340]
[195.72711182 565.06188965]
[191.32611084 550.72204590]
[180.19515991 540.82501221]
[183.54296875 525.36206055]
[179.14196777 511.02224731]
[174.74096680 496.68240356]
[170.33996582 482.34252930]
[165.93898010 468.00268555]
[161.53797913 453.66284180]
[153.57160950 466.37255859]
[138.98286438 469.86090088]
[126.12882996 462.12954712]
[122.37287903 447.60739136]
[129.86659241 434.61340332]
[144.31723022 430.59109497]
[157.44621277 437.84390259]
[154.34210205 423.16860962]
[151.23800659 408.49328613]
[148.13389587 393.81799316]
[132.51237488 391.15451050]
[119.07638550 382.67965698]
[109.89910126 369.66610718]
[106.40995789 354.08953857]
[109.17209625 338.32861328]
[117.79169464 324.80184937]
[130.97383118 315.59643555]
[127.65156555 300.96899414]
[124.32930756 286.34152222]
[121.00704956 271.71405029]
[112.11744690 283.79608154]
[97.30965424 286.18966675]
[85.06625366 277.52371216]
[82.40081024 262.76242065]
[90.84021759 250.36177063]
[105.55000305 247.42538452]
[118.10318756 255.63459778]
[116.09917450 240.76907349]
[114.09516144 225.90354919]
[112.09114075 211.03800964]
[109.75565338 196.22094727]
[107.08985901 181.45973206]
[104.42406464 166.69851685]
[89.47373199 166.01107788]
[75.05106354 162.01463318]
[61.87903214 154.90953064]
[50.61792374 145.05191040]
[41.83224106 132.93594360]
[35.96239090 119.16895294]
[33.30261612 104.44107056]
[33.98624420 89.49056244]
[37.97900772 75.06687164]
[45.08075714 61.89303207]
[54.93549728 50.62941360]
[67.04923248 41.84064102]
[80.81472015 35.96728134]
[78.14891815 21.20606422]
[75.48312378 6.44484663]
[62.78342438 -2.57487512]
[60.29021072 -17.58282280]
[68.96739960 -29.63446045]
[66.30160522 -44.39567947]
[63.63580704 -59.15689468]
[60.97001266 -73.91811371]
[46.67057419 -75.59642029]
[33.43854904 -81.23079681]
[22.34334564 -90.35611725]
[14.27891350 -102.22551727]
[9.89173412 -115.87154388]
[9.52899933 -130.18495178]
[13.21115112 -144.00491333]
[20.63095284 -156.21315002]
[31.17910194 -165.82441711]
[43.99425888 -172.06602478]
[41.54853058 -186.86529541]
[39.10280228 -201.66456604]
[36.65707779 -216.46383667]
[26.64537430 -224.59579468]
[24.91299438 -236.97248840]
[31.84849358 -246.88336182]
[22.14966393 -259.38308716]
[27.91338348 -273.11730957]
[25.68826485 -287.95135498]
[15.98943520 -300.45108032]
[21.75315475 -314.18530273]
[19.52803612 -329.01934814]
[17.30291939 -343.85339355]
[15.07780266 -358.68743896]
[0.11134648 -360.73239136]
[-13.67216682 -366.91232300]
[-25.15536880 -376.72622681]
[-33.40736771 -389.37854004]
[-37.75921249 -403.84362793]
[-37.85811615 -418.94882202]
[-33.69606400 -433.46963501]
[-25.61045265 -446.22891235]
[-14.25674629 -456.19235229]
[-0.55534053 -462.55224609]
[14.38305378 -464.79299927]
[29.34744835 -462.73300171]
[43.12474442 -456.53924561]
[54.59808350 -446.71380615]
[62.83736801 -434.05319214]
[67.17467499 -419.58377075]
[67.25840759 -404.47848511]
[63.08176804 -389.96185303]
[54.98334503 -377.21069336]
[43.61963654 -367.25866699]
[29.91184616 -360.91256714]
[32.13696289 -346.07852173]
[34.36207962 -331.24447632]
[36.58719635 -316.41043091]
[46.12687302 -304.97171021]
[40.52230835 -290.17648315]
[42.74742508 -275.34243774]
[52.28710175 -263.90371704]
[46.68253708 -249.10847473]
[58.33828735 -235.98939514]
[51.45634842 -218.90956116]
[53.90207291 -204.11029053]
[56.34780121 -189.31101990]
[58.79352951 -174.51174927]
[74.30348969 -172.32830811]
[88.39705658 -165.45031738]
[99.68933868 -154.54023743]
[107.06660461 -140.65744019]
[109.79608154 -125.15526581]
[107.59875488 -109.54913330]
[100.67782593 -95.36839294]
[89.69998932 -84.00646210]
[75.73123169 -76.58390808]
[78.39702606 -61.82269287]
[81.06282043 -47.06147385]
[83.72861481 -32.30025482]
[96.07312012 -24.04502296]
[98.98689270 -9.11302376]
[90.24434662 3.77905107]
[92.91014099 18.54026794]
[95.57593536 33.30148697]
[110.52626801 33.98892593]
[124.94893646 37.98536682]
[138.12097168 45.09047699]
[149.38208008 54.94808578]
[158.16775513 67.06405640]
[164.03761292 80.83104706]
[166.69738770 95.55892944]
[166.01376343 110.50943756]
[162.02099609 124.93312836]
[154.91923523 138.10696411]
[145.06449890 149.37059021]
[132.95077515 158.15936279]
[119.18527985 164.03271484]
[121.85108185 178.79393005]
[124.51687622 193.55516052]
[127.88999939 197.53875732]
[129.26072693 201.97434998]
[128.79219055 206.02348328]
[126.95667267 209.03399658]
[128.96069336 223.89953613]
[130.96470642 238.76506042]
[132.96871948 253.63058472]
[135.63450623 268.39181519]
[138.95677185 283.01925659]
[142.27902222 297.64672852]
[145.60128784 312.27420044]
[159.70426941 314.26342773]
[172.25482178 320.93310547]
[181.75495911 331.46405029]
[187.07862854 344.57760620]
[187.60525513 358.69088745]
[183.29196167 372.10784912]
[174.67625427 383.22308350]
[162.80918884 390.71389771]
[165.91329956 405.38919067]
[169.01741028 420.06448364]
[172.12152100 434.73977661]
[175.87782288 449.26184082]
[180.27882385 463.60168457]
[184.67982483 477.94152832]
[189.08081055 492.28140259]
[193.48181152 506.62124634]
[197.88281250 520.96105957]
[209.32856750 531.88378906]
[205.66595459 546.32104492]
[210.06695557 560.66088867]
[214.46795654 575.00073242]
[218.86895752 589.34057617]
[233.93371582 588.63079834]
[248.70153809 591.69055176]
[262.24411011 598.32751465]
[273.71014404 608.12451172]
[282.37884521 620.46569824]
[287.70532227 634.57525635]
[289.35473633 649.56622314]
[287.22341919 664.49633789]
[281.44531250 678.42706299]
[272.38366699 690.48266602]
[260.60806274 699.90527344]
[246.85877991 706.10272217]
[232.00007629 708.68530273]
[216.96598816 707.49072266]
[202.70156860 702.59405518]
[190.10350037 694.30310059]
[179.96369934 683.13909912]
[172.91957092 669.80377197]
[169.41389465 655.13543701]
[169.66706848 640.05603027]
[173.66316223 625.51361084]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 189]
[3 188]
[4 187]
[5 186]
[7 184]
[8 183]
[9 182]
[10 181]
[11 180]
[12 179]
[19 178]
[20 177]
[21 176]
[22 175]
[29 167]
[30 166]
[31 165]
[32 164]
[39 163]
[40 162]
[41 161]
[42 160]
[43 156]
[44 155]
[45 154]
[58 141]
[59 140]
[60 139]
[63 136]
[64 135]
[65 134]
[66 133]
[76 124]
[77 123]
[78 122]
[79 121]
[82 119]
[84 117]
[85 116]
[87 114]
[88 113]
[89 112]
[90 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
