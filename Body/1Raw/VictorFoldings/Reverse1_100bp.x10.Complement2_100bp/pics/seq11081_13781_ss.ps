%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACCGACCAACGGAGUAGCCCACUACUAUCGGUUCCACCCCUAUUCACACCAAAGCUUCUUCUAUAUUUUAUACUAAUCAAGACACCGACACUUACAAUxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[154.43458557 410.76925659]
[163.41677856 398.69421387]
[174.58229065 388.60375977]
[187.50198364 380.88574219]
[182.46507263 366.75671387]
[177.42814636 352.62768555]
[166.63708496 347.16146851]
[162.32511902 335.43154907]
[167.31575012 323.53799438]
[162.48974609 309.33554077]
[157.66374207 295.13308716]
[152.83775330 280.93063354]
[137.44815063 274.14837646]
[131.61053467 258.01651001]
[139.39648438 242.35131836]
[134.35955811 228.22229004]
[129.15252686 222.97743225]
[129.35453796 213.84523010]
[117.93384552 204.28401184]
[120.81978607 188.72824097]
[115.99378967 174.52578735]
[111.16778564 160.32333374]
[101.63279724 156.64950562]
[95.56658173 148.15542603]
[95.16862488 137.50546265]
[100.81157684 128.20677185]
[96.41058350 113.86692047]
[86.30645752 104.20264435]
[89.24957275 90.53408051]
[84.84857178 76.19422913]
[80.44757843 61.85438538]
[75.87557220 57.07857513]
[74.59413910 51.54188156]
[76.13588715 47.02169800]
[72.16378784 32.55717468]
[68.19169617 18.09265137]
[52.15205383 14.07746315]
[40.39330292 2.58714867]
[36.05865097 -13.17444038]
[40.23987961 -28.88027191]
[51.70426941 -40.26799393]
[47.51725769 -54.67177963]
[43.33024597 -69.07556152]
[37.92979431 -76.44257355]
[39.18983841 -83.72502899]
[35.21774292 -98.18955231]
[31.24564552 -112.65407562]
[27.27355003 -127.11859894]
[23.30145264 -141.58312988]
[10.55300999 -143.64631653]
[-0.42832032 -150.35342407]
[-8.02960205 -160.67794800]
[-11.15006638 -173.06510925]
[-9.36040783 -185.66610718]
[-2.96147919 -196.61390686]
[7.06560421 -204.29998779]
[3.52593184 -218.87635803]
[-0.01374071 -233.45274353]
[-3.55341315 -248.02911377]
[-6.81830359 -233.38874817]
[-13.11378956 -219.77378845]
[-22.15346909 -207.80364990]
[-33.52609634 -198.02288818]
[-46.71429062 -190.87646484]
[-61.11808014 -186.68946838]
[-76.08218384 -185.65242004]
[-90.92584229 -187.81246948]
[-104.97377014 -193.07135010]
[-117.58686829 -201.18983459]
[-128.19132996 -211.79856873]
[-136.30471802 -224.41494751]
[-141.55795288 -238.46498108]
[-143.71200562 -253.30950928]
[-142.66891479 -268.27319336]
[-138.47613525 -282.67529297]
[-131.32438660 -295.86062622]
[-121.53903198 -307.22930908]
[-109.56524658 -316.26416016]
[-95.94776154 -322.55413818]
[-81.30607605 -325.81314087]
[-66.30628967 -325.89285278]
[-51.63078690 -322.78967285]
[-37.94721603 -316.64477539]
[-25.87808037 -307.73770142]
[-15.97244740 -296.47366333]
[-8.68095779 -283.36511230]
[-4.33451939 -269.00411987]
[-1.88879216 -283.80340576]
[0.55693519 -298.60266113]
[3.00266266 -313.40194702]
[5.44839001 -328.20120239]
[7.89411736 -343.00048828]
[10.33984470 -357.79974365]
[12.78557205 -372.59902954]
[10.81888390 -378.91119385]
[12.13728333 -384.43920898]
[15.53074741 -387.79977417]
[18.41601944 -402.51968384]
[21.30129242 -417.23956299]
[7.57695961 -423.46365356]
[-4.34168720 -432.68551636]
[-13.81188965 -444.40780640]
[-20.32293129 -457.99835205]
[-23.52368164 -472.72424316]
[-23.24152565 -487.79132080]
[-19.49168205 -502.38705444]
[-12.47637367 -515.72430420]
[-2.57392764 -527.08380127]
[9.68162918 -535.85296631]
[23.62936974 -541.55883789]
[38.51711273 -543.89379883]
[53.54197693 -542.73181152]
[67.89369202 -538.13562012]
[80.79828644 -530.35308838]
[91.55983734 -519.80389404]
[99.59798431 -507.05691528]
[104.47924042 -492.79962158]
[105.94036102 -477.80090332]
[103.90255737 -462.86959839]
[98.47571564 -448.81091309]
[89.95251465 -436.38305664]
[78.79257965 -426.25622559]
[65.59777069 -418.97656250]
[51.07965851 -414.93661499]
[36.02118301 -414.35430908]
[33.13591003 -399.63439941]
[30.25063896 -384.91452026]
[27.58484268 -370.15328979]
[25.13911629 -355.35403442]
[22.69338799 -340.55474854]
[20.24766159 -325.75549316]
[17.80193329 -310.95620728]
[15.35620594 -296.15695190]
[12.91047859 -281.35766602]
[10.46475124 -266.55841064]
[11.02296257 -251.56878662]
[14.56263447 -236.99241638]
[18.10230637 -222.41603088]
[21.64197922 -207.83966064]
[38.32811356 -203.59568787]
[50.62965775 -191.42254639]
[55.09421158 -174.60971069]
[50.40464783 -157.76576233]
[37.76597595 -145.55522156]
[41.73807526 -131.09069824]
[45.71017075 -116.62617493]
[49.68226624 -102.16165161]
[53.65436172 -87.69712067]
[57.73402786 -73.26257324]
[61.92103958 -58.85878754]
[66.10805511 -44.45500565]
[79.55720520 -42.08070374]
[90.72491455 -34.10504913]
[97.39862823 -22.03812408]
[98.22606659 -8.20723057]
[92.98885345 4.69190741]
[82.65621948 14.12055588]
[86.62831116 28.58507919]
[90.60041046 43.04960251]
[94.78742218 57.45338440]
[99.18842316 71.79323578]
[103.58941650 86.13307953]
[113.69354248 95.79735565]
[110.75042725 109.46591949]
[115.15142822 123.80577087]
[130.51390076 136.85786438]
[125.37024689 155.49732971]
[130.19624329 169.69978333]
[135.02223206 183.90223694]
[146.78811646 194.47932434]
[143.55699158 209.01922607]
[148.48858643 223.18536377]
[153.52551270 237.31439209]
[166.27830505 241.64808655]
[174.09260559 252.37875366]
[174.29673767 265.45700073]
[167.04020691 276.10464478]
[171.86619568 290.30709839]
[176.69219971 304.50955200]
[181.51820374 318.71200562]
[195.64439392 330.52438354]
[191.55717468 347.59075928]
[196.59410095 361.71978760]
[201.63101196 375.84881592]
[216.51947021 373.65341187]
[231.55015564 374.40505981]
[246.14530945 378.07492065]
[259.74392700 384.52191162]
[271.82333374 393.49822998]
[281.91921997 404.65887451]
[289.64349365 417.57479858]
[294.69931030 431.74960327]
[296.89233398 446.63842773]
[296.13821411 461.66897583]
[292.46600342 476.26351929]
[286.01681519 489.86111450]
[277.03854370 501.93905640]
[265.87628174 512.03314209]
[252.95909119 519.75531006]
[238.78347778 524.80883789]
[223.89430237 526.99945068]
[208.86387634 526.24291992]
[194.26991272 522.56835938]
[180.67338562 516.11694336]
[168.59687805 507.13671875]
[158.50462341 495.97283936]
[150.78450012 483.05438232]
[145.73327637 468.87796021]
[143.54508972 453.98843384]
[144.30404663 438.95809937]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 184]
[5 183]
[6 182]
[9 180]
[10 179]
[11 178]
[12 177]
[15 173]
[16 172]
[18 171]
[20 169]
[21 168]
[22 167]
[26 165]
[27 164]
[29 162]
[30 161]
[31 160]
[34 159]
[35 158]
[36 157]
[41 151]
[42 150]
[43 149]
[45 148]
[46 147]
[47 146]
[48 145]
[49 144]
[56 139]
[57 138]
[58 137]
[59 136]
[87 135]
[88 134]
[89 133]
[90 132]
[91 131]
[92 130]
[93 129]
[94 128]
[97 127]
[98 126]
[99 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
