%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAUAACAUUAACUCUAACGAGCCCCCUUAUCCAAUACACUAAUCCUCAUCCCAAUCCUACUCACCCUUCUUCUUUCUCUCCUUCAUUUCAAAUUAAUACxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[118.12166595 455.90307617]
[113.97694397 441.46615601]
[111.67437744 426.62359619]
[111.25028992 411.60949707]
[112.71135712 396.66064453]
[116.03454590 382.01278687]
[121.16743469 367.89694214]
[128.02908325 354.53576660]
[136.51126099 342.13998413]
[146.48020935 330.90505981]
[157.77868652 321.00817871]
[170.22850037 312.60549927]
[183.63330078 305.82946777]
[178.59638977 291.70043945]
[173.55946350 277.57141113]
[168.52255249 263.44238281]
[162.55099487 249.68228149]
[155.67156982 236.35285950]
[148.79216003 223.02342224]
[141.91275024 209.69400024]
[129.20008850 201.93272400]
[129.74653625 186.12095642]
[122.86712646 172.79151917]
[115.98770905 159.46209717]
[109.10829926 146.13265991]
[106.79918671 160.95387268]
[97.46601105 172.69659424]
[83.54843903 178.29133606]
[68.68448639 176.27565002]
[56.75956345 167.17640686]
[50.89081192 153.37213135]
[52.61230850 138.47125244]
[61.47406006 126.36879730]
[75.15962219 120.22833252]
[90.09162903 121.65495300]
[102.36631012 130.27507019]
[97.54031372 116.07261658]
[84.64415741 105.34576416]
[88.09108734 88.92945862]
[83.05416870 74.80043030]
[78.01725769 60.67140198]
[72.98033905 46.54236984]
[67.94342041 32.41334152]
[55.94144821 31.78019524]
[44.88779449 27.15047836]
[36.06816864 19.08800316]
[30.49987984 8.55436134]
[28.81451797 -3.20572186]
[31.18639374 -14.81145859]
[37.31481934 -24.90812492]
[46.46201324 -32.32518768]
[42.06101227 -46.66503525]
[38.23841095 -50.21958160]
[36.35031891 -54.46085739]
[36.33436966 -58.53697968]
[37.79913330 -61.74428558]
[34.04283524 -76.26634216]
[30.28653336 -90.78840637]
[26.53023338 -105.31046295]
[22.77393150 -119.83251953]
[19.01763153 -134.35458374]
[13.83891773 -141.87911987]
[15.31522751 -149.12083435]
[11.77555466 -163.69720459]
[8.23588276 -178.27357483]
[4.69620991 -192.84996033]
[-8.31981277 -205.87548828]
[-2.72630429 -222.50918579]
[-6.48260498 -237.03125000]
[-10.23890591 -251.55329895]
[-25.11078835 -249.47367859]
[-40.12279510 -249.10290527]
[-55.07920837 -250.44583130]
[-69.78504181 -253.48492432]
[-84.04858398 -258.18060303]
[-97.68386841 -264.47161865]
[-110.51313019 -272.27593994]
[-122.36912537 -281.49188232]
[-133.09727478 -291.99923706]
[-142.55772400 -303.66104126]
[-150.62713623 -316.32525635]
[-157.20030212 -329.82678223]
[-162.19152832 -343.98959351]
[-165.53575134 -358.62905884]
[-167.18936157 -373.55432129]
[-167.13081360 -388.57077026]
[-165.36087036 -403.48269653]
[-161.90258789 -418.09564209]
[-156.80107117 -432.21911621]
[-150.12283325 -445.66897583]
[-141.95491028 -458.26986694]
[-132.40382385 -469.85754395]
[-121.59406281 -480.28094482]
[-109.66656494 -489.40411377]
[-96.77683258 -497.10818481]
[-83.09291077 -503.29269409]
[-68.79319000 -507.87698364]
[-54.06410599 -510.80133057]
[-39.09767532 -512.02758789]
[-24.08901596 -511.53976440]
[-9.23380184 -509.34423828]
[5.27430248 -505.46960449]
[19.24615288 -499.96643066]
[32.49959946 -492.90640259]
[44.86185455 -484.38159180]
[56.17174911 -474.50311279]
[66.28183746 -463.39978027]
[75.06031799 -451.21636963]
[82.39273834 -438.11163330]
[88.18350220 -424.25650024]
[92.35712433 -409.83157349]
[94.85919189 -395.02490234]
[95.65708160 -380.02954102]
[94.74039459 -365.04095459]
[92.12107849 -350.25457764]
[87.83328247 -335.86318970]
[81.93290710 -322.05438232]
[74.49687958 -309.00817871]
[65.62213135 -296.89468384]
[55.42438126 -285.87182617]
[44.03656387 -276.08328247]
[31.60714531 -267.65670776]
[18.29817390 -260.70190430]
[4.28315353 -255.30960083]
[8.03945446 -240.78753662]
[11.79575539 -226.26548767]
[22.05611420 -219.85833740]
[25.30439949 -207.79051208]
[19.27258492 -196.38963318]
[22.81225777 -181.81324768]
[26.35193062 -167.23687744]
[29.89160347 -152.66050720]
[33.53969193 -138.11088562]
[37.29598999 -123.58882141]
[41.05229187 -109.06676483]
[44.80859375 -94.54470825]
[48.56489182 -80.02264404]
[52.32119370 -65.50058746]
[56.40085983 -51.06603241]
[60.80185699 -36.72618484]
[78.63057709 -33.48466873]
[92.41025543 -21.58579636]
[98.26950073 -4.25838804]
[94.50429535 13.72811699]
[82.07244873 27.37642670]
[87.10936737 41.50545502]
[92.14628601 55.63448334]
[97.18319702 69.76351166]
[102.22011566 83.89254761]
[112.42272949 89.50930023]
[116.25178528 100.50836945]
[111.74276733 111.24662018]
[116.56876373 125.44907379]
[122.43772888 139.25325012]
[129.31713867 152.58268738]
[136.19654846 165.91210938]
[143.07595825 179.24154663]
[156.28068542 187.95622253]
[155.24218750 202.81459045]
[162.12159729 216.14401245]
[169.00100708 229.47344971]
[175.88041687 242.80287170]
[178.76754761 228.08334351]
[189.07725525 217.18794250]
[203.61497498 213.49272156]
[217.87603760 218.14268494]
[227.44149780 229.69699097]
[229.34738159 244.57542419]
[223.00314331 258.16772461]
[210.37460327 266.26217651]
[195.37486267 266.35061646]
[182.65158081 258.40548706]
[187.68849182 272.53451538]
[192.72541809 286.66354370]
[197.76232910 300.79257202]
[212.43060303 297.56069946]
[227.38827515 296.19277954]
[242.39944458 296.71038818]
[257.22738647 299.10537720]
[271.63818359 303.33996582]
[285.40460205 309.34735107]
[298.30953979 317.03280640]
[310.14941406 326.27511597]
[320.73754883 336.92849731]
[329.90692139 348.82498169]
[337.51290894 361.77688599]
[343.43560791 375.57998657]
[347.58154297 390.01654053]
[349.88534546 404.85888672]
[350.31069946 419.87298584]
[348.85089111 434.82196045]
[345.52893066 449.47009277]
[340.39721680 463.58636475]
[333.53671265 476.94812012]
[325.05557251 489.34463501]
[315.08758545 500.58038330]
[303.78994751 510.47817993]
[291.34082031 518.88195801]
[277.93658447 525.65905762]
[263.78863525 530.70275879]
[249.12008667 533.93334961]
[234.16229248 535.30004883]
[219.15116882 534.78112793]
[204.32345581 532.38488770]
[189.91299438 528.14910889]
[176.14706421 522.14056396]
[163.24279785 514.45404053]
[151.40368652 505.21072388]
[140.81645203 494.55645752]
[131.64808655 482.65921021]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 175]
[14 174]
[15 173]
[16 172]
[17 162]
[18 161]
[19 160]
[20 159]
[22 157]
[23 156]
[24 155]
[25 154]
[36 153]
[37 152]
[39 149]
[40 148]
[41 147]
[42 146]
[43 145]
[51 140]
[52 139]
[56 138]
[57 137]
[58 136]
[59 135]
[60 134]
[61 133]
[63 132]
[64 131]
[65 130]
[66 129]
[68 126]
[69 125]
[70 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
