%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[17.51823807 735.31335449]
[6.98464489 746.03253174]
[-5.02896976 755.06201172]
[-18.25421906 762.19995117]
[-32.39564514 767.28698730]
[-47.13732147 770.20941162]
[-62.14991760 770.90191650]
[-77.09804535 769.34912109]
[-91.64775848 765.58569336]
[-105.47400665 759.69567871]
[-118.26790619 751.81060791]
[-129.74365234 742.10675049]
[-139.64485168 730.80084229]
[-147.75030518 718.14544678]
[-153.87896729 704.42327881]
[-157.89389038 689.94097900]
[-159.70538330 675.02197266]
[-159.27297974 659.99963379]
[-156.60635376 645.20953369]
[-151.76506042 630.98211670]
[-144.85726929 617.63519287]
[-136.03727722 605.46697998]
[-125.50216675 594.74926758]
[-113.48726654 585.72155762]
[-100.26100159 578.58551025]
[-86.11885071 573.50048828]
[-71.37675476 570.58013916]
[-56.36406326 569.88977051]
[-41.41615677 571.44470215]
[-37.65985489 556.92260742]
[-33.90355682 542.40057373]
[-30.14725494 527.87847900]
[-26.39095306 513.35644531]
[-22.63465309 498.83438110]
[-35.94612885 491.97824097]
[-47.40357208 482.32705688]
[-56.43029404 470.36239624]
[-62.57100677 456.68237305]
[-65.51480865 441.97177124]
[-65.11090851 426.96771240]
[-61.37635040 412.42276001]
[-54.49531174 399.06723022]
[-44.81003571 387.57235718]
[-32.80380630 378.51675415]
[-19.07682800 372.35714722]
[-4.31622744 369.40536499]
[10.73834324 369.81259155]
[14.49464417 355.29052734]
[18.25094414 340.76846313]
[12.38415623 330.18984985]
[15.39474297 318.06054688]
[26.19812393 311.01428223]
[30.17022133 296.54974365]
[24.46158218 285.88494873]
[27.65242386 273.80181885]
[38.55951691 266.91717529]
[42.74652863 252.51339722]
[46.93353653 238.10961914]
[51.12054825 223.70584106]
[55.30755997 209.30204773]
[53.93893814 206.05255127]
[54.07624054 201.97871399]
[56.08977890 197.79553223]
[60.01651382 194.35638428]
[64.84251404 180.15393066]
[69.66851044 165.95146179]
[74.49450684 151.74900818]
[79.32050323 137.54655457]
[84.14650726 123.34410095]
[88.97250366 109.14164734]
[86.43765259 95.39151001]
[96.82504272 86.03235626]
[101.65103912 71.82990265]
[106.47703552 57.62744522]
[111.30303955 43.42499161]
[116.12903595 29.22253418]
[115.11054230 24.10298729]
[116.06247711 19.55907631]
[118.43560028 16.24496651]
[121.50064850 14.50203419]
[126.95600891 0.52923656]
[132.41136169 -13.44356155]
[137.86671448 -27.41635895]
[143.32208252 -41.38915634]
[148.77743530 -55.36195374]
[153.91940308 -69.45309448]
[158.74539185 -83.65554810]
[163.57139587 -97.85800934]
[168.39738464 -112.06046295]
[173.22338867 -126.26291656]
[178.04937744 -140.46537781]
[182.87538147 -154.66783142]
[179.98944092 -170.22360229]
[191.41014099 -179.78482056]
[196.23614502 -193.98727417]
[201.06213379 -208.18972778]
[200.86012268 -217.32192993]
[206.06715393 -222.56678772]
[211.10406494 -236.69581604]
[216.14099121 -250.82484436]
[203.10087585 -258.32119751]
[191.60897827 -268.02563477]
[182.03472900 -279.62622070]
[174.68588257 -292.75003052]
[169.79869080 -306.97515869]
[167.53024292 -321.84439087]
[167.95346069 -336.87969971]
[171.05474854 -351.59777832]
[176.73440552 -365.52551270]
[184.80986023 -378.21514893]
[195.02151489 -389.25878906]
[207.04110718 -398.30142212]
[220.48225403 -405.05233765]
[234.91288757 -409.29458618]
[249.86912537 -410.89175415]
[264.87017822 -409.79248047]
[279.43380737 -406.03213501]
[293.09188843 -399.73159790]
[305.40533447 -391.09341431]
[315.97836304 -380.39523315]
[324.47103882 -367.98095703]
[330.61041260 -354.24966431]
[334.19909668 -339.64279175]
[335.12173462 -324.62985229]
[333.34866333 -309.69345093]
[328.93688965 -295.31372070]
[322.02822876 -281.95297241]
[312.84475708 -270.04061890]
[301.68173218 -259.95965576]
[288.89791870 -252.03408813]
[274.90432739 -246.51873779]
[260.15075684 -243.59088135]
[245.11151123 -243.34463501]
[230.27001953 -245.78793335]
[225.23310852 -231.65890503]
[220.19618225 -217.52986145]
[215.26458740 -203.36373901]
[210.43859863 -189.16127014]
[205.61259460 -174.95881653]
[208.84371948 -160.41891479]
[197.07783508 -149.84182739]
[192.25184631 -135.63937378]
[187.42584229 -121.43692017]
[182.59983826 -107.23446655]
[177.77384949 -93.03201294]
[172.94784546 -78.82955170]
[168.12185669 -64.62709808]
[169.34400940 -61.31973267]
[169.02493286 -57.25608444]
[166.82662964 -53.16698837]
[162.75022888 -49.90659714]
[157.29487610 -35.93379974]
[151.83952332 -21.96100235]
[146.38415527 -7.98820400]
[140.92880249 5.98459339]
[135.47344971 19.95739174]
[130.33148193 34.04853058]
[125.50549316 48.25098801]
[120.67949677 62.45344543]
[115.85349274 76.65589905]
[111.02749634 90.85835266]
[113.56234741 104.60848999]
[103.17495728 113.96764374]
[98.34896088 128.17010498]
[93.52296448 142.37255859]
[88.69696045 156.57501221]
[83.87096405 170.77746582]
[79.04496765 184.97991943]
[74.21897125 199.18237305]
[69.71134186 213.48905945]
[65.52433014 227.89285278]
[61.33731842 242.29663086]
[57.15031052 256.70040894]
[52.96329880 271.10418701]
[57.76686096 288.88079834]
[44.63474655 300.52185059]
[40.66264725 314.98638916]
[45.73034668 332.68948364]
[32.77300262 344.52478027]
[29.01670265 359.04684448]
[25.26040268 373.56887817]
[38.62428665 380.51242065]
[50.10233307 390.25112915]
[59.12097931 402.29418945]
[65.23048401 416.03564453]
[68.12738037 430.78503418]
[67.66954041 445.80200195]
[63.88313293 460.33352661]
[56.96117401 473.65161133]
[47.25367355 485.08981323]
[35.24993134 494.07656860]
[21.55389595 500.16372681]
[6.85376501 503.04895020]
[-8.11259365 502.59066772]
[-11.86889458 517.11273193]
[-15.62519455 531.63482666]
[-19.38149643 546.15686035]
[-23.13779640 560.67889404]
[-26.89409637 575.20098877]
[-13.06700897 581.08905029]
[-0.27198288 588.97222900]
[11.20513725 598.67449951]
[21.10794640 609.97900391]
[29.21521378 622.63323975]
[35.34582138 636.35449219]
[39.36280441 650.83630371]
[41.17642593 665.75500488]
[40.74617004 680.77740479]
[38.08164597 695.56787109]
[33.24237823 709.79595947]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 199]
[30 198]
[31 197]
[32 196]
[33 195]
[34 194]
[47 181]
[48 180]
[49 179]
[52 177]
[53 176]
[56 174]
[57 173]
[58 172]
[59 171]
[60 170]
[64 169]
[65 168]
[66 167]
[67 166]
[68 165]
[69 164]
[70 163]
[72 161]
[73 160]
[74 159]
[75 158]
[76 157]
[80 156]
[81 155]
[82 154]
[83 153]
[84 152]
[85 151]
[86 147]
[87 146]
[88 145]
[89 144]
[90 143]
[91 142]
[92 141]
[94 139]
[95 138]
[96 137]
[98 136]
[99 135]
[100 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
