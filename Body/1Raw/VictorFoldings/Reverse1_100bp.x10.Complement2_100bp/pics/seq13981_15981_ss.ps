%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAAAACCCAACUCCACUACUACCUCCACCUCUAAACCACGACACUUUAACAAAAUCCAUUAUCGAAAAGAUCAGUCCAAUCCAGAUCCUCCUCAUCCCxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[117.02623749 614.62231445]
[106.33226013 625.51275635]
[91.96923065 630.67669678]
[76.78893280 629.08880615]
[63.80543518 621.06439209]
[55.59661484 608.19665527]
[53.79234314 593.04052734]
[58.75085831 578.60534668]
[69.48764038 567.75708008]
[83.87089539 562.64978027]
[85.43141937 547.73114014]
[86.99194336 532.81256104]
[88.55246735 517.89392090]
[90.11299133 502.97534180]
[91.45122528 488.03515625]
[92.56687164 473.07672119]
[93.68251801 458.11825562]
[94.79817200 443.15979004]
[95.91381836 428.20135498]
[96.02548218 413.20175171]
[95.13266754 398.22836304]
[83.37560272 407.54345703]
[68.72863770 404.30828857]
[61.98897552 390.90765381]
[68.12483978 377.22003174]
[82.61310577 373.33541870]
[94.77275848 382.11596680]
[94.99608612 367.11761475]
[95.21941376 352.11929321]
[95.44274139 337.12094116]
[95.66606903 322.12261963]
[81.89079285 318.16171265]
[69.60200500 310.76031494]
[59.64243698 300.41860962]
[52.69698715 287.83877563]
[49.24562073 273.87707520]
[49.53022003 259.48577881]
[53.53762817 245.64814758]
[61.00012970 233.31120300]
[71.41331482 223.32096863]
[84.07019043 216.36444092]
[98.10915375 212.92236328]
[98.55575562 197.92901611]
[99.00236511 182.93566895]
[98.55575562 167.94232178]
[97.21752167 153.00213623]
[95.87928772 138.06195068]
[94.54105377 123.12175751]
[93.20281982 108.18157196]
[90.75709534 93.38230133]
[79.98176575 81.79770660]
[84.49719238 67.60404205]
[80.95751953 53.02766418]
[77.41784668 38.45129013]
[73.87817383 23.87491226]
[69.90608215 9.41038895]
[65.50508118 -4.92945814]
[61.10408401 -19.26930618]
[44.95200729 -22.80515480]
[32.85635757 -33.94027328]
[28.05434799 -49.56581497]
[31.76610374 -65.38917542]
[42.88635635 -77.11318970]
[38.27234650 -91.38591766]
[33.65833664 -105.65865326]
[29.04432678 -119.93138885]
[24.43031693 -134.20411682]
[19.81630898 -148.47685242]
[15.20229912 -162.74958801]
[11.34506416 -148.25401306]
[1.64629459 -136.81137085]
[-12.02132797 -130.63107300]
[-27.01880074 -130.90643311]
[-40.45034409 -137.58427429]
[-49.72254181 -149.37522888]
[-53.04507446 -164.00262451]
[-49.77641678 -178.64215088]
[-40.54768753 -190.46714783]
[-27.14081764 -197.19439697]
[-12.14446163 -197.52496338]
[1.54582107 -191.39501953]
[11.28724480 -179.98704529]
[9.28323078 -194.85256958]
[7.27921772 -209.71809387]
[5.27520370 -224.58363342]
[3.16057992 -239.43382263]
[0.93546271 -254.26786804]
[-1.28965449 -269.10189819]
[-16.30086708 -270.49005127]
[-30.54345131 -275.43090820]
[-43.18935776 -283.63729858]
[-53.50337219 -294.63204956]
[-60.88585281 -307.77593994]
[-64.90759277 -322.30487061]
[-65.33476257 -337.37405396]
[-62.14254379 -352.10745239]
[-55.51651764 -365.64846802]
[-45.84191132 -377.20986938]
[-33.68120193 -386.11944580]
[-19.74138832 -391.85922241]
[-4.83291817 -394.09548950]
[10.17745113 -392.69827271]
[24.41703606 -387.74874878]
[37.05796432 -379.53472900]
[47.36531448 -368.53372192]
[54.73982239 -355.38534546]
[58.75275040 -340.85400391]
[59.17079163 -325.78454590]
[55.96963882 -311.05307007]
[49.33540344 -297.51608276]
[39.65378952 -285.96057129]
[27.48767853 -277.05834961]
[13.54438972 -271.32702637]
[15.76950645 -256.49298096]
[17.99462318 -241.65893555]
[22.09557152 -235.51045227]
[20.14073181 -226.58764648]
[22.14474487 -211.72210693]
[24.14875984 -196.85658264]
[26.15277290 -181.99105835]
[29.47503281 -167.36360168]
[34.08904266 -153.09086609]
[38.70305252 -138.81813049]
[43.31705856 -124.54539490]
[47.93106842 -110.27266693]
[52.54507828 -95.99993134]
[57.15908813 -81.72719574]
[70.67297363 -79.75437927]
[82.07319641 -72.11476135]
[89.10322571 -60.25188828]
[90.34210205 -46.45176315]
[85.49126434 -33.40241241]
[75.44393158 -23.67030334]
[79.84493256 -9.33045578]
[84.24592590 5.00939083]
[86.65640259 6.44039392]
[88.64527130 8.91243839]
[89.81318665 12.26972675]
[89.82450104 16.21490097]
[88.45455170 20.33524132]
[91.99422455 34.91161728]
[95.53389740 49.48799133]
[99.07357025 64.06436920]
[109.59571075 74.60636902]
[105.33346558 89.84263611]
[111.07484436 75.98490906]
[122.91546631 66.77622986]
[137.76022339 64.62373352]
[151.72872925 70.09007263]
[161.16964722 81.74636078]
[163.61515808 96.54566956]
[158.42599487 110.61949158]
[146.95858765 120.28897858]
[132.21051025 123.02652740]
[118.03687286 118.11656952]
[108.14300537 106.84333801]
[109.48123932 121.78352356]
[110.81947327 136.72370911]
[112.15770721 151.66389465]
[113.49594116 166.60408020]
[122.32427979 154.47723389]
[136.55857849 149.74600220]
[150.88980103 154.17500305]
[159.97276306 166.11233521]
[160.41972351 181.10566711]
[152.06399536 193.56286621]
[138.02204895 198.83769226]
[123.53118896 194.96278381]
[113.99571228 183.38227844]
[113.54910278 198.37562561]
[113.10250092 213.36897278]
[128.07197571 218.19119263]
[141.06669617 227.02409363]
[151.04031372 239.14653015]
[157.19252014 253.57292175]
[159.03330994 269.13333130]
[156.42190552 284.56838989]
[149.57757568 298.63116455]
[139.06118774 310.18786621]
[125.72931671 318.30941772]
[110.66440582 322.34594727]
[110.44107819 337.34426880]
[110.21775055 352.34262085]
[109.99442291 367.34094238]
[109.77109528 382.33929443]
[110.10607147 397.33554077]
[110.99889374 412.30895996]
[119.59899902 400.01919556]
[133.43748474 394.23159790]
[148.22634888 396.73950195]
[159.38308716 406.76583862]
[163.45066833 421.20379639]
[159.16871643 435.57965088]
[147.86402893 445.43884277]
[133.03948975 447.72644043]
[119.28865051 441.73358154]
[110.87226868 429.31698608]
[109.75662231 444.27545166]
[108.64097595 459.23391724]
[107.52532196 474.19235229]
[106.40967560 489.15081787]
[108.93167114 495.26235962]
[108.11170959 500.88595581]
[105.03159332 504.53585815]
[103.47106934 519.45446777]
[101.91054535 534.37310791]
[100.35002136 549.29168701]
[98.78950500 564.21026611]
[111.80449677 572.18353271]
[120.06392670 585.01879883]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 208]
[11 207]
[12 206]
[13 205]
[14 204]
[15 201]
[16 200]
[17 199]
[18 198]
[19 197]
[20 187]
[21 186]
[27 185]
[28 184]
[29 183]
[30 182]
[31 181]
[42 171]
[43 170]
[44 169]
[45 160]
[46 159]
[47 158]
[48 157]
[49 156]
[50 145]
[52 143]
[53 142]
[54 141]
[55 140]
[56 135]
[57 134]
[58 133]
[63 127]
[64 126]
[65 125]
[66 124]
[67 123]
[68 122]
[69 121]
[82 120]
[83 119]
[84 118]
[85 117]
[86 115]
[87 114]
[88 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
