%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACCGACCAACGGAGUAGCCCACUACUAUCGGUUCCACCCCUAUUCACACCAAAGCUUCUUCUAUAUUUUAUACUAAUCAAGACACCGACACUUACAAUxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[176.80120850 470.18405151]
[189.77439880 462.44628906]
[186.01809692 447.92422485]
[182.26179504 433.40216064]
[178.50549316 418.88009644]
[165.54815674 407.04483032]
[170.61584473 389.34170532]
[166.64375305 374.87719727]
[162.67166138 360.41265869]
[152.31704712 354.15899658]
[148.88945007 342.14086914]
[154.75085449 330.65142822]
[150.99455261 316.12936401]
[147.23825073 301.60733032]
[143.48194885 287.08526611]
[139.61764526 272.59155273]
[126.58586884 265.47058105]
[122.35154724 250.85807800]
[129.90905762 237.23744202]
[125.93696594 222.77291870]
[121.96486664 208.30838013]
[111.13351440 198.08435059]
[114.94023132 182.72793579]
[110.96813202 168.26341248]
[106.99604034 153.79888916]
[96.16468048 143.57484436]
[99.97139740 128.21842957]
[95.99930573 113.75389862]
[86.18740082 103.79307556]
[89.53617096 90.21819305]
[85.56407928 75.75366974]
[81.59197998 61.28914642]
[77.61988068 46.82462311]
[73.64778900 32.36009979]
[60.24971771 19.72787094]
[65.34549713 2.93501639]
[61.15848923 -11.46876526]
[56.97147751 -25.87254715]
[52.78446579 -40.27632904]
[48.59745407 -54.68011093]
[45.57370377 -39.98804092]
[38.21255875 -26.91847610]
[27.21562767 -16.71712685]
[13.63107300 -10.35632038]
[-1.24631381 -8.44232750]
[-15.99851418 -11.15757656]
[-29.21944237 -18.24327087]
[-39.64896393 -29.02404404]
[-46.29300690 -42.47234344]
[-48.51829529 -57.30635834]
[-46.11273575 -72.11221313]
[-39.30561066 -85.47869873]
[-28.74572563 -96.13182068]
[-15.43958855 -103.05617523]
[-0.65545255 -105.59178162]
[14.19755268 -103.49697113]
[27.70373344 -96.97139740]
[38.57576370 -86.63703918]
[45.77778244 -73.47783661]
[45.55445480 -88.47617340]
[45.33112717 -103.47451019]
[31.12468147 -106.58901215]
[17.97740173 -112.79010773]
[6.55008221 -121.76242828]
[-2.58375287 -133.05139160]
[-8.96664047 -146.08628845]
[-12.28008556 -160.20904541]
[-12.36045456 -174.70756531]
[-9.20705032 -188.85153198]
[-2.98198342 -201.92922974]
[5.99816465 -213.28340149]
[17.27843475 -222.34419250]
[30.28854370 -228.65785217]
[44.37170792 -231.90936279]
[44.37170792 -246.90936279]
[44.37170792 -261.90936279]
[44.37170792 -276.90936279]
[44.37170792 -291.90936279]
[36.63440704 -305.70953369]
[44.37170792 -318.43679810]
[35.81988525 -328.09231567]
[36.12868881 -340.58584595]
[44.58732986 -349.23327637]
[44.81065750 -364.23162842]
[45.03398514 -379.22994995]
[34.30639648 -390.52404785]
[34.74654007 -405.73132324]
[45.57984161 -415.88882446]
[45.80316925 -430.88717651]
[46.02649689 -445.88549805]
[46.24982452 -460.88385010]
[31.55088615 -464.12823486]
[17.80606270 -470.26538086]
[5.57820225 -479.04400635]
[-4.63197470 -490.10464478]
[-12.40636730 -502.99429321]
[-17.42661858 -517.18524170]
[-19.48715401 -532.09625244]
[-18.50359535 -547.11682129]
[-14.51621628 -561.63183594]
[-7.68830013 -575.04693604]
[1.70055485 -586.81274414]
[13.26588154 -596.44744873]
[26.53408623 -603.55657959]
[40.96184540 -607.84899902]
[55.95834732 -609.14886475]
[70.90950012 -607.40307617]
[85.20306396 -602.68298340]
[98.25372314 -595.18200684]
[109.52705383 -585.20715332]
[118.56143951 -573.16705322]
[124.98690796 -559.55462646]
[128.54035950 -544.92730713]
[129.07626343 -529.88409424]
[126.57267761 -515.04101562]
[121.13214111 -501.00588989]
[112.97741699 -488.35339355]
[102.44245148 -477.60168457]
[89.95864105 -469.19104004]
[76.03718567 -463.46582031]
[61.24816513 -460.66052246]
[61.02483749 -445.66217041]
[60.80150986 -430.66384888]
[60.57818222 -415.66549683]
[71.10425568 -405.18994141]
[71.09142303 -389.97631836]
[60.03232193 -379.00662231]
[59.80899429 -364.00830078]
[59.58566666 -349.00994873]
[68.94639587 -334.16598511]
[59.37170792 -318.43679810]
[67.10900879 -305.70953369]
[59.37170792 -291.90936279]
[59.37170792 -276.90936279]
[59.37170792 -261.90936279]
[59.37170792 -246.90936279]
[59.37170792 -231.90936279]
[74.43988037 -228.30149841]
[88.21804810 -221.19523621]
[99.90682983 -210.99816895]
[108.82691956 -198.29736328]
[114.45863342 -183.82554626]
[116.47209930 -168.41883850]
[114.74665833 -152.96844482]
[109.37802887 -138.36907959]
[100.67304230 -125.46721649]
[89.13208008 -115.01193237]
[75.42033386 -107.61146545]
[60.32946396 -103.69783783]
[60.55279160 -88.69950104]
[60.77611923 -73.70116425]
[63.00123596 -58.86712265]
[67.18824768 -44.46334076]
[71.37525940 -30.05955887]
[75.56227112 -15.65577698]
[79.74928284 -1.25199485]
[90.19585419 4.84682751]
[93.80200195 16.81258965]
[88.11231232 28.38800240]
[92.08441162 42.85252762]
[96.05650330 57.31705093]
[100.02860260 71.78157043]
[104.00069427 86.24610138]
[113.81259918 96.20692444]
[110.46382904 109.78180695]
[114.43592072 124.24633026]
[125.55139160 135.50497437]
[121.46056366 149.82678223]
[125.43265533 164.29130554]
[129.40475464 178.75582886]
[140.52021790 190.01448059]
[136.42939758 204.33628845]
[140.40148926 218.80081177]
[144.37358093 233.26533508]
[157.82734680 241.11607361]
[161.64955139 255.84175110]
[154.08216858 268.61947632]
[159.37232971 276.06607056]
[158.00399780 283.32894897]
[161.76029968 297.85101318]
[165.51660156 312.37307739]
[169.27290344 326.89514160]
[182.48141479 339.72543335]
[177.13618469 356.44055176]
[181.10827637 370.90509033]
[185.08036804 385.36959839]
[195.88375854 392.41586304]
[198.89434814 404.54516602]
[193.02755737 415.12380981]
[196.78385925 429.64587402]
[200.54016113 444.16793823]
[204.29644775 458.68997192]
[219.39443970 459.16680908]
[233.74609375 463.87924194]
[246.18797302 472.44525146]
[255.71147156 484.17041016]
[261.54458618 498.10424805]
[263.21441650 513.11718750]
[260.58560181 527.99218750]
[253.87129211 541.52343750]
[243.61573792 552.61401367]
[230.65032959 560.36480713]
[216.02610779 564.14752197]
[200.92860413 563.65551758]
[186.58171082 558.92864990]
[174.14843750 550.35015869]
[164.63671875 538.61547852]
[158.81761169 524.67578125]
[157.16287231 509.66116333]
[159.80661011 494.78878784]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 192]
[3 191]
[4 190]
[5 189]
[7 186]
[8 185]
[9 184]
[12 182]
[13 181]
[14 180]
[15 179]
[16 177]
[19 174]
[20 173]
[21 172]
[23 170]
[24 169]
[25 168]
[27 166]
[28 165]
[30 163]
[31 162]
[32 161]
[33 160]
[34 159]
[36 156]
[37 155]
[38 154]
[39 153]
[40 152]
[59 151]
[60 150]
[61 149]
[74 137]
[75 136]
[76 135]
[77 134]
[78 133]
[80 131]
[83 129]
[84 128]
[85 127]
[88 124]
[89 123]
[90 122]
[91 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
