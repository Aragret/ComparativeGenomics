%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGGCAGCCUUUACCACUUCCCUCUGAGCUUCAUGAGACUCCGAACAUCCUCCCAUUUUAUCUCUGGGUCAUUUUAACAUUAUUCGUCACGAACUUAAUxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[39.89697266 539.74932861]
[26.66017532 529.15576172]
[33.17542267 513.50366211]
[33.62202835 498.51031494]
[34.06863403 483.51696777]
[33.95697021 468.51736450]
[33.28718185 453.53234863]
[24.98929787 441.16323853]
[32.10267258 427.03134155]
[31.43288612 412.04632568]
[30.76310158 397.06127930]
[24.74308014 410.80023193]
[15.94630051 422.95001221]
[4.77295351 432.95782471]
[-8.26864624 440.36840820]
[-22.58519363 444.84460449]
[-37.52538300 446.18283081]
[-52.40953064 444.32214355]
[-66.56050873 439.34722900]
[-79.33454895 431.48440552]
[-90.15050507 421.09136963]
[-98.51633453 408.64096069]
[-104.05144501 394.69955444]
[-106.50402832 379.90142822]
[-105.76249695 364.91976929]
[-101.86059570 350.43615723]
[-94.97583771 337.10949707]
[-85.42142487 325.54605103]
[-73.63201904 316.27188110]
[-60.14396667 309.70892334]
[-45.57088470 306.15573120]
[-30.57574272 305.77395630]
[-15.84072495 308.58096313]
[-2.03617644 314.44903564]
[10.20988941 323.11123657]
[20.34035683 334.17352295]
[27.89435959 347.13256836]
[32.52823639 361.39886475]
[34.03115463 376.32769775]
[39.27787399 362.27523804]
[44.52459335 348.22274780]
[49.77130890 334.17028809]
[55.01802826 320.11782837]
[60.26474762 306.06533813]
[65.51146698 292.01287842]
[70.75818634 277.96041870]
[76.00489807 263.90792847]
[80.93649292 249.74179077]
[85.55050659 235.46907043]
[90.16451263 221.19633484]
[92.50000000 206.37925720]
[84.76270294 193.65199280]
[92.50000000 179.85182190]
[92.50000000 164.85182190]
[92.50000000 149.85182190]
[92.50000000 134.85182190]
[79.80220795 129.37599182]
[70.14336395 119.48026276]
[64.97673035 106.65354919]
[65.07967377 92.82574463]
[70.43670654 80.07737732]
[80.24181366 70.32655334]
[93.01972198 65.04038239]
[93.24304962 50.04204178]
[93.46637726 35.04370499]
[85.93540192 21.12986565]
[93.86133575 8.51920223]
[83.13374329 -2.77489233]
[83.57388306 -17.98215866]
[94.40718842 -28.13967323]
[94.63051605 -43.13801193]
[94.85384369 -58.13634872]
[83.36421204 -48.49330521]
[68.40977478 -49.66161728]
[58.55712509 -60.97201920]
[59.45030212 -75.94540405]
[70.57765198 -86.00433350]
[85.56492615 -85.38659668]
[95.82639313 -74.44695282]
[97.38691711 -89.36555481]
[98.94744110 -104.28415680]
[100.28567505 -119.22434235]
[101.40132141 -134.18280029]
[102.51696777 -149.14125061]
[103.63262177 -164.09970093]
[95.25433350 -180.49743652]
[105.69317627 -194.60409546]
[106.58599091 -209.57749939]
[103.97292328 -218.33018494]
[107.60520935 -224.76667786]
[108.72085571 -239.72512817]
[109.83650208 -254.68357849]
[110.95215607 -269.64202881]
[96.47238159 -273.75555420]
[83.11721802 -280.69995117]
[71.43354797 -290.19082642]
[61.89981461 -301.83953857]
[54.90641403 -315.16912842]
[50.73971939 -329.63366699]
[49.57035828 -344.64093018]
[51.44621658 -359.57632446]
[56.29047394 -373.82827759]
[63.90476227 -386.81317139]
[73.97728729 -397.99926758]
[86.09557343 -406.92855835]
[99.76339722 -413.23532104]
[114.42106628 -416.66137695]
[129.46835327 -417.06634521]
[144.28909302 -414.43371582]
[158.27636719 -408.87124634]
[170.85740662 -400.60675049]
[181.51705933 -389.97860718]
[189.81877136 -377.42208862]
[195.42262268 -363.45135498]
[198.09913635 -348.63848877]
[197.73870850 -333.59005737]
[194.35609436 -318.92230225]
[188.08981323 -305.23587036]
[179.19645691 -293.09118652]
[168.04022217 -282.98559570]
[155.07792664 -275.33288574]
[140.84037781 -270.44644165]
[125.91060638 -268.52639771]
[124.79496002 -253.56793213]
[123.67930603 -238.60948181]
[122.56365967 -223.65103149]
[121.55940247 -208.68467712]
[120.66658783 -193.71127319]
[128.45863342 -184.45867920]
[127.83735657 -171.97677612]
[118.59107208 -162.98405457]
[117.47542572 -148.02560425]
[116.35977936 -133.06715393]
[115.24412537 -118.10869598]
[117.62654877 -113.96948242]
[117.43402863 -108.28969574]
[113.86604309 -102.72363281]
[112.30551910 -87.80503082]
[110.74499512 -72.88642883]
[109.85218048 -57.91302109]
[109.62885284 -42.91468430]
[109.40552521 -27.91634560]
[119.93160248 -17.44078636]
[119.91876984 -2.22715712]
[108.85967255 8.74252987]
[116.40662384 21.58358765]
[108.46471405 35.26703262]
[108.24138641 50.26536942]
[108.01805878 65.26371002]
[122.34178162 72.21971893]
[132.20812988 84.71812439]
[135.64868164 100.26539612]
[131.97703552 115.75971222]
[121.92569733 128.10983276]
[107.50000000 134.85182190]
[107.50000000 149.85182190]
[107.50000000 164.85182190]
[107.50000000 179.85182190]
[115.23729706 193.65199280]
[107.50000000 206.37925720]
[114.26899719 192.99342346]
[124.35762024 181.89299011]
[137.03756714 173.87930298]
[151.39343262 169.53088379]
[166.38890076 169.16163635]
[180.94139099 172.79823303]
[194.00036621 180.17814636]
[204.62309265 190.76860046]
[212.04270935 203.80505371]
[215.72357178 218.34642029]
[215.39996338 233.34292603]
[211.09524536 247.71197510]
[203.12017822 260.41622925]
[192.05049133 270.53860474]
[178.68531799 277.34829712]
[163.98948669 280.35375977]
[149.02392578 279.33798218]
[134.86898804 274.37432861]
[122.54654694 265.82110596]
[112.94615936 254.29580688]
[106.76089478 240.63043213]
[104.43724823 225.81033325]
[99.82323456 240.08306885]
[95.20922852 254.35580444]
[96.30382538 259.45962524]
[95.41965485 264.01721191]
[93.09613037 267.36627197]
[90.05737305 269.15466309]
[84.81065369 283.20712280]
[79.56393433 297.25958252]
[74.31721497 311.31207275]
[69.07049561 325.36453247]
[63.82378006 339.41699219]
[58.57706451 353.46948242]
[53.33034515 367.52194214]
[48.08362579 381.57443237]
[45.74813843 396.39147949]
[46.41792297 411.37652588]
[47.08771133 426.36157227]
[55.43350220 439.80249023]
[48.27222061 452.86254883]
[48.94200897 467.84759521]
[60.83646011 458.70855713]
[75.43363190 462.16146851]
[81.97303772 475.66094971]
[75.63406372 489.25570679]
[61.08956528 492.92416382]
[49.06198502 483.96356201]
[48.61537933 498.95690918]
[48.16877365 513.95025635]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 210]
[4 209]
[5 208]
[6 202]
[7 201]
[9 199]
[10 198]
[11 197]
[39 196]
[40 195]
[41 194]
[42 193]
[43 192]
[44 191]
[45 190]
[46 189]
[47 188]
[48 184]
[49 183]
[50 182]
[51 160]
[53 158]
[54 157]
[55 156]
[56 155]
[63 149]
[64 148]
[65 147]
[67 145]
[70 142]
[71 141]
[72 140]
[79 139]
[80 138]
[81 137]
[82 134]
[83 133]
[84 132]
[85 131]
[87 128]
[88 127]
[90 126]
[91 125]
[92 124]
[93 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
