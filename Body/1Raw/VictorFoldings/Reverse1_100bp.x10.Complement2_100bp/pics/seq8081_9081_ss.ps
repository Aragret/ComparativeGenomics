%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxGAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUU\
) } def
/len { sequence length } bind def

/coor [
[87.88803864 584.65435791]
[74.00782776 578.87097168]
[61.30475616 570.82482910]
[50.14432526 560.74749756]
[40.84763718 548.92889404]
[33.68217850 535.70904541]
[28.85411263 521.46832275]
[26.50235367 506.61651611]
[26.69456673 491.58084106]
[29.42521858 476.79397583]
[34.61574554 462.68133545]
[42.11680603 449.64898682]
[51.71257782 438.07189941]
[63.12697601 428.28314209]
[76.03157806 420.56439209]
[90.05509949 415.13769531]
[104.79405212 412.15924072]
[104.34744263 397.16589355]
[103.90084076 382.17254639]
[103.45423126 367.17919922]
[103.00762939 352.18585205]
[87.30161285 348.31350708]
[73.30485535 340.17614746]
[62.14959717 328.42294312]
[54.74075699 313.99588013]
[51.68254089 298.05441284]
[53.22918701 281.88204956]
[59.26382828 266.78323364]
[69.30729675 253.97801208]
[82.55615234 244.50344849]
[97.94696808 239.12966919]
[97.05415344 224.15626526]
[93.51810455 217.66642761]
[96.26119995 208.95359802]
[95.59141541 193.96856689]
[84.95936584 186.68920898]
[80.39308929 174.43232727]
[83.76963043 161.59451294]
[94.07298279 152.91950989]
[93.62638092 137.92616272]
[93.17977142 122.93281555]
[92.73316956 107.93946838]
[88.97686768 93.41740417]
[82.09745026 80.08797455]
[75.21804047 66.75854492]
[68.33863068 53.42911911]
[61.45921326 40.09968948]
[53.89483643 27.14669037]
[45.66602707 14.60529041]
[37.43722153 2.06389022]
[29.20841217 -10.47751045]
[27.14598083 4.38002586]
[16.82780266 15.26741219]
[2.10230207 18.12392426]
[-11.53827190 11.88415241]
[-19.00632286 -1.12462270]
[-17.51645088 -16.05044937]
[-7.62434483 -27.32636261]
[6.98048687 -30.74672699]
[20.85169601 -25.03507614]
[14.17150116 -38.46545029]
[7.49130630 -51.89582825]
[0.81111175 -65.32620239]
[-6.36399460 -52.15358734]
[-21.10909271 -49.40003204]
[-32.55464554 -59.09535599]
[-32.26341629 -74.09252930]
[-20.45009041 -83.33618927]
[-5.82430744 -80.01328278]
[-11.48709393 -93.90330505]
[-17.14988136 -107.79333496]
[-22.81266785 -121.68336487]
[-28.47545433 -135.57339478]
[-43.11047363 -132.14372253]
[-58.10184479 -131.04582214]
[-73.08038330 -132.30673218]
[-87.67723083 -135.89538574]
[-101.53292847 -141.72343445]
[-114.30626678 -149.64733887]
[-125.68269348 -159.47198486]
[-135.38204956 -170.95539856]
[-143.16548157 -183.81481934]
[-148.84130859 -197.73356628]
[-152.26977539 -212.36886597]
[-153.36643982 -227.36032104]
[-152.10429382 -242.33876038]
[-148.51441956 -256.93530273]
[-142.68524170 -270.79052734]
[-134.76026917 -283.56320190]
[-124.93470001 -294.93884277]
[-113.45047760 -304.63723755]
[-100.59041595 -312.41961670]
[-86.67120361 -318.09429932]
[-72.03562164 -321.52154541]
[-57.04406738 -322.61697388]
[-42.06573868 -321.35360718]
[-27.46948433 -317.76251221]
[-13.61474705 -311.93218994]
[-0.84271616 -304.00616455]
[10.53208733 -294.17965698]
[20.22954750 -282.69464111]
[28.01085663 -269.83392334]
[33.68439484 -255.91426086]
[37.11043930 -241.27838135]
[38.20462799 -226.28674316]
[36.94001389 -211.30851746]
[33.34773636 -196.71255493]
[27.51626205 -182.85830688]
[19.58919334 -170.08692932]
[9.76174259 -158.71293640]
[-1.72408068 -149.01641846]
[-14.58542728 -141.23617554]
[-8.92264080 -127.34614563]
[-3.25985384 -113.45612335]
[2.40293264 -99.56609344]
[8.06571960 -85.67607117]
[14.24148750 -72.00640106]
[20.92168236 -58.57602310]
[27.60187721 -45.14564514]
[34.28207016 -31.71527100]
[41.74981308 -18.70631790]
[49.97862244 -6.16491747]
[58.20742798 6.37648249]
[66.43623352 18.91788292]
[69.39970398 4.21353483]
[81.04274750 -5.24371719]
[96.04231262 -5.13014507]
[107.54081726 4.50232744]
[110.28128052 19.24986458]
[103.01081848 32.37009048]
[89.05337524 37.86461258]
[74.78864288 33.22027588]
[81.66806030 46.54970551]
[88.54747009 59.87913513]
[95.42687988 73.20856476]
[102.30629730 86.53799438]
[102.06138611 71.53999329]
[104.70740509 56.77521515]
[110.14540863 42.79565811]
[118.17209625 30.12394905]
[128.48739624 19.23383331]
[140.70565796 10.53244686]
[154.37008667 4.34509659]
[168.96983337 0.90310031]
[183.95907593 0.33514032]
[198.77743530 2.66245008]
[212.87091064 7.79802132]
[225.71260071 15.54985714]
[236.82241821 25.62814903]
[245.78500366 37.65611267]
[252.26530457 51.18407440]
[256.02102661 65.70628357]
[256.91177368 80.67980957]
[254.90426636 95.54486084]
[250.07350159 109.74570465]
[242.60012817 122.75141907]
[232.76351929 134.07577515]
[220.93144226 143.29542542]
[207.54621887 150.06565857]
[193.10829163 154.13337708]
[178.15744019 155.34651184]
[163.25257874 153.65969849]
[148.95097351 149.13600159]
[135.78726196 141.94454956]
[124.25361633 132.35418701]
[114.78121185 120.72347260]
[107.72651672 107.49285889]
[108.17311859 122.48620605]
[108.61972809 137.47955322]
[109.06632996 152.47291565]
[122.01638031 164.23367310]
[122.44552612 181.38391113]
[110.57645416 193.29878235]
[111.24623871 208.28381348]
[112.02756500 223.26345825]
[112.92037964 238.23686218]
[126.53888702 240.93363953]
[139.10316467 246.81584167]
[149.88081360 255.53530884]
[158.24481201 266.57867432]
[163.71003723 279.29751587]
[165.96142578 292.94650269]
[164.87203979 306.72702026]
[160.51031494 319.83392334]
[153.13571167 331.50256348]
[143.18333435 341.05340576]
[131.23822021 347.93161011]
[118.00097656 351.73922729]
[118.44758606 366.73257446]
[118.89418793 381.72592163]
[119.34079742 396.71926880]
[119.78739929 411.71264648]
[134.67750549 413.80853271]
[148.99916077 418.39089966]
[162.34031677 425.32788086]
[174.31710815 434.41989136]
[184.58494568 445.40530396]
[192.84840393 457.96807861]
[198.86973572 471.74673462]
[202.47567749 486.34487915]
[203.56248474 501.34243774]
[202.09889221 516.30792236]
[198.12701416 530.81072998]
[191.76110840 544.43365479]
[183.18437195 556.78466797]
[172.64353943 567.50842285]
[160.44189453 576.29638672]
[146.93052673 582.89569092]
[132.49816895 587.11645508]
[117.56007385 588.83728027]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 192]
[18 191]
[19 190]
[20 189]
[21 188]
[31 176]
[32 175]
[34 174]
[35 173]
[39 170]
[40 169]
[41 168]
[42 167]
[43 136]
[44 135]
[45 134]
[46 133]
[47 132]
[48 124]
[49 123]
[50 122]
[51 121]
[60 120]
[61 119]
[62 118]
[63 117]
[69 116]
[70 115]
[71 114]
[72 113]
[73 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
