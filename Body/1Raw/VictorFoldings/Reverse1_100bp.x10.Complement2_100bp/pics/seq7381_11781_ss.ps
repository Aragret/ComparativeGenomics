%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[20.50965881 453.99636841]
[6.19396448 449.10598755]
[-5.90863514 440.02951050]
[-14.61245060 427.65618896]
[-19.06476974 413.19827271]
[-18.82940292 398.07214355]
[-13.92940426 383.75970459]
[-4.84482861 371.66320801]
[7.53430986 362.96768188]
[21.99522972 358.52505493]
[22.21855736 343.52670288]
[22.44188499 328.52838135]
[22.66521263 313.53002930]
[22.88854027 298.53170776]
[23.11186790 283.53335571]
[23.33519745 268.53503418]
[23.55852509 253.53668213]
[21.37827301 250.76560974]
[20.43189621 246.80084229]
[21.26581764 242.23379517]
[24.14166641 237.87759399]
[16.70895004 250.90658569]
[6.83698797 262.20013428]
[-5.08102083 271.30844116]
[-18.57038689 277.86868286]
[-33.09383392 281.61962891]
[-48.07290268 282.41180420]
[-62.91097641 280.21374512]
[-77.01705933 275.11291504]
[-89.82932281 267.31253052]
[-100.83744812 257.12326050]
[-109.60298920 244.95095825]
[-115.77681732 231.28041077]
[-119.11303711 216.65612793]
[-119.47875977 201.66058350]
[-116.85942078 186.89105225]
[-111.35935211 172.93579102]
[-103.19760895 160.35064697]
[-92.69928741 149.63685608]
[-80.28251648 141.22116089]
[-66.44185638 135.43876648]
[-51.72858047 132.51995850]
[-36.72870255 132.58100891]
[-22.03967094 135.61947632]
[-8.24653816 141.51435852]
[4.10131693 150.03083801]
[14.51208591 160.82971191]
[22.57111168 173.48089600]
[27.95740509 187.48045349]
[30.45643234 202.27081299]
[29.96921158 217.25874329]
[29.15203667 202.38656616]
[42.48504639 193.86944580]
[49.56215286 180.64392090]
[56.63925552 167.41839600]
[63.61771011 154.14054871]
[70.49712372 140.81111145]
[77.37653351 127.48168945]
[84.25595093 114.15225983]
[78.99312592 102.62158966]
[81.26068115 90.15115356]
[90.24577332 81.21125793]
[102.72748566 79.00660706]
[109.80458832 65.78108215]
[116.88169861 52.55555344]
[104.44763184 60.94567108]
[90.04691315 65.14320374]
[75.05211639 64.74805450]
[60.89245987 59.79790115]
[48.91754150 50.76455307]
[40.26874161 38.50901413]
[35.77040482 24.19940376]
[35.85128784 9.19962120]
[40.50367737 -5.06064796]
[49.28413773 -17.22220612]
[61.35577393 -26.12589264]
[75.56799316 -30.92306137]
[90.56617737 -31.15648079]
[104.92079163 -26.80389977]
[117.26365662 -18.28017998]
[126.41831207 -6.39774799]
[131.51220703 7.71083832]
[132.05982971 22.70083809]
[128.00849915 37.14453506]
[138.33515930 26.26519966]
[148.66183472 15.38586617]
[152.55070496 0.05005113]
[166.92449951 -3.85419631]
[170.81338501 -19.19001198]
[185.18717957 -23.09425926]
[188.82543945 -31.47285461]
[195.74951172 -34.05724716]
[206.23701477 -44.78162766]
[210.38882446 -62.72163773]
[227.45976257 -66.78976440]
[237.78643799 -77.66909790]
[248.11309814 -88.54843140]
[258.43978882 -99.42776489]
[268.76644897 -110.30709839]
[258.92639160 -121.64414978]
[250.22645569 -133.87799072]
[242.74789429 -146.89437866]
[236.56051636 -160.57180786]
[231.72210693 -174.78256226]
[228.27784729 -189.39393616]
[226.25987244 -204.26953125]
[225.68704224 -219.27044678]
[226.56471252 -234.25662231]
[228.88465881 -249.08811951]
[232.62524414 -263.62646484]
[237.75154114 -277.73590088]
[244.21568298 -291.28472900]
[251.95730591 -304.14639282]
[260.90414429 -316.20086670]
[270.97262573 -327.33554077]
[282.06878662 -337.44644165]
[294.08898926 -346.43923950]
[306.92102051 -354.22988892]
[320.44506836 -360.74569702]
[334.53485107 -365.92581177]
[349.05883789 -369.72186279]
[363.88134766 -372.09841919]
[378.86407471 -373.03326416]
[393.86706543 -372.51770020]
[408.75024414 -370.55654907]
[423.37466431 -367.16806030]
[437.60379028 -362.38394165]
[451.30471802 -356.24884033]
[464.34957886 -348.82000732]
[476.61654663 -340.16683960]
[487.99105835 -330.37011719]
[498.36694336 -319.52133179]
[507.64733887 -307.72174072]
[515.74554443 -295.08157349]
[522.58599854 -281.71878052]
[528.10479736 -267.75817871]
[532.25042725 -253.33010864]
[534.98419189 -238.56929016]
[536.28051758 -223.61351013]
[536.12738037 -208.60244751]
[534.52612305 -193.67625427]
[531.49176025 -178.97427368]
[527.05255127 -164.63378906]
[521.25006104 -150.78871155]
[514.13836670 -137.56829834]
[505.78390503 -125.09598541]
[496.26467896 -113.48823547]
[485.66955566 -102.85342407]
[474.09750366 -93.29084015]
[461.65652466 -84.88978577]
[448.46279907 -77.72869110]
[434.63952637 -71.87442017]
[420.31576538 -67.38163757]
[405.62524414 -64.29228973]
[390.70513916 -62.63521576]
[375.69473267 -62.42589569]
[360.73422241 -63.66628647]
[345.96328735 -66.34479523]
[331.51980591 -70.43642426]
[317.53866577 -75.90296173]
[304.15039062 -82.69337463]
[291.47998047 -90.74425507]
[279.64578247 -99.98043060]
[269.31912231 -89.10109711]
[258.99243164 -78.22176361]
[248.66577148 -67.34243011]
[238.33909607 -56.46309280]
[238.34068298 -44.36654282]
[229.82641602 -35.21827316]
[216.96139526 -34.29412460]
[206.47389221 -23.56974602]
[196.06651306 -12.76759052]
[192.91627502 1.79006207]
[177.80383301 6.47247219]
[174.65359497 21.03012466]
[159.54116821 25.71253395]
[149.21449280 36.59186935]
[138.88783264 47.47120285]
[130.10722351 59.63265991]
[123.03012085 72.85818481]
[115.95301056 86.08371735]
[121.09608459 101.76544189]
[113.41812897 116.37422943]
[97.58537292 121.03166962]
[90.70596313 134.36109924]
[83.82655334 147.69053650]
[76.94713593 161.01995850]
[75.79224396 170.08108521]
[69.86478424 174.49549866]
[62.78767776 187.72102356]
[55.71057510 200.94654846]
[56.02154922 216.76470947]
[43.19474030 224.33584595]
[39.11507416 238.77040100]
[38.55686188 253.76000977]
[38.33353424 268.75836182]
[38.11020660 283.75668335]
[37.88687897 298.75503540]
[37.66355133 313.75335693]
[37.44022369 328.75170898]
[37.21689606 343.75003052]
[36.99356842 358.74838257]
[51.31580353 363.61959839]
[63.43055725 372.67984009]
[72.15094757 385.04147339]
[76.62263489 399.49343872]
[76.40753937 414.61987305]
[71.52672577 428.93881226]
[62.45837021 441.04751587]
[50.09089661 449.75961304]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 202]
[11 201]
[12 200]
[13 199]
[14 198]
[15 197]
[16 196]
[17 195]
[21 194]
[51 193]
[53 191]
[54 190]
[55 189]
[56 187]
[57 186]
[58 185]
[59 184]
[63 181]
[64 180]
[65 179]
[84 178]
[85 177]
[86 176]
[88 174]
[90 172]
[92 171]
[93 170]
[95 167]
[96 166]
[97 165]
[98 164]
[99 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
