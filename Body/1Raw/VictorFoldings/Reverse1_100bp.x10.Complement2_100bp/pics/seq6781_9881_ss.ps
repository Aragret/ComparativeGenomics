%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxGUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUA\
) } def
/len { sequence length } bind def

/coor [
[214.17247009 302.84210205]
[220.37454224 289.17208862]
[227.82943726 276.14294434]
[236.47166443 263.86914062]
[225.06919861 254.12316895]
[213.66674805 244.37721252]
[202.26428223 234.63124084]
[206.56541443 249.00135803]
[204.29116821 263.82794189]
[195.88066101 276.24822998]
[182.95783997 283.86404419]
[168.01789856 285.20489502]
[153.94548035 280.01187134]
[143.45777893 269.28768921]
[138.57980347 255.10301208]
[140.25338745 240.19667053]
[148.15541077 227.44685364]
[160.76011658 219.31533813]
[175.63372803 217.37220764]
[189.90548706 221.99330139]
[180.41658020 210.37603760]
[170.92768860 198.75877380]
[161.43878174 187.14151001]
[147.39518738 182.17900085]
[144.65769958 166.59642029]
[135.16880798 154.97915649]
[121.12520599 150.01664734]
[118.38772583 134.43406677]
[108.89882660 122.81681061]
[99.40992737 111.19954681]
[97.99230194 126.13240814]
[87.39632416 136.74961853]
[72.46633911 138.19714355]
[60.02811813 129.81318665]
[55.76826477 115.43077850]
[61.63431549 101.62536621]
[74.94439697 94.70859528]
[89.61489868 97.84370422]
[75.57519531 90.55005646]
[75.06227875 75.66428375]
[66.83347321 63.12288284]
[58.60466385 50.58148193]
[50.37585449 38.04008102]
[42.14704895 25.49868202]
[33.91823959 12.95728207]
[25.68943214 0.41588184]
[18.36517525 -5.04242039]
[17.43309212 -12.37406445]
[9.39191914 -25.03659058]
[2.14973903 -30.60333443]
[1.32691705 -37.94804382]
[-6.52483845 -50.72888565]
[-14.37659359 -63.50972748]
[-27.82768822 -56.84764862]
[-41.82887268 -51.43635941]
[-56.26412964 -47.32069778]
[-71.01383209 -44.53477097]
[-85.95577240 -43.10166168]
[-100.96611786 -43.03324890]
[-115.92049408 -44.33009338]
[-130.69499207 -46.98145676]
[-145.16716003 -50.96536255]
[-159.21708679 -56.24879837]
[-172.72834778 -62.78799057]
[-185.58898926 -70.52873993]
[-197.69242859 -79.40691376]
[-208.93838501 -89.34893799]
[-219.23364258 -100.27243042]
[-228.49291992 -112.08687592]
[-236.63948059 -124.69436646]
[-243.60581970 -137.99043274]
[-249.33419800 -151.86489868]
[-253.77716064 -166.20280457]
[-256.89788818 -180.88531494]
[-258.67053223 -195.79078674]
[-259.08035278 -210.79570007]
[-258.12402344 -225.77569580]
[-255.80943298 -240.60667419]
[-252.15576172 -255.16572571]
[-247.19329834 -269.33221436]
[-240.96315002 -282.98873901]
[-233.51693726 -296.02212524]
[-224.91638184 -308.32437134]
[-215.23275757 -319.79357910]
[-204.54627991 -330.33465576]
[-192.94552612 -339.86029053]
[-180.52661133 -348.29153442]
[-167.39244080 -355.55853271]
[-153.65187073 -361.60104370]
[-139.41874695 -366.36898804]
[-124.81101990 -369.82290649]
[-109.94972992 -371.93414307]
[-94.95803070 -372.68521118]
[-79.96014404 -372.06985474]
[-65.08035278 -370.09323120]
[-50.44195557 -366.77169800]
[-36.16625595 -362.13275146]
[-22.37155342 -356.21487427]
[-9.17215061 -349.06707764]
[3.32257223 -340.74859619]
[15.00907898 -331.32836914]
[25.79052925 -320.88442993]
[35.57758331 -309.50335693]
[44.28913879 -297.27944946]
[51.85301208 -284.31399536]
[58.20652008 -270.71441650]
[63.29701996 -256.59344482]
[67.08232117 -242.06806946]
[69.53106689 -227.25865173]
[70.62295532 -212.28791809]
[70.34895325 -197.27990723]
[68.71131134 -182.35900879]
[65.72361755 -167.64883423]
[61.41061783 -153.27131653]
[55.80805969 -139.34556580]
[48.96236420 -125.98697662]
[40.93025589 -113.30626678]
[31.77829933 -101.40849304]
[21.58232880 -90.39226532]
[10.42683125 -80.34884644]
[-1.59575129 -71.36148071]
[6.25600433 -58.58064270]
[14.10775948 -45.79980087]
[22.05444336 -33.07776260]
[30.09561729 -20.41523743]
[38.23083115 -7.81292582]
[46.45964050 4.72847414]
[54.68844986 17.26987457]
[62.91725540 29.81127548]
[71.14606476 42.35267639]
[79.37487030 54.89407730]
[87.60368347 67.43547821]
[101.05480194 73.83207703]
[102.15629578 89.61489868]
[111.02719116 101.71064758]
[120.51609039 113.32791138]
[130.00498962 124.94517517]
[144.72729492 130.73863220]
[146.78607178 145.49026489]
[156.27496338 157.10752869]
[170.99728394 162.90097046]
[173.05604553 177.65261841]
[182.54495239 189.26988220]
[192.03384399 200.88713074]
[201.52275085 212.50439453]
[212.01023865 223.22877502]
[223.41270447 232.97474670]
[234.81517029 242.72071838]
[246.21763611 252.46667480]
[256.99615479 242.01882935]
[268.70571899 232.62620544]
[281.24334717 224.37136841]
[294.49887085 217.32687378]
[308.35583496 211.55459595]
[322.69244385 207.10530090]
[337.38269043 204.01806641]
[352.29748535 202.32002258]
[367.30575562 202.02610779]
[382.27560425 203.13888550]
[397.07546997 205.64860535]
[411.57525635 209.53317261]
[425.64761353 214.75848389]
[439.16879272 221.27859497]
[452.02001953 229.03622437]
[464.08831787 237.96318054]
[475.26763916 247.98101807]
[485.45974731 259.00170898]
[494.57507324 270.92837524]
[502.53350830 283.65618896]
[509.26507568 297.07336426]
[514.71069336 311.06192017]
[518.82244873 325.49896240]
[521.56414795 340.25759888]
[522.91186523 355.20812988]
[522.85357666 370.21914673]
[521.38989258 385.15878296]
[518.53369141 399.89569092]
[514.30999756 414.30038452]
[508.75598145 428.24624634]
[501.92047119 441.61074829]
[493.86346436 454.27642822]
[484.65585327 466.13198853]
[474.37850952 477.07321167]
[463.12173462 487.00396729]
[450.98452759 495.83697510]
[438.07348633 503.49462891]
[424.50207520 509.90957642]
[410.38961792 515.02551270]
[395.86007690 518.79742432]
[381.04119873 521.19219971]
[366.06317139 522.18872070]
[351.05761719 521.77832031]
[336.15646362 519.96453857]
[321.49060059 516.76336670]
[307.18896484 512.20294189]
[293.37722778 506.32327271]
[280.17678833 499.17608643]
[267.70361328 490.82418823]
[256.06732178 481.34097290]
[245.37020874 470.80975342]
[235.70626831 459.32312012]
[227.16043091 446.98202515]
[219.80780029 433.89486694]
[213.71299744 420.17672729]
[208.92956543 405.94812012]
[205.49955750 391.33407593]
[203.45310974 376.46310425]
[202.80822754 361.46582031]
[203.57055664 346.47402954]
[205.73339844 331.61950684]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 149]
[5 148]
[6 147]
[7 146]
[20 145]
[21 144]
[22 143]
[23 142]
[25 140]
[26 139]
[28 137]
[29 136]
[30 135]
[38 134]
[40 132]
[41 131]
[42 130]
[43 129]
[44 128]
[45 127]
[46 126]
[48 125]
[49 124]
[51 123]
[52 122]
[53 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
