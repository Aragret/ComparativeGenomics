%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[90.81094360 534.32971191]
[77.82528687 541.88330078]
[63.94867706 547.63854980]
[49.42876434 551.49285889]
[34.52467346 553.37738037]
[19.50237846 553.25848389]
[4.62997484 551.13836670]
[-9.82712173 547.05474854]
[-23.61090851 541.08056641]
[-36.47539902 533.32244873]
[-48.19100952 523.91888428]
[-58.54866028 513.03759766]
[-67.36351013 500.87280273]
[-74.47824097 487.64160156]
[-79.76589203 473.58016968]
[-83.13208771 458.93939209]
[-84.51676178 443.98059082]
[-83.89521027 428.97067261]
[-81.27850342 414.17755127]
[-76.71336365 399.86523438]
[-70.28124237 386.28909302]
[-62.09694290 373.69146729]
[-52.30651474 362.29711914]
[-41.08468246 352.30941772]
[-28.63171005 343.90664673]
[-15.16983986 337.23870850]
[-0.93931234 332.42459106]
[13.80591202 329.55026245]
[28.80268669 328.66699219]
[43.78337860 329.79052734]
[38.84735489 315.73760986]
[49.27298355 303.83731079]
[52.37709427 289.16201782]
[55.48120499 274.48669434]
[58.58531570 259.81140137]
[45.22746658 253.06474304]
[34.06264114 243.08259583]
[25.85590935 230.54089355]
[21.17172432 216.29130554]
[20.33509636 201.30329895]
[23.40905380 186.59820557]
[30.18992996 173.17965698]
[40.22085953 161.96505737]
[52.82254410 153.72288513]
[67.13925934 149.01998901]
[82.19695282 148.18267822]
[85.30105591 133.50737000]
[88.40516663 118.83206940]
[91.50927734 104.15676880]
[89.71763611 99.22686005]
[90.81566620 93.64405823]
[94.93046570 89.09374237]
[90.66822052 73.85747528]
[101.19036102 63.31547928]
[104.73003387 48.73910522]
[108.26970673 34.16272736]
[111.80937958 19.58635330]
[102.11477661 31.03251648]
[89.81838226 39.62313461]
[75.73577881 44.78842163]
[60.80100632 46.18578720]
[46.00464249 43.72254562]
[32.32807159 37.56207275]
[20.67841339 28.11297417]
[11.82834721 16.00197220]
[6.36486769 2.03234863]
[4.65034628 -12.86934280]
[6.79850197 -27.71472740]
[12.66685486 -41.51916122]
[21.86617661 -53.36705017]
[33.78631210 -62.47256470]
[47.63664246 -68.23176575]
[62.49851990 -70.26267242]
[77.38621521 -68.43057251]
[91.31227112 -62.85699081]
[103.35303497 -53.91160202]
[112.70988464 -42.18771744]
[118.76220703 -28.46294403]
[121.10857391 -13.64759636]
[119.59219360 1.28067541]
[127.63336182 -11.38184929]
[135.67454529 -24.04437447]
[143.71571350 -36.70689774]
[151.75688171 -49.36942291]
[159.79804993 -62.03194809]
[167.83923340 -74.69447327]
[175.88040161 -87.35700226]
[183.92156982 -100.01952362]
[191.96275330 -112.68205261]
[200.00392151 -125.34457397]
[208.04508972 -138.00709534]
[204.81648254 -153.24566650]
[213.15176392 -165.97271729]
[227.69929504 -168.95678711]
[235.74046326 -181.61932373]
[243.78164673 -194.28184509]
[251.82281494 -206.94436646]
[259.86398315 -219.60688782]
[248.20663452 -229.07382202]
[237.72718811 -239.83009338]
[228.56735229 -251.73027039]
[220.85099792 -264.61337280]
[214.68249512 -278.30520630]
[210.14526367 -292.62057495]
[207.30065918 -307.36590576]
[206.18716431 -322.34176636]
[206.81982422 -337.34564209]
[209.19007874 -352.17462158]
[213.26588440 -366.62814331]
[218.99211121 -380.51074219]
[226.29133606 -393.63470459]
[235.06481934 -405.82250977]
[245.19393921 -416.90930176]
[256.54168701 -426.74523926]
[268.95458984 -435.19720459]
[282.26483154 -442.15093994]
[296.29232788 -447.51242065]
[310.84744263 -451.20910645]
[325.73327637 -453.19100952]
[340.74856567 -453.43133545]
[355.69021606 -451.92684937]
[370.35617065 -448.69787598]
[384.54809570 -443.78805542]
[398.07403564 -437.26385498]
[410.75109863 -429.21343994]
[422.40780640 -419.74575806]
[432.88653564 -408.98876953]
[442.04559326 -397.08798218]
[449.76107788 -384.20437622]
[455.92864990 -370.51211548]
[460.46493530 -356.19644165]
[463.30856323 -341.45092773]
[464.42105103 -326.47497559]
[463.78741455 -311.47116089]
[461.41616821 -296.64233398]
[457.33938599 -282.18908691]
[451.61221313 -268.30685425]
[444.31213379 -255.18341064]
[435.53784180 -242.99620056]
[425.40798950 -231.91004944]
[414.05957031 -222.07489014]
[401.64608765 -213.62374878]
[388.33541870 -206.67088318]
[374.30752563 -201.31034851]
[359.75216675 -197.61463928]
[344.86621094 -195.63372803]
[329.85089111 -195.39439392]
[314.90933228 -196.89988708]
[300.24362183 -200.12985229]
[286.05203247 -205.04060364]
[272.52651978 -211.56571960]
[264.48535156 -198.90319824]
[256.44415283 -186.24066162]
[248.40299988 -173.57814026]
[240.36181641 -160.91561890]
[243.84719849 -146.47998047]
[235.87268066 -133.52381897]
[220.70762634 -129.96592712]
[212.66644287 -117.30339813]
[204.62527466 -104.64087677]
[196.58410645 -91.97834778]
[188.54292297 -79.31582642]
[180.50175476 -66.65329742]
[172.46058655 -53.99077606]
[164.41940308 -41.32825089]
[156.37823486 -28.66572571]
[148.33706665 -16.00320244]
[140.29588318 -3.34067655]
[132.25471497 9.32184792]
[126.38575745 23.12602615]
[122.84608459 37.70240021]
[119.30641174 52.27877426]
[115.76673889 66.85514832]
[120.28216553 81.04882050]
[109.50684357 92.63341522]
[106.18458557 107.26087952]
[103.08047485 121.93618011]
[99.97636414 136.61148071]
[96.87225342 151.28678894]
[110.30122375 158.14958191]
[121.48741913 168.24682617]
[129.67234802 180.88577271]
[134.30310059 195.20159912]
[135.06973267 210.21659851]
[131.92597961 224.90692139]
[125.09203339 238.27246094]
[115.03906250 249.40486145]
[102.45682526 257.54928589]
[88.20625305 262.15557861]
[73.26062012 262.91552734]
[70.15650940 277.59082031]
[67.05239868 292.26611328]
[63.94828796 306.94140625]
[68.66228485 322.04403687]
[58.45867920 332.89465332]
[72.61123657 337.93334961]
[85.96589661 344.81350708]
[98.28432465 353.41232300]
[109.34669495 363.57635498]
[118.95556641 375.12420654]
[126.93947601 387.84979248]
[133.15594482 401.52600098]
[137.49400330 415.90881348]
[139.87626648 430.74148560]
[140.26020813 445.75933838]
[138.63896179 460.69436646]
[135.04148865 475.28002930]
[129.53196716 489.25604248]
[122.20872498 502.37295532]
[113.20246124 514.39672852]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 195]
[32 193]
[33 192]
[34 191]
[35 190]
[46 179]
[47 178]
[48 177]
[49 176]
[52 175]
[54 173]
[55 172]
[56 171]
[57 170]
[80 169]
[81 168]
[82 167]
[83 166]
[84 165]
[85 164]
[86 163]
[87 162]
[88 161]
[89 160]
[90 159]
[91 158]
[94 155]
[95 154]
[96 153]
[97 152]
[98 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
