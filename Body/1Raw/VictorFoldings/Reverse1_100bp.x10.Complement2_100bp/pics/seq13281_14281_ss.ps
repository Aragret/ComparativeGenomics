%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCUACUACCUGGGCCUCGUGUAUUUAUCAUACCGAAACUUCUUCCGCACCCAUGUCUACACGUCCUUACGAUCCACACCAACCAACUACGGCUAACAxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[12.58556843 539.66339111]
[-0.65122962 529.06982422]
[5.86401939 513.41778564]
[6.31062555 498.42440796]
[6.75723124 483.43106079]
[7.20383739 468.43771362]
[-0.15109450 455.48571777]
[7.99365807 441.92202759]
[-2.37528324 431.29089355]
[-2.13594723 416.07916260]
[9.08525085 405.27532959]
[9.53185654 390.28198242]
[9.97846222 375.28863525]
[1.91438544 366.27215576]
[2.16375351 353.77728271]
[11.13818932 344.51324463]
[11.80797482 329.52819824]
[12.47775936 314.54318237]
[5.31647921 301.48309326]
[13.66227245 288.04217529]
[14.33205700 273.05715942]
[7.11031246 286.20425415]
[-2.73533797 297.52075195]
[-14.75698185 306.49182129]
[-28.40771675 312.70932007]
[-43.06652069 315.89044189]
[-58.06652069 315.89041138]
[-72.72531891 312.70925903]
[-86.37602997 306.49169922]
[-98.39763641 297.52056885]
[-108.24324799 286.20404053]
[-115.46495056 273.05691528]
[-119.73419189 258.67727661]
[-120.85676575 243.71936035]
[-118.78160095 228.86358643]
[-113.60309601 214.78584290]
[-105.55683899 202.12654114]
[-95.00888824 191.46160889]
[-82.43909454 183.27624512]
[-68.41931152 177.94279480]
[-53.58733749 175.70391846]
[-38.61793137 176.66145325]
[-24.19210243 180.77186584]
[-10.96612644 187.84812927]
[0.45830184 197.56834412]
[9.56144619 209.49028015]
[15.92917538 223.07159424]
[19.27180099 237.69441223]
[19.43683815 252.69781494]
[25.91633415 239.16946411]
[32.39582825 225.64112854]
[38.87532425 212.11277771]
[45.35482025 198.58442688]
[51.83431625 185.05609131]
[58.31381226 171.52774048]
[64.79331207 157.99938965]
[62.50376892 140.60040283]
[77.78221130 130.32174683]
[84.05957031 116.69843292]
[90.33693695 103.07511902]
[90.58193207 95.01828766]
[96.81050873 89.29677582]
[103.29000854 75.76843262]
[88.81935120 79.71813965]
[75.72634888 72.39876556]
[71.51126099 58.00317764]
[78.58868408 44.77781677]
[92.90435028 40.29877853]
[106.25759125 47.13185501]
[110.99913025 61.36180496]
[118.65972900 48.46547699]
[126.32032776 35.56914902]
[126.71598053 19.75289154]
[139.86805725 12.76204395]
[141.56024170 3.78572154]
[147.73994446 -0.26805499]
[155.59169006 -13.04889774]
[156.22277832 -28.85751152]
[169.47749329 -35.65177155]
[177.32925415 -48.43261337]
[185.18099976 -61.21345520]
[193.03276062 -73.99430084]
[200.88452148 -86.77513885]
[202.71014404 -95.72527313]
[208.94952393 -99.68659210]
[216.99069214 -112.34912109]
[225.03186035 -125.01164246]
[233.07304382 -137.67416382]
[241.11421204 -150.33670044]
[243.07289124 -159.25865173]
[249.37054443 -163.12664795]
[257.59936523 -175.66804504]
[245.87460327 -185.04165649]
[235.07913208 -195.47200012]
[225.30783081 -206.86744690]
[216.64654541 -219.12782288]
[209.17143250 -232.14538574]
[202.94815063 -245.80574036]
[198.03141785 -259.98883057]
[194.46441650 -274.57000732]
[192.27851868 -289.42117310]
[191.49290466 -304.41174316]
[192.11451721 -319.41000366]
[194.13786316 -334.28414917]
[197.54518127 -348.90347290]
[202.30651855 -363.13949585]
[208.38002014 -376.86709595]
[215.71232605 -389.96563721]
[224.23899841 -402.32000732]
[233.88508606 -413.82162476]
[244.56584167 -424.36941528]
[256.18737793 -433.87069702]
[268.64758301 -442.24197388]
[281.83694458 -449.40963745]
[295.63952637 -455.31072998]
[309.93405151 -459.89337158]
[324.59490967 -463.11730957]
[339.49325562 -464.95419312]
[354.49813843 -465.38790894]
[369.47769165 -464.41461182]
[384.30029297 -462.04284668]
[398.83563232 -458.29351807]
[412.95605469 -453.19949341]
[426.53738403 -446.80563354]
[439.46029663 -439.16802979]
[451.61123657 -430.35388184]
[462.88339233 -420.44061279]
[473.17770386 -409.51535034]
[482.40371704 -397.67410278]
[490.48034668 -385.02093506]
[497.33663940 -371.66705322]
[502.91229248 -357.72982788]
[507.15832520 -343.33172607]
[510.03741455 -328.59924316]
[511.52429199 -313.66192627]
[511.60586548 -298.65100098]
[510.28140259 -283.69839478]
[507.56256104 -268.93554688]
[503.47323608 -254.49212646]
[498.04937744 -240.49513245]
[491.33862305 -227.06753540]
[483.39996338 -214.32734680]
[474.30316162 -202.38655090]
[464.12817383 -191.35005188]
[452.96441650 -181.31488037]
[440.90997314 -172.36920166]
[428.07083130 -164.59162903]
[414.55978394 -158.05053711]
[400.49557495 -152.80339050]
[386.00180054 -148.89630127]
[371.20587158 -146.36361694]
[356.23776245 -145.22760010]
[341.22906494 -145.49821472]
[326.31164551 -147.17309570]
[311.61660767 -150.23751831]
[297.27313232 -154.66456604]
[283.40722656 -160.41531372]
[270.14074707 -167.43923950]
[261.91195679 -154.89782715]
[253.77673340 -142.29551697]
[245.73556519 -129.63299561]
[237.69439697 -116.97047424]
[229.65321350 -104.30794525]
[221.61204529 -91.64542389]
[213.66535950 -78.92338562]
[205.81359863 -66.14253998]
[197.96185303 -53.36169815]
[190.11009216 -40.58085632]
[182.25833130 -27.80001450]
[182.18885803 -12.90557098]
[168.37254333 -5.19714212]
[160.52078247 7.58370066]
[152.76438904 20.42264175]
[152.91667175 35.31646729]
[139.21665955 43.22974777]
[131.55606079 56.12607574]
[123.89545441 69.02239990]
[116.81835175 82.24792480]
[110.33885956 95.77627563]
[103.96025085 109.35247803]
[97.68289185 122.97579956]
[91.40553284 136.59910583]
[95.13172913 148.94732666]
[89.62284088 160.16497803]
[78.32165527 164.47889709]
[71.84215546 178.00723267]
[65.36266327 191.53558350]
[58.88316727 205.06393433]
[52.40367126 218.59226990]
[45.92417526 232.12062073]
[39.44467926 245.64895630]
[32.96518326 259.17730713]
[29.31709671 273.72692871]
[28.64731026 288.71197510]
[35.76068497 302.84387207]
[27.46279907 315.21295166]
[26.79301262 330.19799805]
[26.12322807 345.18304443]
[34.98601913 361.32403564]
[24.97181320 375.73522949]
[24.52520561 390.72860718]
[24.07859993 405.72195435]
[34.63684845 417.17449951]
[33.97034073 432.37353516]
[22.98700905 442.36862183]
[30.30999565 456.39306641]
[22.19718742 468.88430786]
[21.75058174 483.87765503]
[21.30397606 498.87100220]
[20.85736847 513.86437988]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 210]
[4 209]
[5 208]
[6 207]
[8 205]
[11 202]
[12 201]
[13 200]
[16 198]
[17 197]
[18 196]
[20 194]
[21 193]
[49 192]
[50 191]
[51 190]
[52 189]
[53 188]
[54 187]
[55 186]
[56 185]
[58 182]
[59 181]
[60 180]
[62 179]
[63 178]
[70 177]
[71 176]
[72 175]
[74 173]
[76 172]
[77 171]
[79 169]
[80 168]
[81 167]
[82 166]
[83 165]
[85 164]
[86 163]
[87 162]
[88 161]
[89 160]
[91 159]
[92 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
