%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[116.00280762 336.16513062]
[110.67260742 350.19772339]
[104.07037354 363.67861938]
[96.25242615 376.49285889]
[87.28546906 388.53106689]
[77.24600220 399.69052124]
[66.21969604 409.87606812]
[54.30060577 419.00076294]
[41.59043503 426.98675537]
[28.19762230 433.76593018]
[14.23643112 439.28042603]
[-0.17402166 443.48324585]
[-14.91079044 446.33847046]
[-29.84814262 447.82174683]
[-44.85863495 447.92044067]
[-59.81420135 446.63372803]
[-74.58724213 443.97256470]
[-89.05171967 439.95962524]
[-103.08422852 434.62921143]
[-116.56503296 428.02673340]
[-129.37911987 420.20855713]
[-141.41717529 411.24142456]
[-152.57647705 401.20175171]
[-162.76182556 390.17529297]
[-171.88632202 378.25604248]
[-179.87211609 365.54574585]
[-186.65106201 352.15280151]
[-192.16534424 338.19152832]
[-196.36790466 323.78100586]
[-199.22286987 309.04418945]
[-200.70591736 294.10681152]
[-200.80436707 279.09631348]
[-199.51739502 264.14077759]
[-196.85597229 249.36778259]
[-192.84280396 234.90336609]
[-187.51214600 220.87095642]
[-180.90945435 207.39025879]
[-173.09107971 194.57629395]
[-164.12371826 182.53839111]
[-154.08389282 171.37925720]
[-143.05723572 161.19409180]
[-131.13784790 152.06979370]
[-118.42740631 144.08421326]
[-105.03437042 137.30548096]
[-91.07299805 131.79144287]
[-76.66240692 127.58912659]
[-61.92554092 124.73439789]
[-46.98814011 123.25160217]
[-31.97764206 123.15339661]
[-17.02211761 124.44062042]
[-2.24916410 127.10229492]
[12.21517944 131.11569214]
[26.24750519 136.44659424]
[39.72809219 143.04951477]
[52.54192352 150.86810303]
[61.50262070 138.83871460]
[70.46331787 126.80934143]
[79.42401123 114.77996063]
[88.38470459 102.75058746]
[74.64521790 108.76942444]
[59.66260147 109.49134827]
[45.40807724 104.82138824]
[33.75707626 95.37394714]
[26.24248314 82.39199829]
[23.85297775 67.58354950]
[26.90293694 52.89689636]
[34.99108887 40.26432419]
[47.05329514 31.34786987]
[61.50256348 27.32064056]
[76.43785095 28.71249008]
[89.89415741 35.34029388]
[100.10107422 46.33205414]
[105.71571350 60.24161530]
[105.99936676 75.23893738]
[100.91351318 89.35291290]
[112.31597137 79.60694122]
[123.71843719 69.86097717]
[135.12089539 60.11501312]
[146.52336121 50.36904526]
[157.92582703 40.62308121]
[169.32829285 30.87711525]
[160.25912476 18.92394066]
[151.90032959 6.46366167]
[144.28016663 -6.46155834]
[137.42445374 -19.80798531]
[131.35635376 -33.53045654]
[126.09641266 -47.58254242]
[121.66242981 -61.91669083]
[118.06940460 -76.48440552]
[115.32949829 -91.23638916]
[113.45198822 -106.12272644]
[112.44321442 -121.09304047]
[112.30659485 -136.09669495]
[113.04259491 -151.08290100]
[114.64872742 -166.00094604]
[117.11955261 -180.80038452]
[120.44670105 -195.43110657]
[124.61892700 -209.84361267]
[129.62211609 -223.98915100]
[135.43933105 -237.81985474]
[142.05088806 -251.28890991]
[149.43441772 -264.35073853]
[157.56492615 -276.96115112]
[166.41491699 -289.07751465]
[175.95443726 -300.65875244]
[186.15121460 -311.66574097]
[196.97074890 -322.06121826]
[208.37641907 -331.80999756]
[220.32963562 -340.87911987]
[232.78994751 -349.23785400]
[245.71519470 -356.85797119]
[259.06164551 -363.71365356]
[272.78414917 -369.78167725]
[286.83624268 -375.04156494]
[301.17041016 -379.47549438]
[315.73815918 -383.06845093]
[330.49014282 -385.80828857]
[345.37649536 -387.68572998]
[360.34680176 -388.69445801]
[375.35046387 -388.83099365]
[390.33666992 -388.09494019]
[405.25469971 -386.48876953]
[420.05413818 -384.01788330]
[434.68484497 -380.69064331]
[449.09732056 -376.51837158]
[463.24285889 -371.51513672]
[477.07351685 -365.69784546]
[490.54254150 -359.08624268]
[503.60433960 -351.70266724]
[516.21472168 -343.57208252]
[528.33105469 -334.72204590]
[539.91229248 -325.18249512]
[550.91918945 -314.98565674]
[561.31463623 -304.16607666]
[571.06335449 -292.76037598]
[580.13244629 -280.80712891]
[588.49114990 -268.34677124]
[596.11120605 -255.42149353]
[602.96679688 -242.07501221]
[609.03479004 -228.35249329]
[614.29461670 -214.30036926]
[618.72845459 -199.96617126]
[622.32135010 -185.39843750]
[625.06115723 -170.64642334]
[626.93853760 -155.76008606]
[627.94720459 -140.78974915]
[628.08367920 -125.78610229]
[627.34753418 -110.79990387]
[625.74133301 -95.88185883]
[623.27038574 -81.08245087]
[619.94311523 -66.45175171]
[615.77075195 -52.03927612]
[610.76745605 -37.89377975]
[604.95013428 -24.06313324]
[598.33843994 -10.59413528]
[590.95483398 2.46764064]
[582.82421875 15.07799625]
[573.97412109 27.19426346]
[564.43444824 38.77544022]
[554.23760986 49.78234482]
[543.41796875 60.17773056]
[532.01226807 69.92642212]
[520.05895996 78.99543762]
[507.59857178 87.35408020]
[494.67327881 94.97407532]
[481.32675171 101.82963562]
[467.60421753 107.89756012]
[453.55206299 113.15732574]
[439.21783447 117.59113312]
[424.65008545 121.18397522]
[409.89807129 123.92369080]
[395.01171875 125.80102539]
[380.04138184 126.80960846]
[365.03775024 126.94603729]
[350.05154419 126.20985413]
[335.13351440 124.60353851]
[320.33410645 122.13253021]
[305.70343018 118.80519867]
[291.29095459 114.63278961]
[277.14547729 109.62943268]
[263.31484985 103.81204224]
[249.84588623 97.20032501]
[236.78414917 89.81663513]
[224.17382812 81.68595886]
[212.05758667 72.83581543]
[200.47645569 63.29614639]
[189.46958923 53.09923553]
[179.07424927 42.27957916]
[167.67178345 52.02554321]
[156.26933289 61.77151108]
[144.86686707 71.51747894]
[133.46440125 81.26344299]
[122.06194305 91.00940704]
[110.65947723 100.75537109]
[100.41408539 111.71128082]
[91.45339203 123.74066162]
[82.49269104 135.77003479]
[73.53199768 147.79940796]
[64.57130432 159.82879639]
[75.73094177 169.86807251]
[85.91665649 180.89421082]
[95.04154968 192.81314087]
[103.02776337 205.52317810]
[109.80715942 218.91587830]
[115.32189941 232.87698364]
[119.52493286 247.28736877]
[122.38040161 262.02407837]
[123.86394501 276.96142578]
[123.96289825 291.97189331]
[122.67642212 306.92749023]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[55 199]
[56 198]
[57 197]
[58 196]
[59 195]
[75 194]
[76 193]
[77 192]
[78 191]
[79 190]
[80 189]
[81 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
