%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCCCCCAAACCUACUCUUACCGACAAUGAUGCUCCCGAUACACCGACUAACUUCUCAUACGUUACUCGCUAAAAUCCAGACAAACAGCAUCCGUCUAxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[217.27299500 501.60345459]
[212.23606873 487.47442627]
[207.19915771 473.34539795]
[202.16224670 459.21636963]
[199.15045166 457.38293457]
[196.87704468 453.99963379]
[196.06082153 449.42941284]
[197.23129272 444.34246826]
[192.83029175 430.00259399]
[188.42929077 415.66275024]
[184.02828979 401.32290649]
[172.89733887 391.42590332]
[176.24514771 375.96295166]
[165.11418152 366.06591797]
[168.46200562 350.60299683]
[164.06100464 336.26312256]
[159.66000366 321.92327881]
[155.25900269 307.58343506]
[150.85800171 293.24359131]
[146.45701599 278.90374756]
[135.92079163 272.96112061]
[132.13688660 261.05038452]
[137.65361023 249.39154053]
[133.46659851 234.98776245]
[129.17247009 220.61555481]
[124.77147675 206.27571106]
[120.37047577 191.93585205]
[107.13246918 185.20602417]
[102.46495056 170.72607422]
[109.61357880 156.88645935]
[105.21257782 142.54661560]
[100.81157684 128.20677185]
[96.41058350 113.86692047]
[86.30645752 104.20264435]
[89.24957275 90.53408051]
[84.84857178 76.19422913]
[80.44757843 61.85438538]
[74.57861328 48.05020523]
[67.30538177 34.93151093]
[60.03215408 21.81281853]
[52.75892639 8.69412518]
[37.83251953 4.23989296]
[30.64331245 -9.16793823]
[34.98172760 -23.37053490]
[27.70849800 -36.48922729]
[20.43526840 -49.60792160]
[13.16203976 -62.72661591]
[13.78763485 -47.73966599]
[10.56489182 -33.08996201]
[3.70756364 -19.74915695]
[-6.32952881 -8.60210419]
[-18.88066101 -0.38814673]
[-33.11336136 4.34791327]
[-48.08362198 5.29194975]
[-62.79852676 2.38134837]
[-76.28208160 -4.19084120]
[-87.63998413 -13.98870850]
[-96.11888885 -26.36239815]
[-101.15642548 -40.49120712]
[-102.41847229 -55.43801880]
[-99.82132721 -70.21147156]
[-93.53725433 -83.83168793]
[-83.98303223 -95.39529419]
[-71.79238129 -104.13531494]
[-57.77384949 -109.47205353]
[-42.85724258 -111.05155182]
[-28.03192139 -108.76903534]
[-14.28119850 -102.77590179]
[-2.51710939 -93.46965790]
[6.48260021 -81.46308136]
[3.81680465 -96.22429657]
[1.15100908 -110.98551178]
[-1.51478648 -125.74673462]
[-17.47925568 -135.94721985]
[-20.86014938 -154.26339722]
[-9.96924877 -168.97747803]
[-13.07335949 -183.65277100]
[-16.17746925 -198.32807922]
[-19.19286156 -201.45240784]
[-20.88683510 -205.01539612]
[-21.28374100 -208.54780579]
[-20.55784035 -211.63644409]
[-19.00200653 -213.96829224]
[-21.22712326 -228.80233765]
[-23.56261063 -243.61940002]
[-26.00833702 -258.41867065]
[-28.45406532 -273.21795654]
[-30.89979172 -288.01721191]
[-33.34552002 -302.81649780]
[-48.35302734 -304.45275879]
[-62.36212540 -310.07836914]
[-74.33325195 -319.27590942]
[-83.37806702 -331.36285400]
[-88.82538605 -345.44223022]
[-90.27098083 -360.46929932]
[-87.60758209 -375.32894897]
[-81.03282166 -388.91845703]
[-71.03459930 -400.22943115]
[-58.35485458 -408.42251587]
[-43.93449783 -412.88970947]
[-28.84361839 -413.29956055]
[-14.20206070 -409.62158203]
[-1.09632659 -402.12878418]
[9.50105286 -391.37710571]
[16.80368042 -378.16445923]
[20.26965523 -363.47128296]
[19.64177704 -348.38790894]
[14.96663761 -334.03359985]
[6.59116507 -321.47360229]
[-4.86312532 -311.63989258]
[-18.54624939 -305.26220703]
[-16.10052109 -290.46295166]
[-13.65479469 -275.66366577]
[-11.20906734 -260.86441040]
[-8.76333904 -246.06512451]
[-4.57130480 -239.97837830]
[-6.39307976 -231.02745056]
[-4.16796255 -216.19340515]
[-1.50216687 -201.43218994]
[1.60194325 -186.75688171]
[4.70605326 -172.08158875]
[15.38985825 -168.07876587]
[22.89236069 -159.32501221]
[25.26185226 -147.91978455]
[21.79642487 -136.67292786]
[13.24643040 -128.41252136]
[15.91222668 -113.65130615]
[18.57802200 -98.89009094]
[21.24381638 -84.12887573]
[26.28073311 -69.99984741]
[33.55396271 -56.88115311]
[40.82719421 -43.76245880]
[48.10042191 -30.64376450]
[62.44455338 -26.79909134]
[70.00752258 -13.59848118]
[65.87761688 1.42089522]
[73.15084839 14.53958893]
[80.42407990 27.65828323]
[87.69731140 40.77697754]
[88.09598541 25.78227615]
[94.13226318 12.05043983]
[104.91069794 1.61850441]
[118.83238220 -3.96601462]
[133.83210754 -3.87468696]
[147.68475342 1.87893963]
[158.33535767 12.44134808]
[164.20397949 26.24567032]
[164.42004395 41.24411392]
[158.95147705 55.21175003]
[148.60954285 66.07656097]
[134.92837524 72.22682190]
[119.93750000 72.75017548]
[105.86074066 67.56898499]
[94.78742218 57.45338440]
[99.18842316 71.79323578]
[103.58941650 86.13307953]
[113.69354248 95.79735565]
[110.75042725 109.46591949]
[115.15142822 123.80577087]
[119.55242157 138.14561462]
[123.95342255 152.48545837]
[137.63496399 159.93215942]
[141.89392090 174.53749084]
[134.71032715 187.53486633]
[139.11132812 201.87471008]
[143.51231384 216.21455383]
[149.02185059 223.50035095]
[147.87037659 230.80075073]
[152.05738831 245.20452881]
[165.64205933 257.63589478]
[160.79685974 274.50274658]
[165.19786072 288.84259033]
[169.59884644 303.18243408]
[173.99984741 317.52227783]
[178.40084839 331.86212158]
[182.80184937 346.20199585]
[194.24758911 357.12469482]
[190.58499146 371.56195068]
[202.03074646 382.48464966]
[198.36814880 396.92190552]
[202.76913452 411.26174927]
[207.17013550 425.60162354]
[211.57113647 439.94146729]
[216.29127502 454.17944336]
[221.32818604 468.30847168]
[226.36509705 482.43750000]
[231.40202332 496.56652832]
[246.39991760 495.04132080]
[261.32693481 497.15032959]
[275.31518555 502.77099609]
[287.55145264 511.57653809]
[297.32434082 523.05493164]
[304.06561279 536.53894043]
[307.38342285 551.24462891]
[307.08477783 566.31689453]
[303.18713379 580.87957764]
[295.91705322 594.08599854]
[285.69717407 605.16833496]
[273.12173462 613.48223877]
[258.92181396 618.54443359]
[243.92298889 620.06054688]
[228.99726868 617.94250488]
[215.01242065 612.31335449]
[202.78149414 603.50042725]
[193.01557922 592.01605225]
[186.28245544 578.52795410]
[182.97360229 563.82031250]
[183.28135681 548.74822998]
[187.18783569 534.18786621]
[194.46594238 520.98590088]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 187]
[2 186]
[3 185]
[4 184]
[8 183]
[9 182]
[10 181]
[11 180]
[13 178]
[15 176]
[16 175]
[17 174]
[18 173]
[19 172]
[20 171]
[23 169]
[24 168]
[25 166]
[26 165]
[27 164]
[30 161]
[31 160]
[32 159]
[33 158]
[35 156]
[36 155]
[37 154]
[38 139]
[39 138]
[40 137]
[41 136]
[44 133]
[45 132]
[46 131]
[47 130]
[70 129]
[71 128]
[72 127]
[73 126]
[76 121]
[77 120]
[78 119]
[83 118]
[84 117]
[85 115]
[86 114]
[87 113]
[88 112]
[89 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
