%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[148.88998413 534.41577148]
[148.88998413 519.41577148]
[141.15269470 506.68847656]
[148.88998413 492.88830566]
[148.88998413 477.88830566]
[148.55500793 462.89205933]
[147.88522339 447.90701294]
[147.21543884 432.92196655]
[146.54565430 417.93695068]
[145.87586975 402.95190430]
[145.20608521 387.96685791]
[136.90820312 375.59777832]
[144.02157593 361.46588135]
[142.23910522 346.57214355]
[139.35383606 331.85226440]
[136.46856689 317.13238525]
[124.23863983 304.54681396]
[130.35105896 287.17675781]
[120.14746094 276.32614136]
[124.86145782 261.22354126]
[121.75734711 246.54821777]
[118.65323639 231.87292480]
[115.54912567 217.19761658]
[105.58509064 210.33871460]
[102.87890625 198.13787842]
[109.41378021 187.01770020]
[106.52850342 172.29782104]
[103.64323425 157.57792664]
[100.75795746 142.85803223]
[97.87268829 128.13813782]
[94.98741913 113.41825104]
[85.94354248 102.75523376]
[90.29269409 89.46702576]
[87.40741730 74.74713135]
[84.08515930 60.11967087]
[80.32885742 45.59761429]
[76.57255554 31.07555389]
[72.81626129 16.55349541]
[69.05995941 2.03143525]
[65.30365753 -12.49062347]
[61.54735565 -27.01268387]
[50.85008240 -34.21900558]
[48.02041626 -46.39179230]
[54.04405212 -56.88190079]
[50.50437927 -71.45827484]
[37.40151978 -75.73680878]
[28.19679070 -85.85073090]
[25.21537399 -99.08631897]
[29.13168335 -111.96291351]
[38.82044601 -121.14822388]
[35.49818802 -135.77568054]
[32.17593002 -150.40313721]
[28.52784157 -164.95275879]
[17.41237640 -176.21141052]
[21.50320244 -190.53321838]
[17.53110695 -204.99774170]
[6.72772551 -212.04400635]
[3.71713901 -224.17330933]
[9.58392715 -234.75193787]
[5.82762623 -249.27400208]
[2.07132578 -263.79605103]
[-1.68497491 -278.31811523]
[-12.63158321 -289.74099731]
[-8.32797909 -304.00033569]
[-12.08427906 -318.52236938]
[-26.91269493 -316.18280029]
[-41.89768600 -315.28530884]
[-56.89934540 -315.83828735]
[-71.77759552 -317.83657837]
[-86.39352417 -321.26150513]
[-100.61066437 -326.08111572]
[-114.29626465 -332.25036621]
[-127.32254791 -339.71170044]
[-139.56788635 -348.39544678]
[-150.91795349 -358.22048950]
[-161.26675415 -369.09512329]
[-170.51768494 -380.91781616]
[-178.58435059 -393.57815552]
[-185.39144897 -406.95794678]
[-190.87542725 -420.93225098]
[-194.98506165 -435.37063599]
[-197.68197632 -450.13824463]
[-198.94102478 -465.09719849]
[-198.75042725 -480.10781860]
[-197.11195374 -495.02999878]
[-194.04092407 -509.72433472]
[-189.56600952 -524.05371094]
[-183.72897339 -537.88427734]
[-176.58433533 -551.08691406]
[-168.19880676 -563.53833008]
[-158.65066528 -575.12231445]
[-148.02906799 -585.73071289]
[-136.43319702 -595.26440430]
[-123.97131348 -603.63439941]
[-110.75977325 -610.76257324]
[-96.92193604 -616.58233643]
[-82.58700562 -621.03936768]
[-67.88882446 -624.09210205]
[-52.96463394 -625.71191406]
[-37.95376968 -625.88385010]
[-22.99639702 -624.60614014]
[-8.23216820 -621.89080811]
[6.20106220 -617.76318359]
[20.16853333 -612.26177979]
[33.53982925 -605.43798828]
[46.19010544 -597.35552979]
[58.00124359 -588.08990479]
[68.86296844 -577.72753906]
[78.67385864 -566.36523438]
[87.34231567 -554.10906982]
[94.78739929 -541.07348633]
[100.93959808 -527.38018799]
[105.74146271 -513.15704346]
[109.14816284 -498.53686523]
[111.12789154 -483.65615845]
[111.66216278 -468.65380859]
[110.74598694 -453.66995239]
[108.38792419 -438.84445190]
[104.60997772 -424.31576538]
[99.44744110 -410.21954346]
[92.94850159 -396.68737793]
[85.17384338 -383.84564209]
[76.19606018 -371.81423950]
[66.09898376 -360.70547485]
[54.97687531 -350.62310791]
[42.93358994 -341.66125488]
[30.08157539 -333.90359497]
[16.54082870 -327.42257690]
[2.43777990 -322.27868652]
[6.19408035 -307.75662231]
[16.87201309 -297.37246704]
[12.83708477 -282.07443237]
[16.59338570 -267.55236816]
[20.34968567 -253.03030396]
[24.10598564 -238.50823975]
[37.06333160 -226.67294312]
[31.99563026 -208.96984863]
[35.96772766 -194.50532532]
[46.79907990 -184.28128052]
[42.99236298 -168.92486572]
[45.85945511 -166.87251282]
[47.87491989 -163.32949829]
[48.34896088 -158.71121216]
[46.80338669 -153.72540283]
[50.12564850 -139.09794617]
[53.44790649 -124.47048187]
[68.73521423 -118.48920441]
[77.53317261 -104.43368530]
[76.20657349 -87.73813629]
[65.08075714 -74.99794769]
[68.62042999 -60.42157364]
[81.40012360 -48.39467621]
[76.06941223 -30.76898384]
[79.82571411 -16.24692535]
[83.58201599 -1.72486532]
[87.33831787 12.79719353]
[91.09461975 27.31925392]
[94.85092163 41.84131241]
[98.60722351 56.36337280]
[100.95139313 57.90058136]
[102.82789612 60.45896912]
[103.84473419 63.86505508]
[103.67987823 67.80680084]
[102.12731171 71.86186218]
[105.01258087 86.58174896]
[114.05645752 97.24476624]
[109.70730591 110.53297424]
[112.59258270 125.25286865]
[115.47785187 139.97276306]
[118.36312866 154.69265747]
[121.24839783 169.41253662]
[124.13366699 184.13243103]
[136.55508423 197.72618103]
[130.22442627 214.09350586]
[133.32853699 228.76881409]
[136.43264771 243.44412231]
[139.53675842 258.11941528]
[149.96238708 270.01971436]
[145.02636719 284.07263184]
[155.39118958 291.74942017]
[157.67448425 304.03643799]
[151.18846130 314.24710083]
[154.07373047 328.96697998]
[156.95899963 343.68688965]
[163.31343079 330.09933472]
[175.55343628 321.42855835]
[190.47949219 319.94107056]
[204.18998718 326.02569580]
[213.10101318 338.09191895]
[214.88325500 352.98565674]
[209.07083130 366.81372070]
[197.18310547 375.96151733]
[182.32749939 378.03781128]
[168.38723755 372.49984741]
[159.00660706 360.79608154]
[167.35240173 374.23699951]
[160.19113159 387.29708862]
[160.86091614 402.28210449]
[161.53070068 417.26715088]
[162.20048523 432.25219727]
[162.87026978 447.23724365]
[163.54005432 462.22225952]
[166.35072327 466.62081909]
[167.11656189 471.19976807]
[166.11125183 475.14999390]
[163.88998413 477.88830566]
[163.88998413 492.88830566]
[171.62728882 506.68847656]
[163.88998413 519.41577148]
[163.88998413 534.41577148]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 210]
[2 209]
[4 207]
[5 206]
[6 202]
[7 201]
[8 200]
[9 199]
[10 198]
[11 197]
[13 195]
[14 184]
[15 183]
[16 182]
[18 179]
[20 177]
[21 176]
[22 175]
[23 174]
[26 172]
[27 171]
[28 170]
[29 169]
[30 168]
[31 167]
[33 165]
[34 164]
[35 159]
[36 158]
[37 157]
[38 156]
[39 155]
[40 154]
[41 153]
[44 151]
[45 150]
[50 146]
[51 145]
[52 144]
[53 140]
[55 138]
[56 137]
[59 135]
[60 134]
[61 133]
[62 132]
[64 130]
[65 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
