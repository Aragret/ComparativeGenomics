%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[169.08489990 656.62683105]
[155.94943237 649.37725830]
[143.19802856 641.47161865]
[130.86338806 632.93035889]
[118.97719574 623.77526855]
[107.56995392 614.02990723]
[96.67095184 603.71929932]
[86.30815887 592.86987305]
[76.50818634 581.50952148]
[67.29618835 569.66741943]
[58.69580078 557.37390137]
[50.72911072 544.66058350]
[43.41656876 531.56005859]
[36.77694321 518.10595703]
[30.82728004 504.33285522]
[25.58285141 490.27606201]
[21.05711937 475.97171021]
[17.26169968 461.45648193]
[14.20633793 446.76763916]
[11.89887619 431.94290161]
[10.34523773 417.02035522]
[9.54941082 402.03823853]
[9.51343822 387.03503418]
[10.23741150 372.04928589]
[11.71947384 357.11941528]
[13.95582008 342.28381348]
[16.94070816 327.58047485]
[20.66647911 313.04721069]
[25.12356567 298.72131348]
[30.30052757 284.63955688]
[36.18407440 270.83807373]
[42.75910568 257.35229492]
[50.00874329 244.21687317]
[57.91437531 231.46546936]
[66.45571136 219.13085938]
[75.61082458 207.24468994]
[85.35620880 195.83747864]
[95.66684723 184.93850708]
[106.51628876 174.57574463]
[117.87666321 164.77580261]
[129.71881104 155.56382751]
[121.12025452 143.27299500]
[112.52169037 130.98216248]
[103.92312622 118.69131470]
[89.67341614 116.06604767]
[81.36747742 104.19348907]
[83.78603363 89.90724945]
[75.18747711 77.61640930]
[66.58891296 65.32556915]
[57.99034500 53.03473282]
[49.39178085 40.74389267]
[36.36106873 48.19478607]
[22.70679283 54.42984772]
[8.54209995 59.39741135]
[-6.01563501 63.05632019]
[-20.84577942 65.37624359]
[-35.82544327 66.33797455]
[-50.83049774 65.93352509]
[-65.73660278 64.16625977]
[-80.42024231 61.05081177]
[-94.75973511 56.61301041]
[-108.63626862 50.88961792]
[-121.93484497 43.92807007]
[-134.54525757 35.78604507]
[-146.36303711 26.53101921]
[-157.29022217 16.23967934]
[-167.23629761 4.99730635]
[-176.11882019 -7.10294008]
[-183.86419678 -19.96079254]
[-190.40824890 -33.46970367]
[-195.69674683 -47.51773071]
[-199.68585205 -61.98846817]
[-202.34252930 -76.76200104]
[-203.64476013 -91.71591187]
[-203.58174133 -106.72628784]
[-202.15400696 -121.66873932]
[-199.37338257 -136.41944885]
[-195.26292419 -150.85617065]
[-189.85665894 -164.85931396]
[-183.19941711 -178.31280518]
[-175.34635925 -191.10516357]
[-166.36254883 -203.13040161]
[-156.32244873 -214.28887939]
[-145.30923462 -224.48811340]
[-133.41416931 -233.64358521]
[-120.73583221 -241.67944336]
[-107.37928009 -248.52909851]
[-93.45518494 -254.13577271]
[-79.07893372 -258.45303345]
[-64.36965179 -261.44506836]
[-49.44923782 -263.08712769]
[-34.44131470 -263.36557007]
[-19.47025299 -262.27810669]
[-4.66011047 -259.83377075]
[9.86639118 -256.05276489]
[23.98887634 -250.96643066]
[37.59032059 -244.61694336]
[50.55801773 -237.05691528]
[62.78450775 -228.34898376]
[74.16847229 -218.56529236]
[84.61559296 -207.78692627]
[94.03928375 -196.10321045]
[102.36146545 -183.61096191]
[109.51316833 -170.41366577]
[115.43513489 -156.62071228]
[120.07829285 -142.34638977]
[123.40416718 -127.70898438]
[125.38520050 -112.82977295]
[126.00496674 -97.83206940]
[125.25833893 -82.84014893]
[123.15150452 -67.97823334]
[119.70191956 -53.36948395]
[114.93817139 -39.13494873]
[108.89972687 -25.39258957]
[101.63663483 -12.25627804]
[93.20906830 0.16513172]
[83.68687439 11.76870918]
[73.14894867 22.45830154]
[61.68262100 32.14533234]
[70.28118134 44.43616867]
[78.87974548 56.72700500]
[87.47830963 69.01784515]
[96.07687378 81.30868530]
[110.32658386 83.93395233]
[118.63252258 95.80651093]
[116.21396637 110.09275055]
[124.81252289 122.38359070]
[133.41108704 134.67442322]
[142.00965881 146.96527100]
[154.72293091 138.99847412]
[167.82339478 131.68582153]
[181.27742004 125.04608917]
[195.05047607 119.09631348]
[209.10722351 113.85176849]
[223.41154480 109.32592010]
[237.92674255 105.53038025]
[252.61553955 102.47489929]
[267.44024658 100.16731262]
[282.36282349 98.61355591]
[297.34494019 97.81760406]
[312.34811401 97.78150940]
[327.33389282 98.50536346]
[342.26373291 99.98729706]
[357.09939575 102.22352600]
[371.80273438 105.20829010]
[386.33602905 108.93394470]
[400.66195679 113.39091492]
[414.74377441 118.56775665]
[428.54528809 124.45119476]
[442.03112793 131.02612305]
[455.16662598 138.27565002]
[467.91809082 146.18116760]
[480.25274658 154.72241211]
[492.13900757 163.87742615]
[503.54629517 173.62271118]
[514.44537354 183.93327332]
[524.80822754 194.78262329]
[534.60821533 206.14291382]
[543.82031250 217.98498535]
[552.42077637 230.27845764]
[560.38751221 242.99174500]
[567.70013428 256.09222412]
[574.33984375 269.54629517]
[580.28955078 283.31936646]
[585.53405762 297.37609863]
[590.05987549 311.68045044]
[593.85540771 326.19564819]
[596.91082764 340.88446045]
[599.21838379 355.70919800]
[600.77209473 370.63174438]
[601.56799316 385.61386108]
[601.60406494 400.61706543]
[600.88018799 415.60281372]
[599.39819336 430.53268433]
[597.16192627 445.36831665]
[594.17712402 460.07165527]
[590.45141602 474.60491943]
[585.99438477 488.93084717]
[580.81750488 503.01263428]
[574.93402100 516.81414795]
[568.35906982 530.29998779]
[561.10949707 543.43542480]
[553.20397949 556.18688965]
[544.66271973 568.52154541]
[535.50762939 580.40777588]
[525.76232910 591.81500244]
[515.45172119 602.71405029]
[504.60235596 613.07690430]
[493.24203491 622.87689209]
[481.39993286 632.08892822]
[469.10644531 640.68933105]
[456.39312744 648.65606689]
[443.29263306 655.96862793]
[429.83856201 662.60827637]
[416.06546021 668.55798340]
[402.00869751 673.80249023]
[387.70434570 678.32824707]
[373.18914795 682.12371826]
[358.50030518 685.17907715]
[343.67559814 687.48657227]
[328.75302124 689.04028320]
[313.77090454 689.83612061]
[298.76773071 689.87213135]
[283.78195190 689.14825439]
[268.85211182 687.66619873]
[254.01646423 685.42993164]
[239.31314087 682.44506836]
[224.77987671 678.71929932]
[210.45396423 674.26226807]
[196.37217712 669.08532715]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 129]
[42 128]
[43 127]
[44 126]
[47 123]
[48 122]
[49 121]
[50 120]
[51 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
