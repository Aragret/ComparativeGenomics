%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[65.22749329 688.97064209]
[52.05055618 681.62011719]
[41.22574997 671.10888672]
[33.49112701 658.15362549]
[29.37405396 643.63775635]
[29.15523338 628.55084229]
[32.84958649 613.92163086]
[40.20523071 600.74749756]
[50.72063828 589.92675781]
[63.67885590 582.19714355]
[78.19637299 578.08569336]
[77.97304535 563.08734131]
[70.04711151 550.47668457]
[77.57808685 536.56280518]
[77.35475922 521.56451416]
[77.13143158 506.56616211]
[76.90810394 491.56781006]
[73.66536713 484.92654419]
[76.79477692 476.34490967]
[76.79477692 461.34490967]
[76.79477692 446.34490967]
[62.96942139 440.70675659]
[52.32714844 430.17642212]
[46.51157379 416.33648682]
[46.43761063 401.28384399]
[52.14767456 387.31213379]
[62.80046082 376.56219482]
[76.79477692 370.69409180]
[76.79477692 355.69409180]
[76.79477692 340.69409180]
[76.79477692 325.69409180]
[66.49837494 317.94723511]
[62.48394775 305.49868774]
[66.43035889 292.82443237]
[77.11079407 284.61816406]
[77.33412170 269.61984253]
[77.55744934 254.62150574]
[77.78077698 239.62316895]
[66.29114532 249.26620483]
[51.33671188 248.09790039]
[41.48405838 236.78749084]
[42.37723541 221.81410217]
[53.50458527 211.75517273]
[68.49185944 212.37290955]
[78.75332642 223.31256104]
[72.38209534 209.84939575]
[81.51310730 196.92906189]
[83.07363129 182.01045227]
[84.63415527 167.09185791]
[77.26302338 157.50054932]
[78.44103241 145.05883789]
[88.07963562 136.48796082]
[89.86209869 121.59423828]
[91.64456940 106.70052338]
[91.42124176 91.70218658]
[81.72241211 79.20245361]
[87.48612976 65.46823883]
[85.26100922 50.63419342]
[83.03589630 35.80014801]
[80.81077576 20.96610451]
[69.12972260 14.26031780]
[63.52540207 2.22694540]
[65.84069824 -10.64634037]
[75.00981140 -19.69934273]
[73.00579834 -34.56487274]
[71.00178528 -49.43040085]
[68.99777222 -64.29592896]
[66.66228485 -79.11299896]
[63.99649048 -93.87421417]
[61.33069229 -108.63542938]
[58.66489792 -123.39664459]
[55.99910355 -138.15786743]
[53.33330536 -152.91908264]
[50.66751099 -167.68029785]
[46.06279373 -175.56918335]
[48.07362747 -182.68101501]
[45.62789917 -197.48028564]
[43.07206726 -212.26094055]
[33.00537109 -224.46636963]
[38.35761642 -238.36610413]
[35.69182205 -253.12731934]
[31.08710098 -261.01620483]
[33.09793472 -268.12805176]
[30.65220833 -282.92730713]
[28.20648003 -297.72659302]
[21.88160133 -284.12527466]
[10.01659489 -274.94802856]
[-4.73786783 -272.24511719]
[-19.08560181 -276.62033081]
[-29.82128716 -287.09625244]
[-34.54654312 -301.33255005]
[-32.20573425 -316.14877319]
[-23.32180786 -328.23495483]
[-9.87945175 -334.89099121]
[5.11827612 -334.62994385]
[18.32084465 -327.51010132]
[26.77877617 -315.12203979]
[26.77877617 -330.12203979]
[26.77877617 -345.12203979]
[13.00490665 -351.69799805]
[3.45498061 -363.60437012]
[0.02514096 -378.47714233]
[3.39638543 -393.36328125]
[12.89935112 -405.30715942]
[26.64721680 -411.93731689]
[41.91033554 -411.93731689]
[55.65819931 -405.30715942]
[65.16116333 -393.36328125]
[68.53240967 -378.47714233]
[65.10256958 -363.60437012]
[55.55264282 -351.69799805]
[41.77877426 -345.12203979]
[41.77877426 -330.12203979]
[41.77877426 -315.12203979]
[43.00575256 -300.17230225]
[45.45147705 -285.37304688]
[47.89720535 -270.57376099]
[50.45303726 -255.79312134]
[53.11883545 -241.03190613]
[62.99485397 -229.88229370]
[57.83328247 -214.92674255]
[62.11547470 -208.90307617]
[60.42716980 -199.92602539]
[62.87289810 -185.12675476]
[65.42872620 -170.34609985]
[68.09452057 -155.58488464]
[70.76032257 -140.82365417]
[73.42611694 -126.06244659]
[76.09191132 -111.30122375]
[78.75770569 -96.54000854]
[81.42350006 -81.77879333]
[84.09606171 -79.47884369]
[85.78739166 -75.77014160]
[85.84751892 -71.12797546]
[83.86329651 -66.29994202]
[85.86731720 -51.43441391]
[87.87133026 -36.56888580]
[89.87534332 -21.70335770]
[103.67297363 -12.08753109]
[106.29859924 4.86596298]
[95.64482117 18.74098778]
[97.86993408 33.57503128]
[100.09505463 48.40907669]
[102.32017517 63.24311829]
[111.85984802 74.68181610]
[106.25527954 89.47707367]
[111.21479797 75.32068634]
[120.25605774 63.35174561]
[132.51731873 54.71104813]
[146.82989502 50.22217178]
[161.82962036 50.31296921]
[176.08680725 54.97478485]
[188.24256897 63.76328659]
[197.13825989 75.84080505]
[201.92604065 90.05619049]
[202.14953613 105.05452728]
[197.78747559 119.40626526]
[189.25559998 131.74348450]
[177.36711121 140.89028931]
[163.25515747 145.97485352]
[148.26480103 146.51255798]
[133.82481384 142.45214844]
[121.31153870 134.18064880]
[111.91765594 122.48641968]
[106.53828430 108.48299408]
[104.75582123 123.37670898]
[102.97335052 138.27043152]
[110.61108398 155.02592468]
[99.55275726 168.65237427]
[97.99223328 183.57098389]
[96.43170929 198.48959351]
[102.69132996 213.01982117]
[93.67192841 224.87307739]
[92.77911377 239.84649658]
[92.55578613 254.84483337]
[92.33245850 269.84317017]
[92.10913086 284.84149170]
[104.52111816 297.16879272]
[104.18403625 314.32107544]
[91.79477692 325.69409180]
[91.79477692 340.69409180]
[91.79477692 355.69409180]
[91.79477692 370.69409180]
[105.78909302 376.56219482]
[116.44187927 387.31213379]
[122.15193939 401.28384399]
[122.07798004 416.33648682]
[116.26240540 430.17642212]
[105.62013245 440.70675659]
[91.79477692 446.34490967]
[91.79477692 461.34490967]
[91.79477692 476.34490967]
[91.90644073 491.34448242]
[92.12976837 506.34283447]
[92.35309601 521.34118652]
[92.57642365 536.33947754]
[100.51833344 550.02294922]
[92.97138214 562.86401367]
[93.19470978 577.86236572]
[107.82820129 581.53973389]
[121.01081085 588.88012695]
[131.84373474 599.38299561]
[139.58836365 612.33227539]
[143.71664429 626.84497070]
[143.94711304 641.93170166]
[140.26405334 656.56378174]
[132.91859436 669.74359131]
[122.41153717 680.57244873]
[109.45929718 688.31207275]
[94.94496155 692.43475342]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 199]
[12 198]
[14 196]
[15 195]
[16 194]
[17 193]
[19 192]
[20 191]
[21 190]
[28 183]
[29 182]
[30 181]
[31 180]
[35 177]
[36 176]
[37 175]
[38 174]
[45 173]
[47 171]
[48 170]
[49 169]
[52 167]
[53 166]
[54 165]
[55 146]
[57 144]
[58 143]
[59 142]
[60 141]
[64 138]
[65 137]
[66 136]
[67 135]
[68 131]
[69 130]
[70 129]
[71 128]
[72 127]
[73 126]
[74 125]
[76 124]
[77 123]
[78 121]
[80 119]
[81 118]
[83 117]
[84 116]
[85 115]
[97 114]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
