%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[117.30644226 455.78311157]
[104.24152374 463.60794067]
[89.12270355 465.43582153]
[74.56941223 460.95010376]
[63.10309219 450.92797852]
[56.71035767 437.10577393]
[56.49878693 421.87832642]
[62.50503159 407.88388062]
[73.68847656 397.54702759]
[88.11152649 392.65872192]
[89.44976044 377.71853638]
[90.78799438 362.77835083]
[92.12622833 347.83816528]
[85.55525208 334.47134399]
[94.49288940 321.41650391]
[95.38570404 306.44308472]
[95.83231354 291.44973755]
[96.27891541 276.45639038]
[88.92398834 263.50439453]
[97.06874084 249.94070435]
[97.51534271 234.94735718]
[97.96195221 219.95401001]
[98.40855408 204.96066284]
[98.85516357 189.96730042]
[98.40855408 174.97395325]
[97.07032013 160.03376770]
[93.34261322 153.65208435]
[95.82508087 144.86145020]
[94.70942688 129.90299988]
[93.59378052 114.94454193]
[83.79475403 101.33001709]
[91.24282074 86.29996490]
[89.90458679 71.35977936]
[88.56635284 56.41959763]
[79.62871552 43.36474228]
[86.19969177 29.99793434]
[84.86145782 15.05774975]
[73.60025024 7.66858339]
[68.72210693 -4.67702913]
[71.79953003 -17.38968277]
[81.49122620 -25.88087845]
[80.37557983 -40.83933258]
[79.25993347 -55.79778671]
[78.14427948 -70.75624084]
[77.02863312 -85.71469116]
[75.91298676 -100.67314911]
[74.79734039 -115.63159943]
[67.28423309 -102.64879608]
[54.64778519 -94.56670380]
[39.71101379 -93.19087982]
[25.81083107 -98.82868958]
[16.05257225 -110.22063446]
[12.61625862 -124.82172394]
[16.26957130 -139.37002563]
[26.19634819 -150.61543274]
[40.17892456 -156.04568481]
[55.09355545 -154.44763184]
[67.60827637 -146.17831421]
[74.92726898 -133.08506775]
[76.26550293 -148.02525330]
[77.60374451 -162.96543884]
[78.94197845 -177.90562439]
[80.28021240 -192.84580994]
[81.61844635 -207.78599548]
[67.30126190 -212.45764160]
[54.38892746 -220.19456482]
[43.52737045 -230.60597229]
[35.25910187 -243.16738892]
[29.99610519 -257.24707031]
[27.99932480 -272.13772583]
[29.36571884 -287.09216309]
[34.02355194 -301.36065674]
[41.73616791 -314.22857666]
[52.11399841 -325.05227661]
[64.63425446 -333.29107666]
[78.66723633 -338.53451538]
[93.50803375 -340.52264404]
[94.84626770 -355.46282959]
[96.18450165 -370.40301514]
[97.52273560 -385.34320068]
[98.86096954 -400.28338623]
[100.19920349 -415.22357178]
[100.42253113 -430.22189331]
[99.52971649 -445.19531250]
[98.52545929 -460.16165161]
[97.40981293 -475.12008667]
[96.29415894 -490.07855225]
[95.17851257 -505.03701782]
[94.06286621 -519.99548340]
[79.15369415 -522.12402344]
[65.05083466 -527.40826416]
[52.41389084 -535.60107422]
[41.83392334 -546.31921387]
[33.80577469 -559.06134033]
[28.70493698 -573.23162842]
[26.76998329 -588.16711426]
[28.09141541 -603.16937256]
[32.60742950 -617.53668213]
[40.10680008 -630.59710693]
[50.23876953 -641.73968506]
[62.52944946 -650.44329834]
[76.40398407 -656.30090332]
[91.21342468 -659.03851318]
[106.26512146 -658.52807617]
[120.85507202 -654.79339600]
[134.30087280 -648.00927734]
[145.97364807 -638.49298096]
[155.32743835 -626.68957520]
[161.92475891 -613.15112305]
[165.45701599 -598.51086426]
[165.75903320 -583.45355225]
[162.81665039 -568.68341064]
[156.76751709 -554.89129639]
[147.89454651 -542.72229004]
[136.61274719 -532.74560547]
[123.44978333 -525.42779541]
[109.02131653 -521.11108398]
[110.13696289 -506.15264893]
[111.25261688 -491.19421387]
[112.36826324 -476.23574829]
[113.48390961 -461.27728271]
[117.11619568 -454.84082031]
[114.50312042 -446.08810425]
[115.39594269 -431.11471558]
[123.50871277 -443.73147583]
[136.79740906 -450.68923950]
[151.78839111 -450.16928101]
[164.56306458 -442.30749512]
[171.78213501 -429.15890503]
[171.55859375 -414.16058350]
[163.95083618 -401.23300171]
[150.94752502 -393.75543213]
[135.94770813 -393.68249512]
[122.87228394 -401.03323364]
[115.13938904 -413.88531494]
[113.80115509 -398.94512939]
[112.46292114 -384.00494385]
[111.12468719 -369.06475830]
[109.78645325 -354.12457275]
[108.44821930 -339.18438721]
[122.69944763 -334.59042358]
[135.57717896 -326.93652344]
[146.43392944 -316.60375977]
[154.72297668 -304.10803223]
[160.02592468 -290.07424927]
[162.07382202 -275.20513916]
[160.76075745 -260.24591064]
[156.14939880 -245.94715881]
[148.46795654 -233.02696228]
[138.09889221 -222.13493347]
[125.55992889 -213.81958008]
[111.47814178 -208.50059509]
[96.55863190 -206.44775391]
[95.22039795 -191.50756836]
[93.88215637 -176.56738281]
[92.54392242 -161.62719727]
[91.20568848 -146.68701172]
[89.86745453 -131.74682617]
[89.75579071 -116.74724579]
[90.87143707 -101.78879547]
[91.98709106 -86.83034515]
[93.10273743 -71.87188721]
[94.21838379 -56.91343307]
[95.33403778 -41.95498276]
[96.44968414 -26.99652863]
[109.65050507 -16.57649994]
[111.26239014 0.50321567]
[99.80164337 13.71951580]
[101.13987732 28.65970039]
[109.98179626 40.64593124]
[103.50653839 55.08136368]
[104.84477234 70.02154541]
[106.18300629 84.96173096]
[114.65399170 92.95446014]
[115.60665894 104.56194305]
[108.55223083 113.82889557]
[109.66788483 128.78735352]
[110.78353119 143.74580383]
[112.01050568 158.69554138]
[113.34873962 173.63572693]
[122.17707825 161.50888062]
[136.41137695 156.77763367]
[150.74259949 161.20663452]
[159.82556152 173.14398193]
[160.27252197 188.13731384]
[151.91679382 200.59451294]
[137.87484741 205.86933899]
[123.38398743 201.99441528]
[113.84851074 190.41390991]
[113.40190887 205.40725708]
[112.95529938 220.40060425]
[112.50869751 235.39396667]
[112.06208801 250.38731384]
[119.38507843 264.41174316]
[111.27227020 276.90298462]
[110.82566071 291.89633179]
[110.37905121 306.88970947]
[112.57201385 310.63735962]
[113.37735748 314.49945068]
[112.92948914 318.02575684]
[111.49523163 320.85586548]
[109.43307495 322.75473022]
[115.90833282 337.19015503]
[107.06641388 349.17639160]
[105.72817993 364.11657715]
[104.38994598 379.05676270]
[103.05171204 393.99694824]
[116.37641144 401.37069702]
[125.54476166 413.53051758]
[128.96830750 428.36962891]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 207]
[11 206]
[12 205]
[13 204]
[15 202]
[16 197]
[17 196]
[18 195]
[20 193]
[21 192]
[22 191]
[23 190]
[24 189]
[25 180]
[26 179]
[28 178]
[29 177]
[30 176]
[32 173]
[33 172]
[34 171]
[36 169]
[37 168]
[41 165]
[42 164]
[43 163]
[44 162]
[45 161]
[46 160]
[47 159]
[59 158]
[60 157]
[61 156]
[62 155]
[63 154]
[64 153]
[77 140]
[78 139]
[79 138]
[80 137]
[81 136]
[82 135]
[83 124]
[84 123]
[85 121]
[86 120]
[87 119]
[88 118]
[89 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
