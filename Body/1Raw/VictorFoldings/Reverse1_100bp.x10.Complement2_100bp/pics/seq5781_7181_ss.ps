%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxGGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGU\
) } def
/len { sequence length } bind def

/coor [
[79.10633850 549.36407471]
[65.22082520 543.67108154]
[51.80564117 536.94427490]
[38.93761826 529.22216797]
[26.69046974 520.54895020]
[15.13434601 510.97430420]
[4.33543825 500.55313110]
[-5.64439535 489.34509277]
[-14.74799156 477.41436768]
[-22.92320633 464.82931519]
[-30.12320900 451.66204834]
[-36.30676270 437.98794556]
[-41.43844223 423.88534546]
[-45.48885727 409.43502808]
[-48.43481064 394.71978760]
[-50.25941849 379.82385254]
[-50.95223999 364.83261108]
[-50.50930023 349.83190918]
[-48.93313599 334.90768433]
[-46.23277664 320.14538574]
[-42.42369461 305.62957764]
[-37.52770233 291.44342041]
[-31.57284355 277.66821289]
[-24.59323120 264.38278198]
[-16.62884331 251.66326904]
[-7.72529840 239.58253479]
[2.06640267 228.20976257]
[12.69017410 217.61009216]
[24.08516312 207.84425354]
[36.18610001 198.96818542]
[48.92366791 191.03271484]
[62.22491074 184.08329773]
[76.01364136 178.15974426]
[90.21086884 173.29600525]
[104.73527527 169.51989746]
[102.06948090 154.75868225]
[99.40368652 139.99746704]
[96.73789215 125.23625183]
[94.07209778 110.47503662]
[89.26258087 124.68308258]
[79.93778229 136.43246460]
[67.19316864 144.34289551]
[52.52596664 147.48504639]
[37.65925980 145.48979187]
[24.33957672 138.59152222]
[14.13170052 127.60065460]
[8.23484135 113.80837250]
[7.34175777 98.83498383]
[11.55736732 84.43954468]
[20.38642311 72.31322479]
[32.79169846 63.88059998]
[47.31583405 60.13233185]
[62.25254822 61.50876999]
[75.84709167 67.84820557]
[86.50238800 78.40588379]
[92.96709442 91.94301605]
[93.85990906 76.96961212]
[91.24683380 68.21691895]
[94.87911987 61.78043365]
[95.99476624 46.82197952]
[97.11042023 31.86352730]
[98.22606659 16.90507317]
[99.34171295 1.94662046]
[100.45735931 -13.01183319]
[85.60860443 -15.18055153]
[70.94981384 -18.39128876]
[56.55402756 -22.62804794]
[42.49295425 -27.86972237]
[28.83665085 -34.09019852]
[15.65315342 -41.25848389]
[3.00814247 -49.33886719]
[-9.03538513 -58.29109573]
[-20.41742897 -68.07056427]
[-31.08128357 -78.62855530]
[-40.97381973 -89.91246033]
[-50.04575729 -101.86608124]
[-58.25189590 -114.42984009]
[-65.55135345 -127.54116821]
[-71.90776825 -141.13473511]
[-77.28945923 -155.14280701]
[-81.66963196 -169.49562073]
[-85.02645874 -184.12164307]
[-87.34320831 -198.94802856]
[-88.60834503 -213.90089417]
[-88.81557465 -228.90576172]
[-87.96384430 -243.88786316]
[-86.05741119 -258.77258301]
[-83.10577393 -273.48571777]
[-79.12363434 -287.95401001]
[-74.13082886 -302.10537720]
[-68.15222931 -315.86929321]
[-61.21763229 -329.17718506]
[-53.36157990 -341.96276855]
[-44.62320709 -354.16235352]
[-35.04605484 -365.71514893]
[-24.67782974 -376.56359863]
[-13.57019138 -386.65365601]
[-1.77847672 -395.93505859]
[10.63856792 -404.36154175]
[23.61908150 -411.89117432]
[37.09839630 -418.48641968]
[51.00935364 -424.11437988]
[65.28265381 -428.74707031]
[79.84718323 -432.36138916]
[94.63039398 -434.93933105]
[109.55861664 -436.46807861]
[124.55748749 -436.93997192]
[139.55229187 -436.35266113]
[154.46830750 -434.70910645]
[169.23124695 -432.01748657]
[183.76753235 -428.29119873]
[198.00476074 -423.54882812]
[211.87200928 -417.81396484]
[225.30017090 -411.11523438]
[238.22235107 -403.48593140]
[250.57420349 -394.96414185]
[262.29415894 -385.59228516]
[273.32382202 -375.41705322]
[283.60824585 -364.48913574]
[293.09622192 -352.86300659]
[301.74047852 -340.59655762]
[309.49792480 -327.75088501]
[316.32989502 -314.39001465]
[322.20242310 -300.58050537]
[327.08618164 -286.39114380]
[330.95687866 -271.89263916]
[333.79519653 -257.15722656]
[335.58703613 -242.25828552]
[336.32345581 -227.27006531]
[336.00079346 -212.26724243]
[334.62063599 -197.32455444]
[332.18988037 -182.51643372]
[328.72061157 -167.91667175]
[324.23010254 -153.59799194]
[318.74078369 -139.63174438]
[312.27996826 -126.08749390]
[304.87982178 -113.03272247]
[296.57727051 -100.53247070]
[287.41360474 -88.64901733]
[277.43453979 -77.44156647]
[266.68975830 -66.96594238]
[255.23280334 -57.27434540]
[243.12075806 -48.41505432]
[230.41394043 -40.43220901]
[217.17567444 -33.36557770]
[203.47190857 -27.25036812]
[189.37092590 -22.11704445]
[174.94296265 -17.99118233]
[160.25990295 -14.89333630]
[145.39489746 -12.83893967]
[130.42199707 -11.83822632]
[115.41581726 -11.89618397]
[114.30017090 3.06226921]
[113.18451691 18.02072334]
[112.06887054 32.97917557]
[110.95322418 47.93762970]
[109.83757019 62.89608383]
[108.83331299 77.86242676]
[107.94049835 92.83583069]
[108.83331299 107.80924225]
[111.49910736 122.57045746]
[114.16490173 137.33168030]
[116.83069611 152.09289551]
[119.49649811 166.85411072]
[134.42422485 165.31130981]
[149.42588806 164.90190125]
[164.41554260 165.62821960]
[179.30734253 167.48612976]
[194.01597595 170.46496582]
[208.45719910 174.54766846]
[222.54827881 179.71086121]
[236.20852661 185.92497253]
[249.35968018 193.15438843]
[261.92642212 201.35771179]
[273.83676147 210.48794556]
[285.02246094 220.49281311]
[295.41949463 231.31498718]
[304.96826172 242.89248657]
[313.61407471 255.15899658]
[321.30743408 268.04425049]
[328.00424194 281.47442627]
[333.66616821 295.37261963]
[338.26077271 309.65924072]
[341.76171875 324.25241089]
[344.14898682 339.06857300]
[345.40887451 354.02282715]
[345.53417969 369.02954102]
[344.52416992 384.00277710]
[342.38467407 398.85671997]
[339.12786865 413.50631714]
[334.77249146 427.86764526]
[329.34341431 441.85845947]
[322.87179565 455.39859009]
[315.39468384 468.41052246]
[306.95489502 480.81967163]
[297.60079956 492.55502319]
[287.38592529 503.54928589]
[276.36883545 513.73956299]
[264.61264038 523.06738281]
[252.18463135 531.47943115]
[239.15603638 538.92742920]
[225.60145569 545.36877441]
[211.59855652 550.76654053]
[197.22750854 555.08984375]
[182.57067871 558.31384277]
[167.71197510 560.42016602]
[152.73654175 561.39672852]
[137.73013306 561.23785400]
[122.77872467 559.94458008]
[107.96794128 557.52416992]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 164]
[36 163]
[37 162]
[38 161]
[39 160]
[56 159]
[57 158]
[59 157]
[60 156]
[61 155]
[62 154]
[63 153]
[64 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
