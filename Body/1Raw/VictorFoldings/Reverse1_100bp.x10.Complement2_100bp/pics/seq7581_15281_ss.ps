%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[101.73338318 590.46191406]
[86.75397491 594.95092773]
[72.41413879 588.71368408]
[65.48470306 574.69525146]
[69.23754120 559.51464844]
[81.90068054 550.33972168]
[82.79349518 535.36633301]
[83.68630981 520.39288330]
[84.57912445 505.41949463]
[85.47193909 490.44610596]
[73.86635590 481.14834595]
[69.91432190 466.62780762]
[75.33364105 452.39813232]
[88.24192047 443.99081421]
[89.13473511 429.01742554]
[90.02754974 414.04400635]
[90.92036438 399.07061768]
[83.95432281 385.90536499]
[92.49930573 372.59017944]
[93.39212036 357.61679077]
[93.72709656 342.62051392]
[93.50376892 327.62219238]
[93.28044128 312.62384033]
[93.05711365 297.62551880]
[78.91957855 292.78659058]
[67.26877594 283.38510132]
[59.52301025 270.54074097]
[56.63367462 255.79376221]
[58.96843719 240.92033386]
[66.26457214 227.71856689]
[77.65837097 217.79116821]
[91.78736115 212.35086060]
[91.56403351 197.35252380]
[91.34070587 182.35418701]
[82.88206482 173.70675659]
[82.57325745 161.21322632]
[91.12508392 151.55770874]
[91.12508392 136.55770874]
[91.12508392 121.55770111]
[80.58073425 132.22619629]
[65.65793610 133.74610901]
[53.17919922 125.42258453]
[48.84963226 111.06100464]
[54.64865494 97.22730255]
[67.92503357 90.24605560]
[82.60897827 93.30899811]
[91.98780060 105.01753998]
[89.69300079 100.30078125]
[90.20426941 94.63404083]
[93.82334137 89.68033600]
[95.82735443 74.81480408]
[97.83137512 59.94927597]
[99.83538818 45.08374786]
[101.83940125 30.21822166]
[103.73268890 15.33818626]
[105.51515961 0.44446877]
[98.17130280 -10.15886116]
[99.96253967 -22.52717781]
[109.38883209 -30.10818100]
[103.56460571 -44.81834793]
[112.93292236 -56.39781189]
[114.93693542 -71.26334381]
[116.94094849 -86.12886810]
[118.94496155 -100.99440002]
[120.94897461 -115.85992432]
[110.56084442 -105.03926086]
[96.18196106 -100.76752472]
[81.57093811 -104.16132355]
[70.54705048 -114.33354187]
[65.99192810 -128.62516785]
[69.09626007 -143.30043030]
[79.04858398 -154.52322388]
[93.24739075 -159.35995483]
[107.98114014 -156.54631042]
[119.39846802 -146.81776428]
[124.51483154 -132.71823120]
[128.70184326 -147.12200928]
[132.88885498 -161.52578735]
[137.07586670 -175.92956543]
[133.49819946 -191.34095764]
[144.48057556 -201.40260315]
[140.90292358 -216.81399536]
[151.88529968 -226.87564087]
[156.07231140 -241.27941895]
[160.25932312 -255.68321228]
[164.44633484 -270.08697510]
[168.63333130 -284.49078369]
[172.82034302 -298.89456177]
[158.97209167 -304.70175171]
[145.87608337 -312.04971313]
[133.70307922 -320.84262085]
[122.61174774 -330.96588135]
[112.74670410 -342.28747559]
[104.23655701 -354.65985107]
[97.19226074 -367.92166138]
[91.70564270 -381.90002441]
[87.84822845 -396.41271973]
[85.67031860 -411.27050781]
[85.20030212 -426.27975464]
[86.44431305 -441.24472046]
[89.38611603 -455.97030640]
[93.98737335 -470.26458740]
[100.18809509 -483.94116211]
[107.90744019 -496.82174683]
[117.04476929 -508.73840332]
[127.48096466 -519.53582764]
[139.07997131 -529.07318115]
[151.69055176 -537.22613525]
[165.14833069 -543.88842773]
[179.27783203 -548.97314453]
[193.89486694 -552.41412354]
[208.80886841 -554.16638184]
[223.82539368 -554.20709229]
[238.74868774 -552.53576660]
[253.38417053 -549.17419434]
[267.54104614 -544.16619873]
[281.03479004 -537.57702637]
[293.68942261 -529.49255371]
[305.33999634 -520.01831055]
[315.83462524 -509.27770996]
[325.03646851 -497.41079712]
[332.82559204 -484.57226562]
[339.10043335 -470.92953491]
[343.77917480 -456.66043091]
[346.80084229 -441.95101929]
[348.12600708 -426.99301147]
[347.73742676 -411.98147583]
[345.64016724 -397.11206055]
[341.86157227 -382.57864380]
[336.45086670 -368.57070923]
[329.47860718 -355.27087402]
[321.03573608 -342.85253906]
[311.23226929 -331.47756958]
[300.19601440 -321.29431152]
[288.07089233 -312.43545532]
[275.01495361 -305.01657104]
[261.19839478 -299.13430786]
[246.80137634 -294.86538696]
[232.01158142 -292.26550293]
[217.02182007 -291.36846924]
[202.02751160 -292.18603516]
[187.22413635 -294.70755005]
[183.03712463 -280.30377197]
[178.85011292 -265.89996338]
[174.66310120 -251.49620056]
[170.47608948 -237.09240723]
[166.28907776 -222.68862915]
[170.16621399 -208.30749512]
[158.88436890 -197.21559143]
[162.76150513 -182.83445740]
[151.47964478 -171.74255371]
[147.29263306 -157.33877563]
[143.10562134 -142.93499756]
[138.91860962 -128.53121948]
[135.81449890 -113.85591125]
[133.81048584 -98.99037933]
[131.80647278 -84.12485504]
[129.80245972 -69.25932312]
[127.79844666 -54.39379883]
[133.76600647 -40.74691391]
[124.25435638 -28.10416603]
[131.78483582 -12.25301933]
[120.40887451 2.22693467]
[118.62641144 17.12065125]
[120.95279694 24.13561440]
[116.70492554 32.22223663]
[114.70091248 47.08776474]
[112.69689941 61.95329285]
[110.69288635 76.81881714]
[108.68887329 91.68434906]
[106.90641022 106.57806396]
[106.12508392 121.55770111]
[106.12508392 136.55770874]
[106.12508392 151.55770874]
[115.69976807 167.28688049]
[106.33904266 182.13085938]
[106.56237030 197.12919617]
[106.78569794 212.12753296]
[121.07040405 217.14476013]
[132.75473022 226.72851562]
[140.44070435 239.70719910]
[143.21725464 254.50451660]
[140.76828003 269.33099365]
[133.40837097 282.40026855]
[122.04265594 292.14447021]
[108.05545044 297.40219116]
[108.27878571 312.40051270]
[108.50211334 327.39886475]
[108.72544098 342.39718628]
[120.88671875 333.61636353]
[135.37461853 337.50234985]
[141.50918579 351.19055176]
[134.76824951 364.59054565]
[120.12098694 367.82434082]
[108.36553192 358.50961304]
[107.47271729 373.48300171]
[114.37489319 387.71923828]
[105.89377594 399.96340942]
[105.00095367 414.93682861]
[104.10813904 429.91021729]
[103.21532440 444.88363647]
[115.03308868 454.76525879]
[118.72308350 469.53811646]
[113.07356262 483.48614502]
[100.44534302 491.33892822]
[99.55252838 506.31231689]
[98.65971375 521.28570557]
[97.76689911 536.25915527]
[96.87408447 551.23254395]
[108.35722351 561.84722900]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 209]
[7 208]
[8 207]
[9 206]
[10 205]
[14 201]
[15 200]
[16 199]
[17 198]
[19 196]
[20 195]
[21 189]
[22 188]
[23 187]
[24 186]
[32 178]
[33 177]
[34 176]
[37 174]
[38 173]
[39 172]
[47 171]
[50 170]
[51 169]
[52 168]
[53 167]
[54 166]
[55 164]
[56 163]
[59 161]
[61 159]
[62 158]
[63 157]
[64 156]
[65 155]
[76 154]
[77 153]
[78 152]
[79 151]
[81 149]
[83 147]
[84 146]
[85 145]
[86 144]
[87 143]
[88 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
