%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAAUAAGGAAGAUCCGUAUCAUCCCUCCUAUACUCCACACUCGCUAUAUGAUCAUAAGGAUCUUCACUCUACCAUUUACGAUCAUAUUAUAAAUACAUxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[117.83147430 497.81335449]
[110.85971832 484.50393677]
[105.80819702 470.35372925]
[102.77523804 455.63818359]
[101.81988525 440.64373779]
[102.96073151 425.66226196]
[106.17556763 410.98538208]
[111.40180969 396.89877319]
[118.53774261 383.67666626]
[127.44445801 371.57638550]
[137.94857788 360.83349609]
[149.84564209 351.65710449]
[162.90406799 344.22586060]
[176.86967468 338.68435669]
[173.33000183 324.10797119]
[169.79032898 309.53161621]
[166.25065613 294.95523071]
[162.71098328 280.37884521]
[158.30998230 266.03900146]
[153.06326294 251.98654175]
[138.94494629 241.56349182]
[142.14340210 223.42922974]
[136.68804932 209.45643616]
[131.23269653 195.48362732]
[125.77733612 181.51083374]
[120.32197571 167.53804016]
[114.65918732 153.64801025]
[108.79022980 139.84382629]
[102.92127228 126.03965759]
[97.05230713 112.23548126]
[90.87654114 98.56581116]
[84.39704132 85.03746033]
[77.91754913 71.50911713]
[70.64431763 58.39042282]
[62.60314560 45.72789764]
[54.56197357 33.06537247]
[46.52079773 20.40284729]
[38.47962570 7.74032259]
[24.55007172 0.23845212]
[24.25884247 -14.65330601]
[15.84422398 -27.07080078]
[7.06362057 -39.23225784]
[-0.49705830 -44.35807037]
[-1.75558627 -51.64078140]
[-10.35414982 -63.93162155]
[-18.95271492 -76.22245789]
[-31.89459801 -68.62326813]
[-45.39933395 -62.07633972]
[-59.38153076 -56.62306595]
[-73.75279999 -52.29793167]
[-88.42227173 -49.12827301]
[-103.29719543 -47.13413620]
[-118.28353882 -46.32812881]
[-133.28654480 -46.71534348]
[-148.21136475 -48.29333115]
[-162.96362305 -51.05212021]
[-177.45005798 -54.97426224]
[-191.57908630 -60.03496552]
[-205.26136780 -66.20223236]
[-218.41040039 -73.43707275]
[-230.94306946 -81.69373322]
[-242.78010559 -90.92002869]
[-253.84669495 -101.05761719]
[-264.07284546 -112.04241180]
[-273.39395142 -123.80495453]
[-281.75103760 -136.27087402]
[-289.09127808 -149.36137390]
[-295.36825562 -162.99366760]
[-300.54229736 -177.08158875]
[-304.58068848 -191.53604126]
[-307.45788574 -206.26567078]
[-309.15573120 -221.17732239]
[-309.66345215 -236.17672729]
[-308.97787476 -251.16906738]
[-307.10330200 -266.05953979]
[-304.05160522 -280.75399780]
[-299.84204102 -295.15954590]
[-294.50128174 -309.18508911]
[-288.06304932 -322.74200439]
[-280.56808472 -335.74450684]
[-272.06372070 -348.11044312]
[-262.60379028 -359.76159668]
[-252.24806213 -370.62432861]
[-241.06201172 -380.62994385]
[-229.11637878 -389.71520996]
[-216.48666382 -397.82266235]
[-203.25274658 -404.90103149]
[-189.49827576 -410.90557861]
[-175.31022644 -415.79833984]
[-160.77828979 -419.54840088]
[-145.99433899 -422.13201904]
[-131.05186462 -423.53289795]
[-116.04531860 -423.74212646]
[-101.06959534 -422.75845337]
[-86.21936035 -420.58801270]
[-71.58851624 -417.24459839]
[-57.26955795 -412.74932861]
[-43.35301971 -407.13061523]
[-29.92688560 -400.42395020]
[-17.07604218 -392.67181396]
[-4.88173485 -383.92315674]
[6.57893610 -374.23330688]
[17.23351288 -363.66354370]
[27.01463127 -352.28067017]
[35.86045456 -340.15664673]
[43.71504974 -327.36816406]
[50.52876282 -313.99606323]
[56.25851440 -300.12487793]
[60.86807632 -285.84228516]
[64.32830811 -271.23861694]
[66.61732483 -256.40621948]
[67.72065735 -241.43882751]
[67.63134003 -226.43109131]
[66.34992981 -211.47789001]
[63.88452148 -196.67378235]
[60.25071335 -182.11233521]
[55.47147751 -167.88563538]
[49.57702637 -154.08361816]
[42.60462952 -140.79356384]
[34.59836960 -128.09947205]
[25.60886574 -116.08161163]
[15.69295120 -104.81597137]
[4.91331911 -94.37376404]
[-6.66187620 -84.82102203]
[1.93668771 -72.53018188]
[10.53525162 -60.23934555]
[19.22507668 -48.01285934]
[28.00568008 -35.85140610]
[30.74838829 -35.27201462]
[33.42684937 -33.57129288]
[35.61281586 -30.76826859]
[36.89282608 -27.03650093]
[36.92136765 -22.69447899]
[50.27576447 -16.09831619]
[51.14215088 -0.30085042]
[59.18332291 12.36167431]
[67.22449493 25.02419853]
[75.26567078 37.68672562]
[83.30684662 50.34925079]
[85.59025574 35.52406693]
[96.06938171 24.79150963]
[110.83578491 22.15455437]
[124.38194275 28.59672356]
[131.65548706 41.71524429]
[129.94355774 56.61723328]
[119.88466644 67.74462128]
[105.23052979 70.94715881]
[91.44589233 65.02961731]
[97.92539215 78.55796814]
[104.40488434 92.08631134]
[107.82390594 93.87031555]
[110.43996429 97.15270233]
[111.60150146 101.54108429]
[110.85648346 106.36651611]
[116.72544861 120.17069244]
[122.59440613 133.97486877]
[128.46336365 147.77905273]
[133.50740051 152.05329895]
[135.35789490 157.42662048]
[134.29476929 162.08267212]
[139.75013733 176.05548096]
[145.20549011 190.02827454]
[150.66084290 204.00106812]
[156.11619568 217.97387695]
[167.59402466 223.85795593]
[171.85014343 235.60824585]
[167.11573792 246.73982239]
[172.36245728 260.79229736]
[177.66436768 246.76055908]
[190.13766479 238.42887878]
[205.13011169 238.90476990]
[217.04989624 248.01074219]
[221.45123291 262.35049438]
[216.69253540 276.57562256]
[204.54867554 285.38055420]
[189.54901123 285.48123169]
[177.28735352 276.83917236]
[180.82702637 291.41555786]
[184.36669922 305.99194336]
[187.90637207 320.56829834]
[191.44604492 335.14468384]
[206.39775085 333.66400146]
[221.41003418 334.27868652]
[236.19064331 336.97677612]
[250.45188904 341.70571899]
[263.91616821 348.37350464]
[276.32138062 356.85034180]
[287.42608643 366.97119141]
[297.01409912 378.53906250]
[304.89880371 391.32882690]
[310.92672729 405.09146118]
[314.98049927 419.55911255]
[316.98123169 434.45016479]
[316.89001465 449.47473145]
[314.70858765 464.34039307]
[310.47940063 478.75775146]
[304.28479004 492.44616699]
[296.24536133 505.13922119]
[286.51754761 516.58984375]
[275.29077148 526.57507324]
[262.78350830 534.90063477]
[249.23925781 541.40441895]
[234.92163086 545.95983887]
[220.10934448 548.47821045]
[205.09071350 548.91052246]
[190.15808105 547.24835205]
[175.60212708 543.52410889]
[161.70617676 537.81018066]
[148.74070740 530.21789551]
[136.95812988 520.89501953]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 181]
[15 180]
[16 179]
[17 178]
[18 177]
[19 168]
[20 167]
[22 164]
[23 163]
[24 162]
[25 161]
[26 160]
[27 157]
[28 156]
[29 155]
[30 154]
[31 150]
[32 149]
[33 148]
[34 139]
[35 138]
[36 137]
[37 136]
[38 135]
[40 133]
[41 128]
[42 127]
[44 126]
[45 125]
[46 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
