%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[154.98136902 331.51043701]
[164.02737427 319.49621582]
[175.02230835 309.23550415]
[187.63208008 301.04010010]
[181.76312256 287.23590088]
[175.89416504 273.43173218]
[170.02519226 259.62756348]
[164.15623474 245.82337952]
[158.64625549 240.89775085]
[158.30435181 231.76972961]
[152.64157104 217.87969971]
[146.97877502 203.98966980]
[141.21275330 190.14218140]
[135.34378052 176.33801270]
[128.56379700 162.95773315]
[120.90319824 150.06140137]
[113.24259949 137.16508484]
[105.58200073 124.26875305]
[97.92140961 111.37242889]
[96.97632599 126.34262848]
[89.26151276 139.20658875]
[76.50046539 147.09048462]
[61.54404068 148.23301697]
[47.73353958 142.37893677]
[38.15426636 130.83609009]
[34.94625473 116.18314362]
[38.82617950 101.69362640]
[48.92725754 90.60452271]
[62.99288177 85.39317322]
[77.88076019 87.22380066]
[90.26490784 95.68745422]
[84.80954742 81.71465302]
[79.35419464 67.74185944]
[73.89883423 53.76905823]
[70.06033325 68.26960754]
[59.55614853 78.97764587]
[45.13204575 83.09411621]
[30.55845833 79.54299164]
[19.64488220 69.25251770]
[15.24410152 54.91260147]
[18.50646782 40.27166748]
[28.57921028 29.15681648]
[42.82933426 24.47344589]
[57.53189468 27.44577789]
[68.84317780 37.29611588]
[65.52091980 22.66865540]
[62.19865799 8.04119492]
[49.37800598 -5.17668962]
[55.21854782 -21.72525597]
[44.44322205 -33.30985260]
[48.95864868 -47.50352097]
[45.41897583 -62.07989502]
[41.87930298 -76.65627289]
[38.33963013 -91.23265076]
[23.54156494 -88.74057007]
[8.60341644 -87.31052399]
[-6.39868784 -86.94980621]
[-21.38830185 -87.66025543]
[-36.28903961 -89.43824005]
[-51.02497482 -92.27471161]
[-65.52101135 -96.15520477]
[-79.70327759 -101.05995178]
[-93.49950409 -106.96396637]
[-106.83939362 -113.83714294]
[-119.65496063 -121.64447784]
[-131.88090515 -130.34617615]
[-143.45492554 -139.89788818]
[-154.31805420 -150.25096130]
[-164.41490173 -161.35261536]
[-173.69404602 -173.14628601]
[-182.10818481 -185.57188416]
[-189.61445618 -198.56608582]
[-196.17460632 -212.06266785]
[-201.75518799 -225.99285889]
[-206.32778931 -240.28567505]
[-209.86909485 -254.86828613]
[-212.36105347 -269.66638184]
[-213.79098511 -284.60452271]
[-214.15158081 -299.60662842]
[-213.44102478 -314.59625244]
[-211.66293335 -329.49697876]
[-208.82633972 -344.23287964]
[-204.94573975 -358.72888184]
[-200.04087830 -372.91110229]
[-194.13676453 -386.70730591]
[-187.26348877 -400.04714966]
[-179.45605469 -412.86264038]
[-170.75427246 -425.08853149]
[-161.20245361 -436.66247559]
[-150.84930420 -447.52551270]
[-139.74757385 -457.62228394]
[-127.95382690 -466.90133667]
[-115.52816772 -475.31536865]
[-102.53391266 -482.82156372]
[-89.03727722 -489.38159180]
[-75.10704041 -494.96206665]
[-60.81418991 -499.53457642]
[-46.23155594 -503.07574463]
[-31.43345070 -505.56759644]
[-16.49528122 -506.99740601]
[-1.49317086 -507.35791016]
[13.49643230 -506.64721680]
[28.39714432 -504.86901855]
[43.13303375 -502.03231812]
[57.62900925 -498.15161133]
[71.81120300 -493.24664307]
[85.60733795 -487.34240723]
[98.94712067 -480.46902466]
[111.76257324 -472.66149902]
[123.98838806 -463.95962524]
[135.56225586 -454.40771484]
[146.42521667 -444.05450439]
[156.52189636 -432.95266724]
[165.80085754 -421.15887451]
[174.21481323 -408.73312378]
[181.72088623 -395.73883057]
[188.28082275 -382.24212646]
[193.86120605 -368.31185913]
[198.43357849 -354.01898193]
[201.97465515 -339.43630981]
[204.46640015 -324.63818359]
[205.89610291 -309.70001221]
[206.25646973 -294.69790649]
[205.54568481 -279.70831299]
[203.76734924 -264.80758667]
[200.93054199 -250.07173157]
[197.04971313 -235.57579041]
[192.14463806 -221.39363098]
[186.24031067 -207.59753418]
[179.36682129 -194.25781250]
[171.55920410 -181.44241333]
[162.85722351 -169.21667480]
[153.30523682 -157.64286804]
[142.95191956 -146.77999878]
[131.85003662 -136.68339539]
[120.05614471 -127.40451813]
[107.63035583 -118.99066162]
[94.63598633 -111.48469543]
[81.13925171 -104.92485809]
[67.20893097 -99.34458923]
[52.91600800 -94.77231598]
[56.45568085 -80.19594574]
[59.99535370 -65.61956787]
[63.53502274 -51.04319382]
[74.05716705 -40.50119400]
[69.79492188 -25.26492691]
[79.95874786 -18.70572472]
[83.02700806 -6.59087467]
[76.82611847 4.71893501]
[80.14837646 19.34639549]
[83.47063446 33.97385406]
[87.87163544 48.31370163]
[93.32698822 62.28649902]
[98.78234863 76.25930023]
[104.23770142 90.23209381]
[110.81773376 103.71183014]
[118.47833252 116.60815430]
[126.13893127 129.50448608]
[133.79953003 142.40081787]
[141.46012878 155.29713440]
[143.46600342 140.43186951]
[153.10893250 128.94212341]
[167.40093994 124.38816071]
[181.91348267 128.18104553]
[192.14970398 139.14552307]
[194.93778992 153.88414001]
[189.41383362 167.82995605]
[177.28947449 176.66171265]
[162.32159424 177.64280701]
[149.14796448 170.46905518]
[155.01692200 184.27322388]
[161.25454712 190.94630432]
[160.86880493 198.32688904]
[166.53160095 212.21691895]
[172.19438171 226.10693359]
[177.96041870 239.95442200]
[183.82937622 253.75860596]
[189.69833374 267.56277466]
[195.56729126 281.36694336]
[201.43626404 295.17114258]
[216.08711243 291.77645874]
[231.10485840 290.97766113]
[246.03315735 292.79901123]
[260.41833496 297.18511963]
[273.82324219 304.00271606]
[285.84051514 313.04461670]
[296.10494995 324.03607178]
[304.30465698 336.64306641]
[310.19046021 350.48245239]
[313.58346558 365.13366699]
[314.38055420 380.15151978]
[312.55752563 395.07962036]
[308.16979980 409.46429443]
[301.35067749 422.86840820]
[292.30740356 434.88467407]
[281.31478882 445.14785767]
[268.70687866 453.34616089]
[254.86680603 459.23037720]
[240.21519470 462.62170410]
[225.19725037 463.41711426]
[210.26937866 461.59237671]
[195.88519287 457.20300293]
[182.48184204 450.38238525]
[170.46661377 441.33773804]
[160.20465088 430.34396362]
[152.00781250 417.73510742]
[146.12516785 403.89437866]
[142.73548889 389.24240112]
[141.94178772 374.22436523]
[143.76820374 359.29669189]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 180]
[5 179]
[6 178]
[7 177]
[8 176]
[10 175]
[11 174]
[12 173]
[13 171]
[14 170]
[15 160]
[16 159]
[17 158]
[18 157]
[19 156]
[31 155]
[32 154]
[33 153]
[34 152]
[45 151]
[46 150]
[47 149]
[49 146]
[51 144]
[52 143]
[53 142]
[54 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
