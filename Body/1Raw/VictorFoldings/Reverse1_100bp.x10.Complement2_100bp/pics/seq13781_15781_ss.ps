%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUAAAAUAAAAUUCAAACAACCAAUCCAUCAACUCCAGAUCCCGACAAUCUUCAGGAUCCUUUCACUGUCGCUCCCGACACUCAAAAUCCAUCUCCCCCxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[141.89965820 810.03930664]
[134.83583069 823.61730957]
[122.26451111 832.34771729]
[107.07450104 834.22448730]
[92.75634766 828.81622314]
[82.60025787 817.36578369]
[78.94002533 802.50439453]
[82.61675262 787.64703369]
[92.78554535 776.20788574]
[107.10969543 770.81555176]
[108.89215851 755.92181396]
[110.67462921 741.02813721]
[112.45709229 726.13439941]
[114.23955536 711.24066162]
[116.02202606 696.34698486]
[117.80448914 681.45324707]
[119.25390625 666.52343750]
[120.36956024 651.56500244]
[121.48520660 636.60656738]
[122.60085297 621.64807129]
[123.71650696 606.68963623]
[109.95493317 592.90075684]
[110.78381348 573.13165283]
[126.11725616 560.14837646]
[126.56385803 545.15502930]
[127.01046753 530.16168213]
[127.45706940 515.16833496]
[127.90367889 500.17501831]
[127.90367889 485.17501831]
[127.45706940 470.18164062]
[127.01046753 455.18829346]
[126.56385803 440.19494629]
[126.11725616 425.20159912]
[125.67064667 410.20825195]
[124.66638947 395.24191284]
[123.10586548 380.32330322]
[121.54534149 365.40469360]
[109.84902954 356.25418091]
[108.05391693 341.14682007]
[117.73111725 328.94070435]
[116.17059326 314.02209473]
[114.61006927 299.10348511]
[113.04954529 284.18490601]
[101.35323334 275.03439331]
[99.55812073 259.92703247]
[109.23532104 247.72090149]
[107.67480469 232.80229187]
[106.11428070 217.88369751]
[104.55375671 202.96508789]
[93.49542999 189.33862305]
[101.13316345 172.58312988]
[99.35069275 157.68942261]
[97.56822968 142.79570007]
[95.78575897 127.90198517]
[94.00329590 113.00826263]
[85.77754974 101.70213318]
[91.10298920 88.77420044]
[81.00467682 99.86582184]
[66.02821350 100.70590973]
[54.75281143 90.81322479]
[53.63751984 75.85474396]
[63.32123566 64.39936829]
[78.25668335 63.00925446]
[89.88770294 72.47988892]
[89.44110107 57.48653793]
[88.99449158 42.49318695]
[85.61096191 34.00852203]
[88.65453339 27.27365112]
[88.43120575 12.27531338]
[88.20787811 -2.72302389]
[85.15069580 -8.58520603]
[85.46566772 -14.25951767]
[88.20787811 -18.16967964]
[88.43120575 -33.16801834]
[80.02408600 -42.94979095]
[80.51886749 -55.43734360]
[89.10531616 -63.95787430]
[89.55191803 -78.95122528]
[89.55191803 -93.95122528]
[89.10531616 -108.94457245]
[88.65870667 -123.93792725]
[74.16381836 -128.22225952]
[61.71971512 -136.76548767]
[52.53796387 -148.72056580]
[47.50778198 -162.90902710]
[47.10993195 -177.93714905]
[51.37079620 -192.33283997]
[59.86103058 -204.68986511]
[71.73878479 -213.80517578]
[85.83317566 -218.79609680]
[85.38656616 -233.78944397]
[84.93996429 -248.78279114]
[84.49335480 -263.77615356]
[74.45459747 -279.21325684]
[83.36921692 -294.32937622]
[82.69943237 -309.31439209]
[82.02964783 -324.29943848]
[67.83925629 -329.82690430]
[57.12853241 -340.65280151]
[51.75316238 -354.90151978]
[52.64446640 -370.10430908]
[59.64801788 -383.62725830]
[71.55040741 -393.12741089]
[86.28948212 -396.95883179]
[101.31159973 -394.45764160]
[114.01409149 -386.05725098]
[122.19617462 -373.21307373]
[124.44025421 -358.15039062]
[120.35752106 -343.47894287]
[110.65534973 -331.74066162]
[97.01468658 -324.96923828]
[97.68447113 -309.98419189]
[98.35425568 -294.99914551]
[107.06661224 -286.60742188]
[107.74726105 -274.12860107]
[99.48670959 -264.22274780]
[99.93331146 -249.22940063]
[100.37992096 -234.23603821]
[100.82652283 -219.24269104]
[115.19299316 -215.09954834]
[127.59223938 -206.70736694]
[136.80291748 -194.87759399]
[141.91308594 -180.76103210]
[142.41043091 -165.73588562]
[138.23367310 -151.27317810]
[129.77978516 -138.79280090]
[117.86624146 -129.52403259]
[103.65206146 -124.38452911]
[104.09866333 -109.39118195]
[104.54527283 -94.39782715]
[106.49075317 -92.37960052]
[107.75401306 -89.46913910]
[107.99120331 -85.92243195]
[106.95741272 -82.11509705]
[104.54527283 -78.50461578]
[104.09866333 -63.51126862]
[113.23735046 -48.52956772]
[103.42954254 -32.94469070]
[103.20621490 -17.94635201]
[103.20621490 -2.94635153]
[103.42954254 12.05198574]
[103.65287018 27.05032349]
[103.98784637 42.04658127]
[104.43444824 57.03993225]
[104.88105774 72.03327942]
[105.99670410 86.99173737]
[114.22245026 98.29786682]
[108.89701080 111.22579956]
[110.67948151 126.11951447]
[112.46194458 141.01322937]
[114.24440765 155.90695190]
[116.02687836 170.80067444]
[125.66548157 179.37155151]
[126.84348297 191.81326294]
[119.47235870 201.40455627]
[121.03288269 216.32316589]
[122.59340668 231.24177551]
[124.15393066 246.16036987]
[136.14759827 256.09967041]
[137.51766968 271.25149536]
[127.96815491 282.62435913]
[129.52867126 297.54296875]
[131.08920288 312.46157837]
[132.64971924 327.38018799]
[144.64338684 337.31948853]
[146.01345825 352.47131348]
[136.46394348 363.84417725]
[138.02447510 378.76278687]
[139.58499146 393.68139648]
[150.91439819 383.85058594]
[165.69120789 386.42852783]
[173.02252197 399.51486206]
[167.50395203 413.46279907]
[153.20359802 417.99047852]
[140.66400146 409.76165771]
[141.11061096 424.75500488]
[141.55720520 439.74835205]
[142.00381470 454.74169922]
[142.45042419 469.73504639]
[142.89703369 484.72839355]
[145.30915833 488.33886719]
[146.34295654 492.14620972]
[146.10577393 495.69293213]
[144.84251404 498.60339355]
[142.89703369 500.62161255]
[142.45042419 515.61499023]
[142.00381470 530.60833740]
[141.55720520 545.60168457]
[141.11061096 560.59503174]
[150.13183594 566.29071045]
[155.93075562 575.14959717]
[157.51707458 585.53643799]
[154.67082214 595.56701660]
[147.97006226 603.44958496]
[138.67495728 607.80529785]
[137.55931091 622.76373291]
[136.44366455 637.72216797]
[135.32801819 652.68066406]
[134.21235657 667.63909912]
[136.48043823 672.34045410]
[136.69671631 676.97796631]
[135.22912598 680.78076172]
[132.69821167 683.23571777]
[130.91574097 698.12945557]
[129.13327026 713.02313232]
[127.35080719 727.91687012]
[125.56834412 742.81060791]
[123.78588104 757.70428467]
[122.00341034 772.59802246]
[134.65054321 781.21826172]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 209]
[11 208]
[12 207]
[13 206]
[14 205]
[15 204]
[16 203]
[17 199]
[18 198]
[19 197]
[20 196]
[21 195]
[24 189]
[25 188]
[26 187]
[27 186]
[28 185]
[29 180]
[30 179]
[31 178]
[32 177]
[33 176]
[34 175]
[35 169]
[36 168]
[37 167]
[40 164]
[41 163]
[42 162]
[43 161]
[46 158]
[47 157]
[48 156]
[49 155]
[51 152]
[52 151]
[53 150]
[54 149]
[55 148]
[57 146]
[64 145]
[65 144]
[66 143]
[68 142]
[69 141]
[70 140]
[73 139]
[74 138]
[77 136]
[78 135]
[79 130]
[80 129]
[81 128]
[90 119]
[91 118]
[92 117]
[93 116]
[95 113]
[96 112]
[97 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
