%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[103.25931549 665.86175537]
[96.37006378 652.37780762]
[94.23479462 637.38714600]
[97.08512115 622.51593018]
[104.61186218 609.37713623]
[115.99858093 599.39611816]
[130.01011658 593.65539551]
[129.11729431 578.68200684]
[128.22448730 563.70861816]
[127.33167267 548.73516846]
[123.79561615 542.24536133]
[126.53871155 533.53253174]
[125.86892700 518.54748535]
[125.08760834 503.56784058]
[124.19479370 488.59445190]
[123.30197906 473.62103271]
[122.40915680 458.64761353]
[113.92803955 446.40344238]
[120.83021545 432.16720581]
[104.96741486 427.77795410]
[91.54502869 418.20822144]
[82.19553375 404.60034180]
[78.06342316 388.58905029]
[79.66513062 372.10510254]
[86.82457733 357.14251709]
[98.69230652 345.51730347]
[113.84625244 338.64703369]
[112.50801849 323.70684814]
[111.16978455 308.76666260]
[109.83155060 293.82647705]
[108.49331665 278.88629150]
[107.15508270 263.94610596]
[105.81684875 249.00592041]
[91.13613129 246.13296509]
[77.84637451 239.23271179]
[67.02854919 228.85675049]
[59.56528473 215.83981323]
[56.06882858 201.23260498]
[56.83086014 186.21690369]
[61.79816055 172.01005554]
[70.57623291 159.76626587]
[82.46062469 150.48275757]
[96.49346161 144.91864014]
[95.15522766 129.97845459]
[93.81699371 115.03826904]
[85.34600830 107.04553986]
[84.39334106 95.43805695]
[91.44776917 86.17110443]
[90.33211517 71.21265411]
[89.21646881 56.25419617]
[88.10082245 41.29574585]
[86.98516846 26.33728981]
[85.86952209 11.37883759]
[77.12724304 -1.80763781]
[83.89649963 -15.07513237]
[82.78085327 -30.03358459]
[80.55573273 -44.86763000]
[77.23347473 -59.49509048]
[73.91121674 -74.12255096]
[70.58895874 -88.75000763]
[67.26670074 -103.37747192]
[63.94443893 -118.00492859]
[60.62218094 -132.63238525]
[57.29991913 -147.25985718]
[53.97766113 -161.88731384]
[49.77353287 -166.98994446]
[48.90744400 -172.60661316]
[50.78112030 -176.99960327]
[47.89584732 -191.71949768]
[39.60049820 -179.22200012]
[25.24872780 -174.86004639]
[11.40197372 -180.62783813]
[4.39078617 -193.88842773]
[7.42058420 -208.57925415]
[19.10618591 -217.98385620]
[34.10509109 -217.80259705]
[45.56092834 -208.11672974]
[44.22269440 -223.05691528]
[42.88446045 -237.99710083]
[41.54622650 -252.93728638]
[40.20799255 -267.87747192]
[38.86975861 -282.81765747]
[27.02540016 -292.93441772]
[25.88106918 -308.10494995]
[35.59885025 -319.33438110]
[34.26061630 -334.27456665]
[22.41625977 -344.39135742]
[21.27192879 -359.56188965]
[30.98970985 -370.79132080]
[29.65147591 -385.73150635]
[28.31324196 -400.67169189]
[26.97500801 -415.61187744]
[12.15680504 -418.54403687]
[-1.23443508 -425.53341675]
[-12.11314392 -436.01339722]
[-19.59743309 -449.13446045]
[-23.08058548 -463.83291626]
[-22.28023911 -478.91720581]
[-17.26127052 -493.16455078]
[-8.43054771 -505.41995239]
[3.49606299 -514.68994141]
[17.55172348 -520.22302246]
[32.59700775 -521.57067871]
[47.41225815 -518.62365723]
[60.79646683 -511.62081909]
[71.66464233 -501.12988281]
[79.13574982 -488.00131226]
[82.60413361 -473.29937744]
[81.78863525 -458.21588135]
[76.75535583 -443.97360229]
[67.91232300 -431.72708130]
[55.97640610 -422.46908569]
[41.91519165 -416.95010376]
[43.25342560 -402.00991821]
[44.59166336 -387.06973267]
[45.92989731 -372.12954712]
[57.48867416 -362.80590820]
[59.05866241 -347.67349243]
[49.20080185 -335.61282349]
[50.53903580 -320.67263794]
[62.09781647 -311.34899902]
[63.66780472 -296.21658325]
[53.80994415 -284.15588379]
[55.14817810 -269.21569824]
[56.48641205 -254.27551270]
[57.82464600 -239.33532715]
[59.16287994 -224.39514160]
[60.50111389 -209.45495605]
[62.61573792 -194.60476685]
[65.50100708 -179.88487244]
[68.60511780 -165.20956421]
[71.92738342 -150.58210754]
[75.24964142 -135.95465088]
[78.57189941 -121.32718658]
[81.89415741 -106.69972992]
[85.21641541 -92.07226562]
[88.53868103 -77.44480896]
[91.86093903 -62.81734848]
[95.18319702 -48.18988800]
[101.13025665 -61.96059799]
[113.10667419 -70.99195862]
[127.98182678 -72.92320251]
[141.86740112 -67.24950409]
[151.13372803 -55.45394516]
[153.35862732 -40.61986923]
[147.96049500 -26.62486076]
[136.35040283 -17.12718391]
[121.56320953 -14.60950947]
[107.46423340 -19.72994995]
[97.73930359 -31.14923477]
[98.85495758 -16.19078064]
[107.51743317 -4.07423449]
[100.82798004 10.26318836]
[101.94362640 25.22164154]
[103.05927277 40.18009567]
[104.17491913 55.13854980]
[105.29057312 70.09700012]
[106.40621948 85.05545807]
[116.20524597 98.66998291]
[108.75717926 113.70003510]
[110.09541321 128.64021301]
[111.43364716 143.58039856]
[126.23194885 146.56204224]
[139.57702637 153.58567810]
[150.39131165 164.07452393]
[157.80438232 177.17242432]
[161.22286987 191.81365967]
[160.37805176 206.80973816]
[155.34696960 220.94581604]
[146.54536438 233.07914734]
[134.69348145 242.23141479]
[120.75703430 247.66767883]
[122.09526825 262.60787964]
[123.43350220 277.54806519]
[124.77173615 292.48825073]
[126.10997009 307.42843628]
[127.44820404 322.36862183]
[128.78643799 337.30877686]
[142.09266663 340.21368408]
[154.02738953 346.74041748]
[163.62899780 356.35232544]
[170.12683105 368.26452637]
[173.00318909 381.50814819]
[172.03443909 395.00900269]
[167.30847168 407.67477417]
[159.21675110 418.48339844]
[148.42193604 426.56552124]
[135.80361938 431.27441406]
[144.34860229 444.58956909]
[137.38256836 457.75482178]
[138.27537537 472.72821045]
[139.16819763 487.70162964]
[140.06101990 502.67501831]
[143.69566345 511.05520630]
[140.85397339 517.87768555]
[141.52375793 532.86273193]
[142.30506897 547.84234619]
[143.19789124 562.81579590]
[144.09071350 577.78918457]
[144.98352051 592.76257324]
[159.57795715 596.79760742]
[172.07005310 605.35485840]
[181.10475159 617.50610352]
[185.70205688 631.93328857]
[185.36326599 647.07141113]
[180.12513733 661.27850342]
[170.55587769 673.01336670]
[157.69346619 681.00317383]
[142.93312073 684.38128662]
[127.87596130 682.78112793]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 200]
[8 199]
[9 198]
[10 197]
[12 196]
[13 195]
[14 193]
[15 192]
[16 191]
[17 190]
[19 188]
[27 178]
[28 177]
[29 176]
[30 175]
[31 174]
[32 173]
[33 172]
[43 162]
[44 161]
[45 160]
[48 158]
[49 157]
[50 156]
[51 155]
[52 154]
[53 153]
[55 151]
[56 150]
[57 139]
[58 138]
[59 137]
[60 136]
[61 135]
[62 134]
[63 133]
[64 132]
[65 131]
[68 130]
[69 129]
[77 128]
[78 127]
[79 126]
[80 125]
[81 124]
[82 123]
[85 120]
[86 119]
[89 116]
[90 115]
[91 114]
[92 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
