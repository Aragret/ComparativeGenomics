%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAACAACAAACCUUCCCCCUACGCCCCCUUUACAACAAUCAUUACUCUUUAGGACGCUUAUCCGAAGGCCGACGGUCCGCAAAUUACCCCAAAUCAUCCCxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[33.39383698 787.86309814]
[19.27434921 792.94812012]
[4.81072187 796.95074463]
[-9.91419506 799.84796143]
[-24.81605911 801.62335205]
[-39.80951309 802.26660156]
[-54.80867004 801.77404785]
[-69.72762299 800.14855957]
[-84.48091125 797.39935303]
[-98.98403168 793.54229736]
[-113.15390778 788.59942627]
[-126.90937042 782.59906006]
[-140.17164612 775.57556152]
[-152.86474609 767.56915283]
[-164.91596985 758.62573242]
[-176.25630188 748.79644775]
[-186.82078552 738.13769531]
[-196.54888916 726.71044922]
[-205.38490295 714.58026123]
[-213.27821350 701.81652832]
[-220.18359375 688.49237061]
[-226.06152344 674.68414307]
[-230.87829590 660.47088623]
[-234.60633850 645.93408203]
[-237.22430420 631.15692139]
[-238.71719360 616.22412109]
[-239.07644653 601.22119141]
[-238.30000305 586.23400879]
[-236.39231873 571.34851074]
[-233.36433411 556.64996338]
[-229.23336792 542.22247314]
[-224.02308655 528.14868164]
[-217.76335144 514.50927734]
[-210.49000549 501.38238525]
[-202.24470520 488.84313965]
[-193.07470703 476.96340942]
[-183.03250122 465.81121826]
[-172.17562866 455.45043945]
[-160.56626892 445.94042969]
[-148.27091980 437.33566284]
[-135.36001587 429.68542480]
[-121.90751648 423.03356934]
[-107.99046326 417.41812134]
[-93.68858337 412.87130737]
[-79.08378601 409.41915894]
[-64.25973511 407.08145142]
[-49.30134201 405.87158203]
[-34.29428482 405.79644775]
[-19.32452583 406.85650635]
[-4.47781229 409.04565430]
[10.16081619 412.35140991]
[14.56181335 398.01156616]
[18.96281242 383.67172241]
[23.36380959 369.33187866]
[16.18021202 356.33450317]
[20.43917274 341.72915649]
[34.12071228 334.28247070]
[38.52170944 319.94262695]
[42.92270660 305.60278320]
[38.07751083 288.73593140]
[51.66217422 276.30456543]
[55.84918594 261.90078735]
[60.03619385 247.49700928]
[64.22320557 233.09321594]
[68.41021729 218.68943787]
[71.94989014 204.11306763]
[74.83515930 189.39317322]
[77.72043610 174.67327881]
[80.60570526 159.95338440]
[83.49098206 145.23350525]
[86.37625122 130.51361084]
[89.26152802 115.79371643]
[81.26529694 103.71039581]
[84.05237579 89.49145508]
[96.01858521 81.32101440]
[98.90385437 66.60112000]
[101.23934174 51.78405380]
[103.02180481 36.89033508]
[104.80427551 21.99661827]
[106.58673859 7.10290098]
[108.36920929 -7.79081631]
[110.04074860 -22.69738960]
[111.60127258 -37.61599350]
[113.16179657 -52.53459930]
[100.04324341 -45.26111221]
[86.11977386 -50.84117126]
[81.65525818 -65.16136932]
[89.94075775 -77.66539001]
[104.86852264 -79.13572693]
[115.43380737 -68.49006653]
[118.09960175 -83.25128937]
[120.76539612 -98.01250458]
[123.43119049 -112.77371979]
[126.09698486 -127.53493500]
[111.98524475 -132.73396301]
[98.99078369 -140.30462646]
[87.50849152 -150.01690674]
[77.88730621 -161.57562256]
[70.41960907 -174.62953186]
[65.33232117 -188.78193665]
[62.78005219 -203.60276794]
[62.84035492 -218.64163208]
[65.51139832 -233.44151306]
[70.71202087 -247.55267334]
[78.28416443 -260.54626465]
[87.99773407 -272.02746582]
[99.55754852 -281.64733887]
[112.61230469 -289.11355591]
[126.76528931 -294.19924927]
[141.58641052 -296.74981689]
[156.62525940 -296.68780518]
[171.42485046 -294.01510620]
[185.53541565 -288.81286621]
[198.52815247 -281.23925781]
[210.00823975 -271.52438354]
[219.62680054 -259.96347046]
[227.09155273 -246.90788269]
[232.17561340 -232.75431824]
[234.72453308 -217.93290710]
[234.66081238 -202.89405823]
[231.98641968 -188.09477234]
[226.78259277 -173.98480225]
[219.20750427 -160.99291992]
[209.49131775 -149.51393127]
[197.92933655 -139.89668274]
[184.87287903 -132.43342590]
[170.71875000 -127.35095215]
[155.89704895 -124.80372620]
[140.85820007 -124.86914062]
[138.19241333 -110.10792542]
[135.52661133 -95.34671021]
[132.86082458 -80.58549500]
[130.19502258 -65.82427216]
[128.08039856 -50.97407532]
[126.51987457 -36.05547333]
[124.95935059 -21.13686752]
[127.38992310 -14.15731812]
[123.26292419 -6.00835037]
[121.48046112 8.88536739]
[119.69799042 23.77908516]
[117.91552734 38.67280197]
[116.13305664 53.56652069]
[129.35844421 46.48915100]
[143.19729614 52.27589417]
[147.44810486 66.66097260]
[138.97735596 79.04024506]
[124.02935791 80.28816986]
[113.62374878 69.48639679]
[110.73847198 84.20628357]
[118.73470306 96.28960419]
[115.94762421 110.50854492]
[103.98141479 118.67898560]
[101.09614563 133.39888000]
[98.21086884 148.11877441]
[95.32559967 162.83866882]
[92.44033051 177.55854797]
[89.55505371 192.27844238]
[86.66978455 206.99833679]
[99.69026947 199.55073547]
[114.19901276 203.35813904]
[121.88474274 216.23950195]
[118.34471893 230.81579590]
[105.60683441 238.73706055]
[90.96792603 235.46562195]
[82.81400299 222.87644958]
[78.62699127 237.28022766]
[74.43997955 251.68402100]
[70.25296783 266.08779907]
[66.06595612 280.49157715]
[71.58267975 292.15042114]
[67.79877472 304.06115723]
[57.26255417 310.00378418]
[52.86155701 324.34362793]
[48.46055984 338.68347168]
[55.60918427 352.52307129]
[50.94166946 367.00302124]
[37.70365524 373.73287964]
[33.30265808 388.07272339]
[28.90166092 402.41256714]
[24.50066376 416.75241089]
[38.47344208 422.22769165]
[51.99211121 428.74404907]
[64.97923279 436.26416016]
[77.36042786 444.74493408]
[89.06476593 454.13781738]
[100.02520752 464.38894653]
[110.17897034 475.43966675]
[119.46789551 487.22665405]
[127.83878326 499.68240356]
[135.24366760 512.73559570]
[141.64015198 526.31140137]
[146.99159241 540.33203125]
[151.26733398 554.71728516]
[154.44288635 569.38470459]
[156.50004578 584.25030518]
[157.42704773 599.22888184]
[157.21858215 614.23468018]
[155.87583923 629.18176270]
[153.40649414 643.98443604]
[149.82472229 658.55798340]
[145.15101624 672.81890869]
[139.41215515 686.68554688]
[132.64100647 700.07836914]
[124.87635803 712.92077637]
[116.16268921 725.13922119]
[106.54990387 736.66363525]
[96.09307098 747.42797852]
[84.85208893 757.37072754]
[72.89133453 766.43481445]
[60.27933121 774.56835938]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[51 180]
[52 179]
[53 178]
[54 177]
[57 174]
[58 173]
[59 172]
[61 169]
[62 168]
[63 167]
[64 166]
[65 165]
[66 158]
[67 157]
[68 156]
[69 155]
[70 154]
[71 153]
[72 152]
[75 149]
[76 148]
[77 142]
[78 141]
[79 140]
[80 139]
[81 138]
[82 136]
[83 135]
[84 134]
[90 133]
[91 132]
[92 131]
[93 130]
[94 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
