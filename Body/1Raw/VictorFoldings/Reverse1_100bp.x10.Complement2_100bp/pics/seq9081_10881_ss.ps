%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[-20.21332359 360.19387817]
[-17.22247887 374.90960693]
[-15.92862988 389.87036133]
[-16.34864426 404.88104248]
[-18.47704887 419.74603271]
[-22.28609085 434.27148438]
[-27.72611618 448.26806641]
[-34.72620010 461.55325317]
[-43.19508362 473.95388794]
[-53.02235413 485.30831909]
[-64.07990265 495.46844482]
[-76.22355652 504.30187988]
[-89.29500580 511.69342041]
[-103.12384796 517.54669189]
[-117.52977753 521.78546143]
[-132.32499695 524.35437012]
[-147.31660461 525.21997070]
[-162.30917358 524.37103271]
[-177.10722351 521.81854248]
[-191.51785278 517.59576416]
[-205.35317993 511.75784302]
[-218.43283081 504.38082886]
[-230.58628845 495.56088257]
[-241.65510559 485.41302490]
[-251.49497986 474.06954956]
[-259.97763062 461.67831421]
[-266.99246216 448.40090942]
[-272.44802856 434.41036987]
[-276.27319336 419.88916016]
[-278.41809082 405.02655029]
[-278.85479736 390.01632690]
[-277.57754517 375.05416870]
[-274.60305786 360.33511353]
[-269.97006226 346.05108643]
[-263.73898315 332.38833618]
[-255.99104309 319.52490234]
[-246.82727051 307.62857056]
[-236.36712646 296.85437012]
[-224.74697876 287.34283447]
[-212.11831665 279.21789551]
[-198.64578247 272.58551025]
[-184.50500488 267.53213501]
[-169.88037109 264.12365723]
[-154.96252441 262.40451050]
[-139.94593811 262.39712524]
[-125.02639771 264.10159302]
[-110.39841461 267.49566650]
[-96.25268555 272.53512573]
[-82.77362823 279.15423584]
[-70.13697052 287.26675415]
[-60.64807510 275.64947510]
[-51.15917587 264.03222656]
[-41.67027664 252.41494751]
[-32.18138123 240.79769897]
[-31.76075554 236.04037476]
[-28.34714317 231.49676514]
[-22.23289871 228.98130798]
[-12.40231800 217.65171814]
[-2.57173705 206.32212830]
[7.25884390 194.99252319]
[17.08942413 183.66293335]
[26.83539009 172.26046753]
[36.49620056 160.78576660]
[46.15701294 149.31108093]
[46.64841843 144.56054688]
[50.12929916 140.06826782]
[56.28031921 137.64411926]
[66.27848816 126.46214294]
[76.27666473 115.28016663]
[86.27483368 104.09819794]
[89.32199860 90.45244598]
[102.54319000 85.90363312]
[112.54136658 74.72165680]
[122.53953552 63.53968430]
[121.83875275 47.97862244]
[132.13761902 36.78093719]
[146.97702026 36.20874786]
[156.97520447 25.02677155]
[166.97337341 13.84479713]
[176.97154236 2.66282248]
[186.96971130 -8.51915169]
[190.40026855 -23.96395493]
[204.65144348 -28.29443169]
[214.64961243 -39.47640610]
[224.64779663 -50.65838242]
[224.70854187 -63.55640793]
[233.26625061 -72.66407013]
[245.33576965 -73.47235870]
[255.49931335 -84.50423431]
[259.01242065 -92.93607330]
[265.89724731 -95.62326813]
[276.22390747 -106.50260162]
[286.55056763 -117.38193512]
[296.87725830 -128.26127625]
[307.20391846 -139.14060974]
[317.53057861 -150.01994324]
[327.85726929 -160.89927673]
[317.95477295 -172.18005371]
[309.11914062 -184.31459045]
[301.42358398 -197.20231628]
[294.93185425 -210.73645020]
[289.69778442 -224.80484009]
[285.76470947 -239.29090881]
[283.16522217 -254.07461548]
[281.92089844 -269.03344727]
[282.04199219 -284.04348755]
[283.52755737 -298.98028564]
[286.36523438 -313.72012329]
[290.53155518 -328.14083862]
[295.99197388 -342.12295532]
[302.70120239 -355.55056763]
[310.60372925 -368.31243896]
[319.63400269 -380.30282593]
[329.71722412 -391.42236328]
[340.76983643 -401.57888794]
[352.70025635 -410.68826294]
[365.40957642 -418.67498779]
[378.79254150 -425.47290039]
[392.73825073 -431.02563477]
[407.13107300 -435.28723145]
[421.85183716 -438.22232056]
[436.77850342 -439.80661011]
[451.78738403 -440.02697754]
[466.75411987 -438.88159180]
[481.55468750 -436.37991333]
[496.06646729 -432.54272461]
[510.16915894 -427.40179443]
[523.74591064 -420.99972534]
[536.68426514 -413.38955688]
[548.87695312 -404.63436890]
[560.22296143 -394.80667114]
[570.62829590 -383.98797607]
[580.00671387 -372.26788330]
[588.28045654 -359.74349976]
[595.38104248 -346.51861572]
[601.24957275 -332.70285034]
[605.83746338 -318.41067505]
[609.10668945 -303.76049805]
[611.03009033 -288.87374878]
[611.59179688 -273.87374878]
[610.78717041 -258.88482666]
[608.62286377 -244.03117371]
[605.11676025 -229.43588257]
[600.29791260 -215.21989441]
[594.20635986 -201.50100708]
[586.89245605 -188.39291382]
[578.41687012 -176.00421143]
[568.84985352 -164.43757629]
[558.27062988 -153.78884888]
[546.76690674 -144.14627075]
[534.43395996 -135.58973694]
[521.37402344 -128.19017029]
[507.69534302 -122.00887299]
[493.51123047 -117.09706879]
[478.93920898 -113.49546051]
[464.10006714 -111.23389435]
[449.11672974 -110.33110046]
[434.11337280 -110.79457855]
[419.21432495 -112.62046814]
[404.54306030 -115.79365540]
[390.22113037 -120.28784180]
[376.36724854 -126.06577301]
[363.09616089 -133.07958984]
[350.51785278 -141.27116394]
[338.73660278 -150.57260132]
[328.40991211 -139.69326782]
[318.08325195 -128.81393433]
[307.75659180 -117.93460083]
[297.42993164 -107.05526733]
[287.10324097 -96.17593384]
[276.77658081 -85.29660034]
[266.53118896 -74.34069061]
[256.36764526 -63.30881119]
[253.45155334 -46.00379944]
[235.82975769 -40.66020966]
[225.83158875 -29.47823524]
[215.83341980 -18.29626083]
[213.11801147 -3.65126777]
[198.15168762 1.47902000]
[188.15351868 12.66099453]
[178.15534973 23.84296989]
[168.15718079 35.02494431]
[158.15899658 46.20691681]
[159.24401855 61.01766968]
[149.26374817 72.50020599]
[133.72151184 73.53785706]
[123.72333527 84.71983337]
[113.72516632 95.90180206]
[110.67800140 109.54755402]
[97.45681000 114.09636688]
[87.45863342 125.27834320]
[77.46046448 136.46031189]
[67.46229553 147.64228821]
[57.63171005 158.97187805]
[47.97090149 170.44657898]
[38.31008911 181.92127991]
[35.17698288 190.50157166]
[28.41901779 193.49351501]
[18.58843613 204.82310486]
[8.75785637 216.15270996]
[-1.07272482 227.48229980]
[-10.90330601 238.81188965]
[-20.56411552 250.28659058]
[-30.05301476 261.90383911]
[-39.54191208 273.52111816]
[-49.03081131 285.13836670]
[-58.51971054 296.75564575]
[-48.04760361 307.51821899]
[-38.87062836 319.40435791]
[-31.10841751 332.25915527]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[50 207]
[51 206]
[52 205]
[53 204]
[54 203]
[57 202]
[58 201]
[59 200]
[60 199]
[61 198]
[62 196]
[63 195]
[64 194]
[67 193]
[68 192]
[69 191]
[70 190]
[72 188]
[73 187]
[74 186]
[77 183]
[78 182]
[79 181]
[80 180]
[81 179]
[83 177]
[84 176]
[85 175]
[88 173]
[89 172]
[91 171]
[92 170]
[93 169]
[94 168]
[95 167]
[96 166]
[97 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
