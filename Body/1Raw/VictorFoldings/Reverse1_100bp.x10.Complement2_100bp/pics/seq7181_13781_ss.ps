%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[68.45164490 596.74249268]
[55.43939590 589.22326660]
[43.69323349 579.84857178]
[33.47557068 568.82781982]
[25.01467133 556.40722656]
[18.49955750 542.86425781]
[14.07577991 528.50158691]
[11.84216499 513.63989258]
[11.84861374 498.61135864]
[14.09498215 483.75161743]
[18.53108597 469.39270020]
[25.05781937 455.85537720]
[33.52937317 443.44204712]
[43.75648880 432.43008423]
[55.51069260 423.06542969]
[68.52938843 415.55737305]
[82.52173615 410.07357788]
[97.17513275 406.73657227]
[88.51265717 394.62002563]
[95.20211792 380.28262329]
[94.08646393 365.32415771]
[92.97081757 350.36572266]
[91.85517120 335.40725708]
[80.43648529 325.91256714]
[79.09197235 310.75845337]
[89.12830353 298.84585571]
[88.01265717 283.88742065]
[85.97899628 281.95806885]
[84.58704376 279.10690308]
[84.19171906 275.57434082]
[85.05447388 271.72463989]
[87.30298615 268.01004028]
[87.07965851 253.01171875]
[79.15372467 240.40104675]
[86.68470764 226.48721313]
[86.46138000 211.48887634]
[86.23805237 196.49053955]
[74.07676697 205.27137756]
[59.58887100 201.38539124]
[53.45429993 187.69718933]
[60.19523239 174.29719543]
[74.84249878 171.06338501]
[86.59796143 180.37812805]
[83.85815430 173.51406860]
[87.61717224 165.18894958]
[80.84791565 151.92146301]
[89.59019470 138.73498535]
[90.70584106 123.77653503]
[91.82148743 108.81807709]
[92.71430206 93.84467316]
[93.38408661 78.85963440]
[93.60741425 63.86129761]
[93.38408661 48.86296082]
[93.16075897 33.86462402]
[92.93743134 18.86628532]
[92.71410370 3.86794829]
[84.77220154 -9.81549740]
[92.31915283 -22.65655518]
[92.09582520 -37.65489197]
[84.15391541 -51.33833694]
[91.70086670 -64.17939758]
[91.47753906 -79.17773438]
[83.53563690 -92.86118317]
[91.08258820 -105.70223999]
[90.85926056 -120.70057678]
[90.07794189 -135.68020630]
[88.73970795 -150.62039185]
[87.29028320 -165.55020142]
[85.72975922 -180.46881104]
[84.16924286 -195.38742065]
[82.60871887 -210.30601501]
[67.12329102 -213.53439331]
[53.41030502 -221.38041687]
[42.80614090 -233.06562805]
[36.33995056 -247.43811035]
[34.63375092 -263.08599854]
[37.84262085 -278.47622681]
[45.64068604 -292.10470581]
[57.25417709 -302.64331055]
[71.53817749 -309.06933594]
[69.75571442 -323.96304321]
[67.97325134 -338.85678101]
[66.19078064 -353.75048828]
[64.40831757 -368.64419556]
[55.08594894 -381.42715454]
[61.25603104 -394.98367310]
[59.47356796 -409.87741089]
[57.69110107 -424.77111816]
[55.90863419 -439.66482544]
[40.94540405 -441.49929810]
[26.85624504 -446.86203003]
[14.46027851 -455.44128418]
[4.47819042 -466.73825073]
[-2.50967312 -480.09613037]
[-6.09704733 -494.73834229]
[-6.07536650 -509.81356812]
[-2.44589186 -524.44543457]
[4.58036423 -537.78314209]
[14.59490490 -549.05133057]
[27.01549721 -557.59490967]
[41.12002182 -562.91711426]
[56.08846664 -564.70849609]
[71.05058289 -562.86499023]
[85.13648987 -557.49371338]
[97.52725220 -548.90692139]
[107.50248718 -537.60394287]
[114.48225403 -524.24182129]
[118.06074524 -509.59741211]
[118.02993011 -494.52218628]
[114.39158630 -479.89257812]
[107.35723877 -466.55911255]
[97.33586884 -455.29696655]
[84.91010284 -446.76095581]
[70.80235291 -441.44729614]
[72.58481598 -426.55358887]
[74.36728668 -411.65988159]
[76.14974976 -396.76614380]
[85.34461975 -385.04849243]
[79.30203247 -370.42666626]
[81.08450317 -355.53295898]
[82.86696625 -340.63922119]
[84.64942932 -325.74551392]
[86.43190002 -310.85180664]
[100.47992706 -308.43542480]
[113.29164124 -302.15054321]
[123.82425690 -292.49865723]
[131.21766663 -280.25582886]
[134.86471558 -266.41009521]
[134.46098328 -252.08186340]
[130.03025818 -238.43318176]
[121.92324829 -226.57353210]
[110.78991699 -217.46960449]
[97.52732086 -211.86654663]
[99.08784485 -196.94793701]
[100.64836884 -182.02932739]
[102.20889282 -167.11073303]
[106.03120422 -160.78524780]
[103.67988586 -151.95863342]
[105.01811981 -137.01844788]
[116.49263000 -146.67948914]
[131.22943115 -143.88182068]
[138.36509705 -130.68780518]
[132.63948059 -116.82354736]
[118.27329254 -112.50929260]
[105.85759735 -120.92390442]
[106.08092499 -105.92556763]
[114.00685883 -93.31490326]
[106.47588348 -79.40106201]
[106.69921112 -64.40272522]
[114.62513733 -51.79206085]
[107.09416199 -37.87821960]
[107.31748962 -22.87988281]
[115.24342346 -10.26921940]
[107.71244049 3.64462066]
[107.93576813 18.64295769]
[108.15909576 33.64129639]
[108.38242340 48.63963318]
[108.60575867 63.63796997]
[110.52097321 65.68493652]
[111.74076080 68.61388397]
[111.92511749 72.16373444]
[110.83475494 75.95525360]
[108.36912537 79.52941895]
[107.69934082 94.51445770]
[110.27082062 99.08627319]
[110.09775543 104.77339172]
[106.77994537 109.93373108]
[105.66429138 124.89218140]
[104.54864502 139.85063171]
[111.23810577 154.18806458]
[102.57562256 166.30461121]
[101.57136536 181.27095032]
[101.23638916 196.26721191]
[101.45971680 211.26554871]
[101.68304443 226.26388550]
[109.62494659 239.94732666]
[102.07799530 252.78839111]
[102.30132294 267.78671265]
[102.97110748 282.77175903]
[104.08676147 297.73022461]
[115.77918243 308.02221680]
[116.69751740 323.20809937]
[106.81362152 334.29159546]
[107.92927551 349.25006104]
[109.04492188 364.20852661]
[110.16056824 379.16696167]
[118.90284729 392.35345459]
[112.13359070 405.62094116]
[127.11988068 406.74731445]
[141.77088928 410.09478760]
[155.75930786 415.58859253]
[168.77262878 423.10598755]
[180.52012634 432.47900391]
[190.73934937 443.49832153]
[199.20202637 455.91769409]
[205.71907043 469.45968628]
[210.14488220 483.82177734]
[212.38061523 498.68313599]
[212.37631226 513.71166992]
[210.13206482 528.57171631]
[205.69799805 542.93127441]
[199.17320251 556.46954346]
[190.70341492 568.88409424]
[180.47785950 579.89752197]
[168.72499084 589.26379395]
[155.70736694 596.77374268]
[141.71580505 602.25952148]
[127.06287384 605.59857178]
[112.07594299 606.71636963]
[97.08980560 605.58789062]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 188]
[20 186]
[21 185]
[22 184]
[23 183]
[26 180]
[27 179]
[32 178]
[33 177]
[35 175]
[36 174]
[37 173]
[43 172]
[45 171]
[47 169]
[48 168]
[49 167]
[50 164]
[51 163]
[52 158]
[53 157]
[54 156]
[55 155]
[56 154]
[58 152]
[59 151]
[61 149]
[62 148]
[64 146]
[65 145]
[66 139]
[67 138]
[68 136]
[69 135]
[70 134]
[71 133]
[80 123]
[81 122]
[82 121]
[83 120]
[84 119]
[86 117]
[87 116]
[88 115]
[89 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
