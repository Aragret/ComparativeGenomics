%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxCCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGA\
) } def
/len { sequence length } bind def

/coor [
[192.02677917 604.33978271]
[194.56695557 589.48010254]
[200.59010315 575.66033936]
[209.74607849 563.68408203]
[221.50256348 554.24749756]
[235.17602539 547.89929199]
[232.29075623 533.17938232]
[229.40547180 518.45947266]
[226.52020264 503.73962402]
[216.47927856 492.73828125]
[221.41760254 477.70755005]
[218.53233337 462.98764038]
[208.49140930 451.98632812]
[213.42974854 436.95556641]
[210.54446411 422.23568726]
[207.65919495 407.51577759]
[204.77392578 392.79589844]
[200.90962219 378.30221558]
[196.08361816 364.09976196]
[191.25762939 349.89730835]
[186.43162537 335.69485474]
[181.60563660 321.49237061]
[167.34875488 317.26397705]
[158.20738220 305.30990601]
[157.85371399 290.08728027]
[166.63287354 277.42898560]
[161.80688477 263.22653198]
[156.98088074 249.02407837]
[152.15489197 234.82162476]
[146.69952393 220.84883118]
[140.62570190 207.13356018]
[134.55186462 193.41828918]
[119.83818817 183.85404968]
[121.95160675 165.56156921]
[115.67424011 151.93826294]
[103.32081604 143.61706543]
[104.57275391 127.84547424]
[98.29539490 114.22215271]
[86.99069214 105.99443817]
[88.08129120 92.05520630]
[75.27886963 82.75958252]
[76.97980499 67.96241760]
[60.46058655 62.20613098]
[53.35538483 46.59104538]
[59.61637497 30.98211098]
[53.13687897 17.45376587]
[40.19747925 8.34978580]
[41.67791748 -6.47106314]
[35.19842148 -19.99940872]
[28.71892357 -33.52775574]
[11.59026146 -44.15655518]
[13.91200256 -63.35281754]
[7.03258991 -76.68224335]
[0.15317756 -90.01167297]
[-13.05154705 -98.72636414]
[-12.01303768 -113.58472443]
[-18.89245033 -126.91415405]
[-25.77186394 -140.24357605]
[-32.65127563 -153.57301331]
[-45.85599899 -162.28770447]
[-44.81748962 -177.14605713]
[-51.69690323 -190.47547913]
[-58.57631683 -203.80491638]
[-62.31140518 -206.01921082]
[-64.88841248 -209.00643921]
[-66.20655060 -212.30763245]
[-66.32445526 -215.47824097]
[-65.44165039 -218.13883972]
[-71.51548004 -231.85411072]
[-77.58931732 -245.56936646]
[-83.66315460 -259.28463745]
[-98.15749359 -255.31329346]
[-113.08186340 -253.54666138]
[-128.10282898 -254.02424622]
[-142.88484192 -256.73535156]
[-157.09764099 -261.61938477]
[-170.42370605 -268.56729126]
[-182.56535339 -277.42382812]
[-193.25131226 -287.99114990]
[-202.24285889 -300.03314209]
[-209.33912659 -313.28079224]
[-214.38157654 -327.43817139]
[-217.25755310 -342.18899536]
[-217.90281677 -357.20370483]
[-216.30294800 -372.14685059]
[-212.49368286 -386.68463135]
[-206.56013489 -400.49227905]
[-198.63484192 -413.26126099]
[-188.89488220 -424.70639038]
[-177.55781555 -434.57192993]
[-164.87695312 -442.63748169]
[-151.13557434 -448.72290039]
[-136.64065552 -452.69216919]
[-121.71604156 -454.45666504]
[-106.69514465 -453.97695923]
[-91.91352844 -451.26376343]
[-77.70142365 -446.37765503]
[-64.37633514 -439.42785645]
[-52.23595810 -430.56961060]
[-41.55150223 -420.00076294]
[-32.56166458 -407.95748901]
[-25.46728706 -394.70883179]
[-20.42685509 -380.55072021]
[-17.55297470 -365.79949951]
[-16.90985107 -350.78472900]
[-18.51185036 -335.84176636]
[-22.32318497 -321.30453491]
[-28.25870514 -307.49774170]
[-36.18581390 -294.72988892]
[-45.92741013 -283.28616333]
[-57.26586914 -273.42224121]
[-69.94788361 -265.35845947]
[-63.87405014 -251.64320374]
[-57.80021667 -237.92793274]
[-51.72638321 -224.21267700]
[-45.24688721 -210.68432617]
[-38.36747360 -197.35490417]
[-31.48806190 -184.02546692]
[-18.77539825 -176.26419067]
[-19.32184601 -160.45242310]
[-12.44243431 -147.12298584]
[-5.56302118 -133.79356384]
[1.31639123 -120.46413422]
[14.02905464 -112.70285797]
[13.48260689 -96.89109039]
[20.36201859 -83.56166077]
[27.24143219 -70.23223114]
[37.21590805 -68.01348877]
[44.47502899 -60.51325607]
[46.44841385 -50.04014969]
[42.24726868 -40.00725174]
[48.72676468 -26.47890472]
[55.20626068 -12.95055866]
[67.68220520 -4.81421709]
[66.66522217 10.97426987]
[73.14472198 24.50261497]
[85.77732086 27.04171181]
[94.77523804 36.53483963]
[96.69085693 49.67031860]
[90.60311890 61.68505859]
[102.95654297 70.00624847]
[101.70460510 85.77784729]
[113.00930786 94.00556183]
[111.91870880 107.94479370]
[118.19606781 121.56810760]
[130.99848938 130.86372375]
[129.29756165 145.66088867]
[135.57492065 159.28421021]
[147.38261414 164.47470093]
[152.33058167 175.95082092]
[148.26712036 187.34446716]
[154.34095764 201.05972290]
[160.41479492 214.77499390]
[166.81439209 201.20867920]
[180.88525391 196.01145935]
[194.56694031 202.16056824]
[200.02197266 216.13349915]
[194.12544250 229.92591858]
[180.25515747 235.63691711]
[166.35734558 229.99562073]
[171.18333435 244.19808960]
[176.00933838 258.40054321]
[180.83532715 272.60299683]
[195.50910950 277.29196167]
[204.50308228 289.57861328]
[204.53726196 304.62728882]
[195.80809021 316.66638184]
[200.63407898 330.86883545]
[205.46008301 345.07128906]
[210.28607178 359.27374268]
[215.11207581 373.47619629]
[220.15077209 359.34780884]
[231.96266174 350.10229492]
[246.88769531 348.60452271]
[260.30117798 355.31854248]
[268.04681396 368.16397095]
[267.72454834 383.16049194]
[259.43420410 395.66131592]
[245.74464417 401.79287720]
[230.89773560 399.65527344]
[219.49382019 389.91061401]
[222.37908936 404.63052368]
[225.26435852 419.35040283]
[228.14962769 434.07031250]
[238.39692688 446.12448120]
[233.25222778 460.10238647]
[236.13749695 474.82226562]
[246.38479614 486.87646484]
[241.24009705 500.85433960]
[244.12536621 515.57421875]
[247.01063538 530.29412842]
[249.89591980 545.01403809]
[264.95413208 545.73046875]
[279.40313721 550.03045654]
[292.40286255 557.66394043]
[303.19754028 568.18719482]
[311.15954590 580.98834229]
[315.82601929 595.32318115]
[316.92565918 610.35827637]
[314.39450073 625.21954346]
[308.37973022 639.04290771]
[299.23101807 651.02478027]
[287.48025513 660.46844482]
[273.81063843 666.82495117]
[259.01690674 669.72473145]
[243.95910645 668.99914551]
[229.51272583 664.69036865]
[216.51762390 657.04901123]
[205.72933960 646.51922607]
[197.77507019 633.71319580]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 192]
[7 191]
[8 190]
[9 189]
[11 187]
[12 186]
[14 184]
[15 183]
[16 182]
[17 181]
[18 171]
[19 170]
[20 169]
[21 168]
[22 167]
[26 163]
[27 162]
[28 161]
[29 160]
[30 153]
[31 152]
[32 151]
[34 148]
[35 147]
[37 145]
[38 144]
[40 142]
[42 140]
[45 136]
[46 135]
[48 133]
[49 132]
[50 131]
[52 127]
[53 126]
[54 125]
[56 123]
[57 122]
[58 121]
[59 120]
[61 118]
[62 117]
[63 116]
[68 115]
[69 114]
[70 113]
[71 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
