%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxUUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUG\
) } def
/len { sequence length } bind def

/coor [
[218.17552185 348.97940063]
[220.18870544 334.10565186]
[223.47305298 319.46002197]
[228.00427246 305.15093994]
[233.74879456 291.28436279]
[240.66410828 277.96295166]
[248.69898987 265.28533936]
[257.79397583 253.34538269]
[246.68673706 243.26423645]
[235.57951355 233.18310547]
[224.47227478 223.10195923]
[213.36503601 213.02082825]
[198.74067688 210.19647217]
[193.72193909 195.19236755]
[182.61470032 185.11123657]
[171.50747681 175.03009033]
[160.40023804 164.94895935]
[149.29299927 154.86781311]
[138.18577576 144.78668213]
[123.56140137 141.96231079]
[118.54267120 126.95822144]
[102.37528229 132.63333130]
[85.55651093 129.35919189]
[72.69866943 118.03367615]
[67.32785034 101.76267242]
[70.91693878 85.00827789]
[59.51447678 75.26231384]
[48.11201096 65.51634979]
[32.59445190 62.43156815]
[27.94680023 48.28064346]
[12.42923927 45.19586182]
[7.78158712 31.04494095]
[-3.62087512 21.29897499]
[-19.13843536 18.21419334]
[-23.78608704 4.06327057]
[-35.18854904 -5.68269539]
[-46.59101486 -15.42866135]
[-57.99347687 -25.17462730]
[-69.39593506 -34.92059326]
[-80.79840088 -44.66655731]
[-92.20086670 -54.41252518]
[-103.60332489 -64.15849304]
[-114.33915710 -53.66810226]
[-125.97212219 -44.18230820]
[-138.40856934 -35.77748108]
[-151.54835510 -28.52129745]
[-165.28569031 -22.47217751]
[-179.50996399 -17.67882729]
[-194.10665894 -14.17984200]
[-208.95823669 -12.00339127]
[-223.94511414 -11.16700077]
[-238.94664001 -11.67740536]
[-253.84202576 -13.53049278]
[-268.51132202 -16.71134567]
[-282.83642578 -21.19435120]
[-296.70202637 -26.94341660]
[-309.99642944 -33.91225052]
[-322.61264038 -42.04474258]
[-334.44906616 -51.27541351]
[-345.41040039 -61.52994537]
[-355.40838623 -72.72576904]
[-364.36254883 -84.77274323]
[-372.20074463 -97.57386780]
[-378.85989380 -111.02607727]
[-384.28637695 -125.02105713]
[-388.43652344 -139.44613647]
[-391.27685547 -154.18515015]
[-392.78457642 -169.11944580]
[-392.94750977 -184.12875366]
[-391.76434326 -199.09225464]
[-389.24459839 -213.88946533]
[-385.40859985 -228.40122986]
[-380.28717041 -242.51071167]
[-373.92163086 -256.10430908]
[-366.36315918 -269.07257080]
[-357.67263794 -281.31106567]
[-347.92004395 -292.72128296]
[-337.18386841 -303.21133423]
[-325.55062866 -312.69677734]
[-313.11392212 -321.10122681]
[-299.97390747 -328.35702515]
[-286.23638916 -334.40573120]
[-272.01196289 -339.19863892]
[-257.41516113 -342.69717407]
[-242.56353760 -344.87316895]
[-227.57661438 -345.70910645]
[-212.57511902 -345.19824219]
[-197.67979431 -343.34469604]
[-183.01058960 -340.16339111]
[-168.68560791 -335.67996216]
[-154.82019043 -329.93048096]
[-141.52598572 -322.96121216]
[-128.91001892 -314.82833862]
[-117.07388306 -305.59732056]
[-106.11286163 -295.34243774]
[-96.11521912 -284.14633179]
[-87.16144562 -272.09906006]
[-79.32363129 -259.29769897]
[-72.66488647 -245.84529114]
[-67.23883057 -231.85014343]
[-63.08914566 -217.42495728]
[-60.24924088 -202.68585205]
[-58.74198532 -187.75151062]
[-58.57951736 -172.74218750]
[-59.76313782 -157.77871704]
[-62.28332520 -142.98159790]
[-66.11978149 -128.46995544]
[-71.24161530 -114.36062622]
[-77.60759735 -100.76722717]
[-85.16646576 -87.79919434]
[-93.85736084 -75.56095123]
[-82.45489502 -65.81498718]
[-71.05243683 -56.06901932]
[-59.64997101 -46.32305527]
[-48.24750900 -36.57708740]
[-36.84504700 -26.83112335]
[-25.44258499 -17.08515739]
[-14.04012203 -7.33919191]
[0.66185814 -4.95150661]
[6.12509060 9.89651203]
[17.52755356 19.64247704]
[32.22953415 22.03016281]
[37.69276428 36.87818146]
[52.39474487 39.26586533]
[57.85797882 54.11388779]
[69.26044464 63.85985184]
[80.66290283 73.60581970]
[92.05362701 68.25994110]
[104.61953735 67.60808563]
[116.50225830 71.74665070]
[125.94448090 80.06359863]
[131.54977417 91.32891846]
[132.48919678 103.87660980]
[128.62380981 115.85098267]
[144.04264832 119.39641571]
[148.26690674 133.67944336]
[159.37414551 143.76057434]
[170.48138428 153.84172058]
[181.58860779 163.92285156]
[192.69584656 174.00399780]
[203.80308533 184.08512878]
[219.22190857 187.63056946]
[223.44618225 201.91358948]
[234.55342102 211.99473572]
[245.66064453 222.07586670]
[256.76788330 232.15701294]
[267.87512207 242.23814392]
[278.88037109 232.03198242]
[290.72229004 222.80969238]
[303.31314087 214.63951111]
[316.55975342 207.58197021]
[330.36401367 201.68930054]
[344.62374878 197.00514221]
[359.23336792 193.56417847]
[374.08471680 191.39186096]
[389.06784058 190.50430298]
[404.07177734 190.90805054]
[418.98547363 192.60012817]
[433.69851685 195.56800842]
[448.10192871 199.78970337]
[462.08911133 205.23397827]
[475.55648804 211.86051941]
[488.40438843 219.62025452]
[500.53762817 228.45574951]
[511.86639404 238.30155945]
[522.30682373 249.08480835]
[531.78167725 260.72567749]
[540.22064209 273.13793945]
[547.56140137 286.22973633]
[553.74957275 299.90408325]
[558.73925781 314.05981445]
[562.49359131 328.59207153]
[564.98474121 343.39328003]
[566.19427490 358.35382080]
[566.11322021 373.36300659]
[564.74224854 388.30963135]
[562.09143066 403.08306885]
[558.18041992 417.57394409]
[553.03814697 431.67495728]
[546.70275879 445.28170776]
[539.22106934 458.29348755]
[530.64849854 470.61392212]
[521.04858398 482.15179443]
[510.49230957 492.82168579]
[499.05789185 502.54461670]
[486.82995605 511.24856567]
[473.89904785 518.86914062]
[460.36090088 525.34985352]
[446.31573486 530.64282227]
[431.86758423 534.70874023]
[417.12335205 537.51757812]
[402.19226074 539.04858398]
[387.18484497 539.29028320]
[372.21218872 538.24102783]
[357.38516235 535.90844727]
[342.81353760 532.30993652]
[328.60519409 527.47210693]
[314.86535645 521.43072510]
[301.69573975 514.23059082]
[289.19381714 505.92492676]
[277.45217896 496.57531738]
[266.55776978 486.25091553]
[256.59121704 475.02819824]
[247.62631226 462.99026489]
[239.72946167 450.22619629]
[232.95912170 436.83053589]
[227.36538696 422.90243530]
[222.98971558 408.54504395]
[219.86447144 393.86465454]
[218.01281738 378.96990967]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 147]
[9 146]
[10 145]
[11 144]
[12 143]
[14 141]
[15 140]
[16 139]
[17 138]
[18 137]
[19 136]
[21 134]
[26 127]
[27 126]
[28 125]
[30 123]
[32 121]
[33 120]
[35 118]
[36 117]
[37 116]
[38 115]
[39 114]
[40 113]
[41 112]
[42 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
