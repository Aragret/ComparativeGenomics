%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[242.15823364 434.14355469]
[251.92727661 422.73086548]
[263.13037109 412.72216797]
[254.71574402 400.30465698]
[246.30113220 387.88717651]
[237.88650513 375.46966553]
[229.47189331 363.05218506]
[214.84196472 360.50256348]
[206.13143921 348.02932739]
[208.90492249 332.70138550]
[200.49029541 320.28390503]
[192.07568359 307.86639404]
[183.66105652 295.44891357]
[175.24644470 283.03140259]
[166.83181763 270.61392212]
[153.28695679 264.41827393]
[151.95060730 248.65361023]
[143.53598022 236.23611450]
[135.12136841 223.81861877]
[126.70674896 211.40112305]
[118.29212952 198.98362732]
[113.85432434 197.21870422]
[110.47811890 192.64724731]
[109.81829071 186.06878662]
[111.43149567 200.98178101]
[109.95166016 215.90861511]
[105.44170380 230.21456909]
[98.09338379 243.29135132]
[88.21916962 254.58293152]
[76.23891449 263.60919189]
[62.66201782 269.98632812]
[48.06577682 273.44317627]
[33.07083893 273.83276367]
[18.31478882 271.13851929]
[4.42506456 265.47497559]
[-8.00773621 257.08297729]
[-18.45496368 246.31938171]
[-26.47239876 233.64179993]
[-31.71913338 219.58934021]
[-33.97207642 204.75949097]
[-33.13542938 189.78285217]
[-29.24476624 175.29620361]
[-22.46552277 161.91555786]
[-13.08595371 150.20983887]
[-1.50488460 140.67680359]
[11.78525257 133.72178650]
[26.21935463 129.64051819]
[41.18367386 128.60655212]
[56.04192352 130.66383362]
[70.16232300 135.72489929]
[82.94446564 143.57453918]
[93.84484100 153.87899780]
[102.40005493 166.20025635]
[100.17493439 151.36621094]
[97.94982147 136.53216553]
[95.72470093 121.69812775]
[93.49958801 106.86408234]
[90.09673309 102.87227631]
[89.17264557 97.25806427]
[91.43589783 91.55590820]
[89.65343475 76.66218567]
[87.87096405 61.76847076]
[80.94506836 75.07380676]
[68.68210602 83.71208191]
[53.82167053 85.75349426]
[39.68360901 80.74198151]
[29.42640686 69.79712677]
[25.34154701 55.36404419]
[28.34159851 40.66711426]
[37.75634384 28.98967552]
[51.48249817 22.94049263]
[66.45361328 23.87097168]
[79.32509613 31.57323837]
[87.22143555 44.32661057]
[87.89122009 29.34156990]
[88.56100464 14.35653210]
[89.23078918 -0.62850678]
[89.90057373 -15.61354542]
[89.56559753 -30.60980415]
[88.22736359 -45.54999161]
[86.88912964 -60.49017334]
[85.43971252 -75.41998291]
[74.11031342 -65.58917999]
[59.33349991 -68.16712189]
[52.00218582 -81.25344086]
[57.52074814 -95.20140076]
[71.82110596 -99.72907257]
[84.36070251 -91.50024414]
[83.91410065 -106.49359131]
[83.46749115 -121.48694611]
[83.02088928 -136.48030090]
[82.57427979 -151.47364807]
[82.12767792 -166.46699524]
[73.98292542 -180.03068542]
[81.33785248 -192.98268127]
[80.89125061 -207.97602844]
[66.49123383 -212.71051025]
[54.58084869 -222.08700562]
[46.59833527 -234.97325134]
[43.50762177 -249.81317139]
[45.68192673 -264.81475830]
[52.85868835 -278.16653442]
[64.17127991 -288.25619507]
[78.25365448 -293.86535645]
[93.40529633 -294.31668091]
[107.79656219 -289.55566406]
[119.68964386 -280.15722656]
[127.64839172 -267.25631714]
[130.71176147 -252.41070557]
[128.50981140 -237.41313171]
[121.30845642 -224.07461548]
[109.97728729 -214.00582886]
[95.88459778 -208.42263794]
[96.33120728 -193.42929077]
[104.44401550 -180.93801880]
[97.12102509 -166.91360474]
[97.56763458 -151.92025757]
[98.01423645 -136.92689514]
[98.46084595 -121.93354797]
[98.90744781 -106.94020081]
[99.35405731 -91.94685364]
[100.35831451 -76.98050690]
[104.18062592 -70.65502167]
[101.82931519 -61.82840729]
[103.16754913 -46.88822556]
[104.50578308 -31.94803810]
[112.73616791 -44.48840332]
[126.39620209 -50.68545532]
[141.25317383 -48.61896896]
[152.70349121 -38.92926788]
[157.19914246 -24.61881447]
[153.34710693 -10.12185574]
[142.34098816 0.06956796]
[127.59112549 2.79753232]
[113.66795349 -2.78325176]
[104.88561249 -14.94376087]
[104.21582794 0.04127834]
[103.54604340 15.02631760]
[102.87625885 30.01135635]
[102.20647430 44.99639511]
[102.76468658 59.98600388]
[104.54714966 74.87972260]
[106.32961273 89.77343750]
[108.33362579 104.63896942]
[110.55874634 119.47301483]
[112.78386688 134.30705261]
[115.00897980 149.14109802]
[117.23410034 163.97514343]
[122.48081970 178.02761841]
[130.70962524 190.56901550]
[139.12423706 202.98651123]
[147.53886414 215.40400696]
[155.95347595 227.82150269]
[164.36810303 240.23899841]
[178.51483154 247.32279968]
[179.24931335 262.19927979]
[187.66394043 274.61679077]
[196.07855225 287.03427124]
[204.49317932 299.45178223]
[212.90779114 311.86926270]
[221.32241821 324.28677368]
[236.58668518 327.39157104]
[244.94340515 340.10455322]
[241.88938904 354.63757324]
[250.30400085 367.05505371]
[258.71862793 379.47256470]
[267.13323975 391.89004517]
[275.54785156 404.30755615]
[288.99584961 397.61163330]
[303.21633911 392.76800537]
[317.95556641 389.86303711]
[332.95046997 388.94857788]
[347.93347168 390.04101562]
[362.63714600 393.12078857]
[376.79913330 398.13293457]
[390.16665649 404.98803711]
[402.50119019 413.56375122]
[413.58261108 423.70703125]
[423.21310425 435.23684692]
[431.22085571 447.94744873]
[437.46295166 461.61196899]
[441.82797241 475.98660278]
[444.23803711 490.81478882]
[444.65014648 505.83190918]
[443.05691528 520.76995850]
[439.48678589 535.36230469]
[434.00347900 549.34863281]
[426.70483398 562.47924805]
[417.72113037 574.51989746]
[407.21267700 585.25561523]
[395.36700439 594.49487305]
[382.39553833 602.07275391]
[368.52975464 607.85406494]
[354.01708984 611.73553467]
[339.11654663 613.64801025]
[324.09405518 613.55731201]
[309.21771240 611.46502686]
[294.75299072 607.40850830]
[280.95803833 601.46020508]
[268.07901001 593.72625732]
[256.34579468 584.34460449]
[245.96775818 573.48272705]
[237.13012695 561.33453369]
[229.99058533 548.11669922]
[224.67658997 534.06518555]
[221.28294373 519.43078613]
[219.87022400 504.47457886]
[220.46363831 489.46353149]
[223.05261230 474.66555786]
[227.59091187 460.34466553]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 168]
[4 167]
[5 166]
[6 165]
[7 164]
[10 161]
[11 160]
[12 159]
[13 158]
[14 157]
[15 156]
[17 154]
[18 153]
[19 152]
[20 151]
[21 150]
[24 149]
[53 148]
[54 147]
[55 146]
[56 145]
[57 144]
[60 143]
[61 142]
[62 141]
[74 140]
[75 139]
[76 138]
[77 137]
[78 136]
[79 126]
[80 125]
[81 124]
[82 122]
[88 121]
[89 120]
[90 119]
[91 118]
[92 117]
[93 116]
[95 114]
[96 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
