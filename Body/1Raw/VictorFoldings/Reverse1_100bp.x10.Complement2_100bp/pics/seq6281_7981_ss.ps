%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxGACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGG\
) } def
/len { sequence length } bind def

/coor [
[79.26268005 485.00225830]
[68.43496704 474.55444336]
[59.78039932 462.24612427]
[53.61184692 448.52221680]
[50.15229416 433.87884521]
[49.52680588 418.84536743]
[51.75798798 403.96524048]
[56.76518631 389.77636719]
[64.36739349 376.79165649]
[74.28979492 365.48046875]
[86.17370605 356.25177002]
[99.58952332 349.43911743]
[114.05228424 345.28878784]
[112.71405029 330.34860229]
[111.37581635 315.40841675]
[110.03758240 300.46823120]
[108.69934845 285.52804565]
[107.36111450 270.58786011]
[106.02288055 255.64767456]
[104.68464661 240.70748901]
[103.23522186 225.77767944]
[101.67469788 210.85906982]
[92.65530396 199.00581360]
[98.91492462 184.47557068]
[95.83480835 180.82565308]
[95.01484680 175.20207214]
[97.53684235 169.09051514]
[96.42118835 154.13206482]
[95.30554199 139.17361450]
[94.18989563 124.21515656]
[93.07424164 109.25670624]
[85.56113434 122.23950958]
[72.92469025 130.32160950]
[57.98792267 131.69741821]
[44.08773804 126.05961609]
[34.32947922 114.66767120]
[30.89316559 100.06658173]
[34.54647827 85.51827240]
[44.47325516 74.27286530]
[58.45583344 68.84262085]
[73.37046814 70.44066620]
[85.88518524 78.70999908]
[93.20417786 91.80323792]
[94.54241180 76.86305237]
[95.88064575 61.92286682]
[88.22434998 51.54289246]
[89.64654541 39.12672806]
[98.84294128 31.26842880]
[92.58332062 16.73819351]
[101.60271454 4.88493252]
[103.16323853 -10.03367233]
[104.72376251 -24.95227814]
[106.28428650 -39.87088013]
[107.39993286 -54.82933426]
[108.06971741 -69.81437683]
[108.73950195 -84.79941559]
[109.40929413 -99.78445435]
[110.07907867 -114.76949310]
[110.74886322 -129.75453186]
[111.41864777 -144.73956299]
[112.08843231 -159.72460938]
[112.75821686 -174.70964050]
[101.37044525 -182.47557068]
[95.35472870 -194.75683594]
[96.18632507 -208.29855347]
[103.54125977 -219.57015991]
[115.40885162 -225.68591309]
[116.30166626 -240.65931702]
[117.19448090 -255.63272095]
[118.08730316 -270.60614014]
[118.98011780 -285.57952881]
[119.87293243 -300.55294800]
[120.76574707 -315.52633667]
[105.92249298 -317.75885010]
[91.33911896 -321.31292725]
[77.13304138 -326.15994263]
[63.41864014 -332.26086426]
[50.30633926 -339.56661987]
[37.90171814 -348.01834106]
[26.30464363 -357.54797363]
[15.60849762 -368.07882690]
[5.89939880 -379.52609253]
[-2.74447942 -391.79757690]
[-10.25354004 -404.79449463]
[-16.56732368 -418.41223145]
[-21.63499451 -432.54110718]
[-25.41574860 -447.06735229]
[-27.87914658 -461.87405396]
[-29.00535393 -476.84194946]
[-28.78530312 -491.85052490]
[-27.22076416 -506.77896118]
[-24.32433510 -521.50708008]
[-20.11933708 -535.91625977]
[-14.63962746 -549.89050293]
[-7.92932558 -563.31726074]
[-0.04245973 -576.08843994]
[8.95746803 -588.10125732]
[18.99799347 -599.25897217]
[29.99827576 -609.47167969]
[41.86974716 -618.65722656]
[54.51681900 -626.74163818]
[67.83766174 -633.65985107]
[81.72502899 -639.35607910]
[96.06710815 -643.78454590]
[110.74840546 -646.90954590]
[125.65073395 -648.70593262]
[140.65408325 -649.15924072]
[155.63768005 -648.26580811]
[170.48086548 -646.03283691]
[185.06413269 -642.47833252]
[199.27006531 -637.63085938]
[212.98428345 -631.52954102]
[226.09635925 -624.22338867]
[238.50071716 -615.77130127]
[250.09750366 -606.24127197]
[260.79333496 -595.71014404]
[270.50207520 -584.26257324]
[279.14556885 -571.99078369]
[286.65423584 -558.99365234]
[292.96762085 -545.37573242]
[298.03485107 -531.24670410]
[301.81515503 -516.72033691]
[304.27810669 -501.91357422]
[305.40386963 -486.94564819]
[305.18334961 -471.93704224]
[303.61834717 -457.00866699]
[300.72146606 -442.28063965]
[296.51602173 -427.87161255]
[291.03588867 -413.89755249]
[284.32519531 -400.47097778]
[276.43792725 -387.70001221]
[267.43765259 -375.68750000]
[257.39675903 -364.53009033]
[246.39617920 -354.31768799]
[234.52442932 -345.13250732]
[221.87710571 -337.04846191]
[208.55604553 -330.13070679]
[194.66850281 -324.43487549]
[180.32629395 -320.00686646]
[165.64489746 -316.88229370]
[150.74252319 -315.08636475]
[135.73915100 -314.63351440]
[134.84634399 -299.66012573]
[133.95352173 -284.68670654]
[133.06069946 -269.71331787]
[132.16789246 -254.73989868]
[131.27507019 -239.76649475]
[130.38226318 -224.79309082]
[143.39234924 -214.78234863]
[147.91723633 -198.82969666]
[141.98306274 -183.16806030]
[127.74325562 -174.03985596]
[127.07347107 -159.05482483]
[126.40368652 -144.06977844]
[125.73390198 -129.08474731]
[125.06411743 -114.09970856]
[124.39433289 -99.11466980]
[123.72454071 -84.12963104]
[123.05475616 -69.14459229]
[122.38497162 -54.15954971]
[124.17495728 -52.00221634]
[125.21824646 -49.00585938]
[125.19098663 -45.45133209]
[123.87688446 -41.73143005]
[121.20288849 -38.31035995]
[119.64236450 -23.39175415]
[118.08184814 -8.47314930]
[116.52132416 6.44545555]
[122.89255524 19.90861320]
[113.76154327 32.82895279]
[121.76062775 48.44886398]
[110.82083130 63.26110077]
[109.48259735 78.20128632]
[108.14436340 93.14147186]
[108.03269958 108.14105225]
[109.14834595 123.09951019]
[110.26399231 138.05796814]
[111.37964630 153.01641846]
[112.49529266 167.97486877]
[113.83352661 182.91505432]
[122.96453857 195.83538818]
[116.59330750 209.29855347]
[118.15383148 224.21716309]
[122.15904999 232.42666626]
[119.62482452 239.36924744]
[120.96305847 254.30943298]
[122.30130005 269.24963379]
[123.63953400 284.18981934]
[124.97776794 299.13000488]
[126.31600189 314.07019043]
[127.65423584 329.01037598]
[128.99246216 343.95056152]
[143.96258545 345.46447754]
[158.37557983 349.78445435]
[171.71043396 356.75424194]
[183.48510742 366.12194824]
[193.27394104 377.54888916]
[200.72306824 390.62203979]
[205.56323242 404.86877441]
[207.61944580 419.77407837]
[206.81736755 434.79916382]
[203.18601990 449.40087891]
[196.85665894 463.05136108]
[188.05809021 475.25717163]
[177.10838318 485.57705688]
[164.40333557 493.63796997]
[150.40225220 499.14852905]
[135.61126709 501.90951538]
[120.56504822 501.82113647]
[105.80751801 498.88656616]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 192]
[14 191]
[15 190]
[16 189]
[17 188]
[18 187]
[19 186]
[20 185]
[21 183]
[22 182]
[24 180]
[27 179]
[28 178]
[29 177]
[30 176]
[31 175]
[43 174]
[44 173]
[45 172]
[48 170]
[50 168]
[51 167]
[52 166]
[53 165]
[54 160]
[55 159]
[56 158]
[57 157]
[58 156]
[59 155]
[60 154]
[61 153]
[62 152]
[67 148]
[68 147]
[69 146]
[70 145]
[71 144]
[72 143]
[73 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
