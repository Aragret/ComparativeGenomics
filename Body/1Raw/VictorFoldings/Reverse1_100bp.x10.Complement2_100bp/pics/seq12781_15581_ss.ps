%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUGGCUAUAGCGGCUAUGCCAACAUAUCCUAACGAACUUACCGACGACACAACCGUAGACGAGCCCGCAUAGUAGUUGACUACUCGUUCUUCCUAUAUUxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[100.97086334 552.37359619]
[89.46840668 562.22100830]
[75.39080048 567.79772949]
[60.26508713 568.49884033]
[45.73198700 564.24822998]
[33.36794281 555.50695801]
[24.51411247 543.22332764]
[20.13089561 528.72967529]
[20.69374847 513.59814453]
[26.14161873 499.47021484]
[35.88356018 487.87826538]
[48.86284256 480.07974243]
[63.67156601 476.92056274]
[57.50148392 463.36404419]
[66.82385254 450.58108521]
[68.60631561 435.68734741]
[70.38878632 420.79364014]
[72.17124939 405.89993286]
[73.73177338 390.98132324]
[75.07000732 376.04113770]
[76.40824127 361.10095215]
[68.89513397 351.62045288]
[69.88776398 339.16259766]
[79.39769745 330.44915771]
[73.02645874 316.98599243]
[82.15747070 304.06564331]
[83.71799469 289.14703369]
[85.27851868 274.22842407]
[86.83904266 259.30984497]
[88.39956665 244.39122009]
[89.51521301 229.43276978]
[90.18499756 214.44773865]
[90.85478210 199.46269226]
[91.52456665 184.47766113]
[92.19435120 169.49261475]
[92.86414337 154.50758362]
[93.08747101 139.50924683]
[92.86414337 124.51090240]
[92.64081573 109.51256561]
[92.19420624 94.51921844]
[91.52442169 79.53417969]
[90.85463715 64.54914093]
[90.18485260 49.56410217]
[75.46517944 46.28285217]
[62.10685730 39.30857849]
[51.01768112 29.12201118]
[42.94950867 16.42196274]
[38.44724655 2.07737136]
[37.81206894 -12.93214321]
[41.08127213 -27.58317947]
[48.02614975 -40.87833023]
[58.16796112 -51.91409683]
[70.81095886 -59.94226837]
[85.09008026 -64.42066193]
[84.42029572 -79.40570068]
[83.75051117 -94.39073944]
[83.08072662 -109.37577820]
[80.85561371 -124.20982361]
[77.09931183 -138.73187256]
[73.34300995 -153.25393677]
[69.58670807 -167.77600098]
[65.83040619 -182.29804993]
[62.07410812 -196.82011414]
[51.12749863 -208.24299622]
[55.43110275 -222.50231934]
[51.67480087 -237.02438354]
[47.91850281 -251.54644775]
[44.05419540 -266.04013062]
[40.08209991 -280.50466919]
[28.96663475 -291.76330566]
[33.05746078 -306.08511353]
[29.08536720 -320.54965210]
[25.11326981 -335.01416016]
[21.14117432 -349.47869873]
[16.95350647 -335.07510376]
[7.33177710 -323.56759644]
[-6.10258579 -316.89544678]
[-21.08565521 -316.18295288]
[-35.09252167 -321.55023193]
[-45.76277924 -332.09280396]
[-51.29830551 -346.03402710]
[-50.76626587 -361.02459717]
[-44.25632095 -374.53829956]
[-32.86550522 -384.29788208]
[-18.51337242 -388.65866089]
[-3.61851358 -386.88577271]
[9.30902958 -379.27795410]
[18.09141159 -367.11578369]
[16.97576332 -382.07424927]
[15.86011505 -397.03268433]
[14.74446583 -411.99114990]
[13.62881756 -426.94961548]
[-1.17286396 -429.91824341]
[-14.62420654 -436.77127075]
[-25.72703171 -447.00015259]
[-33.65743637 -459.84582520]
[-37.82693100 -474.35504150]
[-37.92611313 -489.45117188]
[-33.94762039 -504.01391602]
[-26.18668365 -516.96270752]
[-15.21921730 -527.33654785]
[-1.85908043 -534.36572266]
[12.90231705 -537.52862549]
[27.96958160 -536.59045410]
[42.22462082 -531.62091064]
[54.60961914 -522.98870850]
[64.20552063 -511.33450317]
[70.30025482 -497.52304077]
[72.44155121 -482.57922363]
[70.47049713 -467.61199951]
[64.53337860 -453.73205566]
[55.07075500 -441.96932983]
[42.78482056 -433.19674683]
[28.58727074 -428.06524658]
[29.70291901 -413.10681152]
[30.81856728 -398.14834595]
[31.93421745 -383.18988037]
[33.04986572 -368.23144531]
[35.60569763 -353.45077515]
[39.57779312 -338.98626709]
[43.54988861 -324.52172852]
[47.52198792 -310.05722046]
[58.35334015 -299.83316040]
[54.54662323 -284.47674561]
[58.51871872 -270.01223755]
[63.32124329 -264.39462280]
[62.44055939 -255.30274963]
[66.19686127 -240.78068542]
[69.95316315 -226.25862122]
[80.63109589 -215.87445068]
[76.59616852 -200.57641602]
[80.35247040 -186.05435181]
[84.10876465 -171.53230286]
[87.86506653 -157.01023865]
[91.62136841 -142.48817444]
[95.37767029 -127.96611786]
[99.51861572 -142.38320923]
[108.80129242 -154.16590881]
[121.84866333 -161.56631470]
[136.72523499 -163.48663330]
[151.22415161 -159.64198303]
[163.19459534 -150.60270691]
[170.86080933 -137.70971680]
[173.08555603 -122.87561798]
[169.53881836 -108.30095673]
[160.74673462 -96.14780426]
[148.01354980 -88.21900177]
[133.22814941 -85.69074249]
[118.58387756 -88.93807983]
[106.25311279 -97.47929382]
[98.06576538 -110.04556274]
[98.73554993 -95.06052399]
[99.40533447 -80.07548523]
[100.07511902 -65.09044647]
[114.69685364 -61.90383148]
[128.00566101 -55.03562546]
[139.09159851 -44.94867706]
[147.19491577 -32.32613373]
[151.75819397 -18.02518463]
[152.46463013 -3.01885486]
[149.26008606 11.67020798]
[142.35711670 25.03941917]
[132.22096252 36.17469406]
[119.53812408 44.31292725]
[105.16989136 48.89431763]
[105.83967590 63.87935638]
[106.50946045 78.86439514]
[107.17924500 93.84943390]
[110.14834595 98.17359924]
[110.48334503 103.85348511]
[107.63915253 109.28923798]
[107.86248016 124.28757477]
[108.08580780 139.28591919]
[110.44392395 142.93190002]
[111.42091370 146.75421143]
[111.13094330 150.29699707]
[109.82449341 153.18832397]
[107.84918213 155.17736816]
[107.17938995 170.16239929]
[106.50960541 185.14744568]
[105.83982086 200.13247681]
[105.17003632 215.11752319]
[104.50025177 230.10255432]
[106.63717651 233.88244629]
[107.38492584 237.75611877]
[106.88460541 241.27536011]
[105.40837097 244.08381653]
[103.31816864 245.95175171]
[101.75764465 260.87036133]
[100.19712067 275.78897095]
[98.63660431 290.70755005]
[97.07608032 305.62615967]
[103.33569336 320.15640259]
[94.31629944 332.00967407]
[102.20264435 348.64959717]
[91.34842682 362.43917847]
[90.01019287 377.37936401]
[88.67195892 392.31954956]
[91.10267639 398.46798706]
[90.19908142 404.07873535]
[87.06496429 407.68237305]
[85.28250122 422.57611084]
[83.50003052 437.46981812]
[81.71756744 452.36352539]
[87.76015472 466.98535156]
[78.56528473 478.70303345]
[92.21028900 485.26751709]
[102.98273468 495.90863037]
[109.71410370 509.47207642]
[111.67422485 524.48663330]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 206]
[15 204]
[16 203]
[17 202]
[18 201]
[19 198]
[20 197]
[21 196]
[24 194]
[26 192]
[27 191]
[28 190]
[29 189]
[30 188]
[31 183]
[32 182]
[33 181]
[34 180]
[35 179]
[36 178]
[37 173]
[38 172]
[39 171]
[40 168]
[41 167]
[42 166]
[43 165]
[54 154]
[55 153]
[56 152]
[57 151]
[58 136]
[59 135]
[60 134]
[61 133]
[62 132]
[63 131]
[65 129]
[66 128]
[67 127]
[68 125]
[69 124]
[71 122]
[72 121]
[73 120]
[74 119]
[88 118]
[89 117]
[90 116]
[91 115]
[92 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
