%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUAAUCAGUAACAACCCACCACUAAUCAGCCAACAACUACUCUAUAAACCUCCACCCCUAGUUAUCUCCCCCUUUAUCUUACUAGUCAUGACGCCxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[280.16390991 78.54741669]
[281.32009888 93.49845123]
[281.23770142 108.49389648]
[279.91726685 123.43132019]
[277.36782837 138.20867920]
[273.60681152 152.72505188]
[268.65988159 166.88124084]
[262.56082153 180.58058167]
[255.35133362 193.72947693]
[247.08064270 206.23811340]
[237.80525208 218.02102661]
[227.58851624 228.99775696]
[216.50022888 239.09330750]
[204.61613464 248.23870850]
[192.01741028 256.37149048]
[178.79013062 263.43612671]
[165.02462769 269.38433838]
[150.81494141 274.17547607]
[136.25813293 277.77682495]
[121.45365906 280.16378784]
[106.50263214 281.32006836]
[91.50718689 281.23776245]
[76.56975555 279.91741943]
[61.79237747 277.36807251]
[47.27598953 273.60711670]
[33.11976242 268.66027832]
[19.42038727 262.56130981]
[6.27144957 255.35189819]
[-6.23723125 247.08128357]
[-18.02021027 237.80595398]
[-28.99699783 227.58929443]
[-39.09260941 216.50106812]
[-48.23808670 204.61701965]
[-56.37095642 192.01835632]
[-63.43566132 178.79110718]
[-69.38394165 165.02563477]
[-74.17517090 150.81597900]
[-77.77661133 136.25920105]
[-80.16366577 121.45473480]
[-81.32003021 106.50371552]
[-81.23780823 91.50827026]
[-79.91755676 76.57083130]
[-77.36829376 61.79343414]
[-73.60742950 47.27702713]
[-68.66066742 33.12076569]
[-62.56178665 19.42135811]
[-55.35245514 6.27237701]
[-47.08191681 -6.23635340]
[-37.80666351 -18.01938820]
[-27.59006119 -28.99623489]
[-16.50189590 -39.09191513]
[-4.61790991 -48.23746490]
[7.98071671 -56.37040710]
[21.20792389 -63.43518829]
[34.97335815 -69.38355255]
[49.18298340 -74.17486572]
[63.73973846 -77.77639008]
[78.54418945 -80.16353607]
[93.49520111 -81.31999207]
[108.49064636 -81.23786163]
[123.42809296 -79.91769409]
[138.20550537 -77.36852264]
[152.72193909 -73.60774994]
[166.87821960 -68.66106415]
[180.57766724 -62.56226730]
[193.72669983 -55.35301590]
[206.23547363 -47.08255005]
[218.01856995 -37.80736923]
[228.99546814 -27.59083176]
[239.09121704 -16.50272560]
[248.23683167 -4.61879492]
[260.83914185 -12.75401020]
[273.44146729 -20.88922691]
[286.04376221 -29.02444267]
[298.64608765 -37.15965652]
[311.24838257 -45.29487228]
[303.74475098 -58.28671265]
[296.89279175 -71.63374329]
[290.70928955 -85.30329132]
[285.20935059 -99.26191711]
[280.40643311 -113.47545624]
[276.31234741 -127.90911865]
[272.93704224 -142.52760315]
[270.28878784 -157.29510498]
[268.37411499 -172.17550659]
[267.19766235 -187.13240051]
[266.76232910 -202.12916565]
[267.06918335 -217.12910461]
[268.11746216 -232.09552002]
[269.90460205 -246.99179077]
[272.42623901 -261.78143311]
[275.67617798 -276.42828369]
[279.64648438 -290.89651489]
[284.32745361 -305.15066528]
[289.70761108 -319.15588379]
[295.77380371 -332.87789917]
[302.51116943 -346.28314209]
[309.90325928 -359.33880615]
[317.93191528 -372.01290894]
[326.57754517 -384.27444458]
[335.81896973 -396.09341431]
[345.63360596 -407.44091797]
[355.99740601 -418.28915405]
[366.88497925 -428.61160278]
[378.26974487 -438.38299561]
[390.12380981 -447.57937622]
[402.41815186 -456.17831421]
[415.12271118 -464.15872192]
[428.20639038 -471.50106812]
[441.63714600 -478.18737793]
[455.38214111 -484.20132446]
[469.40774536 -489.52816772]
[483.67959595 -494.15484619]
[498.16281128 -498.07009888]
[512.82189941 -501.26431274]
[527.62109375 -503.72964478]
[542.52404785 -505.46011353]
[557.49432373 -506.45144653]
[572.49530029 -506.70120239]
[587.49029541 -506.20883179]
[602.44262695 -504.97549438]
[617.31561279 -503.00421143]
[632.07293701 -500.29980469]
[646.67846680 -496.86892700]
[661.09649658 -492.71994019]
[675.29162598 -487.86297607]
[689.22924805 -482.30999756]
[702.87518311 -476.07452393]
[716.19604492 -469.17181396]
[729.15924072 -461.61880493]
[741.73303223 -453.43395996]
[753.88671875 -444.63729858]
[765.59045410 -435.25036621]
[776.81567383 -425.29614258]
[787.53485107 -414.79891968]
[797.72186279 -403.78448486]
[807.35162354 -392.27972412]
[816.40069580 -380.31280518]
[824.84686279 -367.91302490]
[832.66949463 -355.11071777]
[839.84942627 -341.93719482]
[846.36907959 -328.42474365]
[852.21252441 -314.60641479]
[857.36547852 -300.51599121]
[861.81524658 -286.18798828]
[865.55102539 -271.65744019]
[868.56365967 -256.95993042]
[870.84570312 -242.13142395]
[872.39166260 -227.20820618]
[873.19775391 -212.22679138]
[873.26190186 -197.22384644]
[872.58410645 -182.23608398]
[871.16583252 -167.30018616]
[869.01074219 -152.45269775]
[866.12396240 -137.72994995]
[862.51269531 -123.16798401]
[858.18566895 -108.80242920]
[853.15350342 -94.66843414]
[847.42846680 -80.80059814]
[841.02465820 -67.23284912]
[833.95770264 -53.99840164]
[826.24493408 -41.12962723]
[817.90515137 -28.65802956]
[808.95880127 -16.61412621]
[799.42779541 -5.02738762]
[789.33544922 6.07382870]
[778.70648193 16.66235733]
[767.56683350 26.71228409]
[755.94384766 36.19902039]
[743.86590576 45.09934235]
[731.36254883 53.39147568]
[718.46447754 61.05512619]
[705.20318604 68.07154083]
[691.61108398 74.42354584]
[677.72149658 80.09559631]
[663.56842041 85.07382202]
[649.18646240 89.34602356]
[634.61083984 92.90176392]
[619.87719727 95.73233032]
[605.02154541 97.83079529]
[590.08038330 99.19202423]
[575.09014893 99.81269073]
[560.08752441 99.69127655]
[545.10931396 98.82807922]
[530.19207764 97.22519684]
[515.37237549 94.88657379]
[500.68649292 91.81791687]
[486.17031860 88.02674103]
[471.85937500 83.52232361]
[457.78872681 78.31568146]
[443.99276733 72.41957092]
[430.50527954 65.84841156]
[417.35928345 58.61828232]
[404.58688354 50.74688339]
[392.21942139 42.25347137]
[380.28710938 33.15883255]
[368.81915283 23.48522186]
[357.84365845 13.25631714]
[347.38742065 2.49714613]
[337.47607422 -8.76595974]
[328.13385010 -20.50543976]
[319.38360596 -32.69256210]
[306.78131104 -24.55734634]
[294.17898560 -16.42213058]
[281.57669067 -8.28691483]
[268.97436523 -0.15169883]
[256.37203979 7.98351717]
[263.43661499 21.21084976]
[269.38470459 34.97639084]
[274.17578125 49.18610382]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[71 207]
[72 206]
[73 205]
[74 204]
[75 203]
[76 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
