%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUAUCACCCCCCAUUCCGCUCCAAUCGCUCCGAACGAUCUUCAGUAGUUUUUCGAUAAUCACCCUCAUCUCAAACUUCAGGAACUCUCUCCUAAUACxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[6.77043486 435.94290161]
[7.97475386 450.97000122]
[5.54716825 465.84851074]
[-0.37118477 479.71343994]
[-9.43622017 491.75872803]
[-21.12090874 501.28402710]
[-34.74591827 507.73559570]
[-49.51910782 510.73831177]
[-64.58158112 510.11761475]
[-79.05763245 505.90957642]
[-92.10563660 498.35888672]
[-102.96700287 487.90451050]
[-111.01026917 475.15423584]
[-115.76779938 460.84936523]
[-116.96300507 445.82156372]
[-114.52640533 430.94451904]
[-108.59964752 417.08316040]
[-99.52730560 405.04339600]
[-87.83684540 395.52517700]
[-74.20793152 389.08187866]
[-59.43292236 386.08813477]
[-44.37082672 386.71795654]
[-40.18381500 372.31417847]
[-35.99680328 357.91036987]
[-31.80979347 343.50659180]
[-27.62278175 329.10281372]
[-41.82514191 333.92910767]
[-54.53527451 325.96337891]
[-56.38374710 311.07772827]
[-46.00792694 300.24523926]
[-31.05648994 301.45126343]
[-22.55133629 313.80511475]
[-17.30461884 299.75265503]
[-12.05790043 285.70019531]
[-14.85468578 271.07052612]
[-2.77909875 260.84844971]
[2.46761942 246.79595947]
[7.71433783 232.74349976]
[4.91755247 218.11383057]
[16.99313927 207.89175415]
[5.47982740 217.50651550]
[-8.70574856 222.38191223]
[-23.69723129 221.87648010]
[-37.52223206 216.05674744]
[-48.36183929 205.68838501]
[-54.78990936 192.13552856]
[-55.96072388 177.18130493]
[-51.72024155 162.79316711]
[-42.62636948 150.86415100]
[-29.87556458 142.96371460]
[-15.14541149 140.13128662]
[-0.37391797 142.73953247]
[12.49547291 150.44529724]
[21.76957130 162.23475647]
[26.22821045 176.55677795]
[25.28420258 191.52938843]
[33.51300812 178.98799133]
[41.74181747 166.44659424]
[41.30463409 163.67765808]
[41.93791962 160.56871033]
[43.77667618 157.52659607]
[46.80626297 154.99952698]
[50.85240555 153.42385864]
[59.81309891 141.39448547]
[68.77379608 129.36511230]
[77.73448944 117.33573151]
[86.69519043 105.30635071]
[88.51278687 91.44316864]
[101.27543640 85.73294830]
[102.99322510 67.39908600]
[119.36763000 61.08673477]
[128.14823914 48.92528152]
[136.92883301 36.76382446]
[145.70944214 24.60236740]
[154.49003601 12.44091225]
[156.29518127 -3.27697754]
[170.01850891 -9.06657696]
[178.79910278 -21.22803307]
[187.57971191 -33.38948822]
[193.65354919 -47.10475540]
[196.75765991 -61.78005600]
[199.86177063 -76.45536041]
[195.14776611 -91.55796814]
[205.35137939 -102.40857697]
[196.99655151 -115.55523682]
[200.35360718 -130.39385986]
[212.93843079 -138.27789307]
[216.04254150 -152.95320129]
[217.04679871 -167.91954041]
[215.93115234 -182.87799072]
[214.81550598 -197.83644104]
[213.69984436 -212.79490662]
[212.58419800 -227.75335693]
[211.46855164 -242.71180725]
[196.81565857 -246.52906799]
[184.19755554 -254.89936829]
[174.98294067 -266.91476440]
[170.17134094 -281.27191162]
[170.28471375 -296.41342163]
[175.31072998 -310.69689941]
[184.70422363 -322.57296753]
[197.44625854 -330.75341797]
[212.15466309 -334.35083008]
[227.23397827 -332.97506714]
[241.04852295 -326.77529907]
[252.09980774 -316.42407227]
[259.18905640 -303.04418945]
[261.54727173 -288.08700562]
[258.91867065 -273.17495728]
[251.58837891 -259.92559814]
[240.35153198 -249.77610779]
[226.42700195 -243.82745361]
[227.54266357 -228.86900330]
[228.65830994 -213.91055298]
[229.77395630 -198.95208740]
[230.88960266 -183.99363708]
[232.00524902 -169.03518677]
[237.90534973 -182.82608032]
[247.56239319 -194.30395508]
[260.14096069 -202.47584534]
[274.55285645 -206.63481140]
[289.55133057 -206.42105103]
[303.83886719 -201.85307312]
[316.17944336 -193.32603455]
[325.50546265 -181.57762146]
[331.01013184 -167.62417603]
[332.21728516 -152.67283630]
[329.02243042 -138.01701355]
[321.70199585 -124.92459869]
[310.88928223 -114.52822113]
[297.51965332 -107.72725677]
[282.74972534 -105.11006927]
[267.85726929 -106.90306091]
[254.13063049 -112.95113373]
[242.75727844 -122.73105621]
[234.72114563 -135.39677429]
[230.71783447 -149.84909058]
[227.61372375 -135.17378235]
[235.92825317 -122.86913300]
[232.98930359 -107.94207001]
[220.02667236 -99.30446625]
[224.96270752 -85.25153351]
[214.53706360 -73.35124969]
[211.43295288 -58.67594910]
[208.32884216 -44.00064468]
[217.60214233 -55.79072189]
[229.09651184 -65.42813110]
[242.32318115 -72.50308228]
[256.71978760 -76.71474457]
[271.67413330 -77.88404083]
[286.55038452 -75.96124268]
[300.71600342 -71.02812195]
[313.56860352 -63.29442215]
[324.56176758 -53.08899307]
[333.22799683 -40.84577179]
[339.19882202 -27.08535004]
[342.22036743 -12.39282513]
[342.16412354 2.60706973]
[339.03253174 17.27653122]
[332.95870972 30.99180412]
[324.20092773 43.16971207]
[313.13159180 53.29243851]
[300.22134399 60.92956924]
[286.01916504 65.75635529]
[271.12893677 67.56757355]
[256.18374634 66.28620911]
[241.81913757 61.96673584]
[228.64587402 54.79282379]
[217.22407532 45.06951523]
[208.03942871 33.21025085]
[201.48245239 19.71928596]
[197.83197021 5.17026854]
[197.24317932 -9.81817150]
[199.74116516 -24.60888481]
[190.96057129 -12.44742966]
[182.17996216 -0.28597364]
[181.00286865 14.56204796]
[166.65150452 21.22151566]
[157.87089539 33.38297272]
[149.09028625 45.54442596]
[140.30969238 57.70588303]
[131.52908325 69.86734009]
[133.14677429 81.85523224]
[125.93103027 92.05900574]
[113.30480957 94.69364929]
[111.48721313 108.55683136]
[98.72456360 114.26705170]
[89.76387024 126.29642487]
[80.80317688 138.32580566]
[71.84247589 150.35517883]
[62.88178253 162.38455200]
[54.28321838 174.67539978]
[46.05440903 187.21679688]
[37.82560349 199.75819397]
[31.04561043 213.13847351]
[33.46711731 228.77326965]
[21.76680946 237.99021912]
[16.52009010 252.04267883]
[11.27337265 266.09515381]
[13.69487762 281.72994995]
[1.99457097 290.94689941]
[-3.25214720 304.99935913]
[-8.49886513 319.05184937]
[-13.21899986 333.28982544]
[-17.40601158 347.69360352]
[-21.59302139 362.09738159]
[-25.78003311 376.50119019]
[-29.96704483 390.90496826]
[-16.91446495 398.44775391]
[-6.04676151 408.89553833]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 208]
[23 207]
[24 206]
[25 205]
[26 204]
[32 203]
[33 202]
[34 201]
[36 199]
[37 198]
[38 197]
[40 195]
[56 194]
[57 193]
[58 192]
[63 191]
[64 190]
[65 189]
[66 188]
[67 187]
[69 185]
[71 182]
[72 181]
[73 180]
[74 179]
[75 178]
[77 176]
[78 175]
[79 174]
[80 145]
[81 144]
[82 143]
[84 141]
[87 138]
[88 137]
[89 117]
[90 116]
[91 115]
[92 114]
[93 113]
[94 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
