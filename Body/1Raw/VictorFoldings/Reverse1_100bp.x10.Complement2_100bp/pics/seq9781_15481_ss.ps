%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[-0.09402193 639.30718994]
[-9.08959007 651.75604248]
[-23.11099243 658.02471924]
[-38.38654327 656.42687988]
[-50.80719376 647.39233398]
[-57.03185272 633.35131836]
[-55.38611984 618.08087158]
[-46.31268311 605.68859863]
[-32.25226212 599.50799561]
[-30.69173813 584.58935547]
[-37.06297302 571.12622070]
[-27.93195724 558.20587158]
[-26.37143517 543.28729248]
[-24.81091118 528.36865234]
[-23.25038910 513.45007324]
[-29.62162399 499.98690796]
[-20.49061012 487.06655884]
[-18.93008614 472.14794922]
[-28.06943130 484.04217529]
[-41.21742630 491.26229858]
[-56.15840912 492.59161377]
[-70.37455750 487.80609131]
[-81.47019958 477.71218872]
[-87.57553101 464.01092529]
[-87.66168976 449.01116943]
[-81.71416473 435.24066162]
[-70.73520660 425.01995850]
[-56.57497025 420.07147217]
[-41.61970139 421.22906494]
[-28.38963127 428.29766846]
[-19.11425209 440.08609009]
[-15.35655499 454.60946655]
[-10.95555687 440.26962280]
[-6.55455875 425.92977905]
[-2.15356088 411.58993530]
[2.24743724 397.25009155]
[6.64843512 382.91024780]
[-6.45454407 375.65713501]
[-17.76746178 365.83425903]
[-26.79422760 353.86914062]
[-33.13833618 340.28335571]
[-36.52027512 325.66967773]
[-36.78984833 310.66635132]
[-33.93284607 295.92913818]
[-28.07175636 282.10266113]
[-19.46053505 269.79226685]
[-8.47359085 259.53738403]
[4.41048908 251.78811646]
[18.62978554 246.88520813]
[33.56355667 245.04530334]
[48.55933380 246.35122681]
[52.96033478 232.01138306]
[57.36133194 217.67153931]
[61.76232910 203.33169556]
[66.16333008 188.99185181]
[70.56432343 174.65199280]
[74.96532440 160.31214905]
[79.36632538 145.97230530]
[83.55332947 131.56852722]
[87.52542877 117.10399628]
[79.03683472 102.95085144]
[83.28849030 87.00434113]
[97.69647217 78.95587158]
[101.45277405 64.43380737]
[105.20907593 49.91175079]
[97.44960785 36.40514374]
[101.46590424 21.73122025]
[114.39021301 14.41699219]
[118.14651489 -0.10506693]
[121.90281677 -14.62712574]
[111.06607056 -25.42120934]
[107.11328125 -40.09336853]
[111.00933075 -54.67716980]
[121.61113739 -65.28177643]
[136.00061035 -69.12997437]
[139.75691223 -83.65203094]
[143.51321411 -98.17408752]
[147.26951599 -112.69615173]
[151.02581787 -127.21820831]
[154.78211975 -141.74026489]
[150.74719238 -157.03829956]
[161.42512512 -167.42247009]
[165.18142700 -181.94453430]
[168.61248779 -196.54685974]
[171.71659851 -211.22215271]
[165.34800720 -222.43840027]
[168.23554993 -234.59757996]
[178.30059814 -241.30738831]
[181.62284851 -255.93484497]
[184.94511414 -270.56231689]
[188.15838623 -285.21408081]
[191.26249695 -299.88940430]
[194.36660767 -314.56469727]
[197.47071838 -329.23999023]
[200.57482910 -343.91531372]
[203.67893982 -358.59060669]
[206.78305054 -373.26589966]
[192.94804382 -379.18865967]
[180.53453064 -387.69692993]
[170.01962280 -398.46371460]
[161.80752563 -411.07510376]
[156.21385193 -425.04638672]
[153.45362854 -439.84057617]
[153.63293457 -454.88894653]
[156.74490356 -469.61315918]
[162.66989136 -483.44720459]
[171.18017578 -495.85934448]
[181.94863892 -506.37249756]
[194.56137085 -514.58258057]
[208.53358459 -520.17395020]
[223.32818604 -522.93182373]
[238.37655640 -522.75006104]
[253.10025024 -519.63568115]
[266.93331909 -513.70849609]
[279.34408569 -505.19616699]
[289.85549927 -494.42599487]
[298.06353760 -481.81195068]
[303.65267944 -467.83883667]
[306.40811157 -453.04379272]
[306.22393799 -437.99545288]
[303.10720825 -423.27224731]
[297.17773438 -409.44012451]
[288.66342163 -397.03076172]
[277.89154053 -386.52108765]
[265.27615356 -378.31509399]
[251.30215454 -372.72821045]
[236.50665283 -369.97515869]
[221.45834351 -370.16180420]
[218.35423279 -355.48648071]
[215.25012207 -340.81118774]
[212.14601135 -326.13589478]
[209.04190063 -311.46057129]
[205.93778992 -296.78527832]
[202.83367920 -282.10998535]
[204.52494812 -274.91543579]
[199.57257080 -267.24005127]
[196.25030518 -252.61257935]
[192.92805481 -237.98512268]
[199.01432800 -221.52534485]
[186.39189148 -208.11804199]
[183.28778076 -193.44274902]
[184.89430237 -190.30404663]
[185.06037903 -186.23127747]
[183.36355591 -181.90992737]
[179.70347595 -178.18823242]
[175.94717407 -163.66616821]
[180.25077820 -149.40684509]
[169.30416870 -137.98396301]
[165.54786682 -123.46190643]
[161.79158020 -108.93984985]
[158.03527832 -94.41778564]
[154.27897644 -79.89572906]
[150.52267456 -65.37367249]
[161.24148560 -55.03092194]
[165.37162781 -40.61572266]
[161.70761108 -25.97190666]
[151.13632202 -15.05656910]
[136.42486572 -10.87082577]
[132.66857910 3.65123367]
[128.91227722 18.17329216]
[136.66906738 30.83692932]
[133.06651306 45.61787415]
[119.73113251 53.66805267]
[115.97483826 68.19010925]
[112.21853638 82.71217346]
[119.90451050 92.79083252]
[120.45526886 105.45378113]
[113.67337036 116.16169739]
[101.98995209 121.07609558]
[98.01786041 135.54061890]
[99.31718445 142.02314758]
[97.43083191 147.38400269]
[93.70616913 150.37330627]
[89.30516815 164.71315002]
[84.90417480 179.05299377]
[80.50317383 193.39283752]
[76.10218048 207.73269653]
[71.70117950 222.07254028]
[67.30017853 236.41238403]
[62.89918137 250.75222778]
[76.04577637 258.08340454]
[87.37630463 267.98397827]
[96.39710999 280.01943970]
[102.71582031 293.66220093]
[106.05846405 308.31491089]
[106.28128815 323.33654785]
[103.37699127 338.07046509]
[97.47491455 351.87313843]
[88.83526611 364.14215088]
[77.83768463 374.34265137]
[64.96453857 382.03054810]
[50.77976227 386.87185669]
[35.90417480 388.65731812]
[20.98828316 387.31124878]
[16.58728409 401.65109253]
[12.18628597 415.99093628]
[7.78528833 430.33078003]
[3.38429022 444.67062378]
[-1.01670778 459.01046753]
[-4.01148224 473.70846558]
[-5.57200527 488.62707520]
[0.68761075 503.15731812]
[-8.33178425 515.01055908]
[-9.89230728 529.92919922]
[-11.45283031 544.84777832]
[-13.01335335 559.76641846]
[-6.75373745 574.29663086]
[-15.77313232 586.14990234]
[-17.33365631 601.06848145]
[-4.85661125 610.02502441]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 209]
[10 208]
[12 206]
[13 205]
[14 204]
[15 203]
[17 201]
[18 200]
[32 199]
[33 198]
[34 197]
[35 196]
[36 195]
[37 194]
[51 180]
[52 179]
[53 178]
[54 177]
[55 176]
[56 175]
[57 174]
[58 173]
[59 170]
[60 169]
[63 165]
[64 164]
[65 163]
[68 160]
[69 159]
[70 158]
[75 153]
[76 152]
[77 151]
[78 150]
[79 149]
[80 148]
[82 146]
[83 145]
[84 141]
[85 140]
[88 138]
[89 137]
[90 136]
[91 134]
[92 133]
[93 132]
[94 131]
[95 130]
[96 129]
[97 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
