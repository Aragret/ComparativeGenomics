%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCGAACAAUAUUAAUACGGAGUAUCCCUAUCAUGUUCCUUCCCCAUCCGAUACACAAAACAGUCCCCCAACUCUUACUCACACUCCGCAUAAUAUGGUxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[75.89838409 568.45233154]
[62.32919312 574.93194580]
[47.86008072 579.02496338]
[32.90735245 580.61364746]
[17.90122604 579.65228271]
[3.27346039 576.16851807]
[-10.55507565 570.26263428]
[-23.18650818 562.10449219]
[-34.25740433 551.92889404]
[-43.44923401 540.02856445]
[-50.49752808 526.74584961]
[-55.19949722 512.46301270]
[-57.41984940 497.59097290]
[-57.09470749 482.55758667]
[-54.23342133 467.79544067]
[-48.91831970 453.72924805]
[-41.30232620 440.76373291]
[-31.60456848 429.27194214]
[-20.10407257 419.58450317]
[-7.13172722 411.98013306]
[6.93922472 406.67764282]
[21.70393562 403.82962036]
[36.73759460 403.51794434]
[38.96271133 388.68392944]
[41.18782806 373.84988403]
[43.41294479 359.01583862]
[45.63806152 344.18179321]
[47.86317825 329.34774780]
[50.08829498 314.51370239]
[36.65805054 321.19415283]
[22.99763680 314.99795532]
[19.17699814 300.49267578]
[28.01257133 288.37109375]
[42.99110031 287.56878662]
[53.07049179 298.67559814]
[56.39274979 284.04812622]
[59.71501160 269.42068481]
[63.03726959 254.79321289]
[66.35952759 240.16575623]
[64.77556610 232.94682312]
[69.84167480 225.34600830]
[73.38134766 210.76963806]
[76.92102051 196.19326782]
[80.46069336 181.61688232]
[84.00036621 167.04051208]
[86.66616058 152.27929688]
[88.44862366 137.38557434]
[90.23109436 122.49185944]
[91.79161835 107.57325745]
[93.01859283 92.62351990]
[94.13423920 77.66506958]
[95.24988556 62.70661545]
[96.36553955 47.74816132]
[97.48118591 32.78971100]
[98.59683228 17.83125687]
[99.71248627 2.87280297]
[98.15196228 -12.04580212]
[93.96495056 -26.44958305]
[80.39579773 -34.09914780]
[76.35475922 -48.76627731]
[83.73107147 -61.65525055]
[79.54405975 -76.05902863]
[75.35704803 -90.46281433]
[61.77238846 -102.89416504]
[66.61758423 -119.76102448]
[62.21658707 -134.10087585]
[57.81558990 -148.44071960]
[53.41458893 -162.78056335]
[47.95747375 -148.80845642]
[35.87555313 -139.91873169]
[20.91254234 -138.86598206]
[7.70489264 -145.97639465]
[0.34513918 -159.04673767]
[1.11378109 -174.02703857]
[9.77264595 -186.27546692]
[23.63869095 -191.99671936]
[38.41537094 -189.41801453]
[49.52410507 -179.33816528]
[47.07837677 -194.13743591]
[44.63265228 -208.93670654]
[42.18692398 -223.73597717]
[39.74119568 -238.53524780]
[36.42775345 -242.56863403]
[35.12322617 -247.02412415]
[35.65199280 -251.06584167]
[37.53212738 -254.04870605]
[35.74966049 -268.94241333]
[33.96719360 -283.83615112]
[18.98512077 -285.41259766]
[4.72964144 -290.28384399]
[-8.08419418 -298.20553589]
[-18.81364822 -308.78033447]
[-26.92053986 -321.47784424]
[-31.99822617 -335.66110229]
[-33.79201508 -350.61871338]
[-32.21192932 -365.60040283]
[-27.33722687 -379.85467529]
[-19.41242027 -392.66659546]
[-8.83501434 -403.39349365]
[3.86443233 -411.49731445]
[18.04892159 -416.57156372]
[33.00696564 -418.36172485]
[47.98827362 -416.77801514]
[62.24139023 -411.89984131]
[75.05138397 -403.97195435]
[85.77571106 -393.39193726]
[93.87644958 -380.69052124]
[98.94726562 -366.50482178]
[100.73380280 -351.54632568]
[99.14645386 -336.56539917]
[94.26484680 -322.31347656]
[86.33383179 -309.50540161]
[75.75122833 -298.78363037]
[63.04785919 -290.68597412]
[48.86091232 -285.61859131]
[50.64337540 -270.72488403]
[52.42584229 -255.83116150]
[54.54046631 -240.98097229]
[56.98619461 -226.18170166]
[59.43192291 -211.38243103]
[61.87764740 -196.58316040]
[64.32337952 -181.78388977]
[67.75444031 -167.18156433]
[72.15543365 -152.84172058]
[76.55643463 -138.50187683]
[80.95743561 -124.16202545]
[91.49365234 -118.21941376]
[95.27755737 -106.30867004]
[89.76083374 -94.64982605]
[93.94784546 -80.24604034]
[98.13485718 -65.84226227]
[111.27120209 -58.91608047]
[115.72261047 -44.36824417]
[108.36872864 -30.63659477]
[112.55574036 -16.23281288]
[115.19455719 -30.99887848]
[121.24539185 -44.72430420]
[130.36605835 -56.63285446]
[142.04071045 -66.05104065]
[155.60913086 -72.44622040]
[170.30390930 -75.45671844]
[185.29403687 -74.91226959]
[199.73170471 -70.84366608]
[212.80043030 -63.48100662]
[223.76107788 -53.24069214]
[231.99378967 -40.70185852]
[237.03297424 -26.57363510]
[238.59362793 -11.65504456]
[236.58747864 3.21019721]
[231.12800598 17.18138695]
[222.52395630 29.46838570]
[211.26193237 39.37630844]
[197.97886658 46.34480667]
[183.42596436 49.97978210]
[168.42626953 50.07566071]
[153.82809448 46.62701797]
[140.45701599 39.82889175]
[129.06925964 30.06575012]
[120.30884552 17.88974380]
[114.67093658 3.98845148]
[113.55529022 18.94690514]
[112.43963623 33.90535736]
[111.32398987 48.86381149]
[110.20834351 63.82226562]
[109.09268951 78.78071594]
[107.97704315 93.73917389]
[110.56565094 101.37275696]
[106.73179626 108.91149139]
[109.16252136 115.05991364]
[108.25892639 120.67066956]
[105.12480927 124.27433014]
[103.34234619 139.16804504]
[101.55987549 154.06176758]
[112.70664978 144.02436829]
[127.61191559 142.34118652]
[140.71638489 149.64002991]
[147.13240051 163.19860840]
[144.46694946 177.95988464]
[133.71418762 188.41828918]
[118.88462830 190.67308044]
[105.50932312 183.88328552]
[98.57673645 170.58018494]
[95.03707123 185.15655518]
[91.49739838 199.73294067]
[87.95772552 214.30931091]
[84.41805267 228.88568115]
[80.98699188 243.48800659]
[77.66472626 258.11547852]
[74.34246826 272.74291992]
[71.02021027 287.37039185]
[67.69795227 301.99786377]
[64.92234039 316.73880005]
[62.69722366 331.57284546]
[60.47210693 346.40689087]
[58.24699020 361.24093628]
[56.02186966 376.07498169]
[53.79675293 390.90902710]
[51.57163620 405.74307251]
[65.85221863 410.45190430]
[79.13151550 417.50656128]
[91.02745819 426.70410156]
[101.19776917 437.77984619]
[109.34983063 450.41519165]
[115.24909973 464.24658203]
[118.72583008 478.87600708]
[119.67999268 493.88259888]
[118.08413696 508.83456421]
[113.98418427 523.30169678]
[107.49808502 536.86779785]
[98.81246948 549.14245605]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 198]
[24 197]
[25 196]
[26 195]
[27 194]
[28 193]
[29 192]
[35 191]
[36 190]
[37 189]
[38 188]
[39 187]
[41 186]
[42 185]
[43 184]
[44 183]
[45 182]
[46 173]
[47 172]
[48 171]
[49 168]
[50 166]
[51 165]
[52 164]
[53 163]
[54 162]
[55 161]
[56 160]
[57 135]
[58 134]
[61 131]
[62 130]
[63 129]
[65 126]
[66 125]
[67 124]
[68 123]
[78 122]
[79 121]
[80 120]
[81 119]
[82 118]
[86 117]
[87 116]
[88 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
