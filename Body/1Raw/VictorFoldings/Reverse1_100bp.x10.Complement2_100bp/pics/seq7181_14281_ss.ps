%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[48.11616898 491.51522827]
[41.48486710 505.06838989]
[31.57097435 516.44281006]
[19.05043221 524.86291504]
[4.77691555 529.75463867]
[-10.27638531 530.78448486]
[-25.08311081 527.88220215]
[-38.63371277 521.24566650]
[-50.00429153 511.32736206]
[-58.41957855 498.80358887]
[-63.30580521 484.52816772]
[-64.32982635 469.47445679]
[-61.42181396 454.66885376]
[-54.78004837 441.12081909]
[-44.85737228 429.75408936]
[-32.33033371 421.34362793]
[-18.05304337 416.46292114]
[-2.99895167 415.44470215]
[-0.11367900 400.72482300]
[2.77159357 386.00491333]
[5.65686607 371.28503418]
[8.54213905 356.56515503]
[11.42741108 341.84524536]
[14.31268406 327.12536621]
[17.19795609 312.40545654]
[5.33550787 321.58599854]
[-9.65366173 322.15591431]
[-22.17896271 313.90261841]
[-27.56876755 299.90441895]
[-23.81281281 285.38226318]
[-12.31197548 275.75256348]
[2.64421535 274.60699463]
[15.47747040 282.37280273]
[21.40141487 296.15466309]
[26.01542473 281.88192749]
[30.62943459 267.60919189]
[35.24344254 253.33647156]
[39.85745239 239.06373596]
[34.63071823 228.15467834]
[38.35791397 216.22605896]
[49.56154251 209.83532715]
[54.38754272 195.63287354]
[59.21353912 181.43040466]
[58.09688568 178.85917664]
[57.93145370 175.69070435]
[58.94981766 172.28506470]
[61.25004196 169.07983398]
[64.77268219 166.54115295]
[70.43547058 152.65112305]
[76.09825897 138.76109314]
[81.76104736 124.87107086]
[72.84304810 114.61949158]
[69.19598389 101.53039551]
[71.52770996 88.14426422]
[79.38567352 77.05922699]
[91.24469757 70.42679596]
[104.80304718 69.53427887]
[110.67201233 55.73009872]
[116.54096985 41.92592239]
[122.40993500 28.12174416]
[128.27888489 14.31756783]
[120.32684326 3.05898070]
[118.98689270 -10.55068493]
[124.50258636 -22.94611549]
[135.33552551 -30.93308449]
[148.59263611 -32.51145172]
[154.66645813 -46.22671890]
[160.74029541 -59.94198608]
[166.81413269 -73.65725708]
[172.88796997 -87.37252045]
[178.96180725 -101.08778381]
[167.25303650 -91.71203613]
[153.32305908 -86.14823914]
[138.37696838 -84.87771606]
[123.70773315 -88.01039124]
[110.58439636 -95.27524567]
[100.14226532 -106.04380798]
[93.28467560 -119.38447571]
[90.60488892 -134.14315796]
[92.33473206 -149.04307556]
[98.32454681 -162.79524231]
[108.05615997 -174.20996094]
[120.68769073 -182.29972839]
[135.12638855 -186.36471558]
[150.12315369 -186.05325317]
[164.38061523 -181.39228821]
[176.66537476 -172.78503418]
[185.91465759 -160.97610474]
[191.32832336 -146.98710632]
[192.43803406 -132.02821350]
[189.14904785 -117.39679718]
[198.80986023 -128.87150574]
[208.47067261 -140.34620667]
[218.13148499 -151.82089233]
[227.70660400 -163.36720276]
[237.19549561 -174.98446655]
[246.68440247 -186.60173035]
[256.17330933 -198.21899414]
[265.66220093 -209.83625793]
[275.15109253 -221.45352173]
[264.61685181 -232.15290833]
[255.30119324 -243.92855835]
[247.31333923 -256.64236450]
[240.74693298 -270.14532471]
[235.67898560 -284.27908325]
[232.16888428 -298.87792969]
[230.25781250 -313.77072144]
[229.96817017 -328.78283691]
[231.30332947 -343.73825073]
[234.24766541 -358.46163940]
[238.76664734 -372.78036499]
[244.80729675 -386.52655029]
[252.29876709 -399.53906250]
[261.15325928 -411.66528320]
[271.26693726 -422.76306152]
[282.52124023 -432.70227051]
[294.78417969 -441.36642456]
[307.91201782 -448.65386963]
[321.75082397 -454.47924805]
[336.13833618 -458.77416992]
[350.90588379 -461.48834229]
[365.88034058 -462.58990479]
[380.88607788 -462.06597900]
[395.74722290 -459.92269897]
[410.28952026 -456.18515015]
[424.34243774 -450.89721680]
[437.74127197 -444.12084961]
[450.32885742 -435.93551636]
[461.95767212 -426.43719482]
[472.49133301 -415.73724365]
[481.80636597 -403.96109009]
[489.79351807 -391.24685669]
[496.35919189 -377.74353027]
[501.42639160 -363.60949707]
[504.93569946 -349.01046753]
[506.84597778 -334.11758423]
[507.13482666 -319.10546875]
[505.79882812 -304.15011597]
[502.85372925 -289.42687988]
[498.33395386 -275.10839844]
[492.29257202 -261.36251831]
[484.80041504 -248.35043335]
[475.94525146 -236.22468567]
[465.83099365 -225.12745667]
[454.57617188 -215.18882751]
[442.31274414 -206.52536011]
[429.18450928 -199.23860168]
[415.34539795 -193.41400146]
[400.95764160 -189.11982727]
[386.18994141 -186.40646362]
[371.21545410 -185.30569458]
[356.20971680 -185.83042908]
[341.34869385 -187.97451782]
[326.80661011 -191.71282959]
[312.75396729 -197.00154114]
[299.35552979 -203.77861023]
[286.76837158 -211.96461487]
[277.27944946 -200.34735107]
[267.79055786 -188.73008728]
[258.30166626 -177.11282349]
[248.81275940 -165.49555969]
[239.32386780 -153.87829590]
[237.52716064 -146.70936584]
[229.60618591 -142.16009521]
[219.94537354 -130.68539429]
[210.28456116 -119.21068573]
[200.62374878 -107.73599243]
[192.67706299 -95.01395416]
[186.60322571 -81.29868317]
[180.52940369 -67.58341980]
[174.45556641 -53.86815262]
[168.38172913 -40.15288544]
[162.30789185 -26.43762016]
[170.99459839 -12.50855541]
[169.65370178 4.01911163]
[158.61624146 16.61576462]
[142.08306885 20.18652916]
[136.21411133 33.99070740]
[130.34515381 47.79488373]
[124.47618866 61.59906006]
[118.60722351 75.40323639]
[128.45437622 88.10133362]
[130.57768250 104.02928925]
[124.40077972 118.86350250]
[111.60036469 128.57728577]
[95.65106964 130.53385925]
[89.98828888 144.42388916]
[84.32550049 158.31391907]
[78.66271210 172.20393372]
[73.41599274 186.25640869]
[68.58999634 200.45886230]
[63.76399994 214.66131592]
[67.76900482 232.63467407]
[54.13018417 243.67774963]
[49.51617813 257.95046997]
[44.90216827 272.22320557]
[40.28815842 286.49594116]
[35.67414856 300.76867676]
[31.91784859 315.29074097]
[29.03257561 330.01062012]
[26.14730263 344.73052979]
[23.26202965 359.45040894]
[20.37675667 374.17031860]
[17.49148560 388.89019775]
[14.60621262 403.61007690]
[11.72093964 418.32998657]
[25.27666283 424.95605469]
[36.65489578 434.86553955]
[45.07985306 447.38284302]
[49.97710419 461.65447998]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 206]
[19 205]
[20 204]
[21 203]
[22 202]
[23 201]
[24 200]
[25 199]
[34 198]
[35 197]
[36 196]
[37 195]
[38 194]
[41 192]
[42 191]
[43 190]
[48 189]
[49 188]
[50 187]
[51 186]
[57 181]
[58 180]
[59 179]
[60 178]
[61 177]
[66 173]
[67 172]
[68 171]
[69 170]
[70 169]
[71 168]
[91 167]
[92 166]
[93 165]
[94 164]
[95 162]
[96 161]
[97 160]
[98 159]
[99 158]
[100 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
