%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxGAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUU\
) } def
/len { sequence length } bind def

/coor [
[180.35293579 540.65856934]
[182.99250793 525.86737061]
[187.66502380 511.58755493]
[194.27949524 498.09698486]
[202.70716858 485.65832520]
[212.78402710 474.51367188]
[224.31388855 464.87997437]
[237.07234192 456.94473267]
[230.99850464 443.22949219]
[224.92468262 429.51422119]
[218.74891663 415.84454346]
[212.26940918 402.31619263]
[205.58921814 388.88583374]
[198.90902710 375.45544434]
[184.03468323 374.66830444]
[171.46784973 366.48721313]
[164.63815308 353.02536011]
[165.46910095 337.85278320]
[173.83753967 325.04980469]
[167.15734863 311.61941528]
[160.47714233 298.18905640]
[153.79695129 284.75866699]
[148.00355530 280.16973877]
[147.11895752 271.07824707]
[140.63946533 257.54989624]
[134.15995789 244.02154541]
[127.68046570 230.49320984]
[121.20097351 216.96485901]
[118.60489655 215.90725708]
[116.27132416 213.75759888]
[114.61830902 210.61070251]
[114.02188110 206.71086121]
[114.76545715 202.43289185]
[109.10266876 188.54286194]
[107.14978027 203.41519165]
[100.02029419 216.61254883]
[88.65222931 226.39862061]
[74.54123688 231.48583984]
[59.54386520 231.20494080]
[45.63328171 225.59283447]
[34.63965607 215.38792419]
[28.00939369 201.93283081]
[26.61481476 186.99780273]
[30.63940430 172.54779053]
[39.55365753 160.48396301]
[52.18474960 152.39350891]
[66.87084198 149.34086609]
[81.67973328 151.72766113]
[94.66305542 159.23988342]
[104.11376190 170.89125061]
[101.66802979 156.09197998]
[99.22230530 141.29270935]
[96.77658081 126.49343109]
[94.33084869 111.69416046]
[91.44557953 96.97427368]
[88.12332153 82.34680939]
[84.80105591 67.71935272]
[81.47879791 53.09188843]
[70.87714386 41.34814835]
[75.60339355 27.22328186]
[72.28113556 12.59582138]
[61.67948151 0.85207760]
[66.40573120 -13.27278805]
[63.08347321 -27.90024757]
[55.95443726 -14.70264149]
[42.47983932 -8.11210060]
[27.68537331 -10.58673382]
[17.08901024 -21.20356560]
[14.64293194 -36.00277710]
[21.25946236 -49.46463013]
[34.47080231 -56.56818771]
[49.34944534 -54.66399765]
[60.34660339 -44.46125412]
[58.78607941 -59.37985992]
[46.79241180 -69.31916046]
[45.42234039 -84.47097778]
[54.97185516 -95.84385681]
[53.41133118 -110.76245880]
[44.28031921 -123.68280029]
[50.65155411 -137.14595032]
[49.09103012 -152.06455994]
[47.53050613 -166.98316956]
[45.96998215 -181.90176392]
[36.26866531 -186.34117126]
[29.33818436 -194.34588623]
[26.37838936 -204.42770386]
[27.85903358 -214.74859619]
[33.44660568 -223.45574951]
[42.07646179 -229.01422119]
[41.18364334 -243.98762512]
[40.29082870 -258.96102905]
[39.39801407 -273.93441772]
[30.85302925 -287.24960327]
[37.81906891 -300.41485596]
[36.92625427 -315.38824463]
[22.39165878 -319.69189453]
[10.20738220 -328.70959473]
[1.84473801 -341.35247803]
[-1.68644512 -356.09378052]
[0.04024079 -371.15347290]
[6.81628990 -384.71301270]
[17.82346153 -395.13500977]
[31.73258591 -401.16094971]
[46.86406708 -402.06320190]
[61.39070892 -397.73278809]
[73.55834198 -388.69262695]
[81.89767456 -376.03436279]
[85.40168762 -361.28656006]
[83.64725494 -346.23010254]
[76.84622192 -332.68307495]
[65.81987000 -322.28137207]
[51.89966202 -316.28106689]
[52.79247665 -301.30764771]
[61.27360153 -289.06347656]
[54.37141800 -274.82723999]
[55.26423264 -259.85385132]
[56.15705109 -244.88043213]
[57.04986572 -229.90702820]
[72.53027344 -218.08030701]
[74.34999847 -198.37771606]
[60.88858795 -183.46229553]
[62.44911194 -168.54368591]
[64.00963593 -153.62507629]
[65.57015991 -138.70648193]
[74.58955383 -126.85321808]
[68.32993317 -112.32298279]
[69.89045715 -97.40437317]
[81.58676910 -88.25386810]
[83.38188934 -73.14650726]
[73.70468140 -60.94038391]
[75.26520538 -46.02177811]
[77.71093750 -31.22250748]
[81.03319550 -16.59504700]
[91.39721680 -5.89755774]
[86.90859985 9.27356148]
[90.23085785 23.90102196]
[100.59487915 34.59851074]
[96.10626221 49.76963043]
[99.42852020 64.39709473]
[102.75077820 79.02455139]
[106.07303619 93.65200806]
[108.50506592 95.48905945]
[110.32241821 98.25162506]
[111.18100739 101.71374512]
[110.82505798 105.52551270]
[109.13011932 109.24843597]
[111.57585144 124.04770660]
[114.02157593 138.84696960]
[116.46730804 153.64624023]
[118.91303253 168.44551086]
[122.99269867 182.88006592]
[128.65548706 196.77009583]
[134.72932434 210.48536682]
[141.20881653 224.01371765]
[147.68830872 237.54205322]
[154.16780090 251.07040405]
[160.64730835 264.59875488]
[167.22732544 278.07849121]
[173.90753174 291.50885010]
[180.58772278 304.93923950]
[187.26791382 318.36959839]
[202.52711487 319.42034912]
[215.12840271 327.91177368]
[221.74349976 341.48037720]
[220.68586731 356.43823242]
[212.33940125 368.77523804]
[219.01959229 382.20562744]
[225.69978333 395.63601685]
[230.98928833 399.60244751]
[233.15632629 404.85610962]
[232.37222290 409.56716919]
[238.80575562 416.05157471]
[238.63993835 423.44036865]
[244.71377563 437.15563965]
[250.78761292 450.87091064]
[265.23815918 446.75659180]
[280.12069702 444.69351196]
[295.14550781 444.72183228]
[310.02017212 446.84100342]
[324.45510864 451.00976562]
[338.16934204 457.14700317]
[350.89596558 465.13323975]
[362.38717651 474.81298828]
[372.41937256 485.99786377]
[380.79721069 498.47015381]
[387.35763550 511.98706055]
[391.97299194 526.28546143]
[394.55337524 541.08709717]
[395.04855347 556.10375977]
[393.44894409 571.04321289]
[389.78567505 585.61468506]
[384.13000488 599.53442383]
[376.59207153 612.53155518]
[367.31857300 624.35308838]
[356.49002075 634.76885986]
[344.31723022 643.57623291]
[331.03710938 650.60363770]
[316.90820312 655.71435547]
[302.20547485 658.80889893]
[287.21514893 659.82702637]
[272.22903442 658.74896240]
[257.53881836 655.59558105]
[243.43045044 650.42834473]
[230.17857361 643.34783936]
[218.04110718 634.49188232]
[207.25433350 624.03283691]
[198.02821350 612.17431641]
[190.54232788 599.14709473]
[184.94241333 585.20483398]
[181.33746338 570.61889648]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 175]
[9 174]
[10 173]
[11 171]
[12 168]
[13 167]
[14 166]
[19 161]
[20 160]
[21 159]
[22 158]
[24 157]
[25 156]
[26 155]
[27 154]
[28 153]
[33 152]
[34 151]
[50 150]
[51 149]
[52 148]
[53 147]
[54 146]
[55 141]
[56 140]
[57 139]
[58 138]
[60 136]
[61 135]
[63 133]
[64 132]
[73 131]
[74 130]
[77 127]
[78 126]
[80 124]
[81 123]
[82 122]
[83 121]
[89 118]
[90 117]
[91 116]
[92 115]
[94 113]
[95 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
