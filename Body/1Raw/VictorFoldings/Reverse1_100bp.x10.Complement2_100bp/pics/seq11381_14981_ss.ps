%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGGCGGAUCAAAAUUCUCAUGACGCCGUUCAUGAUAACUGGGUCGCUACCCCCGAAGCUGUACCCGAAAUCCCUCAGUAUUCACCUCAGGCAUUUCUCxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[55.91644287 671.95318604]
[55.52759552 687.25378418]
[48.06263733 700.61535645]
[35.23695374 708.96765137]
[19.99780083 710.39129639]
[5.84701777 704.55914307]
[-3.96364665 692.81140137]
[-7.17977333 677.84759521]
[-3.06232047 663.10632324]
[7.44255161 651.97503662]
[21.92090034 647.01153564]
[24.14601707 632.17749023]
[26.37113571 617.34344482]
[28.59625244 602.50939941]
[19.56294060 593.32092285]
[17.43956375 580.41455078]
[23.22242355 568.46594238]
[35.00202179 561.93481445]
[37.44775009 547.13555908]
[39.89347458 532.33630371]
[42.33920288 517.53704834]
[44.78493118 502.73776245]
[29.60289001 495.76239014]
[16.97640038 484.80010986]
[7.92398405 470.72515869]
[3.17865872 454.66329956]
[3.12858915 437.90173340]
[7.78534698 421.78594971]
[16.78237534 407.61169434]
[29.40382957 396.52084351]
[44.64152908 389.40936279]
[61.27549362 386.85494995]
[63.05796051 371.96121216]
[64.84042358 357.06750488]
[58.67034149 343.51098633]
[67.99270630 330.72802734]
[69.77517700 315.83432007]
[71.55764008 300.94058228]
[65.38755798 287.38406372]
[74.70992279 274.60110474]
[76.49239349 259.70739746]
[78.27485657 244.81367493]
[80.05731964 229.91995239]
[81.72886658 215.01338196]
[83.28938293 200.09477234]
[75.29030609 184.47486877]
[86.23009491 169.66262817]
[87.56832886 154.72244263]
[88.90656281 139.78225708]
[90.24479675 124.84207153]
[91.58303070 109.90188599]
[92.47584534 94.92848206]
[92.92245483 79.93512726]
[92.92245483 64.93512726]
[92.47584534 49.94178009]
[92.02924347 34.94842911]
[77.25836945 32.01120758]
[63.51813889 25.86349297]
[51.49634171 16.81654167]
[41.79397202 5.32665586]
[34.89516449 -8.02784634]
[31.14305878 -22.57572556]
[30.72271919 -37.58656693]
[33.65201187 -52.30744934]
[39.78086853 -66.00070953]
[48.79897690 -77.98090363]
[60.25149155 -87.64914703]
[73.56195831 -94.52298737]
[88.06135559 -98.26055908]
[87.61474609 -113.25390625]
[79.46999359 -126.81759644]
[86.82492828 -139.76959229]
[86.37832642 -154.76293945]
[85.93171692 -169.75628662]
[73.99788666 -176.65371704]
[67.08539581 -188.45355225]
[66.90749359 -202.01960754]
[73.40371704 -213.80702209]
[84.78356934 -220.78851318]
[84.56024170 -235.78684998]
[84.33691406 -250.78518677]
[81.65844727 -255.26545715]
[81.02928925 -259.86517334]
[82.15175629 -263.78375244]
[84.45356750 -266.45471191]
[84.90017700 -281.44805908]
[85.34677887 -296.44140625]
[83.15381622 -300.18905640]
[82.34848022 -304.05117798]
[82.79634857 -307.57748413]
[84.23060608 -310.40759277]
[86.29276276 -312.30642700]
[87.63099670 -327.24661255]
[88.96923065 -342.18679810]
[90.30746460 -357.12698364]
[91.64569855 -372.06716919]
[92.98393250 -387.00735474]
[94.32216644 -401.94754028]
[80.26095581 -407.46652222]
[68.32503510 -416.72451782]
[59.48200607 -428.97103882]
[54.44873047 -443.21331787]
[53.63322830 -458.29681396]
[57.10161209 -472.99874878]
[64.57271576 -486.12731934]
[75.44089508 -496.61825562]
[88.82510376 -503.62106323]
[103.64035797 -506.56811523]
[118.68563843 -505.22045898]
[132.74130249 -499.68737793]
[144.66790771 -490.41738892]
[153.49862671 -478.16198730]
[158.51759338 -463.91464233]
[159.31794739 -448.83035278]
[155.83479309 -434.13189697]
[148.35050964 -421.01083374]
[137.47180176 -410.53085327]
[124.08055878 -403.54147339]
[109.26235199 -400.60931396]
[107.92411804 -385.66912842]
[106.58588409 -370.72894287]
[105.24765015 -355.78875732]
[103.90941620 -340.84857178]
[102.57118225 -325.90838623]
[101.23294830 -310.96820068]
[100.34013367 -295.99478149]
[99.89352417 -281.00143433]
[99.44692230 -266.00808716]
[99.33525085 -251.00851440]
[99.55857849 -236.01017761]
[99.78190613 -221.01184082]
[113.50053406 -211.99645996]
[119.19938660 -196.42454529]
[114.44651031 -180.36491394]
[100.92506409 -170.20289612]
[101.37167358 -155.20954895]
[101.81827545 -140.21620178]
[109.93108368 -127.72493744]
[102.60810089 -113.70051575]
[103.05470276 -98.70716095]
[117.75086212 -95.83924103]
[131.44686890 -89.76983643]
[143.45454407 -80.80040741]
[153.16973877 -69.37821198]
[160.10276794 -56.07402802]
[163.90306091 -41.55360031]
[164.37693787 -26.54435539]
[161.49737549 -11.79893780]
[155.40568542 1.94251132]
[146.40440369 13.98952293]
[134.94239807 23.73598289]
[121.59245300 30.69063187]
[107.02259064 34.50182343]
[107.46920013 49.49517441]
[107.91580200 64.48852539]
[109.86128998 66.50675201]
[111.12454224 69.41721344]
[111.36173248 72.96392059]
[110.32794189 76.77125549]
[107.91580200 80.38173676]
[107.46920013 95.37508392]
[109.36370087 97.76263428]
[110.43134308 100.89227295]
[110.39559174 104.45909119]
[109.09644318 108.06026459]
[106.52321625 111.24011993]
[105.18498230 126.18030548]
[103.84674835 141.12048340]
[102.50851440 156.06066895]
[101.17028046 171.00085449]
[108.82658386 181.38082886]
[107.40438843 193.79699707]
[98.20799255 201.65530396]
[96.64746857 216.57389832]
[98.86710358 225.43455505]
[94.95104218 231.70242310]
[93.16857147 246.59613037]
[91.38610840 261.48986816]
[89.60364532 276.38357544]
[95.64623260 291.00540161]
[86.45135498 302.72305298]
[84.66889191 317.61676025]
[82.88642883 332.51049805]
[88.92901611 347.13232422]
[79.73413849 358.84997559]
[77.95167542 373.74368286]
[76.16921234 388.63742065]
[88.67676544 393.36181641]
[99.80409241 400.75921631]
[108.98954010 410.45181274]
[115.77047729 421.94610596]
[119.80656433 434.65789795]
[120.89685059 447.94216919]
[118.98977661 461.12567139]
[114.18558502 473.54107666]
[106.73107910 484.56076050]
[97.00692749 493.62857056]
[85.50825500 500.28787231]
[72.81938934 504.20446777]
[59.58420181 505.18347168]
[57.13847351 519.98272705]
[54.69274521 534.78204346]
[52.24702072 549.58129883]
[49.80129242 564.38055420]
[60.24731064 578.41265869]
[57.36956406 595.32519531]
[43.43029404 604.73455811]
[41.20517731 619.56860352]
[38.98006058 634.40258789]
[36.75494385 649.23663330]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 210]
[12 209]
[13 208]
[14 207]
[18 204]
[19 203]
[20 202]
[21 201]
[22 200]
[32 187]
[33 186]
[34 185]
[36 183]
[37 182]
[38 181]
[40 179]
[41 178]
[42 177]
[43 176]
[44 174]
[45 173]
[47 170]
[48 169]
[49 168]
[50 167]
[51 166]
[52 161]
[53 160]
[54 155]
[55 154]
[56 153]
[69 140]
[70 139]
[72 137]
[73 136]
[74 135]
[79 131]
[80 130]
[81 129]
[85 128]
[86 127]
[87 126]
[92 125]
[93 124]
[94 123]
[95 122]
[96 121]
[97 120]
[98 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
