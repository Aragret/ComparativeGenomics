%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[91.37749481 797.01190186]
[77.62511444 790.99298096]
[64.51785278 783.67486572]
[52.17808533 775.12585449]
[40.72103882 765.42578125]
[30.25368690 754.66516113]
[20.87375641 742.94458008]
[12.66883183 730.37341309]
[5.71552038 717.06896973]
[0.07874577 703.15563965]
[-4.18886232 688.76312256]
[-7.04745674 674.02600098]
[-8.47034740 659.08172607]
[-8.44424915 644.06988525]
[-6.96940565 629.13067627]
[-4.05958652 614.40356445]
[0.25803900 600.02600098]
[5.94315720 586.13232422]
[12.94268608 572.85217285]
[21.19127274 560.30957031]
[30.61189842 548.62164307]
[41.11660385 537.89758301]
[52.60730743 528.23736572]
[64.97672272 519.73132324]
[78.10935211 512.45880127]
[91.88258362 506.48773193]
[106.16780853 501.87384033]
[120.83165741 498.66024780]
[119.04918671 483.76654053]
[117.26672363 468.87283325]
[115.48426056 453.97909546]
[103.65299988 445.00375366]
[101.63316345 429.92480469]
[111.12756348 417.57592773]
[109.34509277 402.68222046]
[106.81417084 400.22726440]
[105.34658051 396.42449951]
[105.56286621 391.78698730]
[107.83094025 387.08560181]
[106.71529388 372.12713623]
[105.59963989 357.16870117]
[96.93716431 345.05215454]
[103.62662506 330.71472168]
[102.51097107 315.75625610]
[101.39532471 300.79782104]
[98.97654724 298.23229980]
[97.68022156 294.36776733]
[98.10337067 289.74453735]
[100.57910919 285.14913940]
[100.13249969 270.15579224]
[99.68589783 255.16242981]
[99.23928833 240.16908264]
[98.79267883 225.17573547]
[98.34607697 210.18238831]
[97.89946747 195.18904114]
[97.45286560 180.19569397]
[97.00625610 165.20233154]
[96.22493744 150.22270203]
[87.56245422 138.10615540]
[94.25191498 123.76873016]
[93.13626862 108.81027985]
[91.90929413 93.86054230]
[90.57106018 78.92035675]
[89.23282623 63.98017120]
[87.78340149 49.05036545]
[86.22288513 34.13175964]
[84.66236115 19.21315575]
[83.10183716 4.29455042]
[81.54131317 -10.62405491]
[74.00000000 2.34238672]
[61.03524017 9.88658905]
[46.03598785 10.03651524]
[32.92301559 2.75297642]
[25.12401962 -10.06012917]
[24.67764091 -25.05348587]
[31.70056152 -38.30786514]
[44.35700607 -46.35860825]
[59.33860779 -47.10126495]
[72.72921753 -40.34170914]
[81.02827454 -27.84771347]
[81.69805908 -42.83275223]
[74.58468628 -56.96464920]
[82.88256836 -69.33374023]
[83.55235291 -84.31877899]
[84.22213745 -99.30381775]
[84.89192963 -114.28885651]
[85.33853149 -129.28219604]
[85.56185913 -144.28054810]
[85.78518677 -159.27888489]
[86.00851440 -174.27722168]
[86.23184204 -189.27555847]
[86.45516968 -204.27389526]
[75.72757721 -215.56797791]
[76.16772461 -230.77525330]
[87.00102997 -240.93276978]
[87.22435760 -255.93110657]
[84.22306061 -264.55838013]
[87.56431580 -271.15063477]
[88.01092529 -286.14398193]
[74.13220215 -292.34475708]
[63.68650055 -303.38812256]
[58.26671219 -317.59002686]
[58.69931412 -332.78482056]
[64.91833496 -346.65536499]
[75.97542572 -357.08651733]
[90.18445587 -362.48764038]
[105.37865448 -362.03503418]
[119.24101257 -355.79779053]
[129.65762329 -344.72698975]
[135.04002380 -330.51086426]
[134.56745911 -315.31726074]
[128.31196594 -301.46313477]
[117.22746277 -291.06109619]
[103.00427246 -285.69738770]
[102.55767059 -270.70404053]
[102.22269440 -255.70777893]
[101.99936676 -240.70944214]
[112.52543640 -230.23387146]
[112.51261139 -215.02024841]
[101.45350647 -204.05056763]
[101.23017883 -189.05223083]
[101.00685120 -174.05389404]
[100.78352356 -159.05555725]
[100.56019592 -144.05722046]
[100.33686829 -129.05886841]
[102.96143341 -125.06880188]
[103.10733032 -119.38762665]
[99.87696838 -113.61907196]
[99.20717621 -98.63402557]
[98.53739166 -83.64898682]
[97.86760712 -68.66394806]
[105.02889252 -55.60388565]
[96.68309784 -42.16296768]
[96.01331329 -27.17792702]
[96.45991516 -12.18457794]
[98.02043915 2.73402715]
[99.58096313 17.65263176]
[101.14148712 32.57123566]
[102.70201111 47.48984146]
[106.52432251 53.81532288]
[104.17301178 62.64193726]
[105.51124573 77.58212280]
[106.84947968 92.52230835]
[110.64808655 99.63167572]
[108.09471893 107.69462585]
[109.21037292 122.65308380]
[117.95265198 135.83955383]
[111.18338776 149.10705566]
[114.12377930 153.41996765]
[115.02560425 157.97407532]
[114.13835907 161.95249939]
[111.99961090 164.75573730]
[112.44621277 179.74908447]
[112.89282227 194.74243164]
[113.33942413 209.73577881]
[113.78603363 224.72912598]
[114.23263550 239.72247314]
[114.67924500 254.71583557]
[115.12584686 269.70916748]
[115.57245636 284.70254517]
[116.35377502 299.68215942]
[117.46942902 314.64062500]
[118.58507538 329.59906006]
[127.32735443 342.78555298]
[120.55809784 356.05303955]
[121.67374420 371.01150513]
[122.78939056 385.96994019]
[124.23881531 400.89974976]
[126.02127838 415.79348755]
[138.16160583 425.55310059]
[139.75711060 440.68283081]
[130.37797546 452.19665527]
[132.16044617 467.09036255]
[133.94290161 481.98406982]
[135.72537231 496.87777710]
[150.73342896 496.54028320]
[165.70397949 497.65283203]
[180.49728394 500.20510864]
[194.97517395 504.17321777]
[209.00250244 509.52014160]
[222.44828796 516.19598389]
[235.18698120 524.13830566]
[247.09963989 533.27307129]
[258.07504272 543.51495361]
[268.01071167 554.76831055]
[276.81390381 566.92803955]
[284.40237427 579.88067627]
[290.70529175 593.50524902]
[295.66381836 607.67456055]
[299.23162842 622.25622559]
[301.37545776 637.11425781]
[302.07522583 652.10974121]
[301.32446289 667.10284424]
[299.13012695 681.95343018]
[295.51272583 696.52288818]
[290.50607300 710.67523193]
[284.15682983 724.27832031]
[276.52435303 737.20501709]
[267.67990112 749.33477783]
[257.70599365 760.55426025]
[246.69583130 770.75878906]
[234.75216675 779.85296631]
[221.98654175 787.75195312]
[208.51814270 794.38201904]
[194.47270203 799.68121338]
[179.98139954 803.60009766]
[165.17950439 806.10198975]
[150.20524597 807.16363525]
[135.19844055 806.77508545]
[120.29917908 804.94000244]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 175]
[29 174]
[30 173]
[31 172]
[34 169]
[35 168]
[39 167]
[40 166]
[41 165]
[43 163]
[44 162]
[45 161]
[49 160]
[50 159]
[51 158]
[52 157]
[53 156]
[54 155]
[55 154]
[56 153]
[57 152]
[58 148]
[60 146]
[61 145]
[62 143]
[63 142]
[64 141]
[65 139]
[66 138]
[67 137]
[68 136]
[69 135]
[80 134]
[81 133]
[83 131]
[84 130]
[85 129]
[86 128]
[87 125]
[88 124]
[89 123]
[90 122]
[91 121]
[92 120]
[95 117]
[96 116]
[98 115]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
