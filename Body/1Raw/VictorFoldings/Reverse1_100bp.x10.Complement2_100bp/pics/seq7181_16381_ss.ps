%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[32.89416122 745.38458252]
[22.16279411 755.89147949]
[10.24317741 765.02825928]
[-2.69086814 772.66156006]
[-16.45072365 778.68017578]
[-30.83573151 782.99633789]
[-45.63611221 785.54699707]
[-60.63603973 786.29504395]
[-75.61676788 785.22961426]
[-90.35982513 782.36608887]
[-104.65022278 777.74639893]
[-118.27957153 771.43780518]
[-131.04910278 763.53234863]
[-142.77259827 754.14526367]
[-153.27909851 743.41351318]
[-162.41540527 731.49353027]
[-170.04826355 718.55920410]
[-176.06636047 704.79913330]
[-180.38194275 690.41400146]
[-182.93208313 675.61346436]
[-183.67958069 660.61352539]
[-182.61354065 645.63287354]
[-179.74951172 630.88989258]
[-175.12925720 616.59967041]
[-168.82015991 602.97058105]
[-160.91421509 590.20135498]
[-151.52670288 578.47821045]
[-140.79455566 567.97210693]
[-128.87425232 558.83624268]
[-115.93964386 551.20385742]
[-102.17933655 545.18627930]
[-87.79400635 540.87121582]
[-72.99343109 538.32165527]
[-57.99345016 537.57470703]
[-43.01280594 538.64129639]
[-28.26995659 541.50585938]
[-23.65594864 527.23315430]
[-19.04193878 512.96038818]
[-14.42792988 498.68768311]
[-9.92030048 484.38098145]
[-5.51930285 470.04113770]
[-1.11830473 455.70129395]
[-4.78090525 441.26403809]
[6.66484404 430.34133911]
[1.81964755 413.47445679]
[15.40430927 401.04312134]
[19.59132004 386.63934326]
[23.77833176 372.23556519]
[11.38285065 363.87414551]
[2.16621184 352.07482910]
[-2.95905328 337.98541260]
[-3.47918558 322.98141479]
[0.66932911 308.53176880]
[9.09230900 296.05502319]
[20.97529602 286.78018188]
[35.16229248 281.62542725]
[50.26822281 281.10739136]
[54.45523453 266.70361328]
[58.64224625 252.29983521]
[62.82925415 237.89604187]
[67.01626587 223.49226379]
[71.20327759 209.08848572]
[74.74295044 194.51211548]
[77.62822723 179.79222107]
[80.51349640 165.07232666]
[83.28910828 150.33135986]
[85.95490265 135.57014465]
[88.62069702 120.80892944]
[91.28649139 106.04771423]
[93.40111542 91.19751740]
[83.72391510 78.99138641]
[85.51902771 63.88403320]
[97.21533966 54.73352051]
[98.77586365 39.81491470]
[100.33638763 24.89631081]
[101.78580475 9.96650219]
[103.12403870 -4.97368288]
[104.46227264 -19.91386795]
[105.80050659 -34.85405350]
[99.32525635 -49.28948212]
[108.16716766 -61.27571487]
[109.28282166 -76.23416901]
[110.17563629 -91.20757294]
[111.06845093 -106.18097687]
[104.16626740 -120.41722107]
[112.64739227 -132.66139221]
[102.60689545 -141.63931274]
[99.61408234 -154.57196045]
[104.54326630 -166.68745422]
[115.38733673 -173.64703369]
[116.50298309 -188.60548401]
[117.61862946 -203.56393433]
[110.92916870 -217.90136719]
[119.59165192 -230.01791382]
[105.16319275 -234.33456421]
[92.00022888 -241.65238953]
[80.71842957 -251.62910461]
[71.84545898 -263.79809570]
[65.79631805 -277.59020996]
[62.85394287 -292.36032104]
[63.15594864 -307.41763306]
[66.68821716 -322.05789185]
[73.28553009 -335.59634399]
[82.63932037 -347.39978027]
[94.31209564 -356.91607666]
[107.75790405 -363.70022583]
[122.34784698 -367.43484497]
[137.39955139 -367.94531250]
[152.20898438 -365.20770264]
[166.08352661 -359.35009766]
[178.37419128 -350.64648438]
[188.50616455 -339.50387573]
[196.00553894 -326.44351196]
[200.52156067 -312.07620239]
[201.84298706 -297.07394409]
[199.90803528 -282.13839722]
[194.80718994 -267.96817017]
[186.77903748 -255.22599792]
[176.19908142 -244.50785828]
[163.56213379 -236.31507874]
[149.45927429 -231.03082275]
[134.55010986 -228.90225220]
[141.31936646 -215.63476562]
[132.57708740 -202.44828796]
[131.46144104 -187.48983765]
[130.34579468 -172.53138733]
[141.85484314 -160.26841736]
[140.91526794 -143.13854980]
[127.62079620 -131.76856995]
[134.58683777 -118.60334015]
[126.04185486 -105.28816223]
[125.14904022 -90.31475830]
[124.25622559 -75.34135437]
[126.70001221 -71.23806763]
[126.59207916 -65.55604553]
[123.10735321 -59.93748093]
[129.67832947 -46.57067108]
[120.74069214 -33.51581955]
[119.40245819 -18.57563400]
[118.06422424 -3.63544869]
[116.72599030 11.30473614]
[119.26020813 18.24732399]
[115.25498962 26.45683289]
[113.69446564 41.37543869]
[112.13394928 56.29404449]
[121.68346405 67.66692352]
[120.31339264 82.81874084]
[108.31972504 92.75803375]
[121.43827057 85.48455048]
[135.36174011 91.06461334]
[139.82626343 105.38480377]
[131.54075623 117.88882446]
[116.61299133 119.35916138]
[106.04771423 108.71350861]
[103.38191223 123.47472382]
[100.71611786 138.23594666]
[98.05032349 152.99716187]
[99.60478973 161.99835205]
[95.23339081 167.95759583]
[92.34811401 182.67749023]
[89.46284485 197.39738464]
[102.48333740 189.94978333]
[116.99208069 193.75718689]
[124.67780304 206.63854980]
[121.13778687 221.21484375]
[108.39989471 229.13609314]
[93.76098633 225.86465454]
[85.60706329 213.27549744]
[81.42005157 227.67927551]
[77.23303986 242.08305359]
[73.04602814 256.48684692]
[68.85901642 270.89062500]
[64.67200470 285.29440308]
[77.14625549 293.82965088]
[86.35910797 305.78649902]
[91.41829681 319.98623657]
[91.84021759 335.03405762]
[87.59612274 349.45593262]
[79.11371613 361.84301758]
[67.23410034 370.98931885]
[53.12834930 376.00906372]
[38.18211365 376.42257690]
[33.99510193 390.82635498]
[29.80809021 405.23013306]
[35.32481384 416.88897705]
[31.54091072 428.79971313]
[21.00469017 434.74230957]
[24.35250282 450.20526123]
[13.22154236 460.10229492]
[8.82054424 474.44213867]
[4.41954613 488.78198242]
[4.89337587 497.90411377]
[-0.15519603 503.30169678]
[-4.76920509 517.57440186]
[-9.38321495 531.84716797]
[-13.99722385 546.11987305]
[-0.36740881 552.42742920]
[12.40271282 560.33197021]
[24.12691498 569.71813965]
[34.63422394 580.44915771]
[43.77141190 592.36840820]
[51.40523148 605.30218506]
[57.42436218 619.06182861]
[61.74102402 633.44665527]
[64.29226685 648.24694824]
[65.04089355 663.24682617]
[63.97597504 678.22760010]
[61.11304855 692.97076416]
[56.49386215 707.26135254]
[50.18577576 720.89093018]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 196]
[37 195]
[38 194]
[39 193]
[40 191]
[41 190]
[42 189]
[44 187]
[46 184]
[47 183]
[48 182]
[57 173]
[58 172]
[59 171]
[60 170]
[61 169]
[62 168]
[63 161]
[64 160]
[65 159]
[66 157]
[67 156]
[68 155]
[69 154]
[70 148]
[73 145]
[74 144]
[75 143]
[76 141]
[77 140]
[78 139]
[79 138]
[81 136]
[82 133]
[83 132]
[84 131]
[86 129]
[90 126]
[91 125]
[92 124]
[94 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
