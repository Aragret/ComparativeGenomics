%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[86.29039764 430.83157349]
[69.90760803 430.09930420]
[62.59152985 415.42254639]
[71.86832428 401.89950562]
[72.53810883 386.91445923]
[73.20789337 371.92941284]
[73.87767792 356.94436646]
[66.71640015 343.88430786]
[75.06218719 330.44338989]
[75.73197174 315.45834351]
[76.40175629 300.47332764]
[77.07154846 285.48828125]
[77.18321228 270.48867798]
[76.73660278 255.49534607]
[76.29000092 240.50198364]
[75.84339142 225.50863647]
[75.39678955 210.51528931]
[74.95018005 195.52194214]
[67.71892548 208.66381836]
[56.05711746 218.09791565]
[41.69471741 222.42474365]
[26.76230049 221.00244141]
[13.47500420 214.04200745]
[3.80391812 202.57595825]
[-0.81630850 188.30523682]
[0.29970723 173.34681702]
[6.98641109 159.91967773]
[18.25186920 150.01567078]
[32.42491913 145.10397339]
[47.40307236 145.91323853]
[60.96441269 152.32339478]
[71.09719086 163.38354492]
[76.29796600 177.45108032]
[74.35909271 173.08647156]
[75.14145660 167.45753479]
[79.26914978 162.29287720]
[82.37326050 147.61758423]
[85.47737122 132.94227600]
[88.58148193 118.26697540]
[91.68559265 103.59166718]
[90.06130219 100.09394836]
[89.98663330 95.89724731]
[91.73920441 91.70970154]
[95.26989746 88.33715820]
[99.02619934 73.81509399]
[102.78249359 59.29303741]
[96.92109680 47.80361938]
[100.34869385 35.78549194]
[110.70330811 29.53181267]
[114.67539978 15.06728935]
[118.64749908 0.60276520]
[122.61959839 -13.86175823]
[126.26768494 -28.41137886]
[129.58993530 -43.03884125]
[132.91220093 -57.66629791]
[128.42358398 -72.83741760]
[138.78759766 -83.53491211]
[142.10986328 -98.16236877]
[132.64221191 -86.52778625]
[120.69506073 -77.45774841]
[106.94407654 -71.46521759]
[92.16694641 -68.88909149]
[77.19938660 -69.87507629]
[62.88788605 -74.36740112]
[50.04183197 -82.11199951]
[39.38772583 -92.67088318]
[31.52811432 -105.44689941]
[26.90749168 -119.71749115]
[25.78718185 -134.67559814]
[28.23053932 -149.47526550]
[34.09938431 -163.27947998]
[43.06179810 -175.30758667]
[54.61092377 -184.87930298]
[68.09358978 -191.45330811]
[82.74729919 -194.65782166]
[97.74330139 -194.31161499]
[112.23350525 -190.43424988]
[125.39842224 -183.24502563]
[136.49351501 -173.15051270]
[144.89128113 -160.72161865]
[150.11682129 -146.66125488]
[151.87457275 -131.76460266]
[150.06488037 -116.87309265]
[158.29368591 -129.41448975]
[166.52250671 -141.95590210]
[168.61380005 -150.84770203]
[174.96835327 -154.62150574]
[183.38296509 -167.03900146]
[191.79759216 -179.45649719]
[200.21220398 -191.87399292]
[208.62683105 -204.29147339]
[217.04144287 -216.70896912]
[225.45605469 -229.12646484]
[233.87068176 -241.54396057]
[222.32798767 -251.14256287]
[211.78170776 -261.82632446]
[202.33343506 -273.49237061]
[194.07414246 -286.02835083]
[187.08337402 -299.31353760]
[181.42845154 -313.21997070]
[177.16384888 -327.61370850]
[174.33064270 -342.35617065]
[172.95611572 -357.30532837]
[173.05348206 -372.31723022]
[174.62184143 -387.24731445]
[177.64605713 -401.95175171]
[182.09701538 -416.28897095]
[187.93185425 -430.12088013]
[195.09437561 -443.31423950]
[203.51560974 -455.74203491]
[213.11442566 -467.28451538]
[223.79841614 -477.83059692]
[235.46464539 -487.27862549]
[248.00079346 -495.53768921]
[261.28610229 -502.52816772]
[275.19265747 -508.18283081]
[289.58648682 -512.44714355]
[304.32897949 -515.28002930]
[319.27816772 -516.65429688]
[334.29010010 -516.55657959]
[349.22012329 -514.98797607]
[363.92453003 -511.96343994]
[378.26165771 -507.51217651]
[392.09341431 -501.67706299]
[405.28665161 -494.51428223]
[417.71426392 -486.09280396]
[429.25659180 -476.49374390]
[439.80242920 -465.80957031]
[449.25024414 -454.14312744]
[457.50903320 -441.60681152]
[464.49926758 -428.32138062]
[470.15362549 -414.41470337]
[474.41766357 -400.02078247]
[477.25027466 -385.27822876]
[478.62420654 -370.32901001]
[478.52624512 -355.31710815]
[476.95727539 -340.38711548]
[473.93246460 -325.68276978]
[469.48095703 -311.34573364]
[463.64553833 -297.51406860]
[456.48248291 -284.32098389]
[448.06076050 -271.89355469]
[438.46148682 -260.35144043]
[427.77709961 -249.80580139]
[416.11047363 -240.35821533]
[403.57400513 -232.09967041]
[390.28839111 -225.10969543]
[376.38162231 -219.45561218]
[361.98760986 -215.19187927]
[347.24499512 -212.35955811]
[332.29577637 -210.98591614]
[317.28387451 -211.08419800]
[302.35388184 -212.65344238]
[287.64962769 -215.67854309]
[273.31265259 -220.13037109]
[259.48110962 -225.96603394]
[246.28817749 -233.12934875]
[237.87355042 -220.71185303]
[229.45893860 -208.29435730]
[221.04432678 -195.87686157]
[212.62969971 -183.45936584]
[204.21508789 -171.04187012]
[195.80046082 -158.62437439]
[187.38584900 -146.20687866]
[179.06390381 -133.72708130]
[170.83509827 -121.18568420]
[162.60629272 -108.64428711]
[156.73731995 -94.84011078]
[153.41506958 -80.21264648]
[158.14131165 -66.08778381]
[147.53965759 -54.34403992]
[144.21740723 -39.71657944]
[140.89514160 -25.08911896]
[142.45475769 -21.92684937]
[142.56016541 -17.85205650]
[140.79919434 -13.55644703]
[137.08412170 -9.88966274]
[133.11203003 4.57486153]
[129.13992310 19.03938484]
[125.16783142 33.50391006]
[130.51306152 50.21903229]
[117.30455780 63.04933929]
[113.54825592 77.57139587]
[109.79195404 92.09346008]
[106.36089325 106.69577789]
[103.25678253 121.37107849]
[100.15267181 136.04638672]
[97.04856110 150.72167969]
[93.94445038 165.39698792]
[91.05918121 180.11688232]
[89.94353485 195.07533264]
[90.39013672 210.06867981]
[90.83674622 225.06202698]
[91.28334808 240.05538940]
[91.72995758 255.04873657]
[92.17655945 270.04208374]
[104.20576477 261.08114624]
[118.74990845 264.75100708]
[125.08760071 278.34634399]
[118.54692078 291.84521484]
[103.94942474 295.29675293]
[92.05658722 286.15805054]
[91.38679504 301.14309692]
[90.71701050 316.12814331]
[90.04722595 331.11318970]
[97.16059875 345.24508667]
[88.86271667 357.61416626]
[88.19293213 372.59921265]
[87.52314758 387.58422852]
[86.85336304 402.56927490]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 210]
[5 209]
[6 208]
[7 207]
[9 205]
[10 204]
[11 203]
[12 202]
[13 196]
[14 195]
[15 194]
[16 193]
[17 192]
[18 191]
[33 190]
[36 189]
[37 188]
[38 187]
[39 186]
[40 185]
[44 184]
[45 183]
[46 182]
[49 180]
[50 179]
[51 178]
[52 177]
[53 173]
[54 172]
[55 171]
[57 169]
[58 168]
[83 167]
[84 166]
[85 165]
[87 164]
[88 163]
[89 162]
[90 161]
[91 160]
[92 159]
[93 158]
[94 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
