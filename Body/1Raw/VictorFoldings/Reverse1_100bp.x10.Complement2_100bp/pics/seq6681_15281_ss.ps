%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[221.21640015 493.47119141]
[225.42532349 479.05773926]
[231.19430542 465.19476318]
[238.45335388 452.05056763]
[247.11433411 439.78475952]
[257.07211304 428.54617310]
[268.20581055 418.47125244]
[259.42520142 406.30978394]
[250.64460754 394.14834595]
[236.92127991 388.35873413]
[235.11613464 372.64083862]
[226.33554077 360.47940063]
[217.55493164 348.31793213]
[208.77433777 336.15646362]
[209.56295776 351.13574219]
[203.85418701 365.00692749]
[192.75030518 375.09173584]
[178.39527893 379.44296265]
[163.56083679 377.22045898]
[151.11129761 368.85330200]
[143.45045471 355.95712280]
[142.05751038 341.02194214]
[147.20141602 326.93151855]
[157.88894653 316.40646362]
[172.05653381 311.47903442]
[186.96862793 313.10064697]
[199.74684143 320.95904541]
[187.27090454 312.82269287]
[188.28788757 297.03421021]
[181.80838013 283.50585938]
[175.32888794 269.97750854]
[168.84939575 256.44918823]
[162.36990356 242.92083740]
[155.89039612 229.39248657]
[140.89848328 220.27056885]
[142.46632385 201.92326355]
[135.78613281 188.49288940]
[129.99273682 183.90396118]
[129.10813904 174.81245422]
[122.62864685 161.28411865]
[116.14914703 147.75576782]
[109.46895599 134.32539368]
[102.58953857 120.99596405]
[95.71012878 107.66653442]
[92.89556122 106.49704742]
[90.44431305 104.27760315]
[88.74609375 101.14080811]
[88.13616180 97.36135864]
[88.84479523 93.33261108]
[76.18218994 83.84741211]
[78.10324097 69.07720947]
[72.02941132 55.36194611]
[65.95557404 41.64667892]
[54.22646713 36.28096390]
[49.44991302 24.73244667]
[53.68254852 13.40057182]
[47.81358719 -0.40360472]
[41.94462585 -14.20778179]
[37.97071075 0.25624201]
[26.87919044 10.35466766]
[12.10689735 12.95838833]
[-1.76881385 7.26061249]
[-10.44840240 -4.97314119]
[-11.24240494 -19.95211220]
[-3.90478921 -33.03490067]
[9.29080391 -40.16766739]
[24.25557518 -39.14024353]
[36.35268784 -30.27078056]
[32.38058853 -44.73530579]
[18.01192284 -50.28936768]
[9.76520348 -63.08956146]
[10.62681103 -78.11359406]
[20.05708504 -89.61177063]
[8.94161987 -100.87040710]
[13.03244781 -115.19222260]
[9.06035137 -129.65675354]
[5.08825541 -144.12127686]
[-0.20191273 -151.56787109]
[1.16641474 -158.83076477]
[-2.58988595 -173.35281372]
[-6.34618664 -187.87487793]
[-21.36282349 -186.92770386]
[-36.28730774 -188.83982849]
[-50.58013153 -193.54212952]
[-63.72462082 -200.86462402]
[-75.24560547 -210.54261780]
[-84.72660828 -222.22624207]
[-91.82490540 -235.49313354]
[-96.28388977 -249.86373901]
[-97.94237518 -264.81854248]
[-96.74040222 -279.81692505]
[-92.72143555 -294.31674194]
[-86.03074646 -307.79379272]
[-76.91020203 -319.76092529]
[-65.68949890 -329.78552246]
[-52.77427292 -337.50518799]
[-38.63138580 -342.64086914]
[-23.77210426 -345.00692749]
[-8.73357868 -344.51782227]
[5.94055843 -341.19122314]
[19.71984673 -335.14743042]
[32.10617065 -326.60485840]
[42.65177536 -315.87234497]
[50.97544098 -303.33786011]
[56.77627563 -289.45452881]
[59.84458160 -274.72424316]
[60.06943893 -259.67944336]
[57.44272232 -244.86399841]
[52.05938721 -230.81352234]
[44.11403275 -218.03588867]
[33.89387894 -206.99301147]
[21.76838493 -198.08409119]
[8.17587280 -191.63117981]
[11.93217373 -177.10911560]
[15.68847370 -162.58706665]
[19.55278015 -148.09336853]
[23.52487564 -133.62884521]
[27.49697113 -119.16432190]
[38.32832718 -108.94027710]
[34.52161026 -93.58386230]
[48.50152588 -88.51435852]
[56.91516876 -76.03739166]
[56.36215210 -60.82070541]
[46.84511566 -48.70740128]
[50.81721115 -34.24287796]
[55.74880219 -20.07674217]
[61.61776352 -6.27256536]
[67.48672485 7.53161144]
[82.05637360 17.31385422]
[79.67083740 35.57284546]
[85.74467468 49.28811264]
[91.81851196 63.00337982]
[104.04667664 71.50756836]
[102.56005859 87.25877380]
[109.03955841 100.78712463]
[115.91896820 114.11655426]
[122.79838562 127.44598389]
[128.14636230 131.33323669]
[130.39137268 136.55404663]
[129.67749023 141.27627563]
[136.15698242 154.80462646]
[142.63648987 168.33296204]
[149.21650696 181.81269836]
[155.89671326 195.24307251]
[167.85369873 200.07971191]
[173.14115906 211.40342712]
[169.41874695 222.91299438]
[175.89823914 236.44132996]
[182.37773132 249.96968079]
[188.85723877 263.49801636]
[195.33673096 277.02636719]
[201.81622314 290.55471802]
[214.75563049 299.65869141]
[213.27519226 314.47955322]
[220.93579102 327.37588501]
[229.71638489 339.53732300]
[238.49699402 351.69879150]
[247.27760315 363.86022949]
[261.62896729 370.51971436]
[262.80606079 385.36773682]
[271.58666992 397.52917480]
[280.36727905 409.69064331]
[293.43386841 402.29287720]
[307.23501587 396.37747192]
[321.60311890 392.01623535]
[336.36380005 389.26211548]
[351.33789062 388.14852905]
[366.34359741 388.68899536]
[381.19876099 390.87695312]
[395.72305298 394.68588257]
[409.74020386 400.06948853]
[423.07998657 406.96246338]
[435.58050537 415.28112793]
[447.09005737 424.92446899]
[457.46884155 435.77542114]
[466.59094238 447.70233154]
[474.34558105 460.56033325]
[480.63864136 474.19342041]
[485.39373779 488.43603516]
[488.55313110 503.11532593]
[490.07846069 518.05310059]
[489.95126343 533.06799316]
[488.17300415 547.97772217]
[484.76535034 562.60137939]
[479.76962280 576.76135254]
[473.24645996 590.28588867]
[465.27505493 603.01062012]
[455.95217896 614.78125000]
[445.39102173 625.45483398]
[433.71975708 634.90173340]
[421.08004761 643.00738525]
[407.62536621 649.67333984]
[393.51904297 654.81866455]
[378.93228149 658.38092041]
[364.04217529 660.31689453]
[349.02947998 660.60302734]
[334.07641602 659.23590088]
[319.36450195 656.23205566]
[305.07235718 651.62799072]
[291.37344360 645.47955322]
[278.43405151 637.86145020]
[266.41128540 628.86614990]
[255.45104980 618.60278320]
[245.68641663 607.19598389]
[237.23593140 594.78417969]
[230.20214844 581.51806641]
[224.67045593 567.55871582]
[220.70802307 553.07556152]
[218.36293030 538.24438477]
[217.66365051 523.24523926]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 162]
[8 161]
[9 160]
[11 158]
[12 157]
[13 156]
[14 155]
[27 154]
[29 152]
[30 151]
[31 150]
[32 149]
[33 148]
[34 147]
[36 144]
[37 143]
[39 142]
[40 141]
[41 140]
[42 137]
[43 136]
[44 135]
[49 134]
[51 132]
[52 131]
[53 130]
[56 128]
[57 127]
[58 126]
[68 125]
[69 124]
[73 120]
[75 118]
[76 117]
[77 116]
[79 115]
[80 114]
[81 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
