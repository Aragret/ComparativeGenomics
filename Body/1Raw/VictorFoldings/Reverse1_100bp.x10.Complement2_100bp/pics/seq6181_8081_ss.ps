%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxGGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUA\
) } def
/len { sequence length } bind def

/coor [
[73.99388885 709.48907471]
[63.78905487 698.46435547]
[55.14477921 686.17779541]
[48.21532822 672.84863281]
[43.12437057 658.71478271]
[39.96275330 644.02850342]
[38.78690720 629.05181885]
[39.61780930 614.05200195]
[42.44063568 599.29687500]
[47.20500946 585.04962158]
[53.82590485 571.56451416]
[62.18516159 559.08227539]
[72.13360596 547.82568359]
[83.49368286 537.99548340]
[96.06267548 529.76727295]
[109.61625671 523.28778076]
[123.91256714 518.67266846]
[121.24676514 503.91146851]
[118.58097076 489.15023804]
[115.91517639 474.38903809]
[113.24938202 459.62780762]
[110.58358765 444.86657715]
[100.70756531 433.71697998]
[105.86914062 418.76144409]
[103.64579010 417.05413818]
[101.96476746 414.36325073]
[101.20407867 410.89099121]
[101.66165161 406.97241211]
[103.51152039 403.04406738]
[101.72905731 388.15032959]
[99.94658661 373.25662231]
[98.16412354 358.36291504]
[96.38165283 343.46917725]
[92.46559143 337.20132446]
[94.68522644 328.34066772]
[93.12470245 313.42205811]
[91.56417847 298.50344849]
[90.00366211 283.58486938]
[78.30734253 274.43435669]
[76.51222992 259.32699585]
[86.18943787 247.12086487]
[84.62891388 232.20225525]
[83.06838989 217.28366089]
[76.83460999 230.92697144]
[65.90677643 241.20230103]
[51.90597153 246.58537292]
[36.90913010 246.27763367]
[23.14094162 240.32473755]
[12.64383793 229.60975647]
[6.97500038 215.72219849]
[6.97536850 200.72219849]
[12.64488697 186.83491516]
[23.14251709 176.12045288]
[36.91099548 170.16822815]
[51.90785599 169.86122131]
[65.90839386 175.24497986]
[76.83572388 185.52084351]
[83.06838989 199.16261292]
[84.62891388 184.24400330]
[73.49007416 171.64379883]
[74.93925476 154.54951477]
[88.56635284 143.58039856]
[89.90458679 128.64021301]
[91.24282074 113.70003510]
[83.79475403 98.66998291]
[93.59378052 85.05545807]
[94.70942688 70.09700012]
[95.82508087 55.13854980]
[96.82933807 40.17220306]
[97.72215271 25.19879913]
[98.61496735 10.22539330]
[99.28475189 -4.75964594]
[99.73136139 -19.75299644]
[100.17796326 -34.74634552]
[100.62457275 -49.73969650]
[100.84790039 -64.73802948]
[100.84790039 -79.73802948]
[88.46292114 -88.89873505]
[83.90016937 -103.42577362]
[88.70948029 -117.68531036]
[100.84790039 -126.27581787]
[100.84790039 -141.27581787]
[100.84790039 -156.27581787]
[100.84790039 -171.27581787]
[97.71849060 -179.85746765]
[100.96122742 -186.49873352]
[101.18455505 -201.49707031]
[101.40788269 -216.49540710]
[101.63121033 -231.49374390]
[101.07300568 -246.48335266]
[99.73476410 -261.42355347]
[98.39653015 -276.36373901]
[97.05829620 -291.30392456]
[95.72006226 -306.24411011]
[81.06377411 -310.11306763]
[68.61640930 -318.76403809]
[59.88105011 -331.15228271]
[55.91252899 -345.78195190]
[57.19006348 -360.88638306]
[63.55939102 -374.64163208]
[74.25138092 -385.38674927]
[87.97492218 -391.82415771]
[103.07283783 -393.17651367]
[117.72196960 -389.28051758]
[130.15336609 -380.60665894]
[138.86589050 -368.20230103]
[142.80744934 -353.56536865]
[141.50207520 -338.46331787]
[135.10740662 -324.71981812]
[124.39562988 -313.99444580]
[110.66024780 -307.58233643]
[111.99848175 -292.64215088]
[113.33671570 -277.70196533]
[114.67494965 -262.76177979]
[116.01318359 -247.82159424]
[125.56369781 -259.38824463]
[140.29138184 -262.23345947]
[153.46295166 -255.05642700]
[159.05653381 -241.13838196]
[154.51481628 -226.84248352]
[141.91421509 -218.70460510]
[127.01555634 -220.44529724]
[116.62954712 -231.27041626]
[116.40621948 -216.27207947]
[116.18289185 -201.27374268]
[115.95956421 -186.27540588]
[115.84790039 -171.27581787]
[115.84790039 -156.27581787]
[115.84790039 -141.27581787]
[115.84790039 -126.27581787]
[127.98632050 -117.68531036]
[132.79562378 -103.42577362]
[128.23287964 -88.89873505]
[115.84790039 -79.73802948]
[115.84790039 -64.73802948]
[118.53158569 -60.78747940]
[118.76204681 -55.10910416]
[115.61791992 -49.29309082]
[115.17131805 -34.29973984]
[114.72470856 -19.30639076]
[114.27810669 -4.31303978]
[116.84297180 -0.28433278]
[116.90426636 5.39838362]
[113.58837891 11.11820889]
[112.69555664 26.09161377]
[111.80274200 41.06502151]
[114.54254913 47.92907715]
[110.78353119 56.25419617]
[109.66788483 71.21265411]
[108.55223083 86.17110443]
[115.60665894 95.43805695]
[114.65399170 107.04553986]
[106.18300629 115.03826904]
[104.84477234 129.97845459]
[103.50653839 144.91864014]
[113.27528381 154.19151306]
[115.88171387 167.20755005]
[110.59399414 179.17091370]
[99.54751587 185.80451965]
[97.98699188 200.72312927]
[97.98699188 215.72312927]
[99.54751587 230.64173889]
[101.10803986 245.56034851]
[113.10170746 255.49963379]
[114.47177887 270.65145874]
[104.92226410 282.02432251]
[106.48278809 296.94293213]
[108.04331207 311.86154175]
[109.60383606 326.78015137]
[111.27537537 341.68673706]
[113.05783844 356.58044434]
[114.84030151 371.47415161]
[116.62277222 386.36788940]
[118.40523529 401.26159668]
[120.63035583 416.09564209]
[130.69705200 428.30105591]
[125.34480286 442.20080566]
[128.01060486 456.96200562]
[130.67639160 471.72323608]
[133.34219360 486.48443604]
[136.00798035 501.24566650]
[138.67378235 516.00689697]
[153.68128967 515.32989502]
[168.64511108 516.65924072]
[183.29821777 519.97131348]
[197.37910461 525.20697021]
[210.63647461 532.27282715]
[222.83374023 541.04266357]
[233.75323486 551.35998535]
[243.20007324 563.04077148]
[251.00566101 575.87652588]
[257.03073120 589.63818359]
[261.16769409 604.08007812]
[263.34280396 618.94451904]
[263.51718140 633.96630859]
[261.68774414 648.87725830]
[257.88711548 663.41131592]
[252.18315125 677.30908203]
[244.67762756 690.32257080]
[235.50450134 702.21948242]
[224.82746887 712.78759766]
[212.83706665 721.83819580]
[199.74729919 729.20983887]
[185.79174805 734.77099609]
[171.21948242 738.42230225]
[156.29054260 740.09875488]
[141.27136230 739.77026367]
[126.42999268 737.44287109]
[112.03127289 733.15795898]
[98.33217621 726.99206543]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 182]
[18 181]
[19 180]
[20 179]
[21 178]
[22 177]
[24 175]
[29 174]
[30 173]
[31 172]
[32 171]
[33 170]
[35 169]
[36 168]
[37 167]
[38 166]
[41 163]
[42 162]
[43 161]
[58 160]
[59 159]
[62 155]
[63 154]
[64 153]
[66 150]
[67 149]
[68 148]
[69 146]
[70 145]
[71 144]
[72 141]
[73 140]
[74 139]
[75 138]
[76 135]
[77 134]
[81 130]
[82 129]
[83 128]
[84 127]
[86 126]
[87 125]
[88 124]
[89 123]
[90 115]
[91 114]
[92 113]
[93 112]
[94 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
