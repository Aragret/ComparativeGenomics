%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[66.35320282 632.87530518]
[51.76283646 636.52117920]
[36.76102066 637.57788086]
[21.80364227 636.01324463]
[7.34523630 631.87493896]
[-6.17481947 625.28869629]
[-18.34566689 616.45452881]
[-28.79744720 605.64105225]
[-37.21254349 593.17681885]
[-43.33523178 579.44061279]
[-46.97944641 564.84985352]
[-48.03444672 549.84790039]
[-46.46817017 534.89068604]
[-42.32821655 520.43273926]
[-35.74039459 506.91345215]
[-26.90489960 494.74359131]
[-16.09023094 484.29306030]
[-3.62503695 475.87936401]
[10.11188030 469.75823975]
[24.70307159 466.11566162]
[39.70512772 465.06237793]
[41.26565170 450.14376831]
[42.82617569 435.22515869]
[36.45494080 421.76202393]
[45.58595276 408.84167480]
[47.14647675 393.92306519]
[40.77524185 380.45989990]
[49.90625763 367.53958130]
[51.46677780 352.62097168]
[39.16265106 361.20050049]
[24.37208366 358.70266724]
[15.56778431 346.55838013]
[17.79325676 331.72436523]
[29.77364922 322.69830322]
[44.64604950 324.65066528]
[53.89060974 336.46215820]
[56.77588272 321.74227905]
[59.66115570 307.02239990]
[62.54642868 292.30249023]
[65.43170166 277.58261108]
[68.31697083 262.86270142]
[70.87280273 248.08206177]
[73.09792328 233.24801636]
[75.32303619 218.41397095]
[69.55931854 204.67974854]
[79.25814819 192.18002319]
[81.48326874 177.34597778]
[83.70838165 162.51193237]
[73.14328003 149.42692566]
[75.35431671 132.41439819]
[89.45762634 122.06470490]
[91.46163940 107.19918060]
[93.35492706 92.31914520]
[95.13739777 77.42543030]
[81.93955231 69.93592834]
[72.63967133 57.99627686]
[68.63034058 43.44502640]
[70.49250031 28.50782394]
[77.91148376 15.45701694]
[89.72968292 6.26595354]
[104.12706757 2.31062698]
[105.90953064 -12.58309078]
[107.69199371 -27.47680855]
[95.26149750 -19.08141327]
[80.50975800 -21.79916573]
[71.88724518 -34.07321548]
[74.33332825 -48.87242889]
[86.44677734 -57.71914291]
[101.28845978 -55.54555893]
[110.35614014 -43.59772110]
[113.46025085 -58.27302551]
[116.56436157 -72.94832611]
[107.96673584 -83.31632996]
[106.92548370 -96.54985809]
[113.59735870 -107.80010986]
[125.35384369 -113.07406616]
[128.67610168 -127.70152283]
[131.99836731 -142.32897949]
[135.32061768 -156.95645142]
[138.64288330 -171.58390808]
[139.86985779 -186.53364563]
[138.97703552 -201.50704956]
[138.08422852 -216.48045349]
[135.20837402 -220.83665466]
[134.37445068 -225.40370178]
[135.32083130 -229.36846924]
[137.50108337 -232.13954163]
[137.27775574 -247.13787842]
[137.05442810 -262.13623047]
[125.99532318 -273.10589600]
[125.98249817 -288.31954956]
[136.50857544 -298.79510498]
[136.28524780 -313.79342651]
[136.06192017 -328.79177856]
[135.83859253 -343.79010010]
[121.32505035 -348.01489258]
[108.70249939 -356.33126831]
[99.09331512 -367.99984741]
[93.35195160 -381.98297119]
[91.98892212 -397.03732300]
[95.12541962 -411.82427979]
[102.48255920 -425.02896118]
[113.40613556 -435.47726440]
[126.92485046 -442.24008179]
[141.83660889 -444.71609497]
[156.81549072 -442.68515015]
[170.52955627 -436.32781982]
[181.75938416 -426.20941162]
[189.50640869 -413.22961426]
[193.08178711 -398.54260254]
[192.16757202 -383.45434570]
[186.84509277 -369.30645752]
[177.58758545 -357.35699463]
[165.21824646 -348.66845703]
[150.83692932 -344.01342773]
[151.06025696 -329.01510620]
[151.28358459 -314.01675415]
[151.50691223 -299.01843262]
[162.34020996 -288.86090088]
[162.78034973 -273.65365601]
[152.05276489 -262.35955811]
[152.27609253 -247.36120605]
[152.49942017 -232.36286926]
[153.05763245 -217.37326050]
[153.95043945 -202.39985657]
[154.84326172 -187.42645264]
[160.94802856 -201.12797546]
[170.77488708 -212.46080017]
[183.47372437 -220.44450378]
[197.94595337 -224.38844299]
[212.93959045 -223.95140076]
[227.15751648 -219.17120361]
[239.36976624 -210.46138000]
[248.51983643 -198.57540894]
[253.81617737 -184.54156494]
[254.80056763 -169.57389832]
[251.38787842 -154.96726990]
[243.87333679 -141.98530579]
[232.90701294 -131.75105286]
[219.43760681 -125.14990997]
[204.63037109 -122.75290680]
[189.76626587 -124.76743317]
[176.13117981 -131.01921082]
[164.90470886 -140.96737671]
[157.05802917 -153.75134277]
[153.27033997 -168.26164246]
[149.94807434 -153.63418579]
[146.62582397 -139.00672913]
[143.30355835 -124.37926483]
[139.98130798 -109.75180817]
[149.54393005 -95.91724396]
[146.07368469 -79.11628723]
[131.23965454 -69.84421539]
[128.13554382 -55.16891479]
[125.03144073 -40.49361420]
[122.58571625 -25.69434166]
[120.80324554 -10.80062485]
[119.02078247 4.09309292]
[132.07818604 11.33418274]
[141.39372253 23.05451202]
[145.52348328 37.48746109]
[143.80819702 52.44223785]
[136.47831726 65.63642883]
[124.62358856 75.04431152]
[110.03111267 79.20789337]
[108.24864960 94.10160828]
[110.49381256 101.84317017]
[106.32716370 109.20319366]
[104.32315063 124.06871796]
[113.66809845 133.76855469]
[115.69073486 146.88796997]
[109.87409210 158.60330200]
[98.54242706 164.73704529]
[96.31731415 179.57109070]
[94.09219360 194.40513611]
[99.69675446 209.20039368]
[90.15708160 220.63908386]
[87.93196869 235.47312927]
[85.70684814 250.30717468]
[87.61896515 255.16421509]
[87.48973083 259.80496216]
[85.74337006 263.48806763]
[83.03686523 265.74798584]
[80.15158844 280.46786499]
[77.26631927 295.18777466]
[74.38104248 309.90765381]
[71.49577332 324.62756348]
[68.61050415 339.34744263]
[66.38538361 354.18148804]
[64.82485962 369.10009766]
[71.08448029 383.63034058]
[62.06508255 395.48358154]
[60.50455856 410.40219116]
[66.76417542 424.93243408]
[57.74477768 436.78570557]
[56.18425751 451.70428467]
[54.62373352 466.62289429]
[69.08307648 470.75793457]
[82.60462952 477.34115601]
[94.77748108 486.17251587]
[105.23171234 496.98361206]
[113.64963531 509.44595337]
[119.77543640 523.18078613]
[123.42295837 537.77075195]
[124.48136139 552.77246094]
[122.91847992 567.72998047]
[118.78180695 582.18884277]
[112.19705200 595.70965576]
[103.36431122 607.88153076]
[92.55201721 618.33453369]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 197]
[22 196]
[23 195]
[25 193]
[26 192]
[28 190]
[29 189]
[36 188]
[37 187]
[38 186]
[39 185]
[40 184]
[41 183]
[42 179]
[43 178]
[44 177]
[46 175]
[47 174]
[48 173]
[51 169]
[52 168]
[53 166]
[54 165]
[61 158]
[62 157]
[63 156]
[70 155]
[71 154]
[72 153]
[76 150]
[77 149]
[78 148]
[79 147]
[80 146]
[81 126]
[82 125]
[83 124]
[87 123]
[88 122]
[89 121]
[92 118]
[93 117]
[94 116]
[95 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
