%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[109.87738037 488.44064331]
[122.35442352 479.48416138]
[120.79390717 464.56555176]
[119.23338318 449.64694214]
[117.67285919 434.72833252]
[116.11233521 419.80972290]
[114.55181122 404.89114380]
[106.50904083 417.55264282]
[92.94278717 423.95239258]
[78.05669403 422.10733032]
[66.46338654 412.58917236]
[61.75516891 398.34725952]
[65.39093781 383.79455566]
[76.24411011 373.44036865]
[90.95171356 370.49310303]
[104.95643616 375.86599731]
[113.91885376 387.89437866]
[114.36546326 372.90103149]
[114.81206512 357.90768433]
[115.25867462 342.91433716]
[115.70527649 327.92098999]
[115.14707184 312.93139648]
[113.58654785 298.01278687]
[112.02602386 283.09417725]
[110.35448456 268.18759155]
[108.57201385 253.29388428]
[106.78955078 238.40016174]
[94.57898712 233.00163269]
[86.56618500 222.18778992]
[84.93005371 208.71957397]
[90.20410919 196.10202026]
[101.10945129 187.67204285]
[99.54892731 172.75344849]
[97.98840332 157.83483887]
[96.42788696 142.91622925]
[92.60556793 136.59075928]
[94.95688629 127.76413727]
[93.61865234 112.82395172]
[85.73317719 101.27791595]
[91.44116211 88.51428223]
[90.10292816 73.57409668]
[88.76469421 58.63391113]
[87.31527710 43.70410156]
[85.75475311 28.78549767]
[84.08321381 13.87892342]
[82.30075073 -1.01479375]
[80.51828003 -15.90851116]
[78.73581696 -30.80222893]
[76.95335388 -45.69594574]
[73.74007416 -60.34773254]
[69.12606812 -74.62046814]
[58.01882935 -81.17729950]
[54.46964264 -93.16007996]
[59.85821915 -103.99011993]
[55.45722198 -118.32997131]
[51.05622482 -132.66981506]
[37.37468338 -140.11651611]
[33.11572266 -154.72184753]
[40.29932022 -167.71920776]
[35.89832306 -182.05906677]
[21.22012711 -178.92219543]
[6.32438946 -177.07656860]
[-8.67552376 -176.53622437]
[-23.66545105 -177.30526733]
[-38.53130722 -179.37786865]
[-53.15995407 -182.73823547]
[-67.44005585 -187.36079407]
[-81.26293182 -193.21035767]
[-94.52337646 -200.24243164]
[-107.12046814 -208.40347290]
[-118.95834351 -217.63137817]
[-129.94688416 -227.85591125]
[-140.00248718 -238.99926758]
[-149.04861450 -250.97662354]
[-157.01640320 -263.69683838]
[-163.84521484 -277.06307983]
[-169.48309326 -290.97363281]
[-173.88713074 -305.32263184]
[-177.02378845 -320.00088501]
[-178.86920166 -334.89663696]
[-179.40933228 -349.89657593]
[-178.64007568 -364.88647461]
[-176.56727600 -379.75231934]
[-173.20671082 -394.38092041]
[-168.58393860 -408.66094971]
[-162.73417664 -422.48373413]
[-155.70191956 -435.74407959]
[-147.54071045 -448.34106445]
[-138.31263733 -460.17880249]
[-128.08795166 -471.16720581]
[-116.94445801 -481.22265625]
[-104.96697235 -490.26861572]
[-92.24665070 -498.23620605]
[-78.88031006 -505.06484985]
[-64.96967316 -510.70254517]
[-50.62060547 -515.10638428]
[-35.94232178 -518.24279785]
[-21.04652977 -520.08801270]
[-6.04660225 -520.62792969]
[8.94330311 -519.85845947]
[23.80910301 -517.78546143]
[38.43765640 -514.42468262]
[52.71762848 -509.80172729]
[66.54033661 -503.95178223]
[79.80058289 -496.91934204]
[92.39745331 -488.75793457]
[104.23506165 -479.52969360]
[115.22332764 -469.30487061]
[125.27861023 -458.16122437]
[134.32440186 -446.18362427]
[142.29182434 -433.46319580]
[149.12026978 -420.09674072]
[154.75776672 -406.18603516]
[159.16139221 -391.83688354]
[162.29763794 -377.15856934]
[164.14263916 -362.26275635]
[164.68235779 -347.26281738]
[163.91267395 -332.27291870]
[161.83944702 -317.40716553]
[158.47846985 -302.77865601]
[153.85531616 -288.49874878]
[148.00515747 -274.67611694]
[140.97253418 -261.41595459]
[132.81095886 -248.81921387]
[123.58255768 -236.98173523]
[113.35755920 -225.99360657]
[102.21378326 -215.93847656]
[90.23604584 -206.89286804]
[77.51550293 -198.92561340]
[64.14897156 -192.09735107]
[50.23817062 -186.46005249]
[54.63916779 -172.12020874]
[67.87718201 -165.39038086]
[72.54469299 -150.91043091]
[65.39607239 -137.07081604]
[69.79706573 -122.73096466]
[74.19806671 -108.39112091]
[87.67095947 -97.14620972]
[83.39880371 -79.23447418]
[88.01280975 -64.96173859]
[91.55314636 -79.53795624]
[100.65144348 -91.46360016]
[113.77447510 -98.72899628]
[128.71078491 -100.10979462]
[142.94334412 -95.37330627]
[154.07371521 -85.31771088]
[160.22622681 -71.63755798]
[160.36407471 -56.63819122]
[154.46405029 -42.84726715]
[143.52038574 -32.58879852]
[129.37728882 -27.59152031]
[114.41811371 -28.69755554]
[101.16375732 -35.72052383]
[91.84706879 -47.47841263]
[93.62953186 -32.58469391]
[95.41200256 -17.69097710]
[97.19446564 -2.79725957]
[98.97692871 12.09645748]
[102.89299774 18.36433029]
[100.67336273 27.22497559]
[102.23387909 42.14357758]
[106.05619812 48.46906281]
[103.70487976 57.29567719]
[105.04311371 72.23586273]
[106.38134766 87.17604828]
[114.26682281 98.72208405]
[108.55883789 111.48571777]
[109.89707184 126.42590332]
[111.34648895 141.35571289]
[112.90701294 156.27432251]
[114.46753693 171.19291687]
[116.02806091 186.11152649]
[130.78593445 194.37597656]
[137.64178467 209.65663147]
[134.07444763 225.85032654]
[121.68326569 236.61770630]
[123.46573639 251.51141357]
[125.24819946 266.40512085]
[129.37519836 274.55410767]
[126.94462585 281.53366089]
[128.50515747 296.45227051]
[130.06567383 311.37084961]
[138.10844421 298.70935059]
[151.67469788 292.30960083]
[166.56079102 294.15466309]
[178.15409851 303.67282104]
[182.86231995 317.91473389]
[179.22654724 332.46743774]
[168.37336731 342.82159424]
[153.66577148 345.76885986]
[139.66104126 340.39599609]
[130.69862366 328.36758423]
[130.25202942 343.36096191]
[129.80541992 358.35430908]
[129.35881042 373.34765625]
[128.91220093 388.34100342]
[129.47041321 403.33059692]
[131.03094482 418.24920654]
[132.59146118 433.16781616]
[134.15199280 448.08642578]
[135.71250916 463.00503540]
[137.27302551 477.92364502]
[151.33345032 484.10424805]
[160.40689087 496.49652100]
[162.05262756 511.76699829]
[155.82795715 525.80798340]
[143.40731812 534.84252930]
[128.13175964 536.44036865]
[114.11035919 530.17175293]
[105.11479187 517.72283936]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 202]
[3 201]
[4 200]
[5 199]
[6 198]
[7 197]
[17 196]
[18 195]
[19 194]
[20 193]
[21 192]
[22 182]
[23 181]
[24 180]
[25 178]
[26 177]
[27 176]
[32 172]
[33 171]
[34 170]
[35 169]
[37 168]
[38 167]
[40 165]
[41 164]
[42 163]
[43 161]
[44 160]
[45 158]
[46 157]
[47 156]
[48 155]
[49 154]
[50 140]
[51 139]
[54 137]
[55 136]
[56 135]
[59 132]
[60 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
