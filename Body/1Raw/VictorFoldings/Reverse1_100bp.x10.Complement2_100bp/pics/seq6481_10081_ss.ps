%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[115.81169128 566.58862305]
[126.66047668 555.09606934]
[125.99069214 540.11102295]
[117.69281006 527.74194336]
[124.80618286 513.61004639]
[124.02485657 498.63040161]
[123.13204193 483.65698242]
[122.23922729 468.68359375]
[108.85866547 462.13940430]
[100.49465179 449.69357300]
[99.47657013 434.63269043]
[106.17775726 420.99484253]
[118.88838959 412.48678589]
[117.99557495 397.51336670]
[117.10276031 382.53997803]
[116.20994568 367.56655884]
[115.31713104 352.59317017]
[106.83600616 340.34899902]
[113.73818970 326.11276245]
[112.84537506 311.13934326]
[97.64672852 307.35418701]
[84.34519196 299.04727173]
[74.24920654 287.02160645]
[68.35626984 272.44665527]
[67.25437164 256.74462891]
[71.06336212 241.45178223]
[79.42201996 228.06800842]
[91.52232361 217.90982056]
[106.18749237 211.98077393]
[105.07184601 197.02232361]
[103.51132202 182.10371399]
[101.50730896 167.23818970]
[99.50329590 152.37266541]
[97.49927521 137.50714111]
[95.49526215 122.64160919]
[93.49124908 107.77607727]
[89.37898254 100.84342194]
[91.56977081 92.67449188]
[89.78730774 77.78077698]
[88.00483704 62.88706207]
[86.22237396 47.99334335]
[84.43990326 33.09962463]
[82.65744019 18.20590782]
[80.87497711 3.31219101]
[71.23636627 -5.25869465]
[70.05836487 -17.70040131]
[77.42948914 -27.29170418]
[75.86896515 -42.21030807]
[72.43790436 -56.81262970]
[67.19119263 -70.86510468]
[61.94446945 -84.91757202]
[56.69775391 -98.97004700]
[51.45103455 -113.02251434]
[46.20431519 -127.07498932]
[40.95759964 -141.12745667]
[35.71088028 -155.17993164]
[29.77745438 -162.12487793]
[30.49236298 -169.48086548]
[25.45544624 -183.60990906]
[21.64847565 -169.10104370]
[11.60332012 -157.96125793]
[-2.43590498 -152.67919922]
[-17.33280182 -154.43489075]
[-29.75936508 -162.83610535]
[-36.93947220 -176.00601196]
[-37.26906204 -191.00238037]
[-30.67450905 -204.47502136]
[-18.62905121 -213.41409302]
[-3.82367563 -215.82258606]
[10.43406010 -211.16242981]
[20.95895195 -200.47471619]
[18.29315758 -215.23593140]
[15.62736130 -229.99714661]
[12.96156597 -244.75836182]
[10.29577065 -259.51959229]
[7.62997532 -274.28079224]
[4.96417952 -289.04202271]
[0.99209005 -294.32727051]
[0.37766394 -299.97702026]
[2.44562578 -304.28198242]
[0.22050865 -319.11599731]
[-2.00460863 -333.95004272]
[-11.70343876 -346.44979858]
[-5.93972015 -360.18402100]
[-17.74175835 -374.31884766]
[-10.68657017 -390.38717651]
[-13.13229752 -405.18643188]
[-15.57802486 -419.98571777]
[-30.60256195 -421.29492188]
[-44.82921219 -426.30026245]
[-57.36367416 -434.68704224]
[-67.41802216 -445.92807007]
[-74.36022949 -459.31674194]
[-77.75390625 -474.01144409]
[-77.38571930 -489.08840942]
[-73.27881622 -503.59994507]
[-65.69136047 -516.63378906]
[-55.10030746 -527.37066650]
[-42.17141342 -535.13562012]
[-27.71740341 -539.44055176]
[-12.64686966 -540.01483154]
[2.09284353 -536.82238770]
[15.57518387 -530.06390381]
[26.95264053 -520.16418457]
[35.51001740 -507.74557495]
[40.70939255 -493.58868408]
[42.22392273 -478.58343506]
[39.95840836 -463.67309570]
[34.05526352 -449.79492188]
[24.88555908 -437.82131958]
[13.02571297 -428.50494385]
[-0.77875382 -422.43142700]
[1.66697359 -407.63217163]
[4.11270094 -392.83288574]
[13.76052666 -385.53591919]
[15.91922092 -373.22640991]
[8.89432335 -362.40911865]
[18.43399811 -350.97042847]
[12.82943535 -336.17517090]
[15.05455208 -321.34112549]
[17.27966881 -306.50708008]
[19.72539711 -291.70782471]
[22.39119339 -276.94659424]
[25.05698776 -262.18539429]
[27.72278404 -247.42416382]
[30.38857841 -232.66294861]
[33.05437469 -217.90173340]
[35.72016907 -203.14051819]
[39.58447647 -188.64682007]
[44.62139130 -174.51779175]
[49.76335144 -160.42665100]
[55.01007080 -146.37417603]
[60.25678635 -132.32170105]
[65.50350952 -118.26923370]
[70.75022125 -104.21676636]
[75.99694061 -90.16429138]
[81.24365997 -76.11182404]
[86.49037933 -62.05934906]
[88.54241943 -76.91832733]
[95.24913025 -90.33547974]
[105.90273285 -100.89486694]
[119.37892914 -107.48213959]
[134.25555420 -109.40211487]
[148.96261597 -106.45217896]
[161.94807434 -98.94364166]
[171.84150696 -87.66890717]
[177.59887695 -73.81781006]
[178.61256409 -58.85210419]
[174.77560425 -44.35114670]
[166.49293518 -31.84526062]
[154.63861084 -22.65422440]
[140.46366882 -17.74798584]
[125.46403503 -17.64431381]
[111.22263336 -22.35415077]
[99.24240875 -31.38045502]
[90.78757477 -43.77083206]
[92.34809875 -28.85222626]
[103.40642548 -15.22576904]
[95.76869202 1.52972519]
[97.55115509 16.42344284]
[99.33362579 31.31715965]
[101.11608887 46.21087646]
[102.89855194 61.10459518]
[104.68102264 75.99831390]
[106.46348572 90.89202881]
[108.35678101 105.77206421]
[110.36079407 120.63759613]
[112.36480713 135.50312805]
[114.36882019 150.36865234]
[116.37283325 165.23417664]
[118.37684631 180.09970093]
[121.15151215 183.43965149]
[122.57579041 187.11877441]
[122.70886993 190.67091370]
[121.75525665 193.69700623]
[120.03029633 195.90667725]
[121.14594269 210.86512756]
[135.19319153 214.02197266]
[147.76724243 221.00236511]
[157.85289001 231.23245239]
[164.63871765 243.87643433]
[167.58242798 257.90481567]
[166.45410156 272.17831421]
[161.35417175 285.54019165]
[152.70455933 296.91027832]
[141.21374512 305.37200928]
[127.81877899 310.24652100]
[128.71159363 325.21994019]
[137.25657654 338.53509521]
[130.29052734 351.70034790]
[131.18334961 366.67376709]
[132.07617188 381.64715576]
[132.96897888 396.62057495]
[133.86180115 411.59396362]
[147.49339294 418.53131104]
[155.76770020 431.27621460]
[156.54653931 446.35137939]
[149.72073364 459.70294189]
[137.21263123 467.79077148]
[138.10545349 482.76416016]
[138.99826050 497.73757935]
[142.63291931 506.11773682]
[139.79121399 512.94024658]
[148.13700867 526.38116455]
[140.97573853 539.44122314]
[141.64552307 554.42626953]
[153.47636414 564.90515137]
[154.34895325 580.68530273]
[143.74557495 592.40472412]
[127.95705414 593.11041260]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 206]
[3 205]
[5 203]
[6 201]
[7 200]
[8 199]
[13 194]
[14 193]
[15 192]
[16 191]
[17 190]
[19 188]
[20 187]
[29 177]
[30 176]
[31 171]
[32 170]
[33 169]
[34 168]
[35 167]
[36 166]
[38 165]
[39 164]
[40 163]
[41 162]
[42 161]
[43 160]
[44 159]
[47 157]
[48 156]
[49 138]
[50 137]
[51 136]
[52 135]
[53 134]
[54 133]
[55 132]
[56 131]
[58 130]
[59 129]
[71 128]
[72 127]
[73 126]
[74 125]
[75 124]
[76 123]
[77 122]
[80 121]
[81 120]
[82 119]
[84 117]
[86 114]
[87 113]
[88 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
