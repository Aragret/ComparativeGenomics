%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACCGACCAACGGAGUAGCCCACUACUAUCGGUUCCACCCCUAUUCACACCAAAGCUUCUUCUAUAUUUUAUACUAAUCAAGACACCGACACUUACAAUxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[63.54210281 703.34448242]
[52.35604858 713.43505859]
[39.20483017 720.78308105]
[24.74810791 725.01995850]
[9.71102524 725.93310547]
[-5.15216303 723.47680664]
[-19.09592819 717.77429199]
[-31.42085266 709.11145020]
[-41.50872803 697.92297363]
[-48.85354996 684.76995850]
[-53.08690262 670.31225586]
[-53.99644089 655.27490234]
[-51.53655243 640.41235352]
[-45.83061218 626.46997070]
[-37.16483688 614.14715576]
[-25.97389221 604.06195068]
[-12.81911564 596.72033691]
[1.63965714 592.49047852]
[16.67717934 591.58459473]
[19.12290764 576.78533936]
[21.56863403 561.98602295]
[24.01436234 547.18676758]
[26.46008873 532.38751221]
[28.90581703 517.58825684]
[31.35154343 502.78897095]
[17.82332611 509.26873779]
[4.25667715 502.86981201]
[0.65242475 488.30926514]
[9.66749096 476.32058716]
[24.65630341 475.74136353]
[34.56921387 486.99700928]
[38.10888672 472.42062378]
[41.64855957 457.84426880]
[45.18823242 443.26788330]
[48.72790527 428.69149780]
[51.61317825 413.97161865]
[53.83829498 399.13757324]
[56.06341171 384.30352783]
[58.28852844 369.46948242]
[60.51364517 354.63543701]
[46.47969818 349.40628052]
[33.83480835 341.37026978]
[23.13299370 330.87658691]
[14.84374428 318.38220215]
[9.33141232 304.43188477]
[6.83920956 289.63452148]
[7.47846889 274.63656616]
[11.22367764 260.09362793]
[17.91348648 246.64201355]
[27.25765610 234.87078857]
[38.84965134 225.29600525]
[52.18432999 218.33804321]
[66.67994690 214.30319214]
[81.70353699 213.37019348]
[83.92864990 198.53614807]
[86.15377045 183.70210266]
[87.82530975 168.79553223]
[88.94095612 153.83706665]
[90.05661011 138.87861633]
[91.06086731 123.91227722]
[91.95368195 108.93886566]
[92.62346649 93.95382690]
[93.07007599 78.96047974]
[93.51667786 63.96712875]
[84.41455841 47.95985413]
[94.21308899 33.40116119]
[94.43641663 18.40282249]
[94.65974426 3.40448546]
[94.88307190 -11.59385204]
[84.15548706 -22.88794708]
[84.59562683 -38.09521103]
[95.42893219 -48.25272751]
[95.65225983 -63.25106430]
[87.24514008 -73.03284454]
[87.73992157 -85.52039337]
[96.32637024 -94.04092407]
[96.77297974 -109.03427124]
[97.21958160 -124.02761841]
[97.66619110 -139.02096558]
[98.11279297 -154.01432800]
[89.01067352 -170.02159119]
[98.80920410 -184.58029175]
[99.03253174 -199.57862854]
[99.25585938 -214.57696533]
[88.82449341 -223.09759521]
[85.25719452 -235.88371277]
[89.64047241 -248.20722961]
[100.16296387 -255.64407349]
[100.60957336 -270.63742065]
[101.05617523 -285.63076782]
[93.73319244 -299.65518188]
[101.84600067 -312.14645386]
[102.29260254 -327.13980103]
[102.73921204 -342.13314819]
[103.18581390 -357.12649536]
[103.63242340 -372.11984253]
[104.07903290 -387.11318970]
[89.83090973 -392.19711304]
[77.85238647 -401.43673706]
[69.31701660 -413.92681885]
[65.06098938 -428.44375610]
[65.50126648 -443.56530762]
[70.59472656 -457.81002808]
[79.84236145 -469.78234863]
[92.33817291 -478.30935669]
[106.85795593 -482.55566406]
[121.97920990 -482.10522461]
[136.22050476 -477.00222778]
[148.18663025 -467.74658203]
[156.70526123 -455.24505615]
[160.94183350 -440.72241211]
[160.48127747 -425.60147095]
[155.36874390 -411.36361694]
[146.10507202 -399.40368652]
[133.59783936 -390.89343262]
[119.07238007 -386.66659546]
[118.62577057 -371.67324829]
[118.17916870 -356.67990112]
[117.73255920 -341.68655396]
[117.28595734 -326.69320679]
[116.83934784 -311.69985962]
[124.19428253 -298.74786377]
[116.04953003 -285.18417358]
[115.60292053 -270.19082642]
[115.15631866 -255.19746399]
[127.20146179 -243.46063232]
[127.02770996 -226.30590820]
[114.25419617 -214.35363770]
[114.03086853 -199.35530090]
[113.80754089 -184.35696411]
[122.00496674 -175.46153259]
[121.94165802 -162.96434021]
[113.10614777 -153.56771851]
[112.65953827 -138.57437134]
[112.21293640 -123.58101654]
[111.76632690 -108.58766937]
[111.31972504 -93.59431458]
[120.45840454 -78.61261749]
[110.65059662 -63.02773666]
[110.42726898 -48.02939987]
[120.95333862 -37.55384064]
[120.94051361 -22.34021187]
[109.88140869 -11.37052441]
[109.65808105 3.62781310]
[109.43475342 18.62615013]
[109.21142578 33.62448883]
[117.40885162 42.51992416]
[117.34554291 55.01711273]
[108.51003265 64.41373444]
[108.06342316 79.40708923]
[107.61682129 94.40043640]
[110.25608063 98.93345642]
[110.16770172 104.62252045]
[106.92708588 109.83168793]
[106.03427124 124.80509186]
[108.64734650 133.55778503]
[105.01506042 139.99426270]
[103.89941406 154.95271301]
[102.78376007 169.91117859]
[115.67993927 162.25032043]
[129.76336670 167.41336060]
[134.65228271 181.59428406]
[126.74273682 194.33944702]
[111.86537170 196.25358582]
[100.98781586 185.92721558]
[98.76269531 200.76126099]
[96.53758240 215.59530640]
[110.62623596 220.89517212]
[123.30007172 229.00544739]
[134.00642395 239.56958008]
[142.27900696 252.12406921]
[147.75827026 266.11880493]
[150.20695496 280.94119263]
[149.52044678 295.94296265]
[145.73115540 310.46841431]
[139.00709534 323.88333130]
[129.64434814 335.60235596]
[118.05405426 345.11480713]
[104.74438477 352.00674438]
[90.29823303 355.97909546]
[75.34768677 356.86056519]
[73.12257385 371.69461060]
[70.89745331 386.52865601]
[68.67234039 401.36270142]
[66.44721985 416.19674683]
[79.12216949 408.17517090]
[93.78645325 411.33093262]
[102.03969574 423.85626221]
[99.15407562 438.57608032]
[86.78259277 447.05822754]
[72.01220703 444.44369507]
[63.30427933 432.23117065]
[59.76460648 446.80755615]
[56.22493362 461.38394165]
[52.68526077 475.96029663]
[49.14558792 490.53668213]
[46.15081406 505.23468018]
[43.70508957 520.03393555]
[41.25936127 534.83325195]
[38.81363297 549.63250732]
[36.36790466 564.43176270]
[33.92217636 579.23101807]
[31.47644997 594.03033447]
[45.42297745 599.72613525]
[57.75209808 608.38293457]
[67.84539795 619.56652832]
[75.19658661 632.71600342]
[79.43694305 647.17169189]
[80.35377502 662.20855713]
[77.90108490 677.07232666]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 203]
[20 202]
[21 201]
[22 200]
[23 199]
[24 198]
[25 197]
[31 196]
[32 195]
[33 194]
[34 193]
[35 192]
[36 185]
[37 184]
[38 183]
[39 182]
[40 181]
[54 167]
[55 166]
[56 165]
[57 159]
[58 158]
[59 157]
[60 155]
[61 154]
[62 151]
[63 150]
[64 149]
[66 146]
[67 145]
[68 144]
[69 143]
[72 140]
[73 139]
[76 137]
[77 136]
[78 135]
[79 134]
[80 133]
[82 130]
[83 129]
[84 128]
[88 125]
[89 124]
[90 123]
[92 121]
[93 120]
[94 119]
[95 118]
[96 117]
[97 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
