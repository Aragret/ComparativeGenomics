%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[70.92478943 706.78161621]
[56.18620300 709.60949707]
[41.27439499 711.30084229]
[26.27686691 711.84576416]
[11.28163338 711.24096680]
[-3.62330556 709.49011230]
[-18.35048103 706.60345459]
[-32.81346893 702.59783936]
[-46.92739105 697.49688721]
[-60.60942078 691.33044434]
[-73.77926636 684.13476562]
[-86.35964203 675.95202637]
[-98.27671814 666.83032227]
[-109.46056366 656.82305908]
[-119.84553528 645.98907471]
[-129.37069702 634.39196777]
[-137.98016357 622.09967041]
[-145.62339783 609.18444824]
[-152.25553894 595.72198486]
[-157.83766174 581.79132080]
[-162.33703613 567.47424316]
[-165.72723389 552.85479736]
[-167.98837280 538.01867676]
[-169.10717773 523.05303955]
[-169.07707214 508.04562378]
[-167.89825439 493.08456421]
[-165.57762146 478.25765991]
[-162.12879944 463.65188599]
[-157.57203674 449.35299683]
[-151.93408203 435.44485474]
[-145.24798584 422.00912476]
[-137.55300903 409.12463379]
[-128.89431763 396.86700439]
[-119.32270813 385.30813599]
[-108.89435577 374.51589966]
[-97.67046356 364.55364990]
[-85.71688843 355.47976685]
[-73.10379028 347.34759521]
[-59.90518951 340.20477295]
[-46.19853210 334.09329224]
[-32.06426239 329.04898071]
[-17.58532524 325.10144043]
[-2.84668899 322.27383423]
[12.06515312 320.58276367]
[27.06269073 320.03814697]
[42.05791473 320.64318848]
[56.96281815 322.39434814]
[59.84809113 307.67446899]
[62.73336411 292.95455933]
[65.61863708 278.23468018]
[54.06261826 266.57553101]
[51.70959473 250.16134644]
[59.68297577 235.43292236]
[75.01465607 228.28900146]
[77.68045807 213.52778625]
[80.34625244 198.76657104]
[83.01204681 184.00535583]
[85.67784119 169.24414062]
[88.34363556 154.48292542]
[90.12610626 139.58920288]
[91.01892090 124.61579895]
[91.91173553 109.64239502]
[92.46994781 94.65278625]
[84.93896484 80.73894501]
[92.86489868 68.12828064]
[93.08822632 53.12994385]
[92.97656250 38.13035965]
[92.52995300 23.13700867]
[92.08335114 8.14365864]
[91.63674164 -6.84969139]
[91.19013977 -21.84304047]
[90.74353027 -36.83639145]
[87.85826111 -51.55628204]
[82.61154175 -65.60875702]
[77.36482239 -79.66122437]
[62.60663986 -76.78966522]
[47.57708740 -76.38653564]
[32.68619156 -78.46283722]
[18.34017944 -82.96192932]
[4.93042517 -89.76107025]
[-7.17724609 -98.67477417]
[-17.65252686 -109.45987701]
[-26.20964432 -121.82214355]
[-32.61515427 -135.42431641]
[-36.69430923 -149.89533997]
[-38.33582687 -164.84040833]
[-37.49492645 -179.85183716]
[-34.19454956 -194.52008057]
[-28.52472687 -208.44497681]
[-20.64014053 -221.24667358]
[-10.75588703 -232.57589722]
[0.85838443 -242.12359619]
[13.88582802 -249.62930298]
[27.97104645 -254.88824463]
[42.72978210 -257.75695801]
[57.75941086 -258.15719604]
[72.64990997 -256.07803345]
[86.99504852 -251.57617188]
[100.40349579 -244.77444458]
[112.50945282 -235.85839844]
[122.98265076 -225.07128906]
[131.53738403 -212.70736694]
[137.94027710 -199.10395813]
[142.01664734 -184.63215637]
[143.65528870 -169.68676758]
[142.81149292 -154.67550659]
[139.50828552 -140.00790405]
[133.83578491 -126.08408356]
[125.94873047 -113.28392029]
[116.06229401 -101.95659637]
[104.44618225 -92.41113281]
[91.41728973 -84.90794373]
[96.66400909 -70.85546875]
[101.91072845 -56.80300140]
[103.51523590 -71.71694183]
[108.87548065 -85.72650146]
[117.63592529 -97.90248108]
[129.21554565 -107.43729401]
[142.84628296 -113.69852448]
[157.62406921 -116.27088928]
[172.56874084 -114.98377228]
[186.68907166 -109.92254639]
[199.04852295 -101.42290497]
[208.82733154 -90.04859924]
[215.37690735 -76.55403900]
[218.26283264 -61.83427429]
[217.29368591 -46.86561203]
[212.53376770 -32.64087677]
[204.29878235 -20.10353661]
[193.13490295 -10.08515167]
[179.78262329 -3.25020432]
[165.12753296 -0.05203257]
[150.14164734 -0.70275956]
[135.81893921 -5.15922499]
[123.10938263 -13.12584686]
[112.85594940 -24.07422829]
[105.73687744 -37.28299713]
[106.18348694 -22.28964806]
[106.63008881 -7.29629755]
[107.07669830 7.69705248]
[107.52330780 22.69040298]
[107.96990967 37.68375397]
[110.27172089 40.35470963]
[111.39419556 44.27326584]
[110.76502991 48.87298965]
[108.08656311 53.35327148]
[107.86323547 68.35160828]
[115.41018677 81.19266510]
[107.46828461 94.87611389]
[109.73503113 97.99607849]
[110.61554718 102.10005188]
[109.70118713 106.54650879]
[106.88513947 110.53520966]
[105.99232483 125.50861359]
[105.09951019 140.48202515]
[115.62908173 129.79895020]
[130.40774536 127.23159027]
[143.92340088 133.73750305]
[151.13505554 146.89013672]
[149.35295105 161.78390503]
[139.24174500 172.86376953]
[124.57268524 175.99723816]
[110.81696320 170.01560974]
[103.10485077 157.14871216]
[100.43905640 171.90994263]
[97.77326202 186.67115784]
[95.10746765 201.43237305]
[92.44167328 216.19358826]
[89.77587891 230.95480347]
[100.02402496 240.17251587]
[104.34502411 253.14739990]
[101.71170044 266.45660400]
[92.91680145 276.64453125]
[80.33853149 281.11993408]
[77.45325470 295.83984375]
[74.56798553 310.55972290]
[71.68270874 325.27963257]
[86.14577484 329.28494263]
[100.25978851 334.38565063]
[113.94194031 340.55181885]
[127.11192322 347.74725342]
[139.69245911 355.92971802]
[151.60969543 365.05123901]
[162.79373169 375.05825806]
[173.17890930 385.89202881]
[182.70429993 397.48898315]
[191.31399536 409.78109741]
[198.95747375 422.69622803]
[205.58985901 436.15853882]
[211.17225647 450.08905029]
[215.67190552 464.40603638]
[219.06237793 479.02545166]
[221.32379150 493.86151123]
[222.44288635 508.82717896]
[222.41307068 523.83453369]
[221.23452759 538.79565430]
[218.91418457 553.62261963]
[215.46563721 568.22845459]
[210.90914917 582.52740479]
[205.27143860 596.43566895]
[198.58561707 609.87152100]
[190.89088440 622.75616455]
[182.23242188 635.01397705]
[172.66102600 646.57299805]
[162.23287964 657.36541748]
[151.00917053 667.32788086]
[139.05577087 676.40197754]
[126.44283295 684.53442383]
[113.24436188 691.67749023]
[99.53782654 697.78924561]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 177]
[48 176]
[49 175]
[50 174]
[54 169]
[55 168]
[56 167]
[57 166]
[58 165]
[59 164]
[60 155]
[61 154]
[62 153]
[63 149]
[65 147]
[66 146]
[67 142]
[68 141]
[69 140]
[70 139]
[71 138]
[72 137]
[73 114]
[74 113]
[75 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
