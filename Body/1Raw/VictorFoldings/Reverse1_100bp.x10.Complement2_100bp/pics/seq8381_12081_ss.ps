%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[84.90470123 582.66845703]
[70.63928223 577.95208740]
[57.16910934 571.29620361]
[44.75639343 562.83038330]
[33.64274597 552.71936035]
[24.04449654 541.15991211]
[16.14848137 528.37719727]
[10.10839844 514.61987305]
[6.04181814 500.15582275]
[4.02789831 485.26654053]
[4.10584021 470.24188232]
[6.27412748 455.37432861]
[10.49055290 440.95321655]
[16.67304230 427.25933838]
[24.70125198 414.55917358]
[34.41891098 403.09997559]
[45.63686371 393.10479736]
[58.13674545 384.76818848]
[71.67524719 378.25241089]
[85.98883057 373.68432617]
[100.79888916 371.15286255]
[100.35227966 356.15951538]
[99.90567780 341.16613770]
[99.45906830 326.17279053]
[96.11781311 319.58053589]
[99.11911011 310.95327759]
[98.89578247 295.95492554]
[90.96984863 283.34426880]
[98.50082397 269.43041992]
[98.27749634 254.43208313]
[98.05416870 239.43374634]
[97.83084106 224.43540955]
[97.38423920 209.44206238]
[96.71444702 194.45701599]
[96.04466248 179.47198486]
[87.74678040 167.10289001]
[94.86015320 152.97099304]
[94.19036865 137.98596191]
[93.52058411 123.00092316]
[92.85079956 108.01588440]
[89.63751984 93.36409760]
[83.97473907 79.47406769]
[69.17049408 68.52345276]
[72.23465729 51.24404907]
[66.36569977 37.43987274]
[60.49673843 23.63569450]
[54.62777710 9.83151722]
[49.58373642 5.55727005]
[47.73324585 0.18393727]
[48.79636765 -4.47211361]
[43.34101105 -18.44491196]
[37.88565445 -32.41770935]
[32.43029785 -46.39050674]
[26.97494125 -60.36330414]
[21.51958466 -74.33610535]
[16.06422806 -88.30889893]
[10.60887051 -102.28170013]
[5.15351295 -116.25449371]
[-0.30184397 -130.22729492]
[-4.37823248 -133.48768616]
[-6.57654762 -137.57678223]
[-6.89562130 -141.64042664]
[-5.67346144 -144.94779968]
[-10.49945927 -159.15025330]
[-15.32545662 -173.35270691]
[-20.15145493 -187.55516052]
[-24.97745132 -201.75761414]
[-29.80344963 -215.96006775]
[-41.56933212 -226.53715515]
[-38.33820724 -241.07705688]
[-43.16420746 -255.27952576]
[-47.99020386 -269.48196411]
[-52.81620026 -283.68441772]
[-57.64220047 -297.88687134]
[-62.46819687 -312.08935547]
[-67.29419708 -326.29180908]
[-82.13133240 -323.86090088]
[-97.16622162 -323.90545654]
[-111.98870087 -326.42419434]
[-126.19439697 -331.34841919]
[-139.39576721 -338.54379272]
[-151.23268127 -347.81405640]
[-161.38220215 -358.90625000]
[-169.56745911 -371.51782227]
[-175.56513977 -385.30468750]
[-179.21162415 -399.89074707]
[-180.40745544 -414.87805176]
[-179.11997986 -429.85778809]
[-175.38432312 -444.42126465]
[-169.30242920 -458.17117310]
[-161.04017639 -470.73245239]
[-150.82299805 -481.76235962]
[-138.92959595 -490.96002197]
[-125.68446350 -498.07452393]
[-111.44891357 -502.91177368]
[-96.61130524 -505.33978271]
[-81.57642365 -505.29235840]
[-66.75443268 -502.77075195]
[-52.54968643 -497.84378052]
[-39.34969711 -490.64587402]
[-27.51457596 -481.37335205]
[-17.36718750 -470.27917480]
[-9.18436432 -457.66604614]
[-3.18933797 -443.87802124]
[0.45434254 -429.29125977]
[1.64727485 -414.30371094]
[0.35691494 -399.32421875]
[-3.38153529 -384.76147461]
[-9.46608829 -371.01272583]
[-17.73075294 -358.45306396]
[-27.95006180 -347.42510986]
[-39.84522629 -338.22973633]
[-53.09173965 -331.11779785]
[-48.26573944 -316.91534424]
[-43.43974304 -302.71289062]
[-38.61374664 -288.51043701]
[-33.78774643 -274.30798340]
[-28.96175003 -260.10552979]
[-24.13575363 -245.90306091]
[-12.71505642 -236.34184265]
[-15.60099411 -220.78607178]
[-10.77499676 -206.58361816]
[-5.94899893 -192.38116455]
[-1.12300110 -178.17869568]
[3.70299649 -163.97624207]
[8.52899456 -149.77378845]
[13.67095375 -135.68264771]
[19.12631035 -121.70985413]
[24.58166885 -107.73705292]
[30.03702545 -93.76425934]
[35.49238205 -79.79145813]
[40.94773865 -65.81866455]
[46.40309525 -51.84586334]
[51.85845184 -37.87306595]
[57.31380844 -23.90026855]
[62.76916885 -9.92747021]
[68.43195343 3.96255636]
[74.30091095 17.76673317]
[80.16987610 31.57090950]
[86.03883362 45.37508774]
[97.13612366 50.18931961]
[102.13862610 61.64177322]
[97.86476135 73.81127930]
[103.52754974 87.70130920]
[104.64574432 72.74304199]
[109.40033722 58.51652527]
[117.50057983 45.89170837]
[128.45114136 35.64060211]
[141.58239746 28.39006805]
[156.09135437 24.58348083]
[171.09078979 24.45361328]
[185.66348267 28.00840569]
[198.91831970 35.03048325]
[210.04473877 45.09044266]
[218.36236572 57.57311249]
[223.36257935 71.71517181]
[224.73960876 86.65183258]
[222.40924072 101.46970367]
[216.51400757 115.26268005]
[207.41436768 127.18730164]
[195.66679382 136.51438904]
[181.98963928 142.67356873]
[167.21928406 145.28820801]
[152.25891113 144.19844055]
[138.02339172 139.47088623]
[125.38320923 131.39463806]
[115.11131287 120.46357727]
[107.83583832 107.34609985]
[108.50562286 122.33113861]
[109.17540741 137.31617737]
[109.84519196 152.30120850]
[118.19098663 165.74212646]
[111.02970123 178.80220032]
[111.69948578 193.78723145]
[112.36927795 208.77227783]
[115.59963989 214.54083252]
[115.45375061 220.22201538]
[112.82917786 224.21208191]
[113.05250549 239.21041870]
[113.27583313 254.20875549]
[113.49916077 269.20709229]
[121.44107056 282.89053345]
[113.89411926 295.73159790]
[114.11744690 310.72994995]
[114.45242310 325.72619629]
[114.89902496 340.71954346]
[115.34563446 355.71289062]
[115.79223633 370.70623779]
[130.72671509 372.35174561]
[145.28681946 376.05975342]
[159.18913269 381.75814819]
[172.16307068 389.33596802]
[183.95605469 398.64572144]
[194.33854675 409.50619507]
[203.10844421 421.70599365]
[210.09504700 435.00762939]
[215.16236877 449.15219116]
[218.21173096 463.86434937]
[219.18382263 478.85769653]
[218.05970764 493.84045410]
[214.86125183 508.52090454]
[209.65072632 522.61334229]
[202.52955627 535.84344482]
[193.63635254 547.95361328]
[183.14422607 558.70825195]
[171.25740051 567.89788818]
[158.20727539 575.34368896]
[144.24787903 580.90075684]
[129.65090942 584.46093750]
[114.70050812 585.95483398]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 188]
[22 187]
[23 186]
[24 185]
[26 184]
[27 183]
[29 181]
[30 180]
[31 179]
[32 178]
[33 175]
[34 174]
[35 173]
[37 171]
[38 170]
[39 169]
[40 168]
[41 144]
[42 143]
[44 140]
[45 139]
[46 138]
[47 137]
[50 136]
[51 135]
[52 134]
[53 133]
[54 132]
[55 131]
[56 130]
[57 129]
[58 128]
[59 127]
[63 126]
[64 125]
[65 124]
[66 123]
[67 122]
[68 121]
[70 119]
[71 118]
[72 117]
[73 116]
[74 115]
[75 114]
[76 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
