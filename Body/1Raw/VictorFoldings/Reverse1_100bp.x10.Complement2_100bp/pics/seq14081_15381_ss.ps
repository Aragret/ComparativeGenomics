%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAUAACAUUAACUCUAACGAGCCCCCUUAUCCAAUACACUAAUCCUCAUCCCAAUCCUACUCACCCUUCUUCUUUCUCUCCUUCAUUUCAAAUUAAUACxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[5.73788500 416.67260742]
[13.40384769 429.63592529]
[18.10342979 443.94424438]
[19.61682129 458.92834473]
[17.87323952 473.88742065]
[12.95423317 488.12179565]
[5.08987522 500.96569824]
[-5.35200500 511.81842041]
[-17.88302231 520.17230225]
[-31.91707611 525.63665771]
[-46.79777145 527.95593262]
[-61.82910919 527.02160645]
[-76.30804443 522.87744141]
[-89.55738068 515.71716309]
[-100.95741272 505.87576294]
[-109.97493744 493.81350708]
[-116.18820190 480.09454346]
[-119.30658722 465.36059570]
[-119.18424988 450.30072021]
[-115.82690430 435.61938477]
[-109.39159393 422.00317383]
[-100.17929077 410.08898926]
[-88.62088013 400.43408203]
[-75.25697327 393.49002075]
[-60.71262360 389.58160400]
[-45.66809082 388.89160156]
[-30.82703590 391.45230103]
[-25.16424942 377.56225586]
[-19.50146294 363.67224121]
[-13.83867741 349.78222656]
[-8.17588997 335.89218140]
[-2.51310372 322.00216675]
[3.04612207 308.07037354]
[8.50147915 294.09756470]
[13.95683575 280.12475586]
[19.41219330 266.15197754]
[24.76338005 252.13894653]
[30.01009750 238.08647156]
[35.25681686 224.03401184]
[32.46002960 209.40434265]
[44.53561783 199.18226624]
[49.78233337 185.12979126]
[55.02905273 171.07731628]
[60.27577209 157.02484131]
[48.01902771 165.67193604]
[33.16005707 167.72402954]
[19.01840019 162.72268677]
[8.75333405 151.78520203]
[4.65810061 137.35505676]
[7.64758730 122.65598297]
[17.05393410 110.97177887]
[30.77573967 104.91272736]
[45.74751663 105.83244324]
[58.62453461 113.52545929]
[66.53002930 126.27313232]
[67.69789886 141.22761536]
[75.16563416 128.21867371]
[82.63337708 115.20971680]
[90.10112000 102.20075989]
[91.06393433 94.19791412]
[97.77812195 89.05490875]
[105.43872070 76.15857697]
[113.09931946 63.26225281]
[109.41842651 48.12657166]
[117.37107849 35.15699005]
[131.82331848 31.74110222]
[139.48391724 18.84477615]
[147.14451599 5.94844913]
[154.80511475 -6.94787788]
[162.46571350 -19.84420395]
[170.12631226 -32.74053192]
[177.59405518 -45.74948502]
[184.86727905 -58.86817932]
[184.79183960 -74.68920135]
[197.72994995 -82.06854248]
[205.00318909 -95.18723297]
[212.27641296 -108.30593109]
[211.52938843 -126.70493317]
[226.91366577 -135.14833069]
[233.99076843 -148.37385559]
[241.06787109 -161.59938049]
[248.14497375 -174.82490540]
[255.22207642 -188.05044556]
[260.78131104 -201.98223877]
[264.75341797 -216.44676208]
[268.72549438 -230.91128540]
[272.69760132 -245.37580872]
[276.66970825 -259.84033203]
[262.74780273 -265.47036743]
[249.57365417 -272.67858887]
[237.32542419 -281.36752319]
[226.16877747 -291.41967773]
[216.25457764 -302.69906616]
[207.71690369 -315.05322266]
[200.67120361 -328.31500244]
[195.21279907 -342.30505371]
[191.41546631 -356.83422852]
[189.33059692 -371.70602417]
[188.98635864 -386.71926880]
[190.38742065 -401.67098999]
[193.51484680 -416.35891724]
[198.32630920 -430.58447266]
[204.75675964 -444.15524292]
[212.71923828 -456.88769531]
[222.10606384 -468.60964966]
[232.79026794 -479.16259766]
[244.62736511 -488.40377808]
[257.45730591 -496.20822144]
[271.10653687 -502.47042847]
[285.39047241 -507.10565186]
[300.11596680 -510.05123901]
[315.08383179 -511.26736450]
[330.09170532 -510.73754883]
[344.93655396 -508.46899414]
[359.41769409 -504.49234009]
[373.33920288 -498.86138916]
[386.51287842 -491.65228271]
[398.76049805 -482.96252441]
[409.91650391 -472.90963745]
[419.82995605 -461.62954712]
[428.36679077 -449.27484131]
[435.41159058 -436.01260376]
[440.86907959 -422.02215576]
[444.66543579 -407.49273682]
[446.74932861 -392.62081909]
[447.09255981 -377.60754395]
[445.69049072 -362.65591431]
[442.56210327 -347.96817017]
[437.74966431 -333.74295044]
[431.31829834 -320.17260742]
[423.35498047 -307.44067383]
[413.96737671 -295.71936035]
[403.28247070 -285.16714478]
[391.44476318 -275.92675781]
[378.61431885 -268.12313843]
[364.96466064 -261.86187744]
[350.68041992 -257.22756958]
[335.95471191 -254.28297424]
[320.98675537 -253.06785583]
[305.97894287 -253.59867859]
[291.13421631 -255.86824036]
[287.16210938 -241.40371704]
[283.19003296 -226.93919373]
[279.21792603 -212.47467041]
[275.24581909 -198.01014709]
[285.85543823 -208.61372375]
[299.54949951 -214.73526001]
[314.52627563 -215.56932068]
[328.81536865 -211.00621033]
[340.53677368 -201.64625549]
[348.14834595 -188.72091675]
[350.64862061 -173.93077087]
[347.70870972 -159.22169495]
[339.71536255 -146.52893066]
[327.72024536 -137.52243042]
[313.30151367 -133.38714600]
[298.35623169 -134.66714478]
[284.85067749 -141.19403076]
[274.56176758 -152.10906982]
[268.84317017 -165.97621155]
[268.44760132 -180.97332764]
[261.37051392 -167.74780273]
[254.29339600 -154.52227783]
[247.21629333 -141.29675293]
[240.13919067 -128.07122803]
[243.34396362 -116.40692139]
[237.55615234 -105.33059692]
[225.39511108 -101.03269958]
[218.12188721 -87.91400146]
[210.84864807 -74.79531097]
[211.44430542 -59.91262054]
[197.98597717 -51.59494781]
[190.71273804 -38.47625351]
[191.14428711 -33.71990967]
[188.59249878 -28.64197540]
[183.02262878 -25.07993507]
[175.36203003 -12.18360710]
[167.70143127 0.71271956]
[160.04084778 13.60904694]
[152.38024902 26.50537300]
[144.71965027 39.40169907]
[148.63327026 53.72716904]
[141.04804993 66.91500854]
[125.99564362 70.92285156]
[118.33504486 83.81917572]
[110.67445374 96.71550751]
[103.11006927 109.66850281]
[95.64233398 122.67745209]
[88.17459106 135.68640137]
[80.70684814 148.69535828]
[74.32823944 162.27156067]
[69.08152771 176.32403564]
[63.83480835 190.37651062]
[58.58808899 204.42898560]
[61.00959396 220.06378174]
[49.30928802 229.28073120]
[44.06256866 243.33319092]
[38.81584930 257.38568115]
[38.74588013 266.51983643]
[33.38499069 271.60733032]
[27.92963409 285.58013916]
[22.47427750 299.55291748]
[17.01891899 313.52572632]
[16.81296349 322.65783691]
[11.37692356 327.66494751]
[5.71413660 341.55496216]
[0.05134992 355.44500732]
[-5.61143684 369.33502197]
[-11.27422333 383.22506714]
[-16.93700981 397.11508179]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 210]
[28 209]
[29 208]
[30 207]
[31 206]
[32 205]
[33 203]
[34 202]
[35 201]
[36 200]
[37 198]
[38 197]
[39 196]
[41 194]
[42 193]
[43 192]
[44 191]
[56 190]
[57 189]
[58 188]
[59 187]
[61 186]
[62 185]
[63 184]
[66 181]
[67 180]
[68 179]
[69 178]
[70 177]
[71 176]
[72 173]
[73 172]
[75 170]
[76 169]
[77 168]
[79 165]
[80 164]
[81 163]
[82 162]
[83 161]
[84 145]
[85 144]
[86 143]
[87 142]
[88 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
