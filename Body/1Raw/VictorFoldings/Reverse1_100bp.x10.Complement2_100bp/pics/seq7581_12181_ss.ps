%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[62.41627884 675.57806396]
[51.50068283 685.91003418]
[39.13577271 694.45458984]
[25.61140633 701.01141357]
[11.24461174 705.42681885]
[-3.62783146 707.59729004]
[-18.65729332 707.47186279]
[-33.49145889 705.05364990]
[-47.78260040 700.39923096]
[-61.19570541 693.61767578]
[-73.41635895 684.86804199]
[-84.15808105 674.35540771]
[-93.16908264 662.32617188]
[-100.23812103 649.06237793]
[-105.19950104 634.87487793]
[-107.93690491 620.09625244]
[-108.38618469 605.07299805]
[-106.53678894 590.15722656]
[-102.43207550 575.69860840]
[-96.16826630 562.03607178]
[-87.89219666 549.48986816]
[-77.79787445 538.35406494]
[-66.12191010 528.88983154]
[-53.13801575 521.31890869]
[-39.15054703 515.81878662]
[-24.48739624 512.51843262]
[-9.49228477 511.49517822]
[5.48328018 512.77301025]
[9.02295303 498.19662476]
[12.56262493 483.62026978]
[16.10229683 469.04388428]
[11.58686924 454.85021973]
[22.36219597 443.26562500]
[25.90186691 428.68923950]
[29.44153976 414.11288452]
[23.60099983 397.56430054]
[36.42164993 384.34643555]
[39.74390793 369.71896362]
[43.06616974 355.09149170]
[46.38842773 340.46405029]
[49.49253845 325.78872681]
[44.34783554 311.81085205]
[54.59513092 299.75665283]
[57.48040390 285.03677368]
[52.33570099 271.05889893]
[62.58300018 259.00469971]
[54.08620071 246.82521057]
[56.80258942 231.85604858]
[69.63516998 223.02639771]
[72.52044678 208.30651855]
[62.55015564 194.76280212]
[65.51863098 177.86596680]
[80.07001495 168.15634155]
[82.73580933 153.39512634]
[85.40160370 138.63391113]
[88.06739807 123.87269592]
[90.73319244 109.11147308]
[92.95831299 94.27743530]
[94.74077606 79.38371277]
[96.52324677 64.48999786]
[98.19478607 49.58342361]
[99.75531006 34.66481781]
[101.31582642 19.74621391]
[102.76525116 4.81640530]
[104.10348511 -10.12378025]
[105.33045959 -25.07351303]
[106.44610596 -40.03196716]
[107.56175232 -54.99042130]
[108.67740631 -69.94887543]
[109.79305267 -84.90732574]
[107.31058502 -93.69795990]
[111.03829956 -100.07964325]
[112.37653351 -115.01982880]
[105.90127563 -129.45526123]
[114.74319458 -141.44149780]
[116.08142853 -156.38168335]
[107.94821167 -172.90234375]
[118.59592438 -186.85200500]
[119.71157074 -201.81045532]
[117.18958282 -207.92201233]
[118.00953674 -213.54559326]
[121.08965302 -217.19551086]
[122.65017700 -232.11412048]
[108.00320435 -235.43112183]
[93.85135651 -240.45721436]
[80.39331055 -247.12184143]
[67.81799316 -255.33146667]
[56.30194473 -264.97079468]
[46.00683212 -275.90457153]
[37.07718277 -287.97924805]
[29.63835526 -301.02529907]
[23.79477692 -314.85964966]
[19.62848282 -329.28805542]
[17.19796371 -344.10791016]
[16.53733826 -359.11126709]
[17.65587997 -374.08740234]
[20.53788948 -388.82614136]
[25.14290428 -403.12054443]
[31.40627861 -416.76995850]
[39.24008560 -429.58276367]
[48.53434753 -441.37908936]
[59.15859222 -451.99331665]
[70.96366882 -461.27645874]
[83.78385162 -469.09817505]
[97.43916321 -475.34866333]
[111.73791504 -479.94018555]
[126.47936249 -482.80828857]
[141.45657349 -483.91271973]
[156.45927429 -483.23791504]
[171.27685547 -480.79342651]
[185.70130920 -476.61352539]
[199.53012085 -470.75689697]
[212.56918335 -463.30578613]
[224.63542175 -454.36474609]
[235.55946350 -444.05932617]
[245.18794250 -432.53417969]
[253.38569641 -419.95114136]
[260.03762817 -406.48681641]
[265.05038452 -392.33023071]
[268.35354614 -377.68011475]
[269.90078735 -362.74215698]
[269.67037964 -347.72607422]
[267.66552734 -332.84262085]
[263.91439819 -318.30078125]
[258.46966553 -304.30465698]
[251.40773010 -291.05078125]
[242.82775879 -278.72518921]
[232.85018921 -267.50088501]
[221.61508179 -257.53549194]
[209.28019714 -248.96890259]
[196.01864624 -241.92135620]
[182.01664734 -236.49179077]
[167.47073364 -232.75643921]
[152.58512878 -230.76773071]
[137.56878662 -230.55360413]
[136.00825500 -215.63499451]
[134.67002869 -200.69480896]
[133.55438232 -185.73635864]
[141.20780945 -176.36877441]
[140.40075684 -163.89750671]
[131.02160645 -155.04344177]
[129.68338013 -140.10325623]
[136.25434875 -126.73645020]
[127.31671906 -113.68159485]
[125.97848511 -98.74140930]
[124.75150299 -83.79167938]
[123.63585663 -68.83322144]
[122.52021027 -53.87477112]
[121.40456390 -38.91631699]
[120.28890991 -23.95786476]
[122.92621613 -17.05377769]
[119.04367065 -8.78554535]
[117.70543671 6.15463924]
[120.23965454 13.09722710]
[116.23443604 21.30673599]
[114.67391205 36.22534180]
[113.11338806 51.14394760]
[115.54396057 58.12349701]
[111.41696167 66.27246094]
[109.63449097 81.16618347]
[107.85202789 96.05989838]
[109.52597046 98.60694122]
[110.31014252 101.81935120]
[109.95632172 105.36875916]
[108.34106445 108.83966827]
[105.49441528 111.77726746]
[102.82861328 126.53849030]
[100.16281891 141.29971313]
[97.49702454 156.06092834]
[94.83123016 170.82214355]
[103.73373413 180.92956543]
[105.16854095 194.12622070]
[98.83457947 205.57012939]
[87.24033356 211.19178772]
[84.35506439 225.91168213]
[92.90470123 238.93247986]
[89.76892853 253.81944275]
[77.30288696 261.88998413]
[82.24121857 276.92071533]
[72.20029449 287.92205811]
[69.31502533 302.64193726]
[74.25335693 317.67269897]
[64.21243286 328.67401123]
[65.99031067 335.04196167]
[64.50790405 340.52825928]
[61.01588821 343.78631592]
[57.69363022 358.41375732]
[54.37136841 373.04122925]
[51.04911041 387.66867065]
[57.24999619 398.97848511]
[54.18174362 411.09335327]
[44.01791382 417.65255737]
[40.47824478 432.22891235]
[36.93857193 446.80529785]
[41.20081711 462.04156494]
[30.67867279 472.58355713]
[27.13899994 487.15994263]
[23.59932899 501.73629761]
[20.05965614 516.31268311]
[33.95342636 522.04534912]
[46.80921936 529.83184814]
[58.32567596 539.48956299]
[68.23283386 550.79217529]
[76.29846191 563.47467041]
[82.33348083 577.23980713]
[86.19643402 591.76489258]
[87.79675293 606.70941162]
[87.09693146 621.72308350]
[84.11337280 636.45397949]
[78.91601562 650.55676270]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 199]
[29 198]
[30 197]
[31 196]
[33 194]
[34 193]
[35 192]
[37 189]
[38 188]
[39 187]
[40 186]
[41 183]
[43 181]
[44 180]
[46 178]
[49 175]
[50 174]
[53 170]
[54 169]
[55 168]
[56 167]
[57 166]
[58 161]
[59 160]
[60 159]
[61 157]
[62 156]
[63 155]
[64 153]
[65 152]
[66 150]
[67 149]
[68 148]
[69 147]
[70 146]
[72 145]
[73 144]
[75 142]
[76 141]
[78 138]
[79 137]
[82 136]
[83 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
