%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGCGUCCGCCGUUUCUGAUCAUACCGUUAUCCGUGUUAUAACCGAUUCUCCCUCACCCACAACUCCCAAUACUCUCAUCGAUAUUACUUGUCGCUAUxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[16.22319412 534.78161621]
[1.24378479 539.27062988]
[-13.09605312 533.03338623]
[-20.02548790 519.01495361]
[-16.27264977 503.83435059]
[-3.60951495 494.65945435]
[-2.71669912 479.68603516]
[-1.82388330 464.71264648]
[-0.93106741 449.73922729]
[-0.03825155 434.76580811]
[0.85456431 419.79241943]
[1.74738014 404.81900024]
[-6.14563608 417.57440186]
[-17.71082878 427.12670898]
[-31.72769547 432.46780396]
[-46.71700287 433.03408813]
[-61.09689331 428.76574707]
[-73.34982300 420.11325073]
[-82.18271637 407.98971558]
[-86.66340637 393.67456055]
[-86.31903839 378.67852783]
[-81.18595886 364.58413696]
[-71.80587769 352.87884521]
[-59.16868591 344.79791260]
[-44.60802078 341.19415283]
[-29.66050720 342.44787598]
[-15.90358829 348.42675781]
[-4.78906727 358.49987793]
[2.51011562 371.60415649]
[5.22366333 386.35684204]
[9.83767319 372.08410645]
[14.45168209 357.81140137]
[19.06569099 343.53866577]
[23.67970085 329.26593018]
[28.29371071 314.99319458]
[16.07175064 304.90606689]
[8.63841629 290.86703491]
[7.15807772 275.01196289]
[11.88686180 259.76589966]
[22.12892342 247.47216797]
[36.33867264 240.03216553]
[52.35396576 238.61137390]
[56.75496292 224.27151489]
[61.15596390 209.93167114]
[65.34297180 195.52789307]
[69.31507111 181.06336975]
[73.28716278 166.59884644]
[77.25926208 152.13432312]
[71.55062103 141.46951294]
[74.74146271 129.38636780]
[85.64855957 122.50174713]
[89.83557129 108.09796143]
[93.59186554 93.57590485]
[96.91413116 78.94844055]
[100.23638916 64.32098389]
[103.55864716 49.69352341]
[106.88090515 35.06606293]
[105.72991943 26.00443840]
[110.36305237 20.24632835]
[113.90272522 5.66995192]
[117.44239807 -8.90642357]
[120.98207092 -23.48279953]
[124.52174377 -38.05917358]
[128.06141663 -52.63554764]
[131.60108948 -67.21192169]
[134.81436157 -81.86370850]
[133.39408875 -90.88704681]
[137.85372925 -96.78055573]
[140.95783997 -111.45585632]
[144.06195068 -126.13115692]
[147.16606140 -140.80645752]
[150.27017212 -155.48176575]
[153.37426758 -170.15705872]
[141.37644958 -161.15415955]
[126.38046265 -160.80747986]
[113.97943115 -169.24633789]
[108.79863739 -183.32325745]
[112.77038574 -197.78787231]
[124.41332245 -207.24525452]
[139.38490295 -208.16802979]
[152.10112000 -200.21203613]
[157.81921387 -186.34347534]
[162.64521790 -200.54592896]
[167.47120667 -214.74838257]
[172.29721069 -228.95085144]
[158.62480164 -235.15020752]
[145.62588501 -242.65986633]
[133.42564392 -251.40748596]
[122.14158630 -261.30883789]
[111.88237762 -272.26855469]
[102.74682617 -284.18109131]
[94.82290649 -296.93170166]
[88.18694305 -310.39761353]
[82.90284729 -324.44912720]
[79.02149200 -338.95092773]
[76.58027649 -353.76333618]
[75.60270691 -368.74368286]
[76.09819031 -383.74774170]
[78.06195831 -398.63095093]
[81.47509766 -413.25003052]
[86.30474854 -427.46414185]
[92.50437927 -441.13644409]
[100.01429749 -454.13519287]
[108.76216888 -466.33526611]
[118.66374207 -477.61914062]
[129.62367249 -487.87811279]
[141.53637695 -497.01342773]
[154.28715515 -504.93710327]
[167.75320435 -511.57278442]
[181.80482483 -516.85662842]
[196.30670166 -520.73767090]
[211.11914062 -523.17858887]
[226.09951782 -524.15588379]
[241.10356140 -523.66009521]
[255.98674011 -521.69598389]
[270.60574341 -518.28259277]
[284.81976318 -513.45263672]
[298.49194336 -507.25274658]
[311.49053955 -499.74255371]
[323.69042969 -490.99444580]
[334.97409058 -481.09265137]
[345.23287964 -470.13250732]
[354.36795044 -458.21963501]
[362.29135132 -445.46868896]
[368.92678833 -432.00250244]
[374.21032715 -417.95077515]
[378.09109497 -403.44882202]
[380.53170776 -388.63632202]
[381.50869751 -373.65594482]
[381.01260376 -358.65191650]
[379.04824829 -343.76876831]
[375.63452148 -329.14984131]
[370.80429077 -314.93591309]
[364.60412598 -301.26385498]
[357.09368896 -288.26541138]
[348.34533691 -276.06567383]
[338.44329834 -264.78222656]
[327.48297119 -254.52366638]
[315.56988525 -245.38882446]
[302.81878662 -237.46568298]
[289.35247803 -230.83052063]
[275.30062866 -225.54725647]
[260.79861450 -221.66677856]
[245.98606873 -219.22645569]
[231.00566101 -218.24978638]
[216.00164795 -218.74617004]
[201.11853027 -220.71083069]
[186.49966431 -224.12484741]
[181.67367554 -209.92239380]
[176.84767151 -195.71994019]
[172.02166748 -181.51748657]
[168.04957581 -167.05296326]
[164.94546509 -152.37765503]
[161.84135437 -137.70234680]
[158.73724365 -123.02704620]
[155.63313293 -108.35174561]
[152.52902222 -93.67644501]
[149.53425598 -78.97843933]
[151.18731689 -75.86400604]
[151.41401672 -71.79415894]
[149.78172302 -67.44802094]
[146.17745972 -63.67225266]
[142.63778687 -49.09587860]
[139.09811401 -34.51950073]
[135.55844116 -19.94312668]
[132.01876831 -5.36675072]
[128.47909546 9.20962429]
[124.93943024 23.78599930]
[121.50836945 38.38832092]
[118.18610382 53.01578140]
[114.86384583 67.64324188]
[111.54158783 82.27070618]
[108.21932983 96.89816284]
[109.61920166 99.60553741]
[110.06491852 102.88209534]
[109.34375763 106.37542725]
[107.37616730 109.65946198]
[104.23934937 112.28497314]
[100.05233765 126.68875885]
[104.85590363 144.46534729]
[91.72378540 156.10641479]
[87.75168610 170.57093811]
[83.77959442 185.03546143]
[79.80749512 199.49998474]
[81.10682678 205.98252869]
[79.22047424 211.34336853]
[75.49581146 214.33267212]
[71.09481049 228.67251587]
[66.69380951 243.01235962]
[77.93446350 251.75872803]
[85.49861145 263.79138184]
[88.49490356 277.65411377]
[86.58335876 291.67742920]
[80.01379395 304.17953491]
[69.59339905 313.66821289]
[56.58760452 319.01870728]
[42.56644440 319.60720825]
[37.95243454 333.87994385]
[33.33842468 348.15264893]
[28.72441483 362.42538452]
[24.11040688 376.69812012]
[19.49639702 390.97085571]
[16.72078514 405.71182251]
[15.82797050 420.68524170]
[14.93515396 435.65863037]
[14.04233837 450.63204956]
[13.14952278 465.60543823]
[12.25670624 480.57885742]
[11.36389065 495.55224609]
[22.84703445 506.16693115]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 209]
[7 208]
[8 207]
[9 206]
[10 205]
[11 204]
[12 203]
[30 202]
[31 201]
[32 200]
[33 199]
[34 198]
[35 197]
[42 189]
[43 188]
[44 187]
[45 184]
[46 183]
[47 182]
[48 181]
[51 179]
[52 178]
[53 173]
[54 172]
[55 171]
[56 170]
[57 169]
[59 168]
[60 167]
[61 166]
[62 165]
[63 164]
[64 163]
[65 162]
[66 158]
[68 157]
[69 156]
[70 155]
[71 154]
[72 153]
[73 152]
[82 151]
[83 150]
[84 149]
[85 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
