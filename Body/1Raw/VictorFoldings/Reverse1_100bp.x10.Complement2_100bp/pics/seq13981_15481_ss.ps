%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAAAACCCAACUCCACUACUACCUCCACCUCUAAACCACGACACUUUAACAAAAUCCAUUAUCGAAAAGAUCAGUCCAAUCCAGAUCCUCCUCAUCCCxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[97.96397400 587.93640137]
[98.66020203 572.91125488]
[102.02828979 558.25189209]
[107.95996857 544.42962646]
[116.26455688 531.88879395]
[126.67510986 521.03240967]
[138.85694885 512.20959473]
[152.41850281 505.70388794]
[148.44641113 491.23934937]
[144.47430420 476.77484131]
[140.39463806 462.34027100]
[136.20762634 447.93649292]
[132.02061462 433.53271484]
[127.83361053 419.12893677]
[116.85123444 409.06729126]
[120.42889404 393.65591431]
[116.24188232 379.25213623]
[112.05487061 364.84832764]
[107.86785889 350.44454956]
[105.47895813 348.97781372]
[103.52711487 346.47644043]
[102.40931702 343.10214233]
[102.45673370 339.15722656]
[103.88787842 335.05773926]
[100.56562042 320.43029785]
[97.24336243 305.80282593]
[93.92110443 291.17535400]
[90.59884644 276.54791260]
[86.05194855 270.72146606]
[87.33773041 261.67797852]
[84.23361969 247.00267029]
[80.22888947 261.45819092]
[72.19187164 274.12335205]
[60.81784821 283.90249634]
[47.09078598 289.94961548]
[32.19820786 291.74157715]
[17.42847633 289.12338257]
[4.05931807 282.32150269]
[-6.75269985 271.92437744]
[-14.07223034 258.83145142]
[-17.26605988 244.17541504]
[-16.05788994 229.22415161]
[-10.55224228 215.27108765]
[-1.22540689 203.52331543]
[11.11574936 194.99713135]
[25.40359497 190.43013000]
[40.40208435 190.21740723]
[54.81370544 194.37736511]
[67.39170074 202.55012512]
[77.04795074 214.02865601]
[82.94620514 227.81655884]
[84.06185150 212.85810852]
[85.17750549 197.89965820]
[86.29315186 182.94120789]
[87.40879822 167.98275757]
[80.63954163 154.71525574]
[89.38182068 141.52877808]
[90.49746704 126.57032776]
[91.61312103 111.61187744]
[85.71572876 98.93463135]
[93.42842865 87.27247620]
[86.73896790 72.93505096]
[95.40145111 60.81850815]
[96.51709747 45.86005402]
[97.63274384 30.90160179]
[98.74839783 15.94314766]
[99.86404419 0.98469442]
[89.69910431 12.01529121]
[75.21144867 15.90216541]
[60.89022827 11.44092655]
[51.17303085 0.01393758]
[49.07083893 -14.83802414]
[55.23503113 -28.51291656]
[67.75557709 -36.77342606]
[82.75283813 -37.05994415]
[95.57975769 -29.28368950]
[102.26181793 -15.85396481]
[105.36592865 -30.52926636]
[108.47003937 -45.20457077]
[103.75604248 -60.30717850]
[113.95964813 -71.15778351]
[117.06375885 -85.83309174]
[119.06777191 -100.69861603]
[119.96058655 -115.67201996]
[120.85340118 -130.64543152]
[121.74621582 -145.61883545]
[122.30442810 -160.60844421]
[122.52775574 -175.60678101]
[122.75108337 -190.60511780]
[122.97441101 -205.60345459]
[123.19773865 -220.60179138]
[123.42106628 -235.60012817]
[123.64439392 -250.59846497]
[112.03045654 -258.02188110]
[105.65174103 -270.11862183]
[106.07978058 -283.67907715]
[113.09586334 -295.16467285]
[124.77610016 -301.63104248]
[125.22270966 -316.62438965]
[111.34398651 -322.82516479]
[100.89828491 -333.86853027]
[95.47849274 -348.07043457]
[95.91109467 -363.26522827]
[102.13011932 -377.13577271]
[113.18721008 -387.56692505]
[127.39624023 -392.96804810]
[142.59043884 -392.51544189]
[156.45278931 -386.27819824]
[166.86940002 -375.20739746]
[172.25181580 -360.99127197]
[171.77923584 -345.79766846]
[165.52374268 -331.94354248]
[154.43925476 -321.54150391]
[140.21606445 -316.17779541]
[139.76945496 -301.18444824]
[153.07183838 -291.56549072]
[158.06968689 -275.75463867]
[152.60444641 -259.92324829]
[138.64273071 -250.37513733]
[138.41940308 -235.37680054]
[138.19607544 -220.37846375]
[137.97274780 -205.38012695]
[137.74942017 -190.38179016]
[137.52609253 -175.38345337]
[137.30276489 -160.38511658]
[139.48301697 -157.61404419]
[140.42939758 -153.64927673]
[139.59547424 -149.08222961]
[136.71961975 -144.72601318]
[135.82681274 -129.75260925]
[134.93399048 -114.77920532]
[134.04116821 -99.80580139]
[143.59573364 -111.36912537]
[157.61706543 -116.69848633]
[172.44004822 -114.40080261]
[184.18997192 -105.07668304]
[189.79544067 -91.16342926]
[187.79119873 -76.29792786]
[178.70115662 -64.36599731]
[164.90141296 -58.48660278]
[149.99920654 -60.19660950]
[137.88992310 -69.04902649]
[131.73905945 -82.72898102]
[128.63494873 -68.05368042]
[133.57096863 -54.00074387]
[123.14533997 -42.10046005]
[120.04122925 -27.42515755]
[116.93711853 -12.74985409]
[114.82249451 2.10034299]
[113.70684814 17.05879593]
[112.59120178 32.01725006]
[111.47554779 46.97570419]
[110.35990143 61.93415833]
[117.12915802 75.20165253]
[108.38687897 88.38812256]
[114.28427124 101.06536865]
[106.57157135 112.72752380]
[105.45592499 127.68597412]
[104.34027100 142.64442444]
[111.02973175 156.98185730]
[102.36725616 169.09840393]
[101.25160217 184.05685425]
[100.13595581 199.01530457]
[99.02030945 213.97375488]
[97.90466309 228.93220520]
[98.90892029 243.89855957]
[102.01303101 258.57385254]
[105.22630310 273.22564697]
[108.54856110 287.85311890]
[111.87081909 302.48056030]
[115.19308472 317.10803223]
[118.51534271 331.73547363]
[122.27164459 346.25753784]
[126.45865631 360.66131592]
[130.64566040 375.06512451]
[134.83267212 389.46890259]
[146.11453247 400.56079102]
[142.23739624 414.94192505]
[146.42440796 429.34570312]
[150.61141968 443.74948120]
[154.79841614 458.15325928]
[160.19886780 465.52029419]
[158.93882751 472.80273438]
[162.91093445 487.26727295]
[166.88302612 501.73178101]
[181.86514282 500.39913940]
[196.84442139 501.76327515]
[211.33935547 505.78033447]
[224.88397217 512.32122803]
[237.04289246 521.17559814]
[247.42523193 532.05895996]
[255.69725037 544.62133789]
[261.59304810 558.45892334]
[264.92309570 573.12695312]
[265.58032227 588.15386963]
[263.54364014 603.05657959]
[258.87847900 617.35607910]
[251.73483276 630.59271240]
[242.34234619 642.34094238]
[231.00291443 652.22308350]
[218.08108521 659.92156982]
[203.99223328 665.18878174]
[189.18923950 667.85552979]
[174.14799500 667.83599854]
[159.35197449 665.13085938]
[145.27682495 659.82708740]
[132.37501526 652.09515381]
[121.06127930 642.18359375]
[111.69929504 630.41101074]
[104.59001923 617.15594482]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 185]
[9 184]
[10 183]
[11 181]
[12 180]
[13 179]
[14 178]
[16 176]
[17 175]
[18 174]
[19 173]
[24 172]
[25 171]
[26 170]
[27 169]
[28 168]
[30 167]
[31 166]
[51 165]
[52 164]
[53 163]
[54 162]
[55 161]
[57 159]
[58 158]
[59 157]
[61 155]
[63 153]
[64 152]
[65 151]
[66 150]
[67 149]
[77 148]
[78 147]
[79 146]
[81 144]
[82 143]
[83 132]
[84 131]
[85 130]
[86 129]
[87 125]
[88 124]
[89 123]
[90 122]
[91 121]
[92 120]
[93 119]
[98 115]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
