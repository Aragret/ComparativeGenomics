%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCGGCGUGAGCAUUCCCCACCUAAAAAGAUACAUCGGCAACUCAACACCAUCAGUUUUACAUUAUUAAUAAUCAUCAUUCCGAUCCUCCCACAACUAAxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[-25.93660355 400.00360107]
[-21.39651871 414.32611084]
[-18.89399719 429.14108276]
[-18.47775459 444.16015625]
[-20.15589142 459.09100342]
[-23.89574432 473.64297485]
[-29.62451363 487.53277588]
[-37.23068619 500.49011230]
[-46.56621170 512.26269531]
[-57.44936371 522.62145996]
[-69.66830444 531.36462402]
[-82.98518372 538.32214355]
[-97.14078522 543.35852051]
[-111.85957336 546.37573242]
[-126.85503387 547.31500244]
[-141.83528137 546.15814209]
[-156.50871277 542.92755127]
[-170.58972168 537.68627930]
[-183.80419922 530.53619385]
[-195.89492798 521.61651611]
[-206.62655640 511.10089111]
[-215.79020691 499.19400024]
[-223.20747375 486.12762451]
[-228.73400879 472.15609741]
[-232.26222229 457.55139160]
[-233.72343445 442.59774780]
[-233.08921814 427.58630371]
[-230.37190247 412.80920410]
[-225.62437439 398.55413818]
[-218.93907166 385.09854126]
[-210.44609070 372.70437622]
[-200.31079102 361.61285400]
[-188.73042297 352.03991699]
[-175.93041992 344.17187500]
[-162.15994263 338.16189575]
[-147.68702698 334.12695312]
[-132.79339600 332.14559937]
[-117.76894379 332.25637817]
[-102.90615082 334.45718384]
[-88.49431610 338.70510864]
[-74.81396484 344.91754150]
[-66.77278900 332.25500488]
[-58.73162079 319.59249878]
[-50.69044495 306.92996216]
[-42.64927292 294.26742554]
[-34.60810089 281.60491943]
[-42.43810272 267.46972656]
[-42.06910324 251.22103882]
[-33.50714874 237.29589844]
[-19.00844574 229.54455566]
[-2.48556900 230.16618347]
[5.36618662 217.38533020]
[1.66627741 203.00318909]
[9.44700623 189.92974854]
[24.55741501 186.14645386]
[32.40917206 173.36561584]
[40.26092529 160.58476257]
[48.11268234 147.80392456]
[34.73210144 154.58331299]
[19.75520706 155.41557312]
[5.70587111 150.16046143]
[-5.04834652 139.70355225]
[-10.69517231 125.80703735]
[-10.28301525 110.81269836]
[-3.88133311 97.24736023]
[7.43107939 87.39701080]
[21.74788284 82.92161560]
[36.65644073 84.57535553]
[49.64440536 92.07954407]
[58.52307129 104.16959381]
[61.79622650 118.80811310]
[58.91164780 133.52980042]
[69.07519531 122.49791718]
[79.23873901 111.46604156]
[89.40229034 100.43416595]
[99.14825439 89.03170013]
[108.46313477 77.27445221]
[117.77802277 65.51719666]
[127.09290314 53.75994873]
[126.38584137 40.88117218]
[134.38627625 31.28029633]
[146.38629150 29.75505257]
[155.87518311 18.13778877]
[165.36407471 6.52052498]
[174.67897034 -5.23672628]
[183.81776428 -17.13135910]
[192.95657349 -29.02599144]
[202.09536743 -40.92062378]
[211.23417664 -52.81525803]
[220.10507202 -64.91101074]
[228.70362854 -77.20185089]
[229.87478638 -95.57873535]
[246.05400085 -102.37580872]
[254.46861267 -114.79330444]
[262.88323975 -127.21080017]
[271.29785156 -139.62829590]
[279.71246338 -152.04579163]
[268.26568604 -161.76269531]
[257.93661499 -172.66027832]
[248.84632874 -184.61076355]
[241.10144043 -197.47404480]
[234.79273987 -211.09930420]
[229.99420166 -225.32678223]
[226.76206970 -239.98968506]
[225.13426208 -254.91609192]
[225.12985229 -269.93099976]
[226.74888611 -284.85833740]
[229.97239685 -299.52313232]
[234.76257324 -313.75344849]
[241.06326294 -327.38238525]
[248.80059814 -340.25021362]
[257.88385010 -352.20605469]
[268.20651245 -363.10971069]
[279.64761353 -372.83334351]
[292.07293701 -381.26293945]
[305.33685303 -388.29971313]
[319.28381348 -393.86111450]
[333.75033569 -397.88192749]
[348.56677246 -400.31506348]
[363.55944824 -401.13198853]
[378.55252075 -400.32308960]
[393.37026978 -397.89785767]
[407.83892822 -393.88473511]
[421.78887939 -388.33078003]
[435.05654907 -381.30111694]
[447.48635864 -372.87814331]
[458.93264771 -363.16061401]
[469.26113892 -352.26248169]
[478.35076904 -340.31149292]
[486.09497070 -327.44778442]
[492.40292358 -313.82220459]
[497.20071411 -299.59445190]
[500.43203735 -284.93139648]
[502.05905151 -270.00491333]
[502.06265259 -254.99000549]
[500.44281006 -240.06272888]
[497.21850586 -225.39810181]
[492.42755127 -211.16806030]
[486.12612915 -197.53944397]
[478.38812256 -184.67204285]
[469.30422974 -172.71670532]
[458.98095703 -161.81359863]
[447.53936768 -152.09059143]
[435.11358643 -143.66163635]
[421.84930420 -136.62559509]
[407.90200806 -131.06495667]
[393.43527222 -127.04489136]
[378.61871338 -124.61254883]
[363.62600708 -123.79644775]
[348.63296509 -124.60615540]
[333.81533813 -127.03218079]
[319.34689331 -131.04608154]
[305.39724731 -136.60078430]
[292.12997437 -143.63117981]
[283.71536255 -131.21368408]
[275.30072021 -118.79618073]
[266.88610840 -106.37868500]
[258.47149658 -93.96118927]
[260.44537354 -82.02677155]
[253.53665161 -71.61268616]
[240.99447632 -68.60328674]
[232.39590454 -56.31244659]
[232.64628601 -52.79539490]
[231.20559692 -48.98233032]
[227.95324707 -45.66939163]
[223.12879944 -43.67645645]
[213.99000549 -31.78182220]
[204.85119629 -19.88718987]
[195.71240234 -7.99255705]
[186.57359314 3.90207601]
[186.29479980 8.66981316]
[183.01799011 13.31303215]
[176.98133850 16.00942421]
[167.49244690 27.62668610]
[158.00355530 39.24394989]
[156.12265015 56.69184875]
[138.85015869 63.07483292]
[129.53526306 74.83208466]
[120.22039032 86.58933258]
[110.90550232 98.34658813]
[125.87892914 99.23910522]
[134.64132690 111.41368103]
[130.73338318 125.89567566]
[117.03589630 132.00949097]
[103.64614105 125.24826050]
[100.43416595 110.59770966]
[90.27061462 121.62959290]
[80.10707092 132.66146851]
[69.94352722 143.69334412]
[60.89352417 155.65568542]
[53.04176712 168.43652344]
[45.19001389 181.21736145]
[37.33825684 193.99821472]
[40.79339218 209.18701172]
[32.64852524 222.03675842]
[18.14702988 225.23709106]
[10.29527378 238.01792908]
[17.58535385 249.95600891]
[19.01380920 263.80432129]
[14.35858250 276.85449219]
[4.58184481 286.57891846]
[-8.36824608 291.12026978]
[-21.94557571 289.64608765]
[-29.98674774 302.30862427]
[-38.02791977 314.97113037]
[-46.06909561 327.63366699]
[-54.11026764 340.29617310]
[-62.15143967 352.95870972]
[-50.71126556 362.69876099]
[-40.73803329 373.93621826]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 208]
[42 207]
[43 206]
[44 205]
[45 204]
[46 203]
[51 197]
[52 196]
[55 193]
[56 192]
[57 191]
[58 190]
[72 189]
[73 188]
[74 187]
[75 186]
[76 180]
[77 179]
[78 178]
[79 177]
[82 175]
[83 174]
[84 173]
[85 170]
[86 169]
[87 168]
[88 167]
[89 166]
[90 162]
[91 161]
[93 158]
[94 157]
[95 156]
[96 155]
[97 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
