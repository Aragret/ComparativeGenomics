%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[94.45697021 523.09283447]
[83.72560883 533.59979248]
[71.80598450 542.73651123]
[58.87194443 550.36987305]
[45.11208725 556.38848877]
[30.72707939 560.70458984]
[15.92669678 563.25531006]
[0.92677128 564.00335693]
[-14.05395317 562.93786621]
[-28.79701424 560.07440186]
[-43.08741379 555.45465088]
[-56.71675873 549.14605713]
[-69.48628998 541.24060059]
[-81.20978546 531.85351562]
[-91.71629333 521.12176514]
[-100.85259247 509.20181274]
[-108.48544312 496.26748657]
[-114.50354767 482.50741577]
[-118.81912994 468.12225342]
[-121.36927032 453.32177734]
[-122.11676788 438.32180786]
[-121.05073547 423.34112549]
[-118.18670654 408.59817505]
[-113.56645203 394.30795288]
[-107.25734711 380.67883301]
[-99.35140228 367.90960693]
[-89.96389771 356.18646240]
[-79.23174286 345.68035889]
[-67.31144714 336.54449463]
[-54.37683105 328.91213989]
[-40.61652374 322.89453125]
[-26.23119354 318.57949829]
[-11.43062019 316.02990723]
[3.56936121 315.28295898]
[18.55000687 316.34957886]
[33.29285431 319.21414185]
[37.90686417 304.94140625]
[42.52087021 290.66867065]
[47.13488007 276.39593506]
[51.74888992 262.12319946]
[47.15535355 245.18608093]
[60.92359543 232.95837402]
[65.32459259 218.61851501]
[57.75425720 208.19165039]
[57.56891251 195.11312866]
[65.06026459 184.15457153]
[77.67836761 179.44309998]
[82.29237366 165.17036438]
[86.90638733 150.89762878]
[89.79165649 136.17773438]
[90.90731049 121.21928406]
[92.02295685 106.26082611]
[89.43434906 98.62724304]
[93.26820374 91.08850861]
[94.60643768 76.14832306]
[95.94467163 61.20813751]
[97.28290558 46.26795578]
[98.62113953 31.32776833]
[99.95937347 16.38758469]
[90.10150909 4.32688999]
[91.67150116 -10.80551815]
[103.23027802 -20.12915611]
[104.56851196 -35.06933975]
[105.90674591 -50.00952530]
[98.25045013 -60.38950348]
[99.67263794 -72.80566406]
[108.86903381 -80.66396332]
[110.42955780 -95.58256531]
[111.99008179 -110.50117493]
[113.43949890 -125.43098450]
[114.77773285 -140.37117004]
[116.11596680 -155.31135559]
[117.45420074 -170.25154114]
[118.79243469 -185.19172668]
[104.02223206 -187.86517334]
[89.55113983 -191.85186768]
[75.49567413 -197.11970520]
[61.96900558 -203.62626648]
[49.08003616 -211.31918335]
[36.93255234 -220.13647461]
[25.62435341 -230.00718689]
[15.24649143 -240.85183716]
[5.88252401 -252.58308411]
[-2.39215374 -265.10650635]
[-9.51091862 -278.32125854]
[-15.41645241 -292.12091064]
[-20.06120682 -306.39440918]
[-23.40778542 -321.02679443]
[-25.42924118 -335.90026855]
[-26.10929871 -350.89505005]
[-25.44248199 -365.89044189]
[-23.43416214 -380.76568604]
[-20.10050774 -395.40100098]
[-15.46835899 -409.67858887]
[-9.57501316 -423.48348999]
[-2.46792126 -436.70449829]
[5.79569435 -449.23522949]
[15.14929771 -460.97473145]
[25.51757812 -471.82855225]
[36.81705475 -481.70922852]
[48.95674896 -490.53726196]
[61.83892059 -498.24154663]
[75.35984039 -504.76004028]
[89.41065216 -510.04028320]
[103.87821198 -514.03979492]
[118.64604950 -516.72625732]
[133.59526062 -518.07812500]
[148.60545349 -518.08453369]
[163.55580139 -516.74542236]
[178.32592773 -514.07147217]
[192.79689026 -510.08435059]
[206.85220337 -504.81610107]
[220.37867737 -498.30911255]
[233.26741028 -490.61581421]
[245.41462708 -481.79815674]
[256.72253418 -471.92709351]
[267.10006714 -461.08215332]
[276.46365356 -449.35058594]
[284.73794556 -436.82693481]
[291.85632324 -423.61196899]
[297.76144409 -409.81210327]
[302.40576172 -395.53848267]
[305.75189209 -380.90600586]
[307.77288818 -366.03247070]
[308.45248413 -351.03765869]
[307.78521729 -336.04229736]
[305.77642822 -321.16711426]
[302.44232178 -306.53189087]
[297.80975342 -292.25442505]
[291.91598511 -278.44973755]
[284.80847168 -265.22894287]
[276.54449463 -252.69845581]
[267.19052124 -240.95922852]
[256.82189941 -230.10574341]
[245.52214050 -220.22540283]
[233.38217163 -211.39773560]
[220.49977112 -203.69384766]
[206.97863770 -197.17575073]
[192.92767334 -191.89593506]
[178.45999146 -187.89691162]
[163.69206238 -185.21086121]
[148.74282837 -183.85943604]
[133.73262024 -183.85348511]
[132.39439392 -168.91329956]
[131.05615234 -153.97311401]
[129.71792603 -139.03292847]
[128.37968445 -124.09275055]
[130.91390991 -117.15016174]
[126.90868378 -108.94065094]
[125.34816742 -94.02204895]
[123.78764343 -79.10343933]
[131.78672791 -63.48353195]
[120.84693146 -48.67129135]
[119.50869751 -33.73110580]
[118.17046356 -18.79092216]
[127.88824463 -7.56148338]
[126.74391174 7.60905266]
[114.89955902 17.72581863]
[113.56132507 32.66600418]
[112.22309113 47.60618973]
[110.88484955 62.54637146]
[109.54661560 77.48655701]
[108.20838165 92.42674255]
[106.98140717 107.37648010]
[105.86576080 122.33493042]
[104.75011444 137.29338074]
[112.96436310 124.74244690]
[124.93432617 115.70253754]
[139.25379944 111.23566437]
[154.24052429 111.86659241]
[168.13388062 117.52119446]
[179.30169678 127.53517914]
[186.43199158 140.73210144]
[188.68708801 155.56161499]
[185.80207825 170.28157043]
[178.11589050 183.16265869]
[166.53147888 192.69161987]
[152.40977478 197.74903870]
[137.40977478 197.74073792]
[123.29367065 192.66770935]
[111.71980286 183.12591553]
[104.04786682 170.23632812]
[101.17912292 155.51164246]
[96.56510925 169.78436279]
[91.95110321 184.05709839]
[100.20001221 199.48353577]
[94.84527588 215.78205872]
[79.66443634 223.01951599]
[75.26344299 237.35935974]
[80.60597229 249.09904480]
[76.64514923 260.95214844]
[66.02162170 266.73721313]
[61.40761566 281.00994873]
[56.79360580 295.28268433]
[52.17959595 309.55541992]
[47.56558609 323.82815552]
[61.19540024 330.13574219]
[73.96552277 338.04025269]
[85.68972778 347.42642212]
[96.19703674 358.15740967]
[105.33422089 370.07669067]
[112.96804047 383.01043701]
[118.98717499 396.77008057]
[123.30383301 411.15490723]
[125.85507965 425.95520020]
[126.60369873 440.95510864]
[125.53878784 455.93588257]
[122.67585754 470.67904663]
[118.05667114 484.96960449]
[111.74858856 498.59918213]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 196]
[37 195]
[38 194]
[39 193]
[40 192]
[42 189]
[43 188]
[47 185]
[48 184]
[49 183]
[50 166]
[51 165]
[52 164]
[54 163]
[55 162]
[56 161]
[57 160]
[58 159]
[59 158]
[62 155]
[63 154]
[64 153]
[67 151]
[68 150]
[69 149]
[70 147]
[71 146]
[72 145]
[73 144]
[74 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
