%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUUUAAUUCCGCUUCAAAUAAUGAGAAAAAACUUACAACAGUUUUGAUCAAUUAACCUUCAAUUGCCAUGAUAAAUAUGAUUUUCUCAUUCUGGGAGxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[73.60768890 688.28076172]
[58.61044312 687.61041260]
[43.75111771 685.47332764]
[29.17282104 681.89001465]
[15.01595497 676.89501953]
[1.41686094 670.53643799]
[-11.49349117 662.87554932]
[-23.59076500 653.98602295]
[-34.75845337 643.95361328]
[-44.88900375 632.87487793]
[-53.88484955 620.85650635]
[-61.65935135 608.01422119]
[-68.13764191 594.47174072]
[-73.25732422 580.35949707]
[-76.96909332 565.81335449]
[-79.23719788 550.97344971]
[-80.03980255 535.98272705]
[-79.36917114 520.98547363]
[-77.23176575 506.12622070]
[-73.64817047 491.54797363]
[-68.65289307 477.39120483]
[-62.29405212 463.79226685]
[-54.63288116 450.88204956]
[-45.74316406 438.78497314]
[-35.71051407 427.61746216]
[-24.63156128 417.48715210]
[-12.61299610 408.49154663]
[0.22942811 400.71728516]
[13.77203083 394.23925781]
[27.88438416 389.11987305]
[42.43057632 385.40838623]
[57.27051926 383.14059448]
[72.26128387 382.33828735]
[72.93106842 367.35324097]
[73.60085297 352.36819458]
[74.27063751 337.38317871]
[74.94042206 322.39813232]
[75.61021423 307.41308594]
[76.27999878 292.42803955]
[76.94978333 277.44302368]
[68.03516388 262.32690430]
[78.07392120 246.88978577]
[78.52053070 231.89642334]
[65.97929382 240.12548828]
[51.67936325 235.59646606]
[46.16212082 221.64797974]
[53.49467087 208.56234741]
[68.27172852 205.98580933]
[79.59953308 215.81616211]
[81.16005707 200.89756775]
[82.72058105 185.97895813]
[84.28110504 171.06034851]
[85.84162903 156.14175415]
[83.41105652 149.16220093]
[87.53805542 141.01322937]
[89.32051849 126.11951447]
[91.10298920 111.22579956]
[85.77754974 98.29786682]
[94.00329590 86.99173737]
[95.78575897 72.09801483]
[93.53918457 65.87994385]
[94.60942841 60.29858398]
[97.84944916 56.78984070]
[100.07456970 41.95579529]
[102.29968262 27.12175179]
[93.17716217 14.49569035]
[95.64506531 -0.51644188]
[107.73830414 -9.13555813]
[109.96342468 -23.96960258]
[112.18853760 -38.80364609]
[106.58397675 -53.59889603]
[116.12364960 -65.03759766]
[116.23532104 -80.03717804]
[114.23130798 -94.90270996]
[112.22729492 -109.76823425]
[110.22327423 -124.63376617]
[108.21926117 -139.49929810]
[106.21524811 -154.36482239]
[104.21123505 -169.23034668]
[102.20722198 -184.09588623]
[87.18106842 -184.27609253]
[72.34129333 -186.64230347]
[58.00420761 -191.14405823]
[44.47541428 -197.68544006]
[32.04327393 -206.12698364]
[20.97278214 -216.28878784]
[11.49990559 -227.95422363]
[3.82655835 -240.87464905]
[-1.88370073 -254.77468872]
[-5.50915718 -269.35803223]
[-6.97253418 -284.31384277]
[-6.24264002 -299.32333374]
[-3.33503246 -314.06658936]
[1.68831313 -328.22937012]
[8.72032356 -341.50976562]
[17.61111069 -353.62469482]
[28.17116737 -364.31594849]
[40.17540741 -373.35565186]
[53.36795425 -380.55108643]
[67.46761322 -385.74893188]
[82.17384338 -388.83834839]
[97.17318726 -389.75354004]
[112.14593506 -388.47491455]
[126.77293396 -385.02981567]
[140.74240112 -379.49160767]
[153.75660706 -371.97839355]
[165.53811646 -362.65026855]
[175.83583069 -351.70608521]
[184.43023682 -339.37911987]
[191.13815308 -325.93212891]
[195.81660461 -311.65173340]
[198.36585999 -296.84231567]
[198.73159790 -281.81951904]
[196.90600586 -266.90359497]
[192.92799377 -252.41244507]
[186.88237000 -238.65496826]
[178.89797974 -225.92439270]
[169.14501953 -214.49208069]
[157.83139038 -204.60171509]
[145.19821167 -196.46409607]
[131.51477051 -190.25268555]
[117.07275391 -186.09989929]
[119.07676697 -171.23435974]
[121.08078003 -156.36883545]
[123.08479309 -141.50331116]
[125.08880615 -126.63777924]
[127.09281921 -111.77225494]
[129.09683228 -96.90672302]
[131.10084534 -82.04119873]
[136.16963196 -96.15882111]
[145.12638855 -108.19113922]
[157.19624329 -117.09723663]
[171.33505249 -122.10663605]
[186.31965637 -122.78598022]
[200.85374451 -119.07650757]
[213.67997742 -111.29911041]
[223.68873596 -100.12661743]
[230.01419067 -86.52556610]
[232.10911560 -71.67256927]
[229.79226685 -56.85257721]
[223.26408386 -43.34766006]
[213.08932495 -32.32612228]
[200.14819336 -24.74144554]
[185.56025696 -21.24977684]
[170.58747864 -22.15317917]
[156.52517700 -27.37350082]
[144.58988953 -36.45913315]
[135.81411743 -48.62407684]
[130.95770264 -62.81248093]
[136.72142029 -49.07825851]
[127.02258301 -36.57852936]
[124.79747009 -21.74448586]
[122.57234955 -6.91044140]
[131.60450745 4.87750101]
[129.55924988 19.95302773]
[117.13372803 29.34686852]
[114.90860748 44.18091202]
[112.68349457 59.01495743]
[110.67948151 73.88048553]
[108.89701080 88.77420044]
[114.22245026 101.70213318]
[105.99670410 113.00826263]
[104.21424103 127.90198517]
[102.43177032 142.79570007]
[100.76023102 157.70227051]
[99.19970703 172.62088013]
[97.63918304 187.53948975]
[96.07865906 202.45808411]
[94.51814270 217.37669373]
[93.51387787 232.34303284]
[93.06727600 247.33638000]
[101.32782745 257.24224854]
[100.64717865 269.72103882]
[91.93482208 278.11279297]
[91.26503754 293.09783936]
[90.59525299 308.08288574]
[89.92546082 323.06790161]
[89.25567627 338.05294800]
[88.58589172 353.03799438]
[87.91610718 368.02304077]
[87.24632263 383.00805664]
[102.10573578 385.14459229]
[116.68417358 388.72729492]
[130.84124756 393.72174072]
[144.44058228 400.07974243]
[157.35124207 407.74014282]
[169.44888306 416.62915039]
[180.61695862 426.66113281]
[190.74795532 437.73947144]
[199.74427795 449.75747681]
[207.51930237 462.59945679]
[213.99813843 476.14166260]
[219.11837769 490.25372314]
[222.83073425 504.79968262]
[225.09942627 519.63946533]
[225.90263367 534.63018799]
[225.23260498 549.62744141]
[223.09579468 564.48681641]
[219.51277161 579.06518555]
[214.51806641 593.22216797]
[208.15977478 606.82141113]
[200.49911499 619.73187256]
[191.60987854 631.82934570]
[181.57768250 642.99725342]
[170.49913025 653.12799072]
[158.48092651 662.12408447]
[145.63880920 669.89886475]
[132.09646606 676.37744141]
[117.98432159 681.49737549]
[103.43827820 685.20941162]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 181]
[34 180]
[35 179]
[36 178]
[37 177]
[38 176]
[39 175]
[40 174]
[42 171]
[43 170]
[49 169]
[50 168]
[51 167]
[52 166]
[53 165]
[55 164]
[56 163]
[57 162]
[59 160]
[60 159]
[63 158]
[64 157]
[65 156]
[68 153]
[69 152]
[70 151]
[72 149]
[73 129]
[74 128]
[75 127]
[76 126]
[77 125]
[78 124]
[79 123]
[80 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
