%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[97.32612610 588.97967529]
[104.05277252 575.17218018]
[116.79095459 566.59112549]
[115.67530060 551.63269043]
[114.55965424 536.67419434]
[113.44400787 521.71575928]
[112.32835388 506.75729370]
[111.10137939 491.80758667]
[109.76314545 476.86740112]
[108.42491150 461.92721558]
[99.58299255 449.94097900]
[106.05825043 435.50555420]
[104.72001648 420.56536865]
[103.38178253 405.62518311]
[94.30340576 397.63082886]
[93.06623077 385.19485474]
[100.87622070 374.93002319]
[99.76057434 359.97158813]
[96.12828827 353.53509521]
[98.74135590 344.78240967]
[97.84854126 329.80899048]
[96.95572662 314.83557129]
[96.06291199 299.86218262]
[95.05865479 284.89584351]
[86.39617157 272.77929688]
[93.08563232 258.44186401]
[91.96997833 243.48341370]
[81.38647461 254.11305237]
[66.38744354 254.28356934]
[55.56501389 243.89727783]
[55.11877060 228.90391541]
[65.30433655 217.89236450]
[80.28695679 217.17054749]
[91.48348999 227.15109253]
[91.70681763 212.15275574]
[91.93014526 197.15441895]
[92.15347290 182.15606689]
[92.37680054 167.15773010]
[92.60012817 152.15939331]
[92.82345581 137.16105652]
[93.04678345 122.16272736]
[92.82345581 107.16439056]
[89.34608459 99.89249420]
[92.25693512 91.95159912]
[91.81033325 76.95825195]
[91.36372375 61.96489716]
[90.80551147 46.97528839]
[90.13572693 31.99024963]
[89.46594238 17.00521088]
[88.79615784 2.02017236]
[88.12637329 -12.96486664]
[87.23355865 -27.93827248]
[86.11790466 -42.89672470]
[82.35889435 -51.22184753]
[85.09869385 -58.08590317]
[84.20587921 -73.05931091]
[75.66089630 -86.37448120]
[82.62693787 -99.53971863]
[81.73412323 -114.51313019]
[79.73011017 -129.37866211]
[76.62599945 -144.05395508]
[73.52188873 -158.72926331]
[70.41777802 -173.40455627]
[67.31366730 -188.07986450]
[52.82270432 -188.66647339]
[38.90405273 -192.70738220]
[26.36824799 -199.96253967]
[15.94416904 -210.00486755]
[8.23665333 -222.24537659]
[3.69140100 -235.96774292]
[2.56920910 -250.37016296]
[4.93100739 -264.61227417]
[10.63456917 -277.86413574]
[19.34306908 -289.35467529]
[30.54497147 -298.41638184]
[43.58407211 -304.52429199]
[40.69879913 -319.24420166]
[37.81352615 -333.96408081]
[34.92825317 -348.68395996]
[31.95971107 -351.85284424]
[30.31897545 -355.44067383]
[29.97470474 -358.97857666]
[30.74650955 -362.05606079]
[32.33689117 -364.36450195]
[30.33287621 -379.23004150]
[28.32886314 -394.09555054]
[21.17695236 -380.91033936]
[8.44255829 -372.98345947]
[-6.54557848 -372.38702393]
[-19.86959648 -379.27691650]
[-28.04662704 -391.85214233]
[-28.93921661 -406.82556152]
[-22.31404305 -420.28314209]
[-9.90291214 -428.70715332]
[5.04993868 -429.89553833]
[18.63586807 -423.53765869]
[27.30323792 -411.29629517]
[27.52656555 -426.29464722]
[27.74989319 -441.29296875]
[27.97322083 -456.29132080]
[14.49790573 -463.54904175]
[5.94855404 -476.24420166]
[4.28974295 -491.45956421]
[9.90265560 -505.69873047]
[21.49748611 -515.68963623]
[36.40982819 -519.13647461]
[51.21293259 -515.24719238]
[62.50515366 -504.91546631]
[67.69162750 -490.51547241]
[65.58052826 -475.35626221]
[56.65698624 -462.92129517]
[42.97155762 -456.06799316]
[42.74822998 -441.06964111]
[42.52490234 -426.07131958]
[42.30157471 -411.07296753]
[43.19438934 -396.09957886]
[45.19840240 -381.23403931]
[47.20241928 -366.36853027]
[49.64814377 -351.56924438]
[52.53341675 -336.84936523]
[55.41868973 -322.12945557]
[58.30396271 -307.40957642]
[73.81636810 -306.46862793]
[88.56919861 -301.54721069]
[101.55831909 -292.97424316]
[111.89807129 -281.32739258]
[118.88166046 -267.39413452]
[122.02947235 -252.11848450]
[121.12199402 -236.53713989]
[116.21514893 -221.70906067]
[107.63683319 -208.64346313]
[95.96505737 -198.23120117]
[81.98896790 -191.18397522]
[85.09307861 -176.50866699]
[88.19718933 -161.83337402]
[91.30130005 -147.15806580]
[94.40541077 -132.48275757]
[100.55683899 -146.16340637]
[112.66638947 -155.01545715]
[127.56864929 -156.72502136]
[141.36820984 -150.84519958]
[150.45790100 -138.91299438]
[152.46168518 -124.04743958]
[146.85578918 -110.13435364]
[135.10559082 -100.81058502]
[120.28253937 -98.51335144]
[106.26136017 -103.84313202]
[96.70752716 -115.40594482]
[97.60034180 -100.43253326]
[106.08146667 -88.18836212]
[99.17928314 -73.95212555]
[100.07210541 -58.97871780]
[101.07636261 -44.01237488]
[102.19200897 -29.05392075]
[105.16208649 -25.31391144]
[105.81424713 -19.66840744]
[103.11141205 -13.63465118]
[103.78119659 1.35038722]
[104.45098114 16.33542633]
[105.12076569 31.32046509]
[105.79055023 46.30550385]
[109.22959137 52.84727859]
[106.35707092 61.51829147]
[106.80368042 76.51164246]
[107.25028992 91.50498962]
[107.80849457 106.49460602]
[110.27412415 110.06877136]
[111.36448669 113.86029053]
[111.18013000 117.41013336]
[109.96034241 120.33908081]
[108.04512024 122.38605499]
[107.82179260 137.38438416]
[107.59846497 152.38272095]
[107.37513733 167.38105774]
[107.15180969 182.37939453]
[106.92848206 197.37774658]
[106.70515442 212.37608337]
[106.48182678 227.37442017]
[106.92843628 242.36776733]
[108.04408264 257.32623291]
[116.78636169 270.51269531]
[110.01710510 283.78018188]
[113.77611542 292.10531616]
[111.03631592 298.96936035]
[111.92913055 313.94277954]
[112.82194519 328.91616821]
[113.71476746 343.88958740]
[114.71902466 358.85592651]
[115.83467102 373.81439209]
[126.55271912 388.78784180]
[118.32196808 404.28692627]
[119.66020203 419.22711182]
[120.99843597 434.16729736]
[129.93608093 447.22216797]
[123.36509705 460.58895874]
[124.70333099 475.52914429]
[126.04156494 490.46932983]
[129.92411804 498.73757935]
[127.28681183 505.64166260]
[128.40246582 520.60009766]
[129.51811218 535.55859375]
[130.63375854 550.51702881]
[131.74940491 565.47546387]
[145.61958313 572.07196045]
[154.32002258 584.72888184]
[155.51037598 600.04162598]
[148.87042236 613.89105225]
[136.18627930 622.55175781]
[120.86992645 623.69409180]
[107.04138184 617.01074219]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 203]
[4 202]
[5 201]
[6 200]
[7 199]
[8 197]
[9 196]
[10 195]
[12 193]
[13 192]
[14 191]
[17 189]
[18 188]
[20 187]
[21 186]
[22 185]
[23 184]
[24 182]
[26 180]
[27 179]
[34 178]
[35 177]
[36 176]
[37 175]
[38 174]
[39 173]
[40 172]
[41 171]
[42 166]
[44 165]
[45 164]
[46 163]
[47 161]
[48 160]
[49 159]
[50 158]
[51 157]
[52 154]
[53 153]
[55 152]
[56 151]
[58 149]
[59 148]
[60 137]
[61 136]
[62 135]
[63 134]
[64 133]
[76 122]
[77 121]
[78 120]
[79 119]
[84 118]
[85 117]
[86 116]
[97 115]
[98 114]
[99 113]
[100 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
