%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[186.55575562 715.87347412]
[177.02726746 704.21063232]
[170.22912598 690.77191162]
[166.47927856 676.18585205]
[165.95312500 661.13470459]
[168.67526245 646.32238770]
[174.51838684 632.44177246]
[183.20919800 620.14202881]
[194.34121704 609.99841309]
[207.39375305 602.48541260]
[221.75634766 597.95446777]
[220.41812134 583.01428223]
[219.07987976 568.07409668]
[217.74165344 553.13391113]
[216.40341187 538.19372559]
[215.06518555 523.25354004]
[213.72694397 508.31332397]
[212.38871765 493.37313843]
[211.05047607 478.43295288]
[202.20855713 466.44674683]
[208.68382263 452.01129150]
[207.34558105 437.07110596]
[206.00735474 422.13092041]
[203.01257324 407.43292236]
[191.73550415 397.70272827]
[194.85272217 382.19165039]
[190.23870850 367.91891479]
[185.62469482 353.64617920]
[181.01069641 339.37344360]
[176.07910156 325.20730591]
[164.37878418 315.99035645]
[166.80029297 300.35556030]
[161.55357361 286.30310059]
[156.30685425 272.25064087]
[151.06013489 258.19815063]
[145.81341553 244.14569092]
[140.56671143 230.09321594]
[135.31999207 216.04074097]
[130.07327271 201.98828125]
[124.82655334 187.93580627]
[119.57983398 173.88333130]
[114.33311462 159.83085632]
[100.71800232 153.90090942]
[95.19690704 139.72444153]
[101.50910950 125.48387146]
[96.26239014 111.43139648]
[90.80702972 97.45860291]
[85.14424133 83.56857300]
[79.48146057 69.67854309]
[73.81867218 55.78851700]
[61.44408798 45.93051147]
[63.80405426 31.22405815]
[58.14126968 17.33403015]
[52.47848129 3.44400358]
[37.67424011 -7.50661230]
[40.73840332 -24.78601646]
[34.86944199 -38.59019470]
[29.00048256 -52.39437103]
[28.12920952 -37.41969681]
[24.39237213 -22.89261627]
[17.92967796 -9.35623646]
[8.98273754 2.68337607]
[-2.11396003 12.77611065]
[-14.94555759 20.54464531]
[-29.03233528 25.69854355]
[-43.84764862 28.04512787]
[-58.83761978 27.49666595]
[-73.44183350 24.07366371]
[-87.11430359 17.90409279]
[-99.34387207 9.21860600]
[-109.67332458 -1.65808129]
[-117.71649933 -14.31933784]
[-123.17268372 -28.29181290]
[-125.83789825 -43.05313492]
[-125.61250305 -58.05144119]
[-122.50492096 -72.72600555]
[-116.63134003 -86.52822113]
[-108.21134186 -98.94207001]
[-97.55970764 -109.50344849]
[-85.07466888 -117.81752014]
[-71.22298431 -123.57346344]
[-56.52250671 -126.55606842]
[-41.52282715 -126.65384674]
[-26.78471565 -123.86313629]
[-12.85916996 -118.28826141]
[-0.26680624 -110.13765717]
[10.52160072 -99.71603394]
[19.10271835 -87.41300964]
[25.15382576 -73.69433594]
[25.82361031 -88.67937469]
[26.49339485 -103.66441345]
[26.94000053 -118.65776062]
[27.16332817 -133.65609741]
[19.63235092 -147.56993103]
[27.55828285 -160.18060303]
[24.55698967 -168.80789185]
[27.89824677 -175.40014648]
[28.34485245 -190.39349365]
[28.79145813 -205.38684082]
[29.23806381 -220.38018799]
[15.66609287 -227.36334229]
[6.47489738 -239.54876709]
[3.48939586 -254.51704407]
[7.30236197 -269.29623413]
[17.15672874 -280.95187378]
[31.09590340 -287.16976929]
[46.35225677 -286.71533203]
[59.89662170 -279.67880249]
[69.03975677 -267.45724487]
[71.96629333 -252.47734070]
[68.09515381 -237.71328735]
[58.19496918 -226.09652710]
[44.23141479 -219.93357849]
[43.78480911 -204.94023132]
[43.33820343 -189.94688416]
[42.89159775 -174.95353699]
[42.55662155 -159.95727539]
[50.10357285 -147.11621094]
[42.16166687 -133.43276978]
[41.93833923 -118.43443298]
[44.56290817 -114.44435883]
[44.70879745 -108.76318359]
[41.47843552 -102.99462891]
[40.80864716 -88.00959015]
[40.13886261 -73.02455139]
[42.80466080 -58.26333237]
[48.67361832 -44.45915604]
[54.54257965 -30.65497780]
[65.63986206 -25.84074593]
[70.64237213 -14.38829136]
[66.36850739 -2.21878290]
[72.03129578 11.67124367]
[77.69408417 25.56127167]
[89.66362000 34.42576981]
[87.70870209 50.12573242]
[93.37148285 64.01576233]
[99.03427124 77.90578461]
[104.69705963 91.79581451]
[108.94579315 94.87188721]
[111.16860962 100.10948181]
[110.31485748 106.18467712]
[115.56157684 120.23715210]
[129.66209412 126.85630035]
[134.78283691 141.18225098]
[128.38558960 154.58413696]
[133.63230896 168.63661194]
[138.87902832 182.68908691]
[144.12573242 196.74156189]
[149.37245178 210.79402161]
[154.61917114 224.84649658]
[159.86589050 238.89897156]
[165.11260986 252.95144653]
[170.35932922 267.00390625]
[175.60604858 281.05639648]
[180.85276794 295.10885620]
[192.92835999 305.33093262]
[190.13156128 319.96060181]
[194.15896606 323.28131104]
[196.29615784 327.40267944]
[196.55468750 331.47064209]
[195.28341675 334.75942993]
[199.89743042 349.03216553]
[204.51144409 363.30490112]
[209.12545776 377.57763672]
[220.73255920 388.32873535]
[217.28530884 402.81890869]
[220.33894348 388.13302612]
[228.43025208 375.50247192]
[240.49468994 366.58905029]
[254.94497681 362.56542969]
[269.87991333 363.96102905]
[283.33456421 370.59219360]
[293.53872681 381.58651733]
[299.14987183 395.49746704]
[299.42977905 410.49487305]
[294.34158325 424.60549927]
[284.55477905 435.97293091]
[271.35690308 443.10150146]
[256.48446655 445.05340576]
[241.89410400 441.57177734]
[229.50547791 433.11471558]
[220.94754028 420.79269409]
[222.28576660 435.73287964]
[223.62400818 450.67306519]
[232.56164551 463.72793579]
[225.99066162 477.09472656]
[227.32890320 492.03491211]
[228.66712952 506.97509766]
[230.00537109 521.91528320]
[231.34359741 536.85546875]
[232.68183899 551.79565430]
[234.02006531 566.73583984]
[235.35830688 581.67602539]
[236.69653320 596.61621094]
[251.63574219 598.52258301]
[265.81573486 603.59625244]
[278.57324219 611.59997559]
[289.31161499 622.15942383]
[297.52859497 634.78063965]
[302.83984375 648.87335205]
[304.99694824 663.77844238]
[303.89901733 678.79870605]
[299.59741211 693.23168945]
[292.29330444 706.40228271]
[282.32836914 717.69445801]
[270.16864014 726.58013916]
[256.38284302 732.64361572]
[241.61581421 735.60144043]
[226.55818176 735.31512451]
[211.91424561 731.79809570]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 194]
[12 193]
[13 192]
[14 191]
[15 190]
[16 189]
[17 188]
[18 187]
[19 186]
[21 184]
[22 183]
[23 182]
[24 166]
[26 164]
[27 163]
[28 162]
[29 161]
[30 157]
[32 155]
[33 154]
[34 153]
[35 152]
[36 151]
[37 150]
[38 149]
[39 148]
[40 147]
[41 146]
[42 145]
[45 142]
[46 141]
[47 138]
[48 137]
[49 136]
[50 135]
[52 133]
[53 132]
[54 131]
[56 128]
[57 127]
[58 126]
[89 125]
[90 124]
[91 123]
[92 120]
[93 119]
[95 117]
[97 116]
[98 115]
[99 114]
[100 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
