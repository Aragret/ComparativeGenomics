%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUUCGAAUCCCUCUCGACCCAACAAACCCAACACCGAGUCACAGUCAAGCUCUAUUAUUGAAGAACCAGAUCCGUGUACUUAUAACAACACCCCUxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[94.49333191 498.24835205]
[90.29485321 512.70031738]
[83.35733795 526.05535889]
[73.94745636 537.80017090]
[62.42688370 547.48327637]
[49.23844910 554.73248291]
[34.88907623 559.26922607]
[19.93032265 560.91906738]
[4.93716002 559.61853027]
[-9.51411533 555.41772461]
[-22.86803436 548.47808838]
[-34.61130905 539.06628418]
[-44.29255676 527.54412842]
[-51.53965759 514.35455322]
[-56.07405472 500.00442505]
[-57.72145081 485.04541016]
[-56.41853333 470.05245972]
[-52.21537781 455.60186768]
[-45.27354050 442.24905396]
[-35.85985565 430.50732422]
[-24.33614922 420.82794189]
[-11.14536858 413.58297729]
[3.20546937 409.05090332]
[18.16475677 407.40591431]
[33.15749741 408.71124268]
[37.34450912 394.30746460]
[33.46736526 379.92633057]
[44.74922180 368.83444214]
[40.87207794 354.45330811]
[52.15393829 343.36141968]
[56.34095001 328.95761108]
[60.52795792 314.55383301]
[64.71497345 300.15005493]
[68.90198517 285.74627686]
[73.08899689 271.34249878]
[77.27600098 256.93872070]
[79.94180298 242.17749023]
[81.05744934 227.21903992]
[82.17309570 212.26058960]
[83.28874969 197.30213928]
[80.65144348 190.39804077]
[84.53398895 182.12982178]
[85.87222290 167.18963623]
[87.21045685 152.24945068]
[79.69734955 142.76895142]
[80.68997955 130.31108093]
[90.19991302 121.59764862]
[91.76043701 106.67903900]
[92.76469421 91.71269989]
[93.21130371 76.71934509]
[93.65790558 61.72599792]
[94.10451508 46.73264694]
[85.00238800 30.72537231]
[94.80092621 16.16667747]
[95.02425385 1.16834021]
[83.41030884 -6.25508261]
[77.03160095 -18.35179901]
[77.45964050 -31.91227150]
[84.47572327 -43.39785767]
[96.15596008 -49.86424255]
[96.60256958 -64.85758972]
[97.04917145 -79.85094452]
[97.49578094 -94.84429169]
[94.70340729 -100.83713531]
[95.27143860 -106.49172211]
[98.18550873 -110.27554321]
[99.07832336 -125.24894714]
[99.97113800 -140.22235107]
[93.06895447 -154.45858765]
[101.55007935 -166.70275879]
[102.44289398 -181.67616272]
[103.33570862 -196.64958191]
[104.22853088 -211.62298584]
[104.89831543 -226.60801697]
[105.34491730 -241.60136414]
[102.47240448 -250.27238464]
[105.91143799 -256.81414795]
[106.58123016 -271.79919434]
[107.25101471 -286.78424072]
[107.92079926 -301.76928711]
[93.09326935 -304.14459229]
[78.63315582 -308.19464111]
[64.72898865 -313.86666870]
[51.56203461 -321.08673096]
[39.30394745 -329.76065063]
[28.11453629 -339.77539062]
[18.13968086 -351.00036621]
[9.50942230 -363.28924561]
[2.33627534 -376.48178101]
[-3.28624463 -390.40606689]
[-7.28483629 -404.88049316]
[-9.60736942 -419.71636963]
[-10.22356606 -434.72030640]
[-9.12539101 -449.69668579]
[-6.32716322 -464.45025635]
[-1.86536193 -478.78866577]
[4.20184374 -492.52499390]
[11.79535484 -505.48016357]
[20.81617546 -517.48529053]
[31.14669800 -528.38378906]
[42.65224838 -538.03369141]
[55.18282318 -546.30908203]
[68.57505798 -553.10217285]
[82.65436554 -558.32427979]
[97.23719025 -561.90747070]
[112.13341522 -563.80493164]
[127.14883423 -563.99194336]
[142.08769226 -562.46606445]
[156.75523376 -559.24719238]
[170.96022034 -554.37731934]
[184.51748657 -547.91986084]
[197.25027466 -539.95910645]
[208.99258423 -530.59875488]
[219.59133911 -519.96087646]
[228.90834045 -508.18417358]
[236.82215881 -495.42214966]
[243.22958374 -481.84118652]
[248.04710388 -467.61834717]
[251.21189880 -452.93902588]
[252.68272400 -437.99465942]
[252.44038391 -422.98004150]
[250.48806763 -408.09091187]
[246.85119629 -393.52139282]
[241.57720947 -379.46142578]
[234.73484802 -366.09429932]
[226.41331482 -353.59429932]
[216.72111511 -342.12438965]
[205.78459167 -331.83407593]
[193.74633789 -322.85754395]
[180.76327515 -315.31182861]
[167.00468445 -309.29525757]
[152.64993286 -304.88632202]
[137.88615417 -302.14248657]
[122.90583801 -301.09948730]
[122.23605347 -286.11444092]
[121.56626892 -271.12942505]
[120.89647675 -256.14437866]
[120.33827209 -241.15476990]
[119.89166260 -226.16140747]
[122.45653534 -222.13270569]
[122.51782227 -216.44999695]
[119.20193481 -210.73016357]
[118.30912018 -195.75675964]
[117.41630554 -180.78335571]
[116.52348328 -165.80995178]
[123.48952484 -152.64471436]
[114.94454193 -139.32952881]
[114.05172729 -124.35613251]
[113.15891266 -109.38272095]
[112.48912811 -94.39768219]
[112.04251862 -79.40433502]
[111.59591675 -64.41098785]
[111.14930725 -49.41763687]
[124.45169067 -39.79869080]
[129.44953918 -23.98783112]
[123.98430634 -8.15645313]
[110.02259064 1.39166796]
[109.79926300 16.39000511]
[117.99668884 25.28544044]
[117.93338013 37.78263092]
[109.09786224 47.17925262]
[108.65126038 62.17260361]
[108.20465088 77.16595459]
[107.75804901 92.15930176]
[120.29928589 83.93024445]
[134.59921265 88.45927429]
[140.11645508 102.40775299]
[132.78390503 115.49338531]
[118.00685120 118.06992340]
[106.67903900 108.23956299]
[105.11851501 123.15817261]
[113.00486755 139.79809570]
[102.15064240 153.58767700]
[100.81240845 168.52786255]
[99.47417450 183.46804810]
[98.24720001 198.41778564]
[97.13155365 213.37623596]
[96.01589966 228.33468628]
[94.90025330 243.29315186]
[103.45948029 230.97488403]
[116.03948975 222.80520630]
[130.77409363 219.99604797]
[145.47750854 222.96412659]
[157.96858215 231.26913452]
[166.39431763 243.67909241]
[169.50482178 258.35305786]
[166.83866882 273.11419678]
[158.79135132 285.77282715]
[146.55665588 294.45108032]
[131.94953918 297.86163330]
[117.13684845 295.49850464]
[104.31597900 287.71228027]
[95.38882446 275.65798950]
[91.67978668 261.12573242]
[87.49277496 275.52951050]
[83.30576324 289.93328857]
[79.11875153 304.33706665]
[74.93173981 318.74084473]
[70.74472809 333.14462280]
[66.55771637 347.54843140]
[70.13538361 362.95980835]
[59.15300369 373.02145386]
[62.73066711 388.43283081]
[51.74829102 398.49447632]
[47.56127930 412.89825439]
[60.91744614 419.83361816]
[72.66376495 429.24160767]
[82.34873962 440.76062012]
[89.60011292 453.94787598]
[94.13915253 468.29650879]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 205]
[26 204]
[28 202]
[30 200]
[31 199]
[32 198]
[33 197]
[34 196]
[35 195]
[36 194]
[37 179]
[38 178]
[39 177]
[40 176]
[42 175]
[43 174]
[44 173]
[47 171]
[48 170]
[49 164]
[50 163]
[51 162]
[52 161]
[54 158]
[55 157]
[60 153]
[61 152]
[62 151]
[63 150]
[66 149]
[67 148]
[68 147]
[70 145]
[71 144]
[72 143]
[73 142]
[74 139]
[75 138]
[77 137]
[78 136]
[79 135]
[80 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
