%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[74.44434357 149.04101562]
[76.36221313 163.92486572]
[77.17562103 178.90971375]
[76.88014221 193.91371155]
[75.47737122 208.85490417]
[72.97499084 223.65171814]
[69.38665009 238.22329712]
[64.73195648 252.49008179]
[59.03632736 266.37414551]
[52.33087540 279.79965210]
[44.65222549 292.69326782]
[36.04230881 304.98458862]
[26.54815865 316.60647583]
[16.22162247 327.49545288]
[5.11910439 337.59204102]
[-6.69875813 346.84112549]
[-19.16741943 355.19216919]
[-32.21877670 362.59954834]
[-45.78155136 369.02279663]
[-59.78166580 374.42687988]
[-74.14265442 378.78225708]
[-88.78607941 382.06512451]
[-103.63196564 384.25756836]
[-118.59922791 385.34762573]
[-133.60612488 385.32931519]
[-148.57069397 384.20275879]
[-163.41117859 381.97412109]
[-178.04655457 378.65554810]
[-192.39688110 374.26513672]
[-206.38377380 368.82693481]
[-219.93083191 362.37060547]
[-232.96409607 354.93142700]
[-245.41233826 346.54998779]
[-257.20761108 337.27212524]
[-268.28546143 327.14846802]
[-278.58541870 316.23434448]
[-288.05117798 304.58932495]
[-296.63110352 292.27703857]
[-304.27828979 279.36474609]
[-310.95095825 265.92291260]
[-316.61270142 252.02500916]
[-321.23260498 237.74691772]
[-324.78536987 223.16662598]
[-327.25167847 208.36376953]
[-328.61798096 193.41918945]
[-328.87686157 178.41450500]
[-328.02691650 163.43170166]
[-326.07275391 148.55256653]
[-323.02505493 133.85839844]
[-318.90048218 119.42942810]
[-313.72152710 105.34447479]
[-307.51654053 91.68046570]
[-300.31933594 78.51203156]
[-292.16928101 65.91109467]
[-283.11083984 53.94647217]
[-273.19354248 42.68351364]
[-262.47152710 32.18373489]
[-251.00332642 22.50448418]
[-238.85162354 13.69862461]
[-226.08276367 5.81425142]
[-212.76647949 -1.10557199]
[-198.97550964 -7.02305269]
[-184.78518677 -11.90587044]
[-170.27301025 -15.72735691]
[-155.51823425 -18.46664047]
[-140.60144043 -20.10875893]
[-125.60410309 -20.64474487]
[-110.60814667 -20.07167053]
[-95.69545746 -18.39266586]
[-80.94750214 -15.61689949]
[-66.44480896 -11.75953388]
[-52.26660538 -6.84163666]
[-38.49032211 -0.89006758]
[-25.19119644 6.06266785]
[-12.44187164 13.97859573]
[-0.31197622 22.81448174]
[11.13223743 32.52206421]
[21.82826614 43.04832840]
[31.71768951 54.33577728]
[40.74649429 66.32276917]
[48.86536789 78.94382477]
[56.02997208 92.13002014]
[62.20116806 105.80932617]
[76.29230499 100.66736603]
[90.38344574 95.52540588]
[104.27347565 89.86262512]
[117.94314575 83.68685150]
[131.61282349 77.51108551]
[145.28248596 71.33531952]
[158.95216370 65.15954590]
[172.62182617 58.98377991]
[186.29150391 52.80801392]
[196.68360901 37.60651016]
[214.06506348 40.02551270]
[227.64128113 33.64690781]
[241.21748352 27.26830292]
[254.79368591 20.88969803]
[268.36990356 14.51109314]
[281.94610596 8.13248825]
[276.52764893 -5.86126232]
[272.09854126 -20.19889832]
[268.68038940 -34.81056595]
[266.28982544 -49.62508392]
[264.93847656 -64.57027435]
[264.63296509 -79.57331848]
[265.37475586 -94.56112671]
[267.16024780 -109.46068573]
[269.98071289 -124.19939423]
[273.82244873 -138.70545959]
[278.66671753 -152.90818787]
[284.48992920 -166.73840332]
[291.26373291 -180.12872314]
[298.95507812 -193.01391602]
[307.52648926 -205.33119202]
[316.93627930 -217.02053833]
[327.13851929 -228.02502441]
[338.08358765 -238.29101562]
[349.71807861 -247.76852417]
[361.98538208 -256.41134644]
[374.82565308 -264.17739868]
[388.17642212 -271.02880859]
[401.97259521 -276.93225098]
[416.14694214 -281.85894775]
[430.63046265 -285.78485107]
[445.35253906 -288.69088745]
[460.24145508 -290.56286621]
[475.22473145 -291.39169312]
[490.22927856 -291.17330933]
[505.18206787 -289.90881348]
[520.01019287 -287.60430908]
[534.64147949 -284.27105713]
[549.00463867 -279.92529297]
[563.02960205 -274.58819580]
[576.64813232 -268.28576660]
[589.79382324 -261.04870605]
[602.40264893 -252.91227722]
[614.41320801 -243.91610718]
[625.76702881 -234.10403442]
[636.40863037 -223.52386475]
[646.28631592 -212.22712708]
[655.35192871 -200.26889038]
[663.56127930 -187.70738220]
[670.87438965 -174.60382080]
[677.25561523 -161.02204895]
[682.67388916 -147.02821350]
[687.10278320 -132.69052124]
[690.52069092 -118.07880402]
[692.91107178 -103.26425171]
[694.26220703 -88.31904602]
[694.56750488 -73.31599426]
[693.82550049 -58.32819366]
[692.03979492 -43.42866516]
[689.21911621 -28.68999290]
[685.37713623 -14.18398762]
[680.53265381 0.01867958]
[674.70922852 13.84881401]
[667.93530273 27.23903656]
[660.24377441 40.12411118]
[651.67211914 52.44126129]
[642.26220703 64.13047791]
[632.05981445 75.13481140]
[621.11462402 85.40065765]
[609.47998047 94.87799072]
[597.21252441 103.52063751]
[584.37213135 111.28649902]
[571.02130127 118.13774109]
[557.22503662 124.04097748]
[543.05059814 128.96745300]
[528.56701660 132.89315796]
[513.84490967 135.79898071]
[498.95596313 137.67076111]
[483.97268677 138.49937439]
[468.96813965 138.28077698]
[454.01538086 137.01605225]
[439.18725586 134.71133423]
[424.55603027 131.37788391]
[410.19296265 127.03192139]
[396.16806030 121.69462585]
[382.54962158 115.39199829]
[369.40402222 108.15474701]
[356.79528809 100.01812744]
[344.78485107 91.02178955]
[333.43124390 81.20954895]
[322.78973389 70.62922668]
[312.91223145 59.33235550]
[303.84680176 47.37398148]
[295.63763428 34.81235886]
[288.32470703 21.70869446]
[274.74850464 28.08729935]
[261.17230225 34.46590424]
[247.59608459 40.84450912]
[234.01988220 47.22311401]
[220.44367981 53.60171890]
[216.04574585 64.87047577]
[204.78739929 70.29570770]
[192.46726990 66.47768402]
[178.79759216 72.65345001]
[165.12792969 78.82921600]
[151.45825195 85.00498962]
[137.78858948 91.18075562]
[124.11891174 97.35652161]
[110.44924164 103.53229523]
[123.34572601 111.19263458]
[125.54864502 126.02999115]
[115.43410492 137.10681152]
[100.45815277 136.25767517]
[91.66051483 124.10854340]
[95.52540588 109.61654663]
[81.43426514 114.75850677]
[67.34312439 119.90046692]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[83 210]
[84 209]
[85 208]
[86 202]
[87 201]
[88 200]
[89 199]
[90 198]
[91 197]
[92 196]
[94 193]
[95 192]
[96 191]
[97 190]
[98 189]
[99 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
