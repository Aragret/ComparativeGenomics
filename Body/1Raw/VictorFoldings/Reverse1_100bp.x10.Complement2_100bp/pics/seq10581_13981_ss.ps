%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGCGUCCGCCGUUUCUGAUCAUACCGUUAUCCGUGUUAUAACCGAUUCUCCCUCACCCACAACUCCCAAUACUCUCAUCGAUAUUACUUGUCGCUAUxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[203.71372986 522.81488037]
[196.70256042 509.54760742]
[190.61312866 495.83279419]
[185.47383118 481.73440552]
[181.30862427 467.31817627]
[178.13693237 452.65130615]
[175.97355652 437.80218506]
[174.82855225 422.84005737]
[174.70727539 407.83465576]
[175.61029053 392.85595703]
[177.53338623 377.97378540]
[180.46759033 363.25756836]
[184.39924622 348.77590942]
[189.30999756 334.59628296]
[195.17695618 320.78488159]
[201.97276306 307.40600586]
[209.66572571 294.52212524]
[218.22000122 282.19323730]
[227.59568787 270.47686768]
[237.74908447 259.42764282]
[227.42240906 248.54830933]
[217.09573364 237.66897583]
[206.76907349 226.78964233]
[196.44239807 215.91030884]
[181.59252930 215.78019714]
[170.96484375 204.89410400]
[171.20199585 189.31907654]
[160.87533569 178.43974304]
[150.54866028 167.56040955]
[145.88247681 166.54267883]
[141.80609131 162.58288574]
[140.08247375 156.20004272]
[130.08430481 145.01806641]
[120.08613586 133.83609009]
[110.08795929 122.65411377]
[100.08979034 111.47213745]
[101.56578064 126.39934540]
[95.47059631 140.10513306]
[83.39751434 149.00685120]
[68.50239563 150.77761841]
[54.67880249 144.95454407]
[45.54018021 133.05976868]
[43.47534561 118.20256805]
[49.02404022 104.26657104]
[60.73584747 94.89461517]
[75.54933167 92.53650665]
[89.59156036 97.80814362]
[81.36275482 85.26673889]
[73.13394928 72.72534180]
[64.90513611 60.18394089]
[56.67633057 47.64253998]
[48.44752121 35.10113907]
[40.21871567 22.55973816]
[31.98990631 10.01833820]
[24.66564941 4.56003571]
[23.73356628 -2.77160883]
[15.69239330 -15.43413353]
[7.65122032 -28.09665871]
[-0.48399568 -40.69897079]
[-8.71280384 -53.24037170]
[-16.94161224 -65.78176880]
[-30.41599655 -59.14696884]
[-44.60360718 -54.21834564]
[-59.28936005 -51.07061386]
[-74.25062561 -49.75149536]
[-89.26059723 -50.28098679]
[-104.09172821 -52.65105820]
[-118.51918030 -56.82578659]
[-132.32423401 -62.74187469]
[-145.29760742 -70.30964661]
[-157.24263000 -79.41436768]
[-167.97822571 -89.91802216]
[-177.34162903 -101.66136932]
[-185.19091797 -114.46638489]
[-191.40707397 -128.13894653]
[-195.89587402 -142.47178650]
[-198.58926392 -157.24761963]
[-199.44641113 -172.24244690]
[-198.45433044 -187.22895813]
[-195.62806702 -201.97994995]
[-191.01045227 -216.27180481]
[-184.67149353 -229.88787842]
[-176.70727539 -242.62171936]
[-167.23855591 -254.28031921]
[-156.40885925 -264.68692017]
[-144.38237000 -273.68377686]
[-131.34140015 -281.13446045]
[-117.48366547 -286.92605591]
[-103.01922607 -290.97076416]
[-88.16736603 -293.20727539]
[-73.15323639 -293.60162354]
[-58.20444870 -292.14791870]
[-43.54761887 -288.86813354]
[-29.40494347 -283.81201172]
[-15.99082088 -277.05621338]
[-3.50860548 -268.70312500]
[7.85247469 -258.87942505]
[17.92018890 -247.73397827]
[26.54191399 -235.43579102]
[33.58694458 -222.17127991]
[38.94848251 -208.14154053]
[42.54524612 -193.55926514]
[44.32271194 -178.64549255]
[44.25392914 -163.62634277]
[42.33994675 -148.72949219]
[38.60977554 -134.18077087]
[33.11996460 -120.20072174]
[25.95374107 -107.00129700]
[17.21973991 -94.78259277]
[7.05036736 -83.72982788]
[-4.40021086 -74.01058197]
[3.82859683 -61.46917725]
[12.05740452 -48.92778015]
[18.35506058 -45.05979156]
[20.31374550 -36.13783264]
[28.35491753 -23.47530746]
[36.39609146 -10.81278133]
[44.53130722 1.78953016]
[52.76011276 14.33093071]
[60.98892212 26.87233162]
[69.21772766 39.41373062]
[77.44654083 51.95513153]
[85.67534637 64.49652863]
[93.90415192 77.03793335]
[102.13296509 89.57933044]
[111.27176666 101.47396851]
[121.26993561 112.65593719]
[131.26811218 123.83791351]
[141.26628113 135.01988220]
[151.26445007 146.20185852]
[161.42799377 157.23373413]
[171.75466919 168.11306763]
[182.08132935 178.99241638]
[197.64756775 179.56684875]
[207.96530151 190.74714661]
[207.32173157 205.58363342]
[217.64840698 216.46296692]
[227.97508240 227.34230042]
[238.30174255 238.22163391]
[248.62841797 249.10096741]
[260.19152832 239.53691101]
[272.38034058 230.78422546]
[285.13806152 222.88375854]
[298.40518188 215.87232971]
[312.11984253 209.78262329]
[326.21813965 204.64303589]
[340.63427734 200.47753906]
[355.30108643 197.30555725]
[370.15017700 195.14187622]
[385.11227417 193.99656677]
[400.11767578 193.87498474]
[415.09640503 194.77770996]
[429.97857666 196.70050049]
[444.69485474 199.63441467]
[459.17663574 203.56578064]
[473.35632324 208.47624207]
[487.16787720 214.34292603]
[500.54687500 221.13845825]
[513.43090820 228.83117676]
[525.75994873 237.38519287]
[537.47650146 246.76065063]
[548.52593994 256.91381836]
[558.85675049 267.79736328]
[568.42071533 279.36050415]
[577.17333984 291.54940796]
[585.07373047 304.30715942]
[592.08508301 317.57434082]
[598.17468262 331.28906250]
[603.31414795 345.38735962]
[607.47955322 359.80352783]
[610.65142822 374.47036743]
[612.81506348 389.31945801]
[613.96026611 404.28158569]
[614.08172607 419.28698730]
[613.17889404 434.26568604]
[611.25598145 449.14788818]
[608.32202148 463.86413574]
[604.39056396 478.34585571]
[599.47998047 492.52554321]
[593.61322021 506.33703613]
[586.81756592 519.71600342]
[579.12475586 532.59997559]
[570.57067871 544.92895508]
[561.19512939 556.64544678]
[551.04193115 567.69482422]
[540.15832520 578.02557373]
[528.59509277 587.58947754]
[516.40612793 596.34197998]
[503.64831543 604.24230957]
[490.38107300 611.25354004]
[476.66632080 617.34307861]
[462.56799316 622.48248291]
[448.15176392 626.64776611]
[433.48492432 629.81951904]
[418.63583374 631.98303223]
[403.67367554 633.12811279]
[388.66827393 633.24951172]
[373.68957520 632.34661865]
[358.80740356 630.42358398]
[344.09118652 627.48950195]
[329.60946655 623.55792236]
[315.42984009 618.64727783]
[301.61837769 612.78039551]
[288.23947144 605.98468018]
[275.35552979 598.29180908]
[263.02658081 589.73760986]
[251.31015015 580.36199951]
[240.26084900 570.20867920]
[229.93020630 559.32501221]
[220.36636353 547.76171875]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 140]
[21 139]
[22 138]
[23 137]
[24 136]
[27 133]
[28 132]
[29 131]
[32 130]
[33 129]
[34 128]
[35 127]
[36 126]
[47 125]
[48 124]
[49 123]
[50 122]
[51 121]
[52 120]
[53 119]
[54 118]
[56 117]
[57 116]
[58 115]
[59 113]
[60 112]
[61 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
