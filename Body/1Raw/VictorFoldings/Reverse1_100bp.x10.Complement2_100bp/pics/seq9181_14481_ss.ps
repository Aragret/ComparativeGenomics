%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[65.95811462 613.59588623]
[56.22589111 625.10156250]
[44.10224915 634.05218506]
[30.24100876 639.96508789]
[15.38967991 642.52142334]
[0.34918103 641.58331299]
[-14.06937408 637.20129395]
[-27.08841133 629.61169434]
[-38.00582886 619.22393799]
[-46.23286819 606.59802246]
[-51.32584763 592.41503906]
[-53.01011658 577.43969727]
[-51.19484329 562.47967529]
[-45.97792053 548.34179688]
[-37.64069366 535.78839111]
[-26.63277435 525.49658203]
[-13.54780865 518.02124023]
[0.90854710 513.76556396]
[15.95668125 512.95910645]
[18.62247658 498.19790649]
[21.28827286 483.43670654]
[23.95406723 468.67547607]
[26.61986351 453.91427612]
[29.28565788 439.15304565]
[23.93341446 425.25329590]
[34.00010681 413.04788208]
[36.66590500 398.28668213]
[39.33169937 383.52545166]
[32.69435883 373.41247559]
[34.79446793 361.09283447]
[45.04385376 353.26257324]
[47.92912292 338.54269409]
[50.81439590 323.82281494]
[45.66969299 309.84490967]
[55.91699219 297.79074097]
[50.77228546 283.81283569]
[61.01958466 271.75866699]
[63.90485764 257.03875732]
[66.68046570 242.29780579]
[69.34626770 227.53659058]
[63.99401855 213.63684082]
[74.06071472 201.43142700]
[76.72650909 186.67021179]
[79.39230347 171.90899658]
[82.05809784 157.14778137]
[84.72389221 142.38656616]
[87.38969421 127.62534332]
[90.05548859 112.86412811]
[83.97802734 97.22952271]
[94.95261383 84.54351807]
[97.39833832 69.74424744]
[99.84407043 54.94497299]
[89.13837433 65.45154572]
[74.63867950 69.29328156]
[60.13517380 65.46595764]
[49.41904449 54.97002792]
[45.29145050 40.54910660]
[48.83134460 25.97278404]
[59.11340332 15.05127811]
[73.44992065 10.63944340]
[88.09336090 13.89052296]
[99.21597290 23.95469093]
[103.91027832 38.20031738]
[108.52428436 23.92758179]
[113.13829803 9.65484905]
[117.43241882 -4.71736383]
[121.40451813 -19.18188858]
[117.59780121 -34.53830338]
[128.42915344 -44.76234436]
[132.29345703 -59.25603867]
[136.04975891 -73.77809906]
[139.80606079 -88.30015564]
[131.67997742 -99.04172516]
[131.23066711 -112.30854797]
[138.39823914 -123.24966431]
[150.37847900 -127.99340057]
[154.35058594 -142.45793152]
[158.32267761 -156.92245483]
[162.29476929 -171.38697815]
[158.48805237 -186.74339294]
[169.31941223 -196.96742249]
[173.29150391 -211.43194580]
[177.26361084 -225.89648438]
[163.24644470 -231.27105713]
[149.82359314 -237.99368286]
[137.12431335 -245.99963379]
[125.27091980 -255.21179199]
[114.37756348 -265.54144287]
[104.54916382 -276.88909912]
[95.88036346 -289.14547729]
[88.45466614 -302.19253540]
[82.34356689 -315.90460205]
[77.60594177 -330.14965820]
[74.28739929 -344.79049683]
[72.41991425 -359.68612671]
[72.02146149 -374.69305420]
[73.09588623 -389.66677856]
[75.63283539 -404.46307373]
[79.60787964 -418.93945312]
[84.98273468 -432.95651245]
[91.70563507 -446.37924194]
[99.71183014 -459.07836914]
[108.92422485 -470.93157959]
[119.25408936 -481.82470703]
[130.60194397 -491.65289307]
[142.85848999 -500.32144165]
[155.90570068 -507.74688721]
[169.61790466 -513.85772705]
[183.86306763 -518.59503174]
[198.50396729 -521.91326904]
[213.39961243 -523.78045654]
[228.40655518 -524.17864990]
[243.38024902 -523.10388184]
[258.17651367 -520.56665039]
[272.65283203 -516.59130859]
[286.66976929 -511.21618652]
[300.09234619 -504.49304199]
[312.79132080 -496.48657227]
[324.64431763 -487.27395630]
[335.53726196 -476.94384766]
[345.36523438 -465.59582520]
[354.03353882 -453.33908081]
[361.45870972 -440.29174805]
[367.56924438 -426.57940674]
[372.30630493 -412.33416748]
[375.62426758 -397.69317627]
[377.49114990 -382.79751587]
[377.88900757 -367.79055786]
[376.81399536 -352.81686401]
[374.27645874 -338.02066040]
[370.30084229 -323.54443359]
[364.92541504 -309.52758789]
[358.20196533 -296.10516357]
[350.19528198 -283.40634155]
[340.98239136 -271.55352783]
[330.65209961 -260.66076660]
[319.30386353 -250.83305359]
[307.04696655 -242.16499329]
[293.99945068 -234.74006653]
[280.28698730 -228.62980652]
[266.04165649 -223.89302063]
[251.40061951 -220.57536316]
[236.50489807 -218.70877075]
[221.49794006 -218.31121826]
[206.52427673 -219.38655090]
[191.72813416 -221.92437744]
[187.75602722 -207.45985413]
[183.78393555 -192.99533081]
[187.87477112 -178.67352295]
[176.75929260 -167.41487122]
[172.78720093 -152.95034790]
[168.81510925 -138.48582458]
[164.84301758 -124.02130127]
[173.77835083 -109.77355194]
[169.56135559 -93.14430237]
[154.32812500 -84.54385376]
[150.57182312 -70.02179718]
[146.81552124 -55.49973679]
[148.18385315 -48.23685455]
[142.89367676 -40.79024887]
[146.98451233 -26.46843338]
[135.86903381 -15.20979214]
[131.89694214 -0.74526781]
[133.31379700 2.48348951]
[133.23715210 6.55892515]
[131.28613281 10.77161789]
[127.41102600 14.26885796]
[122.79701996 28.54159164]
[118.18301392 42.81432343]
[114.64334106 57.39070129]
[112.19760895 72.18997192]
[109.75188446 86.98924255]
[115.95141602 96.84860229]
[113.96697998 108.32480621]
[104.81670380 115.52992249]
[102.15090942 130.29113770]
[99.48511505 145.05235291]
[96.81932068 159.81356812]
[94.15351868 174.57478333]
[91.48772430 189.33601379]
[88.82192993 204.09722900]
[93.98349762 219.05278015]
[84.10748291 230.20237732]
[81.44168854 244.96359253]
[82.99614716 253.96479797]
[78.62474823 259.92404175]
[75.73947906 274.64392090]
[80.67781067 289.67468262]
[70.63687897 300.67599487]
[75.57521057 315.70675659]
[65.53428650 326.70806885]
[62.64901733 341.42797852]
[59.76374435 356.14785767]
[66.13410187 373.42501831]
[54.09291458 386.19125366]
[51.42712021 400.95245361]
[48.76132584 415.71368408]
[53.92289352 430.66925049]
[44.04687500 441.81884766]
[41.38108063 456.58004761]
[38.71528625 471.34127808]
[36.04948807 486.10247803]
[33.38369370 500.86370850]
[30.71789932 515.62493896]
[44.53337860 521.64398193]
[56.58800125 530.68737793]
[66.23168182 542.26739502]
[72.94434357 555.75946045]
[76.36399078 570.43609619]
[76.30619049 585.50567627]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 204]
[20 203]
[21 202]
[22 201]
[23 200]
[24 199]
[26 197]
[27 196]
[28 195]
[31 193]
[32 192]
[33 191]
[35 189]
[37 187]
[38 186]
[39 184]
[40 183]
[42 181]
[43 180]
[44 179]
[45 178]
[46 177]
[47 176]
[48 175]
[50 172]
[51 171]
[52 170]
[63 169]
[64 168]
[65 167]
[66 163]
[67 162]
[69 160]
[70 158]
[71 157]
[72 156]
[76 153]
[77 152]
[78 151]
[79 150]
[81 148]
[82 147]
[83 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
