%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[106.20511627 667.04534912]
[107.68847656 652.02996826]
[113.00847626 637.91046143]
[121.80238342 625.64959717]
[133.47061157 616.08325195]
[147.21760559 609.86370850]
[144.77188110 595.06445312]
[142.32615662 580.26519775]
[130.10594177 571.82708740]
[127.41479492 556.85333252]
[136.34832764 544.09289551]
[133.90258789 529.29357910]
[131.45686340 514.49432373]
[128.90103149 499.71368408]
[126.23523712 484.95245361]
[123.56944275 470.19125366]
[120.90364838 455.43002319]
[116.62145233 449.40634155]
[118.30976105 440.42929077]
[115.86403656 425.63003540]
[113.41830444 410.83074951]
[110.97257996 396.03149414]
[98.51852417 394.22796631]
[87.05683899 388.98995972]
[77.51541901 380.73043823]
[70.66979980 370.10745239]
[67.08012390 357.97167969]
[67.04533386 345.29827881]
[70.57830048 333.10858154]
[77.40394592 322.38778687]
[86.98067474 314.00531006]
[98.54331970 308.64422607]
[96.76084900 293.75048828]
[94.97838593 278.85678101]
[93.19592285 263.96307373]
[91.41345215 249.06935120]
[89.63098907 234.17562866]
[87.84851837 219.28190613]
[80.92262268 232.58724976]
[68.65966034 241.22552490]
[53.79922485 243.26693726]
[39.66116333 238.25541687]
[29.40396309 227.31057739]
[25.31910324 212.87748718]
[28.31915474 198.18055725]
[37.73389816 186.50311279]
[51.46005630 180.45393372]
[66.43116760 181.38441467]
[79.30265045 189.08668518]
[87.19898987 201.84005737]
[87.86877441 186.85501099]
[88.53855896 171.86997986]
[89.20834351 156.88493347]
[86.36665344 150.06242371]
[90.00129700 141.68226624]
[90.89411926 126.70886230]
[91.78693390 111.73545837]
[85.70145416 99.14742279]
[93.23966217 87.37172699]
[94.13247681 72.39832306]
[87.23029327 58.16208649]
[95.71141815 45.91791153]
[96.60423279 30.94450569]
[77.58776093 22.93410301]
[63.05351257 8.32785511]
[55.15962219 -10.67395496]
[55.06626129 -31.22075272]
[62.76519775 -50.23929596]
[77.08435059 -64.89334869]
[95.86615753 -73.00664520]
[94.75050354 -87.96509552]
[93.63485718 -102.92355347]
[92.51921082 -117.88200378]
[83.27292633 -126.87472534]
[82.65164948 -139.35662842]
[90.44369507 -148.60922241]
[89.55088043 -163.58262634]
[88.65806580 -178.55603027]
[85.78221893 -182.91224670]
[84.94829559 -187.47929382]
[85.89466858 -191.44406128]
[88.07492065 -194.21513367]
[87.85159302 -209.21347046]
[87.62826538 -224.21180725]
[78.93363190 -233.73893738]
[79.05639648 -246.23568726]
[87.38535309 -255.00808716]
[87.38535309 -270.00808716]
[87.38535309 -285.00808716]
[87.38535309 -300.00808716]
[87.27368927 -315.00765991]
[87.05036163 -330.00601196]
[86.82703400 -345.00433350]
[86.60370636 -360.00268555]
[72.00495911 -363.84707642]
[58.98536682 -371.48858643]
[48.51105881 -382.36016846]
[41.35930252 -395.65509033]
[38.06080627 -410.38677979]
[38.86033630 -425.46203613]
[43.69856644 -439.76217651]
[52.21646881 -452.22604370]
[63.78195190 -461.92874146]
[77.53678894 -468.15023804]
[92.46027374 -470.42886353]
[107.44498444 -468.59558105]
[121.37895203 -462.78634644]
[133.22819519 -453.43231201]
[142.11341858 -441.22760010]
[147.37527466 -427.07785034]
[148.62329102 -412.03308105]
[145.76487732 -397.20971680]
[139.01213074 -383.70773315]
[128.86614990 -372.52911377]
[116.07984924 -364.50335693]
[101.60204315 -360.22601318]
[101.82537079 -345.22766113]
[102.04869843 -330.22933960]
[102.27202606 -315.23098755]
[105.51476288 -308.58972168]
[102.38535309 -300.00808716]
[102.38535309 -285.00808716]
[102.38535309 -270.00808716]
[102.38535309 -255.00808716]
[111.96604919 -240.30511475]
[102.62660217 -224.43513489]
[102.84992981 -209.43679810]
[103.07325745 -194.43846130]
[103.63146973 -179.44885254]
[104.52428436 -164.47544861]
[105.41710663 -149.50204468]
[115.85594940 -135.39538574]
[107.47766113 -118.99765015]
[108.59330750 -104.03919983]
[109.70896149 -89.08074188]
[110.82460785 -74.12229156]
[120.57688141 -72.56766510]
[129.87585449 -69.22479248]
[138.39643860 -64.20808411]
[145.84033203 -57.69053268]
[151.94641113 -49.89769745]
[156.49989319 -41.09994125]
[159.33996582 -31.60303497]
[160.36535645 -21.73752213]
[159.53802490 -11.84723186]
[156.88453674 -2.27727723]
[152.49520874 6.63797235]
[146.52108765 14.58658123]
[139.16865540 21.28996086]
[130.69279480 26.51263046]
[121.38789368 30.07049179]
[111.57764435 31.83732033]
[110.68482208 46.81072617]
[117.65086365 59.97596741]
[109.10588074 73.29113770]
[108.21306610 88.26454163]
[114.29854584 100.85257721]
[106.76033783 112.62827301]
[105.86752319 127.60167694]
[104.97470856 142.57508850]
[104.19338226 157.55471802]
[103.52359772 172.53976440]
[102.85381317 187.52479553]
[102.18402863 202.50984192]
[102.74224091 217.49945068]
[104.52470398 232.39315796]
[106.30717468 247.28688049]
[108.08963776 262.18060303]
[109.87210083 277.07431030]
[111.65457153 291.96801758]
[113.43703461 306.86175537]
[130.46385193 311.22232056]
[144.48222351 321.76620483]
[153.35853577 336.85473633]
[155.75482178 354.16012573]
[151.33042908 371.02465820]
[140.79008484 384.86877441]
[125.77185059 393.58575439]
[128.21757507 408.38504028]
[130.66329956 423.18429565]
[133.10903931 437.98358154]
[135.66487122 452.76422119]
[138.33065796 467.52545166]
[140.99645996 482.28665161]
[143.66224670 497.04788208]
[148.26696777 504.93676758]
[146.25613403 512.04858398]
[148.70185852 526.84790039]
[151.14759827 541.64715576]
[163.71159363 550.85491943]
[165.98109436 565.89837646]
[157.12542725 577.81945801]
[159.57115173 592.61871338]
[162.01689148 607.41802979]
[177.03398132 608.88397217]
[191.15962219 614.18762207]
[203.43070984 622.96728516]
[213.01054382 634.62445068]
[219.24600220 648.36425781]
[221.71189880 663.24987793]
[220.24012756 678.26641846]
[214.93103027 692.39001465]
[206.14660645 704.65765381]
[194.48576355 714.23303223]
[180.74357605 720.46313477]
[165.85699463 722.92333984]
[150.84103394 721.44573975]
[136.71948242 716.13122559]
[124.45519257 707.34204102]
[114.88435364 695.67749023]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 194]
[7 193]
[8 192]
[11 189]
[12 188]
[13 187]
[14 185]
[15 184]
[16 183]
[17 182]
[19 181]
[20 180]
[21 179]
[22 178]
[32 171]
[33 170]
[34 169]
[35 168]
[36 167]
[37 166]
[38 165]
[50 164]
[51 163]
[52 162]
[53 161]
[55 160]
[56 159]
[57 158]
[59 156]
[60 155]
[62 153]
[63 152]
[70 136]
[71 135]
[72 134]
[73 133]
[76 131]
[77 130]
[78 129]
[82 128]
[83 127]
[84 126]
[87 124]
[88 123]
[89 122]
[90 121]
[91 119]
[92 118]
[93 117]
[94 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
