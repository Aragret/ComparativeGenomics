%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[94.80740356 347.93768311]
[96.90428162 333.03500366]
[101.86852264 318.82788086]
[109.50930786 305.86236572]
[119.53295898 294.63684082]
[131.55418396 285.58273315]
[145.11091614 279.04812622]
[141.35461426 264.52606201]
[130.67668152 254.14190674]
[134.71160889 238.84385681]
[130.95530701 224.32180786]
[127.19901276 209.79974365]
[122.69138336 195.49305725]
[117.44466400 181.44058228]
[112.19794464 167.38812256]
[106.95122528 153.33564758]
[100.80458069 167.01843262]
[87.35607910 173.66206360]
[72.75418854 170.22914124]
[63.67470551 158.28916931]
[64.26864624 143.30093384]
[74.26445770 132.11685181]
[89.09220886 129.85014343]
[101.97400665 137.53854370]
[98.21771240 123.01647949]
[94.46141052 108.49442291]
[89.55445862 102.09954834]
[90.75900269 93.72817230]
[87.21932983 79.15179443]
[83.67965698 64.57542419]
[80.13998413 49.99904633]
[76.60031891 35.42267227]
[73.06064606 20.84629631]
[69.19633484 6.35260296]
[65.00932312 -8.05117893]
[60.82231522 -22.45496178]
[56.63530350 -36.85874176]
[52.44829178 -51.26252365]
[48.26128006 -65.66630554]
[44.07426834 -80.07009125]
[41.42971420 -65.30505371]
[35.99308777 -51.32495499]
[27.96763992 -38.65245819]
[17.65341377 -27.76132584]
[5.43601179 -19.05873489]
[-8.22780991 -12.87003899]
[-22.82721901 -9.42660427]
[-37.81640625 -8.85716724]
[-52.63499069 -11.18301678]
[-66.72896576 -16.31719971]
[-79.57141876 -24.06777000]
[-90.68223572 -34.14496613]
[-99.64601135 -46.17204666]
[-106.12763977 -59.69937134]
[-109.88480377 -74.22120667]
[-110.77703094 -89.19464874]
[-108.77096558 -104.05989838]
[-103.94161224 -118.26121521]
[-96.46951294 -131.26766968]
[-86.63402557 -142.59300232]
[-74.80284882 -151.81379700]
[-61.41830063 -158.58535767]
[-46.98077774 -162.65449524]
[-32.03003311 -163.86909485]
[-17.12501335 -162.18376160]
[-2.82295299 -157.66146851]
[10.34145546 -150.47131348]
[21.87605095 -140.88209534]
[31.34960365 -129.25231934]
[38.40793991 -116.01676178]
[42.78596497 -101.67623138]
[45.23169327 -116.47550201]
[47.67742157 -131.27478027]
[50.12314606 -146.07405090]
[52.56887436 -160.87332153]
[55.01460266 -175.67259216]
[57.46033096 -190.47186279]
[58.90974808 -205.40167236]
[59.35635376 -220.39501953]
[59.80295944 -235.38836670]
[60.24956512 -250.38171387]
[60.69617081 -265.37506104]
[47.22058868 -272.45816040]
[38.19343567 -284.64001465]
[35.36216354 -299.47253418]
[39.23571777 -314.00375366]
[48.99405289 -325.36529541]
[62.66102219 -331.33853149]
[63.10762787 -346.33187866]
[63.55423355 -361.32522583]
[64.00083923 -376.31857300]
[64.44744873 -391.31192017]
[64.89405060 -406.30526733]
[50.31158829 -410.08673096]
[36.93643570 -417.01876831]
[25.43948364 -426.75363159]
[16.39741516 -438.80307007]
[10.26377678 -452.56265259]
[7.34622908 -467.34222412]
[7.79111528 -482.40045166]
[11.57612038 -496.98199463]
[18.51138878 -510.35546875]
[28.24905205 -521.85003662]
[40.30067062 -530.88922119]
[54.06174469 -537.01953125]
[68.84201813 -539.93347168]
[83.90012360 -539.48492432]
[98.48075104 -535.69641113]
[111.85254669 -528.75787354]
[123.34477997 -519.01745605]
[132.38101196 -506.96362305]
[138.50798035 -493.20108032]
[141.41836548 -478.42010498]
[140.96617126 -463.36209106]
[137.17410278 -448.78237915]
[130.23236084 -435.41229248]
[120.48912811 -423.92239380]
[108.43312836 -414.88909912]
[94.66909027 -408.76547241]
[79.88739777 -405.85867310]
[79.44079590 -390.86532593]
[78.99418640 -375.87194824]
[78.54758453 -360.87860107]
[78.10097504 -345.88525391]
[77.65437317 -330.89190674]
[90.94157410 -324.11581421]
[100.00636292 -312.19360352]
[103.00813293 -297.45758057]
[99.29902649 -282.81985474]
[89.56280518 -271.19689941]
[75.68952179 -264.92846680]
[75.24291992 -249.93510437]
[74.79631042 -234.94175720]
[74.34970093 -219.94841003]
[73.90309906 -204.95506287]
[83.56535339 -216.42854309]
[97.86500549 -220.95845032]
[112.37114716 -217.14114380]
[122.58889008 -206.15943909]
[125.35216522 -191.41615295]
[119.80473328 -177.47966003]
[107.66552734 -168.66831970]
[92.69601440 -167.71241760]
[79.53466797 -174.90817261]
[72.25959778 -188.02613831]
[69.81387329 -173.22686768]
[67.36814880 -158.42759705]
[64.92241669 -143.62831116]
[62.47669220 -128.82904053]
[60.03096390 -114.02977753]
[57.58523560 -99.23050690]
[58.47805023 -84.25710297]
[62.66506195 -69.85331726]
[66.85207367 -55.44953537]
[71.03908539 -41.04575348]
[75.22609711 -26.64197159]
[79.41310883 -12.23819065]
[83.60012054 2.16559172]
[86.49745178 4.17502356]
[88.56543732 7.68763828]
[89.10819244 12.29835606]
[87.63701630 17.30662346]
[91.17668915 31.88299942]
[94.71636200 46.45937347]
[98.25603485 61.03575134]
[101.79570770 75.61212158]
[105.33538055 90.18849945]
[108.98346710 104.73812103]
[112.73976898 119.26017761]
[116.49607086 133.78224182]
[121.00370026 148.08892822]
[126.25041962 162.14140320]
[131.49713135 176.19386292]
[136.74385071 190.24633789]
[142.89050293 176.56355286]
[156.33900452 169.91992188]
[170.94088745 173.35284424]
[180.02037048 185.29281616]
[179.42643738 200.28105164]
[169.43061829 211.46513367]
[154.60287476 213.73184204]
[141.72106934 206.04344177]
[145.47737122 220.56550598]
[149.23367310 235.08757019]
[160.18028259 246.51045227]
[155.87667847 260.76977539]
[159.63298035 275.29183960]
[174.65792847 274.43344116]
[189.56161499 276.52310181]
[203.77114868 281.48043823]
[216.74037170 289.11492920]
[227.97077942 299.13311768]
[237.03070068 311.14996338]
[243.57189941 324.70352173]
[247.34294128 339.27285767]
[248.19888306 354.29794312]
[246.10682678 369.20129395]
[241.14718628 383.41000366]
[233.51058960 396.37799072]
[223.49058533 407.60678101]
[211.47229004 416.66476440]
[197.91767883 423.20376587]
[183.34773254 426.97244263]
[168.32249451 427.82595825]
[153.41949463 425.73150635]
[139.21156311 420.76956177]
[126.24480438 413.13085938]
[115.01764679 403.10903931]
[105.96161652 391.08926392]
[99.42481232 377.53359985]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 187]
[8 186]
[10 184]
[11 183]
[12 182]
[13 174]
[14 173]
[15 172]
[16 171]
[24 170]
[25 169]
[26 168]
[28 167]
[29 166]
[30 165]
[31 164]
[32 163]
[33 162]
[34 158]
[35 157]
[36 156]
[37 155]
[38 154]
[39 153]
[40 152]
[71 151]
[72 150]
[73 149]
[74 148]
[75 147]
[76 146]
[77 145]
[78 135]
[79 134]
[80 133]
[81 132]
[82 131]
[88 125]
[89 124]
[90 123]
[91 122]
[92 121]
[93 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
