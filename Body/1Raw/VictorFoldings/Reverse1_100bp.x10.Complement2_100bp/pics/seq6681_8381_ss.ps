%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxGAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGG\
) } def
/len { sequence length } bind def

/coor [
[174.00743103 208.08917236]
[176.25532532 193.25190735]
[179.56799316 178.61550903]
[183.92816162 164.25630188]
[189.31309509 150.24916077]
[175.73687744 143.87054443]
[162.16067505 137.49194336]
[148.58447266 131.11334229]
[135.00825500 124.73473358]
[121.43205261 118.35613251]
[107.85585022 111.97752380]
[93.90888214 112.96432495]
[85.76554871 101.59868622]
[72.18933868 95.22007751]
[63.09151077 94.40318298]
[58.45957184 88.64411163]
[44.97983932 82.06407928]
[31.50010490 75.48405457]
[18.02037048 68.90402985]
[4.54063606 62.32400131]
[-8.93909836 55.74397278]
[-22.41883278 49.16394424]
[-35.89856720 42.58391571]
[-49.37829971 36.00389099]
[-56.89575195 48.99145508]
[-65.31060791 61.41639328]
[-74.58094788 73.21680450]
[-84.66059113 84.33389282]
[-95.49932098 94.71228790]
[-107.04312897 104.30026245]
[-119.23451233 113.05007172]
[-132.01272583 120.91810608]
[-145.31413269 127.86517334]
[-159.07243347 133.85667419]
[-173.21910095 138.86274719]
[-187.68365479 142.85844421]
[-202.39402771 145.82386780]
[-217.27693176 147.74426270]
[-232.25823975 148.61003113]
[-247.26329041 148.41687012]
[-262.21734619 147.16575623]
[-277.04589844 144.86289978]
[-291.67504883 141.51979065]
[-306.03195190 137.15307617]
[-320.04507446 131.78450012]
[-333.64459229 125.44084167]
[-346.76275635 118.15367889]
[-359.33419800 109.95932007]
[-371.29632568 100.89859009]
[-382.58950806 91.01663971]
[-393.15747070 80.36268616]
[-402.94760132 68.98981476]
[-411.91113281 56.95468521]
[-420.00335693 44.31725311]
[-427.18399048 31.14048195]
[-433.41726685 17.49001694]
[-438.67211914 3.43386388]
[-442.92239380 -10.95794868]
[-446.14685059 -25.61372185]
[-448.32949829 -40.46043777]
[-449.45941162 -55.42413330]
[-449.53100586 -70.43025970]
[-448.54388428 -85.40405273]
[-446.50299072 -100.27091980]
[-443.41845703 -114.95678711]
[-439.30569458 -129.38848877]
[-434.18518066 -143.49414062]
[-428.08242798 -157.20344543]
[-421.02780151 -170.44812012]
[-413.05648804 -183.16217041]
[-404.20822144 -195.28227234]
[-394.52700806 -206.74801636]
[-384.06115723 -217.50230408]
[-372.86276245 -227.49154663]
[-360.98764038 -236.66596985]
[-348.49493408 -244.97988892]
[-335.44686890 -252.39186096]
[-321.90850830 -258.86499023]
[-307.94723511 -264.36697388]
[-293.63262939 -268.87045288]
[-279.03604126 -272.35299683]
[-264.23013306 -274.79718018]
[-249.28869629 -276.19091797]
[-234.28616333 -276.52722168]
[-219.29728699 -275.80441284]
[-204.39672852 -274.02609253]
[-189.65873718 -271.20111084]
[-175.15672302 -267.34359741]
[-160.96293640 -262.47271729]
[-147.14810181 -256.61273193]
[-133.78103638 -249.79287720]
[-120.92834473 -242.04710388]
[-108.65403748 -233.41400146]
[-97.01928711 -223.93658447]
[-86.08204651 -213.66206360]
[-75.89680481 -202.64164734]
[-66.51431274 -190.93020630]
[-57.98130798 -178.58610535]
[-50.34029770 -165.67085266]
[-43.62936020 -152.24876404]
[-37.88191986 -138.38673401]
[-33.12661362 -124.15382385]
[-29.38713646 -109.62091827]
[-26.68211365 -94.86043549]
[-25.02502060 -79.94591522]
[-24.42411804 -64.95166016]
[-24.88239479 -49.95235825]
[-26.39757156 -35.02275467]
[-28.96209526 -20.23721504]
[-32.56319427 -5.66940737]
[-37.18292618 8.60809231]
[-42.79827499 22.52415466]
[-29.31853867 29.10418320]
[-15.83880520 35.68421173]
[-2.35907054 42.26423645]
[11.12066364 48.84426498]
[24.60039711 55.42429352]
[38.08013153 62.00432205]
[51.55986786 68.58435059]
[65.03960419 75.16437531]
[78.56794739 81.64386749]
[92.14414978 88.02247620]
[106.09111786 87.03567505]
[114.23445129 98.40131378]
[127.81066132 104.77992249]
[141.38687134 111.15852356]
[154.96307373 117.53713226]
[168.53927612 123.91573334]
[182.11549377 130.29434204]
[195.69169617 136.67294312]
[203.03631592 123.58653259]
[211.30609131 111.06420898]
[220.45790100 99.17126465]
[230.44401550 87.96968842]
[241.21238708 77.51789856]
[252.70687866 67.87038422]
[264.86755371 59.07743073]
[277.63098145 51.18489456]
[290.93066406 44.23391724]
[304.69726562 38.26074219]
[318.85897827 33.29650497]
[333.34197998 29.36709404]
[348.07077026 26.49299240]
[362.96856689 24.68918419]
[377.95767212 23.96507645]
[392.95996094 24.32444000]
[407.89721680 25.76540375]
[422.69152832 28.28045654]
[437.26580811 31.85648155]
[451.54406738 36.47484207]
[465.45184326 42.11145020]
[478.91665649 48.73692703]
[491.86828613 56.31672668]
[504.23919678 64.81133270]
[515.96490479 74.17645264]
[526.98425293 84.36327362]
[537.23986816 95.31866455]
[546.67816162 106.98552704]
[555.25006104 119.30303192]
[562.91076660 132.20695496]
[569.62036133 145.63002014]
[575.34393311 159.50225830]
[580.05157471 173.75131226]
[583.71875000 188.30293274]
[586.32635498 203.08123779]
[587.86077881 218.00917053]
[588.31402588 233.00891113]
[587.68371582 248.00227356]
[585.97320557 262.91104126]
[583.19134521 277.65753174]
[579.35266113 292.16485596]
[574.47717285 306.35736084]
[568.59027100 320.16107178]
[561.72265625 333.50399780]
[553.91015625 346.31658936]
[545.19348145 358.53207397]
[535.61810303 370.08670044]
[525.23394775 380.92028809]
[514.09509277 390.97631836]
[502.25964355 400.20236206]
[489.78933716 408.55035400]
[476.74914551 415.97674561]
[463.20709229 422.44284058]
[449.23373413 427.91488647]
[434.90194702 432.36437988]
[420.28646851 435.76812744]
[405.46350098 438.10836792]
[390.51028442 439.37292480]
[375.50479126 439.55517578]
[360.52526855 438.65417480]
[345.64981079 436.67465210]
[330.95596313 433.62689209]
[316.52035522 429.52679443]
[302.41824341 424.39575195]
[288.72311401 418.26046753]
[275.50640869 411.15298462]
[262.83700562 403.11035156]
[250.78097534 394.17446899]
[239.40116882 384.39193726]
[228.75692749 373.81378174]
[218.90371704 362.49511719]
[209.89294434 350.49496460]
[201.77154541 337.87588501]
[194.58190918 324.70370483]
[188.36148071 311.04705811]
[183.14271545 296.97714233]
[178.95280457 282.56735229]
[175.81359863 267.89276123]
[173.74147034 253.02992249]
[172.74722290 238.05630493]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 130]
[6 129]
[7 128]
[8 127]
[9 126]
[10 125]
[11 124]
[13 122]
[14 121]
[16 120]
[17 119]
[18 118]
[19 117]
[20 116]
[21 115]
[22 114]
[23 113]
[24 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
