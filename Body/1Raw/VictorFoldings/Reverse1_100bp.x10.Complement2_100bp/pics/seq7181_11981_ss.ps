%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[-21.65923882 455.51654053]
[-15.55300713 469.25564575]
[-11.79158974 483.81250000]
[-10.47760296 498.78991699]
[-11.64689255 513.77935791]
[-15.26755905 528.37182617]
[-21.24082756 542.16931152]
[-29.40374565 554.79534912]
[-39.53361893 565.90545654]
[-51.35410309 575.19665527]
[-64.54271698 582.41540527]
[-78.73967743 587.36474609]
[-93.55767059 589.90972900]
[-108.59246063 589.98089600]
[-123.43387604 587.57629395]
[-137.67704773 582.76147461]
[-150.93339539 575.66790771]
[-162.84127808 566.48901367]
[-173.07585144 555.47521973]
[-181.35789490 542.92700195]
[-187.46148682 529.18670654]
[-191.22009277 514.62915039]
[-192.53118896 499.65145874]
[-191.35902405 484.66226196]
[-187.73553467 470.07046509]
[-181.75961304 456.27416992]
[-173.59426880 443.64971924]
[-163.46224976 432.54150391]
[-151.63996887 423.25259399]
[-138.44996643 416.03640747]
[-124.25205994 411.08975220]
[-109.43357086 408.54763794]
[-94.39877319 408.47940063]
[-79.55781555 410.88687134]
[-65.31558228 415.70440674]
[-58.23847580 402.47888184]
[-51.16136932 389.25335693]
[-44.08426285 376.02780151]
[-37.00716019 362.80227661]
[-29.93005371 349.57675171]
[-22.85294914 336.35122681]
[-15.77584267 323.12570190]
[-8.89643002 309.79626465]
[-2.21623564 296.36590576]
[4.46395922 282.93551636]
[-0.50430840 268.94082642]
[6.07903814 255.22534180]
[20.79166412 250.10905457]
[27.47185898 236.67868042]
[34.15205383 223.24830627]
[40.83224869 209.81793213]
[40.99652481 202.42909241]
[47.71318436 196.23843384]
[54.59259796 182.90901184]
[61.07209396 169.38066101]
[67.14592743 155.66539001]
[73.21976471 141.95011902]
[71.29870605 127.17992401]
[83.96131134 117.69472504]
[90.03514862 103.97946167]
[93.89945221 89.48577118]
[95.45997620 74.56716156]
[97.02050018 59.64855957]
[98.58102417 44.72995377]
[100.14154816 29.81134987]
[93.88192749 15.28111267]
[102.90132904 3.42785215]
[104.35074615 -11.50195599]
[105.68898010 -26.44214058]
[107.02721405 -41.38232803]
[108.36544800 -56.32250977]
[96.19042206 -47.56073761]
[81.36430359 -49.83806992]
[72.38017273 -61.84995270]
[74.38453674 -76.71543121]
[86.22921753 -85.91889191]
[101.12903595 -84.18816376]
[110.54843140 -72.51560211]
[113.21422577 -87.27681732]
[104.47167206 -100.16889191]
[107.38545227 -115.10089111]
[119.72994995 -123.35612488]
[122.28578186 -138.13677979]
[124.73151398 -152.93605042]
[127.17723846 -167.73532104]
[115.31206512 -175.41415405]
[107.29406738 -187.00016785]
[104.30664825 -200.72535706]
[106.76858521 -214.51048279]
[114.27565765 -226.28005981]
[125.66664124 -234.27491760]
[139.20274353 -237.31498718]
[141.86854553 -252.07620239]
[144.53433228 -266.83743286]
[147.20013428 -281.59863281]
[149.86592102 -296.35986328]
[152.53172302 -311.12106323]
[155.19752502 -325.88229370]
[157.86331177 -340.64349365]
[160.52911377 -355.40472412]
[146.87623596 -361.82821655]
[135.35173035 -371.56723022]
[126.74134064 -383.95770264]
[121.63214874 -398.15481567]
[120.37250519 -413.19064331]
[123.04829407 -428.03997803]
[129.47706604 -441.69036865]
[139.22052002 -453.21112061]
[151.61430359 -461.81671143]
[165.81341553 -466.92041016]
[180.84971619 -468.17425537]
[195.69801331 -465.49273682]
[209.34591675 -459.05868530]
[220.86289978 -449.31079102]
[229.46371460 -436.91369629]
[234.56195068 -422.71261597]
[235.80998230 -407.67581177]
[233.12272644 -392.82858276]
[226.68341064 -379.18313599]
[216.93106079 -367.66992188]
[204.53062439 -359.07388306]
[190.32759094 -353.98114014]
[175.29032898 -352.73892212]
[172.62452698 -337.97772217]
[169.95874023 -323.21649170]
[167.29293823 -308.45526123]
[164.62715149 -293.69406128]
[161.96134949 -278.93283081]
[159.29554749 -264.17163086]
[156.62976074 -249.41040039]
[153.96395874 -234.64918518]
[167.07708740 -225.51702881]
[174.92352295 -211.52963257]
[175.88810730 -195.46247864]
[169.72709656 -180.52922058]
[157.62699890 -169.73889160]
[141.97650146 -165.28959656]
[139.53077698 -150.49032593]
[137.08505249 -135.69105530]
[139.09588623 -128.57920837]
[134.49116516 -120.69033051]
[143.16835022 -108.63869476]
[140.67514038 -93.63074493]
[127.97544098 -84.61102295]
[125.30964661 -69.84980774]
[123.30563354 -54.98427582]
[121.96739960 -40.04409409]
[120.62916565 -25.10390663]
[119.29093170 -10.16372204]
[121.82514954 -3.22113419]
[117.81993103 4.98837519]
[124.19116211 18.45153427]
[115.06015015 31.37187195]
[113.49962616 46.29047775]
[111.93910217 61.20908356]
[110.37858582 76.12768555]
[108.81806183 91.04628754]
[116.94292450 78.43730164]
[128.13163757 68.44667053]
[141.57646179 61.79562378]
[156.30683899 58.96430969]
[171.25933838 60.15712357]
[185.35452271 65.28795624]
[197.57487488 73.98640442]
[207.03819275 85.62451935]
[213.06129456 99.36214447]
[215.20936584 114.20754242]
[213.32736206 129.08900452]
[207.55111694 142.93223572]
[198.29763794 154.73788452]
[186.23493958 163.65367126]
[172.23384094 169.03598022]
[157.30508423 170.49624634]
[142.52641296 167.92904663]
[128.96467590 161.51971436]
[117.59893036 151.73095703]
[109.24967957 139.26942444]
[104.51965332 125.03471375]
[103.75041199 110.05329895]
[97.67658234 123.76856232]
[99.16319275 139.51977539]
[86.93502808 148.02395630]
[80.86119843 161.73922729]
[74.78736115 175.45449829]
[75.40323639 179.75271606]
[74.69096375 183.63307190]
[72.94498444 186.72935486]
[70.54844666 188.80857849]
[67.92202759 189.78842163]
[61.04261398 203.11784363]
[54.26262283 216.49812317]
[47.58242798 229.92849731]
[40.90223312 243.35887146]
[34.22203827 256.78924561]
[39.01847458 271.60922241]
[32.05248642 285.13436890]
[17.89433479 289.61572266]
[11.21413994 303.04608154]
[4.53394556 316.47647095]
[4.56208611 323.08789062]
[1.67979312 327.98577881]
[-2.55031514 330.20281982]
[-9.62742043 343.42834473]
[-16.70452690 356.65386963]
[-23.78163147 369.87939453]
[-30.85873604 383.10491943]
[-37.93584061 396.33044434]
[-45.01294708 409.55596924]
[-52.09005356 422.78149414]
[-40.18039703 431.95809937]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 209]
[36 208]
[37 207]
[38 206]
[39 205]
[40 204]
[41 203]
[42 202]
[43 199]
[44 198]
[45 197]
[48 194]
[49 193]
[50 192]
[51 191]
[53 190]
[54 189]
[55 184]
[56 183]
[57 182]
[59 180]
[60 179]
[61 157]
[62 156]
[63 155]
[64 154]
[65 153]
[67 151]
[68 149]
[69 148]
[70 147]
[71 146]
[78 145]
[79 144]
[82 141]
[83 139]
[84 138]
[85 137]
[92 131]
[93 130]
[94 129]
[95 128]
[96 127]
[97 126]
[98 125]
[99 124]
[100 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
