%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCCUGCUAAUCAAAAUCGUAACCUCAUCCAAAUCCAAUACAUGCAUCAGAUCCGGUAUACACAACCUCUAACUCUGAUCAUCCCGAUCCGGGUGGCGAxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[319.06350708 464.97518921]
[329.83697510 454.50677490]
[320.87628174 442.47738647]
[311.91558838 430.44802856]
[302.95489502 418.41864014]
[293.99417114 406.38928223]
[279.26498413 404.49545288]
[270.00622559 392.42361450]
[272.09249878 376.98712158]
[263.13180542 364.95773315]
[249.32379150 359.37310791]
[247.28483582 343.68383789]
[238.32414246 331.65444946]
[229.36344910 319.62506104]
[220.40274048 307.59570312]
[211.44204712 295.56631470]
[202.48135376 283.53692627]
[191.10295105 284.37255859]
[180.62565613 279.56195068]
[173.70065308 270.19509888]
[172.14132690 258.53021240]
[176.44970703 247.44984436]
[167.85115051 235.15901184]
[159.25257874 222.86816406]
[157.63342285 237.78051758]
[147.64398193 248.97029114]
[133.01005554 252.26397705]
[119.18975067 246.43310547]
[111.33769226 233.65243530]
[112.38250732 218.68887329]
[121.93450165 207.12342834]
[136.43101501 203.26974487]
[150.46614075 208.56587219]
[143.38903809 195.34034729]
[136.31192017 182.11480713]
[129.23481750 168.88928223]
[122.15771484 155.66375732]
[114.98234558 142.49128723]
[107.70912170 129.37258911]
[100.43589020 116.25389099]
[85.83865356 107.98970032]
[86.31320953 91.22213745]
[72.73252106 83.10576630]
[73.10653687 68.21585846]
[59.52585220 60.09947968]
[59.89986420 45.20957184]
[52.43212509 32.20061874]
[44.96438217 19.19166565]
[37.49664307 6.18271399]
[30.02890015 -6.82623863]
[17.80521965 -10.94260025]
[11.85313702 -21.93152428]
[14.88389301 -33.64225006]
[7.61066341 -46.76094437]
[0.33743379 -59.87963867]
[-3.46192598 -61.98173904]
[-6.12673092 -64.89092255]
[-7.54257584 -68.15141296]
[-7.75482750 -71.31709290]
[-6.95163012 -74.00279999]
[-13.43112659 -87.53114319]
[-19.91062164 -101.05949402]
[-32.85002518 -110.16347504]
[-31.36958694 -124.98432159]
[-43.25325012 -129.99844360]
[-48.37152863 -141.39962769]
[-44.47816086 -152.85249329]
[-50.75552368 -166.47581482]
[-57.03288269 -180.09912109]
[-71.42057800 -175.77011108]
[-86.27074432 -173.48567200]
[-101.29432678 -173.29029846]
[-116.19888306 -175.18777466]
[-130.69429016 -179.14117432]
[-144.49838257 -185.07353210]
[-157.34248352 -192.86940002]
[-168.97654724 -202.37699890]
[-179.17414856 -213.41127014]
[-187.73675537 -225.75743103]
[-194.49771118 -239.17517090]
[-199.32540894 -253.40328979]
[-202.12588501 -268.16485596]
[-202.84460449 -283.17248535]
[-201.46760559 -298.13412476]
[-198.02166748 -312.75845337]
[-192.57388306 -326.76089478]
[-185.23028564 -339.86880493]
[-176.13381958 -351.82708740]
[-165.46156311 -362.40295410]
[-153.42123413 -371.39056396]
[-140.24722290 -378.61492920]
[-126.19595337 -383.93542480]
[-111.54093933 -387.24853516]
[-96.56744385 -388.48974609]
[-81.56693268 -387.63488770]
[-66.83139038 -384.70059204]
[-52.64765549 -379.74398804]
[-39.29181671 -372.86157227]
[-27.02384949 -364.18731689]
[-16.08255005 -353.89001465]
[-6.68089724 -342.17016602]
[0.99810481 -329.25585938]
[6.80498123 -315.39849854]
[10.62669945 -300.86782837]
[12.38886929 -285.94668579]
[12.05718803 -270.92547607]
[9.63811398 -256.09664917]
[5.17873335 -241.74882507]
[-1.23414946 -228.16130066]
[-9.47570610 -215.59854126]
[-19.38551331 -204.30509949]
[-30.77067184 -194.50079346]
[-43.40956879 -186.37648010]
[-37.13220596 -172.75317383]
[-30.85484695 -159.12985229]
[-16.00040436 -149.78573608]
[-17.84123993 -131.46382141]
[-5.36529541 -123.32747650]
[-6.38227654 -107.53898621]
[0.09721943 -94.01064301]
[6.57671547 -80.48229980]
[13.45612812 -67.15287018]
[20.72935677 -54.03417206]
[28.00258636 -40.91547775]
[43.51086807 -32.70206833]
[43.03785324 -14.29397964]
[50.50559235 -1.28502738]
[57.97333527 11.72392464]
[65.44107819 24.73287773]
[72.90882111 37.74182892]
[85.95536041 44.92771912]
[86.11549377 60.74811554]
[99.16203308 67.93399811]
[99.32216644 83.75439453]
[110.36057281 87.46853638]
[116.08342743 97.61201477]
[113.55458069 108.98066711]
[120.82781219 122.09935760]
[128.10104370 135.21804810]
[134.99903870 141.20599365]
[135.38323975 148.58665466]
[142.46034241 161.81217957]
[149.53746033 175.03770447]
[156.61456299 188.26322937]
[163.69166565 201.48876953]
[171.54342651 214.26960754]
[180.14198303 226.56044006]
[188.74055481 238.85128784]
[207.50862122 241.43460083]
[218.24436951 256.65487671]
[214.51072693 274.57623291]
[223.47143555 286.60562134]
[232.43212891 298.63500977]
[241.39282227 310.66436768]
[250.35351562 322.69375610]
[259.31420898 334.72311401]
[273.76315308 341.16818237]
[275.16116333 355.99703979]
[284.12185669 368.02642822]
[299.50955200 370.44653320]
[308.42559814 382.77368164]
[306.02355957 397.42855835]
[314.98425293 409.45794678]
[323.94494629 421.48733521]
[332.90563965 433.51669312]
[341.86633301 445.54608154]
[354.98080444 438.22036743]
[368.93927002 432.66915894]
[383.50292969 428.98742676]
[398.42254639 427.23818970]
[413.44287109 427.45141602]
[428.30682373 429.62338257]
[442.76010132 433.71697998]
[456.55538940 439.66213989]
[469.45663452 447.35714722]
[481.24307251 456.67028809]
[491.71301270 467.44226074]
[500.68731689 479.48870850]
[508.01242065 492.60351562]
[513.56298828 506.56225586]
[517.24401855 521.12609863]
[518.99249268 536.04577637]
[518.77862549 551.06610107]
[516.60589600 565.92993164]
[512.51165771 580.38305664]
[506.56582642 594.17803955]
[498.87020874 607.07891846]
[489.55648804 618.86492920]
[478.78402710 629.33435059]
[466.73715210 638.30804443]
[453.62200928 645.63256836]
[439.66299438 651.18243408]
[425.09899902 654.86279297]
[410.17919922 656.61059570]
[395.15890503 656.39593506]
[380.29516602 654.22253418]
[365.84225464 650.12756348]
[352.04751587 644.18109131]
[339.14703369 636.48486328]
[327.36148071 627.17059326]
[316.89254761 616.39764404]
[307.91940308 604.35034180]
[300.59555054 591.23486328]
[295.04632568 577.27557373]
[291.36669922 562.71136475]
[289.61959839 547.79150391]
[289.83493042 532.77124023]
[292.00903320 517.90759277]
[296.10470581 503.45486450]
[302.05181885 489.66043091]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 166]
[3 165]
[4 164]
[5 163]
[6 162]
[9 159]
[10 158]
[12 156]
[13 155]
[14 154]
[15 153]
[16 152]
[17 151]
[22 148]
[23 147]
[24 146]
[33 145]
[34 144]
[35 143]
[36 142]
[37 141]
[38 139]
[39 138]
[40 137]
[42 134]
[44 132]
[46 130]
[47 129]
[48 128]
[49 127]
[50 126]
[53 124]
[54 123]
[55 122]
[60 121]
[61 120]
[62 119]
[64 117]
[67 115]
[68 114]
[69 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
