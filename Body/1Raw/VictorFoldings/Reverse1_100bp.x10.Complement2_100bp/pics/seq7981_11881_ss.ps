%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[63.36042023 493.88928223]
[59.62710571 508.43029785]
[54.46450806 522.52728271]
[47.92393494 536.04022217]
[40.07039261 548.83477783]
[30.98193359 560.78381348]
[20.74888802 571.76849365]
[9.47295666 581.67968750]
[-2.73379064 590.41888428]
[-15.75003529 597.89929199]
[-29.44641113 604.04644775]
[-43.68679428 608.79937744]
[-58.32965851 612.11071777]
[-73.22946167 613.94769287]
[-88.23812866 614.29193115]
[-103.20648956 613.14007568]
[-117.98577881 610.50360107]
[-132.42910767 606.40856934]
[-146.39292908 600.89587402]
[-159.73846436 594.02014160]
[-172.33306885 585.84979248]
[-184.05157471 576.46600342]
[-194.77749634 565.96209717]
[-204.40426636 554.44232178]
[-212.83618164 542.02136230]
[-219.98944092 528.82250977]
[-225.79296875 514.97698975]
[-230.18905640 500.62243652]
[-233.13403320 485.90151978]
[-234.59863281 470.96051025]
[-234.56828308 455.94793701]
[-233.04328918 441.01296997]
[-230.03881836 426.30407715]
[-225.58473206 411.96740723]
[-219.72528076 398.14550781]
[-212.51870728 384.97567749]
[-204.03665161 372.58886719]
[-194.36338806 361.10815430]
[-183.59507751 350.64767456]
[-171.83872986 341.31134033]
[-159.21119690 333.19198608]
[-145.83798218 326.37026978]
[-131.85198975 320.91403198]
[-117.39221954 316.87747192]
[-102.60239410 314.30075073]
[-87.62949371 313.20941162]
[-72.62234497 313.61434937]
[-57.73008347 315.51150513]
[-43.10073090 318.88204956]
[-28.87967873 323.69250488]
[-15.20826626 329.89501953]
[-2.22237134 337.42794800]
[6.55823183 325.26647949]
[15.33883476 313.10504150]
[24.11943817 300.94357300]
[32.90004349 288.78213501]
[39.58023453 275.35174561]
[35.91763687 260.91448975]
[47.36338425 249.99177551]
[51.76438141 235.65193176]
[56.16538239 221.31208801]
[52.50278091 206.87481689]
[63.94852829 195.95211792]
[68.34952545 181.61227417]
[72.64365387 167.24005127]
[76.83066559 152.83627319]
[81.01767731 138.43249512]
[85.20468140 124.02870941]
[89.39169312 109.62493134]
[86.24539948 96.00170135]
[96.20452118 86.18805695]
[100.39153290 71.78427887]
[104.57854462 57.38049316]
[108.76555634 42.97671127]
[112.95256805 28.57292938]
[117.13957977 14.16914749]
[121.32659149 -0.23463418]
[125.51360321 -14.63841629]
[120.71003723 -32.41500854]
[133.84214783 -44.05607605]
[124.91264343 -59.09878922]
[129.53427124 -75.62015533]
[144.37680054 -83.52825928]
[148.13310242 -98.05031586]
[151.88940430 -112.57237244]
[155.64570618 -127.09443665]
[159.40199280 -141.61650085]
[155.36706543 -156.91453552]
[166.04499817 -167.29870605]
[168.71080017 -182.05992126]
[170.27131653 -196.97853088]
[171.72073364 -211.90834045]
[173.05897522 -226.84851074]
[174.39721680 -241.78869629]
[175.73544312 -256.72888184]
[161.40391541 -261.37161255]
[148.46507263 -269.08746338]
[137.56793213 -279.48937988]
[129.25909424 -292.05563354]
[123.95531464 -306.15591431]
[121.92263794 -321.08294678]
[123.26301575 -336.08798218]
[127.90921783 -350.41839600]
[135.62818909 -363.35534668]
[146.03276062 -374.24996948]
[158.60102844 -382.55575562]
[172.70259094 -387.85614014]
[187.63009644 -389.88519287]
[202.63481140 -388.54116821]
[216.96409607 -383.89151001]
[229.89918518 -376.16940308]
[240.79129028 -365.76217651]
[249.09403992 -353.19189453]
[254.39099121 -339.08905029]
[256.41644287 -324.16104126]
[255.06878662 -309.15667725]
[250.41563416 -294.82852173]
[242.69038391 -281.89529419]
[232.28054810 -271.00570679]
[219.70825195 -262.70602417]
[205.60412598 -257.41247559]
[190.67562866 -255.39065552]
[189.33738708 -240.45046997]
[187.99916077 -225.51028442]
[186.66091919 -210.57009888]
[189.19514465 -203.62751770]
[185.18992615 -195.41799927]
[183.62940979 -180.49938965]
[193.69076538 -191.62455750]
[207.93608093 -196.32250977]
[222.64167786 -193.36524963]
[233.96353149 -183.52575684]
[238.94215393 -169.37608337]
[236.27613831 -154.61489868]
[226.66236877 -143.10076904]
[212.61387634 -137.84342957]
[197.80287170 -140.21714783]
[186.10095215 -149.60144043]
[180.56706238 -163.54240417]
[184.87066650 -149.28308105]
[173.92405701 -137.86019897]
[170.16775513 -123.33813477]
[166.41145325 -108.81607819]
[162.65515137 -94.29401398]
[158.89884949 -79.77195740]
[166.92723083 -69.69352722]
[167.69636536 -56.63632202]
[160.70181274 -45.35417938]
[148.30667114 -40.08398056]
[154.01531982 -29.41917610]
[150.82447815 -17.33603477]
[139.91738892 -10.45140457]
[135.73037720 3.95237708]
[131.54336548 18.35615921]
[127.35634613 32.75994110]
[123.16933441 47.16372299]
[118.98232269 61.56750488]
[114.79531860 75.97129059]
[110.60830688 90.37506866]
[113.75460052 103.99829865]
[103.79547882 113.81194305]
[99.60846710 128.21572876]
[95.42145538 142.61950684]
[91.23444366 157.02328491]
[87.04743195 171.42706299]
[87.65702820 180.54113770]
[82.68937683 186.01327515]
[78.28837585 200.35311890]
[81.63618469 215.81607056]
[70.50522614 225.71308899]
[66.10423279 240.05293274]
[61.70323181 254.39277649]
[65.05104065 269.85571289]
[53.92008209 279.75274658]
[64.27878571 268.90390015]
[77.06470490 261.06042480]
[91.42978668 256.74249268]
[106.42124939 256.23654175]
[121.04476929 259.57611084]
[134.33041382 266.53970337]
[145.39698792 276.66546631]
[153.51051331 289.28173828]
[158.13281250 303.55178833]
[158.95733643 318.52911377]
[155.92936707 333.22030640]
[149.24977112 346.65100098]
[139.36155701 357.93032837]
[126.92058563 366.31018066]
[112.75202179 371.23480225]
[97.79560852 372.37750244]
[83.04335785 369.66253662]
[69.47373199 363.26992798]
[57.98675537 353.62371826]
[49.34431839 341.36370850]
[44.11964035 327.30300903]
[42.65925598 312.37426758]
[45.06149673 297.56271362]
[36.28089523 309.72418213]
[27.50029182 321.88565063]
[18.71968842 334.04708862]
[9.93908405 346.20855713]
[21.17568779 356.16430664]
[31.36516380 367.18942261]
[40.40624237 379.17431641]
[48.20907211 391.99984741]
[54.69609451 405.53857422]
[59.80284119 419.65594482]
[63.47855377 434.21160889]
[65.68670654 449.06094360]
[66.40534973 464.05636597]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 201]
[53 200]
[54 199]
[55 198]
[56 197]
[57 174]
[59 172]
[60 171]
[61 170]
[63 168]
[64 167]
[65 165]
[66 164]
[67 163]
[68 162]
[69 161]
[71 159]
[72 158]
[73 157]
[74 156]
[75 155]
[76 154]
[77 153]
[78 152]
[80 149]
[83 145]
[84 144]
[85 143]
[86 142]
[87 141]
[89 139]
[90 128]
[91 127]
[92 125]
[93 124]
[94 123]
[95 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
