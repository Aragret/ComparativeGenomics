%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[117.49757385 678.79357910]
[112.85906982 664.51068115]
[109.91011047 649.78588867]
[108.69057465 634.81823730]
[109.21695709 619.81030273]
[111.48213196 604.96490479]
[115.45546722 590.48284912]
[121.08323669 576.56005859]
[128.28932190 563.38476562]
[136.97628784 551.13513184]
[147.02662659 539.97686768]
[158.30442810 530.06079102]
[170.65716553 521.52111816]
[183.91781616 514.47326660]
[178.46244812 500.50048828]
[173.00709534 486.52770996]
[167.55174255 472.55490112]
[163.14894104 486.89419556]
[151.76165771 496.65789795]
[136.91839600 498.82064819]
[123.21848297 492.71228027]
[114.90699005 480.22552490]
[114.55931854 465.22955322]
[122.28320312 452.37103271]
[135.68531799 445.63430786]
[150.61285400 447.10681152]
[162.44053650 456.33251953]
[158.90086365 441.75616455]
[155.36119080 427.17977905]
[151.82151794 412.60339355]
[148.28184509 398.02703857]
[145.47712708 395.89022827]
[143.56803894 392.28878784]
[143.23171997 387.65841675]
[144.92504883 382.72085571]
[142.03977966 368.00094604]
[139.15451050 353.28106689]
[136.26924133 338.56115723]
[133.38395691 323.84127808]
[130.49868774 309.12139893]
[127.61341858 294.40148926]
[117.57249451 283.40017700]
[122.51082611 268.36941528]
[119.62554932 253.64953613]
[109.58462524 242.64820862]
[114.52295685 227.61746216]
[101.72797394 225.37420654]
[90.42906189 218.90048218]
[81.98188782 208.94796753]
[77.40841675 196.68724060]
[77.27335358 183.57005310]
[81.61447144 171.15745544]
[89.93555450 160.93405151]
[101.26301575 154.13035583]
[98.81729126 139.33108521]
[96.37155914 124.53182220]
[93.92583466 109.73255157]
[87.16967010 123.12487030]
[74.67693329 131.42736816]
[59.71319962 132.46980286]
[46.18994904 125.97967529]
[37.64213181 113.65348816]
[36.30412292 98.71328735]
[42.52567673 85.06439209]
[54.68049240 76.27460480]
[69.59133148 74.64154053]
[83.36053467 80.59208679]
[92.38853455 92.56996155]
[84.44662476 78.88652039]
[91.99358368 66.04546356]
[91.77024841 51.04712296]
[91.54692078 36.04878616]
[81.16257477 46.87308121]
[66.26406860 48.61501312]
[53.66278839 40.47819519]
[49.11987686 26.18267250]
[54.71229172 12.26416397]
[67.88325500 5.08602476]
[82.61118317 7.93000269]
[92.16328430 19.49761391]
[93.50151825 4.55742884]
[94.83975983 -10.38275623]
[96.17799377 -25.32294083]
[97.07080841 -40.29634857]
[89.74781799 -54.32077026]
[97.86062622 -66.81202698]
[98.30723572 -81.80538177]
[98.75383759 -96.79872894]
[91.43085480 -110.82315063]
[99.54366302 -123.31441498]
[99.99026489 -138.30776978]
[100.43687439 -153.30111694]
[100.88347626 -168.29446411]
[101.33008575 -183.28781128]
[90.77183533 -194.74037170]
[91.43833923 -209.93940735]
[102.42167664 -219.93449402]
[102.86827850 -234.92785645]
[103.31488800 -249.92120361]
[103.76149750 -264.91455078]
[90.18952179 -271.89770508]
[80.99832916 -284.08312988]
[78.01282501 -299.05142212]
[81.82579041 -313.83059692]
[91.68016052 -325.48623657]
[105.61933136 -331.70413208]
[120.87568665 -331.24969482]
[134.42004395 -324.21313477]
[143.56318665 -311.99160767]
[146.48973083 -297.01168823]
[142.61859131 -282.24765015]
[132.71839905 -270.63088989]
[118.75484467 -264.46795654]
[118.30823517 -249.47459412]
[117.86163330 -234.48124695]
[117.41502380 -219.48789978]
[127.78396606 -208.85678101]
[127.54463196 -193.64501953]
[116.32343292 -182.84120178]
[115.87683105 -167.84785461]
[115.43022156 -152.85450745]
[114.98361206 -137.86116028]
[114.53701019 -122.86780548]
[121.89194489 -109.91580963]
[113.74719238 -96.35212708]
[113.30058289 -81.35877228]
[112.85397339 -66.36542511]
[120.20890808 -53.41342545]
[112.06415558 -39.84974289]
[113.88606262 -37.71929550]
[114.97384644 -34.73880386]
[114.99951172 -31.18426323]
[113.74093628 -27.44521141]
[111.11817169 -23.98470688]
[109.77993774 -9.04452229]
[108.44170380 5.89566278]
[107.10346985 20.83584785]
[106.54526520 35.82545853]
[106.76859283 50.82379532]
[106.99192047 65.82213593]
[114.91784668 78.43280029]
[107.38687134 92.34663391]
[108.72510529 107.28681946]
[111.17082977 122.08609009]
[113.61656189 136.88536072]
[116.06228638 151.68463135]
[132.62953186 156.20303345]
[145.51350403 167.47224426]
[152.15393066 183.18861389]
[151.25942993 200.17134094]
[143.05828857 215.00627136]
[129.24284363 224.73217773]
[139.49014282 236.78637695]
[134.34544373 250.76425171]
[137.23071289 265.48416138]
[147.47801208 277.53833008]
[142.33331299 291.51623535]
[145.21858215 306.23611450]
[148.10385132 320.95599365]
[150.98912048 335.67590332]
[153.87440491 350.39578247]
[156.75967407 365.11569214]
[159.64494324 379.83557129]
[162.85821533 394.48736572]
[166.39788818 409.06372070]
[169.93756104 423.64010620]
[173.47723389 438.21649170]
[177.01690674 452.79284668]
[181.52453613 467.09954834]
[186.97988892 481.07235718]
[192.43525696 495.04513550]
[197.89060974 509.01794434]
[212.41865540 505.21630859]
[227.28982544 503.12704468]
[242.30297852 502.77838135]
[257.25509644 504.17501831]
[271.94396973 507.29809570]
[286.17092896 512.10534668]
[299.74362183 518.53179932]
[312.47842407 526.49053955]
[324.20315552 535.87390137]
[334.75924683 546.55499268]
[344.00390625 558.38934326]
[351.81216431 571.21697998]
[358.07839966 584.86431885]
[362.71783447 599.14691162]
[365.66778564 613.87152100]
[366.88833618 628.83905029]
[366.36294556 643.84704590]
[364.09875488 658.69262695]
[360.12637329 673.17492676]
[354.49954224 687.09808350]
[347.29434204 700.27386475]
[338.60821533 712.52410889]
[328.55859375 723.68304443]
[317.28146362 733.59979248]
[304.92929077 742.14031982]
[291.66912842 749.18902588]
[277.68029785 754.65063477]
[263.15197754 758.45129395]
[248.28068542 760.53961182]
[233.26750183 760.88726807]
[218.31547546 759.48962402]
[203.62681580 756.36553955]
[189.40016174 751.55731201]
[175.82792664 745.13000488]
[163.09364319 737.17041016]
[151.36953735 727.78631592]
[140.81417847 717.10449219]
[131.57028198 705.26953125]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 172]
[15 171]
[16 170]
[17 169]
[27 168]
[28 167]
[29 166]
[30 165]
[31 164]
[35 163]
[36 162]
[37 161]
[38 160]
[39 159]
[40 158]
[41 157]
[43 155]
[44 154]
[46 152]
[54 146]
[55 145]
[56 144]
[57 143]
[68 142]
[70 140]
[71 139]
[72 138]
[80 137]
[81 136]
[82 135]
[83 134]
[84 129]
[86 127]
[87 126]
[88 125]
[90 123]
[91 122]
[92 121]
[93 120]
[94 119]
[97 116]
[98 115]
[99 114]
[100 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
