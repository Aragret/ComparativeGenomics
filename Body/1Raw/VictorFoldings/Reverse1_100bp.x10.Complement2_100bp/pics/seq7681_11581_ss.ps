%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[34.13211441 652.83068848]
[34.13211441 637.83068848]
[34.13211441 622.83068848]
[34.13211441 607.83068848]
[34.13211441 592.83068848]
[34.13211441 577.83068848]
[26.39481544 565.10339355]
[34.13211441 551.30322266]
[34.13211441 536.30322266]
[34.13211441 521.30322266]
[34.13211441 506.30322266]
[34.13211441 491.30322266]
[26.27977753 504.08370972]
[13.95427132 512.63250732]
[-0.76734066 515.50897217]
[-15.40420723 512.22839355]
[-27.48975945 503.34362793]
[-34.98736954 490.35186768]
[-36.63356018 475.44247437]
[-32.15091705 461.12792969]
[-22.29484367 449.82052612]
[-8.72626400 443.42568970]
[6.26827908 443.02111816]
[20.16194153 448.67498779]
[30.61339760 459.43450928]
[35.86164093 473.48812866]
[27.36484528 461.30865479]
[30.08123207 446.33947754]
[42.91381454 437.50982666]
[45.79908752 422.78994751]
[48.68436050 408.07006836]
[51.56963348 393.35015869]
[54.45490265 378.63027954]
[56.79039001 363.81320190]
[58.57285690 348.91949463]
[60.35532379 334.02575684]
[62.13779068 319.13204956]
[63.92025375 304.23834229]
[50.57094193 299.79586792]
[38.34783173 292.81869507]
[27.72679901 283.57617188]
[19.12180901 272.42584229]
[12.86877346 259.79965210]
[9.21243858 246.18721008]
[8.29681396 232.11688232]
[10.15949249 218.13516235]
[14.73011589 204.78550720]
[21.83303070 192.58720398]
[31.19403648 182.01521301]
[42.45096970 173.48158264]
[55.16771698 167.31945801]
[68.85111237 163.77008057]
[82.97005463 162.97329712]
[85.19516754 148.13925171]
[87.42028809 133.30520630]
[81.65657043 119.57099152]
[91.35540009 107.07125854]
[93.47002411 92.22106171]
[95.47403717 77.35552979]
[97.47805023 62.49000549]
[91.65383148 47.77983856]
[101.02214050 36.20037079]
[103.02615356 21.33484459]
[91.15100861 30.49895477]
[76.15892792 30.01155281]
[64.90409088 20.09547234]
[62.53206253 5.28421116]
[70.12728882 -7.65072107]
[84.21734619 -12.79564762]
[98.36045074 -7.79837704]
[106.09091949 5.05822277]
[109.63059235 -9.51815224]
[113.17026520 -24.09452820]
[108.90802002 -39.33079529]
[119.43016052 -49.87279510]
[122.96983337 -64.44916534]
[126.50950623 -79.02554321]
[130.04917908 -93.60192108]
[133.58885193 -108.17829132]
[137.12852478 -122.75466919]
[140.66819763 -137.33103943]
[135.07565308 -154.87541199]
[147.67488098 -167.09124756]
[150.99713135 -181.71871948]
[153.66293335 -196.47993469]
[155.66694641 -211.34545898]
[157.67095947 -226.21098328]
[159.67497253 -241.07650757]
[161.67898560 -255.94204712]
[162.34877014 -270.92709351]
[161.67898560 -285.91210938]
[161.00920105 -300.89715576]
[160.33941650 -315.88220215]
[159.66963196 -330.86724854]
[158.99984741 -345.85226440]
[158.33006287 -360.83731079]
[157.66027832 -375.82235718]
[143.46989441 -381.34982300]
[132.75915527 -392.17572021]
[127.38378906 -406.42440796]
[128.27510071 -421.62722778]
[135.27864075 -435.15017700]
[147.18104553 -444.65032959]
[161.92010498 -448.48171997]
[176.94223022 -445.98056030]
[189.64472961 -437.58016968]
[197.82679749 -424.73596191]
[200.07087708 -409.67330933]
[195.98815918 -395.00186157]
[186.28598022 -383.26354980]
[172.64530945 -376.49212646]
[173.31509399 -361.50711060]
[173.98487854 -346.52206421]
[174.65466309 -331.53701782]
[175.32444763 -316.55197144]
[175.99423218 -301.56695557]
[176.66401672 -286.58190918]
[177.33380127 -271.59686279]
[184.89186096 -284.55355835]
[197.27449036 -293.01940918]
[212.09078979 -295.35980225]
[226.47994995 -291.12286377]
[237.66368103 -281.12664795]
[243.48255920 -267.30126953]
[242.81304932 -252.31622314]
[235.78443909 -239.06486511]
[223.75381470 -230.10581970]
[209.04414368 -227.16896057]
[194.49559021 -230.82131958]
[182.91728210 -240.35771179]
[176.54450989 -253.93803406]
[174.54049683 -239.07249451]
[172.53648376 -224.20697021]
[170.53247070 -209.34144592]
[168.52845764 -194.47592163]
[181.08258057 -202.68530273]
[195.79222107 -199.74822998]
[204.23103333 -187.34715271]
[201.56488037 -172.58601379]
[189.32106018 -163.92062378]
[174.51338196 -166.31494141]
[165.62458801 -178.39645386]
[162.30233765 -163.76899719]
[168.48149109 -153.36973572]
[165.83337402 -141.15615845]
[155.24456787 -133.79136658]
[151.70489502 -119.21499634]
[148.16522217 -104.63862610]
[144.62554932 -90.06224823]
[141.08587646 -75.48587036]
[137.54620361 -60.90949631]
[134.00653076 -46.33312225]
[138.52197266 -32.13945389]
[127.74664307 -20.55485535]
[124.20697021 -5.97847986]
[120.66729736 8.59789562]
[117.89168549 23.33885765]
[115.88767242 38.20438766]
[121.85523224 51.85127258]
[112.34358215 64.49401855]
[110.33956909 79.35954285]
[108.33554840 94.22507477]
[110.46520996 101.99920654]
[106.18944550 109.29637146]
[111.79400635 124.09162903]
[102.25433350 135.53031921]
[100.02921295 150.36436462]
[97.80410004 165.19841003]
[112.72055817 170.93403625]
[125.99166107 179.82563782]
[136.96055603 191.42955017]
[145.08515930 205.16795349]
[149.96487427 220.35762024]
[151.36041260 236.24395752]
[149.20552063 252.03840637]
[143.61004639 266.95767212]
[134.85444641 280.26248169]
[123.37565613 291.29434204]
[109.74531555 299.50799561]
[94.64128876 304.49838257]
[78.81397247 306.02081299]
[77.03150940 320.91452026]
[75.24903870 335.80822754]
[73.46657562 350.70196533]
[71.68410492 365.59567261]
[84.90950012 358.51831055]
[98.74834442 364.30505371]
[102.99916077 378.69012451]
[94.52841187 391.06939697]
[79.58041382 392.31732178]
[69.17479706 381.51553345]
[66.28952026 396.23544312]
[63.40425110 410.95532227]
[60.51897812 425.67523193]
[57.63370514 440.39511108]
[66.18334198 453.41592407]
[63.04757309 468.30288696]
[50.58153534 476.37341309]
[49.13211441 491.30322266]
[49.13211441 506.30322266]
[49.13211441 521.30322266]
[49.13211441 536.30322266]
[49.13211441 551.30322266]
[56.86941528 565.10339355]
[49.13211441 577.83068848]
[49.13211441 592.83068848]
[49.13211441 607.83068848]
[49.13211441 622.83068848]
[49.13211441 637.83068848]
[49.13211441 652.83068848]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 210]
[2 209]
[3 208]
[4 207]
[5 206]
[6 205]
[8 203]
[9 202]
[10 201]
[11 200]
[12 199]
[26 198]
[29 195]
[30 194]
[31 193]
[32 192]
[33 191]
[34 185]
[35 184]
[36 183]
[37 182]
[38 181]
[53 168]
[54 167]
[55 166]
[57 164]
[58 162]
[59 161]
[60 160]
[62 158]
[63 157]
[71 156]
[72 155]
[73 154]
[75 152]
[76 151]
[77 150]
[78 149]
[79 148]
[80 147]
[81 146]
[83 143]
[84 142]
[85 135]
[86 134]
[87 133]
[88 132]
[89 131]
[90 118]
[91 117]
[92 116]
[93 115]
[94 114]
[95 113]
[96 112]
[97 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
