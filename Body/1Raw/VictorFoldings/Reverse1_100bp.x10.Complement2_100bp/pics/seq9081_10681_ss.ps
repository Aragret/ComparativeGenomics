%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[79.44512177 613.68316650]
[70.70379639 625.97302246]
[59.18020630 635.70220947]
[45.59873581 642.25927734]
[30.81312752 645.23187256]
[15.75281334 644.43328857]
[1.36450064 639.91363525]
[-11.44735050 631.95703125]
[-21.87737656 621.06365967]
[-29.26993752 607.91827393]
[-33.16032791 593.34722900]
[-33.30400085 578.26647949]
[-29.69191933 563.62390137]
[-22.55114174 550.34008789]
[-12.33054638 539.25000000]
[0.32739258 531.05078125]
[14.62698746 526.25781250]
[29.66935158 525.17242432]
[32.33514786 510.41119385]
[35.00094223 495.64999390]
[37.44667053 480.85070801]
[39.67178726 466.01666260]
[41.89690399 451.18261719]
[43.56844711 436.27606201]
[44.68409348 421.31759644]
[45.68835449 406.35125732]
[46.58116913 391.37783813]
[47.47398758 376.40444946]
[48.36680222 361.43103027]
[49.25961685 346.45764160]
[39.44256973 338.11166382]
[36.17621613 325.44625854]
[40.87001038 313.02938843]
[52.01995850 305.47335815]
[53.13560486 290.51492310]
[54.25125504 275.55645752]
[55.36690521 260.59799194]
[46.01103592 272.32266235]
[32.31549072 278.44082642]
[17.33988380 277.58569336]
[4.42980957 269.94830322]
[-3.53059173 257.23483276]
[-4.76294518 242.28555298]
[1.00805974 228.44013977]
[12.49316597 218.79170227]
[27.12657166 215.49572754]
[41.63913727 219.28854370]
[52.78871536 229.32283020]
[58.08446884 243.35691833]
[61.62414169 228.78053284]
[65.16381073 214.20416260]
[68.70348358 199.62779236]
[72.24315643 185.05140686]
[67.72772980 170.85774231]
[78.50305939 159.27314758]
[82.04272461 144.69677734]
[85.47379303 130.09445190]
[88.79605103 115.46698761]
[81.16312408 103.15095520]
[84.37232208 89.02129364]
[96.57649231 81.21075439]
[99.89875031 66.58329010]
[103.22100830 51.95582962]
[106.54326630 37.32837296]
[98.10096741 26.83350945]
[97.25685120 13.58594608]
[104.09548950 2.43627620]
[115.92919159 -2.66205621]
[119.46886444 -17.23843193]
[123.00853729 -31.81480598]
[126.54821014 -46.39118195]
[129.87046814 -61.01864243]
[132.97457886 -75.69394684]
[135.96936035 -90.39195251]
[138.85462952 -105.11183929]
[141.73989868 -119.83173370]
[144.62516785 -134.55162048]
[147.18099976 -149.33227539]
[149.40612793 -164.16632080]
[151.63124084 -179.00036621]
[153.85635376 -193.83441162]
[156.08146667 -208.66845703]
[158.19609070 -223.51864624]
[160.20010376 -238.38417053]
[154.37588501 -253.09434509]
[163.74420166 -264.67379761]
[165.52667236 -279.56753540]
[167.08718872 -294.48614502]
[168.64772034 -309.40472412]
[166.73956299 -313.30511475]
[166.22370911 -317.21643066]
[166.93260193 -320.69964600]
[168.57337952 -323.41525269]
[170.77105713 -325.15545654]
[173.21678162 -339.95474243]
[175.66252136 -354.75399780]
[178.10824585 -369.55328369]
[164.12242126 -375.13995361]
[151.66482544 -383.60296631]
[141.31808472 -394.54641724]
[133.56616211 -407.45849609]
[128.77162170 -421.73526001]
[127.15869904 -436.70898438]
[128.80285645 -451.67932129]
[133.62716675 -465.94607544]
[141.40602112 -478.84194946]
[151.77555847 -489.76379395]
[164.25079346 -498.20077515]
[178.24822998 -503.75827026]
[193.11318970 -506.17636108]
[208.15040588 -505.34191895]
[222.65655518 -501.29400635]
[235.95317078 -494.22195435]
[247.41833496 -484.45651245]
[256.51580811 -472.45440674]
[262.82009888 -458.77706909]
[266.03631592 -444.06414795]
[266.01403809 -429.00381470]
[262.75430298 -414.30044556]
[256.40960693 -400.64181519]
[247.27667236 -388.66668701]
[235.78266907 -378.93518066]
[222.46519470 -371.90249634]
[207.94712830 -367.89749146]
[192.90751648 -367.10754395]
[190.46179199 -352.30828857]
[188.01605225 -337.50900269]
[185.57032776 -322.70974731]
[183.56631470 -307.84420776]
[182.00579834 -292.92559814]
[180.44526672 -278.00698853]
[182.70339966 -273.79867554]
[182.34185791 -268.12716675]
[178.60972595 -262.66979980]
[184.57728577 -249.02290344]
[175.06564331 -236.38015747]
[173.06163025 -221.51463318]
[175.28330994 -214.46582031]
[170.91551208 -206.44332886]
[168.69039917 -191.60928345]
[166.46528625 -176.77525330]
[164.24015808 -161.94120789]
[162.01504517 -147.10716248]
[163.80554199 -144.06964111]
[164.21372986 -140.01397705]
[162.77713013 -135.59928894]
[159.34506226 -131.66635132]
[156.45979309 -116.94645691]
[153.57452393 -102.22657013]
[150.68923950 -87.50667572]
[152.48744202 -80.33811188]
[147.64988708 -72.58983612]
[144.54577637 -57.91453171]
[146.35383606 -53.49412918]
[145.40422058 -47.89098358]
[141.12458801 -42.85150909]
[137.58491516 -28.27513504]
[134.04524231 -13.69875908]
[130.50556946 0.87761629]
[139.86114502 14.85301685]
[136.14114380 31.60044861]
[121.17073059 40.65063095]
[117.84847260 55.27809143]
[114.52620697 69.90554810]
[111.20394897 84.53301239]
[118.83687592 96.84904480]
[115.62767792 110.97870636]
[103.42350769 118.78924561]
[100.10124969 133.41670227]
[101.25224304 142.47833252]
[96.61910248 148.23645020]
[93.07942963 162.81282043]
[97.34167480 178.04908752]
[86.81953430 188.59107971]
[83.27986145 203.16746521]
[79.74018860 217.74383545]
[76.20051575 232.32020569]
[72.66084290 246.89659119]
[70.32535553 261.71365356]
[69.20970917 276.67211914]
[68.09406281 291.63055420]
[66.97840881 306.58901978]
[78.63465881 319.63320923]
[77.27724457 336.73504639]
[64.23302460 347.35046387]
[63.34020615 362.32385254]
[62.44739151 377.29727173]
[61.55457687 392.27066040]
[60.66175842 407.24407959]
[63.27483368 415.99676514]
[59.64254761 422.43325806]
[58.52689743 437.39169312]
[71.42307281 429.73086548]
[85.50650787 434.89389038]
[90.39541626 449.07479858]
[82.48587799 461.81997681]
[67.60850525 463.73413086]
[56.73094940 453.40774536]
[54.50583267 468.24179077]
[52.28071594 483.07583618]
[54.34116364 489.35803223]
[53.10521317 494.90505981]
[49.76216125 498.31579590]
[47.09636307 513.07702637]
[44.43056870 527.83819580]
[58.14308167 534.11657715]
[69.86290741 543.60852051]
[78.85332489 555.71728516]
[84.54918671 569.68182373]
[86.59246063 584.62426758]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 205]
[19 204]
[20 203]
[21 200]
[22 199]
[23 198]
[24 192]
[25 191]
[26 189]
[27 188]
[28 187]
[29 186]
[30 185]
[34 182]
[35 181]
[36 180]
[37 179]
[49 178]
[50 177]
[51 176]
[52 175]
[53 174]
[55 172]
[56 171]
[57 169]
[58 168]
[61 165]
[62 164]
[63 163]
[64 162]
[68 159]
[69 158]
[70 157]
[71 156]
[72 153]
[73 152]
[74 150]
[75 149]
[76 148]
[77 147]
[78 143]
[79 142]
[80 141]
[81 140]
[82 139]
[83 137]
[84 136]
[86 134]
[87 131]
[88 130]
[89 129]
[94 128]
[95 127]
[96 126]
[97 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
