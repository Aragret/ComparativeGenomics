%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUACUCCCCGUAAACCAUUUAUACUAAUAGUAUUAAAUUACUCAGCUUUAGUAAGCAAAACAAAUUUGAUAUAUGGUUAAGCCAAGUCAGAUUAGGAAAAxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[125.18959808 948.28576660]
[110.32813263 946.23028564]
[95.58332825 943.45922852]
[80.98962402 939.97900391]
[66.58110046 935.79772949]
[52.39141464 930.92523193]
[38.45370483 925.37292480]
[24.80052757 919.15368652]
[11.46376419 912.28204346]
[-1.52543247 904.77410889]
[-14.13672638 896.64739990]
[-26.34066391 887.92089844]
[-38.10874176 878.61492920]
[-49.41347504 868.75128174]
[-60.22845840 858.35302734]
[-70.52843475 847.44439697]
[-80.28935242 836.05084229]
[-89.48841095 824.19903564]
[-98.10411835 811.91656494]
[-106.11636353 799.23223877]
[-113.50643158 786.17565918]
[-120.25704956 772.77722168]
[-126.35247040 759.06835938]
[-131.77844238 745.08093262]
[-136.52230835 730.84771729]
[-140.57296753 716.40197754]
[-143.92097473 701.77734375]
[-146.55851746 687.00805664]
[-148.47941589 672.12860107]
[-149.67918396 657.17370605]
[-150.15504456 642.17834473]
[-149.90585327 627.17742920]
[-148.93222046 612.20611572]
[-147.23640442 597.29937744]
[-144.82237244 582.49188232]
[-141.69577026 567.81835938]
[-137.86387634 553.31304932]
[-133.33566284 539.00976562]
[-128.12168884 524.94195557]
[-122.23414612 511.14251709]
[-115.68677521 497.64361572]
[-108.49487305 484.47680664]
[-100.67523956 471.67282104]
[-92.24613190 459.26162720]
[-83.22723389 447.27212524]
[-73.63961792 435.73236084]
[-63.50567245 424.66931152]
[-52.84906769 414.10876465]
[-41.69469070 404.07540894]
[-30.06859398 394.59268188]
[-17.99792862 385.68273926]
[-5.51089048 377.36636353]
[7.36335945 369.66299438]
[20.59475136 362.59060669]
[34.15238190 356.16574097]
[48.00458908 350.40341187]
[62.11901855 345.31701660]
[76.46270752 340.91851807]
[91.00215149 337.21813965]
[105.70339203 334.22451782]
[120.53209686 331.94467163]
[118.97158051 317.02606201]
[117.41105652 302.10748291]
[115.85053253 287.18887329]
[114.29000854 272.27026367]
[112.72948456 257.35165405]
[111.16896057 242.43304443]
[109.60843658 227.51445007]
[108.04791260 212.59584045]
[106.48739624 197.67723083]
[97.46799469 185.82397461]
[103.72761536 171.29374695]
[101.72360229 156.42820740]
[99.27787018 141.62893677]
[89.56894684 130.33354187]
[94.95261383 115.45648193]
[85.91062164 108.11593628]
[84.09726715 96.61145782]
[90.44290924 86.84548950]
[88.21778870 72.01145172]
[78.51895905 59.51171875]
[84.28267670 45.77749634]
[82.05756378 30.94345474]
[79.83244324 16.10941124]
[76.57942200 12.02714062]
[75.34137726 7.55271006]
[75.93025970 3.51931620]
[77.85459137 0.56478131]
[73.84937286 -7.64472818]
[76.38359070 -14.58731651]
[75.04535675 -29.52750206]
[73.70712280 -44.46768570]
[72.36888885 -59.40787125]
[71.03065491 -74.34805298]
[56.37436676 -78.21704102]
[43.92700195 -86.86798859]
[35.19163895 -99.25625610]
[31.22311974 -113.88591003]
[32.50065613 -128.99032593]
[38.86998367 -142.74560547]
[49.56197357 -153.49070740]
[63.28551483 -159.92810059]
[78.38343048 -161.28047180]
[93.03256226 -157.38449097]
[105.46395874 -148.71061707]
[114.17647552 -136.30625916]
[118.11803436 -121.66932678]
[116.81266022 -106.56728363]
[110.41799927 -92.82376862]
[99.70622253 -82.09839630]
[85.97084045 -75.68628693]
[87.30907440 -60.74610519]
[88.64730835 -45.80591965]
[89.98554230 -30.86573601]
[91.32377625 -15.92555046]
[92.77319336 -0.99574167]
[94.66648865 13.88429356]
[96.89160919 28.71833801]
[99.11672211 43.55237961]
[108.65639496 54.99108124]
[103.05183411 69.78633118]
[105.27695465 84.62037659]
[116.06143951 97.46837616]
[109.75188446 113.01075745]
[119.63574219 125.36470032]
[114.07714081 139.18321228]
[116.52287292 153.98248291]
[119.39574432 157.23832703]
[120.92893219 160.87341309]
[121.16771698 164.42002869]
[120.30462646 167.47315979]
[118.64621735 169.73321533]
[127.77722931 182.65354919]
[121.40599823 196.11671448]
[122.96652222 211.03532410]
[124.52704620 225.95391846]
[126.08757019 240.87252808]
[127.64808655 255.79113770]
[129.20861816 270.70974731]
[130.76913452 285.62835693]
[132.32966614 300.54693604]
[133.89018250 315.46554565]
[135.45069885 330.38415527]
[150.43022156 329.54598999]
[165.43272400 329.43252563]
[180.42320251 330.04400635]
[195.36662292 331.37899780]
[210.22810364 333.43441772]
[224.97293091 336.20544434]
[239.56665039 339.68560791]
[253.97518921 343.86679077]
[268.16488647 348.73919678]
[282.10263062 354.29147339]
[295.75582886 360.51065063]
[309.09262085 367.38220215]
[322.08187866 374.89007568]
[334.69320679 383.01672363]
[346.89718628 391.74319458]
[358.66531372 401.04907227]
[369.97009277 410.91265869]
[380.78512573 421.31088257]
[391.08514404 432.21948242]
[400.84613037 443.61297607]
[410.04522705 455.46475220]
[418.66101074 467.74713135]
[426.67330933 480.43142700]
[434.06341553 493.48800659]
[440.81411743 506.88638306]
[446.90960693 520.59527588]
[452.33563232 534.58264160]
[457.07955933 548.81579590]
[461.13031006 563.26153564]
[464.47836304 577.88616943]
[467.11596680 592.65539551]
[469.03695679 607.53485107]
[470.23678589 622.48974609]
[470.71270752 637.48516846]
[470.46362305 652.48602295]
[469.49005127 667.45733643]
[467.79431152 682.36413574]
[465.38034058 697.17163086]
[462.25381470 711.84515381]
[458.42196655 726.35052490]
[453.89382935 740.65380859]
[448.67993164 754.72161865]
[442.79244995 768.52111816]
[436.24514771 782.02001953]
[429.05331421 795.18688965]
[421.23373413 807.99090576]
[412.80468750 820.40216064]
[403.78582764 832.39166260]
[394.19827271 843.93145752]
[384.06439209 854.99456787]
[373.40783691 865.55517578]
[362.25350952 875.58856201]
[350.62744141 885.07135010]
[338.55682373 893.98138428]
[326.06982422 902.29779053]
[313.19561768 910.00122070]
[299.96426392 917.07366943]
[286.40664673 923.49859619]
[272.55447388 929.26104736]
[258.44006348 934.34747314]
[244.09640503 938.74603271]
[229.55697632 942.44647217]
[214.85574341 945.44018555]
[200.02705383 947.72009277]
[185.10551453 949.28094482]
[170.12600708 950.11901855]
[155.12348938 950.23242188]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[61 143]
[62 142]
[63 141]
[64 140]
[65 139]
[66 138]
[67 137]
[68 136]
[69 135]
[70 134]
[72 132]
[73 127]
[74 126]
[76 124]
[79 122]
[80 121]
[82 119]
[83 118]
[84 117]
[88 116]
[90 115]
[91 114]
[92 113]
[93 112]
[94 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
