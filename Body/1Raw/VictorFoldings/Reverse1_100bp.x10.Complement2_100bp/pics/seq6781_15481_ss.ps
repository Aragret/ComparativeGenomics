%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[109.56011200 700.50561523]
[109.56011200 685.50561523]
[109.56011200 670.50561523]
[109.44844818 655.50598145]
[109.22512054 640.50769043]
[109.00179291 625.50933838]
[108.77846527 610.51098633]
[108.55513763 595.51263428]
[100.09649658 586.86523438]
[99.78768921 574.37170410]
[108.33951569 564.71618652]
[108.33951569 549.71618652]
[108.33951569 534.71618652]
[100.01055908 525.94378662]
[99.88779449 513.44702148]
[108.58242798 503.91989136]
[108.80575562 488.92156982]
[109.02908325 473.92321777]
[109.25241089 458.92486572]
[109.47573853 443.92654419]
[108.69441223 428.94689941]
[106.91194916 414.05319214]
[105.12948608 399.15948486]
[101.21341705 392.89160156]
[103.43305206 384.03094482]
[101.87253571 369.11233521]
[100.31201172 354.19375610]
[98.22180939 352.32580566]
[96.74557495 349.51736450]
[96.24525452 345.99810791]
[96.99300385 342.12445068]
[99.12992859 338.34454346]
[98.46014404 323.35952759]
[97.79035950 308.37448120]
[97.12057495 293.38943481]
[96.45078278 278.40438843]
[95.78099823 263.41937256]
[95.11121368 248.43432617]
[92.25380707 244.60754395]
[91.77002716 238.94511414]
[94.65131378 232.99450684]
[86.72537994 220.38385010]
[94.25635529 206.47001648]
[94.03302765 191.47166443]
[93.80970001 176.47332764]
[93.58637238 161.47499084]
[85.66043854 148.86433411]
[93.19142151 134.95050049]
[92.96809387 119.95215607]
[92.74476624 104.95381927]
[90.74554443 102.65325165]
[89.53922272 99.57440186]
[89.41566467 96.00954437]
[90.55272675 92.35395050]
[92.98139191 89.06237030]
[93.65117645 74.07733154]
[86.53780365 59.94543076]
[94.83568573 47.57634354]
[95.50547028 32.59130478]
[86.64267731 16.45028687]
[96.65689087 2.03909183]
[86.99463654 13.51257515]
[72.69498444 18.04248047]
[58.18884277 14.22516727]
[47.97109604 3.24347091]
[45.20782471 -11.49980927]
[50.75525665 -25.43630791]
[62.89445877 -34.24765015]
[77.86396790 -35.20354462]
[91.02532196 -28.00779724]
[98.30038452 -14.88983822]
[100.74611664 -29.68910980]
[103.19184113 -44.48838043]
[97.80818176 -59.36543274]
[107.51710510 -70.66083527]
[102.13343811 -85.53788757]
[111.84236145 -96.83329010]
[114.28808594 -111.63256073]
[116.07055664 -126.52627563]
[117.18620300 -141.48472595]
[118.30184937 -156.44319153]
[119.41750336 -171.40164185]
[120.53314972 -186.36009216]
[113.84368896 -200.69750977]
[122.50617218 -212.81405640]
[123.62181854 -227.77252197]
[124.73746490 -242.73097229]
[122.25499725 -251.52159119]
[125.98271179 -257.90328979]
[123.55199432 -264.05172729]
[124.45558167 -269.66247559]
[127.58969879 -273.26611328]
[129.37216187 -288.15985107]
[131.15463257 -303.05355835]
[132.93710327 -317.94726562]
[134.05274963 -332.90573120]
[134.49935913 -347.89907837]
[134.94595337 -362.89242554]
[120.85327148 -368.47561646]
[109.52210999 -378.54440308]
[102.32074738 -391.88293457]
[100.11880493 -406.88049316]
[103.18216705 -421.72610474]
[111.14091492 -434.62704468]
[123.03399658 -444.02545166]
[137.42526245 -448.78646851]
[152.57690430 -448.33514404]
[166.65927124 -442.72598267]
[177.97186279 -432.63635254]
[185.14863586 -419.28457642]
[187.32293701 -404.28295898]
[184.23222351 -389.44305420]
[176.24971008 -376.55679321]
[164.33932495 -367.18029785]
[149.93931580 -362.44583130]
[149.49270630 -347.45248413]
[149.04609680 -332.45913696]
[160.67802429 -341.93002319]
[175.61340332 -340.53921509]
[185.29656982 -329.08337402]
[184.18057251 -314.12493896]
[172.90469360 -304.23278809]
[157.92826843 -305.07360840]
[147.83081055 -316.16479492]
[146.04835510 -301.27108765]
[144.26588440 -286.37738037]
[142.48341370 -271.48367310]
[140.92289734 -256.56506348]
[139.69592285 -241.61532593]
[138.58027649 -226.65686035]
[137.46463013 -211.69841003]
[144.23388672 -198.43092346]
[135.49160767 -185.24444580]
[134.37596130 -170.28599548]
[133.26029968 -155.32752991]
[132.14465332 -140.36907959]
[131.02900696 -125.41062927]
[143.07223511 -134.35270691]
[157.93061829 -132.29635620]
[167.09259033 -120.41957092]
[165.30976868 -105.52589417]
[153.60342407 -96.14710999]
[138.67948914 -97.65580750]
[129.08735657 -109.18683624]
[126.64163208 -94.38756561]
[132.20022583 -80.56905365]
[122.31637573 -68.21511078]
[127.87496948 -54.39659500]
[117.99111176 -42.04265213]
[115.54538727 -27.24338150]
[113.09965515 -12.44411087]
[111.65023804 2.48569775]
[119.71431732 11.50219536]
[119.46495056 23.99705696]
[110.49050903 33.26108932]
[109.82072449 48.24612808]
[116.98200989 61.30619431]
[108.63621521 74.74711609]
[107.96643066 89.73215485]
[107.74310303 104.73049164]
[107.96643066 119.72882843]
[108.18975830 134.72715759]
[116.13166046 148.41061401]
[108.58470917 161.25166321]
[108.80803680 176.25000000]
[109.03136444 191.24833679]
[109.25469208 206.24668884]
[117.19660187 219.93013000]
[109.64965057 232.77117920]
[110.09625244 247.76454163]
[110.76603699 262.74957275]
[111.43582153 277.73461914]
[112.10561371 292.71966553]
[112.77539825 307.70468140]
[113.44518280 322.68972778]
[114.11496735 337.67477417]
[115.23061371 352.63320923]
[116.79113770 367.55181885]
[118.35166168 382.47042847]
[120.02320099 397.37701416]
[121.80566406 412.27072144]
[123.58813477 427.16442871]
[131.44149780 414.38458252]
[144.91096497 407.78356934]
[159.82287598 409.40679932]
[171.55662537 418.75128174]
[176.47634888 432.92153931]
[173.05764771 447.52676392]
[162.35984802 458.04135132]
[147.69775391 461.20727539]
[133.61457825 456.04351807]
[124.47407532 444.14987183]
[124.25074768 459.14819336]
[124.02742004 474.14654541]
[123.80409241 489.14489746]
[123.58076477 504.14321899]
[132.92021179 520.01318359]
[123.33951569 534.71618652]
[123.33951569 549.71618652]
[123.33951569 564.71618652]
[132.91419983 580.44537354]
[123.55347443 595.28930664]
[123.77680206 610.28765869]
[124.00012970 625.28601074]
[124.22345734 640.28436279]
[124.44678497 655.28265381]
[127.70361328 663.81677246]
[124.56011200 670.50561523]
[124.56011200 685.50561523]
[124.56011200 700.50561523]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 210]
[2 209]
[3 208]
[4 206]
[5 205]
[6 204]
[7 203]
[8 202]
[11 200]
[12 199]
[13 198]
[16 196]
[17 195]
[18 194]
[19 193]
[20 192]
[21 182]
[22 181]
[23 180]
[25 179]
[26 178]
[27 177]
[32 176]
[33 175]
[34 174]
[35 173]
[36 172]
[37 171]
[38 170]
[41 169]
[43 167]
[44 166]
[45 165]
[46 164]
[48 162]
[49 161]
[50 160]
[55 159]
[56 158]
[58 156]
[59 155]
[61 152]
[71 151]
[72 150]
[73 149]
[75 147]
[77 145]
[78 144]
[79 137]
[80 136]
[81 135]
[82 134]
[83 133]
[85 131]
[86 130]
[87 129]
[89 128]
[92 127]
[93 126]
[94 125]
[95 124]
[96 117]
[97 116]
[98 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
