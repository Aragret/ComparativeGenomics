%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[140.60049438 610.22998047]
[146.37509155 596.21466064]
[156.59727478 585.02166748]
[170.03263855 578.00262451]
[168.02862549 563.13708496]
[158.66032410 551.55761719]
[164.48454285 536.84747314]
[162.48052979 521.98193359]
[160.47651672 507.11642456]
[158.47250366 492.25088501]
[156.46849060 477.38537598]
[145.00935364 464.09417725]
[152.14482117 447.11871338]
[149.91970825 432.28466797]
[147.69458008 417.45062256]
[145.09169006 415.07214355]
[143.51153564 411.31472778]
[143.58964539 406.67282104]
[145.71673584 401.90600586]
[144.15620422 386.98739624]
[142.59568787 372.06878662]
[141.03517151 357.15017700]
[138.81004333 342.31616211]
[135.92477417 327.59625244]
[133.03950500 312.87637329]
[130.15423584 298.15646362]
[120.29341888 291.14996338]
[117.76918793 278.91021729]
[124.46889496 267.88854980]
[121.80310059 253.12733459]
[119.13730621 238.36611938]
[116.47151184 223.60490417]
[113.69589996 208.86393738]
[110.81063080 194.14405823]
[107.92535400 179.42416382]
[105.04008484 164.70426941]
[102.15480804 149.98437500]
[86.61231995 148.20634460]
[72.37876129 141.71508789]
[60.84578323 131.14527893]
[53.14097595 117.53034973]
[50.01765442 102.20144653]
[51.78118896 86.65730286]
[58.25915909 72.41770172]
[68.81819916 60.87486267]
[82.42593384 53.15735245]
[79.32182312 38.48205185]
[76.21771240 23.80674934]
[72.78665161 9.20442677]
[69.03034973 -5.31763220]
[65.27404785 -19.83969116]
[61.51774979 -34.36175156]
[57.85768127 -38.08343887]
[56.16085434 -42.40479279]
[56.32692719 -46.47756195]
[57.93344498 -49.61626434]
[54.82933807 -64.29156494]
[51.81394196 -67.41588593]
[50.11997223 -70.97888947]
[49.72306442 -74.51129150]
[50.44896698 -77.59992981]
[52.00479889 -79.93177795]
[49.77968216 -94.76582336]
[47.55456543 -109.59986115]
[45.32944870 -124.43390656]
[32.66054535 -129.86434937]
[24.39484596 -140.75915527]
[22.60613823 -154.20794678]
[27.65562439 -166.68380737]
[38.12522507 -174.96809387]
[36.12121201 -189.83361816]
[34.11719894 -204.69915771]
[32.11318588 -219.56468201]
[29.33852005 -222.90461731]
[27.91424179 -226.58374023]
[27.78116417 -230.13587952]
[28.73477554 -233.16197205]
[30.45973587 -235.37165833]
[29.34408760 -250.33010864]
[28.22843933 -265.28854370]
[24.46942520 -273.61367798]
[27.20922661 -280.47772217]
[26.31641006 -295.45114136]
[25.42359543 -310.42456055]
[24.53077888 -325.39794922]
[23.63796234 -340.37136841]
[22.74514771 -355.34475708]
[21.85233116 -370.31817627]
[20.73668289 -385.27661133]
[19.39844894 -400.21679688]
[18.06021500 -415.15698242]
[16.72197914 -430.09716797]
[1.90377676 -433.02932739]
[-11.48746300 -440.01870728]
[-22.36617279 -450.49871826]
[-29.85046196 -463.61975098]
[-33.33361435 -478.31820679]
[-32.53326797 -493.40249634]
[-27.51429749 -507.64984131]
[-18.68357468 -519.90527344]
[-6.75696516 -529.17523193]
[7.29869604 -534.70831299]
[22.34397888 -536.05596924]
[37.15922928 -533.10894775]
[50.54344177 -526.10614014]
[61.41161728 -515.61517334]
[68.88272095 -502.48663330]
[72.35110474 -487.78469849]
[71.53560638 -472.70120239]
[66.50232697 -458.45892334]
[57.65929413 -446.21237183]
[45.72337723 -436.95437622]
[31.66216469 -431.43542480]
[33.00040054 -416.49523926]
[34.33863449 -401.55505371]
[35.67686844 -386.61486816]
[38.70230103 -382.91949463]
[39.43844223 -377.28430176]
[36.82573700 -371.21099854]
[37.71855164 -356.23757935]
[38.61137009 -341.26416016]
[39.50418472 -326.29077148]
[40.39699936 -311.31735229]
[41.28981781 -296.34396362]
[42.18263245 -281.37054443]
[43.18689346 -266.40420532]
[44.30253983 -251.44575500]
[45.41819000 -236.48730469]
[46.97871399 -221.56869507]
[48.98272705 -206.70317078]
[50.98674011 -191.83764648]
[52.99075317 -176.97210693]
[67.68347931 -169.65081787]
[75.19238281 -154.86642456]
[72.38156128 -138.35580444]
[60.16349030 -126.65902710]
[62.38861084 -111.82498169]
[64.61372375 -96.99093628]
[66.83884430 -82.15689087]
[69.50463867 -67.39567566]
[72.60874939 -52.72037506]
[76.03981018 -38.11804962]
[79.79611206 -23.59599113]
[83.55241394 -9.07393265]
[87.30871582 5.44812632]
[90.14492798 7.54293156]
[92.10742188 11.11556053]
[92.51264954 15.74039459]
[90.89301300 20.70263863]
[93.99712372 35.37794113]
[97.10123444 50.05324554]
[111.28803253 51.25924301]
[124.56063843 56.41265869]
[135.84411621 65.09613037]
[144.22465515 76.60639954]
[149.02352905 90.01126862]
[149.85208130 104.22510529]
[146.64320374 118.09676361]
[139.65678406 130.50279236]
[129.45864868 140.43846130]
[116.87470245 147.09910583]
[119.75997162 161.81900024]
[122.64524841 176.53889465]
[125.53051758 191.25877380]
[128.41578674 205.97866821]
[133.13745117 213.79811096]
[131.23272705 220.93911743]
[133.89852905 235.70033264]
[136.56431580 250.46154785]
[139.23011780 265.22274780]
[151.44776917 278.99993896]
[144.87411499 295.27120972]
[147.75939941 309.99108887]
[150.64466858 324.71099854]
[153.52993774 339.43087769]
[162.77532959 327.61889648]
[177.64781189 325.66723633]
[189.62777710 334.69390869]
[191.85253906 349.52798462]
[183.04765320 361.67187500]
[168.25697327 364.16900635]
[155.95376587 355.58966064]
[157.51429749 370.50827026]
[159.07481384 385.42687988]
[160.63533020 400.34548950]
[162.52862549 415.22552490]
[164.75375366 430.05957031]
[166.97886658 444.89361572]
[176.86837769 453.17370605]
[178.41630554 465.57482910]
[171.33401489 475.38134766]
[173.33802795 490.24688721]
[175.34204102 505.11239624]
[177.34605408 519.97790527]
[179.35006714 534.84344482]
[188.86172485 547.48620605]
[182.89416504 561.13311768]
[184.89817810 575.99859619]
[199.71260071 579.20928955]
[212.53382874 587.29583740]
[221.81364441 599.28167725]
[226.43145752 613.71954346]
[225.82965088 628.86596680]
[220.08087158 642.89190674]
[209.87934875 654.10369873]
[196.45693970 661.14746094]
[181.43446350 663.17266846]
[166.62597656 659.93469238]
[153.81967163 651.82452393]
[144.56196594 639.82159424]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 198]
[5 197]
[7 195]
[8 194]
[9 193]
[10 192]
[11 191]
[13 188]
[14 187]
[15 186]
[19 185]
[20 184]
[21 183]
[22 182]
[23 175]
[24 174]
[25 173]
[26 172]
[29 170]
[30 169]
[31 168]
[32 167]
[33 165]
[34 164]
[35 163]
[36 162]
[37 161]
[46 151]
[47 150]
[48 149]
[49 145]
[50 144]
[51 143]
[52 142]
[56 141]
[57 140]
[62 139]
[63 138]
[64 137]
[65 136]
[70 132]
[71 131]
[72 130]
[73 129]
[78 128]
[79 127]
[80 126]
[82 125]
[83 124]
[84 123]
[85 122]
[86 121]
[87 120]
[88 119]
[89 116]
[90 115]
[91 114]
[92 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
