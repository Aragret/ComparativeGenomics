%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCAUUUUCCUCCCGUUAAAGAUCUAGUUUAUUAUUCUUCCAUUAUCGAUGAUUCUUCUUAAAAUACCUCUUUCCCUGCGCCCGCCCCCUAUAUCCCAGxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[-58.09397125 337.81005859]
[-50.78462982 350.93365479]
[-45.25085068 364.89904785]
[-41.58731842 379.46728516]
[-39.85672760 394.38906860]
[-40.08868408 409.40908813]
[-42.27922440 424.27035522]
[-46.39086151 438.71850586]
[-52.35324097 452.50637817]
[-60.06434250 465.39797974]
[-69.39221191 477.17279053]
[-80.17724609 487.62927246]
[-92.23488617 496.58853149]
[-105.35882568 503.89724731]
[-119.32448578 509.43035889]
[-133.89289856 513.09320068]
[-148.81477356 514.82305908]
[-163.83479309 514.59039307]
[-178.69593811 512.39916992]
[-193.14390564 508.28683472]
[-206.93147278 502.32379150]
[-219.82272339 494.61209106]
[-231.59707642 485.28366089]
[-242.05305481 474.49813843]
[-251.01173401 462.44006348]
[-258.31982422 449.31576538]
[-263.85226440 435.34985352]
[-267.51443481 420.78125000]
[-269.24359131 405.85931396]
[-269.01019287 390.83929443]
[-266.81826782 375.97827148]
[-262.70523071 361.53048706]
[-256.74154663 347.74319458]
[-249.02922058 334.85229492]
[-239.70022583 323.07839966]
[-228.91419983 312.62292480]
[-216.85569763 303.66482544]
[-203.73107910 296.35736084]
[-189.76489258 290.82559204]
[-175.19612122 287.16412354]
[-160.27407837 285.43566895]
[-145.25408936 285.66976929]
[-130.39315796 287.86242676]
[-115.94557953 291.97613525]
[-102.15856934 297.94049072]
[-89.26805115 305.65341187]
[-79.95317078 293.89617920]
[-70.63828278 282.13891602]
[-61.32340240 270.38165283]
[-63.97176743 253.77369690]
[-53.58453751 240.12010193]
[-36.20066833 238.16552734]
[-27.06186485 226.27088928]
[-17.92306328 214.37625122]
[-8.78426075 202.48162842]
[-23.75902939 203.35127258]
[-35.05393982 193.48085022]
[-36.19874954 178.52461243]
[-26.53766632 167.05014038]
[-11.60499191 165.63055420]
[0.04515762 175.07904053]
[1.73930514 189.98217773]
[11.90285206 178.95030212]
[22.06639862 167.91842651]
[32.22994614 156.88655090]
[42.39349365 145.85467529]
[42.61523438 142.33569336]
[44.55244064 138.74929810]
[48.21823883 135.90057373]
[53.26569366 134.57005310]
[63.91170502 124.00300598]
[74.55771637 113.43595123]
[74.93636322 109.93038940]
[77.03178406 106.43406677]
[80.82112122 103.75187683]
[85.92295837 102.64806366]
[90.37322235 89.39337158]
[103.99590302 86.24470520]
[115.10314178 76.16356659]
[126.13501740 66.00002289]
[137.09092712 55.75462723]
[148.04682922 45.50923538]
[159.00274658 35.26384354]
[168.57786560 23.71754265]
[176.61903381 11.05501842]
[184.66021729 -1.60750687]
[192.51196289 -14.38834953]
[200.17256165 -27.28467560]
[207.83316040 -40.18100357]
[215.49375916 -53.07733154]
[223.15435791 -65.97365570]
[229.53295898 -79.54986572]
[226.87895203 -95.14687347]
[238.44073486 -104.53700256]
[243.47764587 -118.66603088]
[248.51455688 -132.79505920]
[253.55148315 -146.92408752]
[258.58837891 -161.05311584]
[245.42002869 -168.30503845]
[233.58557129 -177.57551575]
[223.39155579 -188.62442017]
[215.10203552 -201.16555786]
[208.93171692 -214.87406921]
[205.04045105 -229.39488220]
[203.52899170 -244.35188293]
[204.43653870 -259.35763550]
[207.73954773 -274.02343750]
[213.35247803 -287.96945190]
[221.12992859 -300.83444214]
[230.87045288 -312.28512573]
[242.32176208 -322.02493286]
[255.18721008 -329.80157471]
[269.13357544 -335.41360474]
[283.79962158 -338.71569824]
[298.80541992 -339.62228394]
[313.76232910 -338.10989380]
[328.28289795 -334.21771240]
[341.99102783 -328.04653931]
[354.53161621 -319.75622559]
[365.57989502 -309.56152344]
[374.84960938 -297.72647095]
[382.10070801 -284.55764771]
[387.14535522 -270.39617920]
[389.85287476 -255.60882568]
[390.15313721 -240.57864380]
[388.03836060 -225.69497681]
[383.56332397 -211.34330750]
[376.84396362 -197.89540100]
[368.05429077 -185.69958496]
[357.42199707 -175.07174683]
[345.22250366 -166.28720093]
[331.77178955 -159.57347107]
[317.41824341 -155.10446167]
[302.53366089 -152.99592590]
[287.50363159 -153.30249023]
[272.71740723 -156.01620483]
[267.68051147 -141.88717651]
[262.64358521 -127.75814056]
[257.60665894 -113.62911224]
[252.56976318 -99.50008392]
[255.58404541 -84.91367340]
[243.66198730 -74.51294708]
[255.35000610 -83.91456604]
[269.83047485 -87.82814026]
[284.66317749 -85.59416962]
[297.34857178 -77.58910370]
[305.74890137 -65.16194916]
[308.44860840 -50.40689850]
[304.99273682 -35.81043243]
[295.96362305 -23.83231163]
[282.88287354 -16.49106407]
[267.95480347 -15.02381611]
[253.69506836 -19.67782593]
[242.50666809 -29.66881180]
[236.27505493 -43.31311417]
[236.05067444 -58.31306076]
[228.39009094 -45.41673279]
[220.72949219 -32.52040482]
[213.06889343 -19.62407875]
[205.40829468 -6.72775221]
[205.69802856 -1.96066725]
[202.99618530 3.03903985]
[197.32273865 6.43366623]
[189.28155518 19.09619141]
[181.24038696 31.75871658]
[194.32832336 24.43028259]
[209.07473755 21.68379402]
[223.92341614 23.80909538]
[237.30732727 30.58189774]
[247.81404114 41.28745270]
[254.33476257 54.79597473]
[256.18136597 69.68187714]
[253.15892029 84.37422180]
[245.58642578 97.32247925]
[234.26303101 107.16019440]
[220.38371277 112.84917450]
[205.41319275 113.78904724]
[190.93133545 109.88061523]
[178.46644592 101.53635406]
[169.33398438 89.63685608]
[164.49772644 75.43788910]
[164.46803284 60.43791962]
[169.24813843 46.21975327]
[158.29222107 56.46514511]
[147.33631897 66.71054077]
[136.38040161 76.95593262]
[133.64202881 83.82055664]
[125.18428040 87.27079773]
[114.07704163 97.35193634]
[109.62677765 110.60662842]
[96.00409698 113.75529480]
[85.12476349 124.08196259]
[74.47875214 134.64901733]
[63.83274460 145.21606445]
[53.42536926 156.01821899]
[43.26182175 167.05009460]
[33.09827423 178.08197021]
[22.93472862 189.11384583]
[12.77118206 200.14572144]
[3.11037183 211.62042236]
[-6.02843046 223.51506042]
[-15.16723251 235.40968323]
[-24.30603600 247.30432129]
[-21.03056145 260.36898804]
[-25.80790138 272.75396729]
[-36.68492889 280.01843262]
[-49.56615067 279.69656372]
[-58.88103485 291.45379639]
[-68.19591522 303.21105957]
[-77.51079559 314.96829224]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 210]
[47 209]
[48 208]
[49 207]
[52 203]
[53 202]
[54 201]
[55 200]
[62 199]
[63 198]
[64 197]
[65 196]
[66 195]
[70 194]
[71 193]
[72 192]
[76 191]
[78 189]
[79 188]
[80 186]
[81 185]
[82 184]
[83 183]
[84 165]
[85 164]
[86 163]
[87 160]
[88 159]
[89 158]
[90 157]
[91 156]
[92 142]
[94 140]
[95 139]
[96 138]
[97 137]
[98 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
