%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxAAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUA\
) } def
/len { sequence length } bind def

/coor [
[96.50699615 510.12707520]
[93.08751678 495.46789551]
[92.68925476 480.42041016]
[95.32852173 465.60086060]
[100.89723969 451.61608887]
[109.16736603 439.03872681]
[119.80025482 428.38385010]
[132.36048889 420.08773804]
[146.33374023 414.49011230]
[143.66793823 399.72891235]
[141.00213623 384.96768188]
[138.33634949 370.20648193]
[135.67054749 355.44525146]
[133.00476074 340.68405151]
[130.33895874 325.92282104]
[127.34418488 311.22482300]
[124.02192688 296.59735107]
[113.65790558 285.89987183]
[118.14652252 270.72875977]
[115.84915924 269.12243652]
[114.04965973 266.50930786]
[113.13468933 263.07446289]
[113.41682434 259.13937378]
[115.08943939 255.13232422]
[112.64371490 240.33305359]
[110.19798279 225.53378296]
[106.00595093 219.44702148]
[107.82772827 210.49610901]
[105.60260773 195.66206360]
[103.37749481 180.82801819]
[92.04582977 174.69425964]
[86.22918701 162.97894287]
[88.25182343 149.85951233]
[97.59676361 140.15968323]
[95.59275055 125.29415894]
[93.58873749 110.42863464]
[88.41900635 124.50960541]
[79.20054626 136.34260559]
[66.81200409 144.79980469]
[52.43417740 149.07508850]
[37.43746567 148.76097107]
[23.25126266 143.88740540]
[11.22770691 134.91889954]
[2.51280642 122.71027374]
[-2.06278968 108.42517853]
[-2.06296492 93.42517853]
[2.51229739 79.13997650]
[11.22691250 66.93115234]
[23.25025940 57.96236038]
[37.43634796 53.08846283]
[52.43305206 52.77400208]
[66.81098175 57.04895020]
[79.19972229 65.50584412]
[88.41845703 77.33863831]
[93.58873749 91.42060089]
[95.59275055 76.55507660]
[97.59676361 61.68954849]
[88.31951904 73.47651672]
[75.27555084 80.88292694]
[60.39986420 82.81008911]
[45.89917374 78.97211456]
[33.92457581 69.93833923]
[26.25242996 57.04888153]
[24.02085114 42.21580887]
[27.56088066 27.63951874]
[36.34737778 15.48232079]
[49.07691956 7.54766083]
[63.86114883 5.01259851]
[78.50691986 8.25319576]
[90.84161377 16.78872871]
[99.03545380 29.35300255]
[101.87294006 44.08026886]
[106.90985107 29.95124054]
[111.94676971 15.82221127]
[116.98368835 1.69318163]
[122.02059937 -12.43584824]
[127.05751801 -26.56487656]
[132.09443665 -40.69390869]
[136.38856506 -55.06612015]
[139.92823792 -69.64249420]
[143.46791077 -84.21887207]
[146.68118286 -98.87065887]
[149.56645203 -113.59054565]
[151.90193176 -128.40762329]
[153.68440247 -143.30133057]
[155.46687317 -158.19505310]
[156.35968018 -173.16845703]
[156.35968018 -188.16845703]
[156.35968018 -203.16845703]
[156.35968018 -218.16845703]
[141.59851074 -221.09997559]
[127.69298553 -226.85522461]
[115.17761993 -235.21296692]
[104.53346252 -245.85195923]
[96.16964722 -258.36325073]
[90.40765381 -272.26599121]
[87.46896362 -287.02572632]
[87.46652985 -302.07519531]
[90.40044403 -316.83590698]
[96.15792847 -330.74047852]
[104.51770020 -343.25448608]
[115.15840912 -353.89694214]
[127.67107391 -362.25872803]
[141.57472229 -368.01846313]
[156.33496094 -370.95477295]
[171.38441467 -370.95477295]
[186.14463806 -368.01846313]
[200.04829407 -362.25872803]
[212.56095886 -353.89694214]
[223.20167542 -343.25448608]
[231.56143188 -330.74047852]
[237.31892395 -316.83590698]
[240.25283813 -302.07519531]
[240.25041199 -287.02572632]
[237.31172180 -272.26599121]
[231.54972839 -258.36325073]
[223.18591309 -245.85195923]
[212.54174805 -235.21296692]
[200.02638245 -226.85522461]
[186.12086487 -221.09997559]
[171.35968018 -218.16845703]
[171.35968018 -203.16845703]
[171.35968018 -188.16845703]
[171.35968018 -173.16845703]
[181.23472595 -184.45932007]
[195.83436584 -187.90177917]
[209.71330261 -182.21186829]
[217.69503784 -169.51177979]
[216.80258179 -154.53836060]
[207.36878967 -142.87629700]
[192.91224670 -138.87525940]
[178.82487488 -144.02754211]
[170.36058044 -156.41258240]
[168.57812500 -141.51887512]
[166.79565430 -126.62515259]
[180.02104187 -133.70251465]
[193.85989380 -127.91577148]
[198.11070251 -113.53069305]
[189.63995361 -101.15142059]
[174.69195557 -99.90349579]
[164.28634644 -110.70527649]
[161.40106201 -95.98538208]
[163.05413818 -92.87094879]
[163.28083801 -88.80110168]
[161.64852905 -84.45497131]
[158.04428101 -80.67919922]
[154.50460815 -66.10282135]
[150.96493530 -51.52644730]
[163.72903442 -59.40539932]
[178.58905029 -57.36094666]
[188.75119019 -46.32777786]
[189.56947327 -31.35011292]
[180.66976929 -19.27553940]
[166.12091064 -15.62438774]
[152.57444763 -22.06591606]
[146.22346497 -35.65699005]
[141.18655396 -21.52796173]
[136.14962769 -7.39893150]
[131.11271667 6.73009777]
[126.07579803 20.85912704]
[121.03888702 34.98815536]
[116.00196838 49.11718750]
[112.46229553 63.69356155]
[110.45828247 78.55908966]
[108.45426941 93.42462158]
[108.45426941 108.42462158]
[110.45828247 123.29014587]
[112.46229553 138.15567017]
[126.56560516 148.50535583]
[128.77664185 165.51789856]
[118.21153259 178.60290527]
[120.43665314 193.43695068]
[122.66176605 208.27098083]
[124.99725342 223.08805847]
[127.44298553 237.88732910]
[129.88871765 252.68659973]
[132.77398682 267.40649414]
[143.37564087 279.15023804]
[138.64938354 293.27508545]
[141.97164917 307.90255737]
[145.51928711 311.73156738]
[147.08670044 316.10153198]
[146.79943848 320.16754150]
[145.10017395 323.25701904]
[147.76597595 338.01824951]
[150.43176270 352.77944946]
[153.09756470 367.54067993]
[155.76336670 382.30191040]
[158.42915344 397.06311035]
[161.09495544 411.82434082]
[176.14346313 412.18075562]
[190.81211853 415.55947876]
[204.50021362 421.82214355]
[216.64724731 430.71224976]
[226.75581360 441.86581421]
[234.41195679 454.82608032]
[239.30218506 469.06231689]
[241.22621155 483.99157715]
[240.10528564 499.00253296]
[235.98527527 513.48046875]
[229.03492737 526.83251953]
[219.53881836 538.51196289]
[207.88583374 548.04046631]
[194.55314636 555.02789307]
[180.08673096 559.18811035]
[165.07896423 560.35076904]
[150.14440918 558.46826172]
[135.89462280 553.61761475]
[122.91313171 545.99755859]
[111.73152161 535.91998291]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 190]
[10 189]
[11 188]
[12 187]
[13 186]
[14 185]
[15 184]
[16 180]
[17 179]
[19 177]
[24 176]
[25 175]
[26 174]
[28 173]
[29 172]
[30 171]
[34 168]
[35 167]
[36 166]
[55 165]
[56 164]
[57 163]
[72 162]
[73 161]
[74 160]
[75 159]
[76 158]
[77 157]
[78 156]
[79 148]
[80 147]
[81 146]
[82 142]
[83 141]
[84 135]
[85 134]
[86 133]
[87 124]
[88 123]
[89 122]
[90 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
