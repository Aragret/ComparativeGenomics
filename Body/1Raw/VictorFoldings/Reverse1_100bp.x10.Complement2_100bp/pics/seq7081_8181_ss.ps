%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxGACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUG\
) } def
/len { sequence length } bind def

/coor [
[7.78255606 231.27894592]
[14.48233128 244.71879578]
[19.57649803 258.84558105]
[22.99616623 273.46823120]
[24.69508553 288.38903809]
[24.65028000 303.40618896]
[22.86235809 318.31655884]
[19.35549927 332.91857910]
[14.17712784 347.01470947]
[7.39727688 360.41433716]
[-0.89236474 372.93624878]
[-10.57968903 384.41110229]
[-21.53368568 394.68371582]
[-33.60621262 403.61514282]
[-46.63400650 411.08462524]
[-60.44087982 416.99114990]
[-74.84011078 421.25479126]
[-89.63696289 423.81793213]
[-104.63132477 424.64587402]
[-119.62042236 423.72747803]
[-134.40155029 421.07510376]
[-148.77478027 416.72463989]
[-162.54576111 410.73492432]
[-175.52825928 403.18698120]
[-187.54667664 394.18286133]
[-198.43849182 383.84436035]
[-208.05639648 372.31124878]
[-216.27033997 359.73956299]
[-222.96920776 346.29925537]
[-228.06243896 332.17214966]
[-231.48112488 317.54925537]
[-233.17904663 302.62832642]
[-233.13323975 287.61120605]
[-231.34432983 272.70092773]
[-227.83650208 258.09915161]
[-222.65718079 244.00335693]
[-215.87643433 230.60418701]
[-207.58596802 218.08282471]
[-197.89787292 206.60861206]
[-186.94319153 196.33673096]
[-174.87007141 187.40609741]
[-161.84176636 179.93750000]
[-148.03450012 174.03190613]
[-133.63499451 169.76922607]
[-118.83796692 167.20707703]
[-103.84354401 166.38011169]
[-88.85451508 167.29953003]
[-74.07357025 169.95288086]
[-59.70061874 174.30430603]
[-45.93003845 180.29492188]
[-32.94805145 187.84373474]
[-20.93023491 196.84866333]
[-10.60356617 185.96932983]
[-0.27689785 175.08999634]
[10.04977036 164.21066284]
[-4.80069304 166.32341003]
[-18.47996521 160.16894531]
[-26.74937439 147.65428162]
[-27.04655457 132.65721130]
[-19.27942085 119.82477570]
[-5.85470438 113.13321686]
[9.06780052 114.65599060]
[20.86419296 123.92125702]
[25.87923431 138.05805969]
[22.55883026 152.68620300]
[34.24641418 143.28404236]
[45.93399429 133.88189697]
[57.62157440 124.47974396]
[62.68849182 110.47347260]
[78.29101562 107.85207367]
[89.97859955 98.44992065]
[93.78604126 91.34528351]
[101.91090393 88.99635315]
[113.73717499 79.76925659]
[125.56344604 70.54216003]
[111.22351074 66.14144135]
[105.58150482 52.24295807]
[112.79651642 39.09215164]
[127.54988861 36.38330841]
[138.96600342 46.11328506]
[138.63005066 61.10802841]
[151.10984802 52.78608704]
[163.58964539 44.46414185]
[176.06942749 36.14219666]
[188.54922485 27.82025337]
[201.02902222 19.49831009]
[208.21795654 5.40469885]
[223.09948730 4.78098345]
[235.57928467 -3.54096031]
[248.05908203 -11.86290455]
[260.53887939 -20.18484879]
[253.04811096 -33.18680191]
[246.42376709 -46.65083694]
[240.69419861 -60.51930237]
[235.88394165 -74.73280334]
[232.01358032 -89.23048401]
[229.09971619 -103.95024872]
[227.15481567 -118.82907867]
[226.18721008 -133.80325317]
[226.20101929 -148.80865479]
[227.19621277 -163.78103638]
[229.16851807 -178.65625000]
[232.10949707 -193.37063599]
[236.00654602 -207.86116028]
[240.84297180 -222.06578064]
[246.59808350 -235.92366028]
[253.24722290 -249.37547302]
[260.76190186 -262.36361694]
[269.10998535 -274.83245850]
[278.25567627 -286.72860718]
[288.15985107 -298.00109863]
[298.78009033 -308.60171509]
[310.07089233 -318.48504639]
[321.98391724 -327.60876465]
[334.46817017 -335.93377686]
[347.47015381 -343.42446899]
[360.93423462 -350.04873657]
[374.80273438 -355.77819824]
[389.01626587 -360.58837891]
[403.51394653 -364.45864868]
[418.23373413 -367.37243652]
[433.11257935 -369.31726074]
[448.08676147 -370.28475952]
[463.09216309 -370.27087402]
[478.06454468 -369.27557373]
[492.93975830 -367.30319214]
[507.65411377 -364.36212158]
[522.14459229 -360.46499634]
[536.34918213 -355.62847900]
[550.20703125 -349.87329102]
[563.65881348 -343.22406006]
[576.64691162 -335.70928955]
[589.11572266 -327.36114502]
[601.01177979 -318.21539307]
[612.28424072 -308.31115723]
[622.88482666 -297.69085693]
[632.76806641 -286.39999390]
[641.89172363 -274.48690796]
[650.21667480 -262.00262451]
[657.70727539 -249.00057983]
[664.33142090 -235.53646851]
[670.06085205 -221.66793823]
[674.87091064 -207.45437622]
[678.74108887 -192.95664978]
[681.65478516 -178.23684692]
[683.59954834 -163.35800171]
[684.56695557 -148.38380432]
[684.55297852 -133.37840271]
[683.55761719 -118.40605164]
[681.58514404 -103.53085327]
[678.64398193 -88.81650543]
[674.74676514 -74.32602692]
[669.91015625 -60.12146759]
[664.15490723 -46.26365280]
[657.50561523 -32.81191635]
[649.99072266 -19.82387352]
[641.64251709 -7.35513258]
[632.49670410 4.54090929]
[622.59240723 15.81331158]
[611.97204590 26.41380310]
[600.68109131 36.29699326]
[588.76800537 45.42055511]
[576.28363037 53.74542618]
[563.28155518 61.23595428]
[549.81738281 67.86006165]
[535.94885254 73.58939362]
[521.73522949 78.39939880]
[507.23748779 82.26949310]
[492.51766968 85.18309784]
[477.63882446 87.12773895]
[462.66461182 88.09508514]
[447.65921021 88.08100128]
[432.68685913 87.08554077]
[417.81167603 85.11296844]
[403.09735107 82.17173767]
[388.60690308 78.27443695]
[374.40237427 73.43775177]
[360.54458618 67.68239594]
[347.09289551 61.03302383]
[334.10488892 53.51810074]
[321.63619995 45.16980743]
[309.74020386 36.02389145]
[298.46786499 26.11952400]
[287.86743164 15.49911308]
[277.98431396 4.20813656]
[268.86080933 -7.70505428]
[256.38101196 0.61688948]
[243.90122986 8.93883324]
[231.42143250 17.26077652]
[225.12515259 30.75914764]
[209.35096741 31.97810364]
[196.87117004 40.30004883]
[184.39137268 48.62199020]
[171.91159058 56.94393539]
[159.43179321 65.26587677]
[146.95199585 73.58782196]
[134.79054260 82.36842346]
[122.96427155 91.59552765]
[111.13800049 100.82262421]
[99.38075256 110.13750458]
[87.69316864 119.53965759]
[81.79027557 134.21842957]
[67.02372742 136.16732788]
[55.33614349 145.56947327]
[43.64856339 154.97163391]
[31.96098328 164.37377930]
[20.92910576 174.53732300]
[10.60243607 185.41665649]
[0.27576792 196.29598999]
[-10.05090046 207.17532349]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 210]
[53 209]
[54 208]
[55 207]
[65 206]
[66 205]
[67 204]
[68 203]
[70 201]
[71 200]
[73 199]
[74 198]
[75 197]
[81 196]
[82 195]
[83 194]
[84 193]
[85 192]
[86 191]
[88 189]
[89 188]
[90 187]
[91 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
