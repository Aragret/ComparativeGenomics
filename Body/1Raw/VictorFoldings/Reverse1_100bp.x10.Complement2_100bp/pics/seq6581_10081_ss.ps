%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[88.10169983 509.12426758]
[76.69891357 499.30273438]
[67.43154907 487.44512939]
[60.65583038 474.00729370]
[56.63219070 459.50567627]
[55.51529312 444.49774170]
[57.34806442 429.56027222]
[62.06006241 415.26751709]
[69.47016144 402.16879272]
[79.29354858 390.76757812]
[91.15263367 381.50213623]
[104.59157562 374.72860718]
[119.09383392 370.70730591]
[117.97818756 355.74887085]
[116.86254120 340.79040527]
[106.21482849 326.84072876]
[114.34804535 310.32006836]
[113.00981140 295.37988281]
[111.67157745 280.43969727]
[110.33334351 265.49951172]
[101.49142456 253.51329041]
[107.96667480 239.07786560]
[106.62844086 224.13768005]
[105.29020691 209.19749451]
[103.72969055 194.27888489]
[101.94721985 179.38517761]
[92.75234985 167.66751099]
[98.79493713 153.04568481]
[97.01247406 138.15197754]
[95.23000336 123.25825500]
[93.44754028 108.36453247]
[90.67192841 93.62357330]
[86.91562653 79.10151672]
[83.15932465 64.57945251]
[79.40302277 50.05739594]
[75.64672852 35.53533554]
[71.89042664 21.01327705]
[59.57512283 15.55911350]
[52.74932098 4.17408371]
[53.71278381 -8.87021923]
[61.89031601 -18.82800484]
[58.35064316 -33.40438080]
[53.28453064 -41.00519180]
[54.86849594 -48.22411346]
[51.54623795 -62.85157394]
[48.22397614 -77.47903442]
[44.90171814 -92.10649872]
[41.57945633 -106.73395538]
[38.25719833 -121.36141205]
[34.93494034 -135.98887634]
[29.79298019 -150.08001709]
[22.91356659 -163.40943909]
[16.03415489 -176.73887634]
[-0.72561586 -181.75180054]
[-8.52097988 -197.03405762]
[-2.96321058 -212.90698242]
[-10.04031563 -226.13250732]
[-17.11742210 -239.35803223]
[-24.19452667 -252.58357239]
[-31.27163315 -265.80908203]
[-38.34873581 -279.03460693]
[-52.28655243 -273.44888306]
[-66.75426483 -269.43035889]
[-81.57624054 -267.02780151]
[-96.57255554 -266.27041626]
[-111.56117249 -267.16735840]
[-126.36014557 -269.70776367]
[-140.78982544 -273.86077881]
[-154.67504883 -279.57601929]
[-167.84725952 -286.78405762]
[-180.14656067 -295.39746094]
[-191.42364502 -305.31161499]
[-201.54162598 -316.40618896]
[-210.37768555 -328.54650879]
[-217.82455444 -341.58517456]
[-223.79183960 -355.36395264]
[-228.20709229 -369.71557617]
[-231.01672363 -384.46578979]
[-232.18663025 -399.43557739]
[-231.70260620 -414.44320679]
[-229.57052612 -429.30651855]
[-225.81626892 -443.84503174]
[-220.48542786 -457.88232422]
[-213.64268494 -471.24795532]
[-205.37112427 -483.77969360]
[-195.77114868 -495.32540894]
[-184.95928955 -505.74493408]
[-173.06678772 -514.91180420]
[-160.23803711 -522.71478271]
[-146.62873840 -529.05908203]
[-132.40409851 -533.86773682]
[-117.73680115 -537.08233643]
[-102.80489349 -538.66381836]
[-87.78962708 -538.59307861]
[-72.87327576 -536.87097168]
[-58.23691940 -533.51831055]
[-44.05821991 -528.57592773]
[-30.50929642 -522.10363770]
[-17.75461960 -514.18017578]
[-5.94902229 -504.90167236]
[4.76418829 -494.38070679]
[14.25496292 -482.74505615]
[22.40809250 -470.13595581]
[29.12460518 -456.70645142]
[34.32297134 -442.61956787]
[37.94008255 -428.04632568]
[39.93203354 -413.16360474]
[40.27464676 -398.15206909]
[38.96375656 -383.19396973]
[36.01527786 -368.47088623]
[31.46500778 -354.16149902]
[25.36817741 -340.43954468]
[17.79879570 -327.47161865]
[8.84875202 -315.41506958]
[-1.37331021 -304.41632080]
[-12.74330521 -294.60885620]
[-25.12321091 -286.11172485]
[-18.04610443 -272.88619995]
[-10.96899891 -259.66067505]
[-3.89189386 -246.43515015]
[3.18521166 -233.20960999]
[10.26231670 -219.98408508]
[22.99568939 -218.01159668]
[32.40853119 -208.92971802]
[34.90876770 -195.89288330]
[29.36358261 -183.61828613]
[36.24299622 -170.28886414]
[43.12240982 -156.95942688]
[43.39420319 -171.95697021]
[48.45901871 -186.07601929]
[57.78235245 -197.82656860]
[70.38029480 -205.96855164]
[84.92334747 -209.64273071]
[99.87675476 -208.46134949]
[113.66243744 -202.54910278]
[124.82557678 -192.52989197]
[132.18807983 -179.46109009]
[134.97299194 -164.72189331]
[132.88638306 -149.86772156]
[126.14847565 -136.46621704]
[115.47032928 -125.93163300]
[101.97884369 -119.37574005]
[87.09780121 -117.49037933]
[72.39763641 -120.47452545]
[59.42968750 -128.01324463]
[49.56240082 -139.31114197]
[52.88465881 -124.68367767]
[56.20691681 -110.05621338]
[59.52917862 -95.42875671]
[62.85143661 -80.80129242]
[66.17369843 -66.17383575]
[69.49595642 -51.54637527]
[72.92701721 -36.94405365]
[76.46669006 -22.36767578]
[91.18983459 -14.23946476]
[95.56496429 2.34887743]
[86.41248322 17.25697517]
[90.16878510 31.77903557]
[93.92508698 46.30109406]
[97.68138885 60.82315445]
[101.43768311 75.34521484]
[105.19398499 89.86727142]
[111.26954651 76.15277100]
[123.73636627 67.81140137]
[138.73146057 67.42782593]
[151.60844421 75.12090302]
[158.37722778 88.50684357]
[156.94044495 103.43787384]
[147.74330139 115.28744507]
[133.63562012 120.38385010]
[118.98882294 117.14790344]
[108.34125519 106.58206940]
[110.12372589 121.47578430]
[111.90618896 136.36950684]
[113.68865204 151.26321411]
[123.01102448 164.04618835]
[116.84093475 177.60270691]
[118.62340546 192.49642944]
[122.27386475 198.00874329]
[122.55092621 203.68502808]
[120.23039246 207.85925293]
[121.56862640 222.79943848]
[122.90686035 237.73962402]
[131.84449768 250.79447937]
[125.27352905 264.16128540]
[126.61176300 279.10147095]
[127.94999695 294.04165649]
[129.28822327 308.98184204]
[138.66737366 317.83590698]
[139.47441101 330.30715942]
[131.82099915 339.67474365]
[132.93664551 354.63320923]
[134.05229187 369.59167480]
[148.99061584 371.41717529]
[163.28567505 376.12222290]
[176.38800049 383.52597046]
[187.79396057 393.34381104]
[197.06517029 405.19839478]
[203.84523010 418.63406372]
[207.87356567 433.13436890]
[208.99533081 448.14196777]
[207.16738892 463.07998657]
[202.46002197 477.37429810]
[195.05415344 490.47540283]
[185.23446655 501.87979126]
[173.37838745 511.14907837]
[159.94163513 517.92694092]
[145.44067383 521.95294189]
[130.43289185 523.07226562]
[115.49515533 521.24194336]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 193]
[14 192]
[15 191]
[17 188]
[18 187]
[19 186]
[20 185]
[22 183]
[23 182]
[24 181]
[25 178]
[26 177]
[28 175]
[29 174]
[30 173]
[31 172]
[32 162]
[33 161]
[34 160]
[35 159]
[36 158]
[37 157]
[41 154]
[42 153]
[44 152]
[45 151]
[46 150]
[47 149]
[48 148]
[49 147]
[50 146]
[51 128]
[52 127]
[53 126]
[56 122]
[57 121]
[58 120]
[59 119]
[60 118]
[61 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
