%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[312.39193726 481.67373657]
[322.46163940 470.52108765]
[334.01611328 460.91510010]
[326.16433716 448.13424683]
[318.31259155 435.35342407]
[310.46084595 422.57257080]
[297.20611572 415.77832031]
[296.57504272 399.96969604]
[288.72326660 387.18884277]
[280.87152100 374.40802002]
[273.01977539 361.62716675]
[265.16799927 348.84631348]
[257.31625366 336.06549072]
[249.46449280 323.28463745]
[237.77584839 320.16986084]
[231.12982178 309.58618164]
[233.55114746 296.91732788]
[225.89056396 284.02099609]
[218.22996521 271.12466431]
[209.90802002 258.64489746]
[200.94732666 246.61550903]
[191.98661804 234.58612061]
[183.02592468 222.55674744]
[174.06523132 210.52737427]
[165.10453796 198.49800110]
[156.14384460 186.46861267]
[147.18315125 174.43923950]
[138.22244263 162.40986633]
[121.75587463 156.34201050]
[119.76531219 138.03573608]
[110.62651062 126.14111328]
[101.48770905 114.24647522]
[88.64146423 108.72691345]
[86.61766052 94.89232635]
[77.47885895 82.99768829]
[71.52517700 80.12276459]
[68.38805389 75.38404083]
[68.25133514 70.61011505]
[59.47073364 58.44865799]
[50.69013214 46.28720474]
[36.33875275 39.62773514]
[35.16166687 24.77971458]
[26.38106346 12.61825848]
[20.51561928 9.56734085]
[17.52097893 4.73731422]
[17.52646065 -0.03856417]
[9.11184120 -12.45605946]
[0.69722301 -24.87355423]
[0.64486140 -9.87364674]
[-6.29060125 3.42670512]
[-18.55976486 12.05616760]
[-33.42166901 14.08689690]
[-47.55612183 9.06522179]
[-57.80545425 -1.88700080]
[-61.87993622 -16.32301712]
[-58.86932373 -31.01778603]
[-49.44618988 -42.68845367]
[-35.71568680 -48.72777176]
[-20.74524689 -47.78652954]
[-7.87928724 -40.07499695]
[-14.15664768 -53.69831467]
[-20.43400764 -67.32163239]
[-26.71136856 -80.94494629]
[-32.98873138 -94.56826019]
[-39.26609039 -108.19158173]
[-53.55291367 -103.56307220]
[-68.28689575 -100.65684509]
[-83.26119232 -99.51368713]
[-98.26558685 -100.14965057]
[-113.08944702 -102.55580902]
[-127.52465820 -106.69837952]
[-141.36859131 -112.51921082]
[-154.42687988 -119.93658447]
[-166.51620483 -128.84637451]
[-177.46687317 -139.12350464]
[-187.12513733 -150.62368774]
[-195.35540771 -163.18550110]
[-202.04216003 -176.63256836]
[-207.09150696 -190.77613831]
[-210.43257141 -205.41764832]
[-212.01844788 -220.35154724]
[-211.82687378 -235.36819458]
[-209.86053467 -250.25677490]
[-206.14703369 -264.80828857]
[-200.73852539 -278.81842041]
[-193.71090698 -292.09054565]
[-185.16284180 -304.43829346]
[-175.21434021 -315.68835449]
[-164.00506592 -325.68276978]
[-151.69236755 -334.28125000]
[-138.44911194 -341.36309814]
[-124.46119690 -346.82885742]
[-109.92499542 -350.60180664]
[-95.04457855 -352.62902832]
[-80.02884674 -352.88201904]
[-65.08858490 -351.35720825]
[-50.43354034 -348.07604980]
[-36.26944351 -343.08459473]
[-22.79513741 -336.45288086]
[-10.19978142 -328.27404785]
[1.33980739 -318.66290283]
[11.66162968 -307.75436401]
[20.62078476 -295.70156860]
[28.09149742 -282.67370605]
[33.96889496 -268.85369873]
[38.17046356 -254.43554688]
[40.63722229 -239.62165833]
[41.33453751 -224.61997986]
[40.25262833 -209.64114380]
[37.40667343 -194.89540100]
[32.83663559 -180.58976746]
[26.60666084 -166.92507935]
[18.80421448 -154.09315491]
[9.53882980 -142.27413940]
[-1.05942249 -131.63395691]
[-12.84175873 -122.32199097]
[-25.64277458 -114.46894073]
[-19.36541367 -100.84562683]
[-13.08805275 -87.22230530]
[-6.81069231 -73.59899139]
[-0.53333175 -59.97567368]
[5.74402905 -46.35235977]
[13.11471844 -33.28817368]
[21.52933693 -20.87067795]
[29.94395638 -8.45318317]
[38.54251862 3.83765531]
[47.32312393 15.99911118]
[61.04645538 21.78870964]
[62.85158539 37.50659943]
[71.63218689 49.66805649]
[80.41279602 61.82951355]
[89.37348938 73.85888672]
[98.51229095 85.75352478]
[111.35853577 91.27308655]
[113.38233948 105.10767365]
[122.52114105 117.00231171]
[131.65994263 128.89694214]
[144.32398987 131.34330750]
[151.69084167 141.43850708]
[150.25183105 153.44917297]
[159.21252441 165.47854614]
[168.17321777 177.50791931]
[177.13391113 189.53729248]
[186.09460449 201.56668091]
[195.05529785 213.59605408]
[204.01600647 225.62542725]
[212.97669983 237.65481567]
[221.93739319 249.68418884]
[224.02038574 234.82951355]
[235.07987976 224.69602966]
[250.05961609 223.91661072]
[262.11105347 232.84759521]
[265.72445679 247.40588379]
[259.24780273 260.93557739]
[245.64216614 267.25112915]
[231.12628174 263.46408081]
[238.78688049 276.36041260]
[246.44747925 289.25674438]
[262.71237183 297.89010620]
[262.24533081 315.43289185]
[270.09710693 328.21374512]
[277.94885254 340.99456787]
[285.80059814 353.77542114]
[293.65237427 366.55624390]
[301.50411987 379.33709717]
[309.35586548 392.11795044]
[323.17218018 399.82638550]
[323.24166870 414.72082520]
[331.09344482 427.50164795]
[338.94519043 440.28250122]
[346.79693604 453.06335449]
[360.58828735 447.09844971]
[375.08816528 443.15707397]
[390.00137329 441.31945801]
[405.02429199 441.62298584]
[419.85110474 444.06152344]
[434.17996216 448.58535767]
[447.71908569 455.10244751]
[460.19290161 463.48010254]
[471.34741211 473.54772949]
[480.95556641 485.10040283]
[488.82171631 497.90292358]
[494.78576660 511.69464111]
[498.72622681 526.19476318]
[500.56292725 541.10809326]
[500.25845337 556.13098145]
[497.81903076 570.95764160]
[493.29431152 585.28619385]
[486.77636719 598.82495117]
[478.39794922 611.29821777]
[468.32962036 622.45214844]
[456.77636719 632.05957031]
[443.97335815 639.92492676]
[430.18127441 645.88812256]
[415.68090820 649.82769775]
[400.76748657 651.66345215]
[385.74456787 651.35809326]
[370.91806030 648.91772461]
[356.58978271 644.39208984]
[343.05145264 637.87335205]
[330.57870483 629.49414062]
[319.42541504 619.42510986]
[309.81869507 607.87127686]
[301.95413208 595.06774902]
[295.99179077 581.27532959]
[292.05313110 566.77471924]
[290.21826172 551.86114502]
[290.52459717 536.83831787]
[292.96585083 522.01190186]
[297.49237061 507.68392944]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 171]
[4 170]
[5 169]
[6 168]
[8 166]
[9 165]
[10 164]
[11 163]
[12 162]
[13 161]
[14 160]
[17 158]
[18 157]
[19 156]
[20 148]
[21 147]
[22 146]
[23 145]
[24 144]
[25 143]
[26 142]
[27 141]
[28 140]
[30 137]
[31 136]
[32 135]
[34 133]
[35 132]
[38 131]
[39 130]
[40 129]
[42 127]
[43 126]
[46 125]
[47 124]
[48 123]
[60 122]
[61 121]
[62 120]
[63 119]
[64 118]
[65 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
