%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[-27.38498688 417.36749268]
[-19.45762062 430.14501953]
[-13.80385113 444.07852173]
[-10.58634853 458.76715088]
[-9.89768505 473.78826904]
[-11.75767517 488.70968628]
[-16.11280441 503.10205078]
[-22.83776665 516.55133057]
[-31.73907089 528.67053223]
[-42.56060791 539.11096191]
[-54.99102402 547.57220459]
[-68.67266846 553.81085205]
[-83.21189117 557.64733887]
[-98.19037628 558.97137451]
[-113.17715454 557.74487305]
[-127.74102783 554.00299072]
[-141.46298218 547.85351562]
[-153.94818115 539.47332764]
[-164.83741760 529.10351562]
[-173.81738281 517.04248047]
[-180.62969971 503.63726807]
[-185.07838440 489.27349854]
[-187.03541565 474.36450195]
[-186.44448853 459.33923340]
[-183.32263184 444.63000488]
[-177.75962830 430.66000366]
[-169.91555786 417.83117676]
[-160.01612854 406.51263428]
[-148.34613037 397.03005981]
[-135.24134827 389.65628052]
[-121.07883453 384.60342407]
[-106.26606750 382.01690674]
[-91.22924805 381.97113037]
[-76.40101624 384.46743774]
[-62.20800018 389.43392944]
[-54.93476868 376.31524658]
[-47.66154099 363.19656372]
[-48.25720215 348.31387329]
[-34.79886246 339.99618530]
[-35.23040390 335.23983765]
[-32.67861938 330.16192627]
[-27.10875320 326.59988403]
[-19.44815636 313.70355225]
[-11.78755856 300.80722046]
[-12.51570797 283.27334595]
[3.61882806 274.39877319]
[11.08656883 261.38980103]
[10.71255589 246.49989319]
[24.29324150 238.38352966]
[31.76098251 225.37457275]
[39.22872543 212.36561584]
[46.10813522 199.03619385]
[52.38549805 185.41287231]
[58.66285706 171.78956604]
[64.94021606 158.16624451]
[71.21758270 144.54292297]
[77.49494171 130.91961670]
[83.77230072 117.29629517]
[90.04965973 103.67298126]
[95.60888672 89.74118042]
[100.43488312 75.53872681]
[105.26087952 61.33626938]
[110.08688354 47.13381195]
[105.09625244 35.24026489]
[109.40822601 23.51036072]
[120.19928741 18.04414177]
[125.23620605 3.91511250]
[130.27311707 -10.21391678]
[135.31004333 -24.34294701]
[140.34695435 -38.47197723]
[137.69293213 -54.06898880]
[149.25471497 -63.45911026]
[146.60070801 -79.05612183]
[158.16249084 -88.44625092]
[163.19940186 -102.57527924]
[168.23632812 -116.70430756]
[172.20841980 -131.16883850]
[175.09368896 -145.88871765]
[177.97895813 -160.60861206]
[180.86424255 -175.32850647]
[183.74951172 -190.04840088]
[182.32922363 -199.07173157]
[186.78886414 -204.96524048]
[189.89297485 -219.64053345]
[192.99708557 -234.31584167]
[196.10119629 -248.99114990]
[182.97126770 -241.73822021]
[168.52081299 -245.76123047]
[161.02772522 -258.75558472]
[164.78437805 -273.27755737]
[177.63879395 -281.00830078]
[192.22737122 -277.51925659]
[200.19296265 -264.81008911]
[204.59394836 -279.14993286]
[208.99494934 -293.48977661]
[213.39595032 -307.82962036]
[217.79695129 -322.16949463]
[222.19795227 -336.50933838]
[226.59893799 -350.84918213]
[213.27140808 -357.82711792]
[201.45314026 -367.13534546]
[191.54666138 -378.45684814]
[183.88938904 -391.40600586]
[178.74211121 -405.54177856]
[176.28016663 -420.38272095]
[176.58738708 -435.42333984]
[179.65332031 -450.15136719]
[185.37353516 -464.06515503]
[193.55320740 -476.69082642]
[203.91374207 -487.59835815]
[216.10226440 -496.41619873]
[229.70362854 -502.84408569]
[244.25457764 -506.66302490]
[259.25952148 -507.74298096]
[274.20739746 -506.04718018]
[288.58908081 -501.63333130]
[301.91473389 -494.65182495]
[313.73049927 -485.34039307]
[323.63391113 -474.01623535]
[331.28768921 -461.06500244]
[336.43115234 -446.92782593]
[338.88909912 -432.08624268]
[338.57781982 -417.04571533]
[335.50793457 -402.31851196]
[329.78396606 -388.40625000]
[321.60089111 -375.78277588]
[311.23742676 -364.87805176]
[299.04650879 -356.06347656]
[285.44342041 -349.63928223]
[270.89144897 -345.82424927]
[255.88619995 -344.74832153]
[240.93879700 -346.44818115]
[236.53779602 -332.10833740]
[232.13679504 -317.76849365]
[227.73579407 -303.42864990]
[223.33479309 -289.08877563]
[218.93380737 -274.74893188]
[214.53280640 -260.40908813]
[210.77650452 -245.88703918]
[207.67239380 -231.21173096]
[204.56828308 -216.53643799]
[201.46417236 -201.86112976]
[198.46940613 -187.16313171]
[195.58412170 -172.44323730]
[192.69885254 -157.72334290]
[189.81358337 -143.00344849]
[186.92831421 -128.28355408]
[197.94207764 -138.46672058]
[212.54972839 -141.87504578]
[226.93284607 -137.61759949]
[237.33172607 -126.80725861]
[241.02812195 -112.26983643]
[237.05580139 -97.80537415]
[226.45314026 -87.19484711]
[211.99160767 -83.21182251]
[197.45146179 -86.89744568]
[186.63342285 -97.28831482]
[182.36535645 -111.66738892]
[177.32843018 -97.53836060]
[172.29151917 -83.40933228]
[175.30580139 -68.82292175]
[163.38374329 -58.42219543]
[166.39804077 -43.83578873]
[154.47598267 -33.43505859]
[149.43907166 -19.30603027]
[144.40214539 -5.17700052]
[139.36523438 8.95202923]
[134.32832336 23.08105850]
[138.41554260 40.14744568]
[124.28933716 51.95981216]
[119.46334076 66.16226959]
[114.63734436 80.36472321]
[109.81134033 94.56717682]
[123.22746277 87.85839844]
[137.84582520 91.22045135]
[146.98312378 103.11624146]
[146.46189880 118.10718536]
[136.52044678 129.33961487]
[121.70386505 131.67822266]
[108.78610229 124.05382538]
[103.67298126 109.95034027]
[97.39561462 123.57365417]
[91.11825562 137.19697571]
[84.84089661 150.82028198]
[78.56353760 164.44360352]
[72.28617096 178.06692505]
[66.00881195 191.69023132]
[59.73145294 205.31355286]
[74.14169312 201.14883423]
[87.34222412 208.27246094]
[91.77117157 222.60369873]
[84.89144135 235.93296814]
[70.64405060 240.62464905]
[57.19055557 233.99113464]
[52.23767471 219.83335876]
[44.76993561 232.84231567]
[37.30219269 245.85127258]
[37.14206314 261.67166138]
[24.09552193 268.85754395]
[16.62778091 281.86651611]
[19.23746872 294.49789429]
[12.74975395 305.17935181]
[1.10876846 308.46780396]
[-6.55182886 321.36413574]
[-14.21242619 334.26046753]
[-21.68016815 347.26940918]
[-21.60473633 363.09045410]
[-34.54284668 370.46978760]
[-41.81607819 383.58847046]
[-49.08930588 396.70718384]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 210]
[36 209]
[37 208]
[39 206]
[42 205]
[43 204]
[44 203]
[46 200]
[47 199]
[49 197]
[50 196]
[51 195]
[52 188]
[53 187]
[54 186]
[55 185]
[56 184]
[57 183]
[58 182]
[59 181]
[60 173]
[61 172]
[62 171]
[63 170]
[66 168]
[67 167]
[68 166]
[69 165]
[70 164]
[72 162]
[74 160]
[75 159]
[76 158]
[77 147]
[78 146]
[79 145]
[80 144]
[81 143]
[83 142]
[84 141]
[85 140]
[86 139]
[93 138]
[94 137]
[95 136]
[96 135]
[97 134]
[98 133]
[99 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
