%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[160.73951721 189.66543579]
[169.94914246 177.80731201]
[159.14698792 167.39994812]
[148.34483337 156.99256897]
[133.50395203 157.52566528]
[122.40077972 147.12500000]
[121.94223785 131.55491638]
[111.14008331 121.14753723]
[100.33792877 110.74016571]
[87.85813141 102.41822052]
[74.09803009 96.44665527]
[60.33792877 90.47509766]
[46.57782745 84.50353241]
[32.81772232 78.53196716]
[41.41572571 90.82319641]
[44.35104370 105.53319550]
[41.12902069 120.18305969]
[32.29262543 132.30403137]
[19.33094597 139.85353088]
[4.42825079 141.55931091]
[-9.90409184 137.13394165]
[-21.25082970 127.32315063]
[-27.69984245 113.78025055]
[-28.16435242 98.78744507]
[-22.56608582 84.87128448]
[-11.84844685 74.37689972]
[2.18245316 69.07276154]
[17.16376495 69.85314941]
[4.80925512 61.34632111]
[-7.54525375 52.83949280]
[-19.89976311 44.33266449]
[-32.25427246 35.82584000]
[-44.60877991 27.31901169]
[-56.96329117 18.81218529]
[-66.42959595 30.45817375]
[-76.79126740 41.31524277]
[-87.98278046 51.31475067]
[-99.93338013 60.39347458]
[-112.56751251 68.49401093]
[-125.80530548 75.56515503]
[-139.56304932 81.56218719]
[-153.75378418 86.44720459]
[-168.28776550 90.18931580]
[-183.07312012 92.76485443]
[-198.01635742 94.15755463]
[-213.02301025 94.35859680]
[-227.99819946 93.36671448]
[-242.84724426 91.18817902]
[-257.47625732 87.83676147]
[-271.79275513 83.33365631]
[-285.70623779 77.70732880]
[-299.12869263 70.99334717]
[-311.97528076 63.23417282]
[-324.16482544 54.47885132]
[-335.62017822 44.78274536]
[-346.26898193 34.20714951]
[-356.04388428 22.81893158]
[-364.88308716 10.69009209]
[-372.73068237 -2.10268569]
[-379.53707886 -15.47852135]
[-385.25924683 -29.35284615]
[-389.86099243 -43.63794327]
[-393.31326294 -58.24349213]
[-395.59417725 -73.07715607]
[-396.68933105 -88.04514313]
[-396.59179688 -103.05282593]
[-395.30221558 -118.00531769]
[-392.82870483 -132.80809021]
[-389.18695068 -147.36753845]
[-384.39993286 -161.59162903]
[-378.49792480 -175.39041138]
[-371.51828003 -188.67666626]
[-363.50506592 -201.36637878]
[-354.50900269 -213.37931824]
[-344.58694458 -224.63954163]
[-333.80160522 -235.07585144]
[-322.22119141 -244.62226868]
[-309.91891479 -253.21842957]
[-296.97253418 -260.80999756]
[-283.46395874 -267.34896851]
[-269.47854614 -272.79400635]
[-255.10473633 -277.11068726]
[-240.43341064 -280.27169800]
[-225.55729675 -282.25704956]
[-210.57049561 -283.05422974]
[-195.56771851 -282.65820312]
[-180.64382935 -281.07141113]
[-165.89320374 -278.30392456]
[-151.40907288 -274.37326050]
[-137.28303528 -269.30422974]
[-123.60438538 -263.12890625]
[-110.45960999 -255.88633728]
[-97.93181610 -247.62228394]
[-86.10021210 -238.38902283]
[-75.03959656 -228.24490356]
[-64.81990051 -217.25410461]
[-55.50574493 -205.48606873]
[-47.15600586 -193.01522827]
[-39.82348251 -179.92041016]
[-33.55453110 -166.28440857]
[-28.38878441 -152.19345093]
[-24.35890579 -137.73661804]
[-21.49037170 -123.00530243]
[-19.80131912 -108.09265137]
[-19.30242729 -93.09294128]
[-19.99684906 -78.10102081]
[-21.88019371 -63.21165466]
[-24.94055557 -48.51899338]
[-29.15858650 -34.11592865]
[-34.50761795 -20.09351921]
[-40.95382690 -6.54042196]
[-48.45646286 6.45767593]
[-36.10195541 14.96450233]
[-23.74744415 23.47133064]
[-11.39293575 31.97815704]
[0.96157318 40.48498535]
[13.31608200 48.99180984]
[25.67059135 57.49863815]
[38.78928375 64.77186584]
[52.54938889 70.74343109]
[66.30949402 76.71499634]
[80.06959534 82.68655396]
[93.82969666 88.65811920]
[84.14793396 77.20109558]
[77.44523621 63.78193283]
[74.10068512 49.15955353]
[74.30342102 34.16092300]
[78.04198456 19.63428879]
[85.10494232 6.40119839]
[95.09284210 -4.78995037]
[107.44082642 -13.30624390]
[121.45056152 -18.66604424]
[136.32971191 -20.56623077]
[151.23681641 -18.89933586]
[165.32876587 -13.75963211]
[177.80863953 -5.43779469]
[187.97061157 5.59553623]
[195.23997498 18.71637344]
[199.20561218 33.18266678]
[199.64324951 48.17628098]
[196.52815247 62.84925461]
[190.03646851 76.37175751]
[180.53533936 87.97902679]
[168.56211853 97.01461029]
[154.79393005 102.96751404]
[140.00944519 105.50106812]
[125.04478455 104.47197723]
[110.74530029 99.93801117]
[121.54745483 110.34538269]
[132.34960938 120.75275421]
[147.92597961 120.63155365]
[158.73263550 131.33998108]
[158.75219727 146.19041443]
[169.55435181 156.59779358]
[180.35652161 167.00515747]
[191.86367798 157.36062622]
[204.33082581 148.99388123]
[217.61668396 141.99974060]
[231.57072449 136.45744324]
[246.03482056 132.42979431]
[260.84509277 129.96241760]
[275.83374023 129.08329773]
[290.83090210 129.80236816]
[305.66665649 132.11149597]
[320.17294312 135.98451233]
[334.18533325 141.37753296]
[347.54510498 148.22944641]
[360.10086060 156.46263123]
[371.71032715 165.98377991]
[382.24197388 176.68502808]
[391.57644653 188.44509888]
[399.60803223 201.13076782]
[406.24566650 214.59826660]
[411.41415405 228.69503784]
[415.05496216 243.26132202]
[417.12680054 258.13208008]
[417.60623169 273.13882446]
[416.48779297 288.11151123]
[413.78417969 302.88046265]
[409.52597046 317.27838135]
[403.76150513 331.14212036]
[396.55603027 344.31454468]
[387.99121094 356.64645386]
[378.16409302 367.99810791]
[367.18600464 378.24084473]
[355.18136597 387.25866699]
[342.28619385 394.94934082]
[328.64660645 401.22576904]
[314.41711426 406.01681519]
[299.75900269 409.26818848]
[284.83831787 410.94302368]
[269.82412720 411.02239990]
[254.88656616 409.50540161]
[240.19487000 406.40917969]
[225.91554260 401.76885986]
[212.21034241 395.63699341]
[199.23457336 388.08309937]
[187.13526917 379.19271851]
[176.04951477 369.06658936]
[166.10293579 357.81948853]
[157.40820312 345.57882690]
[150.06385803 332.48330688]
[144.15312195 318.68130493]
[139.74295044 304.32919312]
[136.88331604 289.58966064]
[135.60664368 274.62963867]
[135.92736816 259.61865234]
[137.84187317 244.72682190]
[141.32847595 230.12286377]
[146.34764099 215.97224426]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 155]
[3 154]
[4 153]
[7 150]
[8 149]
[9 148]
[10 123]
[11 122]
[12 121]
[13 120]
[14 119]
[28 118]
[29 117]
[30 116]
[31 115]
[32 114]
[33 113]
[34 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
