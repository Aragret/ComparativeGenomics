%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxGUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUA\
) } def
/len { sequence length } bind def

/coor [
[184.17456055 440.78289795]
[187.15670776 426.06182861]
[191.96041870 411.83059692]
[198.50994873 398.31369019]
[206.70199585 385.72427368]
[216.40736389 374.26089478]
[227.47296143 364.10433960]
[239.72430420 355.41479492]
[232.64720154 342.18927002]
[225.57009888 328.96374512]
[218.49298096 315.73822021]
[211.41587830 302.51269531]
[204.14265442 289.39398193]
[196.67491150 276.38504028]
[189.20716858 263.37609863]
[181.73942566 250.36712646]
[174.27168274 237.35818481]
[166.80393982 224.34922791]
[159.33621216 211.34027100]
[151.67561340 198.44395447]
[143.82385254 185.66310120]
[135.97209167 172.88226318]
[128.12034607 160.10142517]
[120.26858521 147.32057190]
[107.01387787 140.52632141]
[106.38278961 124.71770477]
[98.53102875 111.93686676]
[90.48986053 99.27433777]
[82.26104736 86.73294067]
[68.22134399 79.43929291]
[67.70843506 64.55352020]
[59.47962570 52.01211929]
[53.92067337 65.94402313]
[39.60726166 70.43024445]
[27.09070015 62.16370773]
[25.59773445 47.23818970]
[36.22892380 36.65623093]
[51.14593887 38.21759796]
[43.87271118 25.09890556]
[36.59948349 11.98021126]
[29.13174057 -1.02874124]
[21.47114372 -13.92506790]
[13.81054592 -26.82139587]
[6.14994812 -39.71772003]
[-0.92327839 -45.49762344]
[-1.52705610 -52.86357498]
[-8.99479771 -65.87252808]
[-16.46253777 -78.88148499]
[-30.01781464 -72.44076538]
[-44.03143692 -67.06985474]
[-58.41912842 -62.80105209]
[-73.09435272 -59.66003036]
[-87.96885681 -57.66567993]
[-102.95318604 -56.82999802]
[-117.95720673 -57.15800476]
[-132.89070129 -58.64772797]
[-147.66383362 -61.29021454]
[-162.18777466 -65.06956482]
[-176.37516785 -69.96305847]
[-190.14068604 -75.94125366]
[-203.40153503 -82.96820831]
[-216.07797241 -91.00164795]
[-228.09376526 -99.99326324]
[-239.37663269 -109.88898468]
[-249.85871887 -120.62928772]
[-259.47698975 -132.14958191]
[-268.17358398 -144.38056946]
[-275.89624023 -157.24871826]
[-282.59848022 -170.67662048]
[-288.23999023 -184.58351135]
[-292.78683472 -198.88575745]
[-296.21170044 -213.49736023]
[-298.49395752 -228.33041382]
[-299.61990356 -243.29573059]
[-299.58276367 -258.30328369]
[-298.38275146 -273.26284790]
[-296.02709961 -288.08441162]
[-292.52993774 -302.67889404]
[-287.91235352 -316.95846558]
[-282.20208740 -330.83724976]
[-275.43347168 -344.23181152]
[-267.64721680 -357.06155396]
[-258.89016724 -369.24935913]
[-249.21499634 -380.72192383]
[-238.67987061 -391.41018677]
[-227.34815979 -401.24993896]
[-215.28800964 -410.18197632]
[-202.57196045 -418.15258789]
[-189.27648926 -425.11380005]
[-175.48155212 -431.02377319]
[-161.27011108 -435.84698486]
[-146.72764587 -439.55441284]
[-131.94160461 -442.12371826]
[-117.00093079 -443.53952026]
[-101.99546814 -443.79324341]
[-87.01546478 -442.88342285]
[-72.15100861 -440.81546021]
[-57.49151230 -437.60183716]
[-43.12512970 -433.26187134]
[-29.13826180 -427.82165527]
[-15.61503220 -421.31393433]
[-2.63677239 -413.77780151]
[9.71846485 -405.25863647]
[21.37637329 -395.80761719]
[32.26683807 -385.48162842]
[42.32436371 -374.34274292]
[51.48846436 -362.45797729]
[59.70402145 -349.89880371]
[66.92162323 -336.74075317]
[73.09786987 -323.06295776]
[78.19561005 -308.94766235]
[82.18418121 -294.47976685]
[85.03960419 -279.74630737]
[86.74470520 -264.83587646]
[87.28922272 -249.83816528]
[86.66988373 -234.84333801]
[84.89041138 -219.94160461]
[81.96151733 -205.22256470]
[77.90081024 -190.77476501]
[72.73271179 -176.68508911]
[66.48830414 -163.03826904]
[59.20513916 -149.91638184]
[50.92702484 -137.39834595]
[41.70374298 -125.55945587]
[31.59076691 -114.47090149]
[20.64891815 -104.19937897]
[8.94400215 -94.80665588]
[-3.45358610 -86.34922028]
[4.01415491 -73.34027100]
[11.48189640 -60.33131790]
[19.04627609 -47.37831879]
[26.70687294 -34.48199081]
[34.36746979 -21.58566475]
[42.02806854 -8.68933868]
[46.35295105 -6.66340303]
[49.45107269 -1.89909065]
[49.71817398 4.70698166]
[56.99140549 17.82567596]
[64.26463318 30.94437027]
[72.02102661 43.78330994]
[80.24983215 56.32471085]
[93.70095825 62.72131348]
[94.80245209 78.50412750]
[103.03125763 91.04553223]
[107.79233551 93.24691010]
[110.98110962 97.95913696]
[111.31187439 104.08510590]
[119.16362762 116.86595154]
[132.97994995 124.57437897]
[133.04942322 139.46882629]
[140.90118408 152.24966431]
[148.75294495 165.03050232]
[156.60469055 177.81135559]
[164.45645142 190.59219360]
[170.07873535 194.07090759]
[172.70584106 199.11029053]
[172.34515381 203.87252808]
[179.81289673 216.88148499]
[187.28063965 229.89044189]
[194.74838257 242.89939880]
[202.21612549 255.90834045]
[209.68386841 268.91729736]
[217.15161133 281.92623901]
[222.66781616 285.57083130]
[225.14372253 290.68618774]
[224.64140320 295.43557739]
[231.71852112 308.66110229]
[238.79562378 321.88662720]
[245.87272644 335.11215210]
[252.94982910 348.33767700]
[266.97640991 342.96566772]
[281.56567383 339.39404297]
[296.48754883 337.67916870]
[311.50668335 337.84805298]
[326.38623047 339.89807129]
[340.89147949 343.79687500]
[354.79370117 349.48297119]
[367.87362671 356.86666870]
[379.92492676 365.83154297]
[390.75759888 376.23620605]
[400.20074463 387.91653442]
[408.10546875 400.68832397]
[414.34704590 414.35015869]
[418.82711792 428.68655396]
[421.47497559 443.47143555]
[422.24887085 458.47155762]
[421.13656616 473.45040894]
[418.15567017 488.17175293]
[413.35314941 502.40338135]
[406.80474854 515.92083740]
[398.61376953 528.51092529]
[388.90939331 539.97515869]
[377.84463501 550.13262939]
[365.59402466 558.82318115]
[352.35076904 565.90979004]
[338.32376099 571.28063965]
[323.73419189 574.85101318]
[308.81216431 576.56463623]
[293.79302979 576.39447021]
[278.91366577 574.34320068]
[264.40872192 570.44317627]
[250.50700378 564.75592041]
[237.42770386 557.37109375]
[225.37715149 548.40521240]
[214.54536438 537.99969482]
[205.10319519 526.31854248]
[197.19956970 513.54608154]
[190.95910645 499.88372803]
[186.48025513 485.54693604]
[183.83364868 470.76187134]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 170]
[9 169]
[10 168]
[11 167]
[12 166]
[13 163]
[14 162]
[15 161]
[16 160]
[17 159]
[18 158]
[19 157]
[20 154]
[21 153]
[22 152]
[23 151]
[24 150]
[26 148]
[27 147]
[28 144]
[29 143]
[31 141]
[32 140]
[38 139]
[39 138]
[40 137]
[41 134]
[42 133]
[43 132]
[44 131]
[46 130]
[47 129]
[48 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
