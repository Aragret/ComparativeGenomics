%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[222.37376404 388.08990479]
[216.09640503 374.46658325]
[209.81903076 360.84326172]
[203.54167175 347.21997070]
[197.26431274 333.59664917]
[183.71653748 336.08261108]
[169.95819092 335.24386597]
[156.79380798 331.12469482]
[144.99430847 323.96133423]
[135.25187683 314.16842651]
[128.13938904 302.31506348]
[124.07666016 289.09170532]
[123.30571747 275.26986694]
[125.87638092 261.65722656]
[131.64305115 249.05038452]
[140.27296448 238.18826294]
[151.26541138 229.70870972]
[145.39645386 215.90454102]
[139.52748108 202.10035706]
[133.35171509 188.43069458]
[126.87222290 174.90234375]
[120.39273071 161.37399292]
[113.91323090 147.84565735]
[108.18879700 143.17097473]
[107.43965912 134.06730652]
[95.08623505 125.74612427]
[96.33816528 109.97452545]
[89.16280365 96.80204773]
[81.12162781 84.13952637]
[73.08045197 71.47699738]
[65.03928375 58.81447601]
[54.30434418 57.06239700]
[46.46718597 49.84026718]
[43.95169830 39.71008301]
[47.35417175 30.07493019]
[39.69357681 17.17860222]
[31.93718529 4.33966255]
[24.08543015 -8.44118023]
[16.23367310 -21.22202301]
[8.38191795 -34.00286484]
[0.53016281 -46.78370667]
[-7.32159281 -59.56454849]
[-11.91252518 -62.04858398]
[-14.80255890 -65.68190002]
[-15.83874321 -69.62415314]
[-15.22382259 -73.09607697]
[-22.49705315 -86.21476746]
[-29.77028275 -99.33346558]
[-37.14097214 -112.39765167]
[-50.72165680 -120.51402283]
[-50.34764481 -135.40393066]
[-57.81538391 -148.41288757]
[-65.28312683 -161.42182922]
[-78.90999603 -155.12850952]
[-93.03974915 -150.06416321]
[-107.56180573 -146.26843262]
[-122.36250305 -143.77102661]
[-137.32600403 -142.59149170]
[-152.33518982 -142.73905945]
[-167.27261353 -144.21258545]
[-182.02134705 -147.00051880]
[-196.46595764 -151.08105469]
[-210.49339294 -156.42225647]
[-223.99389648 -162.98229980]
[-236.86177063 -170.70986938]
[-248.99632263 -179.54447937]
[-260.30258179 -189.41696167]
[-270.69207764 -200.25007629]
[-280.08343506 -211.95904541]
[-288.40322876 -224.45219421]
[-295.58627319 -237.63177490]
[-301.57641602 -251.39462280]
[-306.32672119 -265.63302612]
[-309.80004883 -280.23553467]
[-311.96920776 -295.08789062]
[-312.81719971 -310.07385254]
[-312.33740234 -325.07608032]
[-310.53359985 -339.97723389]
[-307.41983032 -354.66061401]
[-303.02053833 -369.01135254]
[-297.37014771 -382.91714478]
[-290.51281738 -396.26910400]
[-282.50231934 -408.96276855]
[-273.40124512 -420.89877319]
[-263.28088379 -431.98370361]
[-252.22042847 -442.13082886]
[-240.30644226 -451.26071167]
[-227.63218689 -459.30187988]
[-214.29682922 -466.19143677]
[-200.40475464 -471.87542725]
[-186.06468201 -476.30938721]
[-171.38883972 -479.45861816]
[-156.49211121 -481.29846191]
[-141.49107361 -481.81448364]
[-126.50312042 -481.00271606]
[-111.64556885 -478.86947632]
[-97.03469849 -475.43142700]
[-82.78485870 -470.71554565]
[-69.00757599 -464.75869751]
[-55.81068039 -457.60748291]
[-43.29745483 -449.31793213]
[-31.56583977 -439.95486450]
[-20.70764732 -429.59161377]
[-10.80786037 -418.30923462]
[-1.94396031 -406.19607544]
[5.81467962 -393.34689331]
[12.40733719 -379.86230469]
[17.78241348 -365.84780884]
[21.89784241 -351.41308594]
[24.72141266 -336.67114258]
[26.23102760 -321.73733521]
[26.41486931 -306.72854614]
[25.27150154 -291.76223755]
[22.80987167 -276.95553589]
[19.04924774 -262.42434692]
[14.01905823 -248.28239441]
[7.75867558 -234.64036560]
[0.31709501 -221.60501099]
[-8.24744129 -209.27835083]
[-17.86790466 -197.75688171]
[-28.46899796 -187.13076782]
[-39.96775055 -177.48315430]
[-52.27417374 -168.88957214]
[-44.80643463 -155.88063049]
[-37.33869171 -142.87167358]
[-24.29214859 -135.68579102]
[-24.13201904 -119.86538696]
[-18.07575607 -115.62941742]
[-16.65158844 -106.60668945]
[-9.37835884 -93.48799896]
[-2.10512900 -80.36930084]
[5.45924997 -67.41630554]
[13.31100559 -54.63546371]
[21.16276169 -41.85462189]
[29.01451683 -29.07377815]
[36.86627197 -16.29293633]
[44.71802902 -3.51209283]
[50.89772797 0.54168367]
[52.58990479 9.51800537]
[60.25049973 22.41433334]
[77.76155090 30.61495781]
[77.70180511 50.77330399]
[85.74298096 63.43582916]
[93.78415680 76.09835052]
[101.82532501 88.76087952]
[103.38772583 73.84246826]
[112.68428802 62.07072449]
[126.83436584 57.09324646]
[141.45339966 60.45236206]
[152.01153564 71.10720825]
[155.23721313 85.75627136]
[150.13092041 99.86037445]
[138.27490234 109.04920959]
[123.34286499 110.47551727]
[109.96148682 103.69716644]
[122.76390839 112.99278259]
[121.06297302 127.78994751]
[127.44157410 141.36614990]
[133.92106628 154.89450073]
[140.40057373 168.42285156]
[146.88006592 181.95118713]
[151.18765259 184.89936829]
[153.68402100 188.81362915]
[154.30444336 192.84230042]
[153.33166504 196.23139954]
[159.20062256 210.03556824]
[165.06958008 223.83975220]
[181.24307251 221.79696655]
[197.32501221 224.37976074]
[212.02027893 231.37220764]
[224.14764404 242.20355225]
[232.73474121 255.99481201]
[237.09602356 271.63012695]
[236.88749695 287.84698486]
[232.13378906 303.33828735]
[223.22561646 316.85754395]
[210.88763428 327.31927490]
[217.16499329 340.94259644]
[223.44235229 354.56591797]
[229.71971130 368.18923950]
[235.99707031 381.81256104]
[250.63031006 378.29760742]
[265.66809082 377.70529175]
[280.53247070 380.05841064]
[294.65203857 385.26647949]
[307.48410034 393.12933350]
[318.53540039 403.34475708]
[327.38122559 415.52005005]
[333.68148804 429.18725586]
[337.19406128 443.82107544]
[337.78393555 458.85894775]
[335.42840576 473.72293091]
[330.21804810 487.84167480]
[322.35311890 500.67245483]
[312.13592529 511.72210693]
[299.95919800 520.56591797]
[286.29095459 526.86401367]
[271.65658569 530.37420654]
[256.61859131 530.96166992]
[241.75500488 528.60369873]
[227.63711548 523.39105225]
[214.80760193 515.52404785]
[203.75959778 505.30508423]
[194.91772461 493.12692261]
[188.62188721 479.45767212]
[185.11404419 464.82272339]
[184.52905273 449.78463745]
[186.88937378 434.92144775]
[192.10430908 420.80438232]
[199.97338867 407.97616577]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 181]
[2 180]
[3 179]
[4 178]
[5 177]
[17 167]
[18 166]
[19 165]
[20 161]
[21 160]
[22 159]
[23 158]
[25 157]
[27 155]
[28 145]
[29 144]
[30 143]
[31 142]
[35 140]
[36 139]
[37 137]
[38 136]
[39 135]
[40 134]
[41 133]
[42 132]
[46 131]
[47 130]
[48 129]
[49 127]
[51 125]
[52 124]
[53 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
