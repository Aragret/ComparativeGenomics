%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[180.55154419 249.81405640]
[191.45166016 239.47622681]
[182.67106628 227.31477356]
[173.89045715 215.15330505]
[165.10984802 202.99185181]
[156.32925415 190.83039856]
[147.54864502 178.66894531]
[138.76805115 166.50749207]
[129.98744202 154.34603882]
[116.11315918 159.94250488]
[101.30282593 162.05674744]
[86.41680145 160.56594849]
[72.31986237 155.55671692]
[59.83094025 147.32002258]
[49.67554855 136.33438110]
[42.44364548 123.23798370]
[38.55534744 108.79162598]
[38.23653793 93.83453369]
[41.50574112 79.23561096]
[48.17303467 65.84295654]
[57.85110092 54.43457031]
[49.07049942 42.27311325]
[48.98552704 57.27287292]
[41.49754333 70.27017975]
[28.56388092 77.86757660]
[13.56537151 78.07911682]
[0.42259082 70.84950256]
[-7.42897129 58.06854248]
[-7.93693542 43.07714462]
[-0.96852046 29.79402733]
[11.65474606 21.69136429]
[26.63317299 20.88717461]
[40.05076981 27.59108162]
[33.17135620 14.26165199]
[26.29194450 0.93222272]
[19.41253281 -12.39720631]
[12.53311920 -25.72663498]
[5.65370703 -39.05606461]
[-8.07092857 -32.99202728]
[-22.13666153 -27.76773071]
[-36.49216843 -23.40223694]
[-51.08506775 -19.91147232]
[-65.86211395 -17.30817604]
[-80.76937866 -15.60184860]
[-95.75247192 -14.79871559]
[-110.75672150 -14.90170670]
[-125.72737885 -15.91044712]
[-140.60981750 -17.82125473]
[-155.34973145 -20.62715912]
[-169.89334106 -24.31792068]
[-184.18756104 -28.88007164]
[-198.18025208 -34.29696655]
[-211.82035828 -40.54883575]
[-225.05809021 -47.61287308]
[-237.84515381 -55.46329880]
[-250.13488770 -64.07146454]
[-261.88244629 -73.40596771]
[-273.04498291 -83.43273926]
[-283.58172607 -94.11519623]
[-293.45428467 -105.41436005]
[-302.62655640 -117.28900146]
[-311.06515503 -129.69578552]
[-318.73925781 -142.58944702]
[-325.62084961 -155.92294312]
[-331.68481445 -169.64759827]
[-336.90902710 -183.71336365]
[-341.27447510 -198.06887817]
[-344.76516724 -212.66180420]
[-347.36837769 -227.43885803]
[-349.07464600 -242.34613037]
[-349.87771606 -257.32922363]
[-349.77465820 -272.33346558]
[-348.76583862 -287.30413818]
[-346.85498047 -302.18655396]
[-344.04898071 -316.92645264]
[-340.35815430 -331.47006226]
[-335.79595947 -345.76425171]
[-330.37899780 -359.75692749]
[-324.12704468 -373.39700317]
[-317.06295776 -386.63467407]
[-309.21246338 -399.42172241]
[-300.60424805 -411.71142578]
[-291.26968384 -423.45892334]
[-281.24285889 -434.62139893]
[-270.56036377 -445.15811157]
[-259.26113892 -455.03060913]
[-247.38647461 -464.20285034]
[-234.97964478 -472.64138794]
[-222.08595276 -480.31539917]
[-208.75242615 -487.19692993]
[-195.02774048 -493.26083374]
[-180.96195984 -498.48501587]
[-166.60639954 -502.85037231]
[-152.01347351 -506.34100342]
[-137.23640442 -508.94415283]
[-122.32912445 -510.65036011]
[-107.34602356 -511.45333862]
[-92.34177399 -511.35021973]
[-77.37112427 -510.34133911]
[-62.48870468 -508.43038940]
[-47.74881744 -505.62435913]
[-33.20524597 -501.93344116]
[-18.91106224 -497.37118530]
[-4.91842127 -491.95413208]
[8.72161865 -485.70214844]
[21.95928383 -478.63800049]
[34.74627304 -470.78744507]
[47.03593063 -462.17916870]
[58.78340530 -452.84454346]
[69.94583893 -442.81768799]
[80.48249817 -432.13513184]
[90.35493469 -420.83587646]
[99.52712250 -408.96115112]
[107.96559906 -396.55429077]
[115.63956451 -383.66055298]
[122.52103424 -370.32699585]
[128.58486938 -356.60226440]
[133.80897522 -342.53646851]
[138.17427063 -328.18090820]
[141.66484070 -313.58795166]
[144.26792908 -298.81088257]
[145.97404480 -283.90359497]
[146.77696228 -268.92047119]
[146.67376709 -253.91622925]
[145.66482544 -238.94558716]
[143.75379944 -224.06317139]
[140.94769287 -209.32330322]
[137.25672913 -194.77973938]
[132.69438171 -180.48558044]
[127.27729797 -166.49296570]
[121.02523041 -152.85295105]
[113.96101379 -139.61532593]
[106.11041260 -126.82836914]
[97.50207520 -114.53874969]
[88.16740417 -102.79132080]
[78.14048004 -91.62892914]
[67.45787811 -81.09232330]
[56.15857315 -71.21994019]
[44.28380966 -62.04780579]
[31.87690353 -53.60938644]
[18.98313713 -45.93547821]
[25.86254883 -32.60604858]
[32.74196243 -19.27661896]
[39.62137222 -5.94718981]
[46.50078583 7.38223934]
[53.38019943 20.71166801]
[61.23195267 33.49251175]
[70.01255798 45.65396881]
[83.88684082 40.05749512]
[98.69717407 37.94324493]
[113.58319855 39.43404770]
[127.68013763 44.44329071]
[140.16906738 52.67997742]
[150.32444763 63.66561508]
[157.55635071 76.76201630]
[161.44465637 91.20837402]
[161.76345825 106.16546631]
[158.49426270 120.76438904]
[151.82696533 134.15704346]
[142.14889526 145.56542969]
[150.92950439 157.72688293]
[159.71009827 169.88833618]
[168.49070740 182.04980469]
[177.27131653 194.21125793]
[186.05191040 206.37271118]
[194.83251953 218.53416443]
[203.61311340 230.69561768]
[216.85578918 223.60229492]
[230.92576599 218.33738708]
[245.57196045 214.99487305]
[260.53298950 213.63438416]
[275.54187012 214.28021240]
[290.33071899 216.92083740]
[304.63565063 221.50912476]
[318.20138550 227.96318054]
[330.78576660 236.16784668]
[342.16424561 245.97668457]
[352.13378906 257.21466064]
[360.51641846 269.68121338]
[367.16259766 283.15383911]
[371.95367432 297.39212036]
[374.80416870 312.14199829]
[375.66317749 327.14016724]
[374.51541138 342.11901855]
[371.38134766 356.81124878]
[366.31689453 370.95458984]
[359.41244507 384.29672241]
[350.79119873 396.59948730]
[340.60705566 407.64331055]
[329.04174805 417.23117065]
[316.30163574 425.19189453]
[302.61413574 431.38345337]
[288.22348022 435.69534302]
[273.38647461 438.05059814]
[258.36795044 438.40719604]
[243.43589783 436.75878906]
[228.85681152 433.13476562]
[214.89085388 427.59982300]
[201.78727722 420.25271606]
[189.77993774 411.22457886]
[179.08311462 400.67654419]
[169.88768005 388.79681396]
[162.35778809 375.79745483]
[156.62777710 361.91036987]
[152.79991150 347.38348389]
[150.94252014 332.47598267]
[151.08872986 317.45391846]
[153.23596191 302.58541870]
[157.34585571 288.13577271]
[163.34510803 274.36288452]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 167]
[3 166]
[4 165]
[5 164]
[6 163]
[7 162]
[8 161]
[9 160]
[21 148]
[22 147]
[33 146]
[34 145]
[35 144]
[36 143]
[37 142]
[38 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
