%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCAGUGAGUAUCCGGUCUGAAUCCCGAUCCUACUACUAAUUAUUCUCCCUACUGUAUUGAUAAUCACCGUCCAAUCAACAAACAUCCCGAGUACCAUxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[232.92744446 512.07409668]
[227.65571594 498.02392578]
[223.41154480 483.63000488]
[220.21710205 468.96737671]
[218.08898926 454.11242676]
[217.03834534 439.14266968]
[217.07063293 424.13610840]
[218.18566895 409.17098999]
[220.37765503 394.32537842]
[223.63516235 379.67660522]
[227.94120789 365.30108643]
[233.27333069 351.27374268]
[239.60375977 337.66772461]
[246.89944458 324.55395508]
[255.12239075 312.00085449]
[264.22970581 300.07379150]
[274.17391968 288.83499146]
[259.74359131 285.14520264]
[255.62681580 269.86898804]
[245.13931274 259.14459229]
[234.65180969 248.42021179]
[224.16430664 237.69583130]
[213.67681885 226.97145081]
[199.24647522 223.28164673]
[195.12969971 208.00543213]
[184.64219666 197.28105164]
[174.15470886 186.55667114]
[163.66720581 175.83229065]
[149.23686218 172.14248657]
[145.12010193 156.86627197]
[134.63259888 146.14189148]
[124.14509583 135.41751099]
[113.65759277 124.69313049]
[103.17008972 113.96875000]
[89.75897217 110.01482391]
[86.10552979 96.51875305]
[75.61802673 85.79437256]
[67.38063049 81.84683228]
[65.05570221 74.83138275]
[54.72903061 63.95204926]
[51.73454666 78.65011597]
[38.44627762 85.60869598]
[24.65983772 79.69818878]
[20.53808022 65.27559662]
[29.11941147 52.97272110]
[44.07645035 51.85818481]
[29.35413933 46.06473160]
[27.29537010 31.31309700]
[17.80647087 19.69583321]
[8.31757355 8.07857037]
[-1.17132509 -3.53869295]
[-10.66022301 -15.15595627]
[-20.14912224 -26.77322006]
[-29.63801956 -38.39048386]
[-42.22517776 -30.20447922]
[-55.62362671 -23.42739868]
[-69.67627716 -18.13869858]
[-84.21836090 -14.40038586]
[-99.07938385 -12.25629044]
[-114.08511353 -11.73155212]
[-129.05961609 -12.83232212]
[-143.82730103 -15.54569530]
[-158.21505737 -19.83985710]
[-172.05418396 -25.66446114]
[-185.18240356 -32.95121765]
[-197.44583130 -41.61469650]
[-208.70065308 -51.55331421]
[-218.81492615 -62.65055466]
[-227.67005920 -74.77629852]
[-235.16224670 -87.78839111]
[-241.20362854 -101.53426361]
[-245.72337341 -115.85274506]
[-248.66850281 -130.57597351]
[-250.00448608 -145.53132629]
[-249.71563721 -160.54344177]
[-247.80535889 -175.43634033]
[-244.29605103 -190.03536987]
[-239.22886658 -204.16940308]
[-232.66319275 -217.67269897]
[-224.67601013 -230.38696289]
[-215.36099243 -242.16310120]
[-204.82733154 -252.86306763]
[-193.19851685 -262.36138916]
[-180.61091614 -270.54672241]
[-167.21211243 -277.32308960]
[-153.15917969 -282.61102295]
[-138.61688232 -286.34854126]
[-123.75574493 -288.49185181]
[-108.74999237 -289.01577759]
[-93.77555084 -287.91418457]
[-79.00800323 -285.20004272]
[-64.62048340 -280.90509033]
[-50.78167725 -275.07974243]
[-37.65383911 -267.79229736]
[-25.39088821 -259.12814331]
[-14.13659859 -249.18891907]
[-4.02292156 -238.09114075]
[4.83156443 -225.96492004]
[12.32304573 -212.95242310]
[18.36368752 -199.20622253]
[22.88266754 -184.88749695]
[25.82700348 -170.16410828]
[27.16217232 -155.20869446]
[26.87252235 -140.19657898]
[24.96144676 -125.30380249]
[21.45135498 -110.70494843]
[16.38339996 -96.57118988]
[9.81700039 -83.06824493]
[1.82914412 -70.35441589]
[-7.48651552 -58.57877350]
[-18.02075768 -47.87938309]
[-8.53185844 -36.26211929]
[0.95703995 -24.64485550]
[10.44593811 -13.02759171]
[19.93483734 -1.41032791]
[29.42373466 10.20693493]
[38.91263199 21.82419968]
[52.95623779 26.78670692]
[55.69371414 42.36928558]
[65.60836792 53.62538147]
[75.93503571 64.50471497]
[86.34240723 75.30686951]
[96.82991028 86.03125000]
[110.24102783 89.98517609]
[113.89447021 103.48124695]
[124.38197327 114.20562744]
[134.86947632 124.93000793]
[145.35697937 135.65438843]
[155.84448242 146.37876892]
[171.02494812 150.83566284]
[174.39158630 165.34478760]
[184.87908936 176.06916809]
[195.36657715 186.79354858]
[205.85408020 197.51792908]
[221.03456116 201.97482300]
[224.40119934 216.48396301]
[234.88868713 227.20834351]
[245.37619019 237.93270874]
[255.86369324 248.65708923]
[266.35119629 259.38146973]
[281.53167725 263.83837891]
[284.89831543 278.34750366]
[296.35635376 268.65673828]
[308.48382568 259.81805420]
[321.21743774 251.87750244]
[334.49084473 244.87646484]
[348.23483276 238.85148621]
[362.37774658 233.83393860]
[376.84585571 229.84999084]
[391.56372070 226.92044067]
[406.45462036 225.06051636]
[421.44088745 224.27995300]
[436.44442749 224.58280945]
[451.38699341 225.96749878]
[466.19070435 228.42680359]
[480.77835083 231.94790649]
[495.07388306 236.51243591]
[509.00280762 242.09661865]
[522.49249268 248.67132568]
[535.47253418 256.20230103]
[547.87536621 264.65023804]
[559.63629150 273.97113037]
[570.69390869 284.11636353]
[580.99072266 295.03305054]
[590.47290039 306.66427612]
[599.09112549 318.94940186]
[606.80041504 331.82437134]
[613.56054688 345.22207642]
[619.33630371 359.07263184]
[624.09759521 373.30386353]
[627.81951904 387.84158325]
[630.48278809 402.60995483]
[632.07342529 417.53201294]
[632.58319092 432.52993774]
[632.00939941 447.52554321]
[630.35504150 462.44067383]
[627.62872314 477.19754028]
[623.84472656 491.71920776]
[619.02270508 505.92999268]
[613.18786621 519.75573730]
[606.37060547 533.12445068]
[598.60638428 545.96643066]
[589.93579102 558.21459961]
[580.40399170 569.80523682]
[570.06072998 580.67785645]
[558.95983887 590.77575684]
[547.15924072 600.04632568]
[534.72045898 608.44128418]
[521.70831299 615.91668701]
[508.19070435 622.43377686]
[494.23806763 627.95843506]
[479.92315674 632.46185303]
[465.32058716 635.92065430]
[450.50653076 638.31671143]
[435.55819702 639.63757324]
[420.55349731 639.87634277]
[405.57067871 639.03179932]
[390.68786621 637.10827637]
[375.98266602 634.11590576]
[361.53170776 630.07019043]
[347.41033936 624.99230957]
[333.69219971 618.90869141]
[320.44882202 611.85107422]
[307.74923706 603.85620117]
[295.65960693 594.96575928]
[284.24304199 585.22619629]
[273.55902100 574.68817139]
[263.66326904 563.40673828]
[254.60734558 551.44061279]
[246.43847656 538.85223389]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 142]
[19 140]
[20 139]
[21 138]
[22 137]
[23 136]
[25 134]
[26 133]
[27 132]
[28 131]
[30 129]
[31 128]
[32 127]
[33 126]
[34 125]
[36 123]
[37 122]
[39 121]
[40 120]
[46 119]
[48 117]
[49 116]
[50 115]
[51 114]
[52 113]
[53 112]
[54 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
