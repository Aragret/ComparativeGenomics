%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[67.14656067 566.06060791]
[57.58660126 577.65832520]
[46.36822128 587.66076660]
[33.75439072 595.83337402]
[20.04079819 601.98461914]
[5.54891062 605.97027588]
[-9.38156223 607.69696045]
[-24.40062714 607.12420654]
[-39.15621948 604.26531982]
[-53.30244064 599.18750000]
[-66.50769043 592.00958252]
[-78.46241760 582.89996338]
[-88.88637543 572.07220459]
[-97.53522491 559.77996826]
[-104.20622253 546.31158447]
[-108.74298096 531.98266602]
[-111.03916168 517.12908936]
[-111.04093933 502.09912109]
[-108.74826813 487.24502563]
[-104.21488953 472.91500854]
[-97.54707336 459.44503784]
[-88.90112305 447.15078735]
[-78.47972107 436.32052612]
[-66.52714539 427.20809937]
[-53.32359314 420.02709961]
[-39.17856979 414.94589233]
[-24.42365456 412.08355713]
[-9.40472507 411.50723267]
[5.52615499 413.23037720]
[1.43532729 398.90856934]
[12.55079269 387.64993286]
[16.52288818 373.18539429]
[20.49498558 358.72088623]
[16.40415764 344.39904785]
[27.51962280 333.14041138]
[31.49171829 318.67590332]
[30.23167610 311.39343262]
[35.63212585 304.02642822]
[39.81913757 289.62265015]
[44.00614929 275.21887207]
[48.19316101 260.81509399]
[51.94946289 246.29301453]
[55.27172089 231.66555786]
[53.89363098 229.22445679]
[53.39946365 226.09037781]
[54.05799866 222.59727478]
[56.01228333 219.17013550]
[59.25170135 216.27874756]
[63.43870926 201.87496948]
[59.56156540 187.49383545]
[70.84342194 176.40193176]
[75.03043365 161.99815369]
[69.93465424 145.20529175]
[83.33272552 132.57307434]
[87.30482483 118.10854340]
[91.27691650 103.64402008]
[89.78188324 98.61621094]
[91.21026611 93.10866547]
[95.58860779 88.81134033]
[99.98960114 74.47148895]
[104.39060211 60.13164139]
[108.79160309 45.79179382]
[113.19259644 31.45194817]
[108.65423584 13.60580730]
[121.95821381 2.16154933]
[126.14522552 -12.24223232]
[130.33222961 -26.64601517]
[126.75457764 -42.05740356]
[137.73695374 -52.11904907]
[141.81661987 -66.55360413]
[145.78871155 -81.01812744]
[149.76080322 -95.48265076]
[153.73291016 -109.94717407]
[155.07113647 -124.88735962]
[153.73291016 -139.82754517]
[152.39466858 -154.76773071]
[151.05644226 -169.70791626]
[148.05215454 -173.97656250]
[147.08262634 -178.51675415]
[147.91053772 -182.50794983]
[150.00732422 -185.34271240]
[149.33753967 -200.32774353]
[148.66775513 -215.31278992]
[147.99797058 -230.29782104]
[137.73048401 -245.58377075]
[146.41905212 -260.83093262]
[145.52624512 -275.80432129]
[136.41487122 -284.93371582]
[135.97950745 -297.42349243]
[143.90844727 -306.55905151]
[135.56265259 -319.99996948]
[142.72393799 -333.06002808]
[142.05413818 -348.04507446]
[141.38435364 -363.03012085]
[140.71456909 -378.01513672]
[126.18183899 -382.26699829]
[113.81853485 -391.00927734]
[104.96574402 -403.29370117]
[100.58375549 -417.78771973]
[101.14788818 -432.91915894]
[106.59695435 -447.04666138]
[116.33987427 -458.63778687]
[129.31980896 -466.43521118]
[144.12881470 -469.59313965]
[159.16049194 -467.76901245]
[172.78431702 -461.16067505]
[183.52250671 -450.48498535]
[190.21023560 -436.89996338]
[192.12207031 -421.87921143]
[189.05065918 -407.05203247]
[181.32913208 -394.02679443]
[169.79507446 -384.21636963]
[155.69961548 -378.68493652]
[156.36940002 -363.69989014]
[157.03918457 -348.71487427]
[157.70896912 -333.72982788]
[166.00685120 -321.36071777]
[158.89347839 -307.22882080]
[169.12113953 -292.96832275]
[160.49964905 -276.69714355]
[161.39245605 -261.72375488]
[170.22879028 -253.46264648]
[171.09515381 -240.99536133]
[162.98300171 -230.96760559]
[163.65278625 -215.98257446]
[164.32257080 -200.99752808]
[164.99235535 -186.01249695]
[165.99662781 -171.04614258]
[167.33485413 -156.10595703]
[168.67309570 -141.16577148]
[170.01132202 -126.22559357]
[175.44113159 -140.20834351]
[184.01908875 -152.51356506]
[195.26005554 -162.44537354]
[208.52830505 -169.44204712]
[223.07347107 -173.10789490]
[238.07292175 -173.23561096]
[252.67839050 -169.81794739]
[266.06384277 -163.04821777]
[277.47232056 -153.30926514]
[286.25854492 -141.15187073]
[291.92565918 -127.26361847]
[294.15313721 -112.42993164]
[292.81503296 -97.48973083]
[287.98699951 -83.28797150]
[279.94210815 -70.62781525]
[269.13531494 -60.22526169]
[256.17779541 -52.66862869]
[241.80236816 -48.38527679]
[226.82203674 -47.61745071]
[212.08399963 -50.40857697]
[198.42176819 -56.60080338]
[186.60803223 -65.84392548]
[177.31088257 -77.61520386]
[171.05612183 -91.24891663]
[168.19743347 -105.97507477]
[164.22532654 -91.51055145]
[160.25323486 -77.04602814]
[156.28114319 -62.58150482]
[157.54118347 -55.29905701]
[152.14073181 -47.93203735]
[156.01786804 -33.55090332]
[144.73602295 -22.45900345]
[140.54901123 -8.05522156]
[136.36199951 6.34856033]
[141.91122437 17.09717369]
[138.54083252 29.13146973]
[127.53244781 35.85294724]
[123.13144684 50.19279480]
[118.73044586 64.53263855]
[114.32945251 78.87248993]
[109.92845154 93.21233368]
[105.74143982 107.61611938]
[101.76934814 122.08064270]
[97.79724884 136.54516602]
[103.48694611 148.12057495]
[99.88079071 160.08633423]
[89.43421936 166.18516541]
[85.24720764 180.58894348]
[88.82486725 196.00033569]
[77.84249115 206.06198120]
[73.65547943 220.46575928]
[69.89917755 234.98782349]
[66.57691956 249.61528015]
[68.00806427 253.71476746]
[68.05548859 257.65966797]
[66.93768311 261.03396606]
[64.98583984 263.53536987]
[62.59694290 265.00210571]
[58.40993118 279.40588379]
[54.22291946 293.80966187]
[50.03590775 308.21343994]
[45.95624161 322.64797974]
[41.98414612 337.11251831]
[45.79086304 352.46893311]
[34.95950699 362.69296265]
[30.98741341 377.15750122]
[27.01531601 391.62200928]
[30.82203293 406.97842407]
[19.99067879 417.20248413]
[33.70760727 423.34628296]
[46.32586670 431.51205444]
[57.54967499 441.50839233]
[67.11592102 453.10095215]
[74.80036926 466.01797485]
[80.42287445 479.95669556]
[83.85163879 494.59036255]
[85.00629425 509.57592773]
[83.85977173 524.56213379]
[80.43894196 539.19763184]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 200]
[31 198]
[32 197]
[33 196]
[35 194]
[36 193]
[38 192]
[39 191]
[40 190]
[41 189]
[42 184]
[43 183]
[48 182]
[49 181]
[51 179]
[52 178]
[54 175]
[55 174]
[56 173]
[59 172]
[60 171]
[61 170]
[62 169]
[63 168]
[65 165]
[66 164]
[67 163]
[69 161]
[70 159]
[71 158]
[72 157]
[73 156]
[74 131]
[75 130]
[76 129]
[77 128]
[81 127]
[82 126]
[83 125]
[84 124]
[86 121]
[87 120]
[90 118]
[92 116]
[93 115]
[94 114]
[95 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
