%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCACAUACUUGUACUCCCACAAAAGAGCACACUUACUCCCAAAAUACAACAAUUACACCACCCACUCACUCGGGGUAACACAACACCAUUUAUACAUCUxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[-51.18153000 310.73785400]
[-44.15826035 324.01391602]
[-38.81973267 338.05239868]
[-35.24688339 352.64056396]
[-33.49387741 367.55722046]
[-33.58728409 382.57623291]
[-35.52569199 397.46994019]
[-39.27971649 412.01254272]
[-44.79244232 425.98355103]
[-51.98029709 439.17120361]
[-60.73432159 451.37557983]
[-70.92180634 462.41165161]
[-82.38830566 472.11212158]
[-94.95999146 480.32992554]
[-108.44628906 486.94046021]
[-122.64273834 491.84356689]
[-137.33413696 494.96490479]
[-152.29774475 496.25711060]
[-167.30674744 495.70062256]
[-182.13359070 493.30389404]
[-196.55349731 489.10321045]
[-210.34790039 483.16232300]
[-223.30763245 475.57122803]
[-235.23626709 466.44503784]
[-245.95295715 455.92208862]
[-255.29522705 444.16192627]
[-263.12145996 431.34283447]
[-269.31301880 417.65908813]
[-273.77606201 403.31820679]
[-276.44287109 388.53756714]
[-277.27304077 373.54119873]
[-276.25402832 358.55651855]
[-273.40124512 343.81063843]
[-268.75793457 329.52709961]
[-262.39450073 315.92245483]
[-254.40739441 303.20294189]
[-244.91770935 291.56140137]
[-234.06932068 281.17428589]
[-222.02667236 272.19906616]
[-208.97233582 264.77185059]
[-195.10420227 259.00518799]
[-180.63252258 254.98648071]
[-165.77665710 252.77670288]
[-150.76184082 252.40933228]
[-135.81568909 253.88993835]
[-121.16478729 257.19607544]
[-107.03122711 262.27761841]
[-93.62927246 269.05752563]
[-81.16209412 277.43304443]
[-71.33152008 266.10345459]
[-61.50093460 254.77384949]
[-51.67035294 243.44425964]
[-41.83977509 232.11466980]
[-32.00919342 220.78507996]
[-22.17861176 209.45547485]
[-37.09724808 207.89524841]
[-45.30728531 195.34155273]
[-40.75658798 181.04850769]
[-26.79976463 175.55241394]
[-13.72526264 182.90478516]
[-11.17067528 197.68414307]
[-0.52466631 187.11709595]
[10.12134266 176.55004883]
[20.76735115 165.98300171]
[31.41336060 155.41595459]
[42.05936813 144.84890747]
[52.70537567 134.28186035]
[63.35138702 123.71481323]
[73.99739838 113.14775848]
[59.23612595 110.48225403]
[51.98252869 97.35269928]
[57.58368683 83.43770599]
[71.91063690 78.99489594]
[84.40207672 87.29933929]
[85.85035706 102.22776031]
[90.69329071 89.11145020]
[104.40367889 86.36977386]
[115.80614471 76.62380981]
[116.85257721 59.16172791]
[129.94657898 48.07741165]
[146.66995239 49.85710144]
[157.92605591 39.94245148]
[159.51905823 27.14303207]
[169.09840393 19.11682510]
[181.17845154 19.74849701]
[192.58091736 10.00253201]
[203.98338318 0.25656646]
[215.38583374 -9.48939896]
[226.78829956 -19.23536491]
[238.19076538 -28.98133087]
[229.26010132 -41.04068375]
[221.19241333 -53.69363403]
[214.02700806 -66.87854004]
[207.79879761 -80.53116608]
[202.53813171 -94.58499146]
[198.27061462 -108.97154999]
[195.01705933 -123.62075043]
[192.79330444 -138.46122742]
[191.61019897 -153.42066956]
[191.47349548 -168.42619324]
[192.38386536 -183.40470886]
[194.33685303 -198.28323364]
[197.32298279 -212.98928833]
[201.32768250 -227.45120239]
[206.33143616 -241.59854126]
[212.30987549 -255.36236572]
[219.23387146 -268.67562866]
[227.06970215 -281.47348022]
[235.77915955 -293.69354248]
[245.31985474 -305.27627563]
[255.64527893 -316.16528320]
[266.70513916 -326.30749512]
[278.44552612 -335.65350342]
[290.80926514 -344.15777588]
[303.73611450 -351.77886963]
[317.16311646 -358.47964478]
[331.02481079 -364.22750854]
[345.25372314 -368.99438477]
[359.78048706 -372.75711060]
[374.53433228 -375.49734497]
[389.44335938 -377.20169067]
[404.43499756 -377.86190796]
[419.43615723 -377.47473145]
[434.37377930 -376.04205322]
[449.17504883 -373.57089233]
[463.76791382 -370.07324219]
[478.08120728 -365.56616211]
[492.04525757 -360.07162476]
[505.59201050 -353.61636353]
[518.65545654 -346.23187256]
[531.17199707 -337.95410156]
[543.08056641 -328.82336426]
[554.32324219 -318.88418579]
[564.84515381 -308.18493652]
[574.59515381 -296.77780151]
[583.52563477 -284.71832275]
[591.59313965 -272.06524658]
[598.75836182 -258.88024902]
[604.98638916 -245.22753906]
[610.24682617 -231.17364502]
[614.51416016 -216.78701782]
[617.76751709 -202.13777161]
[619.99102783 -187.29727173]
[621.17395020 -172.33781433]
[621.31042480 -157.33227539]
[620.39984131 -142.35377502]
[618.44659424 -127.47527313]
[615.46026611 -112.76926422]
[611.45538330 -98.30740356]
[606.45141602 -84.16014099]
[600.47277832 -70.39639282]
[593.54858398 -57.08323288]
[585.71258545 -44.28550720]
[577.00292969 -32.06557465]
[567.46209717 -20.48296356]
[557.13653564 -9.59410667]
[546.07653809 0.54794598]
[534.33599854 9.89378262]
[521.97210693 18.39787102]
[509.04516602 26.01878166]
[495.61807251 32.71938324]
[481.75628662 38.46702957]
[467.52731323 43.23372269]
[453.00051880 46.99623871]
[438.24661255 49.73624420]
[423.33755493 51.44039154]
[408.34591675 52.10037994]
[393.34475708 51.71298981]
[378.40716553 50.28011322]
[363.60592651 47.80872726]
[349.01312256 44.31087112]
[334.69985962 39.80359268]
[320.73590088 34.30884552]
[307.18923950 27.85340500]
[294.12588501 20.46871567]
[281.60949707 12.19075775]
[269.70101929 3.05986094]
[258.45852661 -6.87948895]
[247.93673706 -17.57886887]
[236.53427124 -7.83290243]
[225.13180542 1.91306329]
[213.72933960 11.65902901]
[202.32687378 21.40499496]
[190.92442322 31.15096092]
[185.97262573 47.98683548]
[167.84071350 51.19854736]
[156.58460999 61.11319733]
[157.57701111 73.96016693]
[150.88897705 85.20082092]
[138.76966858 90.61678314]
[125.55210876 88.02627563]
[114.14964294 97.77223969]
[109.30670929 110.88854980]
[95.59632111 113.63022614]
[84.56444550 123.79376984]
[73.91843414 134.36082458]
[63.27242661 144.92787170]
[52.62641525 155.49491882]
[41.98040771 166.06196594]
[31.33439827 176.62901306]
[20.68839073 187.19606018]
[10.04238129 197.76310730]
[-0.60362732 208.33015442]
[-10.84901905 219.28605652]
[-20.67959976 230.61566162]
[-30.51018143 241.94525146]
[-40.34076309 253.27484131]
[-50.17134094 264.60443115]
[-60.00192261 275.93402100]
[-69.83250427 287.26361084]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 210]
[50 209]
[51 208]
[52 207]
[53 206]
[54 205]
[55 204]
[61 203]
[62 202]
[63 201]
[64 200]
[65 199]
[66 198]
[67 197]
[68 196]
[69 195]
[75 194]
[77 192]
[78 191]
[81 187]
[82 186]
[85 184]
[86 183]
[87 182]
[88 181]
[89 180]
[90 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
