%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[91.11141205 591.45385742]
[78.03565979 598.89843750]
[63.78723145 603.73358154]
[48.88119507 605.78454590]
[33.85639191 604.97723389]
[19.25596046 601.34075928]
[5.60769844 595.00659180]
[-6.59501934 586.20373535]
[-16.91107178 575.25042725]
[-24.96754074 562.54254150]
[-30.47318840 548.53955078]
[-33.22898865 533.74755859]
[-33.13532639 518.70141602]
[-30.19557953 503.94488525]
[-24.51602364 490.01150513]
[-16.30196953 477.40493774]
[-5.85034943 466.58087158]
[6.46101618 457.93063354]
[20.18708038 451.76690674]
[34.83165359 448.31246948]
[49.86534119 447.69226074]
[52.09045792 432.85821533]
[54.31557846 418.02416992]
[52.19908142 410.94305420]
[56.68583679 402.98651123]
[59.13156509 388.18722534]
[61.57728958 373.38796997]
[64.02301788 358.58868408]
[58.46442032 344.77017212]
[68.34828186 332.41622925]
[70.79400635 317.61694336]
[65.23540497 303.79843140]
[75.11926270 291.44448853]
[77.56499481 276.64523315]
[79.45828247 261.76519775]
[72.88731384 248.39839172]
[81.82495117 235.34353638]
[83.16318512 220.40335083]
[84.50141907 205.46316528]
[85.72839355 190.51342773]
[86.84403992 175.55497742]
[80.07478333 162.28749084]
[88.81706238 149.10101318]
[89.93270874 134.14254761]
[91.04835510 119.18410492]
[79.99590302 106.92803955]
[81.10083008 90.46150208]
[93.69161987 79.79193115]
[94.58443451 64.81852722]
[95.47724915 49.84511948]
[96.37007141 34.87171555]
[97.26288605 19.89830971]
[98.15570068 4.92490339]
[89.53421021 -11.34627819]
[99.76186371 -25.60678101]
[100.43164825 -40.59181976]
[101.10143280 -55.57685852]
[89.71366882 -63.34278107]
[83.69795227 -75.62405396]
[84.52954102 -89.16576385]
[91.88448334 -100.43737030]
[103.75207520 -106.55312347]
[104.64488983 -121.52652740]
[105.53770447 -136.49993896]
[106.43051910 -151.47334290]
[107.32333374 -166.44674683]
[99.36138153 -176.59416199]
[100.41326904 -189.04716492]
[109.37161255 -197.17579651]
[110.48726654 -212.13424683]
[111.60291290 -227.09269714]
[97.84288788 -236.26077271]
[90.62528992 -251.03242493]
[91.83497620 -267.33438110]
[101.04735565 -280.72421265]
[115.67000580 -287.60104370]
[116.56282043 -302.57443237]
[117.23260498 -317.55947876]
[117.67921448 -332.55282593]
[118.12581635 -347.54617310]
[110.80282593 -361.57061768]
[118.91564178 -374.06185913]
[119.36224365 -389.05520630]
[119.80885315 -404.04855347]
[109.25060272 -415.50112915]
[109.91710663 -430.70016479]
[120.90044403 -440.69525146]
[121.34704590 -455.68859863]
[121.79365540 -470.68194580]
[122.24025726 -485.67529297]
[113.13813782 -501.68258667]
[122.93666840 -516.24127197]
[123.15999603 -531.23962402]
[123.38332367 -546.23791504]
[108.83063507 -550.19647217]
[95.72000122 -557.65051270]
[84.87557220 -568.13140869]
[76.97903442 -580.98034668]
[72.52676392 -595.38964844]
[71.79865265 -610.45349121]
[74.84044647 -625.22503662]
[81.46096039 -638.77569580]
[91.24400330 -650.25360107]
[103.57461548 -658.93731689]
[117.67768097 -664.28094482]
[132.66667175 -665.94860840]
[147.59936523 -663.83544922]
[161.53707886 -658.07427979]
[173.60366821 -649.02728271]
[183.04063416 -637.26318359]
[189.25476074 -623.52142334]
[191.85540771 -608.66583252]
[190.67910767 -593.63031006]
[185.79978943 -579.35998535]
[177.52420044 -566.75183105]
[166.37251282 -556.59844971]
[153.04576111 -549.53808594]
[138.38166809 -546.01458740]
[138.15834045 -531.01629639]
[137.93501282 -516.01794434]
[146.13243103 -507.12249756]
[146.06912231 -494.62530518]
[137.23361206 -485.22869873]
[136.78700256 -470.23535156]
[136.34039307 -455.24200439]
[135.89379883 -440.24865723]
[146.26274109 -429.61752319]
[146.02339172 -414.40576172]
[134.80220032 -403.60195923]
[134.35559082 -388.60861206]
[133.90898132 -373.61526489]
[141.26391602 -360.66326904]
[133.11917114 -347.09957886]
[132.67256165 -332.10623169]
[132.22595215 -317.11288452]
[134.79083252 -313.08416748]
[134.85211182 -307.40145874]
[131.53622437 -301.68164062]
[130.64341736 -286.70822144]
[142.51435852 -279.95562744]
[150.35543823 -268.69302368]
[152.58964539 -255.08576965]
[148.72470093 -241.78010559]
[139.46012878 -231.38858032]
[126.56136322 -225.97705078]
[125.44571686 -211.01860046]
[124.33007050 -196.06013489]
[132.79066467 -180.68531799]
[122.29673767 -165.55392456]
[121.40392303 -150.58052063]
[120.51110840 -135.60711670]
[119.61829376 -120.63371277]
[118.72547913 -105.66030121]
[131.73556519 -95.64955902]
[136.26045227 -79.69690704]
[130.32627869 -64.03527069]
[116.08647156 -54.90707397]
[115.41668701 -39.92203522]
[114.74690247 -24.93699455]
[122.67584229 -15.80143547]
[122.24047852 -3.31167078]
[113.12910461 5.81771898]
[112.23628998 20.79112434]
[111.34347534 35.76453018]
[110.45066071 50.73793793]
[109.55784607 65.71134186]
[108.66502380 80.68474579]
[118.14611816 89.09679413]
[121.12232971 101.41733551]
[116.52676392 113.22980499]
[106.00681305 120.29975128]
[104.89115906 135.25820923]
[103.77551270 150.21665955]
[110.46497345 164.55407715]
[101.80249023 176.67062378]
[100.68684387 191.62907410]
[103.16931152 200.41970825]
[99.44160461 206.80139160]
[98.10337067 221.74157715]
[96.76512909 236.68176270]
[103.24038696 251.11720276]
[94.39846802 263.10342407]
[107.40727234 255.63543701]
[121.41227722 261.00756836]
[126.08950806 275.25970459]
[117.99108887 287.88571167]
[103.08687592 289.57812500]
[92.36426544 279.09097290]
[89.91853333 293.89022827]
[95.30220032 308.76727295]
[85.59327698 320.06268311]
[83.14755249 334.86196899]
[88.53121185 349.73901367]
[78.82228851 361.03442383]
[76.37656403 375.83367920]
[73.93083191 390.63296509]
[71.48510742 405.43222046]
[69.14962006 420.24929810]
[66.92449951 435.08334351]
[64.69938660 449.91738892]
[78.88946533 454.92117310]
[91.87600708 462.52029419]
[103.18954468 472.43997192]
[112.42110443 484.32168579]
[119.23696899 497.73587036]
[123.39075470 512.19763184]
[124.73229980 527.18420410]
[123.21310425 542.15374756]
[118.88809967 556.56524658]
[111.91362000 569.89764404]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 200]
[22 199]
[23 198]
[25 197]
[26 196]
[27 195]
[28 194]
[30 192]
[31 191]
[33 189]
[34 188]
[35 182]
[37 180]
[38 179]
[39 178]
[40 176]
[41 175]
[43 173]
[44 172]
[45 171]
[48 167]
[49 166]
[50 165]
[51 164]
[52 163]
[53 162]
[55 159]
[56 158]
[57 157]
[62 153]
[63 152]
[64 151]
[65 150]
[66 149]
[69 147]
[70 146]
[71 145]
[76 139]
[77 138]
[78 135]
[79 134]
[80 133]
[82 131]
[83 130]
[84 129]
[87 126]
[88 125]
[89 124]
[90 123]
[92 120]
[93 119]
[94 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
