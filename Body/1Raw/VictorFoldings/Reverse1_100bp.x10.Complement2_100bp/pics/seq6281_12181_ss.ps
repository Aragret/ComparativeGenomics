%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[74.67867279 672.35034180]
[63.64876556 682.55432129]
[51.27890015 691.08471680]
[37.82090378 697.76776123]
[23.54876709 702.46740723]
[8.75305367 705.08801270]
[-6.26501560 705.57623291]
[-21.19969177 703.92211914]
[-35.74692535 700.15930176]
[-49.61055374 694.36444092]
[-62.50832748 686.65545654]
[-74.17766571 677.18933105]
[-84.38100433 666.15881348]
[-92.91059875 653.78839111]
[-99.59281921 640.33001709]
[-104.29160309 626.05755615]
[-106.91130066 611.26171875]
[-107.39858246 596.24359131]
[-105.74351501 581.30902100]
[-101.97979736 566.76202393]
[-96.18406677 552.89874268]
[-88.47430420 540.00146484]
[-79.00746918 528.33270264]
[-67.97630310 518.13006592]
[-55.60537720 509.60119629]
[-42.14655304 502.91983032]
[-27.87383652 498.22192383]
[-13.07779789 495.60314941]
[1.94033229 495.11679077]
[16.87480354 496.77279663]
[20.63110542 482.25073242]
[24.38740540 467.72866821]
[27.92707825 453.15228271]
[31.24933815 438.52484131]
[34.57159805 423.89736938]
[37.89385605 409.26989746]
[41.21611786 394.64245605]
[44.42938995 379.99066162]
[47.31466293 365.27078247]
[49.98045731 350.50955200]
[52.64625549 335.74832153]
[55.09197998 320.94906616]
[57.31709671 306.11502075]
[59.54221725 291.28097534]
[61.76733398 276.44692993]
[63.99245071 261.61288452]
[57.05694962 251.70201111]
[58.78932953 239.32531738]
[68.80103302 231.19337463]
[66.79019928 224.08152771]
[71.39492035 216.19264221]
[74.06071472 201.43142700]
[76.72650909 186.67021179]
[79.39230347 171.90899658]
[82.05809784 157.14778137]
[84.72389221 142.38656616]
[87.38969421 127.62534332]
[90.05548859 112.86412811]
[84.00343323 102.91355133]
[86.15850830 91.46817017]
[95.41504669 84.40008545]
[83.01549530 92.84113312]
[68.07901001 91.46224976]
[57.43434525 80.89384460]
[55.94809723 65.96765900]
[64.29976654 53.50773621]
[78.67107391 49.21058655]
[92.49165344 55.04080963]
[99.44317627 68.33473969]
[103.84417725 53.99489594]
[108.24517822 39.65504837]
[112.64617157 25.31520081]
[116.61827087 10.85067654]
[120.15794373 -3.72569919]
[123.69761658 -18.30207443]
[127.23728943 -32.87844849]
[130.77696228 -47.45482635]
[133.00207520 -62.28886795]
[133.89489746 -77.26227570]
[126.99271393 -91.49851227]
[135.47383118 -103.74269104]
[136.36665344 -118.71609497]
[136.92486572 -133.70570374]
[137.14819336 -148.70404053]
[137.37152100 -163.70237732]
[137.59484863 -178.70071411]
[137.81817627 -193.69905090]
[138.04150391 -208.69738770]
[138.26483154 -223.69572449]
[127.53723907 -234.98982239]
[127.97737885 -250.19708252]
[138.81068420 -260.35461426]
[139.03401184 -275.35293579]
[139.25733948 -290.35128784]
[124.70465088 -294.30981445]
[111.59401703 -301.76382446]
[100.74958801 -312.24472046]
[92.85304260 -325.09365845]
[88.40077972 -339.50296021]
[87.67266083 -354.56686401]
[90.71446228 -369.33837891]
[97.33496857 -382.88903809]
[107.11801910 -394.36694336]
[119.44863129 -403.05065918]
[133.55169678 -408.39428711]
[148.54067993 -410.06192017]
[163.47337341 -407.94876099]
[177.41108704 -402.18759155]
[189.47769165 -393.14059448]
[198.91465759 -381.37649536]
[205.12876892 -367.63473511]
[207.72941589 -352.77920532]
[206.55311584 -337.74365234]
[201.67381287 -323.47329712]
[193.39820862 -310.86517334]
[182.24653625 -300.71179199]
[168.91976929 -293.65145874]
[154.25567627 -290.12796021]
[154.03234863 -275.12960815]
[153.80902100 -260.13128662]
[164.33509827 -249.65571594]
[164.32226562 -234.44209290]
[153.26316833 -223.47239685]
[153.03984070 -208.47406006]
[152.81651306 -193.47572327]
[152.59318542 -178.47738647]
[152.36985779 -163.47904968]
[152.14653015 -148.48071289]
[151.92320251 -133.48237610]
[154.10345459 -130.71130371]
[155.04981995 -126.74652863]
[154.21591187 -122.17948914]
[151.34005737 -117.82328033]
[150.44723511 -102.84986877]
[157.41328430 -89.68463135]
[148.86830139 -76.36946106]
[147.97547913 -61.39605331]
[156.84046936 -73.49613190]
[170.03665161 -80.62782288]
[185.01602173 -81.41410828]
[198.88632202 -75.70317078]
[208.96940613 -64.59770203]
[213.31838989 -50.24199295]
[211.09355164 -35.40790939]
[202.72447205 -22.95967484]
[189.82708740 -15.30085373]
[174.89169312 -13.91024113]
[160.80206299 -19.05634499]
[150.27868652 -29.74553108]
[145.35333252 -43.91515350]
[141.81365967 -29.33877754]
[138.27398682 -14.76240253]
[134.73431396 -0.18602680]
[131.19464111 14.39034843]
[132.53623962 16.85170364]
[132.98368835 19.99278641]
[132.27322388 23.47569275]
[130.26812744 26.87335777]
[126.98602295 29.71619797]
[122.58502197 44.05604553]
[118.18402100 58.39589310]
[113.78302765 72.73574066]
[110.13494110 87.28536224]
[115.97894287 103.00871277]
[104.81670380 115.52992249]
[102.15090942 130.29113770]
[99.48511505 145.05235291]
[96.81932068 159.81356812]
[94.15351868 174.57478333]
[91.48772430 189.33601379]
[88.82192993 204.09722900]
[86.15613556 218.85844421]
[83.60030365 233.63909912]
[90.48224640 250.71891785]
[78.82649231 263.83801270]
[76.60137939 278.67205811]
[74.37625885 293.50610352]
[72.15113831 308.34014893]
[69.92602539 323.17419434]
[71.98647308 329.45639038]
[70.75052643 335.00341797]
[67.40747070 338.41412354]
[64.74167633 353.17535400]
[62.07587814 367.93655396]
[63.94837189 374.27734375]
[62.54781342 379.78509521]
[59.10469437 383.09475708]
[60.39046860 392.13824463]
[55.84357834 397.96472168]
[52.52131653 412.59216309]
[49.19905853 427.21963501]
[45.87679672 441.84707642]
[42.55453873 456.47454834]
[44.14203262 462.89260864]
[42.49693680 468.33233643]
[38.90946579 471.48495483]
[35.15316391 486.00701904]
[31.39686394 500.52908325]
[45.26120758 506.32223511]
[58.15993881 514.02960205]
[69.83045197 523.49426270]
[80.03514862 534.52355957]
[88.56627655 546.89288330]
[95.25016022 560.35046387]
[99.95071411 574.62231445]
[102.57224274 589.41784668]
[103.06137848 604.43591309]
[101.40815735 619.37066650]
[97.64624786 633.91815186]
[91.85222626 647.78216553]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 198]
[31 197]
[32 196]
[33 193]
[34 192]
[35 191]
[36 190]
[37 189]
[38 187]
[39 184]
[40 183]
[41 182]
[42 179]
[43 178]
[44 177]
[45 176]
[46 175]
[49 173]
[51 172]
[52 171]
[53 170]
[54 169]
[55 168]
[56 167]
[57 166]
[58 165]
[61 163]
[69 162]
[70 161]
[71 160]
[72 159]
[73 154]
[74 153]
[75 152]
[76 151]
[77 150]
[78 137]
[79 136]
[81 134]
[82 133]
[83 129]
[84 128]
[85 127]
[86 126]
[87 125]
[88 124]
[89 123]
[92 120]
[93 119]
[94 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
