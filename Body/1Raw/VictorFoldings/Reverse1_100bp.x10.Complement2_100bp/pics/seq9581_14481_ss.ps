%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[52.24110413 648.11071777]
[40.77991486 657.82434082]
[28.10276794 665.88684082]
[14.44582272 672.14794922]
[0.06350335 676.49108887]
[-14.77625656 678.83526611]
[-29.79700089 679.13690186]
[-44.71890640 677.39031982]
[-59.26398087 673.62805176]
[-73.16126251 667.92022705]
[-86.15184784 660.37310791]
[-97.99373627 651.12744141]
[-108.46632385 640.35528564]
[-117.37450409 628.25744629]
[-124.55233002 615.05920410]
[-129.86607361 601.00653076]
[-133.21675110 586.36120605]
[-134.54194641 571.39599609]
[-133.81695557 556.38970947]
[-131.05529785 541.62194824]
[-126.30842590 527.36779785]
[-119.66475677 513.89276123]
[-111.24806213 501.44796753]
[-101.21514130 490.26522827]
[-89.75289917 480.55279541]
[-77.07488251 472.49169922]
[-63.41725922 466.23205566]
[-49.03446960 461.89050293]
[-34.19445419 459.54791260]
[-19.17367744 459.24792480]
[-4.25196362 460.99612427]
[-0.49566308 446.47406006]
[3.26063752 431.95199585]
[7.01693821 417.42993164]
[2.71333337 403.17062378]
[13.65994167 391.74774170]
[9.35633755 377.48840332]
[20.30294609 366.06552124]
[24.05924606 351.54345703]
[27.81554794 337.02139282]
[31.57184792 322.49932861]
[35.32814789 307.97729492]
[39.08444977 293.45523071]
[42.84075165 278.93316650]
[41.23187256 274.43643188]
[42.43073654 268.88128662]
[46.93112183 264.03793335]
[51.11813354 249.63415527]
[47.24098969 235.25300598]
[58.52285004 224.16111755]
[62.70985794 209.75732422]
[66.89687347 195.35354614]
[71.08388519 180.94976807]
[75.05597687 166.48524475]
[78.81227875 151.96318054]
[82.56858063 137.44113159]
[86.32488251 122.91906738]
[90.08118439 108.39700317]
[93.40344238 93.76954651]
[96.28871155 79.04965210]
[91.35037994 64.01890564]
[101.39130402 53.01758194]
[104.27658081 38.29769135]
[107.16184998 23.57779884]
[94.72423553 16.46391678]
[85.10606384 5.87249374]
[79.23789978 -7.15204763]
[77.68137360 -21.33086586]
[80.57551575 -35.27626419]
[87.62437439 -47.62750626]
[98.12729645 -57.18358231]
[111.04849243 -63.02000809]
[125.11922455 -64.57823181]
[128.22332764 -79.25353241]
[131.32743835 -93.92883301]
[126.61344147 -109.03144073]
[136.81704712 -119.88204956]
[139.92115784 -134.55735779]
[143.02526855 -149.23265076]
[146.12937927 -163.90795898]
[149.23348999 -178.58326721]
[140.87866211 -191.72991943]
[144.23573303 -206.56854248]
[156.82054138 -214.45257568]
[159.92465210 -229.12788391]
[163.02876282 -243.80317688]
[161.53674316 -247.88090515]
[161.43060303 -251.82466125]
[162.49803162 -255.21524048]
[164.41241455 -257.74539185]
[166.77922058 -259.24752808]
[170.75131226 -273.71206665]
[174.72340393 -288.17660522]
[177.60867310 -302.89648438]
[179.39114380 -317.79019165]
[181.17361450 -332.68392944]
[182.95608521 -347.57763672]
[184.73854065 -362.47134399]
[186.52101135 -377.36508179]
[188.30348206 -392.25878906]
[174.56573486 -398.59356689]
[163.45930481 -408.86502075]
[156.07226562 -422.06680298]
[153.12835693 -436.90554810]
[154.91595459 -451.92752075]
[161.25996399 -465.66101074]
[171.53883362 -476.76055908]
[184.74555969 -484.13873291]
[199.58627319 -487.07272339]
[214.60705566 -485.27505493]
[228.33628845 -478.92184448]
[239.42895508 -468.63552856]
[246.79827881 -455.42385864]
[249.72230530 -440.58117676]
[247.91456604 -425.56161499]
[241.55216980 -411.83663940]
[231.25843811 -400.75088501]
[218.04183960 -393.39041138]
[203.19718933 -390.47631836]
[201.41473389 -375.58261108]
[199.63226318 -360.68887329]
[197.84979248 -345.79516602]
[196.06733704 -330.90145874]
[194.28486633 -316.00772095]
[192.50239563 -301.11401367]
[202.72827148 -312.08813477]
[217.04196167 -316.57348633]
[231.70190430 -313.39761353]
[242.87600708 -303.39065552]
[247.64341736 -289.16839600]
[244.75791931 -274.44854736]
[234.97378540 -263.07882690]
[220.84857178 -258.03125000]
[206.07455444 -260.62521362]
[194.51365662 -270.18267822]
[189.18792725 -284.20449829]
[185.21583557 -269.73995972]
[181.24374390 -255.27545166]
[177.70407104 -240.69906616]
[174.59996033 -226.02377319]
[171.49584961 -211.34846497]
[179.81036377 -199.04382324]
[176.87141418 -184.11676025]
[163.90879822 -175.47915649]
[160.80468750 -160.80384827]
[157.70057678 -146.12854004]
[154.59646606 -131.45324707]
[151.49235535 -116.77793884]
[156.42837524 -102.72500610]
[146.00274658 -90.82472229]
[142.89863586 -76.14942169]
[139.79452515 -61.47412109]
[153.25883484 -53.31313705]
[163.13148499 -41.01412582]
[168.20446777 -26.05261040]
[167.84703064 -10.23164177]
[162.08401489 4.53550100]
[151.59507751 16.45668983]
[137.63462830 24.07842827]
[121.88174438 26.46306992]
[118.99646759 41.18296051]
[116.11119843 55.90285492]
[121.25590515 69.88073730]
[111.00860596 81.93492889]
[108.12332916 96.65481567]
[109.60319519 99.31930542]
[110.14627075 102.58114624]
[109.52943420 106.09440613]
[107.66049957 109.43556213]
[104.60324097 112.15330505]
[100.84693909 126.67536926]
[97.09063721 141.19741821]
[93.33433533 155.71948242]
[89.57804108 170.24154663]
[90.97373962 176.70401001]
[89.16741180 182.09236145]
[85.48766327 185.13677979]
[81.30065155 199.54055786]
[77.11363983 213.94433594]
[72.92662811 228.34812927]
[76.50428772 243.75950623]
[65.52191925 253.82115173]
[61.33490372 268.22494507]
[57.36280823 282.68945312]
[53.60651016 297.21151733]
[49.85020828 311.73358154]
[46.09390640 326.25564575]
[42.33760834 340.77770996]
[38.58130646 355.29977417]
[34.82500458 369.82180786]
[38.85993576 385.11984253]
[28.18200111 395.50402832]
[32.21693039 410.80206299]
[21.53899765 421.18624878]
[17.78269768 435.70828247]
[14.02639580 450.23034668]
[10.27009583 464.75241089]
[24.16799355 470.45874023]
[37.15940094 478.00442505]
[49.00229263 487.24884033]
[59.47603989 498.01983643]
[68.38552856 510.11672974]
[75.56478119 523.31414795]
[80.88005066 537.36627197]
[84.23231506 552.01129150]
[85.55912781 566.97631836]
[84.83576202 581.98266602]
[82.07570648 596.75073242]
[77.33036804 611.00543213]
[70.68815613 624.48114014]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 197]
[32 196]
[33 195]
[34 194]
[36 192]
[38 190]
[39 189]
[40 188]
[41 187]
[42 186]
[43 185]
[44 184]
[47 183]
[48 182]
[50 180]
[51 179]
[52 178]
[53 177]
[54 174]
[55 173]
[56 172]
[57 171]
[58 170]
[59 165]
[60 164]
[62 162]
[63 161]
[64 160]
[73 152]
[74 151]
[75 150]
[77 148]
[78 147]
[79 146]
[80 145]
[81 144]
[84 141]
[85 140]
[86 139]
[91 138]
[92 137]
[93 136]
[94 125]
[95 124]
[96 123]
[97 122]
[98 121]
[99 120]
[100 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
