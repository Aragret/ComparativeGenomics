%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACCGACCAACGGAGUAGCCCACUACUAUCGGUUCCACCCCUAUUCACACCAAAGCUUCUUCUAUAUUUUAUACUAAUCAAGACACCGACACUUACAAUxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[70.71508026 555.87585449]
[56.51216888 561.46508789]
[41.29132462 560.32989502]
[28.07466698 552.69555664]
[19.48636818 540.07800293]
[17.23164177 524.98229980]
[21.75816727 510.40585327]
[32.16719818 499.24276733]
[46.39201355 493.70944214]
[47.50765991 478.75100708]
[48.62331009 463.79254150]
[49.73896027 448.83410645]
[50.85460663 433.87564087]
[51.97025681 418.91717529]
[53.08590317 403.95874023]
[46.31664658 390.69125366]
[55.05892563 377.50476074]
[45.17502975 366.42126465]
[46.09336853 351.23535156]
[57.78578949 340.94338989]
[58.90143967 325.98492432]
[60.01708603 311.02645874]
[53.24782944 297.75897217]
[61.99010849 284.57250977]
[63.10575485 269.61404419]
[64.22140503 254.65559387]
[65.33705139 239.69714355]
[52.44087601 247.35798645]
[38.35744476 242.19496155]
[33.46853638 228.01403809]
[41.37807465 215.26887512]
[56.25544357 213.35472107]
[67.13300323 223.68109131]
[69.35812378 208.84704590]
[67.80228424 206.51519775]
[67.07638550 203.42655945]
[67.47328949 199.89416504]
[69.16726685 196.33116150]
[72.18265533 193.20684814]
[75.28676605 178.53153992]
[78.39087677 163.85623169]
[81.49498749 149.18093872]
[84.59909821 134.50563049]
[82.90782928 127.31109619]
[87.86021423 119.63569641]
[91.18247223 105.00823975]
[89.75488281 97.07511139]
[94.66461945 90.18849945]
[98.20429230 75.61212158]
[101.74396515 61.03575134]
[97.48171997 45.79948425]
[108.00386047 35.25748444]
[111.54353333 20.68110847]
[115.08320618 6.10473347]
[102.51006317 -2.32980394]
[93.59799957 -14.53419209]
[89.40705109 -29.02405739]
[90.42450714 -44.04520416]
[96.50829315 -57.78598022]
[106.90650940 -68.59577942]
[120.35022736 -75.18330383]
[135.20838928 -76.77081299]
[138.74806213 -91.34719086]
[142.28773499 -105.92356110]
[130.31398010 -112.71136475]
[120.51795197 -122.36185455]
[113.56462097 -134.21067810]
[109.92355347 -147.44456482]
[109.83727264 -161.15718079]
[113.30505371 -174.41114807]
[120.08346558 -186.30220032]
[129.70343018 -196.02081299]
[141.50268555 -202.90731812]
[154.67137146 -206.49670410]
[168.30760193 -206.55000305]
[172.27970886 -221.01452637]
[168.47299194 -236.37094116]
[179.30433655 -246.59498596]
[183.27642822 -261.05950928]
[187.24853516 -275.52401733]
[181.55883789 -287.09945679]
[185.16499329 -299.06521606]
[195.61155701 -305.16403198]
[199.79856873 -319.56781006]
[191.09402466 -334.74179077]
[195.96110535 -351.19253540]
[210.91973877 -358.87878418]
[214.89183044 -373.34329224]
[218.86392212 -387.80783081]
[222.83602905 -402.27233887]
[226.80812073 -416.73687744]
[212.96516418 -422.57019043]
[200.00207520 -430.16052246]
[188.14065552 -439.37799072]
[177.58387756 -450.06488037]
[168.51239014 -462.03833008]
[161.08139038 -475.09341431]
[155.41806030 -489.00677490]
[151.61929321 -503.54034424]
[149.75010681 -518.44537354]
[149.84245300 -533.46691895]
[151.89479065 -548.34790039]
[155.87197876 -562.83361816]
[161.70596313 -576.67633057]
[169.29692078 -589.63903809]
[178.51495361 -601.50006104]
[189.20233154 -612.05627441]
[201.17619324 -621.12719727]
[214.23164368 -628.55761719]
[228.14527893 -634.22027588]
[242.67901611 -638.01831055]
[257.58416748 -639.88684082]
[272.60571289 -639.79376221]
[287.48657227 -637.74072266]
[301.97213745 -633.76281738]
[315.81451416 -627.92822266]
[328.77688599 -620.33660889]
[340.63745117 -611.11804199]
[351.19320679 -600.43011475]
[360.26354980 -588.45581055]
[367.69329834 -575.40002441]
[373.35531616 -561.48614502]
[377.15267944 -546.95220947]
[379.02047729 -532.04699707]
[378.92666626 -517.02545166]
[376.87292480 -502.14468384]
[372.89437866 -487.65930176]
[367.05905151 -473.81719971]
[359.46688843 -460.85516357]
[350.24771118 -448.99508667]
[339.55932617 -438.43981934]
[327.58459473 -429.37002563]
[314.52844238 -421.94091797]
[300.61425781 -416.27957153]
[286.08016968 -412.48287964]
[271.17483521 -410.61581421]
[256.15332031 -410.71032715]
[241.27264404 -412.76477051]
[237.30055237 -398.30023193]
[233.32844543 -383.83572388]
[229.35635376 -369.37118530]
[225.38426208 -354.90667725]
[233.26168823 -344.70983887]
[233.83633423 -331.64260864]
[226.67459106 -320.46588135]
[214.20236206 -315.38079834]
[210.01535034 -300.97702026]
[215.11112976 -284.18417358]
[201.71305847 -271.55194092]
[197.74096680 -257.08740234]
[193.76885986 -242.62287903]
[197.85969543 -228.30107117]
[186.74423218 -217.04243469]
[182.77212524 -202.57791138]
[196.53636169 -193.83924866]
[206.94235229 -181.26380920]
[212.96464539 -166.07279968]
[214.00421143 -149.74601746]
[209.94801331 -133.87774658]
[201.18115234 -120.02104950]
[188.55036926 -109.53579712]
[173.28224182 -103.45516968]
[156.86412048 -102.38388824]
[153.32444763 -87.80751801]
[149.78477478 -73.23114014]
[162.26008606 -65.00606537]
[171.18533325 -52.98654556]
[175.46781921 -38.61174774]
[174.57215881 -23.61110497]
[168.58717346 -9.79625225]
[158.21752930 1.15777373]
[144.70074463 7.91562366]
[129.65957642 9.64440632]
[126.11991119 24.22078133]
[122.58023834 38.79715729]
[127.09566498 52.99082184]
[116.32034302 64.57542419]
[112.78067017 79.15179443]
[109.24099731 93.72817230]
[105.80993652 108.33049774]
[102.48767090 122.95795441]
[99.27439880 137.60974121]
[96.17028809 152.28504944]
[93.06617737 166.96034241]
[89.96206665 181.63565063]
[86.85796356 196.31095886]
[84.19216156 211.07217407]
[81.96704865 225.90621948]
[80.29550934 240.81278992]
[79.17985535 255.77124023]
[78.06420898 270.72970581]
[76.94856262 285.68814087]
[83.63802338 300.02557373]
[74.97554016 312.14212036]
[73.85989380 327.10055542]
[72.74423981 342.05902100]
[82.78057861 353.97161865]
[81.43605804 369.12573242]
[70.01737976 378.62042236]
[76.70684052 392.95782471]
[68.04435730 405.07437134]
[66.92871094 420.03283691]
[65.81306458 434.99130249]
[64.69741058 449.94973755]
[63.58176422 464.90820312]
[62.46611404 479.86663818]
[61.35046768 494.82510376]
[74.59708405 502.40731812]
[83.23500824 514.99096680]
[85.54916382 530.07763672]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 207]
[10 206]
[11 205]
[12 204]
[13 203]
[14 202]
[15 201]
[17 199]
[20 196]
[21 195]
[22 194]
[24 192]
[25 191]
[26 190]
[27 189]
[33 188]
[34 187]
[39 186]
[40 185]
[41 184]
[42 183]
[43 182]
[45 181]
[46 180]
[48 179]
[49 178]
[50 177]
[52 175]
[53 174]
[54 173]
[62 165]
[63 164]
[64 163]
[75 154]
[76 153]
[78 151]
[79 150]
[80 149]
[83 147]
[84 146]
[87 142]
[88 141]
[89 140]
[90 139]
[91 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
