%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUAUCACCCCCCAUUCCGCUCCAAUCGCUCCGAACGAUCUUCAGUAGUUUUUCGAUAAUCACCCUCAUCUCAAACUUCAGGAACUCUCUCCUAAUACxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[46.32147217 745.32421875]
[46.25325775 729.52008057]
[57.43941498 718.35559082]
[57.21608734 703.35729980]
[56.99275970 688.35894775]
[56.76943207 673.36059570]
[56.54610443 658.36224365]
[56.32277679 643.36395264]
[56.09944916 628.36560059]
[53.35724258 624.45544434]
[53.04226685 618.78112793]
[56.09944916 612.91894531]
[56.32277679 597.92059326]
[56.54610443 582.92224121]
[56.76943207 567.92395020]
[56.99275970 552.92559814]
[57.21608734 537.92724609]
[57.43941498 522.92889404]
[57.66274261 507.93057251]
[57.88607025 492.93225098]
[58.10939789 477.93389893]
[47.58332443 467.45834351]
[47.59615326 452.24472046]
[58.65525436 441.27502441]
[58.87858200 426.27667236]
[58.99024963 411.27709961]
[58.99024963 396.27709961]
[58.99024963 381.27709961]
[58.99024963 366.27709961]
[58.99024963 351.27709961]
[58.99024963 336.27709961]
[57.10572052 334.20184326]
[55.92967606 331.25506592]
[55.79819107 327.70285034]
[56.94488144 323.92800903]
[59.46344757 320.39093018]
[60.35626602 305.41754150]
[57.91247940 301.31423950]
[58.02041245 295.63223267]
[61.50513458 290.01367188]
[62.84336853 275.07348633]
[64.18160248 260.13330078]
[65.51983643 245.19309998]
[66.85807037 230.25291443]
[68.19630432 215.31272888]
[57.86826706 226.19076538]
[43.32434464 229.86151123]
[29.07113457 225.18754578]
[19.52514458 213.61714172]
[17.64430618 198.73553467]
[24.01141739 185.15393066]
[36.65356064 177.08074951]
[51.65342712 177.01754761]
[64.36314392 184.98391724]
[70.84452057 198.51164246]
[74.16677856 183.88418579]
[77.48903656 169.25671387]
[80.81129456 154.62925720]
[84.13355255 140.00180054]
[87.45581818 125.37434387]
[90.45059204 110.67633820]
[85.90407562 97.45435333]
[94.78819275 86.65786743]
[97.45398712 71.89665222]
[100.11978149 57.13543320]
[102.78558350 42.37421799]
[105.45137787 27.61299896]
[91.77373505 16.57872009]
[85.60012817 0.22032076]
[88.54690552 -16.92378998]
[99.71336365 -30.14587212]
[115.95433044 -35.86158752]
[118.17945099 -50.69562912]
[120.40456390 -65.52967072]
[122.62968445 -80.36371613]
[124.85479736 -95.19776154]
[119.25023651 -109.99301147]
[128.78991699 -121.43170929]
[131.01502991 -136.26576233]
[132.79750061 -151.15946960]
[134.13572693 -166.09965515]
[134.47070312 -181.09591675]
[126.12490845 -194.53683472]
[133.28619385 -207.59690857]
[132.61640930 -222.58193970]
[123.64196777 -231.84597778]
[123.39260101 -244.34083557]
[131.45668030 -253.35733032]
[131.01007080 -268.35067749]
[120.97131348 -283.78781128]
[129.88592529 -298.90390015]
[129.21614075 -313.88894653]
[128.54635620 -328.87399292]
[127.87657928 -343.85903931]
[127.20679474 -358.84405518]
[126.53701019 -373.82910156]
[112.14411926 -378.64669800]
[100.46597290 -388.34130859]
[93.08193970 -401.60180664]
[90.99063873 -416.63479614]
[94.47491455 -431.40719604]
[103.06354523 -443.92120361]
[115.59497833 -452.48434448]
[130.37445068 -455.93856812]
[145.40316772 -453.81668091]
[158.64859009 -446.40567017]
[168.31941223 -434.70782471]
[173.10772705 -420.30517578]
[172.36595154 -405.14553833]
[166.19439697 -391.27917480]
[155.42773438 -380.58135986]
[141.52204895 -374.49890137]
[142.19183350 -359.51385498]
[142.86161804 -344.52880859]
[143.53140259 -329.54376221]
[144.20118713 -314.55874634]
[144.87097168 -299.57369995]
[153.58332825 -291.18194580]
[154.26397705 -278.70315552]
[146.00341797 -268.79730225]
[146.45002747 -253.80393982]
[156.46423340 -239.39274597]
[147.60144043 -223.25172424]
[148.27122498 -208.26669312]
[156.56912231 -195.89759827]
[149.45574951 -181.76570129]
[158.23788452 -193.92605591]
[172.16099548 -199.50697327]
[186.91088867 -196.77914429]
[197.91711426 -186.58782959]
[201.76928711 -172.09091187]
[197.27377319 -157.78041077]
[185.82354736 -148.09060669]
[170.96659851 -146.02397156]
[157.30650330 -152.22088623]
[149.07591248 -164.76142883]
[147.73768616 -149.82124329]
[149.42955017 -147.58613586]
[150.33799744 -144.54617310]
[150.15205383 -140.99641418]
[148.67315674 -137.33889771]
[145.84907532 -134.04063416]
[143.62396240 -119.20659637]
[149.38768005 -105.47237396]
[139.68884277 -92.97264099]
[137.46372986 -78.13860321]
[135.23861694 -63.30455780]
[133.01348877 -48.47051239]
[130.78837585 -33.63647079]
[141.46119690 -26.87561226]
[148.81132507 -16.54234123]
[151.71804810 -4.15126419]
[149.71514893 8.46490288]
[143.06529236 19.42639351]
[132.72613525 27.08647537]
[120.21259308 30.27879524]
[117.54679871 45.04001236]
[114.88100433 59.80123138]
[112.21520996 74.56244659]
[109.54940796 89.32366180]
[114.09592438 102.54564667]
[105.21180725 113.34213257]
[106.97846985 118.25395203]
[106.71111298 122.88880157]
[104.85586548 126.51828003]
[102.08327484 128.69659424]
[98.76101685 143.32406616]
[95.43875885 157.95152283]
[92.11649323 172.57897949]
[88.79423523 187.20643616]
[85.47197723 201.83390808]
[83.13648987 216.65097046]
[81.79825592 231.59115601]
[80.46002197 246.53134155]
[79.12178802 261.47152710]
[77.78355408 276.41171265]
[76.44532013 291.35189819]
[75.32967377 306.31033325]
[74.43685150 321.28375244]
[73.99024963 336.27709961]
[73.99024963 351.27709961]
[73.99024963 366.27709961]
[73.99024963 381.27709961]
[73.99024963 396.27709961]
[73.99024963 411.27709961]
[77.11965942 419.85873413]
[73.87692261 426.50000000]
[73.65359497 441.49835205]
[84.38117981 452.79244995]
[83.94104004 467.99972534]
[73.10773468 478.15722656]
[72.88440704 493.15557861]
[72.66107941 508.15390015]
[72.43775177 523.15222168]
[72.21442413 538.15057373]
[71.99109650 553.14892578]
[71.76776886 568.14727783]
[71.54444122 583.14556885]
[71.32111359 598.14392090]
[71.09778595 613.14227295]
[71.09778595 628.14227295]
[71.32111359 643.14062500]
[71.54444122 658.13891602]
[71.76776886 673.13726807]
[71.99109650 688.13562012]
[72.21442413 703.13397217]
[72.43775177 718.13226318]
[83.95135498 728.95874023]
[84.35372162 744.75793457]
[73.40612793 756.15643311]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 207]
[4 206]
[5 205]
[6 204]
[7 203]
[8 202]
[9 201]
[12 200]
[13 199]
[14 198]
[15 197]
[16 196]
[17 195]
[18 194]
[19 193]
[20 192]
[21 191]
[24 188]
[25 187]
[26 185]
[27 184]
[28 183]
[29 182]
[30 181]
[31 180]
[36 179]
[37 178]
[40 177]
[41 176]
[42 175]
[43 174]
[44 173]
[45 172]
[55 171]
[56 170]
[57 169]
[58 168]
[59 167]
[60 166]
[61 162]
[63 160]
[64 159]
[65 158]
[66 157]
[67 156]
[72 149]
[73 148]
[74 147]
[75 146]
[76 145]
[78 143]
[79 142]
[80 137]
[81 136]
[82 126]
[84 124]
[85 123]
[88 121]
[89 120]
[91 117]
[92 116]
[93 115]
[94 114]
[95 113]
[96 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
