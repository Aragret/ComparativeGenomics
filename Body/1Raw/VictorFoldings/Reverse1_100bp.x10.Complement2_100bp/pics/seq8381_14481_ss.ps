%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[322.97994995 507.55694580]
[332.41647339 495.87127686]
[343.24325562 485.46051025]
[334.28256226 473.43112183]
[325.32186890 461.40173340]
[316.36117554 449.37237549]
[307.40048218 437.34298706]
[298.43978882 425.31362915]
[289.47909546 413.28424072]
[280.51840210 401.25485229]
[271.55767822 389.22549438]
[262.59698486 377.19610596]
[259.36105347 391.84289551]
[246.79075623 400.02749634]
[232.08694458 397.06140137]
[223.67262268 384.64370728]
[226.36790466 369.88781738]
[238.62879944 361.24664307]
[253.43090820 363.66967773]
[245.57916260 350.88882446]
[232.75096130 349.67773438]
[222.81423950 341.17221069]
[219.54246521 328.30731201]
[224.34722900 315.72442627]
[216.68663025 302.82809448]
[203.53454590 295.83724976]
[203.13888550 280.02099609]
[195.47828674 267.12466431]
[187.81768799 254.22834778]
[180.15708923 241.33201599]
[172.49650574 228.43568420]
[164.83590698 215.53936768]
[157.17530823 202.64303589]
[149.51470947 189.74670410]
[141.56802368 177.02467346]
[133.33921814 164.48327637]
[125.11040497 151.94186401]
[116.88159943 139.40046692]
[108.65279388 126.85906982]
[100.42398071 114.31766510]
[88.02384186 107.85793304]
[87.03461456 93.91114044]
[78.80580902 81.36973572]
[80.63483429 96.25781250]
[79.02839661 111.17153931]
[74.07077026 125.32858276]
[66.02201843 137.98629761]
[55.30436325 148.48066711]
[42.48003769 156.26119995]
[28.22177315 160.91972351]
[13.27753162 162.21188354]
[-1.56874132 160.06987000]
[-15.53823948 154.60607910]
[-27.89815140 146.10710144]
[-38.00010300 135.01879883]
[-45.31415939 121.92282104]
[-49.45664978 107.50616455]
[-50.21025848 92.52510834]
[-47.53545761 77.76552582]
[-41.57255936 64.00166321]
[-32.63436890 51.95555496]
[-21.18976212 42.25911331]
[-7.83910084 35.42099380]
[6.71726418 31.79991150]
[21.71573639 31.58582306]
[36.36952591 34.78995514]
[49.90992355 41.24422836]
[61.62662888 50.61006165]
[70.90587616 62.39755630]
[67.80176544 47.72225189]
[64.69765472 33.04695129]
[61.26659012 18.44462776]
[57.51029205 3.92256904]
[53.75399017 -10.59949017]
[49.99768829 -25.12154961]
[46.24139023 -39.64360809]
[41.06267548 -47.16815186]
[42.53898621 -54.40985870]
[38.99931335 -68.98623657]
[35.45964050 -83.56260681]
[24.68431473 -95.14720917]
[29.19974327 -109.34087372]
[25.66007042 -123.91725159]
[22.12039757 -138.49362183]
[7.05714846 -138.27857971]
[-7.67617893 -141.42131042]
[-21.34056664 -147.76420593]
[-33.25061417 -156.98908997]
[-42.80891800 -168.63325500]
[-49.53603745 -182.11262512]
[-53.09454346 -196.75109863]
[-53.30594635 -211.81440735]
[-50.15963745 -226.54696655]
[-43.81343460 -240.20982361]
[-34.58566284 -252.11763000]
[-22.93918228 -261.67309570]
[-9.45817661 -268.39697266]
[5.18115377 -271.95193481]
[20.24450684 -272.15966797]
[34.97630692 -269.00979614]
[48.63761902 -262.66027832]
[60.54319382 -253.42962646]
[70.09585571 -241.78083801]
[76.81644440 -228.29820251]
[80.36785889 -213.65800476]
[80.57196045 -198.59460449]
[77.41851044 -183.86357117]
[71.06568909 -170.20379639]
[61.83214569 -158.30046082]
[50.18103790 -148.75061035]
[36.69677353 -142.03329468]
[40.23644638 -127.45692444]
[43.77611923 -112.88054657]
[54.29826355 -102.33854675]
[50.03601456 -87.10227966]
[53.57568741 -72.52590179]
[57.11536026 -57.94953156]
[60.76344681 -43.39990997]
[64.51975250 -28.87784958]
[68.27604675 -14.35579109]
[72.03234863 0.16626844]
[75.78865051 14.68832779]
[78.62487030 16.78313255]
[80.58735657 20.35576248]
[80.99259186 24.98059654]
[79.37295532 29.94284058]
[82.47706604 44.61814117]
[85.58117676 59.29344559]
[91.34720612 73.14093018]
[99.57601929 85.68233490]
[111.97615814 92.14206696]
[112.96538544 106.08885956]
[121.19419098 118.63026428]
[129.42300415 131.17166138]
[137.65180969 143.71305847]
[145.88061523 156.25445557]
[154.10942078 168.79586792]
[158.77227783 171.14210510]
[161.76921082 174.68775940]
[162.92230225 178.59742737]
[162.41104126 182.08610535]
[170.07162476 194.98243713]
[177.73222351 207.87876892]
[185.39282227 220.77508545]
[193.05342102 233.67141724]
[200.71401978 246.56774902]
[208.37461853 259.46408081]
[216.03521729 272.36038208]
[229.73522949 280.27368164]
[229.58294678 295.16751099]
[237.24354553 308.06384277]
[254.27198792 312.07031250]
[262.96313477 326.86148071]
[258.35998535 343.03707886]
[266.21176147 355.81790161]
[274.62637329 368.23541260]
[283.58706665 380.26480103]
[292.54776001 392.29415894]
[301.50845337 404.32354736]
[310.46914673 416.35290527]
[319.42984009 428.38229370]
[328.39056396 440.41168213]
[337.35125732 452.44104004]
[346.31195068 464.47042847]
[355.27264404 476.49981689]
[368.34713745 469.10650635]
[382.24517822 463.41021729]
[396.74755859 459.50076294]
[411.62561035 457.43984985]
[426.64462280 457.25991821]
[441.56774902 458.96386719]
[456.15963745 462.52478027]
[470.19012451 467.88650513]
[483.43798828 474.96450806]
[495.69421387 483.64709473]
[506.76556396 493.79739380]
[516.47741699 505.25531006]
[524.67657471 517.84008789]
[531.23376465 531.35327148]
[536.04553223 545.58178711]
[539.03594971 560.30120850]
[540.15795898 575.27929688]
[539.39379883 590.27996826]
[536.75555420 605.06652832]
[532.28485107 619.40582275]
[526.05212402 633.07171631]
[518.15570068 645.84863281]
[508.72012329 657.53509521]
[497.89422607 667.94677734]
[485.84872437 676.91949463]
[472.77362061 684.31170654]
[458.87509155 690.00683594]
[444.37237549 693.91503906]
[429.49417114 695.97473145]
[414.47512817 696.15338135]
[399.55215454 694.44818115]
[384.96057129 690.88604736]
[370.93051147 685.52313232]
[357.68325806 678.44403076]
[345.42773438 669.76037598]
[334.35723877 659.60913086]
[324.64636230 648.15045166]
[316.44827271 635.56494141]
[309.89224243 622.05120850]
[305.08169556 607.82226562]
[302.09246826 593.10266113]
[300.97171021 578.12445068]
[301.73712158 563.12384033]
[304.37661743 548.33746338]
[308.84857178 533.99853516]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 165]
[4 164]
[5 163]
[6 162]
[7 161]
[8 160]
[9 159]
[10 158]
[11 157]
[12 156]
[19 155]
[20 154]
[24 151]
[25 150]
[27 148]
[28 147]
[29 146]
[30 145]
[31 144]
[32 143]
[33 142]
[34 141]
[35 137]
[36 136]
[37 135]
[38 134]
[39 133]
[40 132]
[42 130]
[43 129]
[69 128]
[70 127]
[71 126]
[72 122]
[73 121]
[74 120]
[75 119]
[76 118]
[78 117]
[79 116]
[80 115]
[82 113]
[83 112]
[84 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
