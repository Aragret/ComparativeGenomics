%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGGCGGAUCAAAAUUCUCAUGACGCCGUUCAUGAUAACUGGGUCGCUACCCCCGAAGCUGUACCCGAAAUCCCUCAGUAUUCACCUCAGGCAUUUCUCxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[109.04622650 580.97479248]
[93.98905945 582.57489014]
[79.22872162 579.19683838]
[66.36631012 571.20703125]
[56.79704285 559.47216797]
[51.55891800 545.26507568]
[51.22013092 530.12689209]
[55.81743240 515.69970703]
[64.85213470 503.54849243]
[77.34423065 494.99124146]
[91.93865967 490.95623779]
[92.83147430 475.98284912]
[93.72429657 461.00942993]
[94.61711121 446.03604126]
[85.92853546 430.78887939]
[96.19602203 415.50292969]
[96.86580658 400.51788330]
[97.53559113 385.53283691]
[98.20537567 370.54779053]
[98.87516022 355.56277466]
[91.71388245 342.50268555]
[100.05966949 329.06176758]
[92.89839172 316.00170898]
[101.24418640 302.56079102]
[101.91397095 287.57574463]
[102.58375549 272.59072876]
[103.25354004 257.60568237]
[103.92332458 242.62063599]
[96.76204681 229.56057739]
[105.10784149 216.11965942]
[104.54962921 201.13005066]
[102.76715851 186.23632812]
[100.98469543 171.34260559]
[99.20223236 156.44889832]
[90.00735474 144.73123169]
[96.04994202 130.10940552]
[94.26747894 115.21569061]
[85.56227875 107.47872162]
[84.26443481 95.90474701]
[91.03981781 86.43186951]
[89.47929382 71.51325989]
[87.69683075 56.61954498]
[85.69281769 41.75401688]
[83.68880463 26.88848877]
[74.17715454 14.24574184]
[80.14471436 0.59885705]
[78.14070129 -14.26667118]
[76.13668823 -29.13220024]
[74.13267517 -43.99772644]
[61.54602814 -49.61619568]
[53.44344711 -60.63285065]
[51.85517120 -74.10678864]
[57.08984375 -86.50607300]
[67.68162537 -94.63357544]
[65.89916229 -109.52729034]
[64.11669159 -124.42101288]
[62.33422852 -139.31472778]
[60.55176163 -154.20845032]
[58.76929855 -169.10215759]
[56.87600327 -183.98219299]
[54.87199020 -198.84773254]
[52.86797714 -213.71325684]
[49.43691635 -228.31558228]
[44.61091995 -242.51803589]
[39.78491974 -256.72048950]
[34.95892334 -270.92294312]
[30.13292694 -285.12539673]
[18.36704254 -295.70248413]
[21.59816742 -310.24240112]
[16.77216911 -324.44485474]
[11.94617176 -338.64730835]
[7.12017441 -352.84976196]
[2.29417658 -367.05221558]
[-12.47576332 -364.29003906]
[-27.48847008 -363.65805054]
[-42.43830109 -365.16909790]
[-57.02090073 -368.79241943]
[-70.93938446 -374.45428467]
[-83.91038513 -382.03936768]
[-95.66984558 -391.39331055]
[-105.97833252 -402.32565308]
[-114.62599945 -414.61380005]
[-121.43679047 -428.00759888]
[-126.27203369 -442.23437500]
[-129.03329468 -457.00448608]
[-129.66436768 -472.01721191]
[-128.15238953 -486.96694946]
[-124.52815247 -501.54934692]
[-118.86543274 -515.46746826]
[-111.27952576 -528.43798828]
[-101.92486572 -540.19689941]
[-90.99190521 -550.50469971]
[-78.70322418 -559.15161133]
[-65.30899811 -565.96154785]
[-51.08192062 -570.79589844]
[-36.31163788 -573.55627441]
[-21.29885483 -574.18640137]
[-6.34920883 -572.67352295]
[8.23294163 -569.04833984]
[22.15072441 -563.38476562]
[35.12078857 -555.79809570]
[46.87908554 -546.44268799]
[57.18622589 -535.50909424]
[65.83237457 -523.21984863]
[72.64149475 -509.82522583]
[77.47498322 -495.59786987]
[80.23442078 -480.82739258]
[80.86362457 -465.81457520]
[79.34980011 -450.86502075]
[75.72375488 -436.28311157]
[70.05931854 -422.36566162]
[62.47180557 -409.39608765]
[53.11569214 -397.63836670]
[42.18145370 -387.33190918]
[29.89170074 -378.68652344]
[16.49663162 -371.87820435]
[21.32262993 -357.67575073]
[26.14862823 -343.47329712]
[30.97462463 -329.27084351]
[35.80062103 -315.06838989]
[47.22132111 -305.50717163]
[44.33538055 -289.95138550]
[49.16138077 -275.74893188]
[53.98737717 -261.54647827]
[58.81337357 -247.34402466]
[63.63937378 -233.14157104]
[66.96229553 -247.76889038]
[75.88203430 -259.82867432]
[88.89543915 -267.28863525]
[103.80953979 -268.89166260]
[118.11103821 -264.36758423]
[129.38987732 -254.47883606]
[135.74539185 -240.89179993]
[136.10655212 -225.89614868]
[130.41249084 -212.01890564]
[119.62277222 -201.59864807]
[105.55564880 -196.39134216]
[90.58167267 -197.27455139]
[77.22422028 -204.09939575]
[67.73350525 -215.71726990]
[69.73751831 -200.85174561]
[71.74153137 -185.98620605]
[75.75048065 -179.77734375]
[73.66301727 -170.88462830]
[75.44548035 -155.99090576]
[77.22794342 -141.09719849]
[79.01041412 -126.20347595]
[80.79287720 -111.30976105]
[82.57534790 -96.41604614]
[97.15744019 -88.87680817]
[104.44538879 -73.98226166]
[101.38906860 -57.51531982]
[88.99819946 -46.00173950]
[91.00221252 -31.13621330]
[93.00622559 -16.27068520]
[95.01023865 -1.40515661]
[104.37855530 10.17430782]
[98.55432892 24.88447571]
[100.55834198 39.75000381]
[102.56236267 54.61553192]
[105.74977875 58.17212677]
[106.73680878 63.76880646]
[104.39790344 69.95273590]
[105.95842743 84.87134552]
[116.15846252 98.18807983]
[109.16119385 113.43322754]
[110.94366455 128.32695007]
[120.26602936 141.10990906]
[114.09594727 154.66642761]
[115.87841034 169.56015015]
[117.66088104 184.45385742]
[119.44334412 199.34757996]
[126.36924744 186.04225159]
[138.63220215 177.40396118]
[153.49264526 175.36254883]
[167.63070679 180.37406921]
[177.88790894 191.31892395]
[181.97276306 205.75199890]
[178.97271729 220.44892883]
[169.55796814 232.12637329]
[155.83181763 238.17555237]
[140.86070251 237.24507141]
[127.98921204 229.54281616]
[120.09288025 216.78944397]
[127.20625305 230.92134094]
[118.90836334 243.29042053]
[118.23857880 258.27545166]
[117.56879425 273.26049805]
[116.89900970 288.24554443]
[116.22922516 303.23059082]
[123.34259796 317.36248779]
[115.04470825 329.73156738]
[122.15808105 343.86346436]
[113.86019897 356.23254395]
[113.19041443 371.21759033]
[112.52062988 386.20263672]
[111.85084534 401.18765259]
[111.18106079 416.17269897]
[119.29321289 426.20046997]
[118.42684937 438.66775513]
[109.59051514 446.92883301]
[108.69770050 461.90225220]
[107.80488586 476.87564087]
[106.91206360 491.84906006]
[120.92360687 497.58975220]
[132.31031799 507.57080078]
[139.83706665 520.70953369]
[142.68739319 535.58081055]
[140.55212402 550.57147217]
[133.66287231 564.05541992]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 204]
[12 203]
[13 202]
[14 201]
[16 198]
[17 197]
[18 196]
[19 195]
[20 194]
[22 192]
[24 190]
[25 189]
[26 188]
[27 187]
[28 186]
[30 184]
[31 172]
[32 171]
[33 170]
[34 169]
[36 167]
[37 166]
[40 164]
[41 163]
[42 160]
[43 159]
[44 158]
[46 156]
[47 155]
[48 154]
[49 153]
[54 149]
[55 148]
[56 147]
[57 146]
[58 145]
[59 144]
[60 142]
[61 141]
[62 140]
[63 126]
[64 125]
[65 124]
[66 123]
[67 122]
[69 120]
[70 119]
[71 118]
[72 117]
[73 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
