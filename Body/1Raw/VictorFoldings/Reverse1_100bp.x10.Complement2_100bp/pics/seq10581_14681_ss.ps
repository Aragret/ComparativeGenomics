%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGCGUCCGCCGUUUCUGAUCAUACCGUUAUCCGUGUUAUAACCGAUUCUCCCUCACCCACAACUCCCAAUACUCUCAUCGAUAUUACUUGUCGCUAUxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[52.67353058 495.67605591]
[38.71984482 489.64587402]
[28.13956070 478.73138428]
[22.54609299 464.59698486]
[22.79240608 449.39804077]
[28.84093857 435.45230103]
[39.76933289 424.88638306]
[53.91109085 419.31152344]
[54.13441849 404.31317139]
[54.35774612 389.31484985]
[46.81079483 376.47378540]
[54.75270081 362.79034424]
[54.97602844 347.79199219]
[55.19935608 332.79367065]
[43.70972061 342.43670654]
[28.75528908 341.26840210]
[18.90263557 329.95797729]
[19.79581070 314.98461914]
[30.92316055 304.92568970]
[45.91043472 305.54342651]
[56.17190552 316.48306274]
[57.73242569 301.56445312]
[59.29294968 286.64584351]
[60.85347366 271.72723389]
[49.67463303 261.92053223]
[46.37491226 247.23803711]
[52.42422104 233.26451111]
[65.69502258 225.44198608]
[67.25554657 210.52339172]
[68.81607056 195.60478210]
[58.75471878 206.72993469]
[44.50939560 211.42790222]
[29.80380058 208.47062683]
[18.48193932 198.63114929]
[13.50331688 184.48146057]
[16.16933632 169.72029114]
[25.78310394 158.20614624]
[39.83160400 152.94880676]
[54.64259720 155.32252502]
[66.34452057 164.70683289]
[71.87841034 178.64778137]
[75.63471222 164.12573242]
[79.39101410 149.60366821]
[83.14731598 135.08160400]
[86.90361786 120.55954742]
[90.65991211 106.03749084]
[77.21922302 112.69689178]
[62.96282196 108.03266144]
[56.05743027 94.71666718]
[60.45877457 80.37693024]
[73.64555359 73.22789001]
[88.06379700 77.36485291]
[95.45394135 90.41703033]
[100.49085999 76.28799438]
[89.84739685 65.40323639]
[85.00506592 51.03525925]
[86.87355804 36.05096817]
[95.02912140 23.41578865]
[107.80914307 15.60678768]
[122.65084076 14.12713528]
[127.68775940 -0.00189470]
[132.72467041 -14.13092422]
[137.76159668 -28.25995445]
[142.79850769 -42.38898468]
[147.83541870 -56.51801300]
[141.83613586 -61.14353943]
[136.91447449 -66.88752747]
[133.27409363 -73.50520325]
[131.06423950 -80.71576691]
[130.37350464 -88.21435547]
[131.22640991 -95.68488312]
[133.58247375 -102.81340790]
[137.33813477 -109.30130005]
[142.33132935 -114.87776184]
[148.34844971 -119.31111145]
[155.13346863 -122.41843414]
[162.39886475 -124.07311249]
[169.83776855 -124.20998383]
[177.13696289 -122.82787323]
[184.21406555 -136.05340576]
[191.29116821 -149.27893066]
[198.36827087 -162.50445557]
[205.44537354 -175.72998047]
[190.55169678 -173.94721985]
[179.76512146 -184.37074280]
[181.03710938 -199.31671143]
[193.43000793 -207.76751709]
[207.80822754 -203.49354553]
[213.57275391 -189.64704895]
[221.61393738 -202.30957031]
[229.65510559 -214.97209167]
[237.41149902 -227.81103516]
[244.87924194 -240.81999207]
[252.34698486 -253.82894897]
[252.50711060 -269.64935303]
[265.55364990 -276.83523560]
[273.02139282 -289.84417725]
[280.48913574 -302.85311890]
[287.95687866 -315.86209106]
[275.99221802 -324.94369507]
[265.28717041 -335.48077393]
[256.01751709 -347.30032349]
[248.33546448 -360.20825195]
[242.36714172 -373.99258423]
[238.21058655 -388.42694092]
[235.93403625 -403.27435303]
[235.57487488 -418.29098511]
[237.13899231 -433.23025513]
[240.60072327 -447.84686279]
[245.90321350 -461.90075684]
[252.95938110 -475.16116333]
[261.65338135 -487.41036987]
[271.84243774 -498.44720459]
[283.35922241 -508.09042358]
[296.01461792 -516.18170166]
[309.60086060 -522.58819580]
[323.89480591 -527.20458984]
[338.66174316 -529.95526123]
[353.65917969 -530.79486084]
[368.64086914 -529.70971680]
[383.36077881 -526.71759033]
[397.57717896 -521.86767578]
[411.05667114 -515.23956299]
[423.57785034 -506.94207764]
[434.93515015 -497.11151123]
[444.94207764 -485.90927124]
[453.43429565 -473.51934814]
[460.27233887 -460.14511108]
[465.34393311 -446.00625610]
[468.56579590 -431.33493042]
[469.88500977 -416.37203979]
[469.27996826 -401.36331177]
[466.76052856 -386.55517578]
[462.36810303 -372.19082642]
[456.17483521 -358.50610352]
[448.28240967 -345.72573853]
[438.82040405 -334.05960083]
[427.94421387 -323.69924927]
[415.83242798 -314.81481934]
[402.68392944 -307.55218506]
[388.71466064 -302.03063965]
[374.15396118 -298.34082031]
[359.24096680 -296.54333496]
[344.22055054 -296.66769409]
[329.33935547 -298.71185303]
[314.84176636 -302.64224243]
[300.96582031 -308.39434814]
[293.49807739 -295.38540649]
[286.03033447 -282.37643433]
[278.56259155 -269.36749268]
[278.93661499 -254.47758484]
[265.35592651 -246.36120605]
[257.88818359 -233.35224915]
[250.42045593 -220.34329224]
[250.98361206 -216.86260986]
[249.88883972 -212.93621826]
[246.94503784 -209.34632874]
[242.31762695 -206.93092346]
[234.27645874 -194.26840210]
[226.23529053 -181.60588074]
[218.67091370 -168.65287781]
[211.59379578 -155.42735291]
[204.51669312 -142.20182800]
[197.43959045 -128.97628784]
[190.36248779 -115.75077057]
[202.50062561 -96.22351837]
[200.45149231 -73.20032501]
[184.89231873 -55.94266510]
[161.96444702 -51.48109818]
[156.92753601 -37.35206604]
[151.89062500 -23.22303772]
[146.85369873 -9.09400845]
[141.81678772 5.03502131]
[136.77987671 19.16405106]
[147.33851624 29.69877815]
[152.29652405 43.83127975]
[150.61994934 58.77618408]
[142.58810425 71.56327820]
[129.74871826 79.62782288]
[114.61988831 81.32491302]
[109.58296967 95.45394135]
[105.18197632 109.79379272]
[101.42567444 124.31584930]
[97.66937256 138.83790588]
[93.91307068 153.35997009]
[90.15676880 167.88203430]
[86.40047455 182.40408325]
[83.73467255 197.16529846]
[82.17415619 212.08390808]
[80.61363220 227.00251770]
[91.97837067 237.40197754]
[95.00504303 252.32487488]
[88.73834229 266.00668335]
[75.77207947 273.28778076]
[74.21155548 288.20639038]
[72.65103149 303.12496948]
[71.09050751 318.04357910]
[70.19769287 333.01699829]
[69.97436523 348.01531982]
[69.75103760 363.01367188]
[77.28201294 376.92749023]
[69.35608673 389.53817749]
[69.13275146 404.53649902]
[68.90942383 419.53485107]
[82.87892914 425.52828979]
[93.48789215 436.41491699]
[99.11853027 450.53454590]
[98.91220093 465.73410034]
[92.90038300 479.69570923]
[81.99982452 490.29031372]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 204]
[9 203]
[10 202]
[12 200]
[13 199]
[14 198]
[21 197]
[22 196]
[23 195]
[24 194]
[28 190]
[29 189]
[30 188]
[41 187]
[42 186]
[43 185]
[44 184]
[45 183]
[46 182]
[53 181]
[54 180]
[60 174]
[61 173]
[62 172]
[63 171]
[64 170]
[65 169]
[79 165]
[80 164]
[81 163]
[82 162]
[83 161]
[89 160]
[90 159]
[91 158]
[92 154]
[93 153]
[94 152]
[96 150]
[97 149]
[98 148]
[99 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
