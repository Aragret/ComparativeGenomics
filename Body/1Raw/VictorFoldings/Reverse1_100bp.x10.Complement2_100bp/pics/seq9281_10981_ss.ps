%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[68.63487244 774.12445068]
[56.73316574 783.28570557]
[43.79582596 790.91491699]
[30.01898575 796.89642334]
[15.61149693 801.13952637]
[0.79177576 803.57989502]
[-14.21551609 804.18054199]
[-29.18287277 802.93243408]
[-43.88339233 799.85437012]
[-58.09421539 794.99310303]
[-71.59991455 788.42224121]
[-84.19574738 780.24151611]
[-95.69075775 770.57482910]
[-105.91069031 759.56878662]
[-114.70060730 747.39025879]
[-121.92726135 734.22381592]
[-127.48110199 720.26910400]
[-131.27792358 705.73760986]
[-133.26017761 690.84973145]
[-133.39779663 675.83105469]
[-131.68872070 660.90930176]
[-128.15884399 646.31066895]
[-122.86167145 632.25646973]
[-115.87751770 618.95983887]
[-107.31225586 606.62225342]
[-97.29573822 595.43078613]
[-85.97981262 585.55505371]
[-73.53601837 577.14489746]
[-60.15300369 570.32763672]
[-46.03365326 565.20672607]
[-31.39201164 561.85980225]
[-16.45004272 560.33758545]
[-1.43426323 560.66314697]
[13.42769241 562.83154297]
[17.39978790 548.36700439]
[21.37188530 533.90246582]
[25.34398079 519.43792725]
[29.31607628 504.97341919]
[18.46380234 488.79498291]
[23.07981300 469.55450439]
[40.62427139 459.76309204]
[43.94652939 445.13562012]
[47.26879120 430.50817871]
[50.59104919 415.88070679]
[53.91330719 401.25326538]
[57.23556900 386.62579346]
[60.23034286 371.92779541]
[62.89613724 357.16656494]
[65.56193542 342.40536499]
[68.22772980 327.64413452]
[70.78356171 312.86349487]
[73.22928619 298.06420898]
[67.67069244 284.24569702]
[77.55455017 271.89175415]
[80.00027466 257.09249878]
[82.44600677 242.29321289]
[84.22846985 227.39950562]
[85.34411621 212.44104004]
[86.45976257 197.48258972]
[77.99916840 182.10777283]
[88.49309540 166.97637939]
[89.38591003 152.00297546]
[90.27872467 137.02957153]
[91.17153931 122.05615997]
[92.06435394 107.08275604]
[91.84102631 92.08441925]
[90.50279236 77.14423370]
[89.16455841 62.20404816]
[87.82632446 47.26386261]
[86.48809052 32.32367706]
[85.14985657 17.38349342]
[82.14558411 13.11483765]
[81.17605591 8.57464886]
[82.00396729 4.58345747]
[84.10074615 1.74869919]
[83.43096161 -13.23633957]
[74.45652008 -22.50037193]
[74.20715332 -34.99523544]
[82.27123260 -44.01173019]
[81.82463074 -59.00508118]
[81.37802124 -73.99842834]
[80.93141174 -88.99178314]
[80.48480988 -103.98513031]
[71.64929199 -113.38175201]
[71.58598328 -125.87894440]
[79.78340912 -134.77438354]
[79.56008148 -149.77272034]
[79.33675385 -164.77105713]
[69.52894592 -180.35592651]
[78.66763306 -195.33763123]
[78.22102356 -210.33097839]
[68.18226624 -225.76811218]
[77.09687805 -240.88421631]
[76.42709351 -255.86924744]
[68.08130646 -269.31018066]
[75.24258423 -282.37023926]
[60.84970093 -287.18783569]
[49.17155075 -296.88244629]
[41.78751373 -310.14291382]
[39.69621658 -325.17593384]
[43.18049240 -339.94833374]
[51.76911926 -352.46231079]
[64.30056000 -361.02548218]
[79.08003235 -364.47967529]
[94.10874176 -362.35781860]
[107.35417175 -354.94680786]
[117.02499390 -343.24896240]
[121.81330872 -328.84631348]
[121.07152557 -313.68667603]
[114.89997864 -299.82031250]
[104.13330841 -289.12249756]
[90.22762299 -283.04000854]
[98.52550507 -270.67092896]
[91.41213226 -256.53903198]
[92.08191681 -241.55400085]
[100.79428101 -233.16224670]
[101.47492218 -220.68345642]
[93.21437073 -210.77758789]
[93.66098022 -195.78424072]
[102.24742889 -187.26371765]
[102.74221039 -174.77615356]
[94.33509064 -164.99438477]
[94.55841827 -149.99604797]
[94.78174591 -134.99771118]
[104.58028412 -120.43901062]
[95.47815704 -104.43173981]
[95.92476654 -89.43838501]
[96.37136841 -74.44503784]
[96.81797791 -59.45168686]
[97.26457977 -44.45833969]
[107.27879333 -30.04714203]
[98.41600037 -13.90612507]
[99.08578491 1.07891405]
[100.09004211 16.04525757]
[101.42827606 30.98544312]
[102.76651001 45.92562866]
[104.10474396 60.86581421]
[105.44297791 75.80599976]
[106.78121185 90.74618530]
[114.51473999 77.89345551]
[127.59038544 70.54312134]
[142.59020996 70.61652374]
[155.59329224 78.09449005]
[163.20065308 91.02229309]
[163.42375183 106.02062988]
[156.20426941 119.16898346]
[143.42936707 127.03039551]
[128.43836975 127.54991913]
[115.14987946 120.59174347]
[107.03776550 107.97557068]
[106.14495087 122.94897461]
[105.25212860 137.92237854]
[104.35931396 152.89578247]
[103.46649933 167.86918640]
[111.42845154 178.01661682]
[110.37657166 190.46961975]
[101.41822052 198.59823608]
[100.30257416 213.55668640]
[99.18692017 228.51515198]
[111.23014832 219.57307434]
[126.08853149 221.62942505]
[135.25050354 233.50621033]
[133.46768188 248.39988708]
[121.76134491 257.77865601]
[106.83740997 256.26995850]
[97.24527740 244.73893738]
[94.79954529 259.53820801]
[92.35382080 274.33749390]
[97.73748016 289.21453857]
[88.02855682 300.50994873]
[85.58283234 315.30920410]
[87.27114105 324.28625488]
[82.98894501 330.30993652]
[80.32315063 345.07113647]
[77.65735626 359.83236694]
[74.99156189 374.59359741]
[76.75821686 379.50540161]
[76.49086761 384.14025879]
[74.63562012 387.76974487]
[71.86302948 389.94805908]
[68.54077148 404.57550049]
[65.21850586 419.20297241]
[61.89624786 433.83044434]
[58.57398987 448.45788574]
[55.25173187 463.08535767]
[63.00893021 470.40994263]
[66.99553680 480.21881104]
[66.55430603 490.71685791]
[61.83181381 500.01260376]
[53.73995209 506.45910645]
[43.78060150 508.94552612]
[39.80850601 523.41003418]
[35.83640671 537.87457275]
[31.86431122 552.33911133]
[27.89221573 566.80358887]
[41.77726746 572.52941895]
[54.85342026 579.91821289]
[66.92243958 588.85791016]
[77.80136871 599.21301270]
[87.32527161 610.82659912]
[95.34978485 623.52252197]
[101.75325775 637.10839844]
[106.43859863 651.37817383]
[109.33480072 666.11560059]
[110.39794159 681.09722900]
[109.61190796 696.09594727]
[106.98862457 710.88439941]
[102.56784821 725.23834229]
[96.41660309 738.94024658]
[88.62814331 751.78234863]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 195]
[35 194]
[36 193]
[37 192]
[38 191]
[41 185]
[42 184]
[43 183]
[44 182]
[45 181]
[46 180]
[47 176]
[48 175]
[49 174]
[50 173]
[51 171]
[52 170]
[54 168]
[55 167]
[56 166]
[57 159]
[58 158]
[59 157]
[61 154]
[62 153]
[63 152]
[64 151]
[65 150]
[66 139]
[67 138]
[68 137]
[69 136]
[70 135]
[71 134]
[75 133]
[76 132]
[79 130]
[80 129]
[81 128]
[82 127]
[83 126]
[86 124]
[87 123]
[88 122]
[90 119]
[91 118]
[93 115]
[94 114]
[96 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
