%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[176.01777649 618.95465088]
[161.58950806 614.48229980]
[149.00646973 606.12506104]
[139.28869629 594.56036377]
[133.22395325 580.72576904]
[131.30390930 565.74279785]
[133.68418884 550.82598877]
[140.17184448 537.18463135]
[150.24096680 525.92456055]
[163.07527161 517.95849609]
[177.63433838 513.93237305]
[177.85766602 498.93402100]
[178.08099365 483.93569946]
[178.30432129 468.93734741]
[178.52764893 453.93902588]
[178.75097656 438.94067383]
[178.97430420 423.94235229]
[179.19763184 408.94400024]
[169.01771545 401.04470825]
[165.18907166 388.53778076]
[169.32374573 375.92370605]
[180.12518311 367.87734985]
[180.57177734 352.88400269]
[181.01838684 337.89065552]
[171.87969971 322.90896606]
[181.68751526 307.32406616]
[179.13168335 292.54342651]
[173.88496399 278.49093628]
[159.76664734 268.06790161]
[162.96510315 249.93363953]
[157.50975037 235.96083069]
[152.05439758 221.98803711]
[146.59902954 208.01524353]
[141.14367676 194.04244995]
[135.68832397 180.06964111]
[130.23297119 166.09684753]
[123.55277252 152.66647339]
[115.70101929 139.88563538]
[107.84925842 127.10478973]
[99.99750519 114.32394409]
[87.79519653 107.49787140]
[87.22164917 93.52780914]
[82.63072205 91.04377747]
[79.74068451 87.41046143]
[78.70449829 83.46820068]
[79.31941986 79.99628448]
[72.04619598 66.87759399]
[64.77296448 53.75889969]
[57.49973297 40.64020538]
[50.22650528 27.52150917]
[50.53191376 42.51840210]
[46.24828339 56.89374542]
[37.78390884 69.27737427]
[25.94555664 78.48896790]
[11.86158371 83.65052795]
[-3.12561560 84.27008820]
[-17.58755684 80.28860474]
[-30.14582062 72.08554840]
[-39.60343170 60.44280243]
[-45.05895233 46.47006989]
[-45.99239349 31.49914169]
[-42.31479263 16.95695305]
[-34.37667084 4.22957325]
[-22.93463707 -5.46990538]
[-9.07927608 -11.21699047]
[5.86880684 -12.46390629]
[20.48485756 -9.09180546]
[33.37576675 -1.42209435]
[43.31346512 9.81515503]
[39.77379227 -4.76121998]
[36.23411942 -19.33759499]
[32.69445038 -33.91397095]
[29.15477562 -48.49034500]
[16.13875389 -61.51588440]
[21.73226166 -78.14957428]
[17.97596169 -92.67163086]
[11.90040016 -78.95713043]
[-0.56641757 -70.61576080]
[-15.56151199 -70.23218536]
[-28.43849182 -77.92526245]
[-35.20728302 -91.31120300]
[-33.77050018 -106.24223328]
[-24.57335281 -118.09181213]
[-10.46566963 -123.18820953]
[4.18112612 -119.95226288]
[14.82869244 -109.38642883]
[13.04622650 -124.28015137]
[3.72385931 -137.06311035]
[9.89394188 -150.61962891]
[8.11147594 -165.51335144]
[6.32901001 -180.40705872]
[-8.56992531 -182.89672852]
[-22.16332817 -189.48429871]
[-33.34924316 -199.63575745]
[-41.22087860 -212.52815247]
[-45.14011383 -227.11637878]
[-44.78923416 -242.21781921]
[-40.19668961 -256.60827637]
[-31.73476982 -269.12118530]
[-20.08944893 -278.74215698]
[-6.20476007 -284.69128418]
[8.79372787 -286.48626709]
[23.69015312 -283.98165894]
[37.27693176 -277.38043213]
[48.45264435 -267.21774292]
[56.31132126 -254.31744385]
[60.21590042 -239.72528076]
[59.84985352 -224.62420654]
[55.24285126 -210.23837280]
[46.76836777 -197.73397827]
[35.11338425 -188.12471008]
[21.22272682 -182.18952942]
[23.00519371 -167.29580688]
[24.78765869 -152.40209961]
[33.98253250 -140.68443298]
[27.93994331 -126.06261444]
[29.72241020 -111.16889954]
[32.49802017 -96.42793274]
[36.25432205 -81.90587616]
[46.51467896 -75.49872589]
[49.76296616 -63.43089676]
[43.73115158 -52.03001785]
[47.27082443 -37.45364380]
[50.81049728 -22.87726784]
[54.35017014 -8.30089283]
[57.88984299 6.27548265]
[63.34519958 20.24828148]
[70.61843109 33.36697388]
[77.89165497 46.48566818]
[85.16488647 59.60436249]
[92.43811798 72.72305298]
[100.00249481 85.67605591]
[112.20480347 92.50212860]
[112.77835083 106.47219086]
[120.63010406 119.25302887]
[128.48185730 132.03387451]
[136.33361816 144.81471252]
[136.66127014 129.81829834]
[143.38592529 116.41012573]
[155.20913696 107.17910767]
[169.84803772 103.90760803]
[184.47607422 107.22731018]
[196.26881409 116.49722290]
[202.94926453 129.92747498]
[203.22752380 144.92489624]
[197.04986572 158.59370422]
[185.60911560 168.29469299]
[171.11428833 172.15473938]
[156.36410522 169.42852783]
[144.20576477 160.64149475]
[149.66111755 174.61428833]
[155.11647034 188.58708191]
[160.57183838 202.55989075]
[166.02719116 216.53268433]
[171.48254395 230.50547791]
[176.93791199 244.47827148]
[188.41572571 250.36236572]
[192.67184448 262.11267090]
[187.93743896 273.24423218]
[193.18415833 287.29669189]
[194.69802856 272.37329102]
[199.56771851 258.18576050]
[207.53778076 245.47834778]
[218.19010925 234.91767883]
[230.96591187 227.05772400]
[245.19499207 222.31082153]
[260.13092041 220.92596436]
[274.99020386 222.97581482]
[288.99334717 228.35282898]
[301.40576172 236.77496338]
[311.57629395 247.80036926]
[318.97146606 260.85070801]
[323.20333862 275.24139404]
[324.04989624 290.21746826]
[321.46670532 304.99337769]
[315.58932495 318.79397583]
[306.72604370 330.89529419]
[295.34182739 340.66256714]
[282.03384399 347.58340454]
[267.50024414 351.29473877]
[252.50338745 351.60186768]
[237.83000183 348.48870850]
[224.24981689 342.11859131]
[212.47521973 332.82562256]
[203.12390137 321.09735107]
[196.68585205 307.54739380]
[205.09297180 317.32919312]
[204.59819031 329.81674194]
[196.01173401 338.33724976]
[195.56513977 353.33059692]
[195.11853027 368.32397461]
[207.34559631 380.83468628]
[206.75318909 397.98004150]
[194.19596863 409.16732788]
[193.97264099 424.16567993]
[193.74931335 439.16400146]
[193.52598572 454.16235352]
[193.30265808 469.16067505]
[193.07933044 484.15902710]
[192.85600281 499.15734863]
[192.63267517 514.15570068]
[207.06542969 518.61352539]
[219.65686035 526.95812988]
[229.38626099 538.51306152]
[235.46488953 552.34155273]
[237.39997864 567.32257080]
[235.03468323 582.24176025]
[228.56072998 595.88964844]
[218.50294495 607.15985107]
[205.67665100 615.13873291]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 201]
[12 200]
[13 199]
[14 198]
[15 197]
[16 196]
[17 195]
[18 194]
[22 191]
[23 190]
[24 189]
[26 186]
[27 160]
[28 159]
[30 156]
[31 155]
[32 154]
[33 153]
[34 152]
[35 151]
[36 150]
[37 137]
[38 136]
[39 135]
[40 134]
[42 132]
[46 131]
[47 130]
[48 129]
[49 128]
[50 127]
[69 126]
[70 125]
[71 124]
[72 123]
[73 122]
[75 119]
[76 118]
[86 117]
[87 116]
[89 114]
[90 113]
[91 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
