%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCGAACAAUAUUAAUACGGAGUAUCCCUAUCAUGUUCCUUCCCCAUCCGAUACACAAAACAGUCCCCCAACUCUUACUCACACUCCGCAUAAUAUGGUxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[89.16342163 626.27008057]
[76.00855255 619.03863525]
[63.60065079 610.58941650]
[52.05208969 600.99908447]
[41.46745682 590.35430908]
[31.94260979 578.75164795]
[23.56381226 566.29614258]
[16.40694427 553.10052490]
[10.53681850 539.28436279]
[6.00659943 524.97271729]
[2.85731363 510.29531860]
[1.11748254 495.38500977]
[0.80286241 480.37680054]
[1.91630256 465.40667725]
[4.44771910 450.61016846]
[8.37418747 436.12127686]
[13.66014671 422.07125854]
[20.25772667 408.58731079]
[28.10717583 395.79156494]
[37.13740921 383.79992676]
[47.26664352 372.72094727]
[58.40314102 362.65502930]
[70.44605255 353.69326782]
[83.28631592 345.91687012]
[96.80763245 339.39624023]
[110.88755798 334.19039917]
[125.39857483 330.34655762]
[122.95284271 315.54730225]
[120.50711823 300.74801636]
[108.65733337 287.80392456]
[115.28421783 270.62353516]
[112.61842346 255.86231995]
[109.95262909 241.10110474]
[107.28683472 226.33988953]
[104.62104034 211.57867432]
[94.05419922 222.22488403]
[79.12657928 220.75314331]
[70.84225464 208.24833679]
[75.30813599 193.92855835]
[89.23212433 188.34982300]
[102.34902954 195.62319946]
[93.32963562 183.76994324]
[99.58924866 169.23970032]
[98.02872467 154.32110596]
[96.46820068 139.40249634]
[94.90767670 124.48389435]
[93.34716034 109.56528473]
[86.57369232 122.94886780]
[74.71691895 132.13673401]
[60.06620026 135.35485840]
[45.45035172 131.98188782]
[33.69147110 122.66905975]
[27.06001091 109.21455383]
[26.83640289 94.21621704]
[33.06382370 80.56999969]
[44.53985214 70.91077423]
[59.04865265 67.10357666]
[73.78879547 69.88352203]
[85.91419983 78.71384430]
[93.08397675 91.89077759]
[94.19963074 76.93231964]
[95.31527710 61.97386932]
[96.43092346 47.01541519]
[89.74146271 32.67799377]
[98.40394592 20.56144714]
[96.28932190 5.71124983]
[91.04260254 -8.34122181]
[85.79588318 -22.39369202]
[80.54917145 -36.44616318]
[75.30245209 -50.49863434]
[70.05573273 -64.55110931]
[64.80901337 -78.60357666]
[52.73342514 -88.82565308]
[55.53021240 -103.45532227]
[50.28349304 -117.50778961]
[35.52531052 -114.63623047]
[20.49576187 -114.23310089]
[5.60486364 -116.30940247]
[-8.74114704 -120.80849457]
[-22.15090179 -127.60763550]
[-34.25857544 -136.52134705]
[-44.73385620 -147.30644226]
[-53.29097366 -159.66870117]
[-59.69648361 -173.27088928]
[-63.77563858 -187.74189758]
[-65.41716003 -202.68698120]
[-64.57625580 -217.69839478]
[-61.27587509 -232.36663818]
[-55.60605621 -246.29154968]
[-47.72146988 -259.09323120]
[-37.83721542 -270.42245483]
[-26.22294235 -279.97015381]
[-13.19549942 -287.47586060]
[0.88971859 -292.73480225]
[15.64845562 -295.60351562]
[30.67808151 -296.00375366]
[45.56858063 -293.92459106]
[59.91372299 -289.42272949]
[73.32216644 -282.62100220]
[85.42812347 -273.70495605]
[95.90132141 -262.91784668]
[104.45606232 -250.55393982]
[110.85894775 -236.95053101]
[114.93531799 -222.47872925]
[116.57395935 -207.53332520]
[115.73016357 -192.52207947]
[112.42695618 -177.85446167]
[106.75445557 -163.93064880]
[98.86740112 -151.13049316]
[88.98096466 -139.80316162]
[77.36485291 -130.25770569]
[64.33596802 -122.75450897]
[69.58268738 -108.70204163]
[81.28298950 -99.48509216]
[78.86148834 -83.85029602]
[84.10820007 -69.79782104]
[89.35491943 -55.74535370]
[94.60163879 -41.69288254]
[99.84835815 -27.64041138]
[105.09507751 -13.58793926]
[110.34179688 0.46453160]
[111.86217499 -14.45821762]
[116.31560516 -28.78186798]
[123.52469635 -41.93591690]
[133.20231628 -53.39644241]
[144.96301270 -62.70697403]
[158.33836365 -69.49668121]
[172.79562378 -73.49512482]
[187.75897217 -74.54306030]
[202.63243103 -72.59873962]
[216.82357788 -67.73960114]
[229.76721191 -60.15919495]
[240.94776917 -50.15943527]
[249.91993713 -38.13861465]
[256.32635498 -24.57551575]
[259.91186523 -10.01034927]
[260.53369141 4.97675705]
[258.16699219 19.78887367]
[252.90608215 33.83604050]
[244.96049500 46.55876160]
[234.64669800 57.45029831]
[222.37548828 66.07684326]
[208.63562012 72.09480286]
[193.97433472 75.26449585]
[178.97560120 75.45965576]
[164.23681641 72.67252350]
[150.34501648 67.01410675]
[137.85348511 58.70977020]
[127.25978851 48.09028244]
[118.98585510 35.57860947]
[113.36240387 21.67709541]
[120.13166046 34.94459152]
[111.38938141 48.13106537]
[110.27373505 63.08951950]
[109.15808105 78.04797363]
[108.04243469 93.00642395]
[108.26576233 108.00476074]
[109.82628632 122.92337036]
[111.38681030 137.84196472]
[112.94733429 152.76057434]
[114.50785065 167.67918396]
[123.63887024 180.59951782]
[117.26763153 194.06268311]
[119.38225555 208.91287231]
[122.04804993 223.67408752]
[124.71384430 238.43531799]
[127.37964630 253.19653320]
[130.04544067 267.95773315]
[140.17710876 275.93972778]
[142.09356689 288.28927612]
[135.30639648 298.30230713]
[137.75212097 313.10156250]
[140.19784546 327.90084839]
[155.17401123 326.87164307]
[170.18019104 327.27069092]
[185.08049011 329.09436035]
[199.73995972 332.32617188]
[214.02584839 336.93682861]
[227.80877686 342.88458252]
[240.96391296 350.11557007]
[253.37211609 358.56430054]
[264.92102051 368.15426636]
[275.50604248 378.79858398]
[285.03131104 390.40093994]
[293.41058350 402.85617065]
[300.56793213 416.05151367]
[306.43856812 429.86746216]
[310.96929932 444.17889404]
[314.11911011 458.85620117]
[315.85949707 473.76644897]
[316.17465210 488.77462769]
[315.06176758 503.74481201]
[312.53088379 518.54144287]
[308.60494995 533.03045654]
[303.31948853 547.08068848]
[296.72241211 560.56481934]
[288.87341309 573.36083984]
[279.84362793 585.35284424]
[269.71481323 596.43218994]
[258.57867432 606.49853516]
[246.53608704 615.46069336]
[233.69610596 623.23760986]
[220.17503357 629.75872803]
[206.09529114 634.96502686]
[191.58441162 638.80938721]
[176.77380371 641.25701904]
[161.79760742 642.28570557]
[146.79144287 641.88610840]
[131.89120483 640.06188965]
[117.23184967 636.82952881]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 173]
[28 172]
[29 171]
[31 168]
[32 167]
[33 166]
[34 165]
[35 164]
[41 163]
[43 161]
[44 160]
[45 159]
[46 158]
[47 157]
[60 156]
[61 155]
[62 154]
[63 153]
[65 151]
[66 121]
[67 120]
[68 119]
[69 118]
[70 117]
[71 116]
[72 115]
[74 113]
[75 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
