%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUUUAAUUCCGCUUCAAAUAAUGAGAAAAAACUUACAACAGUUUUGAUCAAUUAACCUUCAAUUGCCAUGAUAAAUAUGAUUUUCUCAUUCUGGGAGxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[158.02685547 642.90753174]
[151.99087524 629.15979004]
[147.45040894 614.84838867]
[144.45689392 600.13543701]
[143.04425049 585.18768311]
[143.22850037 570.17437744]
[145.00753784 555.26580811]
[148.36120605 540.63073730]
[153.25151062 526.43505859]
[159.62304688 512.83959961]
[167.40362549 499.99847412]
[176.50506592 488.05712891]
[186.82424927 477.15087891]
[198.24424744 467.40328979]
[210.63568115 458.92480469]
[223.85812378 451.81152344]
[218.19534302 437.92147827]
[212.53254700 424.03146362]
[206.86976624 410.14141846]
[201.20698547 396.25140381]
[187.42135620 390.72943115]
[181.48060608 376.72366333]
[187.36602783 362.30145264]
[175.39648438 353.43695068]
[177.35140991 337.73699951]
[171.68861389 323.84695435]
[166.02583313 309.95693970]
[160.36303711 296.06692505]
[143.03680420 292.65032959]
[131.12503052 279.40042114]
[129.53764343 261.49621582]
[139.09825134 246.08998108]
[133.02441406 232.37471008]
[126.95058441 218.65943909]
[120.87674713 204.94418335]
[114.80291748 191.22891235]
[112.79822540 206.09434509]
[104.98998260 218.90182495]
[92.69400787 227.49304199]
[77.98239899 230.42024231]
[63.33431244 227.19013977]
[51.21821213 218.34706116]
[43.67586899 205.38121033]
[41.97830582 190.47758484]
[46.41159058 176.14768982]
[56.22863388 164.80636597]
[69.77509308 158.36482239]
[84.76815033 157.90858459]
[98.68122101 163.51452637]
[109.17058563 174.23934937]
[105.84832764 159.61189270]
[102.52606964 144.98442078]
[99.20380402 130.35696411]
[95.88154602 115.72950745]
[86.41867065 108.94016266]
[83.92377472 97.56401825]
[89.67687988 87.43766022]
[86.57276917 72.76235962]
[83.46865845 58.08705902]
[80.36455536 43.41175461]
[67.74211884 30.00445747]
[73.82839203 13.54468250]
[70.50613403 -1.08277798]
[67.18387604 -15.71023846]
[56.58222198 -27.45398140]
[61.30847168 -41.57884598]
[57.98620987 -56.20630646]
[47.50823593 -63.72793198]
[45.04225540 -75.97957611]
[51.37555313 -86.28568268]
[48.27144241 -100.96098328]
[43.88708496 -86.61604309]
[34.91624451 -74.59423065]
[22.41280556 -66.30785370]
[7.84565783 -62.73039627]
[-7.07386351 -64.28212738]
[-20.59302902 -70.78076172]
[-31.12361908 -81.46282959]
[-37.42850876 -95.07342529]
[-38.76701355 -110.01358795]
[-34.98187637 -124.52816010]
[-26.51778030 -136.91198730]
[-14.36907578 -145.71022034]
[0.03702107 -149.88926697]
[15.00809479 -148.95816040]
[28.78535843 -143.02629089]
[39.75027466 -132.79054260]
[46.61516190 -119.45188904]
[47.06176758 -134.44523621]
[47.50837326 -149.43858337]
[47.95497894 -164.43193054]
[48.40158463 -179.42529297]
[48.62491226 -194.42362976]
[48.62491226 -209.42362976]
[48.62491226 -224.42362976]
[34.12739182 -228.66610718]
[21.41311455 -236.82231140]
[11.51276588 -248.23107910]
[5.22892380 -261.96752930]
[3.07099152 -276.91812134]
[5.21390295 -291.87084961]
[11.48394203 -305.61361694]
[21.37282562 -317.03231812]
[34.07890320 -325.20129395]
[48.57215500 -329.45831299]
[63.67766953 -329.45831299]
[78.17092133 -325.20129395]
[90.87699890 -317.03231812]
[100.76588440 -305.61361694]
[107.03591919 -291.87084961]
[109.17883301 -276.91812134]
[107.02090454 -261.96752930]
[100.73706055 -248.23107910]
[90.83670807 -236.82231140]
[78.12242889 -228.66610718]
[63.62491226 -224.42362976]
[63.62491226 -209.42362976]
[63.62491226 -194.42362976]
[66.30859375 -190.47306824]
[66.53905487 -184.79469299]
[63.39493561 -178.97868347]
[62.94832993 -163.98533630]
[62.50172424 -148.99198914]
[62.05511856 -133.99862671]
[61.60850906 -119.00527954]
[62.94674683 -104.06509399]
[66.05085754 -89.38979340]
[78.46680450 -76.98773193]
[72.61367035 -59.52856827]
[75.93592834 -44.90110779]
[86.29995728 -34.20361710]
[81.81133270 -19.03249741]
[85.13359070 -4.40503740]
[88.45585632 10.22242260]
[98.52089691 16.93222237]
[101.40843964 29.09141159]
[95.03985596 40.30764771]
[98.14396667 54.98294830]
[101.24807739 69.65824890]
[104.35218811 84.33355713]
[115.88227844 96.51686859]
[110.50901031 112.40724945]
[113.83126831 127.03470612]
[117.15352631 141.66217041]
[120.47578430 156.28962708]
[123.79804993 170.91708374]
[128.51817322 185.15507507]
[134.59201050 198.87034607]
[140.66584778 212.58561707]
[146.73968506 226.30087280]
[152.81352234 240.01614380]
[165.27502441 241.00532532]
[176.07086182 247.16313171]
[183.18266296 257.26766968]
[185.31098938 269.36608887]
[182.11238098 281.15173340]
[174.25306702 290.40411377]
[179.91586304 304.29415894]
[185.57864380 318.18417358]
[191.24142456 332.07421875]
[203.61601257 341.93222046]
[201.25604248 356.63867188]
[215.54739380 362.83505249]
[221.09239197 377.00219727]
[215.09701538 390.58862305]
[220.75979614 404.47863770]
[226.42257690 418.36868286]
[232.08537292 432.25869751]
[237.74815369 446.14871216]
[252.17503357 441.98974609]
[266.96228027 439.38781738]
[281.94229126 438.37246704]
[296.94537354 438.95513916]
[311.80151367 441.12930298]
[326.34240723 444.87026978]
[340.40325928 450.13568115]
[353.82476807 456.86584473]
[366.45486450 464.98452759]
[378.15042114 474.39974976]
[388.77890015 485.00479126]
[398.21994019 496.67950439]
[406.36648560 509.29162598]
[413.12631226 522.69824219]
[418.42276001 536.74743652]
[422.19583130 551.28002930]
[424.40280151 566.13134766]
[425.01864624 581.13305664]
[424.03637695 596.11529541]
[421.46713257 610.90826416]
[417.34002686 625.34429932]
[411.70181274 639.25982666]
[404.61639404 652.49725342]
[396.16406250 664.90649414]
[386.44055176 676.34704590]
[375.55606079 686.68914795]
[363.63391113 695.81573486]
[350.80917358 703.62335205]
[337.22720337 710.02349854]
[323.04187012 714.94372559]
[308.41390991 718.32824707]
[293.50906372 720.13867188]
[278.49621582 720.35455322]
[263.54550171 718.97338867]
[248.82626343 716.01092529]
[234.50532532 711.50061035]
[220.74494934 705.49359131]
[207.70103455 698.05798340]
[195.52140808 689.27795410]
[184.34405518 679.25305176]
[174.29560852 668.09680176]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 169]
[17 168]
[18 167]
[19 166]
[20 165]
[23 162]
[25 160]
[26 159]
[27 158]
[28 157]
[32 151]
[33 150]
[34 149]
[35 148]
[36 147]
[50 146]
[51 145]
[52 144]
[53 143]
[54 142]
[57 140]
[58 139]
[59 138]
[60 137]
[62 134]
[63 133]
[64 132]
[66 130]
[67 129]
[70 127]
[71 126]
[88 125]
[89 124]
[90 123]
[91 122]
[92 121]
[93 118]
[94 117]
[95 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
