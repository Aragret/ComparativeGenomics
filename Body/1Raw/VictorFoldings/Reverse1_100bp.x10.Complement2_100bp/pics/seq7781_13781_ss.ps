%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[148.81503296 608.74493408]
[159.12675476 597.67584229]
[172.35528564 590.33685303]
[169.47001648 575.61694336]
[166.58474731 560.89709473]
[163.69946289 546.17718506]
[153.65853882 535.17584229]
[158.59687805 520.14508057]
[155.71160889 505.42520142]
[152.82632446 490.70532227]
[149.94105530 475.98541260]
[139.90013123 464.98410034]
[144.83845520 449.95336914]
[141.95318604 435.23345947]
[139.06791687 420.51358032]
[129.82252502 432.32556152]
[114.95004272 434.27722168]
[102.97007751 425.25054932]
[100.74531555 410.41644287]
[109.55020142 398.27255249]
[124.34088898 395.77545166]
[136.64408875 404.35476685]
[127.62469482 392.50152588]
[133.88430786 377.97128296]
[132.32379150 363.05267334]
[130.76325989 348.13406372]
[129.20274353 333.21545410]
[127.64221954 318.29687500]
[125.85974884 303.40313721]
[123.85573578 288.53762817]
[121.85172272 273.67208862]
[112.48341370 262.09262085]
[118.30763245 247.38246155]
[106.84849548 234.09129333]
[113.98397064 217.11581421]
[111.75885010 202.28176880]
[109.53373718 187.44772339]
[107.30861664 172.61369324]
[105.08350372 157.77964783]
[102.85838318 142.94560242]
[99.86360931 128.24758911]
[95.99930573 113.75389862]
[86.18740082 103.79307556]
[89.53617096 90.21819305]
[85.56407928 75.75366974]
[81.59197998 61.28914642]
[77.61988068 46.82462311]
[73.54021454 32.39006805]
[69.35320282 17.98628807]
[55.76854324 5.55493641]
[60.61374283 -11.31192493]
[56.21274185 -25.65177155]
[51.81174469 -39.99161911]
[46.90537262 -25.81672859]
[35.63385391 -15.91961479]
[20.94353676 -12.88735962]
[6.67443419 -17.51258659]
[-3.44354367 -28.58627319]
[-6.76558208 -43.21378326]
[-2.42330813 -57.57152176]
[8.44821835 -67.90641022]
[23.00720596 -71.51692963]
[37.44797134 -67.45931244]
[47.99528885 -56.79496002]
[45.77017212 -71.62900543]
[43.54505539 -86.46305084]
[41.31993866 -101.29708862]
[39.09482193 -116.13113403]
[36.75933456 -130.94819641]
[32.27257919 -138.90476990]
[34.38907242 -145.98588562]
[32.16395569 -160.81993103]
[29.93883896 -175.65396118]
[27.71372223 -190.48800659]
[15.28820324 -199.88185120]
[13.24293423 -214.95738220]
[22.27509880 -226.74531555]
[20.04998207 -241.57936096]
[17.82486534 -256.41342163]
[15.59974861 -271.24746704]
[13.37463093 -286.08148193]
[0.94911200 -295.47534180]
[-1.09615660 -310.55087280]
[7.93600845 -322.33880615]
[5.71089125 -337.17285156]
[1.34309459 -345.19534302]
[3.56478286 -352.24414062]
[1.56076920 -367.10968018]
[-7.95088339 -379.75241089]
[-1.98332143 -393.39932251]
[-3.98733521 -408.26483154]
[-18.90007019 -410.73501587]
[-32.42143250 -417.49255371]
[-43.34911346 -427.93655396]
[-50.71142960 -441.13833618]
[-53.85372925 -455.92407227]
[-52.49660110 -470.97894287]
[-46.76071930 -484.96435547]
[-37.15612030 -496.63665771]
[-24.53682899 -504.95800781]
[-10.02495098 -509.18847656]
[5.08912945 -508.95187378]
[19.46147919 -504.26925659]
[31.81411743 -495.55697632]
[41.04865646 -483.58975220]
[46.34396744 -469.43167114]
[47.22919464 -454.34167480]
[43.62562561 -439.66156006]
[35.85368347 -426.69668579]
[24.60444832 -416.59982300]
[10.87819290 -410.26885986]
[12.88220692 -395.40332031]
[22.25051880 -383.82385254]
[16.42629814 -369.11370850]
[18.43031120 -354.24816895]
[20.54493523 -339.39797974]
[22.77005196 -324.56393433]
[34.86329269 -315.94479370]
[37.33119202 -300.93267822]
[28.20867538 -288.30661011]
[30.43379211 -273.47256470]
[32.65890884 -258.63851929]
[34.88402557 -243.80448914]
[37.10914230 -228.97044373]
[49.20238113 -220.35131836]
[51.67028427 -205.33918762]
[42.54776764 -192.71313477]
[44.77288437 -177.87908936]
[46.99800110 -163.04504395]
[49.22311783 -148.21099854]
[51.55860519 -133.39393616]
[55.75064087 -127.30717468]
[53.92886353 -118.35625458]
[56.15398026 -103.52220917]
[58.37909698 -88.68816376]
[60.60421753 -73.85411835]
[62.82933426 -59.02007675]
[66.15159607 -44.39261627]
[70.55258942 -30.05277061]
[74.95359039 -15.71292210]
[85.48980713 -9.77031040]
[89.27371216 2.14043474]
[83.75698853 13.79927635]
[87.94400024 28.20305824]
[92.82962799 33.74854660]
[92.08441162 42.85252762]
[96.05650330 57.31705093]
[100.02860260 71.78157043]
[104.00069427 86.24610138]
[113.81259918 96.20692444]
[110.46382904 109.78180695]
[115.75399780 117.22840881]
[114.38566589 124.49129486]
[121.92244720 111.52221680]
[135.98913574 106.31375885]
[150.15464783 111.24714661]
[157.94268799 124.06691742]
[155.79267883 138.91203308]
[144.68757629 148.99551392]
[129.70446777 149.70732117]
[117.69242859 140.72048950]
[119.91754150 155.55451965]
[122.14266205 170.38856506]
[124.36777496 185.22261047]
[126.59289551 200.05665588]
[128.81800842 214.89070129]
[138.70753479 223.17080688]
[140.25544739 235.57192993]
[133.17315674 245.37844849]
[142.68481445 258.02117920]
[136.71725464 271.66806030]
[138.72126770 286.53359985]
[140.72528076 301.39913940]
[144.45741272 306.85647583]
[144.81893921 312.52801514]
[142.56082153 316.73632812]
[144.12133789 331.65493774]
[145.68186951 346.57354736]
[147.24238586 361.49215698]
[148.80291748 376.41076660]
[157.93392944 389.33108521]
[151.56269836 402.79425049]
[153.78781128 417.62829590]
[156.67308044 432.34817505]
[159.55834961 447.06808472]
[169.80564880 459.12228394]
[164.66094971 473.10015869]
[167.54621887 487.82003784]
[170.43148804 502.53994751]
[173.31677246 517.25982666]
[183.56407166 529.31402588]
[178.41935730 543.29193115]
[181.30462646 558.01177979]
[184.18991089 572.73168945]
[187.07518005 587.45159912]
[202.09544373 589.25347900]
[215.82287598 595.61059570]
[226.91262817 605.90002441]
[234.27822876 619.11376953]
[237.19805908 633.95727539]
[235.38607788 648.97631836]
[229.01979065 662.69952393]
[218.72291565 673.78234863]
[205.50424194 681.13909912]
[190.65876770 684.04901123]
[175.64094543 682.22692871]
[161.92202759 675.85144043]
[150.84608459 665.54718018]
[143.49819946 652.32354736]
[140.59826660 637.47613525]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 195]
[4 194]
[5 193]
[6 192]
[8 190]
[9 189]
[10 188]
[11 187]
[13 185]
[14 184]
[15 183]
[22 182]
[24 180]
[25 179]
[26 178]
[27 177]
[28 176]
[29 173]
[30 172]
[31 171]
[33 169]
[35 166]
[36 165]
[37 164]
[38 163]
[39 162]
[40 161]
[41 153]
[42 151]
[44 149]
[45 148]
[46 147]
[47 146]
[48 144]
[49 143]
[51 140]
[52 139]
[53 138]
[64 137]
[65 136]
[66 135]
[67 134]
[68 133]
[69 131]
[71 130]
[72 129]
[73 128]
[74 127]
[77 124]
[78 123]
[79 122]
[80 121]
[81 120]
[84 117]
[85 116]
[87 115]
[88 114]
[90 112]
[91 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
