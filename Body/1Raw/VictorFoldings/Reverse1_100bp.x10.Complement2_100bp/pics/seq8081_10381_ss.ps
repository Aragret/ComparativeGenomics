%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[53.55030823 327.57165527]
[55.29032516 342.48770142]
[55.28688812 357.50491333]
[53.54005051 372.42016602]
[50.07342911 387.03179932]
[44.93390656 401.14212036]
[38.19099426 414.56039429]
[29.93587875 427.10510254]
[20.28020287 438.60659790]
[9.35454655 448.90933228]
[-2.69333243 457.87399292]
[-15.70049953 465.37933350]
[-29.49104881 471.32385254]
[-43.87847900 475.62713623]
[-58.66821289 478.23104858]
[-73.66024017 479.10031128]
[-88.65180969 478.22317505]
[-103.44017792 475.61154175]
[-117.82535553 471.30068970]
[-131.61277771 465.34893799]
[-144.61601257 457.83679199]
[-156.65919495 448.86581421]
[-167.57945251 438.55734253]
[-177.22909546 427.05078125]
[-185.47763062 414.50177002]
[-192.21350098 401.07995605]
[-197.34562683 386.96691895]
[-200.80458069 372.35351562]
[-202.54360962 357.43731689]
[-202.53916931 342.42013550]
[-200.79133606 327.50497437]
[-197.32374573 312.89361572]
[-192.18327332 298.78359985]
[-185.43946838 285.36578369]
[-177.18351746 272.82162476]
[-167.52706909 261.32077026]
[-156.60072327 251.01876831]
[-144.55224609 242.05491638]
[-131.54458618 234.55044556]
[-117.75363922 228.60684204]
[-103.36592102 224.30450439]
[-88.57601166 221.70159912]
[-73.58392334 220.83334351]
[-58.59241486 221.71145630]
[-43.80421829 224.32409668]
[-29.41933441 228.63589478]
[-15.63230133 234.58856201]
[-2.62957215 242.10159302]
[6.33112383 230.07220459]
[7.72914457 215.24336243]
[22.17808151 208.79829407]
[31.13877678 196.76892090]
[39.91938019 184.60746765]
[48.51794434 172.31663513]
[57.11650848 160.02578735]
[65.71507263 147.73495483]
[74.31363678 135.44410706]
[82.91220093 123.15327454]
[89.39169312 109.62493134]
[86.24539948 96.00170135]
[96.20452118 86.18805695]
[100.39153290 71.78427887]
[96.81387329 56.37288666]
[107.79624939 46.31124115]
[111.98326111 31.90745926]
[99.35456848 25.40299034]
[88.14917755 16.67891312]
[78.75228119 6.03713751]
[71.48655701 -6.15453577]
[66.60104370 -19.47512627]
[64.26263428 -33.46501541]
[64.55036163 -47.64179611]
[67.45273590 -61.51691437]
[72.86817169 -74.61251068]
[80.60857391 -86.47785950]
[90.40586853 -96.70490265]
[101.92124939 -104.94226837]
[114.75693512 -110.90735626]
[128.46990967 -114.39601898]
[142.58715820 -115.28955078]
[156.62207031 -113.55873871]
[161.23608398 -127.83147430]
[165.85009766 -142.10420227]
[170.46409607 -156.37693787]
[175.07810974 -170.64967346]
[177.63394165 -185.43032837]
[178.08055115 -200.42367554]
[170.75756836 -214.44810486]
[178.87037659 -226.93936157]
[179.31697083 -241.93270874]
[179.76358032 -256.92605591]
[180.21018982 -271.91940308]
[180.65679932 -286.91275024]
[181.10339355 -301.90609741]
[181.55000305 -316.89947510]
[181.99661255 -331.89282227]
[167.63183594 -336.56506348]
[155.16603088 -345.09619141]
[145.60975647 -356.79467773]
[139.73768616 -370.71212769]
[138.02584839 -385.72033691]
[140.61300659 -400.60263062]
[147.28942871 -414.15261841]
[157.51391602 -425.27182007]
[170.45758057 -433.05886841]
[185.07115173 -436.88250732]
[200.16996765 -436.43276978]
[214.53004456 -431.74609375]
[226.98727417 -423.20242310]
[236.53179932 -411.49435425]
[242.38987732 -397.57101440]
[244.08663940 -382.56109619]
[241.48452759 -367.68139648]
[234.79449463 -354.13812256]
[224.55885315 -343.02920532]
[211.60736084 -335.25515747]
[196.98995972 -331.44619751]
[196.54335022 -316.45285034]
[196.09675598 -301.45950317]
[195.65014648 -286.46615601]
[195.20353699 -271.47280884]
[194.75692749 -256.47946167]
[194.31031799 -241.48609924]
[193.86372375 -226.49275208]
[201.21865845 -213.54075623]
[193.07389832 -199.97706604]
[192.62728882 -184.98371887]
[199.93009949 -198.08596802]
[210.72885132 -208.49688721]
[224.08930969 -215.31582642]
[238.85569763 -217.95288086]
[253.75054932 -216.17991638]
[267.48532104 -210.15031433]
[278.87179565 -200.38571167]
[286.92498779 -187.73080444]
[290.94815063 -173.28041077]
[290.59329224 -158.28460693]
[285.89105225 -144.04069519]
[277.24829102 -131.78089905]
[265.41262817 -122.56583405]
[251.40802002 -117.19268799]
[236.44596863 -116.12628937]
[221.82086182 -119.45888519]
[208.79791260 -126.90219116]
[198.50373840 -137.81227112]
[191.82887268 -151.24530029]
[189.35084534 -166.03565979]
[184.73683167 -151.76292419]
[180.12281799 -137.49020386]
[175.50881958 -123.21746063]
[170.89480591 -108.94473267]
[184.68327332 -101.16384888]
[196.56959534 -90.69712067]
[206.03881836 -77.99499512]
[212.68008423 -63.60481644]
[216.20445251 -48.14727020]
[216.45748901 -32.28957748]
[213.42596436 -16.71672058]
[207.23866272 -2.10184288]
[198.16073608 10.92284298]
[186.58250427 21.79340935]
[173.00254822 30.03862190]
[158.00634766 35.30037689]
[142.24092102 37.34924316]
[126.38703918 36.09447098]
[122.20002747 50.49825287]
[126.07717133 64.87938690]
[114.79531860 75.97129059]
[110.60830688 90.37506866]
[113.75460052 103.99829865]
[103.79547882 113.81194305]
[113.99150848 102.81008148]
[126.65923309 94.77709198]
[140.95843506 90.24578094]
[155.94070435 89.51668549]
[170.61231995 92.63816071]
[184.00016785 99.40317535]
[195.21627808 109.36303711]
[203.51673889 121.85713196]
[208.35099792 136.05677795]
[209.39840698 151.02017212]
[206.58950806 165.75482178]
[200.11061096 179.28346252]
[190.39143372 190.70875549]
[178.07659912 199.27291870]
[163.98292542 204.40792847]
[149.04518127 205.77319336]
[134.25415039 203.27815247]
[120.59085083 197.08830261]
[108.96153259 187.61418152]
[100.13751984 175.48419189]
[94.70407104 161.50285339]
[93.02158356 146.59751892]
[95.20304108 131.75184631]
[86.60447693 144.04267883]
[78.00591278 156.33351135]
[69.40734863 168.62435913]
[60.80878448 180.91519165]
[52.21022034 193.20602417]
[51.25730515 199.74847412]
[47.68033981 204.16461182]
[43.16815567 205.72961426]
[34.20745850 217.75900269]
[32.16851044 233.44827271]
[18.36050224 239.03289795]
[9.39980602 251.06228638]
[20.32074738 261.37002563]
[29.97116089 272.87594604]
[38.22053528 285.42440796]
[44.95730972 298.84576416]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 206]
[49 205]
[51 203]
[52 202]
[53 199]
[54 198]
[55 197]
[56 196]
[57 195]
[58 194]
[59 171]
[61 169]
[62 168]
[64 166]
[65 165]
[81 151]
[82 150]
[83 149]
[84 148]
[85 147]
[86 127]
[87 126]
[89 124]
[90 123]
[91 122]
[92 121]
[93 120]
[94 119]
[95 118]
[96 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
