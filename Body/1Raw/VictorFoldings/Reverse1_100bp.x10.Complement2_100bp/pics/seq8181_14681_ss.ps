%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[-0.87372869 494.68960571]
[-6.69801950 480.53558350]
[-5.26592636 465.29721069]
[3.09346581 452.47616577]
[16.45923042 445.01864624]
[16.01262474 430.02529907]
[15.56601810 415.03195190]
[15.11941242 400.03857422]
[14.67280674 385.04522705]
[14.22620010 370.05187988]
[13.77959442 355.05853271]
[11.83411217 353.04031372]
[10.57085514 350.12985229]
[10.33366489 346.58312988]
[11.36745644 342.77581787]
[13.77959442 339.16531372]
[14.22620010 324.17196655]
[14.67280674 309.17861938]
[7.64760303 322.43179321]
[-2.02847028 333.89361572]
[-13.91521645 343.04269409]
[-27.47186661 349.46273804]
[-42.08168793 352.86175537]
[-57.08002472 353.08505249]
[-71.78455353 350.12249756]
[-85.52632141 344.10885620]
[-97.68016815 335.31771851]
[-107.69317627 324.14901733]
[-115.10981750 311.11087036]
[-119.59268188 296.79641724]
[-120.93782806 281.85684204]
[-119.08406830 266.97183228]
[-114.11573792 252.81854248]
[-106.25885010 240.04084778]
[-95.87084961 229.22006226]
[-83.42432404 220.84844971]
[-69.48550415 215.30686951]
[-54.68850708 212.84741211]
[-39.70650482 213.58197021]
[-25.22107315 217.47714233]
[-11.89120865 224.35571289]
[-0.32332745 233.90473938]
[8.95630836 245.68983459]
[15.52553749 259.17483521]
[19.08550262 273.74627686]
[19.47390175 288.74554443]
[25.75126266 275.12222290]
[32.02862167 261.49890137]
[38.30598450 247.87559509]
[44.58334351 234.25228882]
[50.24613190 220.36225891]
[55.28304672 206.23323059]
[60.31996155 192.10420227]
[65.35688019 177.97517395]
[61.26966095 160.90878296]
[75.39585876 149.09642029]
[80.22186279 134.89396667]
[85.04785919 120.69150543]
[89.87385559 106.48905182]
[94.48786163 92.21631622]
[98.88886261 77.87646484]
[103.28985596 63.53662109]
[107.69085693 49.19677353]
[112.09185791 34.85692596]
[106.74932861 23.11724091]
[110.71014404 11.26415348]
[121.33367157 5.47906876]
[124.54694366 -9.17271900]
[126.32941437 -24.06643677]
[128.11187744 -38.96015167]
[129.89434814 -53.85387039]
[131.67680359 -68.74758911]
[133.45927429 -83.64130402]
[135.24174500 -98.53501892]
[120.16570282 -104.10250092]
[106.85718536 -113.09676361]
[96.08039856 -124.99649048]
[88.45301056 -139.11369324]
[84.41074371 -154.63342285]
[84.18251801 -170.66090393]
[87.77746582 -186.27302551]
[94.98464203 -200.57157898]
[105.38539124 -212.73493958]
[118.37767792 -222.06517029]
[133.21093750 -228.02824402]
[149.02940369 -230.28443909]
[150.36763000 -245.22462463]
[151.70587158 -260.16482544]
[153.04411316 -275.10501099]
[153.82542419 -290.08462524]
[154.04875183 -305.08297729]
[154.27207947 -320.08129883]
[154.49540710 -335.07965088]
[154.49540710 -350.07965088]
[154.27207947 -365.07800293]
[154.04875183 -380.07632446]
[153.82542419 -395.07467651]
[139.58236694 -400.31866455]
[128.19804382 -410.35665894]
[121.21208954 -423.83111572]
[119.56930542 -438.91970825]
[123.49186707 -453.58184814]
[132.44927979 -465.83456421]
[145.23011780 -474.02081299]
[160.10588074 -477.03344727]
[175.06474304 -474.46505737]
[188.08364868 -466.66296387]
[197.40190125 -454.68237305]
[201.75926208 -440.14355469]
[200.56646729 -425.01272583]
[193.98478699 -411.33624268]
[182.90438843 -400.96374512]
[168.82376099 -395.29800415]
[169.04708862 -380.29965210]
[169.27041626 -365.30133057]
[169.49374390 -350.30297852]
[172.23594666 -346.39282227]
[172.55093384 -340.71850586]
[169.49374390 -334.85632324]
[169.27041626 -319.85797119]
[169.04708862 -304.85964966]
[168.82376099 -289.86129761]
[181.24108887 -298.27618408]
[195.60687256 -293.96054077]
[201.33117676 -280.09576416]
[194.19425964 -266.90240479]
[179.45719910 -264.10614014]
[167.98428345 -273.76675415]
[166.64605713 -258.82656860]
[165.30781555 -243.88639832]
[163.96958923 -228.94621277]
[177.30857849 -224.74195862]
[189.48049927 -217.84085083]
[199.94699097 -208.54510498]
[208.24443054 -197.26292419]
[214.00457764 -184.49058533]
[216.97085571 -170.79055786]
[217.00979614 -156.76683044]
[214.11705017 -143.03819275]
[208.41766357 -130.21095276]
[200.16072083 -118.85218811]
[189.70841980 -109.46467590]
[177.52021790 -102.46459198]
[164.13258362 -98.16311646]
[150.13545227 -96.75255585]
[148.35299683 -81.85884094]
[146.57052612 -66.96511841]
[144.78805542 -52.07140350]
[143.00559998 -37.17768860]
[141.22312927 -22.28396988]
[139.44065857 -7.39025259]
[148.75608826 -19.14707947]
[162.01011658 -26.17064857]
[176.96923828 -27.27736473]
[191.11256409 -22.28072548]
[202.05668640 -12.02275467]
[207.95735168 1.76790178]
[207.82017517 16.76727486]
[201.66828918 30.44770622]
[190.53837585 40.50380325]
[176.30603027 45.24093628]
[161.36965942 43.86081696]
[148.24629211 36.59601974]
[139.14746094 24.67078972]
[135.60639954 10.09307766]
[140.19993591 27.03020668]
[126.43170166 39.25792313]
[122.03070831 53.59777069]
[117.62970734 67.93762207]
[113.22870636 82.27746582]
[108.82771301 96.61731720]
[110.17238617 101.68740082]
[108.58065796 107.14997864]
[104.07630920 111.31504822]
[99.25031281 125.51750183]
[94.42431641 139.71995544]
[89.59832001 153.92240906]
[94.58894348 165.81596375]
[90.27696991 177.54586792]
[79.48590851 183.01208496]
[74.44898987 197.14111328]
[69.41207886 211.27014160]
[64.37516022 225.39916992]
[78.35638428 219.96543884]
[92.13980865 225.88296509]
[97.82966614 239.76193237]
[92.16654968 253.65182495]
[78.39453888 259.59588623]
[64.40288544 254.18908691]
[58.20666122 240.52964783]
[51.92929840 254.15295410]
[45.65193939 267.77627563]
[39.37457657 281.39959717]
[33.09721756 295.02291870]
[29.66615677 309.62524414]
[29.21955109 324.61859131]
[28.77294540 339.61193848]
[28.77294540 354.61193848]
[29.21955109 369.60528564]
[29.66615677 384.59863281]
[30.11276245 399.59197998]
[30.55936813 414.58532715]
[31.00597382 429.57867432]
[31.45257950 444.57202148]
[45.23852921 451.22079468]
[54.34622192 463.52154541]
[56.68278122 478.64767456]
[51.71127701 493.12326050]
[40.57413101 503.62194824]
[25.83057213 507.73123169]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 204]
[6 203]
[7 202]
[8 201]
[9 200]
[10 199]
[11 198]
[16 197]
[17 196]
[18 195]
[46 194]
[47 193]
[48 192]
[49 191]
[50 190]
[51 183]
[52 182]
[53 181]
[54 180]
[56 177]
[57 176]
[58 175]
[59 174]
[60 171]
[61 170]
[62 169]
[63 168]
[64 167]
[67 165]
[68 151]
[69 150]
[70 149]
[71 148]
[72 147]
[73 146]
[74 145]
[86 131]
[87 130]
[88 129]
[89 128]
[90 122]
[91 121]
[92 120]
[93 119]
[94 116]
[95 115]
[96 114]
[97 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
