%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[182.48988342 603.74145508]
[187.85070801 589.69262695]
[195.50885010 576.75195312]
[205.24392700 565.29174805]
[216.77587891 555.64178467]
[229.77290344 548.07965088]
[218.07258606 538.86273193]
[220.49409485 523.22790527]
[215.24737549 509.17544556]
[210.00065613 495.12298584]
[204.75393677 481.07049561]
[191.13883972 475.14053345]
[185.61773682 460.96408081]
[191.92993164 446.72351074]
[186.68321228 432.67105103]
[181.43649292 418.61856079]
[176.18977356 404.56610107]
[168.99403381 417.72744751]
[154.63877869 422.07794189]
[141.34735107 415.12536621]
[136.73368835 400.85253906]
[143.44070435 387.43554688]
[157.62631226 382.56024170]
[171.16371155 389.01873779]
[167.19161987 374.55419922]
[163.21952820 360.08969116]
[159.24743652 345.62515259]
[155.27532959 331.16064453]
[151.30323792 316.69610596]
[147.22357178 302.26156616]
[136.24119568 292.19992065]
[139.81886292 276.78854370]
[135.63185120 262.38473511]
[124.64946747 252.32310486]
[128.22712708 236.91171265]
[124.04012299 222.50793457]
[119.85311127 208.10415649]
[108.83179474 206.37751770]
[99.20685577 200.63655090]
[92.38842010 191.67776489]
[89.39202881 180.77224731]
[90.68746948 169.48536682]
[96.12564850 159.45208740]
[104.95456696 152.14015198]
[101.41490173 137.56376648]
[97.87522888 122.98739624]
[94.33555603 108.41101837]
[89.52436066 101.94380188]
[90.85340881 93.59128571]
[87.53115082 78.96382141]
[84.20888519 64.33636475]
[71.17118073 59.86322784]
[62.11805344 49.61337662]
[59.33402634 36.33486938]
[63.44161224 23.51801109]
[73.26605988 14.47796726]
[70.16194916 -0.19733560]
[67.05783844 -14.87263775]
[63.95372772 -29.54794121]
[60.74045563 -44.19972610]
[57.41819382 -58.82718658]
[54.09593582 -73.45465088]
[49.52757645 -59.16723633]
[39.89820099 -47.66614532]
[26.63627625 -40.65748596]
[11.70912361 -39.18095398]
[-2.66889882 -43.45558548]
[-14.36489773 -52.84726334]
[-21.64384079 -65.96278381]
[-23.42594147 -80.85654449]
[-19.44683456 -95.31914520]
[-10.29679775 -107.20513916]
[2.66681647 -114.75131226]
[17.52093315 -116.83823395]
[32.06203079 -113.15631866]
[44.13302612 -104.25176239]
[51.94259262 -91.44729614]
[51.71926498 -106.44563293]
[51.49593735 -121.44396973]
[51.27260971 -136.44230652]
[39.11132812 -127.66146851]
[24.62343216 -131.54745483]
[18.48885918 -145.23565674]
[25.22978973 -158.63565063]
[39.87705994 -161.86946106]
[51.63251877 -152.55471802]
[52.52533340 -167.52812195]
[53.41814804 -182.50152588]
[54.31096649 -197.47492981]
[47.40878296 -211.71116638]
[55.88990784 -223.95533752]
[56.78272247 -238.92874146]
[57.22932816 -253.92210388]
[57.22932816 -268.92208862]
[57.22932816 -283.92208862]
[57.22932816 -298.92208862]
[57.11766052 -313.92169189]
[56.89433289 -328.92001343]
[42.87481308 -334.86752319]
[32.49116135 -346.00753784]
[27.54241180 -360.40994263]
[28.88596344 -375.57949829]
[36.28903961 -388.88790894]
[48.46900940 -398.02947998]
[63.31562424 -401.42034912]
[78.25661469 -398.47302246]
[90.70336151 -389.69815063]
[98.49939728 -376.61605835]
[100.29400635 -361.49325562]
[95.77626801 -346.94985962]
[85.72889709 -335.50564575]
[71.89266968 -329.14334106]
[72.11599731 -314.14501953]
[75.35873413 -307.50375366]
[72.22933197 -298.92208862]
[72.22933197 -283.92208862]
[72.22933197 -268.92208862]
[72.22933197 -253.92210388]
[74.11386108 -251.84684753]
[75.28990173 -248.90005493]
[75.42138672 -245.34785461]
[74.27469635 -241.57299805]
[71.75612640 -238.03593445]
[70.86331177 -223.06253052]
[77.82935333 -209.89729309]
[69.28437042 -196.58210754]
[68.39155579 -181.60870361]
[67.49874115 -166.63529968]
[66.60592651 -151.66189575]
[66.27095032 -136.66563416]
[66.49427795 -121.66729736]
[66.71760559 -106.66896057]
[66.94093323 -91.67062378]
[68.72339630 -76.77690887]
[72.04565430 -62.14944839]
[75.36791229 -47.52198792]
[79.91481018 -41.69553375]
[78.62902832 -32.65205002]
[81.73313904 -17.97674751]
[84.83724976 -3.30144572]
[87.94136047 11.37385654]
[103.13792419 17.58207512]
[111.72563934 31.76702881]
[110.15061188 48.44097900]
[98.83634949 61.01410294]
[102.15860748 75.64156342]
[105.48086548 90.26902771]
[108.91192627 104.87134552]
[112.45159912 119.44772339]
[115.99127197 134.02409363]
[119.53094482 148.60047913]
[137.52613831 155.12034607]
[147.87411499 171.04293823]
[146.54518127 189.83555603]
[134.25689697 203.91714478]
[138.44390869 218.32092285]
[142.63092041 232.72470093]
[153.91276550 243.81660461]
[150.03562927 258.19772339]
[154.22264099 272.60153198]
[165.50450134 283.69342041]
[161.62734985 298.07455444]
[167.02780151 305.44155884]
[165.76776123 312.72402954]
[169.73985291 327.18853760]
[173.71195984 341.65307617]
[177.68405151 356.11758423]
[181.65614319 370.58212280]
[185.62823486 385.04663086]
[190.24224854 399.31936646]
[195.48896790 413.37185669]
[200.73568726 427.42431641]
[205.98240662 441.47677612]
[220.08291626 448.09594727]
[225.20365906 462.42187500]
[218.80641174 475.82379150]
[224.05313110 489.87625122]
[229.29985046 503.92871094]
[234.54656982 517.98120117]
[246.62216187 528.20324707]
[243.82536316 542.83294678]
[258.59808350 540.02679443]
[273.63256836 539.75775146]
[288.49624634 542.03356934]
[302.76144409 546.78881836]
[316.01770020 553.88665771]
[327.88366699 563.12286377]
[338.01788330 574.23162842]
[346.12881470 586.89343262]
[351.98303223 600.74395752]
[355.41217041 615.38458252]
[356.31750488 630.39422607]
[354.67303467 645.34088135]
[350.52603149 659.79461670]
[343.99581909 673.33953857]
[335.27032471 685.58593750]
[324.60058594 696.18139648]
[312.29354858 704.82116699]
[298.70333862 711.25653076]
[284.22100830 715.30249023]
[269.26318359 716.84252930]
[254.26026917 715.83233643]
[239.64390564 712.30102539]
[225.83465576 706.35015869]
[213.22982788 698.15100098]
[202.19209290 687.93945312]
[193.03903198 676.00921631]
[186.03398132 662.70373535]
[181.37849426 648.40563965]
[179.20654297 633.52642822]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 181]
[8 179]
[9 178]
[10 177]
[11 176]
[14 173]
[15 172]
[16 171]
[17 170]
[24 169]
[25 168]
[26 167]
[27 166]
[28 165]
[29 164]
[30 162]
[32 160]
[33 159]
[35 157]
[36 156]
[37 155]
[44 151]
[45 150]
[46 149]
[47 148]
[49 147]
[50 146]
[51 145]
[56 141]
[57 140]
[58 139]
[59 138]
[60 136]
[61 135]
[62 134]
[77 133]
[78 132]
[79 131]
[80 130]
[86 129]
[87 128]
[88 127]
[89 126]
[91 124]
[92 123]
[93 118]
[94 117]
[95 116]
[96 115]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
