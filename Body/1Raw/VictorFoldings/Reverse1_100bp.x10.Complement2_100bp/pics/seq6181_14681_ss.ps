%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[65.05283356 296.25204468]
[64.39839172 311.24963379]
[62.29951477 326.11401367]
[58.77579498 340.70645142]
[53.86013794 354.89065552]
[47.59843826 368.53421021]
[40.04916382 381.50973511]
[31.28279877 393.69604492]
[21.38119698 404.97940063]
[10.43680668 415.25439453]
[-1.44818342 424.42514038]
[-14.16280365 432.40600586]
[-27.58833885 439.12243652]
[-41.59943390 444.51174927]
[-56.06526947 448.52362061]
[-70.85077667 451.12060547]
[-85.81790924 452.27841187]
[-100.82691193 451.98629761]
[-115.73764801 450.24691772]
[-130.41090393 447.07656860]
[-144.70967102 442.50482178]
[-158.50042725 436.57437134]
[-171.65443420 429.34057617]
[-184.04887390 420.87100220]
[-195.56799316 411.24472046]
[-206.10426331 400.55163574]
[-215.55929565 388.89154053]
[-223.84481812 376.37332153]
[-230.88345337 363.11386108]
[-236.60949707 349.23696899]
[-240.96946716 334.87222290]
[-243.92268372 320.15371704]
[-245.44155884 305.21890259]
[-245.51190186 290.20724487]
[-244.13305664 275.25885010]
[-241.31790161 260.51333618]
[-237.09274292 246.10833740]
[-231.49699402 232.17840576]
[-224.58291626 218.85357666]
[-216.41508484 206.25825500]
[-207.06973267 194.51007080]
[-196.63414001 183.71868896]
[-185.20573425 173.98487854]
[-172.89122009 165.39952087]
[-159.80558777 158.04278564]
[-146.07099915 151.98335266]
[-131.81570435 147.27781677]
[-117.17281342 143.97007751]
[-102.27902985 142.09106445]
[-87.27342224 141.65827942]
[-72.29609680 142.67579651]
[-57.48690033 145.13409424]
[-42.98410416 149.01022339]
[-28.92311859 154.26799011]
[-15.43523026 160.85832214]
[-2.64637661 168.71966553]
[9.32403469 177.77862549]
[19.48758125 166.74674988]
[29.65112877 155.71487427]
[39.81467438 144.68299866]
[42.03489685 137.63371277]
[50.21260834 133.56396484]
[60.53927994 122.68463135]
[70.86594391 111.80529022]
[56.65400314 116.60327911]
[41.65583420 116.83756256]
[27.30096626 112.48580170]
[14.95761585 103.96279144]
[5.80227327 92.08088684]
[0.70756608 77.97259521]
[0.15908998 62.98262405]
[4.20912218 48.53972626]
[12.47163868 36.02050781]
[24.15911102 26.61822128]
[38.15756226 21.22902870]
[53.13274765 20.36659813]
[67.65733337 24.11312675]
[80.34691620 32.11152267]
[89.99202728 43.59942627]
[95.67333221 57.48188782]
[96.84934235 72.43571472]
[93.40795898 87.03561401]
[85.67646790 99.89086914]
[92.59319305 87.73971558]
[106.56713867 87.27018738]
[119.40607452 79.51379395]
[132.24502563 71.75740814]
[145.08395386 64.00101471]
[150.81105042 56.88495636]
[158.17230225 56.22636032]
[171.12528992 48.66197968]
[184.07829285 41.09760284]
[197.03129578 33.53322220]
[209.75332642 25.58653831]
[222.23312378 17.26459312]
[234.71292114 8.94264984]
[227.32060242 -4.11706543]
[220.90132141 -17.68154716]
[215.48931885 -31.67842484]
[211.11344910 -46.03301239]
[207.79708862 -60.66872787]
[205.55790710 -75.50747681]
[204.40788269 -90.47009277]
[204.35311890 -105.47673798]
[205.39392090 -120.44734955]
[207.52474976 -135.30204773]
[210.73420715 -149.96157837]
[215.00518799 -164.34771729]
[220.31491089 -178.38371277]
[226.63502502 -191.99468994]
[233.93182373 -205.10800171]
[242.16638184 -217.65370178]
[251.29473877 -229.56484985]
[261.26821899 -240.77787781]
[272.03359985 -251.23298645]
[283.53341675 -260.87435913]
[295.70635986 -269.65060425]
[308.48742676 -277.51483154]
[321.80847168 -284.42514038]
[335.59841919 -290.34460449]
[349.78363037 -295.24169922]
[364.28851318 -299.09027100]
[379.03561401 -301.86978149]
[393.94625854 -303.56539917]
[408.94088745 -304.16806030]
[423.93951416 -303.67459106]
[438.86212158 -302.08758545]
[453.62905884 -299.41555786]
[468.16156006 -295.67269897]
[482.38208008 -290.87902832]
[496.21472168 -285.06011963]
[509.58575439 -278.24700928]
[522.42376709 -270.47604370]
[534.66027832 -261.78869629]
[546.22998047 -252.23129272]
[557.07122803 -241.85485840]
[567.12609863 -230.71475220]
[576.34094238 -218.87039185]
[584.66662598 -206.38497925]
[592.05871582 -193.32514954]
[598.47778320 -179.76055908]
[603.88952637 -165.76359558]
[608.26519775 -151.40893555]
[611.58129883 -136.77316284]
[613.82025146 -121.93437958]
[614.97003174 -106.97174072]
[615.02453613 -91.96509552]
[613.98345947 -76.99450684]
[611.85241699 -62.13984299]
[608.64270020 -47.48036957]
[604.37152100 -33.09429550]
[599.06152344 -19.05838203]
[592.74121094 -5.44751644]
[585.44421387 7.66568136]
[577.20941162 20.21124649]
[568.08087158 32.12223816]
[558.10723877 43.33511353]
[547.34167480 53.79003906]
[535.84167480 63.43123245]
[523.66857910 72.20726013]
[510.88739014 80.07128906]
[497.56622314 86.98136902]
[483.77621460 92.90062714]
[469.59088135 97.79748535]
[455.08596802 101.64580536]
[440.33883667 104.42506409]
[425.42816162 106.12043762]
[410.43350220 106.72286224]
[395.43487549 106.22914124]
[380.51232910 104.64190674]
[365.74542236 101.96961975]
[351.21298218 98.22653961]
[336.99255371 93.43264008]
[323.15997314 87.61349487]
[309.78906250 80.80016327]
[296.95120239 73.02898407]
[284.71481323 64.34143066]
[273.14523315 54.78384781]
[262.30419922 44.40723419]
[252.24952698 33.26695251]
[243.03486633 21.42244339]
[230.55506897 29.74438858]
[218.07527161 38.06632996]
[217.39422607 40.78557968]
[215.59500122 43.39889526]
[212.71257019 45.47903442]
[208.93574524 46.61928558]
[204.59567261 46.48622131]
[191.64266968 54.05059814]
[178.68968201 61.61497879]
[165.73667908 69.17935944]
[152.84034729 76.83995819]
[140.00140381 84.59634399]
[127.16246796 92.35273743]
[114.32353210 100.10913086]
[107.40680695 112.26028442]
[93.43286133 112.72981262]
[81.74527740 122.13196564]
[71.41860962 133.01129150]
[61.09194565 143.89062500]
[50.84655380 154.84654236]
[40.68300629 165.87841797]
[30.51945877 176.91029358]
[20.35591125 187.94216919]
[30.36367607 199.13145447]
[39.24478149 211.23442078]
[46.91630936 224.13803101]
[53.30663300 237.72181702]
[58.35607910 251.85894775]
[62.01750565 266.41741943]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[57 204]
[58 203]
[59 202]
[60 201]
[62 200]
[63 199]
[64 198]
[83 197]
[85 195]
[86 194]
[87 193]
[88 192]
[90 191]
[91 190]
[92 189]
[93 188]
[94 183]
[95 182]
[96 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
