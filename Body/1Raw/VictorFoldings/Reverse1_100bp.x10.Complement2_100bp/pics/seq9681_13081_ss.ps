%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGGCAGCCUUUACCACUUCCCUCUGAGCUUCAUGAGACUCCGAACAUCCUCCCAUUUUAUCUCUGGGUCAUUUUAACAUUAUUCGUCACGAACUUAAUxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[85.05991364 582.67584229]
[70.04889679 582.00494385]
[55.28617096 579.20440674]
[41.07228851 574.33142090]
[27.69662476 567.48504639]
[15.43149090 558.80480957]
[4.52658987 548.46728516]
[-4.79607010 536.68304443]
[-12.34669018 523.69189453]
[-17.97154999 509.75845337]
[-21.55613518 495.16625977]
[-23.02746773 480.21246338]
[-22.35559273 465.20150757]
[-19.55418777 450.43896484]
[-14.68028831 436.22537231]
[-7.83311939 422.85012817]
[0.84791940 410.58554077]
[11.18609333 399.68127441]
[22.97093010 390.35934448]
[35.96250534 382.80953979]
[49.89632797 377.18551636]
[64.48872375 373.60183716]
[79.44260406 372.13143921]
[80.11239624 357.14639282]
[80.78218079 342.16134644]
[73.62089539 329.10128784]
[81.96669006 315.66036987]
[82.63647461 300.67532349]
[75.47519684 287.61526489]
[83.82099152 274.17434692]
[84.49077606 259.18930054]
[84.93737793 244.19596863]
[85.16070557 229.19763184]
[85.38403320 214.19929504]
[85.60736084 199.20094299]
[74.11772919 208.84399414]
[59.16329575 207.67568970]
[49.31064224 196.36528015]
[50.20381927 181.39189148]
[61.33116913 171.33296204]
[76.31844330 171.95069885]
[86.57991028 182.89035034]
[88.14043427 167.97174072]
[89.70095825 153.05314636]
[91.26148224 138.13453674]
[92.15429688 123.16113281]
[92.37762451 108.16278839]
[92.48928833 93.16320801]
[92.48928833 78.16320801]
[92.48928833 63.16320801]
[92.48928833 48.16320801]
[89.35987854 39.58156204]
[92.60262299 32.94029617]
[92.82595062 17.94195747]
[93.04927826 2.94362092]
[93.27260590 -12.05471611]
[93.49593353 -27.05305481]
[93.71926117 -42.05139160]
[93.94258881 -57.04972839]
[94.16591644 -72.04806519]
[84.82646942 -87.91805267]
[94.40716553 -102.62101746]
[94.40716553 -117.62101746]
[94.40716553 -132.62101746]
[91.79570007 -137.14067078]
[91.23509216 -141.74925232]
[92.41577911 -145.65066528]
[94.75710297 -148.28706360]
[87.64373016 -162.41896057]
[95.94161224 -174.78804016]
[96.61140442 -189.77308655]
[97.28118896 -204.75811768]
[97.95097351 -219.74316406]
[98.62075806 -234.72819519]
[84.73841095 -238.92494202]
[72.27516937 -246.32261658]
[61.95562744 -256.48580933]
[54.37849045 -268.81857300]
[49.98182678 -282.59918213]
[49.01774979 -297.02252197]
[51.53797150 -311.24707031]
[57.39102554 -324.44393921]
[66.23139191 -335.84530640]
[77.53987122 -344.78890991]
[90.65408325 -350.75671387]
[104.80726624 -353.40475464]
[105.70008850 -368.37817383]
[105.58841705 -383.37774658]
[104.47277069 -398.33621216]
[103.35712433 -413.29467773]
[102.24147034 -428.25311279]
[101.12582397 -443.21157837]
[100.01017761 -458.17001343]
[98.89452362 -473.12847900]
[97.77887726 -488.08694458]
[83.24893951 -492.47387695]
[71.28732300 -501.81646729]
[63.51174545 -514.85119629]
[60.97378540 -529.81530762]
[64.01668549 -544.68487549]
[72.22891998 -557.44903564]
[84.49983978 -566.38153076]
[99.16992188 -570.27423096]
[114.25514221 -568.60076904]
[127.71535492 -561.58740234]
[137.73017883 -550.18267822]
[142.94519043 -535.92895508]
[142.65509033 -520.75396729]
[136.89913940 -506.71002197]
[126.45575714 -495.69638062]
[112.73732758 -489.20257568]
[113.85298157 -474.24411011]
[114.96862793 -459.28567505]
[116.08427429 -444.32720947]
[117.19992828 -429.36877441]
[118.31557465 -414.41030884]
[119.43122101 -399.45184326]
[120.54687500 -384.49340820]
[128.96305847 -396.90985107]
[142.71383667 -402.90283203]
[157.53840637 -400.61538696]
[168.84318542 -390.75625610]
[173.12527466 -376.38046265]
[169.05783081 -361.94247437]
[157.90118408 -351.91604614]
[143.11235046 -349.40798950]
[129.27380371 -355.19543457]
[120.67349243 -367.48535156]
[119.78067780 -352.51196289]
[134.56317139 -347.71636963]
[147.61352539 -339.25735474]
[158.04193115 -327.70483398]
[165.13563538 -313.83978271]
[168.40753174 -298.60162354]
[167.62971497 -283.02444458]
[162.84927368 -268.16680908]
[154.38552856 -255.03996277]
[142.80865479 -244.53884888]
[128.90132141 -237.38119507]
[113.60579681 -234.05841064]
[112.93601227 -219.07337952]
[112.26622772 -204.08833313]
[111.59644318 -189.10330200]
[110.92665100 -174.11825562]
[118.08793640 -161.05819702]
[109.74214172 -147.61727905]
[109.40716553 -132.62101746]
[109.40716553 -117.62101746]
[109.40716553 -102.62101746]
[117.73612213 -93.84861755]
[117.85888672 -81.35186768]
[109.16425323 -71.82473755]
[108.94092560 -56.82640076]
[108.71759796 -41.82806396]
[108.49427032 -26.82972527]
[108.27094269 -11.83138847]
[108.04761505 3.16694856]
[107.82428741 18.16528511]
[107.60095978 33.16362381]
[107.48928833 48.16320801]
[107.48928833 63.16320801]
[107.48928833 78.16320801]
[107.48928833 93.16320801]
[110.63848877 100.58312225]
[107.37596130 108.38612366]
[107.15263367 123.38446045]
[118.64226532 113.74141693]
[133.59669495 114.90972137]
[143.44935608 126.22013092]
[142.55618286 141.19351196]
[131.42883301 151.25244141]
[116.44155121 150.63470459]
[106.18008423 139.69505310]
[104.61956024 154.61366272]
[103.05903625 169.53227234]
[101.49851227 184.45086670]
[100.60569763 199.42428589]
[100.38237000 214.42262268]
[100.15904236 229.42095947]
[99.93571472 244.41929626]
[102.81700134 250.36990356]
[102.33322144 256.03231812]
[99.47581482 259.85910034]
[98.80603027 274.84414673]
[105.91940308 288.97604370]
[97.62151337 301.34512329]
[96.95172882 316.33016968]
[104.06510162 330.46206665]
[95.76721954 342.83114624]
[95.09743500 357.81619263]
[94.42764282 372.80123901]
[109.19071960 375.59988403]
[123.40520477 380.47116089]
[136.78170776 387.31582642]
[149.04792786 395.99459839]
[159.95410156 406.33074951]
[169.27821350 418.11386108]
[176.83044434 431.10403442]
[182.45703125 445.03680420]
[186.04342651 459.62854004]
[187.51660156 474.58215332]
[186.84658813 489.59320068]
[184.04701233 504.35610962]
[179.17486572 518.57025146]
[172.32936096 531.94635010]
[163.64984131 544.21203613]
[153.31301880 555.11755371]
[141.52932739 564.44097900]
[128.53869629 571.99237061]
[114.60556030 577.61810303]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 191]
[24 190]
[25 189]
[27 187]
[28 186]
[30 184]
[31 183]
[32 180]
[33 179]
[34 178]
[35 177]
[42 176]
[43 175]
[44 174]
[45 173]
[46 166]
[47 165]
[48 163]
[49 162]
[50 161]
[51 160]
[53 159]
[54 158]
[55 157]
[56 156]
[57 155]
[58 154]
[59 153]
[60 152]
[62 149]
[63 148]
[64 147]
[68 146]
[70 144]
[71 143]
[72 142]
[73 141]
[74 140]
[86 129]
[87 128]
[88 118]
[89 117]
[90 116]
[91 115]
[92 114]
[93 113]
[94 112]
[95 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
