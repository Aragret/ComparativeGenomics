%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCCUGCUAAUCAAAAUCGUAACCUCAUCCAAAUCCAAUACAUGCAUCAGAUCCGGUAUACACAACCUCUAACUCUGAUCAUCCCGAUCCGGGUGGCGAxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[43.16806793 675.51080322]
[48.72510529 689.58111572]
[49.66016388 704.68017578]
[45.88163376 719.32861328]
[37.75969696 732.09143066]
[26.09006310 741.71820068]
[12.01599979 747.26580811]
[-3.08365822 748.19079590]
[-17.72960091 744.40240479]
[-30.48696709 736.27197266]
[-40.10592270 724.59588623]
[-45.64409637 710.51806641]
[-46.55891800 695.41778564]
[-42.76076126 680.77441406]
[-34.62172699 668.02252197]
[-22.93920326 658.41137695]
[-8.85771847 652.88262939]
[6.24316597 651.97790527]
[9.99946690 637.45587158]
[13.75576782 622.93377686]
[17.51206779 608.41174316]
[13.20846272 594.15240479]
[24.15507126 582.72955322]
[27.91137314 568.20745850]
[31.55945969 553.65783691]
[35.09913254 539.08148193]
[38.63880539 524.50512695]
[42.17847824 509.92874146]
[45.71815109 495.35235596]
[33.75670624 484.48791504]
[28.87834549 468.98443604]
[32.50488281 453.04501343]
[43.73883438 441.04110718]
[59.58319092 436.31372070]
[62.90544891 421.68624878]
[66.22770691 407.05880737]
[69.54997253 392.43133545]
[71.77508545 377.59729004]
[72.89073181 362.63882446]
[74.00638580 347.68038940]
[75.12203217 332.72192383]
[76.23767853 317.76348877]
[77.35333252 302.80502319]
[78.46897888 287.84655762]
[79.58462524 272.88812256]
[80.70027924 257.92965698]
[66.84279633 252.31439209]
[55.38391113 242.67779541]
[47.45391846 229.95397949]
[43.84010315 215.38238525]
[44.90859604 200.38702393]
[50.56730652 186.43733215]
[60.27372360 174.90415955]
[73.08689117 166.92512512]
[87.75862885 163.29228210]
[88.87428284 148.33383179]
[82.10501862 135.06632996]
[90.84729767 121.87985992]
[91.96295166 106.92140198]
[92.29792786 91.92514038]
[91.85131836 76.93179321]
[91.40471649 61.93844223]
[90.95810699 46.94509506]
[90.51150513 31.95174408]
[89.61868286 16.97833824]
[88.28044891 2.03815293]
[86.94221497 -12.90203190]
[85.60398102 -27.84221649]
[84.26574707 -42.78240204]
[82.92751312 -57.72258759]
[71.66630554 -65.11175537]
[66.78816223 -77.45736694]
[69.86558533 -90.17002106]
[79.55728912 -98.66121674]
[78.44163513 -113.61966705]
[69.69935608 -126.80614471]
[76.46862030 -140.07363892]
[75.35296631 -155.03208923]
[63.66054535 -165.32408142]
[62.74221039 -180.50997925]
[72.62610626 -191.59349060]
[71.51045227 -206.55194092]
[70.28347778 -221.50167847]
[68.94524384 -236.44184875]
[67.60700989 -251.38203430]
[56.34580231 -258.77120972]
[51.46765900 -271.11682129]
[54.54508209 -283.82946777]
[64.23678589 -292.32067871]
[63.12113571 -307.27911377]
[62.00548553 -322.23757935]
[60.88983536 -337.19604492]
[46.08815384 -340.16467285]
[32.63681412 -347.01770020]
[21.53398705 -357.24658203]
[13.60358334 -370.09222412]
[9.43408871 -384.60147095]
[9.33490753 -399.69760132]
[13.31340027 -414.26034546]
[21.07433701 -427.20910645]
[32.04180145 -437.58300781]
[45.40193939 -444.61218262]
[60.16333771 -447.77502441]
[75.23059845 -446.83688354]
[89.48564148 -441.86734009]
[101.87063599 -433.23516846]
[111.46654510 -421.58093262]
[117.56127930 -407.76943970]
[119.70256805 -392.82565308]
[117.73152161 -377.85842896]
[111.79439545 -363.97848511]
[102.33177185 -352.21575928]
[90.04583740 -343.44317627]
[75.84828949 -338.31167603]
[76.96393585 -323.35324097]
[78.07958984 -308.39477539]
[79.19523621 -293.43630981]
[92.39606476 -283.01629639]
[94.00794220 -265.93658447]
[82.54719543 -252.72027588]
[83.88542938 -237.78009033]
[85.22366333 -222.83990479]
[88.95137787 -216.45822144]
[86.46891022 -207.66758728]
[87.58455658 -192.70913696]
[99.00324249 -183.21443176]
[100.34775543 -168.06033325]
[90.31142426 -156.14773560]
[91.42707062 -141.18928528]
[100.08955383 -129.07273865]
[93.40009308 -114.73532104]
[94.51573944 -99.77686310]
[107.71656799 -89.35684204]
[109.32844543 -72.27712250]
[97.86769867 -59.06082153]
[99.20593262 -44.12063599]
[100.54416656 -29.18045235]
[101.88240051 -14.24026680]
[103.22063446 0.69991869]
[104.55886841 15.64010334]
[106.62103271 17.53895569]
[108.05528259 20.36906624]
[108.50315857 23.89537048]
[107.69781494 27.75748634]
[105.50485229 31.50513840]
[105.95145416 46.49848938]
[106.39806366 61.49183655]
[106.84466553 76.48519135]
[107.29127502 91.47853851]
[117.51331329 80.50083923]
[132.38424683 78.53727722]
[145.10527039 86.48558044]
[149.86050415 100.71188354]
[144.47593689 114.71211243]
[131.41331482 122.08554840]
[116.64467621 119.46116638]
[106.92140198 108.03704834]
[105.80575562 122.99550629]
[112.49521637 137.33293152]
[103.83273315 149.44947815]
[102.71708679 164.40792847]
[116.68759918 170.17700195]
[128.17538452 179.96849060]
[136.06356812 192.81390381]
[139.59036255 207.44868469]
[138.42260742 222.43664551]
[132.68721008 236.31094360]
[122.95748138 247.71763611]
[110.19586945 255.54779053]
[95.65872955 259.04531860]
[94.54308319 274.00375366]
[93.42742920 288.96221924]
[92.31178284 303.92068481]
[91.19613647 318.87911987]
[90.08048248 333.83758545]
[88.96483612 348.79602051]
[87.84918976 363.75448608]
[86.73354340 378.71295166]
[96.45919800 367.29315186]
[110.55832672 362.17312622]
[125.34545135 364.69125366]
[136.95524597 374.18930054]
[142.35295105 388.18444824]
[140.12760925 403.01846313]
[130.86093140 414.81375122]
[116.97518158 420.48703003]
[102.10008240 418.55532837]
[90.12394714 409.52362061]
[84.17742920 395.75360107]
[80.85517120 410.38104248]
[77.53291321 425.00851440]
[74.21064758 439.63598633]
[84.95399475 448.59384155]
[90.76196289 461.24627686]
[90.55292511 475.10031128]
[84.42468262 487.45318604]
[73.62424469 495.91955566]
[60.29452515 498.89202881]
[56.75485229 513.46838379]
[53.21517944 528.04479980]
[49.67550659 542.62115479]
[46.13583374 557.19750977]
[47.15178299 566.27526855]
[42.43343353 571.96380615]
[38.67713165 586.48583984]
[42.71205902 601.78387451]
[32.03412628 612.16802979]
[28.27782631 626.69012451]
[24.52152634 641.21215820]
[20.76522446 655.73425293]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 210]
[19 209]
[20 208]
[21 207]
[23 205]
[24 204]
[25 202]
[26 201]
[27 200]
[28 199]
[29 198]
[34 192]
[35 191]
[36 190]
[37 189]
[38 178]
[39 177]
[40 176]
[41 175]
[42 174]
[43 173]
[44 172]
[45 171]
[46 170]
[55 161]
[56 160]
[58 158]
[59 157]
[60 149]
[61 148]
[62 147]
[63 146]
[64 145]
[65 140]
[66 139]
[67 138]
[68 137]
[69 136]
[70 135]
[74 132]
[75 131]
[77 129]
[78 128]
[81 125]
[82 124]
[83 122]
[84 121]
[85 120]
[89 117]
[90 116]
[91 115]
[92 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
