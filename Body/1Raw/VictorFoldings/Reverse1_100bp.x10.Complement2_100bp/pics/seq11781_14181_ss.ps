%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUAUCACCCCCCAUUCCGCUCCAAUCGCUCCGAACGAUCUUCAGUAGUUUUUCGAUAAUCACCCUCAUCUCAAACUUCAGGAACUCUCUCCUAAUACxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[85.99942017 616.94506836]
[75.02529907 606.61718750]
[66.72926331 594.03656006]
[61.55871582 579.88159180]
[59.79248810 564.91571045]
[61.52584076 549.94604492]
[66.66529083 535.77978516]
[74.93367004 523.18090820]
[85.88508606 512.82897949]
[98.92893219 505.28213501]
[113.36177063 500.94741821]
[112.46895599 485.97399902]
[111.57614136 471.00061035]
[110.57187653 456.03424072]
[109.45623016 441.07580566]
[94.91909027 437.57827759]
[82.15747833 429.74813843]
[72.42775726 418.34143066]
[66.69235992 404.46713257]
[65.52459717 389.47918701]
[69.05139160 374.84439087]
[76.93957520 361.99896240]
[88.42736053 352.20748901]
[102.39787292 346.43841553]
[101.28222656 331.47994995]
[100.16658020 316.52151489]
[97.19650269 312.78149414]
[96.54434204 307.13598633]
[99.24717712 301.10223389]
[98.57739258 286.11718750]
[97.90760803 271.13217163]
[87.67994690 256.87167358]
[96.30144501 240.60047913]
[95.40862274 225.62707520]
[94.51580811 210.65367126]
[93.62299347 195.68025208]
[92.73017883 180.70684814]
[81.45412445 171.04319763]
[80.33538055 155.87075806]
[90.54795837 144.10891724]
[89.65514374 129.13551331]
[83.02116394 142.58877563]
[72.02472687 152.79064941]
[58.11259079 158.39891052]
[43.11514282 158.67567444]
[29.00555801 153.58454895]
[17.64019012 143.79534912]
[10.51435089 130.59600830]
[8.56556702 115.72314453]
[12.05023384 101.13352203]
[20.50988388 88.74666595]
[32.83150482 80.19226837]
[47.39397430 76.59581757]
[62.28135300 78.43048859]
[75.53494263 85.45489502]
[85.41101837 96.74485779]
[90.61060333 110.81732941]
[85.86773682 97.66450500]
[94.59012604 86.73694611]
[97.03585052 71.93767548]
[99.48158264 57.13840103]
[101.92730713 42.33913040]
[100.23899841 33.36207962]
[104.52119446 27.33840942]
[107.18698883 12.57719231]
[109.85278320 -2.18402529]
[112.51857758 -16.94524193]
[114.30104828 -31.83896065]
[115.19386292 -46.81236649]
[116.08667755 -61.78577042]
[116.97949219 -76.75917816]
[117.87231445 -91.73258209]
[118.65363312 -106.71221924]
[119.32341766 -121.69725800]
[119.99320221 -136.68229675]
[120.66298676 -151.66734314]
[120.66298676 -166.66734314]
[119.99320221 -181.65237427]
[119.32341766 -196.63742065]
[118.65363312 -211.62245178]
[115.42327118 -217.39100647]
[115.56916046 -223.07218933]
[118.19372559 -227.06225586]
[110.25182343 -240.74571228]
[117.79877472 -253.58676147]
[117.57544708 -268.58511353]
[117.35211945 -283.58343506]
[102.49487305 -285.90081787]
[88.24302673 -290.69589233]
[75.00662994 -297.83074951]
[63.16653061 -307.10003662]
[53.06338501 -318.23712158]
[44.98788071 -330.92153931]
[39.17236710 -344.78833008]
[35.78417206 -359.43850708]
[34.92077255 -374.45059204]
[36.60701752 -389.39263916]
[40.79438400 -403.83471680]
[47.36240005 -417.36132812]
[56.12208557 -429.58328247]
[66.82141113 -440.14889526]
[79.15253448 -448.75421143]
[92.76065826 -455.15164185]
[107.25425720 -459.15707397]
[122.21632385 -460.65530396]
[137.21635437 -459.60321045]
[151.82278442 -456.03106689]
[165.61535645 -450.04165649]
[178.19721985 -441.80731201]
[189.20637512 -431.56491089]
[198.32608032 -419.60919189]
[205.29391479 -406.28414917]
[209.90942383 -391.97314453]
[212.03981018 -377.08792114]
[211.62374878 -362.05679321]
[208.67324829 -347.31222534]
[203.27317810 -333.27841187]
[195.57891846 -320.35919189]
[185.81184387 -308.92623901]
[174.25297546 -299.30853271]
[161.23487854 -291.78277588]
[147.13212585 -286.56546021]
[132.35044861 -283.80676270]
[132.57377625 -268.80844116]
[132.79711914 -253.81008911]
[140.72303772 -241.19943237]
[133.19206238 -227.28558350]
[133.63867188 -212.29223633]
[134.30845642 -197.30720520]
[134.97824097 -182.32215881]
[135.64802551 -167.33712769]
[146.54331970 -177.64694214]
[161.54078674 -177.37080383]
[172.04917908 -166.66690063]
[172.04881287 -151.66690063]
[161.53991699 -140.96348572]
[146.54243469 -140.68806458]
[135.64802551 -150.99755859]
[134.97824097 -136.01251221]
[134.30845642 -121.02747345]
[133.63867188 -106.04243469]
[136.48036194 -99.21993256]
[132.84571838 -90.83976746]
[131.95289612 -75.86636353]
[131.06008911 -60.89295578]
[130.16726685 -45.91954803]
[129.27445984 -30.94614410]
[139.80403137 -41.62921524]
[154.58268738 -44.19657898]
[168.09834290 -37.69066620]
[175.31001282 -24.53802681]
[173.52789307 -9.64426613]
[163.41670227 1.43560863]
[148.74763489 4.56907940]
[134.99191284 -1.41256130]
[127.27980042 -14.27944660]
[124.61400604 0.48177028]
[121.94820404 15.24298763]
[119.28240967 30.00420380]
[116.72657776 44.78485870]
[114.28085327 59.58412933]
[111.83512878 74.38339996]
[109.38939667 89.18267059]
[114.13226318 102.33549500]
[105.40987396 113.26305389]
[104.62854767 128.24269104]
[105.52136993 143.21609497]
[117.05925751 153.68103027]
[117.75140381 168.87890625]
[107.70358276 179.81404114]
[108.59639740 194.78744507]
[109.48921204 209.76084900]
[110.38203430 224.73425293]
[111.27484894 239.70765686]
[120.38621521 248.83705139]
[120.82158661 261.32681274]
[112.89264679 270.46237183]
[113.56243134 285.44741821]
[114.23221588 300.43246460]
[115.12503052 315.40585327]
[116.24067688 330.36431885]
[117.35633087 345.32275391]
[132.02806091 348.95559692]
[144.84123230 356.93466187]
[154.54765320 368.46780396]
[160.20635986 382.41751099]
[161.27485657 397.41287231]
[157.66104126 411.98446655]
[149.73104858 424.70828247]
[138.27215576 434.34487915]
[124.41468048 439.96014404]
[125.53033447 454.91860962]
[129.28935242 463.24371338]
[126.54954529 470.10778809]
[127.44235992 485.08117676]
[128.33517456 500.05459595]
[143.18084717 502.64352417]
[157.02908325 508.58688354]
[169.13302612 517.56414795]
[178.83995056 529.09112549]
[185.62638855 542.54632568]
[189.12631226 557.20397949]
[189.15101624 572.27368164]
[185.69914246 586.94274902]
[178.95686340 600.42004395]
[169.28778076 611.97888184]
[157.21331787 620.99572754]
[143.38465881 626.98443604]
[128.54754639 629.62200928]
[113.50213623 628.76623535]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 196]
[12 195]
[13 194]
[14 192]
[15 191]
[24 182]
[25 181]
[26 180]
[29 179]
[30 178]
[31 177]
[33 174]
[34 173]
[35 172]
[36 171]
[37 170]
[40 167]
[41 166]
[57 165]
[59 163]
[60 162]
[61 161]
[62 160]
[64 159]
[65 158]
[66 157]
[67 156]
[68 147]
[69 146]
[70 145]
[71 144]
[72 143]
[73 141]
[74 140]
[75 139]
[76 138]
[77 131]
[78 130]
[79 129]
[80 128]
[83 127]
[85 125]
[86 124]
[87 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
