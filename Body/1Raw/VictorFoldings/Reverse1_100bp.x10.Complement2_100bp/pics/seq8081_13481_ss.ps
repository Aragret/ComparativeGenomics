%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[118.33083344 458.03530884]
[127.20269012 445.87045288]
[138.41015625 435.81625366]
[151.46328735 428.31231689]
[146.84927368 414.03958130]
[142.23527527 399.76684570]
[137.62126160 385.49411011]
[132.57269287 380.09652710]
[133.04652405 370.97439575]
[128.64552307 356.63455200]
[124.24452209 342.29470825]
[119.84352112 327.95486450]
[115.44252777 313.61502075]
[112.82968903 328.38571167]
[106.21296692 341.84747314]
[96.11416626 352.93862915]
[83.32973480 360.78454590]
[68.86789703 364.76641846]
[53.86918259 364.57025146]
[39.51644516 360.21145630]
[26.94160461 352.03384399]
[17.13636398 340.68231201]
[10.87400627 327.05209351]
[8.64840698 312.21813965]
[10.63508701 297.35028076]
[16.67736626 283.62106323]
[26.29872894 272.11328125]
[38.74039078 263.73443604]
[53.02115250 259.14532471]
[68.01477051 258.70788574]
[82.53878784 262.45660400]
[95.44778442 270.09582520]
[105.72369385 281.02313232]
[112.55725861 294.37997437]
[112.55725861 279.37997437]
[112.55725861 264.37997437]
[112.55725861 249.37997437]
[112.55725861 234.37997437]
[112.55725861 219.37997437]
[111.44160461 204.42152405]
[109.21649170 189.58747864]
[106.99137115 174.75343323]
[104.76625824 159.91938782]
[102.54113770 145.08534241]
[99.65586853 130.36546326]
[96.11619568 115.78908539]
[86.55328369 109.14138031]
[83.88928986 97.80363464]
[89.49098969 87.59275055]
[86.16873169 72.96529388]
[82.84647369 58.33782959]
[79.52421570 43.71037292]
[76.20195007 29.08291054]
[72.66228485 14.50653553]
[68.90598297 -0.01552360]
[65.14968109 -14.53758240]
[61.39337921 -29.05964279]
[48.05799866 -37.10982132]
[44.45544815 -51.89076233]
[52.21224594 -64.55439758]
[48.45594406 -79.07646179]
[44.69964218 -93.59851837]
[40.94334412 -108.12057495]
[36.75633240 -122.52436066]
[32.14232254 -136.79708862]
[27.52831268 -151.06982422]
[14.91020584 -155.78129578]
[7.41885853 -166.73986816]
[7.60420179 -179.81838989]
[15.17453671 -190.24525452]
[10.77353859 -204.58509827]
[6.37254095 -218.92494202]
[1.97154272 -233.26480103]
[-12.85722637 -230.85205078]
[-27.87641716 -230.48101807]
[-42.80623245 -232.15864563]
[-57.36853790 -235.85365295]
[-71.29204559 -241.49719238]
[-84.31736755 -248.98416138]
[-96.20185852 -258.17507935]
[-106.72410583 -268.89868164]
[-115.68809509 -280.95526123]
[-122.92682648 -294.12014771]
[-128.30545044 -308.14813232]
[-131.72377014 -322.77786255]
[-133.11810303 -337.73678589]
[-132.46246338 -352.74624634]
[-129.76907349 -367.52661133]
[-125.08811188 -381.80255127]
[-118.50678253 -395.30810547]
[-110.14768219 -407.79165649]
[-100.16654205 -419.02066040]
[-88.74930573 -428.78591919]
[-76.10866547 -436.90554810]
[-62.48011780 -443.22824097]
[-48.11754227 -447.63619995]
[-33.28851318 -450.04733276]
[-18.26928139 -450.41674805]
[-3.33964896 -448.73751831]
[11.22225571 -445.04092407]
[25.14515114 -439.39587402]
[38.16966629 -431.90750122]
[50.05315781 -422.71530151]
[60.57424545 -411.99053955]
[69.53692627 -399.93301392]
[76.77423859 -386.76733398]
[82.15134430 -372.73876953]
[85.56807709 -358.10867310]
[86.96079254 -343.14959717]
[86.30352783 -328.14019775]
[83.60854340 -313.36010742]
[78.92603302 -299.08468628]
[72.34323883 -285.57986450]
[63.98278809 -273.09719849]
[54.00043488 -261.86926270]
[42.58214188 -252.10523987]
[29.94062614 -243.98699951]
[16.31138992 -237.66578674]
[20.71238708 -223.32594299]
[25.11338615 -208.98609924]
[29.51438332 -194.64625549]
[44.69522476 -187.40878296]
[50.04995346 -171.11027527]
[41.80104446 -155.68383789]
[46.41505432 -141.41110229]
[51.02906418 -127.13836670]
[53.46057510 -125.74341583]
[55.48603058 -123.30125427]
[56.70379639 -119.96172333]
[56.77385330 -116.01715851]
[55.46540070 -111.87687683]
[59.22170258 -97.35482025]
[62.97800446 -82.83276367]
[66.73430634 -68.31069946]
[79.65860748 -60.99647522]
[83.67490387 -46.32255173]
[75.91543579 -32.81594467]
[79.67173767 -18.29388428]
[83.42803955 -3.77182436]
[87.18434143 10.75023460]
[90.77181244 13.90286636]
[92.41690826 19.34259987]
[90.82941437 25.76065063]
[94.15167236 40.38811111]
[97.47393036 55.01557159]
[100.79619598 69.64303589]
[104.11845398 84.27049255]
[115.82865906 96.28079224]
[110.69256592 112.24941254]
[114.23223877 126.82578278]
[122.94097137 114.61276245]
[137.71148682 111.99895477]
[150.08255005 120.48167419]
[152.96748352 135.20164490]
[144.71363831 147.72657776]
[130.04919434 150.88163757]
[117.37518311 142.86022949]
[119.60029602 157.69427490]
[121.82541656 172.52832031]
[124.05053711 187.36236572]
[126.27565002 202.19641113]
[133.23045349 188.90615845]
[145.84542847 180.79057312]
[160.82301331 179.97105408]
[174.24813843 186.66180420]
[182.61149597 199.11387634]
[183.72691345 214.07234192]
[177.30284119 227.62710571]
[165.01850891 236.23495483]
[150.08500671 237.64582825]
[136.40591431 231.49093628]
[127.55725861 219.37997437]
[127.55725861 234.37997437]
[127.55725861 249.37997437]
[127.55725861 264.37997437]
[127.55725861 279.37997437]
[127.55725861 294.37997437]
[129.78237915 309.21401978]
[134.18336487 323.55386353]
[138.58436584 337.89370728]
[142.98536682 352.23355103]
[147.38636780 366.57339478]
[151.89399719 380.88009644]
[156.50799561 395.15283203]
[161.12200928 409.42556763]
[165.73602295 423.69830322]
[180.71165466 422.14126587]
[195.68370056 423.73226929]
[209.99766541 428.40176392]
[223.02780151 435.94558716]
[234.20448303 446.03396606]
[243.03912354 458.22589111]
[249.14549255 471.98837280]
[252.25665283 486.71978760]
[252.23660278 501.77612305]
[249.08622742 516.49920654]
[242.94322205 530.24536133]
[234.07615662 542.41369629]
[222.87265015 552.47229004]
[209.82246399 559.98138428]
[195.49610901 564.61273193]
[180.51988220 566.16387939]
[165.54844666 564.56695557]
[151.23631287 559.89184570]
[138.20915222 552.34289551]
[127.03643799 542.25012207]
[118.20660400 530.05474854]
[112.10565186 516.28985596]
[109.00028229 501.55722046]
[109.02625275 486.50088501]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 186]
[5 185]
[6 184]
[7 183]
[9 182]
[10 181]
[11 180]
[12 179]
[13 178]
[34 177]
[35 176]
[36 175]
[37 174]
[38 173]
[39 172]
[40 161]
[41 160]
[42 159]
[43 158]
[44 157]
[45 150]
[46 149]
[49 147]
[50 146]
[51 145]
[52 144]
[53 143]
[54 140]
[55 139]
[56 138]
[57 137]
[60 134]
[61 133]
[62 132]
[63 131]
[64 126]
[65 125]
[66 124]
[70 121]
[71 120]
[72 119]
[73 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
