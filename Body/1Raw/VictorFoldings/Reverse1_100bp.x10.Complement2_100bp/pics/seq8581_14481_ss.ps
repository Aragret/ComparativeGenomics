%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUAAUCAGUAACAACCCACCACUAAUCAGCCAACAACUACUCUAUAAACCUCCACCCCUAGUUAUCUCCCCCUUUAUCUUACUAGUCAUGACGCCxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[82.08845520 493.10250854]
[74.46015167 506.25079346]
[62.37786102 515.47503662]
[47.68403244 519.36859131]
[32.61936951 517.33776855]
[19.48112488 509.69213867]
[10.27278709 497.59774780]
[6.39855909 482.89880371]
[8.44923306 467.83682251]
[16.11209679 454.70864868]
[28.21861649 445.51623535]
[42.92263794 441.66134644]
[36.95507812 428.01443481]
[46.46673203 415.37170410]
[48.47074509 400.50616455]
[50.47475815 385.64065552]
[52.47877121 370.77511597]
[54.48278427 355.90957642]
[56.48679733 341.04406738]
[58.38008881 326.16403198]
[60.05163193 311.25744629]
[61.61215591 296.33883667]
[63.17267609 281.42025757]
[64.73320007 266.50164795]
[62.30262756 259.52209473]
[66.42962646 251.37312317]
[68.21209717 236.47940063]
[66.58752441 234.19491577]
[65.76998138 231.12925720]
[66.06153870 227.58660889]
[67.64868164 223.97474670]
[70.56970978 220.76202393]
[73.23550415 206.00080872]
[75.90130615 191.23959351]
[78.56710052 176.47837830]
[81.23289490 161.71716309]
[75.88064575 147.81742859]
[85.94734192 135.61199951]
[88.61313629 120.85078430]
[91.27893066 106.08956909]
[92.83945465 91.17096710]
[93.28606415 76.17761230]
[93.73266602 61.18426514]
[82.10073853 70.65517426]
[67.16535950 69.26434326]
[57.48219299 57.80850220]
[58.59819794 42.85007858]
[69.87407684 32.95793152]
[84.85049438 33.79873657]
[94.94795227 44.88994980]
[96.73041534 29.99623489]
[98.51287842 15.10251713]
[100.29534912 0.20879938]
[101.63358307 -14.73138523]
[102.52639771 -29.70479202]
[103.41921234 -44.67819595]
[104.31202698 -59.65160370]
[105.20484924 -74.62500763]
[106.09766388 -89.59841156]
[106.43264008 -104.59467316]
[106.20931244 -119.59300995]
[105.98598480 -134.59135437]
[97.29135132 -144.11846924]
[97.41410828 -156.61521912]
[105.74306488 -165.38761902]
[105.74306488 -180.38761902]
[105.74306488 -195.38761902]
[105.74306488 -210.38761902]
[105.74306488 -225.38761902]
[105.74306488 -240.38761902]
[105.74306488 -255.38761902]
[103.96060181 -270.28134155]
[100.42092896 -284.85772705]
[96.88125610 -299.43408203]
[93.34158325 -314.01046753]
[89.80191040 -328.58685303]
[86.26223755 -343.16320801]
[82.72256470 -357.73959351]
[79.18289185 -372.31597900]
[70.47415924 -360.10293579]
[55.70365143 -357.48913574]
[43.33257675 -365.97186279]
[40.44765854 -380.69183350]
[48.70150375 -393.21676636]
[63.36593628 -396.37182617]
[76.03995514 -388.35040283]
[73.81483459 -403.18444824]
[71.58972168 -418.01849365]
[69.36460114 -432.85253906]
[54.37099075 -434.54193115]
[40.32587814 -440.05529785]
[28.18687820 -449.01672363]
[18.78165054 -460.81521606]
[12.75146198 -474.64630127]
[10.50745678 -489.56698608]
[12.20263767 -504.55993652]
[17.72142220 -518.60290527]
[26.68753242 -530.73846436]
[38.48964310 -540.13916016]
[52.32306671 -546.16400146]
[67.24462128 -548.40222168]
[82.23692322 -546.70123291]
[96.27777100 -541.17706299]
[108.40985107 -532.20623779]
[117.80596161 -520.40051270]
[123.82546997 -506.56475830]
[126.05795288 -491.64236450]
[124.35118866 -476.65072632]
[118.82156372 -462.61199951]
[109.84608459 -450.48339844]
[98.03672028 -441.09182739]
[84.19864655 -435.07766724]
[86.42375946 -420.24362183]
[88.64888000 -405.40957642]
[90.87400055 -390.57553101]
[93.75926971 -375.85565186]
[97.29894257 -361.27926636]
[100.83861542 -346.70288086]
[104.37828827 -332.12652588]
[107.91796112 -317.55014038]
[111.45763397 -302.97375488]
[114.99730682 -288.39739990]
[118.53697968 -273.82101440]
[122.49228668 -288.29013062]
[131.10121155 -300.57373047]
[143.35240173 -309.22869873]
[157.80657959 -313.23828125]
[172.76568604 -312.13143921]
[186.47233582 -306.03820801]
[197.31629944 -295.67440796]
[204.02363586 -282.25756836]
[205.80638123 -267.36389160]
[202.45507812 -252.74305725]
[194.36343384 -240.11271667]
[182.48207092 -230.95666504]
[168.20678711 -226.35055542]
[153.21463013 -226.83549500]
[139.26686096 -232.35453796]
[128.00205994 -242.25927734]
[120.74306488 -255.38761902]
[120.74306488 -240.38761902]
[120.74306488 -225.38761902]
[120.74306488 -210.38761902]
[120.74306488 -195.38761902]
[120.74306488 -180.38761902]
[120.74306488 -165.38761902]
[130.32376099 -150.68466187]
[120.98432159 -134.81468201]
[121.20764923 -119.81633759]
[121.43097687 -104.81800079]
[133.59225464 -113.59884644]
[148.08015442 -109.71286011]
[154.21472168 -96.02465057]
[147.47380066 -82.62465668]
[132.82652283 -79.39085388]
[121.07106781 -88.70559692]
[120.17825317 -73.73219299]
[119.28543854 -58.75878525]
[118.39261627 -43.78538132]
[117.49980164 -28.81197548]
[116.60698700 -13.83856964]
[118.36465454 -11.65482426]
[119.36322021 -8.64326477]
[119.28303528 -5.08953810]
[117.91369629 -1.38961577]
[115.18906403 1.99126530]
[113.40660095 16.88498306]
[111.62413025 31.77869987]
[109.84166718 46.67241669]
[108.72602081 61.63087082]
[108.27941132 76.62422180]
[107.83280945 91.61756897]
[117.03884125 79.77489471]
[130.89529419 74.03043365]
[145.78010559 75.88576508]
[157.80242920 84.85591125]
[163.81967163 98.59609985]
[162.25892639 113.51468658]
[153.52816772 125.71197510]
[139.90959167 131.99963379]
[124.96308136 130.73406982]
[112.59559631 122.24611664]
[106.04015350 108.75536346]
[103.37435913 123.51657867]
[100.70855713 138.27780151]
[105.87013245 153.23335266]
[95.99411011 164.38294983]
[93.32831573 179.14418030]
[90.66252136 193.90539551]
[87.99672699 208.66661072]
[85.33093262 223.42782593]
[83.10581207 238.26187134]
[81.32334900 253.15559387]
[79.65180206 268.06216431]
[78.09128571 282.98077393]
[76.53076172 297.89938354]
[74.97023773 312.81796265]
[77.18987274 321.67861938]
[73.27381134 327.94650269]
[75.36127472 336.83920288]
[71.35232544 343.04806519]
[69.34831238 357.91360474]
[67.34429932 372.77914429]
[65.34028625 387.64465332]
[63.33627319 402.51019287]
[61.33226013 417.37570190]
[67.15647888 432.08587646]
[57.78816605 443.66534424]
[70.94647980 451.27633667]
[80.18660736 463.34649658]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 208]
[14 206]
[15 205]
[16 204]
[17 203]
[18 202]
[19 201]
[20 199]
[21 197]
[22 196]
[23 195]
[24 194]
[26 193]
[27 192]
[32 191]
[33 190]
[34 189]
[35 188]
[36 187]
[38 185]
[39 184]
[40 183]
[41 172]
[42 171]
[43 170]
[50 169]
[51 168]
[52 167]
[53 166]
[54 161]
[55 160]
[56 159]
[57 158]
[58 157]
[59 156]
[60 150]
[61 149]
[62 148]
[65 146]
[66 145]
[67 144]
[68 143]
[69 142]
[70 141]
[71 140]
[72 123]
[73 122]
[74 121]
[75 120]
[76 119]
[77 118]
[78 117]
[79 116]
[86 115]
[87 114]
[88 113]
[89 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
