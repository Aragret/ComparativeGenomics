%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[103.34899139 598.93969727]
[99.99011230 583.25219727]
[110.27188110 570.93701172]
[110.27188110 555.93701172]
[110.27188110 540.93701172]
[110.27188110 525.93701172]
[100.39684296 537.22784424]
[85.79719543 540.67028809]
[71.91825867 534.98040771]
[63.93652725 522.28033447]
[64.82898712 507.30688477]
[74.26277161 495.64483643]
[88.71932220 491.64379883]
[102.80669403 496.79608154]
[111.27098083 509.18112183]
[113.05344391 494.28741455]
[114.83590698 479.39367676]
[116.61837769 464.49996948]
[118.40084076 449.60626221]
[118.73581696 434.60998535]
[117.62017059 419.65155029]
[108.95768738 407.53500366]
[115.64714813 393.19757080]
[114.53150177 378.23910522]
[113.41585541 363.28067017]
[112.30020142 348.32220459]
[111.18455505 333.36376953]
[110.06890869 318.40530396]
[98.65022278 308.91061401]
[97.30570984 293.75650024]
[107.34204102 281.84390259]
[106.22639465 266.88546753]
[105.11074829 251.92700195]
[103.99509430 236.96855164]
[102.87944794 222.01010132]
[101.76380157 207.05165100]
[88.56297302 196.63162231]
[86.95108795 179.55191040]
[98.41183472 166.33560181]
[89.56992340 154.34936523]
[96.04517365 139.91394043]
[94.70693970 124.97375488]
[93.36870575 110.03356934]
[91.80818176 95.11496735]
[90.02571869 80.22125244]
[88.24325562 65.32752991]
[86.46078491 50.43381500]
[83.24751282 35.78202820]
[78.63350677 21.50929260]
[74.01949310 7.23655987]
[69.40548706 -7.03617334]
[64.79147339 -21.30890656]
[59.75455856 -35.43793488]
[54.29920197 -49.41073227]
[48.84384537 -63.38353348]
[43.38848877 -77.35633087]
[42.09045029 -62.41259766]
[37.85077667 -48.02423096]
[30.83832550 -34.76430893]
[21.33240700 -23.16096687]
[9.71163368 -13.67636776]
[-3.56114197 -6.68827581]
[-17.95726967 -2.47502494]
[-32.90335846 -1.20442677]
[-47.80411148 -2.92708898]
[-62.06603622 -7.57439899]
[-75.12108612 -14.96125507]
[-86.44928741 -24.79344368]
[-95.59943390 -36.67935181]
[-102.20708466 -50.14556503]
[-106.00906372 -64.65573120]
[-106.85392761 -79.63191986]
[-104.70803833 -94.47763062]
[-99.65685272 -108.60157013]
[-91.90157318 -121.44117737]
[-81.75107574 -132.48506165]
[-69.60965729 -141.29335022]
[-55.96090317 -147.51521301]
[-41.34844208 -150.90283203]
[-26.35428047 -151.32128906]
[-11.57562923 -148.75390625]
[2.39888263 -143.30293274]
[15.01265621 -135.18550110]
[25.76329041 -124.72492218]
[34.22259140 -112.33782196]
[40.05239487 -98.52156830]
[40.94520950 -113.49497986]
[41.83802414 -128.46838379]
[33.21652985 -144.73956299]
[43.44419098 -159.00006104]
[44.11397552 -173.98510742]
[44.78376007 -188.97013855]
[45.23036575 -203.96348572]
[45.45369339 -218.96183777]
[45.67702103 -233.96017456]
[45.67702103 -248.96017456]
[45.45369339 -263.95849609]
[45.23036575 -278.95684814]
[31.21084595 -284.90435791]
[20.82719421 -296.04437256]
[15.87844467 -310.44677734]
[17.22199631 -325.61630249]
[24.62507248 -338.92474365]
[36.80504227 -348.06631470]
[51.65165710 -351.45718384]
[66.59264374 -348.50985718]
[79.03939819 -339.73498535]
[86.83543396 -326.65286255]
[88.63004303 -311.53005981]
[84.11229706 -296.98669434]
[74.06493378 -285.54244995]
[60.22870255 -279.18017578]
[60.45203400 -264.18182373]
[60.67536163 -249.18350220]
[63.41756439 -245.27333069]
[63.73254013 -239.59902954]
[60.67536163 -233.73684692]
[60.45203400 -218.73851013]
[60.22870255 -203.74015808]
[62.85327148 -199.75009155]
[62.99916458 -194.06892395]
[59.76879883 -188.30035400]
[59.09901428 -173.31532288]
[58.42922974 -158.33027649]
[66.35816956 -149.19471741]
[65.92279816 -136.70495605]
[56.81143188 -127.57556915]
[55.91861725 -112.60215759]
[55.02579880 -97.62875366]
[57.36128616 -82.81168365]
[62.81664276 -68.83889008]
[68.27200317 -54.86609268]
[73.72735596 -40.89329147]
[76.23758698 -39.64553833]
[78.40480804 -37.32826233]
[79.81919098 -34.06713867]
[80.12390900 -30.13373566]
[79.06420898 -25.92291641]
[83.67821503 -11.65018272]
[88.29222870 2.62255073]
[92.90623474 16.89528465]
[97.52024841 31.16801834]
[101.06058502 16.59180260]
[110.15888214 4.66615868]
[123.28191376 -2.59923506]
[138.21823120 -3.98003197]
[152.45077515 0.75645643]
[163.58114624 10.81204891]
[169.73365784 24.49220085]
[169.87152100 39.49156952]
[163.97148132 53.28249359]
[153.02781677 63.54095840]
[138.88471985 68.53823853]
[123.92555237 67.43220520]
[110.67119598 60.40923691]
[101.35450745 48.65134811]
[103.13697052 63.54506683]
[104.91943359 78.43878174]
[106.70190430 93.33249664]
[109.98439789 97.42385864]
[110.74092102 103.06309509]
[108.30889130 108.69533539]
[109.64712524 123.63552094]
[110.98535919 138.57571411]
[119.92299652 151.63055420]
[113.35202026 164.99737549]
[124.61322784 172.38653564]
[129.49137878 184.73214722]
[126.41395569 197.44480896]
[116.72225189 205.93600464]
[117.83789825 220.89445496]
[118.95355225 235.85290527]
[120.06919861 250.81135559]
[121.18484497 265.76980591]
[122.30049896 280.72827148]
[133.99291992 291.02026367]
[134.91125488 306.20614624]
[125.02735901 317.28964233]
[126.14300537 332.24810791]
[127.25865936 347.20657349]
[128.37429810 362.16500854]
[129.48995972 377.12347412]
[130.60560608 392.08190918]
[139.34788513 405.26840210]
[132.57862854 418.53588867]
[133.69427490 433.49435425]
[140.57429504 420.16522217]
[152.22982788 410.72338867]
[166.69671631 406.75991821]
[181.53704834 408.94277954]
[194.24993896 416.90405273]
[202.69306946 429.30218506]
[205.44360352 444.04785156]
[202.03805542 458.65615845]
[193.05027771 470.66531372]
[179.99490356 478.05160522]
[165.07199097 479.57028198]
[150.79629517 474.96545410]
[139.57353210 465.01309204]
[133.29455566 451.38873291]
[131.51210022 466.28244019]
[129.72962952 481.17614746]
[127.94715881 496.06988525]
[126.16469574 510.96359253]
[125.27188110 525.93701172]
[125.27188110 540.93701172]
[125.27188110 555.93701172]
[125.27188110 570.93701172]
[135.55364990 583.25219727]
[132.19476318 598.93969727]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 208]
[4 207]
[5 206]
[6 205]
[15 204]
[16 203]
[17 202]
[18 201]
[19 200]
[20 186]
[21 185]
[23 183]
[24 182]
[25 181]
[26 180]
[27 179]
[28 178]
[31 175]
[32 174]
[33 173]
[34 172]
[35 171]
[36 170]
[39 166]
[41 164]
[42 163]
[43 162]
[44 159]
[45 158]
[46 157]
[47 156]
[48 142]
[49 141]
[50 140]
[51 139]
[52 138]
[53 133]
[54 132]
[55 131]
[56 130]
[86 129]
[87 128]
[88 127]
[90 124]
[91 123]
[92 122]
[93 119]
[94 118]
[95 117]
[96 114]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
