%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUCAUAUCCCGACACUGAUCAUACAACUCAGGACAUUCAUCCUCUCACUAUAAACUAGUCCUCUUGCACCAAUGAUCGUGUCUCUCAAGAGGGUCAUCxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[235.81648254 567.49621582]
[230.56976318 553.44378662]
[225.32304382 539.39129639]
[220.07632446 525.33880615]
[216.18032837 522.57653809]
[213.97824097 517.33746338]
[214.88941956 510.78906250]
[210.06343079 496.58660889]
[205.23742676 482.38415527]
[200.41142273 468.18170166]
[195.58543396 453.97924805]
[180.19583130 447.19699097]
[174.35821533 431.06512451]
[182.14416504 415.39993286]
[177.10723877 401.27090454]
[172.07032776 387.14187622]
[167.03341675 373.01284790]
[161.99649048 358.88378906]
[156.95957947 344.75476074]
[151.92266846 330.62573242]
[146.88574219 316.49670410]
[141.84883118 302.36767578]
[134.45793152 315.42044067]
[120.03949738 319.55673218]
[106.85305786 312.40704346]
[102.45240784 298.06710815]
[109.35842896 284.75143433]
[123.61505127 280.08789062]
[137.05480957 286.74722290]
[133.29850769 272.22515869]
[129.54220581 257.70309448]
[125.78590393 243.18104553]
[111.88301086 237.90396118]
[103.65605927 225.30311584]
[104.43556976 210.09634399]
[114.13190460 198.12608337]
[110.37560272 183.60401917]
[107.53939056 181.50921631]
[105.57689667 177.93658447]
[105.17166901 173.31175232]
[106.79129791 168.34950256]
[103.68718719 153.67420959]
[100.58308411 138.99890137]
[97.47897339 124.32360077]
[94.37486267 109.64829254]
[91.16158295 94.99650574]
[87.83932495 80.36904907]
[84.51706696 65.74158478]
[81.19480896 51.11412811]
[77.87255096 36.48666763]
[74.55028534 21.85920715]
[64.46936798 32.96664047]
[49.49091721 32.16291046]
[40.65649033 20.04049492]
[44.47850037 5.53559160]
[58.13950348 -0.65932792]
[71.56809235 6.02110195]
[69.34297943 -8.81294155]
[65.53001404 -14.21412849]
[65.08406830 -19.87965202]
[67.27928925 -24.12112045]
[65.49682617 -39.01483917]
[56.17445755 -51.79779816]
[62.34453964 -65.35432434]
[60.56207275 -80.24803925]
[58.77960587 -95.14175415]
[56.99714279 -110.03547668]
[51.17567825 -96.21119690]
[40.80595779 -85.37289429]
[27.25229836 -78.94651794]
[12.29791546 -77.77757263]
[-2.08968425 -82.01985168]
[-14.01756477 -91.11521912]
[-21.91640854 -103.86701202]
[-24.74698639 -118.59751892]
[-22.13688850 -133.36868286]
[-14.42951584 -146.23712158]
[-2.63890696 -155.50973511]
[11.68368053 -159.96658325]
[26.65386391 -159.02128601]
[40.30205917 -152.79820251]
[50.83261108 -142.11608887]
[56.86058807 -128.37805176]
[58.42111206 -143.29664612]
[59.98163223 -158.21525574]
[61.54215622 -173.13386536]
[63.10268021 -188.05245972]
[64.66320038 -202.97106934]
[51.07591248 -209.65020752]
[40.61322403 -220.55453491]
[34.52399063 -234.35458374]
[33.52548218 -249.37699890]
[37.71895599 -263.80740356]
[46.57975006 -275.90948486]
[59.02285004 -284.23406982]
[73.53572083 -287.79238892]
[75.09624481 -302.71099854]
[76.65676880 -317.62960815]
[62.61829758 -323.18154907]
[50.59900284 -332.31604004]
[41.49079514 -344.35528564]
[35.96956253 -358.40585327]
[34.44501877 -373.42510986]
[37.03029251 -388.29855347]
[43.53354263 -401.92242432]
[53.47218323 -413.28579712]
[66.10870361 -421.54537964]
[80.50538635 -426.08831787]
[95.59390259 -426.57742310]
[110.25458527 -422.97647095]
[123.39951324 -415.55264282]
[134.05325317 -404.85681152]
[141.42521667 -391.68270874]
[144.96835327 -377.00796509]
[144.41975403 -361.92147827]
[139.82011414 -347.54281616]
[131.51075745 -334.93896484]
[120.10829926 -325.04519653]
[106.45887756 -318.59570312]
[91.57537079 -316.06909180]
[90.01485443 -301.15048218]
[88.45433044 -286.23187256]
[101.91667938 -279.74725342]
[112.36774445 -269.02789307]
[118.53231812 -255.35411072]
[119.64878082 -240.36828613]
[115.56313324 -225.87768555]
[106.74991608 -213.63647461]
[94.25716400 -205.13334656]
[79.58181000 -201.41055298]
[78.02128601 -186.49194336]
[76.46076202 -171.57333374]
[74.90023804 -156.65473938]
[73.33971405 -141.73612976]
[71.77919006 -126.81752777]
[71.89086151 -111.81793976]
[73.67332458 -96.92422485]
[75.45578766 -82.03050232]
[77.23825836 -67.13678741]
[86.43312836 -55.41912842]
[80.39054108 -40.79730606]
[82.17300415 -25.90358734]
[84.17701721 -11.03805923]
[86.40213776 3.79598475]
[89.17774963 18.53694725]
[92.50000763 33.16440964]
[95.82226562 47.79186630]
[99.14452362 62.41932678]
[102.46678925 77.04679108]
[105.78904724 91.67424774]
[110.50341797 98.21238708]
[109.05016327 106.54418182]
[112.15427399 121.21949005]
[115.25838470 135.89479065]
[118.36249542 150.57009888]
[121.46660614 165.24539185]
[124.89766693 179.84771729]
[128.65396118 194.36978149]
[142.93835449 200.13714600]
[150.99357605 213.05871582]
[149.90838623 228.06825256]
[140.30795288 239.42474365]
[144.06425476 253.94680786]
[147.82055664 268.46887207]
[151.57685852 282.99093628]
[155.97785950 297.33078003]
[161.01477051 311.45980835]
[166.05169678 325.58883667]
[171.08860779 339.71786499]
[176.12551880 353.84689331]
[181.16244507 367.97592163]
[186.19935608 382.10494995]
[191.23626709 396.23397827]
[196.27319336 410.36300659]
[209.02598572 414.69668579]
[216.84028625 425.42736816]
[217.04441833 438.50561523]
[209.78788757 449.15325928]
[214.61389160 463.35571289]
[219.43988037 477.55816650]
[224.26588440 491.76062012]
[229.09187317 505.96307373]
[234.12879944 520.09210205]
[239.37551880 534.14459229]
[244.62222290 548.19702148]
[249.86894226 562.24951172]
[264.82086182 560.36877441]
[279.80340576 561.98748779]
[294.00857544 567.01837158]
[306.67031860 575.19006348]
[317.10583496 586.06195068]
[324.75228882 599.04760742]
[329.19735718 613.44683838]
[330.20129395 628.48309326]
[327.70999146 643.34545898]
[321.85778809 657.23248291]
[312.96026611 669.39514160]
[301.49731445 679.17767334]
[288.08703613 686.05236816]
[273.45269775 689.64855957]
[258.38348389 689.77227783]
[243.69204712 686.41693115]
[230.17070007 679.76336670]
[218.54861450 670.17047119]
[209.45256042 658.15551758]
[203.37309265 644.36651611]
[200.63804626 629.54705811]
[201.39492798 614.49633789]
[205.60292053 600.02606201]
[213.03509521 586.91656494]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 186]
[2 185]
[3 184]
[4 183]
[7 182]
[8 181]
[9 180]
[10 179]
[11 178]
[14 174]
[15 173]
[16 172]
[17 171]
[18 170]
[19 169]
[20 168]
[21 167]
[22 166]
[29 165]
[30 164]
[31 163]
[32 162]
[36 158]
[37 157]
[41 156]
[42 155]
[43 154]
[44 153]
[45 152]
[46 150]
[47 149]
[48 148]
[49 147]
[50 146]
[51 145]
[57 144]
[58 143]
[61 142]
[62 141]
[64 139]
[65 138]
[66 137]
[67 136]
[83 135]
[84 134]
[85 133]
[86 132]
[87 131]
[88 130]
[96 122]
[97 121]
[98 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
