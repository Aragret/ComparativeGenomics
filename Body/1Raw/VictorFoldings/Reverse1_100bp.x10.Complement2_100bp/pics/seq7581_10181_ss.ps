%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[116.04032898 602.09472656]
[101.14075470 599.75946045]
[87.29035950 593.79144287]
[75.35979462 584.56579590]
[66.09902191 572.66247559]
[60.09018707 558.82971191]
[57.71100235 543.93713379]
[59.11103439 528.92077637]
[64.20227051 514.72460938]
[72.66466522 502.24108887]
[83.96627808 492.25488281]
[97.39667511 485.39373779]
[112.11160278 482.08895874]
[112.55821228 467.09561157]
[113.00481415 452.10226440]
[113.45142365 437.10891724]
[113.89802551 422.11553955]
[114.34463501 407.12219238]
[101.60127258 399.41036987]
[94.38097382 386.26794434]
[94.71061707 371.17630005]
[102.60179138 358.19070435]
[116.02079773 350.85055542]
[116.46739960 335.85720825]
[106.09845734 325.22607422]
[106.33779907 310.01434326]
[117.55899048 299.21051025]
[118.00559998 284.21716309]
[117.11278534 269.24377441]
[114.88766479 254.40971375]
[112.66255188 239.57568359]
[110.43743134 224.74163818]
[108.21231842 209.90759277]
[98.67263794 198.46888733]
[104.27720642 183.67364502]
[102.05208588 168.83959961]
[99.82696533 154.00555420]
[95.72602081 147.85705566]
[97.68086243 138.93424988]
[95.67684937 124.06871796]
[93.67283630 109.20319366]
[91.55821228 94.35299683]
[89.33309174 79.51895142]
[86.11981964 64.86716461]
[81.93280792 50.46338272]
[77.74579620 36.05960083]
[73.55878448 21.65581894]
[69.37177277 7.25203657]
[65.18476105 -7.15174580]
[60.99774933 -21.55552673]
[47.41308975 -33.98687744]
[52.25828552 -50.85374069]
[46.38932419 -64.65791321]
[39.11609650 -77.77661133]
[31.84286690 -90.89530182]
[24.56963730 -104.01399994]
[17.29640770 -117.13269043]
[2.37000179 -121.58692169]
[-4.81920624 -134.99475098]
[-0.48079100 -149.19735718]
[-7.75402069 -162.31604004]
[-15.02725029 -175.43473816]
[-28.48558998 -183.75241089]
[-27.88992882 -198.63510132]
[-35.16315842 -211.75379944]
[-42.43638992 -224.87248230]
[-56.44487000 -219.44329834]
[-71.06217194 -215.97221375]
[-86.01597595 -214.52394104]
[-101.02770233 -215.12542725]
[-115.81769562 -217.76547241]
[-130.11042786 -222.39491272]
[-143.63961792 -228.92747498]
[-156.15325928 -237.24148560]
[-167.41819763 -247.18205261]
[-177.22459412 -258.56399536]
[-185.38975525 -271.17526245]
[-191.76155090 -284.78091431]
[-196.22131348 -299.12747192]
[-198.68594360 -313.94772339]
[-199.10951233 -328.96551514]
[-197.48414612 -343.90112305]
[-193.84011841 -358.47625732]
[-188.24533081 -372.41943359]
[-180.80398560 -385.47085571]
[-171.65472412 -397.38745117]
[-160.96798706 -407.94714355]
[-148.94287109 -416.95327759]
[-135.80339050 -424.23803711]
[-121.79431152 -429.66571045]
[-107.17663574 -433.13519287]
[-92.22267914 -434.58187866]
[-77.21101379 -433.97875977]
[-62.42131042 -431.33709717]
[-48.12908173 -426.70611572]
[-34.60058594 -420.17208862]
[-22.08785439 -411.85671997]
[-10.82398796 -401.91494751]
[-1.01882720 -390.53195190]
[7.14496422 -377.91979980]
[13.51529980 -364.31344604]
[17.97350311 -349.96640015]
[20.43652344 -335.14590454]
[20.85847282 -320.12805176]
[19.23149300 -305.19262695]
[15.58589172 -290.61788940]
[9.98958492 -276.67532349]
[2.54682946 -263.62466431]
[-6.60372162 -251.70909119]
[-17.29159927 -241.15054321]
[-29.31769371 -232.14572144]
[-22.04446411 -219.02702332]
[-14.77123547 -205.90832520]
[-1.83312559 -198.52899170]
[-1.90855587 -182.70796204]
[5.36467361 -169.58927917]
[12.63790321 -156.47058105]
[26.98203468 -152.62591553]
[34.54500198 -139.42529297]
[30.41510201 -124.40592194]
[37.68833160 -111.28723145]
[44.96155930 -98.16853333]
[52.23479080 -85.04984283]
[59.50801849 -71.93114471]
[59.90669250 -86.92584991]
[65.94297028 -100.65768433]
[76.72141266 -111.08962250]
[90.64308929 -116.67414093]
[105.64281464 -116.58280945]
[119.49546051 -110.82918549]
[130.14607239 -100.26677704]
[136.01469421 -86.46245575]
[136.23074341 -71.46401215]
[130.76219177 -57.49637222]
[120.42024994 -46.63155746]
[106.73908234 -40.48129654]
[91.74821472 -39.95794678]
[77.67144775 -45.13913727]
[66.59812927 -55.25473785]
[77.13435364 -49.31212616]
[80.91825867 -37.40137863]
[75.40153503 -25.74253845]
[79.58854675 -11.33875656]
[83.77555847 3.06502533]
[87.96257019 17.46880722]
[92.14957428 31.87258911]
[96.33658600 46.27637100]
[100.52359772 60.68015289]
[106.18813324 46.79084015]
[118.40106964 38.08198547]
[133.37809753 37.25211716]
[146.47842407 44.55838776]
[153.64276123 57.73686600]
[152.65116882 72.70405579]
[143.81089783 84.82221222]
[129.86122131 90.33638763]
[115.12456512 87.53796387]
[104.16713715 77.29383850]
[106.39225006 92.12787628]
[110.60728455 98.99854279]
[108.53836060 107.19918060]
[110.54237366 122.06470490]
[112.54638672 136.93023682]
[114.66101074 151.78042603]
[116.88613129 166.61447144]
[119.11124420 181.44851685]
[128.81007385 193.94825745]
[123.04635620 207.68246460]
[125.27147675 222.51651001]
[127.49658966 237.35055542]
[129.72171021 252.18460083]
[131.94682312 267.01864624]
[138.11592102 253.34596252]
[149.55061340 243.63783264]
[164.04302979 239.76872253]
[178.79490662 242.48570251]
[190.95790100 251.26417542]
[198.18351746 264.40914917]
[199.07661438 279.38253784]
[193.46473694 293.29321289]
[182.43145752 303.45526123]
[168.10713196 307.90649414]
[153.25756836 305.78750610]
[140.74995422 297.50741577]
[132.99894714 284.66378784]
[132.55233765 299.65713501]
[143.11059570 311.10968018]
[142.44407654 326.30871582]
[131.46075439 336.30380249]
[131.01414490 351.29714966]
[143.97245789 359.42300415]
[151.07672119 372.85528564]
[150.50752258 387.93978882]
[142.51777649 400.62915039]
[129.33798218 407.56881714]
[128.89137268 422.56216431]
[128.44477844 437.55551147]
[127.99816895 452.54885864]
[127.55155945 467.54220581]
[127.10495758 482.53555298]
[141.59709167 486.71032715]
[154.59529114 494.35870361]
[165.28248596 504.99987793]
[172.98684692 517.96496582]
[177.22407532 532.43896484]
[177.72784424 547.51202393]
[174.46644592 562.23663330]
[167.64492798 575.68719482]
[157.69207764 587.01818848]
[145.23355103 595.51739502]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 200]
[14 199]
[15 198]
[16 197]
[17 196]
[18 195]
[23 190]
[24 189]
[27 186]
[28 185]
[29 172]
[30 171]
[31 170]
[32 169]
[33 168]
[35 166]
[36 165]
[37 164]
[39 163]
[40 162]
[41 161]
[42 159]
[43 158]
[44 148]
[45 147]
[46 146]
[47 145]
[48 144]
[49 143]
[50 142]
[52 139]
[53 124]
[54 123]
[55 122]
[56 121]
[57 120]
[60 117]
[61 116]
[62 115]
[64 113]
[65 112]
[66 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
