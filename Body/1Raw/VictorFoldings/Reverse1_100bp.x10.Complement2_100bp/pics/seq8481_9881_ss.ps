%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxGUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUA\
) } def
/len { sequence length } bind def

/coor [
[203.14591980 374.94021606]
[207.77220154 360.65899658]
[213.75524902 346.89096069]
[221.03919983 333.76467896]
[229.55601501 321.40264893]
[239.22619629 309.92034912]
[228.73869324 299.19598389]
[218.25119019 288.47158813]
[207.76368713 277.74722290]
[211.08528137 292.37484741]
[208.25009155 307.10446167]
[199.73588562 319.45388794]
[186.97746277 327.34201050]
[172.12484741 329.43957520]
[157.68095398 325.39309692]
[146.07984924 315.88446045]
[139.27650452 302.51602173]
[138.41741943 287.54064941]
[143.64735413 273.48193359]
[154.08497620 262.70898438]
[167.97135925 257.03729248]
[182.96640015 257.42257690]
[196.54450989 263.80093384]
[188.31570435 251.25955200]
[180.08689880 238.71815491]
[171.85809326 226.17674255]
[158.21163940 228.67523193]
[144.60066223 225.77462769]
[133.08705139 217.88056946]
[125.42776489 206.15769958]
[122.80685425 192.35783386]
[125.65244293 178.55830383]
[133.56726074 166.84922791]
[125.52608490 154.18670654]
[117.48490906 141.52418518]
[109.44374084 128.86166382]
[101.40256500 116.19913483]
[86.33931732 108.81842804]
[85.81501007 92.05235291]
[77.58620453 79.51095581]
[62.36984634 76.17923737]
[54.20332336 63.34324646]
[57.47338104 48.85731506]
[49.24457550 36.31591415]
[41.01576614 23.77451324]
[32.69382095 11.29471874]
[24.27920341 -1.12277639]
[15.86458492 -13.54027176]
[1.71784663 -20.62408257]
[0.98336351 -35.50056458]
[-12.12848568 -28.19517326]
[-25.82715225 -22.06036377]
[-40.00838089 -17.14282799]
[-54.56423569 -13.47999001]
[-69.38394165 -11.09972954]
[-84.35471344 -10.02016068]
[-99.36260223 -10.24949932]
[-114.29339600 -11.78600121]
[-129.03344727 -14.61797237]
[-143.47059631 -18.72385788]
[-157.49494934 -24.07241058]
[-170.99975586 -30.62292480]
[-183.88226318 -38.32554245]
[-196.04441833 -47.12164688]
[-207.39366150 -56.94428635]
[-217.84359741 -67.71870422]
[-227.31469727 -79.36290741]
[-235.73490906 -91.78826904]
[-243.04011536 -104.90022278]
[-249.17472839 -118.59897614]
[-254.09207153 -132.78027344]
[-257.75469971 -147.33618164]
[-260.13476562 -162.15591431]
[-261.21411133 -177.12670898]
[-260.98455811 -192.13458252]
[-259.44784546 -207.06535339]
[-256.61566162 -221.80537415]
[-252.50958252 -236.24246216]
[-247.16084290 -250.26673889]
[-240.61013794 -263.77145386]
[-232.90733337 -276.65386963]
[-224.11106873 -288.81588745]
[-214.28826904 -300.16497803]
[-203.51370239 -310.61477661]
[-191.86936951 -320.08572388]
[-179.44387817 -328.50573730]
[-166.33183289 -335.81076050]
[-152.63299561 -341.94519043]
[-138.45162964 -346.86233521]
[-123.89566803 -350.52478027]
[-109.07588959 -352.90460205]
[-94.10509491 -353.98376465]
[-79.09720612 -353.75399780]
[-64.16645813 -352.21707153]
[-49.42648315 -349.38470459]
[-34.98945618 -345.27841187]
[-20.96525764 -339.92944336]
[-7.46062326 -333.37857056]
[5.42166948 -325.67559814]
[17.58357430 -316.87915039]
[28.93253326 -307.05618286]
[39.38216782 -296.28146362]
[48.85295486 -284.63699341]
[57.27280807 -272.21139526]
[64.57764435 -259.09924316]
[70.71188354 -245.40032959]
[75.62882233 -231.21888733]
[79.29104614 -216.66287231]
[81.67068481 -201.84307861]
[82.74961853 -186.87225342]
[82.51965332 -171.86437988]
[80.98252106 -156.93365479]
[78.14993286 -142.19371033]
[74.04343414 -127.75674438]
[68.69429016 -113.73262024]
[62.14321136 -100.22808075]
[54.44005203 -87.34589386]
[45.64343643 -75.18411255]
[35.82032013 -63.83529282]
[25.04545784 -53.38580704]
[13.40085888 -43.91518402]
[26.94572830 -37.71955872]
[28.28208160 -21.95489120]
[36.69670105 -9.53739452]
[45.11131668 2.88010049]
[51.46586609 6.65389585]
[53.55716705 15.54570484]
[61.78597260 28.08710480]
[70.01478577 40.62850571]
[84.60513306 43.39566040]
[93.12897491 55.99720001]
[90.12760162 71.28214264]
[98.35640717 83.82354736]
[109.59631348 86.87407684]
[115.91277313 96.65894318]
[114.06509399 108.15795898]
[122.10626221 120.82048035]
[130.14743042 133.48300171]
[138.18861389 146.14553833]
[146.22978210 158.80805969]
[162.37342834 156.77917480]
[177.73075867 161.97496033]
[189.24346924 173.30712891]
[194.64227295 188.47077942]
[192.89413452 204.41311646]
[184.39949036 217.94793701]
[192.62829590 230.48933411]
[200.85711670 243.03074646]
[209.08592224 255.57214355]
[218.48806763 267.25973511]
[228.97557068 277.98410034]
[239.46307373 288.70849609]
[249.95057678 299.43286133]
[261.64596558 290.02151489]
[274.19506836 281.78286743]
[287.48077393 274.79388428]
[301.37896729 269.11981201]
[315.75994873 264.81359863]
[330.48937988 261.91546631]
[345.42977905 260.45245361]
[360.44158936 260.43826294]
[375.38473511 261.87301636]
[390.11962891 264.74331665]
[404.50869751 269.02233887]
[418.41760254 274.67016602]
[431.71646118 281.63403320]
[444.28115845 289.84890747]
[455.99429321 299.23815918]
[466.74658203 309.71401978]
[476.43756104 321.17877197]
[484.97677612 333.52532959]
[492.28451538 346.63839722]
[498.29254150 360.39553833]
[502.94470215 374.66833496]
[506.19763184 389.32351685]
[508.02093506 404.22421265]
[508.39758301 419.23132324]
[507.32406616 434.20474243]
[504.81036377 449.00463867]
[500.88003540 463.49282837]
[495.56967163 477.53405762]
[488.92895508 490.99719238]
[481.01980591 503.75656128]
[471.91613770 515.69299316]
[461.70291138 526.69506836]
[450.47552490 536.66003418]
[438.33874512 545.49487305]
[425.40594482 553.11712646]
[411.79788208 559.45550537]
[397.64157104 564.45098877]
[383.06921387 568.05682373]
[368.21685791 570.23937988]
[353.22320557 570.97821045]
[338.22824097 570.26654053]
[323.37197876 568.11096191]
[308.79309082 564.53155518]
[294.62774658 559.56176758]
[281.00820923 553.24804688]
[268.06161499 545.64929199]
[255.90882874 536.83648682]
[244.66337585 526.89190674]
[234.43020630 515.90838623]
[225.30490112 503.98846436]
[217.37263489 491.24346924]
[210.70750427 477.79238892]
[205.37170410 463.76083374]
[201.41506958 449.27978516]
[198.87455750 434.48446655]
[197.77388000 419.51303101]
[198.12330627 404.50524902]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 153]
[7 152]
[8 151]
[9 150]
[23 149]
[24 148]
[25 147]
[26 146]
[33 140]
[34 139]
[35 138]
[36 137]
[37 136]
[39 133]
[40 132]
[43 129]
[44 128]
[45 127]
[46 125]
[47 124]
[48 123]
[50 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
