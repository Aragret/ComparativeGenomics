%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[352.73297119 483.69488525]
[361.93157959 471.82293701]
[372.49414062 461.14636230]
[363.17926025 449.38909912]
[353.86437988 437.63183594]
[337.22442627 432.05694580]
[334.68972778 413.81808472]
[325.20080566 402.20080566]
[315.71191406 390.58355713]
[306.22302246 378.96627808]
[293.00473022 384.03482056]
[278.84582520 384.77441406]
[265.12994385 381.09954834]
[253.20152283 373.35668945]
[244.23396301 362.29174805]
[239.11433411 348.97817993]
[238.35554504 334.71289062]
[242.04499817 320.88989258]
[249.83480835 308.86407471]
[240.51992798 297.10681152]
[231.20504761 285.34954834]
[221.89015198 273.59231567]
[212.57527161 261.83505249]
[203.26039124 250.07780457]
[193.94551086 238.32055664]
[184.63063049 226.56329346]
[172.73509216 231.45254517]
[159.96574402 233.09556580]
[147.19322205 231.37326050]
[135.29023743 226.39625549]
[125.07189941 218.49780273]
[117.23989868 208.21147156]
[112.33437347 196.23507690]
[110.69660187 183.38340759]
[112.44531250 170.53274536]
[117.46806335 158.56111145]
[125.42849731 148.28833008]
[116.64788818 136.12687683]
[107.86728668 123.96542358]
[99.08668518 111.80397034]
[100.47267151 126.73979950]
[96.11093140 141.09162903]
[86.64849854 152.73046875]
[73.48908234 159.92974854]
[58.58478546 161.62150574]
[44.14658356 157.55476379]
[32.31629562 148.33282471]
[24.84887314 135.32368469]
[22.85206604 120.45718384]
[26.62208557 105.93868256]
[35.59967422 93.92190552]
[48.45306015 86.18947601]
[63.27552032 83.88845062]
[77.86822510 87.36017609]
[90.06513214 96.08824921]
[83.99130249 82.37297821]
[77.91746521 68.65771484]
[71.84362793 54.94244385]
[59.18102646 45.45724869]
[61.10207748 30.68704796]
[54.76580048 24.10757828]
[55.04160690 16.72207069]
[49.17264557 2.91789436]
[43.30368423 -10.88628292]
[30.78370285 -20.55895615]
[32.92444992 -35.29891968]
[27.05548859 -49.10309601]
[20.81787109 -55.77617264]
[21.20360374 -63.15675354]
[15.54081821 -77.04678345]
[9.87803078 -90.93680573]
[-4.70131493 -87.30040741]
[-19.64978790 -85.77595520]
[-34.66305161 -86.39450073]
[-49.43546295 -89.14344025]
[-63.66626740 -93.96681213]
[-77.06575012 -100.76641846]
[-89.36110687 -109.40383148]
[-100.30203247 -119.70320129]
[-109.66577148 -131.45484924]
[-117.26169586 -144.41952515]
[-122.93515778 -158.33326721]
[-126.57065582 -172.91284180]
[-128.09417725 -187.86140442]
[-127.47470856 -202.87463379]
[-124.72485352 -217.64688110]
[-119.90060425 -231.87738037]
[-113.10016632 -245.27644348]
[-104.46199036 -257.57125854]
[-94.16194153 -268.51156616]
[-82.40972137 -277.87457275]
[-69.44458008 -285.46969604]
[-55.53047562 -291.14230347]
[-40.95067596 -294.77688599]
[-26.00201607 -296.29949951]
[-10.98882675 -295.67907715]
[3.78324223 -292.92831421]
[18.01345062 -288.10317993]
[31.41209030 -281.30191040]
[43.70638275 -272.66299438]
[54.64602661 -262.36227417]
[64.00830841 -250.60945129]
[71.60263062 -237.64384460]
[77.27436829 -223.72938538]
[80.90806580 -209.14936829]
[82.42974091 -194.20060730]
[81.80841064 -179.18745422]
[79.05673218 -164.41555786]
[74.23071289 -150.18565369]
[67.42861938 -136.78742981]
[58.78892517 -124.49367523]
[48.48752213 -113.55466461]
[36.73413849 -104.19310760]
[23.76805878 -96.59959412]
[29.43084526 -82.70957184]
[35.09363174 -68.81954193]
[40.85966492 -54.97205734]
[46.72862625 -41.16787720]
[58.82881927 -32.48257065]
[57.10786057 -16.75524330]
[62.97682190 -2.95106649]
[68.84577942 10.85311031]
[74.81734467 24.61321259]
[87.04550934 33.11740494]
[85.55889893 48.86861038]
[91.63272858 62.58387756]
[97.70656586 76.29914856]
[103.78040314 90.01441193]
[111.24813843 103.02336121]
[120.02874756 115.18482208]
[128.80934143 127.34627533]
[137.58995056 139.50773621]
[154.11524963 134.47747803]
[171.33975220 135.40156555]
[187.18659973 142.15170288]
[199.75083923 153.89810181]
[207.52838135 169.21145630]
[209.59609985 186.23693848]
[205.72131348 202.91874695]
[196.38787842 217.24841309]
[205.70275879 229.00567627]
[215.01763916 240.76292419]
[224.33251953 252.52017212]
[233.64741516 264.27743530]
[242.96229553 276.03466797]
[252.27717590 287.79193115]
[261.59207153 299.54916382]
[276.68417358 294.44354248]
[292.58538818 294.81378174]
[307.37353516 300.59677124]
[319.26733398 311.07620239]
[326.84088135 324.97122192]
[329.19464111 340.59307861]
[326.06219482 356.05020142]
[317.84027100 369.47738647]
[327.32919312 381.09463501]
[336.81808472 392.71191406]
[346.30697632 404.32916260]
[359.03823853 406.39739990]
[366.70242310 416.26879883]
[365.62161255 428.31695557]
[374.93652344 440.07421875]
[384.25140381 451.83148193]
[397.06097412 443.99105835]
[410.72222900 437.75189209]
[425.03594971 433.20495605]
[439.79339600 430.41650391]
[454.77935791 429.42727661]
[469.77526855 430.25164795]
[484.56250000 432.87759399]
[498.92535400 437.26684570]
[512.65441895 443.35537720]
[525.54943848 451.05444336]
[537.42242432 460.25170898]
[548.10021973 470.81307983]
[557.42706299 482.58453369]
[565.26696777 495.39440918]
[571.50561523 509.05590820]
[576.05206299 523.36981201]
[578.83990479 538.12731934]
[579.82861328 553.11334229]
[579.00366211 568.10919189]
[576.37719727 582.89636230]
[571.98736572 597.25903320]
[565.89831543 610.98785400]
[558.19879150 623.88262939]
[549.00109863 635.75524902]
[538.43933105 646.43261719]
[526.66754150 655.75903320]
[513.85736084 663.59851074]
[500.19561768 669.83660889]
[485.88156128 674.38250732]
[471.12390137 677.16986084]
[456.13787842 678.15795898]
[441.14202881 677.33245850]
[426.35501099 674.70544434]
[411.99246216 670.31506348]
[398.26385498 664.22552490]
[385.36941528 656.52551270]
[373.49710083 647.32733154]
[362.82012939 636.76519775]
[353.49417114 624.99304199]
[345.65518188 612.18255615]
[339.41754150 598.52062988]
[334.87219238 584.20635986]
[332.08541870 569.44860840]
[331.09786987 554.46258545]
[331.92391968 539.46673584]
[334.55154419 524.67980957]
[338.94241333 510.31744385]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 163]
[4 162]
[5 161]
[7 158]
[8 157]
[9 156]
[10 155]
[19 147]
[20 146]
[21 145]
[22 144]
[23 143]
[24 142]
[25 141]
[26 140]
[37 132]
[38 131]
[39 130]
[40 129]
[55 128]
[56 127]
[57 126]
[58 125]
[60 123]
[62 122]
[63 121]
[64 120]
[66 118]
[67 117]
[69 116]
[70 115]
[71 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
