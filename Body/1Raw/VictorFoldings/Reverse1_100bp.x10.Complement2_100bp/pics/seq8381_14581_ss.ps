%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[58.50946808 706.92071533]
[43.85990143 710.18994141]
[28.97872925 712.15167236]
[13.98241043 712.79046631]
[-1.01168132 712.10137939]
[-15.88619709 710.08978271]
[-30.52471924 706.77148438]
[-44.81268311 702.17236328]
[-58.63825989 696.32849121]
[-71.89324188 689.28558350]
[-84.47389984 681.09869385]
[-96.28176117 671.83197021]
[-107.22441101 661.55792236]
[-117.21620941 650.35699463]
[-126.17896271 638.31677246]
[-134.04251099 625.53149414]
[-140.74531555 612.10131836]
[-146.23492432 598.13128662]
[-150.46836853 583.73077393]
[-153.41250610 569.01239014]
[-155.04429626 554.09143066]
[-155.35098267 539.08465576]
[-154.33015442 524.10949707]
[-151.98979187 509.28317261]
[-148.34823608 494.72167969]
[-143.43397522 480.53903198]
[-137.28546143 466.84622192]
[-129.95082092 453.75039673]
[-121.48746490 441.35403442]
[-111.96162415 429.75421143]
[-101.44786072 419.04168701]
[-90.02845764 409.30029297]
[-77.79278564 400.60626221]
[-64.83660889 393.02767944]
[-51.26133347 386.62380981]
[-37.17320251 381.44479370]
[-22.68247223 377.53118896]
[-7.90255976 374.91357422]
[7.05086040 373.61248779]
[22.06075668 373.63809204]
[37.00965118 374.99017334]
[39.67544937 360.22894287]
[42.34124374 345.46774292]
[45.00703812 330.70651245]
[39.65479279 316.80676270]
[49.72148895 304.60134888]
[52.38728333 289.84014893]
[55.05307770 275.07891846]
[53.14835358 267.93792725]
[57.87001419 260.11846924]
[60.75528717 245.39859009]
[58.95709229 238.23002625]
[63.79465103 230.48175049]
[66.89876556 215.80644226]
[58.58423996 203.50180054]
[61.52319336 188.57473755]
[74.48581696 179.93713379]
[77.58992767 165.26182556]
[80.69403839 150.58653259]
[83.79814911 135.91122437]
[81.99008179 131.49082947]
[82.93969727 125.88767242]
[87.21932983 120.84820557]
[90.75900269 106.27182770]
[94.19006348 91.66950226]
[97.51232910 77.04204559]
[100.83458710 62.41458511]
[104.15684509 47.78712463]
[107.47910309 33.15966415]
[102.99048615 17.98854446]
[113.35450745 7.29105473]
[116.67676544 -7.33640528]
[119.89003754 -21.98819351]
[122.99414825 -36.66349411]
[126.09825897 -51.33879852]
[129.20237732 -66.01409912]
[132.30648804 -80.68939972]
[133.19929504 -95.66281128]
[124.26165771 -108.71765900]
[130.83264160 -122.08447266]
[129.49440002 -137.02465820]
[128.15617371 -151.96484375]
[126.81793213 -166.90502930]
[125.47969818 -181.84521484]
[124.14146423 -196.78540039]
[120.25891876 -205.05361938]
[122.89621735 -211.95771790]
[121.78057098 -226.91616821]
[120.66492462 -241.87461853]
[119.54927826 -256.83306885]
[104.66669464 -259.20068359]
[90.73152161 -264.93719482]
[78.49525452 -273.73324585]
[68.61778259 -285.11447144]
[61.63178253 -298.46710205]
[57.91400528 -313.07104492]
[57.66493988 -328.13870239]
[60.89802551 -342.85754395]
[67.43890381 -356.43374634]
[76.93482208 -368.13519287]
[88.87369537 -377.33087158]
[102.61166382 -383.52481079]
[117.40785980 -386.38299561]
[132.46434021 -385.75131226]
[146.96914673 -381.66378784]
[160.14001465 -374.34091187]
[171.26669312 -364.17755127]
[179.74911499 -351.72183228]
[185.12983704 -337.64544678]
[187.11868286 -322.70751953]
[185.60839844 -307.71365356]
[180.68043518 -293.47247314]
[172.60054016 -280.75192261]
[161.80447388 -270.23803711]
[148.87443542 -262.49783325]
[134.50772095 -257.94873047]
[135.62338257 -242.99026489]
[136.73902893 -228.03181458]
[137.85467529 -213.07336426]
[139.08164978 -198.12362671]
[140.41987610 -183.18344116]
[141.75811768 -168.24325562]
[143.09635925 -153.30307007]
[144.43458557 -138.36288452]
[145.77282715 -123.42270660]
[154.61473083 -111.43647003]
[148.13948059 -97.00104523]
[153.75241089 -110.91129303]
[163.01170349 -122.71237946]
[175.18710327 -131.47361755]
[189.31843567 -136.50407410]
[204.29124451 -137.40701294]
[218.92468262 -134.11123657]
[232.06472778 -126.87664032]
[242.67507935 -116.27379608]
[249.91899109 -103.13888550]
[253.22514343 -88.50777435]
[252.33280945 -73.53433990]
[247.31236267 -59.39944839]
[238.55975342 -47.21783447]
[226.76522827 -37.95019150]
[212.85896301 -32.32740402]
[197.93765259 -30.79291153]
[183.17807007 -33.46772766]
[169.74420166 -40.14090347]
[158.69551086 -50.28617096]
[150.90335083 -63.10342789]
[146.98178101 -77.58528900]
[143.87767029 -62.90998840]
[140.77355957 -48.23468781]
[137.66944885 -33.55938339]
[134.56533813 -18.88408279]
[136.25660706 -11.68954277]
[131.30422974 -4.01414585]
[127.98196411 10.61331463]
[132.70822144 24.73818016]
[122.10656738 36.48192215]
[118.78430176 51.10938263]
[115.46204376 65.73684692]
[112.13978577 80.36430359]
[108.81752777 94.99176025]
[110.24511719 102.92488861]
[105.33538055 109.81150055]
[101.79570770 124.38787842]
[98.47344971 139.01533508]
[95.36933899 153.69064331]
[92.26522827 168.36593628]
[89.16111755 183.04124451]
[97.51594543 196.18789673]
[94.15888214 211.02651978]
[81.57406616 218.91055298]
[78.46995544 233.58586121]
[75.47518158 248.28385925]
[72.58990479 263.00375366]
[69.81429291 277.74472046]
[67.14849854 292.50592041]
[64.48270416 307.26715088]
[69.64427185 322.22271729]
[59.76825714 333.37231445]
[57.10245895 348.13351440]
[54.43666458 362.89474487]
[51.77087021 377.65597534]
[66.24839783 381.61813354]
[80.31909180 386.84432983]
[93.87283325 393.29367065]
[106.80352783 400.91564941]
[119.00998688 409.65063477]
[130.39668274 419.43023682]
[140.87446594 430.17797852]
[150.36137390 441.80966187]
[158.78312683 454.23431396]
[166.07382202 467.35464478]
[172.17640686 481.06799316]
[177.04310608 495.26702881]
[180.63583374 509.84063721]
[182.92648315 524.67474365]
[183.89710999 539.65325928]
[183.54013062 554.65893555]
[181.85832214 569.57434082]
[178.86486816 584.28271484]
[174.58317566 598.66900635]
[169.04678345 612.62054443]
[162.29899597 626.02819824]
[154.39262390 638.78698730]
[145.38957214 650.79711914]
[135.36027527 661.96447754]
[124.38325500 672.20178223]
[112.54439545 681.42889404]
[99.93637085 689.57354736]
[86.65785217 696.57202148]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 182]
[42 181]
[43 180]
[44 179]
[46 177]
[47 176]
[48 175]
[50 174]
[51 173]
[53 172]
[54 171]
[57 168]
[58 167]
[59 166]
[60 165]
[63 164]
[64 163]
[65 161]
[66 160]
[67 159]
[68 158]
[69 157]
[71 155]
[72 154]
[73 152]
[74 151]
[75 150]
[76 149]
[77 148]
[78 127]
[80 125]
[81 124]
[82 123]
[83 122]
[84 121]
[85 120]
[87 119]
[88 118]
[89 117]
[90 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
