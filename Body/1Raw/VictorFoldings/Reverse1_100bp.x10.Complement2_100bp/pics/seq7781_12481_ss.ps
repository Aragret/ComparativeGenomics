%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[51.12311554 569.77044678]
[47.76423264 554.08294678]
[58.04600525 541.76776123]
[58.04600525 526.76776123]
[58.04600525 511.76773071]
[58.04600525 496.76773071]
[58.04600525 481.76773071]
[44.56293869 475.39022827]
[35.14720535 463.74319458]
[31.70801544 449.10308838]
[34.97965622 434.36141968]
[44.36550522 422.45376587]
[58.04600525 415.77502441]
[58.04600525 400.77502441]
[58.04600525 385.77502441]
[58.04600525 370.77502441]
[58.04600525 355.77502441]
[58.04600525 340.77502441]
[48.72964096 352.53109741]
[34.57120132 357.48477173]
[19.95783806 354.10104370]
[9.41765499 343.42843628]
[6.21664429 328.77395630]
[11.34667397 314.67846680]
[23.21814919 305.50961304]
[38.15256500 304.10842896]
[51.52232742 310.90914917]
[59.18473434 323.80468750]
[53.21717453 310.15777588]
[62.72882462 297.51504517]
[64.73284149 282.64950562]
[58.76527786 269.00262451]
[68.27693176 256.35989380]
[62.30936813 242.71299744]
[71.82102203 230.07025146]
[73.82503510 215.20472717]
[75.82904816 200.33918762]
[77.83306122 185.47366333]
[79.83707428 170.60813904]
[77.61538696 163.55931091]
[81.98318481 155.53683472]
[84.20829773 140.70278931]
[82.65246582 138.37094116]
[81.92656708 135.28230286]
[82.32347107 131.74990845]
[84.01744843 128.18690491]
[87.03283691 125.06258392]
[90.13694763 110.38728333]
[85.98612213 97.03578949]
[95.18775177 86.50860596]
[98.29186249 71.83330536]
[101.39597321 57.15800476]
[104.50007629 42.48270035]
[90.67754364 36.53885651]
[78.28423309 28.01516151]
[67.79541779 17.24075890]
[59.61286926 4.63105345]
[54.04950714 -9.32829666]
[51.31741333 -24.10009003]
[51.51974869 -39.11624908]
[54.64685822 -53.79967499]
[60.57673264 -67.58641815]
[69.07974243 -79.94734955]
[79.82753754 -90.40844727]
[92.40573883 -98.56900024]
[106.32990265 -104.11692810]
[121.06417084 -106.84075928]
[136.04191589 -106.63764191]
[139.14602661 -121.31294250]
[142.25013733 -135.98825073]
[140.96435547 -145.03173828]
[145.51124573 -150.85818481]
[148.83351135 -165.48564148]
[150.83752441 -180.35116577]
[151.50730896 -195.33621216]
[144.39393616 -209.46810913]
[152.69181824 -221.83720398]
[153.36160278 -236.82223511]
[154.03138733 -251.80728149]
[154.70117188 -266.79232788]
[155.37095642 -281.77734375]
[155.70593262 -296.77362061]
[155.70593262 -311.77362061]
[155.70593262 -326.77362061]
[155.70593262 -341.77362061]
[155.25933838 -356.76696777]
[154.36651611 -371.74035645]
[153.25086975 -386.69882202]
[151.91262817 -401.63900757]
[150.57440186 -416.57919312]
[149.23616028 -431.51937866]
[147.89793396 -446.45956421]
[133.07972717 -449.39172363]
[119.68849182 -456.38110352]
[108.80977631 -466.86108398]
[101.32549286 -479.98214722]
[97.84233856 -494.68060303]
[98.64268494 -509.76489258]
[103.66165161 -524.01220703]
[112.49237823 -536.26763916]
[124.41898346 -545.53759766]
[138.47465515 -551.07073975]
[153.51992798 -552.41833496]
[168.33517456 -549.47131348]
[181.71939087 -542.46850586]
[192.58757019 -531.97760010]
[200.05867004 -518.84899902]
[203.52705383 -504.14706421]
[202.71154785 -489.06356812]
[197.67828369 -474.82128906]
[188.83525085 -462.57476807]
[176.89932251 -453.31677246]
[162.83811951 -447.79779053]
[164.17634583 -432.85760498]
[165.51458740 -417.91741943]
[166.85281372 -402.97723389]
[168.19105530 -388.03704834]
[171.21649170 -384.34167480]
[171.95262146 -378.70651245]
[169.33992004 -372.63317871]
[170.23274231 -357.65979004]
[172.23744202 -355.70037842]
[173.58680725 -352.82879639]
[173.92948914 -349.29074097]
[173.00950623 -345.45431519]
[170.70593262 -341.77362061]
[170.70593262 -326.77362061]
[170.70593262 -311.77362061]
[170.70593262 -296.77362061]
[172.92720032 -294.03530884]
[173.93251038 -290.08505249]
[173.16667175 -285.50610352]
[170.35600281 -281.10757446]
[169.68621826 -266.12252808]
[169.01643372 -251.13749695]
[168.34664917 -236.15245056]
[167.67686462 -221.16741943]
[174.83813477 -208.10734558]
[166.49235535 -194.66642761]
[165.82257080 -179.68138123]
[174.50642395 -191.91210938]
[187.59495544 -199.23948669]
[202.56095886 -200.24870300]
[216.51475525 -194.74490356]
[226.76205444 -183.79078674]
[231.32429504 -169.50141907]
[229.32055664 -154.63586426]
[221.13774109 -142.06440735]
[208.35581970 -134.21440125]
[193.44277954 -132.60157776]
[179.27809143 -137.53733826]
[168.59674072 -148.06866455]
[163.46096802 -162.16339111]
[160.13871765 -147.53591919]
[156.92543030 -132.88414001]
[153.82133484 -118.20883179]
[150.71722412 -103.53353119]
[164.49438477 -97.65443420]
[176.86373901 -89.19766235]
[187.34883118 -78.48670197]
[195.54533386 -65.93190002]
[201.13665771 -52.01475906]
[203.90617371 -37.26947403]
[203.74560547 -22.26240921]
[200.65924072 -7.57036400]
[194.76387024 6.24160814]
[186.28434753 18.64192772]
[175.54502869 29.15294647]
[162.95735168 37.36934662]
[149.00410461 42.97378159]
[134.22082520 45.74910355]
[119.17538452 45.58681107]
[116.07127380 60.26211548]
[112.96716309 74.93741608]
[109.86305237 89.61271667]
[114.01387787 102.96421051]
[104.81224823 113.49139404]
[101.70813751 128.16668701]
[99.04234314 142.92791748]
[96.81723022 157.76194763]
[94.70260620 172.61215210]
[92.69859314 187.47767639]
[90.69458008 202.34321594]
[88.69055939 217.20874023]
[86.68654633 232.07426453]
[92.51077271 246.78443909]
[83.14245605 258.36389160]
[88.96668243 273.07406616]
[79.59836578 284.65353394]
[77.59435272 299.51904297]
[83.41857910 314.22921753]
[74.05026245 325.80868530]
[73.04600525 340.77502441]
[73.04600525 355.77502441]
[73.04600525 370.77502441]
[73.04600525 385.77502441]
[73.04600525 400.77502441]
[73.04600525 415.77502441]
[86.72650146 422.45376587]
[96.11235046 434.36141968]
[99.38398743 449.10308838]
[95.94480133 463.74319458]
[86.52906799 475.39022827]
[73.04600525 481.76773071]
[73.04600525 496.76773071]
[73.04600525 511.76773071]
[73.04600525 526.76776123]
[73.04600525 541.76776123]
[83.32777405 554.08294678]
[79.96888733 569.77044678]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 208]
[4 207]
[5 206]
[6 205]
[7 204]
[13 198]
[14 197]
[15 196]
[16 195]
[17 194]
[18 193]
[28 192]
[30 190]
[31 189]
[33 187]
[35 185]
[36 184]
[37 183]
[38 182]
[39 181]
[41 180]
[42 179]
[47 178]
[48 177]
[50 175]
[51 174]
[52 173]
[53 172]
[68 157]
[69 156]
[70 155]
[72 154]
[73 153]
[74 140]
[75 139]
[77 137]
[78 136]
[79 135]
[80 134]
[81 133]
[82 129]
[83 128]
[84 127]
[85 126]
[86 121]
[87 120]
[88 117]
[89 116]
[90 115]
[91 114]
[92 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
