%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[-8.01522827 558.10699463]
[-8.35461044 573.12805176]
[-10.78128624 587.95562744]
[-15.24802208 602.30114746]
[-21.66786957 615.88537598]
[-29.91586494 628.44390869]
[-39.83145905 639.73229980]
[-51.22164536 649.53076172]
[-63.86470413 657.64855957]
[-77.51454163 663.92779541]
[-91.90544891 668.24609375]
[-106.75730896 670.51947021]
[-121.78103638 670.70367432]
[-136.68417358 668.79510498]
[-151.17663574 664.83093262]
[-164.97631836 658.88830566]
[-177.81460571 651.08288574]
[-189.44160461 641.56658936]
[-199.63098145 630.52478027]
[-208.18440247 618.17224121]
[-214.93537903 604.74945068]
[-219.75248718 590.51776123]
[-222.54197693 575.75415039]
[-223.24954224 560.74591064]
[-221.86140442 545.78533936]
[-218.40458679 531.16357422]
[-212.94638062 517.16522217]
[-205.59303284 504.06274414]
[-196.48768616 492.11123657]
[-185.80755615 481.54330444]
[-173.76054382 472.56469727]
[-160.58116150 465.35012817]
[-146.52593994 460.04006958]
[-131.86845398 456.73785400]
[-116.89404297 455.50778198]
[-101.89417267 456.37380981]
[-87.16082001 459.31906128]
[-72.98078156 464.28619385]
[-66.10136414 450.95678711]
[-59.22195435 437.62734985]
[-52.34254074 424.29791260]
[-45.46313095 410.96850586]
[-38.58371735 397.63906860]
[-39.62222672 382.78070068]
[-26.41750145 374.06600952]
[-19.53808975 360.73657227]
[-27.69994354 348.27667236]
[-28.53477287 333.30471802]
[-21.71838570 319.83612061]
[-8.99206924 311.53323364]
[6.28108358 310.70980835]
[13.16049576 297.38037109]
[6.31379366 284.17959595]
[8.57992077 269.30249023]
[19.29700851 258.48593140]
[34.50400543 256.02557373]
[41.38341904 242.69613647]
[48.26282883 229.36671448]
[55.14224243 216.03727722]
[60.80503082 202.14726257]
[65.20602417 187.80740356]
[69.60702515 173.46755981]
[74.00802612 159.12771606]
[70.34542084 144.69044495]
[81.79117584 133.76774597]
[86.19216919 119.42790222]
[90.59317017 105.08805847]
[93.25896454 90.32683563]
[94.15177917 75.35343170]
[95.04459381 60.38002777]
[95.93740845 45.40662003]
[96.83023071 30.43321609]
[94.49240875 25.76613045]
[94.20709991 21.13235283]
[95.61791229 17.30813026]
[98.11200714 14.81577492]
[99.67252350 -0.10283014]
[101.23304749 -15.02143478]
[91.60344696 -24.43872833]
[89.19109344 -37.49211884]
[94.65634918 -49.37543106]
[105.80036163 -55.84384918]
[107.58283234 -70.73756409]
[109.36529541 -85.63128662]
[111.14775848 -100.52500153]
[103.80390930 -111.12833405]
[105.59514618 -123.49664307]
[115.02143860 -131.07765198]
[117.02545166 -145.94317627]
[119.02946472 -160.80870056]
[120.92275238 -175.68873596]
[122.70522308 -190.58245850]
[124.48768616 -205.47618103]
[122.24110413 -211.69424438]
[123.31135559 -217.27560425]
[126.55137634 -220.78436279]
[128.77648926 -235.61839294]
[114.74671173 -241.10592651]
[102.29006958 -249.57821655]
[92.03137970 -260.61032104]
[84.48522949 -273.64883423]
[80.03011322 -288.03979492]
[78.88951111 -303.06134033]
[81.12062836 -317.95999146]
[86.61155701 -331.98846436]
[95.08686829 -344.44305420]
[106.12145233 -354.69906616]
[119.16181183 -362.24206543]
[133.55384827 -366.69366455]
[148.57566833 -367.83062744]
[163.47378540 -365.59591675]
[177.50090027 -360.10159302]
[189.95343018 -351.62326050]
[200.20677185 -340.58618164]
[207.74661255 -327.54400635]
[212.19474792 -313.15087891]
[213.32806396 -298.12878418]
[211.08973694 -283.23123169]
[205.59201050 -269.20544434]
[197.11065674 -256.75494385]
[186.07110596 -246.50428772]
[173.02709961 -238.96762085]
[158.63290405 -234.52296448]
[143.61053467 -233.39328003]
[141.38542175 -218.55923462]
[139.38140869 -203.69371033]
[137.59893799 -188.79998779]
[135.81646729 -173.90628052]
[138.14286804 -166.89131165]
[133.89498901 -158.80468750]
[131.89097595 -143.93916321]
[129.88696289 -129.07363892]
[137.41743469 -113.22248840]
[126.04148102 -98.74253845]
[124.25901031 -83.84881592]
[122.47654724 -68.95510101]
[120.69408417 -54.06138229]
[131.64408875 -41.29673767]
[129.94056702 -24.22591972]
[116.15165710 -13.46091175]
[114.59113312 1.45769286]
[113.03060913 16.37629700]
[111.80363464 31.32603073]
[110.91082001 46.29943848]
[110.01800537 61.27284241]
[109.12518311 76.24624634]
[108.23236847 91.21965790]
[116.25884247 78.54780579]
[128.09289551 69.33068848]
[142.34426880 64.65111542]
[157.33872986 65.05884552]
[171.31472778 70.50596619]
[182.63040161 80.35256958]
[189.95639038 93.44187164]
[192.43203735 108.23616791]
[189.76651001 122.99743652]
[182.27293396 135.99153137]
[170.83168030 145.69192505]
[156.78683472 150.95901489]
[141.78837585 151.17405701]
[127.59831238 146.31175232]
[115.88366699 136.94334412]
[108.02067566 124.16940308]
[104.93301392 109.48905182]
[100.53202057 123.82890320]
[96.13101959 138.16874695]
[99.47882843 153.63169861]
[88.34786987 163.52871704]
[83.94687653 177.86856079]
[79.54587555 192.20840454]
[75.14487457 206.54824829]
[86.61486053 196.88185120]
[101.12127686 193.06558228]
[115.86315918 195.83630371]
[127.99407959 204.65904236]
[135.17175293 217.83026123]
[136.01028442 232.80680847]
[130.34774780 246.69694519]
[119.27751923 256.81869507]
[104.93706512 261.21771240]
[90.09531403 259.04461670]
[77.61796570 250.71900940]
[69.91420746 237.84841919]
[68.47167206 222.91670227]
[61.59225845 236.24612427]
[54.71284866 249.57556152]
[47.83343506 262.90499878]
[54.63772964 276.72555542]
[52.02982330 291.72729492]
[41.21631241 302.19302368]
[26.48992538 304.25979614]
[19.61051369 317.58923340]
[27.78739929 330.51538086]
[28.39236641 345.69863892]
[21.36300087 359.05731201]
[8.67575169 367.05041504]
[-6.20865965 367.61599731]
[-13.08807182 380.94543457]
[-12.54162407 396.75720215]
[-25.25428772 404.51846313]
[-32.13370132 417.84790039]
[-39.01311111 431.17733765]
[-45.89252472 444.50677490]
[-52.77193832 457.83618164]
[-59.65135193 471.16561890]
[-47.38782883 479.84619141]
[-36.45181274 490.14907837]
[-27.05616760 501.87374878]
[-19.38378716 514.79199219]
[-13.58401680 528.65234375]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 205]
[39 204]
[40 203]
[41 202]
[42 201]
[43 200]
[45 198]
[46 197]
[51 192]
[52 191]
[56 187]
[57 186]
[58 185]
[59 184]
[60 171]
[61 170]
[62 169]
[63 168]
[65 166]
[66 165]
[67 164]
[68 147]
[69 146]
[70 145]
[71 144]
[72 143]
[76 142]
[77 141]
[78 140]
[82 137]
[83 136]
[84 135]
[85 134]
[88 132]
[89 131]
[90 130]
[91 128]
[92 127]
[93 126]
[96 125]
[97 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
