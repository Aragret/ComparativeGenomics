%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxGAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCG\
) } def
/len { sequence length } bind def

/coor [
[140.21031189 612.83660889]
[125.63623047 616.49914551]
[110.68418121 618.00048828]
[95.67287445 617.30877686]
[80.92227173 614.43865967]
[66.74678802 609.45129395]
[53.44857407 602.45306396]
[41.31107712 593.59307861]
[30.59301567 583.06024170]
[21.52284050 571.07904053]
[14.29388332 557.90478516]
[9.06023216 543.81842041]
[5.93344164 529.12005615]
[4.98015928 514.12310791]
[6.22070456 499.14715576]
[9.62863445 484.51144409]
[15.13131046 470.52792358]
[22.61144066 457.49468994]
[31.90958595 445.68951416]
[42.82755661 435.36401367]
[55.13263702 426.73831177]
[68.56253815 419.99624634]
[82.83100891 415.28149414]
[97.63391113 412.69461060]
[112.65571594 412.29071045]
[114.43818665 397.39700317]
[116.22064972 382.50326538]
[108.45500946 366.76602173]
[119.61412048 352.11828613]
[121.17464447 337.19967651]
[122.73516846 322.28106689]
[124.29569244 307.36245728]
[123.62590790 292.37744141]
[120.74063873 277.65753174]
[117.85536194 262.93765259]
[114.97009277 248.21775818]
[112.08481598 233.49786377]
[102.22400665 226.49136353]
[99.69977570 214.25160217]
[106.39948273 203.22994995]
[103.73368835 188.46873474]
[101.06789398 173.70751953]
[90.50106049 184.35372925]
[75.57343292 182.88198853]
[67.28911591 170.37718201]
[71.75498962 156.05740356]
[85.67897797 150.47866821]
[98.79588318 157.75204468]
[97.23535919 142.83345032]
[95.67483521 127.91484070]
[94.00329590 113.00826263]
[85.77754974 101.70213318]
[91.10298920 88.77420044]
[89.32051849 73.88048553]
[87.53805542 58.98676682]
[85.75559235 44.09304810]
[74.37963104 29.61309624]
[81.91010284 13.76194763]
[79.90608978 -1.10358012]
[77.90207672 -15.96910858]
[75.89806366 -30.83463669]
[73.89405060 -45.70016479]
[61.60976791 -55.27796173]
[59.78917694 -70.38227081]
[68.99584961 -82.03443146]
[66.99183655 -96.89995575]
[64.98782349 -111.76548767]
[60.73995209 -119.85210419]
[63.06633759 -126.86706543]
[61.28387451 -141.76078796]
[59.27985764 -156.62631226]
[57.05474091 -171.46035767]
[54.82962418 -186.29440308]
[52.60450745 -201.12844849]
[50.37939072 -215.96249390]
[48.15427399 -230.79653931]
[43.78647614 -238.81901550]
[46.00816345 -245.86782837]
[36.24301910 -254.29426575]
[34.87990952 -266.71704102]
[42.10741806 -276.41702271]
[40.32495117 -291.31076050]
[38.54248428 -306.20446777]
[36.76002121 -321.09817505]
[21.74394417 -321.92800903]
[7.10013723 -325.35293579]
[-6.72639227 -331.26885986]
[-19.31547165 -339.49603271]
[-30.28453445 -349.78439331]
[-39.30023956 -361.82135010]
[-46.08861542 -375.24108887]
[-50.44336700 -389.63577271]
[-52.23215866 -404.56799316]
[-51.40063477 -419.58398438]
[-47.97405624 -434.22738647]
[-42.05656052 -448.05325317]
[-33.82797241 -460.64138794]
[-23.53834724 -471.60928345]
[-11.50037479 -480.62362671]
[1.92012250 -487.41049194]
[16.31531143 -491.76361084]
[31.24773979 -493.55072021]
[46.26362610 -492.71746826]
[60.90665436 -489.28924561]
[74.73184204 -483.37017822]
[87.31905365 -475.14016724]
[98.28578186 -464.84930420]
[107.29875946 -452.81030273]
[114.08409119 -439.38903809]
[118.43557739 -424.99334717]
[120.22098541 -410.06072998]
[119.38605499 -395.04492188]
[115.95615387 -380.40228271]
[110.03552246 -366.57775879]
[101.80407715 -353.99148560]
[91.51196289 -343.02593994]
[79.47194672 -334.01431274]
[66.04991150 -327.23049927]
[51.65373611 -322.88064575]
[53.43620300 -307.98693848]
[55.21866989 -293.09323120]
[57.00113297 -278.19949341]
[68.26111603 -264.73919678]
[60.87369156 -247.87184143]
[62.98831558 -233.02165222]
[65.21343231 -218.18760681]
[67.43855286 -203.35356140]
[69.66366577 -188.51951599]
[71.88878632 -173.68547058]
[74.11389923 -158.85142517]
[77.35392761 -155.34268188]
[78.42417145 -149.76132202]
[76.17758942 -143.54325867]
[77.96005249 -128.64953613]
[79.85334778 -113.76950073]
[81.85736084 -98.90396881]
[83.86137390 -84.03844452]
[95.82495117 -75.24023438]
[98.06906891 -60.19301987]
[88.75957489 -47.70417786]
[90.76358795 -32.83864975]
[92.76760864 -17.97312164]
[94.77162170 -3.10759377]
[96.77563477 11.75793457]
[106.20191956 19.33893776]
[107.99315643 31.70725441]
[100.64930725 42.31058502]
[102.43177032 57.20429993]
[104.21424103 72.09801483]
[105.99670410 86.99173737]
[114.22245026 98.29786682]
[108.89701080 111.22579956]
[113.02401733 119.37476349]
[110.59344482 126.35431671]
[112.15396118 141.27291870]
[113.71448517 156.19152832]
[115.82910919 171.04171753]
[118.49490356 185.80293274]
[121.16070557 200.56416321]
[133.37835693 214.34132385]
[126.80471039 230.61259460]
[129.68998718 245.33248901]
[132.57525635 260.05236816]
[135.46052551 274.77227783]
[138.34579468 289.49215698]
[142.48112488 275.07345581]
[150.46243286 262.37310791]
[161.66030884 252.39274597]
[175.19160461 245.91943359]
[189.98922729 243.46369934]
[204.88613892 245.21922302]
[218.70753479 251.04753113]
[230.36338806 260.48898315]
[238.93446350 272.79901123]
[243.74481201 287.00677490]
[244.41508484 301.99179077]
[240.89241028 316.57226562]
[233.45460510 329.59835815]
[222.68824768 340.04275513]
[209.44239807 347.08178711]
[194.76170349 350.16027832]
[179.80393982 349.03549194]
[165.74873352 343.79611206]
[153.70452881 334.85534668]
[144.62120056 322.91830444]
[139.21429443 308.92300415]
[137.65377808 323.84161377]
[136.09324646 338.76019287]
[134.53273010 353.67880249]
[142.03363037 364.17163086]
[140.42674255 376.56524658]
[131.11436462 384.28573608]
[129.33190918 399.17947388]
[127.54943848 414.07318115]
[142.05169678 418.01049805]
[155.82608032 424.01748657]
[168.57901001 431.96612549]
[180.03865051 441.68695068]
[189.96073914 452.97277832]
[198.13377380 465.58306885]
[204.38356018 479.24899292]
[208.57688904 493.67932129]
[210.62434387 508.56640625]
[210.48233032 523.59295654]
[208.15383911 538.43872070]
[203.68852234 552.78723145]
[197.18154907 566.33258057]
[188.77162170 578.78613281]
[178.63800049 589.88238525]
[166.99667358 599.38488770]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 194]
[26 193]
[27 192]
[29 189]
[30 188]
[31 187]
[32 186]
[33 165]
[34 164]
[35 163]
[36 162]
[37 161]
[40 159]
[41 158]
[42 157]
[48 156]
[49 155]
[50 154]
[51 152]
[53 150]
[54 149]
[55 148]
[56 147]
[58 144]
[59 143]
[60 142]
[61 141]
[62 140]
[65 137]
[66 136]
[67 135]
[69 134]
[70 133]
[71 130]
[72 129]
[73 128]
[74 127]
[75 126]
[76 125]
[78 124]
[81 122]
[82 121]
[83 120]
[84 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
