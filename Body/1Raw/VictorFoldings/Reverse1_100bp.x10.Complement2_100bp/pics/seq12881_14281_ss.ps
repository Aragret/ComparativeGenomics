%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAUCAUCACCCCACUCCGAACCUAAUCGCAAAUCUUCCCGAUAAACAACACCCAGAGUACUCAACCUCACAUCCUAUUUAGUACGAUUCCGCUCCUACxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[23.56168556 475.85470581]
[21.55744553 491.08227539]
[12.19521523 503.25781250]
[-2.00661159 509.10620117]
[-17.22781372 507.05426025]
[-29.37396622 497.65390015]
[-35.17781448 483.43380737]
[-33.07815170 468.21911621]
[-23.63977623 456.10247803]
[-9.40156555 450.34323120]
[-7.39755201 435.47772217]
[-5.39353848 420.61218262]
[-3.50024605 405.73214722]
[-1.71778023 390.83843994]
[0.06468570 375.94473267]
[-2.26170278 368.92974854]
[1.98616707 360.84313965]
[3.99018073 345.97760010]
[5.99419451 331.11209106]
[0.02663242 317.46517944]
[9.53828526 304.82244873]
[11.54229832 289.95690918]
[13.54631233 275.09140015]
[15.55032635 260.22586060]
[7.09912825 272.61849976]
[-4.23681593 282.44174194]
[-17.70563507 289.04409790]
[-32.41399002 291.98760986]
[-47.38632965 291.07705688]
[-61.62958908 286.37286377]
[-74.19906616 278.18701172]
[-84.26107788 267.06243896]
[-91.14823914 253.73701477]
[-94.40374756 239.09455872]
[-93.81169128 224.10624695]
[-89.41132355 209.76620483]
[-81.49451447 197.02555847]
[-70.58634949 186.72933960]
[-57.41033554 179.56048584]
[-42.84038925 175.99444580]
[-27.84287834 176.26776123]
[-13.41253757 180.36230469]
[-0.50647897 188.00648499]
[10.01928616 198.69331360]
[17.46661949 211.71395874]
[21.34156990 226.20481873]
[21.38647652 241.20983887]
[28.06667137 227.77946472]
[26.80705833 212.93821716]
[39.88056946 204.02789307]
[46.56076431 190.59751892]
[53.24095917 177.16712952]
[59.92115402 163.73675537]
[66.60134888 150.30638123]
[73.28153992 136.87600708]
[79.96173859 123.44563293]
[71.83091736 112.55915833]
[69.16747284 99.23506165]
[72.48836517 86.05942535]
[81.14902496 75.58954620]
[93.46849823 69.85752106]
[107.05567932 69.97589111]
[113.93509674 56.64646530]
[120.81450653 43.31703568]
[127.69391632 29.98760605]
[134.17341614 16.45925903]
[140.24725342 2.74399328]
[146.32109070 -10.97127342]
[149.75215149 -25.57359505]
[150.42193604 -40.55863571]
[151.09172058 -55.54367447]
[151.76150513 -70.52870941]
[152.43128967 -85.51374817]
[153.10107422 -100.49878693]
[153.77085876 -115.48382568]
[154.44064331 -130.46887207]
[155.11042786 -145.45390320]
[154.99876404 -160.45349121]
[154.10594177 -175.42689514]
[153.21313477 -190.40029907]
[144.66813660 -203.71546936]
[151.63418579 -216.88072205]
[150.74136353 -231.85412598]
[149.84855652 -246.82752991]
[148.95573425 -261.80093384]
[148.06292725 -276.77432251]
[144.74702454 -282.49417114]
[144.80831909 -288.17687988]
[147.37319946 -292.20559692]
[146.92658997 -307.19894409]
[146.47998047 -322.19229126]
[146.03337097 -337.18563843]
[137.88862610 -350.74932861]
[145.24356079 -363.70132446]
[144.79695129 -378.69467163]
[144.35034180 -393.68801880]
[143.90373230 -408.68136597]
[129.68054199 -414.04507446]
[118.59605408 -424.44711304]
[112.34056091 -438.30123901]
[111.86798096 -453.49484253]
[117.25038910 -467.71096802]
[127.66699982 -478.78176880]
[141.52935791 -485.01901245]
[156.72355652 -485.47161865]
[170.93258667 -480.07052612]
[181.98966980 -469.63934326]
[188.20869446 -455.76879883]
[188.64129639 -440.57400513]
[183.22151184 -426.37210083]
[172.77580261 -415.32873535]
[158.89707947 -409.12799072]
[159.34368896 -394.13461304]
[159.79029846 -379.14126587]
[160.23690796 -364.14791870]
[168.34971619 -351.65667725]
[161.02671814 -337.63223267]
[161.47332764 -322.63888550]
[161.91993713 -307.64553833]
[162.36654663 -292.65219116]
[163.03633118 -277.66714478]
[163.92913818 -262.69375610]
[164.82196045 -247.72033691]
[165.71478271 -232.74693298]
[166.60758972 -217.77352905]
[175.08871460 -205.52935791]
[168.18653870 -191.29312134]
[169.07934570 -176.31971741]
[169.97216797 -161.34631348]
[179.86282349 -172.62348938]
[194.66870117 -175.02894592]
[207.62072754 -167.46292114]
[212.79743958 -153.38450623]
[207.83209229 -139.23016357]
[194.99478149 -131.47106934]
[180.15455627 -133.65457153]
[170.09545898 -144.78411865]
[169.42567444 -129.79908752]
[168.75588989 -114.81404114]
[168.08610535 -99.82900238]
[167.41632080 -84.84396362]
[166.74653625 -69.85892487]
[166.07675171 -54.87388992]
[165.40696716 -39.88885117]
[164.73718262 -24.90381050]
[171.96936035 -38.04518127]
[182.00190735 -49.19632721]
[194.30853271 -57.77228165]
[208.24365234 -63.32316589]
[223.07626343 -65.55779266]
[238.02827454 -64.35894775]
[252.31533813 -59.78950119]
[265.18798828 -52.08916855]
[275.97091675 -41.66189194]
[284.09854126 -29.05466461]
[289.14440918 -14.92883968]
[290.84390259 -0.02542615]
[289.10784912 14.87377167]
[284.02731323 28.98717117]
[275.86877441 41.57441330]
[265.06027222 51.97519302]
[252.16877747 59.64390945]
[237.87054443 64.17827606]
[222.91563416 65.34043121]
[208.08854675 63.06940460]
[194.16709900 57.48433304]
[181.88156128 48.87820053]
[171.87640381 37.70246506]
[164.67649841 24.54338646]
[160.65954590 10.09125900]
[160.03634644 -4.89743948]
[153.96250916 8.81782722]
[147.88868713 22.53309441]
[148.77148438 25.19369507]
[148.65357971 28.36429596]
[147.33544922 31.66549301]
[144.75843811 34.65272522]
[141.02334595 36.86701965]
[134.14393616 50.19644547]
[127.26452637 63.52587509]
[120.38510895 76.85530853]
[129.26054382 90.25063324]
[130.19329834 106.29238892]
[122.93019104 120.62610626]
[109.44275665 129.36093140]
[93.39211273 130.12582397]
[86.71192169 143.55619812]
[80.03172302 156.98657227]
[73.35153198 170.41696167]
[66.67133331 183.84733582]
[59.99114227 197.27770996]
[53.31094742 210.70808411]
[54.09274673 226.50996399]
[41.49704742 234.45965576]
[34.81685257 247.89002991]
[30.41585350 262.22988892]
[28.41184044 277.09539795]
[26.40782738 291.96093750]
[24.40381241 306.82644653]
[30.22803497 321.53662109]
[20.85972214 333.11608887]
[18.85570908 347.98162842]
[16.85169601 362.84713745]
[14.95840263 377.72717285]
[13.17593670 392.62091064]
[11.39347076 407.51461792]
[13.48094082 416.40731812]
[9.47198963 422.61621094]
[7.46797609 437.48171997]
[5.46396255 452.34725952]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 210]
[11 209]
[12 208]
[13 206]
[14 205]
[15 204]
[17 203]
[18 202]
[19 201]
[21 199]
[22 198]
[23 197]
[24 196]
[47 195]
[48 194]
[50 192]
[51 191]
[52 190]
[53 189]
[54 188]
[55 187]
[56 186]
[62 181]
[63 180]
[64 179]
[65 178]
[66 173]
[67 172]
[68 171]
[69 145]
[70 144]
[71 143]
[72 142]
[73 141]
[74 140]
[75 139]
[76 138]
[77 137]
[78 129]
[79 128]
[80 127]
[82 125]
[83 124]
[84 123]
[85 122]
[86 121]
[89 120]
[90 119]
[91 118]
[92 117]
[94 115]
[95 114]
[96 113]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
