%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[143.41990662 514.80499268]
[153.33044434 502.18911743]
[152.88385010 487.19577026]
[152.43724060 472.20242310]
[144.32443237 459.71115112]
[151.64741516 445.68673706]
[151.20080566 430.69338989]
[150.75421143 415.70004272]
[150.30760193 400.70669556]
[149.19195557 385.74822998]
[147.40948486 370.85452271]
[145.62701416 355.96081543]
[141.71095276 349.69293213]
[143.93058777 340.83227539]
[142.37007141 325.91366577]
[140.80953979 310.99508667]
[139.24902344 296.07647705]
[135.70935059 281.50009155]
[123.87311554 272.45837402]
[126.06156921 256.78924561]
[120.60621643 242.81645203]
[115.15085602 228.84365845]
[109.69549561 214.87086487]
[104.24014282 200.89805603]
[102.64595795 215.81311035]
[96.78152466 229.61920166]
[87.15418243 241.12200928]
[74.59678650 249.32638550]
[60.19568253 253.52258301]
[45.19670105 253.34759521]
[30.89741325 248.81655884]
[18.53484535 240.32144165]
[9.17848396 228.59716797]
[3.63774872 214.65800476]
[2.39196873 199.70983887]
[5.54891634 185.04580688]
[12.83548355 171.93450928]
[23.62130928 161.51022339]
[36.97331238 154.67472839]
[51.73641205 152.01936340]
[66.63344574 153.77386475]
[80.37568665 159.78642273]
[91.77427673 169.53692627]
[99.84169769 182.17861938]
[98.50345612 167.23843384]
[97.16522217 152.29824829]
[95.82698822 137.35806274]
[94.48875427 122.41787720]
[93.15052032 107.47769165]
[89.35191345 100.36832428]
[91.90528107 92.30537415]
[88.14626312 83.98025513]
[90.88607025 77.11619568]
[89.99324799 62.14278793]
[89.10043335 47.16938400]
[85.78454590 41.44955826]
[85.84583282 35.76684189]
[88.41070557 31.73813438]
[87.96409607 16.74478531]
[87.51749420 1.75143468]
[87.07088470 -13.24191570]
[86.62428284 -28.23526573]
[70.81541443 -32.21450806]
[56.77410889 -40.46929169]
[45.62826538 -52.32742310]
[38.27063751 -66.82763672]
[35.28733444 -82.79751587]
[36.91112137 -98.94827271]
[43.00330353 -113.97876740]
[53.06550980 -126.68034363]
[66.28047180 -136.03398132]
[81.57838440 -141.29208374]
[80.68556976 -156.26548767]
[79.79274750 -171.23890686]
[78.89993286 -186.21231079]
[78.00711823 -201.18571472]
[77.11430359 -216.15911865]
[76.22148895 -231.13252258]
[75.32867432 -246.10592651]
[64.83473969 -261.23730469]
[73.29534149 -276.61215210]
[72.17969513 -291.57058716]
[57.21190262 -298.59603882]
[47.88291168 -312.13360596]
[46.66097260 -328.43466187]
[53.78516388 -343.04293823]
[67.22591400 -352.01281738]
[65.88768005 -366.95297241]
[54.94788361 -381.76522827]
[62.94696808 -397.38513184]
[61.38644409 -412.30374146]
[59.82592392 -427.22235107]
[58.26539993 -442.14096069]
[43.50535202 -445.52026367]
[30.64361763 -453.51116943]
[21.07534218 -465.24685669]
[15.83842087 -479.45437622]
[15.50091553 -494.59255981]
[20.09943581 -509.01934814]
[29.13516998 -521.16986084]
[41.62798691 -529.72601318]
[56.22276306 -533.75976562]
[71.33636475 -532.83361816]
[85.32937622 -527.04791260]
[96.68394470 -517.03027344]
[104.16841125 -503.86740112]
[106.97092438 -488.98706055]
[104.78747559 -474.00335693]
[97.85491180 -460.54162598]
[86.92523193 -450.06207275]
[73.18400574 -443.70147705]
[74.74452972 -428.78286743]
[76.30505371 -413.86425781]
[77.86557007 -398.94564819]
[87.06197357 -391.08737183]
[88.48416138 -378.67120361]
[80.82786560 -368.29122925]
[82.16609955 -353.35104370]
[94.90740204 -348.43411255]
[104.33243561 -338.45925903]
[108.56043243 -325.33398438]
[106.71202850 -311.60220337]
[99.09145355 -299.95132446]
[87.13814545 -292.68624878]
[88.25379944 -277.72778320]
[97.21214294 -269.59915161]
[98.26403046 -257.14614868]
[90.30207825 -246.99874878]
[91.19489288 -232.02534485]
[92.08770752 -217.05192566]
[92.98052216 -202.07852173]
[93.87333679 -187.10511780]
[94.76615906 -172.13171387]
[95.65897369 -157.15830994]
[96.55178833 -142.18490601]
[110.07594299 -139.57344055]
[122.58706665 -133.78836060]
[133.35185242 -125.16349792]
[141.73806763 -114.19931030]
[147.25173950 -101.53380585]
[149.56622314 -87.90542603]
[148.54151917 -74.11000824]
[144.23278809 -60.95430756]
[136.88739014 -49.20879364]
[126.93063354 -39.56256485]
[114.94123840 -32.58288956]
[101.61763000 -28.68187141]
[102.06423950 -13.68852139]
[102.51084137 1.30482876]
[102.95745087 16.29817963]
[103.40405273 31.29152870]
[104.07383728 46.27656937]
[104.96665955 61.24997330]
[105.85947418 76.22338104]
[106.86373138 91.18972015]
[108.09070587 106.13945770]
[109.42893982 121.07964325]
[110.76717377 136.01982117]
[112.10540771 150.96000671]
[113.44364166 165.90019226]
[114.78187561 180.84037781]
[118.21293640 195.44270325]
[123.66829681 209.41549683]
[129.12365723 223.38830566]
[134.57901001 237.36109924]
[140.03436279 251.33389282]
[152.26080322 261.37506104]
[149.68214417 276.04473877]
[151.38307190 261.14147949]
[157.54885864 247.46731567]
[167.59181213 236.32554626]
[180.55471802 228.77815247]
[195.20202637 225.54449463]
[210.13763428 226.93278503]
[223.93800354 232.81071472]
[235.28775024 242.61801147]
[243.10508728 255.41993713]
[246.64492798 269.99627686]
[245.56988525 284.95770264]
[239.98239136 298.87817383]
[230.41505432 310.43093872]
[217.77972412 318.51480103]
[203.28076172 322.35925293]
[188.30009460 321.59793091]
[174.26559448 316.30334473]
[162.51492310 306.98013306]
[154.16763306 294.51596069]
[155.72814941 309.43453979]
[157.28866577 324.35314941]
[158.84919739 339.27175903]
[160.52073669 354.17834473]
[162.30320740 369.07205200]
[164.08566284 383.96575928]
[174.18397522 372.87414551]
[189.16043091 372.03405762]
[200.43583679 381.92675781]
[201.55113220 396.88522339]
[191.86741638 408.34060669]
[176.93197632 409.73071289]
[165.30094910 400.26007080]
[165.74755859 415.25341797]
[166.19416809 430.24679565]
[166.64076233 445.24014282]
[174.78552246 458.80383301]
[167.43058777 471.75582886]
[167.87719727 486.74917603]
[168.32380676 501.74252319]
[178.96768188 513.74615479]
[176.07736206 529.52667236]
[161.87005615 536.97869873]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 207]
[3 206]
[4 205]
[6 203]
[7 202]
[8 201]
[9 200]
[10 193]
[11 192]
[12 191]
[14 190]
[15 189]
[16 188]
[17 187]
[18 168]
[20 166]
[21 165]
[22 164]
[23 163]
[24 162]
[44 161]
[45 160]
[46 159]
[47 158]
[48 157]
[49 156]
[51 155]
[53 154]
[54 153]
[55 152]
[58 151]
[59 150]
[60 149]
[61 148]
[62 147]
[72 135]
[73 134]
[74 133]
[75 132]
[76 131]
[77 130]
[78 129]
[79 128]
[81 125]
[82 124]
[87 118]
[88 117]
[90 114]
[91 113]
[92 112]
[93 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
