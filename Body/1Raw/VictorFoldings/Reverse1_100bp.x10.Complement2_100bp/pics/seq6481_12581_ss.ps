%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[31.07950211 510.30972290]
[26.62831879 524.65692139]
[20.34247780 538.30035400]
[12.32953548 551.00653076]
[2.72660732 562.55810547]
[-8.30198956 572.75738525]
[-20.56754112 581.42980957]
[-33.86016846 588.42706299]
[-47.95241547 593.62933350]
[-62.60314941 596.94763184]
[-77.56166840 598.32513428]
[-92.57202148 597.73834229]
[-107.37735748 595.19732666]
[-121.72434235 590.74542236]
[-135.36747742 584.45892334]
[-148.07330322 576.44537354]
[-159.62442017 566.84191895]
[-169.82316589 555.81286621]
[-178.49502563 543.54687500]
[-185.49160767 530.25390625]
[-190.69320679 516.16143799]
[-194.01080322 501.51052856]
[-195.38763428 486.55194092]
[-194.80012512 471.54162598]
[-192.25836182 456.73638916]
[-187.80581665 442.38964844]
[-181.51867676 428.74679565]
[-173.50451660 416.04135132]
[-163.90049744 404.49069214]
[-152.87092590 394.29248047]
[-140.60455322 385.62121582]
[-127.31125641 378.62524414]
[-113.21851349 373.42431641]
[-98.56746674 370.10742188]
[-83.60881042 368.73132324]
[-68.59851074 369.31951904]
[-53.79341888 371.86199951]
[-39.44686127 376.31521606]
[-33.16949844 362.69189453]
[-26.89213753 349.06860352]
[-26.94792557 341.67816162]
[-20.41856194 335.29025269]
[-13.93906689 321.76190186]
[-7.45957088 308.23355103]
[-0.98007518 294.70520020]
[5.49942064 281.17687988]
[11.97891617 267.64852905]
[11.26503754 262.92630005]
[13.51005363 257.70547485]
[18.85802841 253.81823730]
[25.73744011 240.48880005]
[32.61685181 227.15937805]
[29.23876762 215.54408264]
[34.86103058 204.38281250]
[46.95673370 199.90432739]
[54.03384018 186.67880249]
[61.11094284 173.45327759]
[67.48954773 159.87705994]
[73.15233612 145.98703003]
[78.81512451 132.09701538]
[84.47791290 118.20698547]
[90.14069366 104.31695557]
[92.58642578 89.51768494]
[91.69360352 74.54428101]
[90.80078888 59.57087326]
[89.90797424 44.59746933]
[81.79520416 57.21424103]
[68.50650787 64.17201233]
[53.51552200 63.65203476]
[40.74085617 55.79023743]
[33.52177429 42.64166641]
[33.74532700 27.64333344]
[41.35308075 14.71576214]
[54.35638809 7.23819113]
[69.35620880 7.16523838]
[82.43163300 14.51597404]
[90.16452026 27.36808014]
[91.50276184 12.42789555]
[85.02750397 -2.00753427]
[93.86942291 -13.99376583]
[95.20765686 -28.93395042]
[96.54589081 -43.87413788]
[97.88412476 -58.81431961]
[99.11109924 -73.76405334]
[100.22674561 -88.72251129]
[97.74427795 -97.51313782]
[101.47199249 -103.89482880]
[102.81022644 -118.83501434]
[104.14846039 -133.77519226]
[105.04127502 -148.74859619]
[105.48788452 -163.74195862]
[105.93448639 -178.73530579]
[106.38109589 -193.72865295]
[106.82769775 -208.72200012]
[107.27430725 -223.71534729]
[107.72090912 -238.70870972]
[108.16751862 -253.70205688]
[108.61412048 -268.69540405]
[109.06072998 -283.68875122]
[95.18200684 -289.88952637]
[84.73630524 -300.93289185]
[79.31651306 -315.13479614]
[79.74911499 -330.32955933]
[85.96813965 -344.20013428]
[97.02523041 -354.63128662]
[111.23426056 -360.03237915]
[126.42845917 -359.57980347]
[140.29081726 -353.34252930]
[150.70742798 -342.27172852]
[156.08982849 -328.05560303]
[155.61726379 -312.86203003]
[149.36177063 -299.00787354]
[138.27726746 -288.60583496]
[124.05407715 -283.24215698]
[123.60747528 -268.24880981]
[123.16086578 -253.25544739]
[122.71426392 -238.26210022]
[122.26765442 -223.26875305]
[121.82104492 -208.27539062]
[121.37444305 -193.28204346]
[120.92783356 -178.28869629]
[120.48123169 -163.29534912]
[120.03462219 -148.30200195]
[121.85652924 -146.17155457]
[122.94431305 -143.19105530]
[122.96997833 -139.63652039]
[121.71140289 -135.89746094]
[119.08864594 -132.43696594]
[117.75041199 -117.49678040]
[116.41217804 -102.55659485]
[115.18520355 -87.60685730]
[114.06954956 -72.64840698]
[116.70685577 -65.74431610]
[112.82431030 -57.47608566]
[111.48607635 -42.53590393]
[110.14784241 -27.59571648]
[108.80960846 -12.65553188]
[115.38057709 0.71127588]
[106.44293976 13.76612949]
[105.10470581 28.70631409]
[104.88137817 43.70465088]
[105.77420044 58.67805862]
[106.66701508 73.65146637]
[107.55982971 88.62487030]
[113.40892792 74.81226349]
[121.80689240 62.38350296]
[132.43977356 51.80324554]
[144.91004944 43.46704102]
[158.75151062 37.68654633]
[173.44667053 34.67787170]
[188.44615173 34.55349350]
[203.18919373 37.31806183]
[217.12460327 42.86822510]
[229.73139954 50.99648666]
[240.53826904 61.39896011]
[249.14120483 73.68674469]
[255.21855164 87.40045929]
[258.54312134 102.02739716]
[258.99060059 117.02071381]
[256.54431152 131.81988525]
[251.29563904 145.87164307]
[243.44087219 158.65061951]
[233.27362061 169.67909241]
[221.17402649 178.54475403]
[207.59443665 184.91613770]
[193.04251099 188.55503845]
[178.06231689 189.32545471]
[163.21386719 187.19853210]
[149.05230713 182.25382996]
[136.10707092 174.67617798]
[124.86211395 164.74888611]
[115.73784637 152.84309387]
[109.07539368 139.40391541]
[105.12381744 124.93376923]
[104.03072357 109.97974396]
[98.36793518 123.86976624]
[92.70514679 137.75979614]
[87.04236603 151.64982605]
[81.37957764 165.53985596]
[95.17122650 159.64151001]
[109.56356049 163.86769104]
[117.97660065 176.28625488]
[116.56401825 191.21960449]
[105.97162628 201.84039307]
[91.04212189 203.29295349]
[78.60107422 194.91319275]
[74.33647156 180.53038025]
[67.25936890 193.75590515]
[60.18226242 206.98143005]
[61.20314407 225.36727905]
[45.94628143 234.03878784]
[39.06686783 247.36820984]
[32.18745804 260.69763184]
[25.50726128 274.12802124]
[19.02776718 287.65637207]
[12.54827023 301.18472290]
[6.06877470 314.71304321]
[-0.41072130 328.24139404]
[-6.89021730 341.76974487]
[-13.26882172 355.34594727]
[-19.54618263 368.96926880]
[-25.82354355 382.59259033]
[-13.11695099 390.60491943]
[-1.56492388 400.20730591]
[8.63486862 411.23541260]
[17.30789566 423.50054932]
[24.30574799 436.79284668]
[29.50868416 450.88485718]
[32.82767487 465.53543091]
[34.20592880 480.49386597]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 202]
[39 201]
[40 200]
[42 199]
[43 198]
[44 197]
[45 196]
[46 195]
[47 194]
[50 193]
[51 192]
[52 191]
[55 189]
[56 188]
[57 187]
[58 179]
[59 178]
[60 177]
[61 176]
[62 175]
[63 144]
[64 143]
[65 142]
[66 141]
[77 140]
[78 139]
[80 137]
[81 136]
[82 135]
[83 134]
[84 132]
[85 131]
[87 130]
[88 129]
[89 128]
[90 123]
[91 122]
[92 121]
[93 120]
[94 119]
[95 118]
[96 117]
[97 116]
[98 115]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
