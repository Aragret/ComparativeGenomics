%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[17.30318451 443.03457642]
[22.93611908 456.99011230]
[25.73793411 471.77645874]
[25.60093689 486.82528687]
[22.53038979 501.55816650]
[16.64431953 515.40881348]
[8.16896915 527.84484863]
[-2.56989098 538.38824463]
[-15.15948677 546.63372803]
[-29.11590958 552.26440430]
[-43.90270996 555.06384277]
[-58.95152283 554.92437744]
[-73.68391418 551.85144043]
[-87.53360748 545.96313477]
[-99.96826172 537.48577881]
[-110.50991058 526.74523926]
[-118.75337219 514.15429688]
[-124.38179016 500.19696045]
[-127.17881775 485.40969849]
[-127.03694916 470.36093140]
[-123.96163940 455.62902832]
[-118.07108307 441.78027344]
[-109.59170532 429.34701538]
[-98.84943390 418.80709839]
[-86.25717163 410.56567383]
[-72.29892731 404.93951416]
[-57.51121902 402.14486694]
[-42.46245193 402.28918457]
[-27.73105621 405.36688232]
[-21.86209488 391.56271362]
[-15.99313450 377.75851440]
[-10.12417412 363.95434570]
[-4.25521326 350.15017700]
[1.61374748 336.34600830]
[7.48270845 322.54180908]
[13.35166931 308.73764038]
[13.07586479 301.35214233]
[19.41214180 294.77267456]
[17.49108887 280.00247192]
[30.15369415 270.51727295]
[36.22752762 256.80200195]
[41.89031601 242.91197205]
[47.13703537 228.85949707]
[35.09225845 217.01115417]
[29.41968155 201.03756714]
[31.30616570 184.13624573]
[40.42026138 169.71290588]
[54.96923828 160.69520569]
[72.05150604 158.93853760]
[76.87750244 144.73608398]
[81.70349884 130.53363037]
[86.52949524 116.33117676]
[79.61442566 105.70877075]
[80.00702667 93.03993225]
[87.56655121 82.86608887]
[99.58312988 78.83427429]
[96.92910767 63.23726273]
[108.49089050 53.84714127]
[113.52780914 39.71810913]
[118.56472778 25.58908081]
[115.91071320 9.99206924]
[127.47249603 0.60194468]
[132.50941467 -13.52708530]
[137.54632568 -27.65611458]
[124.33603668 -35.74989700]
[113.09513855 -46.40297699]
[104.31058502 -59.15063095]
[98.36226654 -73.43746948]
[95.50655365 -88.64161682]
[95.86526489 -104.10182190]
[99.42047119 -119.14617157]
[106.01536560 -133.12130737]
[115.36118317 -145.42083740]
[127.04986572 -155.51156616]
[140.57183838 -162.95671082]
[155.33824158 -167.43470764]
[170.70660400 -168.75317383]
[186.00875854 -166.85713196]
[190.83476257 -181.05958557]
[195.66075134 -195.26203918]
[200.48675537 -209.46449280]
[205.31275940 -223.66694641]
[210.13874817 -237.86941528]
[209.93673706 -247.00160217]
[215.14376831 -252.24645996]
[220.18067932 -266.37548828]
[225.21760559 -280.50451660]
[230.25451660 -294.63354492]
[222.23420715 -302.82434082]
[217.86935425 -313.36892700]
[217.75515747 -324.72933960]
[221.86985779 -335.26394653]
[229.58331299 -343.46475220]
[239.75328064 -348.17324829]
[250.89442444 -348.74389648]
[256.55722046 -362.63394165]
[262.22000122 -376.52395630]
[267.88278198 -390.41400146]
[273.54556274 -404.30401611]
[260.68423462 -412.08425903]
[249.19839478 -421.78076172]
[239.37094116 -433.15475464]
[231.44387817 -445.92614746]
[225.61239624 -459.78039551]
[222.02012634 -474.37637329]
[220.75550842 -489.35458374]
[221.84970093 -504.34622192]
[225.27574158 -518.98211670]
[230.94927979 -532.90179443]
[238.73059082 -545.76245117]
[248.42805481 -557.24749756]
[259.80285645 -567.07403564]
[272.57489014 -575.00000000]
[286.42962646 -580.83038330]
[301.02587891 -584.42144775]
[316.00421143 -585.68481445]
[330.99575806 -584.58941650]
[345.63134766 -581.16210938]
[359.55056763 -575.48742676]
[372.41061401 -567.70507812]
[383.89483643 -558.00665283]
[393.72042847 -546.63104248]
[401.64538574 -533.85839844]
[407.47457886 -520.00317383]
[411.06442261 -505.40661621]
[412.32656860 -490.42816162]
[411.22991943 -475.43670654]
[407.80145264 -460.80139160]
[402.12561035 -446.88265991]
[394.34219360 -434.02325439]
[384.64282227 -422.53982544]
[373.26641846 -412.71517944]
[360.49307251 -404.79129028]
[346.63735962 -398.96322632]
[332.04052734 -395.37457275]
[317.06198120 -394.11364746]
[302.07061768 -395.21154785]
[287.43560791 -398.64123535]
[281.77279663 -384.75119019]
[276.11001587 -370.86117554]
[270.44723511 -356.97116089]
[264.78445435 -343.08111572]
[275.54107666 -327.79754639]
[274.90771484 -308.96862793]
[262.95938110 -294.20898438]
[244.38354492 -289.59664917]
[239.34663391 -275.46759033]
[234.30972290 -261.33856201]
[229.27279663 -247.20954895]
[224.34120178 -233.04341125]
[219.51521301 -218.84095764]
[214.68920898 -204.63850403]
[209.86322021 -190.43605042]
[205.03721619 -176.23358154]
[200.21121216 -162.03112793]
[212.78701782 -154.73205566]
[223.69543457 -145.11029053]
[232.51354980 -133.53627014]
[238.89895630 -120.45621490]
[242.60310364 -106.37482452]
[243.48092651 -91.83589935]
[241.49655151 -77.40128326]
[236.72476196 -63.62917328]
[229.34817505 -51.05254745]
[219.65019226 -40.15850449]
[208.00425720 -31.36941910]
[194.85932922 -25.02656937]
[180.72264099 -21.37687302]
[166.14013672 -20.56328583]
[151.67535400 -22.61919785]
[146.63844299 -8.49016857]
[141.60151672 5.63886070]
[144.61581421 20.22526932]
[132.69375610 30.62599754]
[127.65683746 44.75502777]
[122.61992645 58.88405609]
[125.63421631 73.47046661]
[113.71215820 83.87119293]
[121.12457275 98.61649323]
[115.69864655 114.20261383]
[100.73195648 121.15717316]
[95.90595245 135.35963440]
[91.07995605 149.56208801]
[86.25395966 163.76454163]
[96.32050323 172.32411194]
[102.86332703 183.76745605]
[105.12249756 196.72174072]
[102.85050201 209.64137268]
[96.33914185 220.99234009]
[86.38226318 229.43435669]
[74.17902374 233.97918701]
[61.18950653 234.10621643]
[55.94278717 248.15869141]
[56.81340790 252.41262817]
[56.33335876 256.32849121]
[54.77476883 259.52322388]
[52.50623322 261.74139404]
[49.94279480 262.87582397]
[43.86896133 276.59109497]
[45.35557556 292.34231567]
[33.12740707 300.84649658]
[27.15584564 314.60659790]
[21.28688431 328.41076660]
[15.41792393 342.21496582]
[9.54896355 356.01913452]
[3.68000269 369.82330322]
[-2.18895793 383.62747192]
[-8.05791855 397.43167114]
[-13.92687988 411.23583984]
[-1.48948491 419.70916748]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 209]
[30 208]
[31 207]
[32 206]
[33 205]
[34 204]
[35 203]
[36 202]
[38 201]
[40 199]
[41 198]
[42 193]
[43 192]
[49 184]
[50 183]
[51 182]
[52 181]
[56 178]
[58 176]
[59 175]
[60 174]
[62 172]
[63 171]
[64 170]
[78 155]
[79 154]
[80 153]
[81 152]
[82 151]
[83 150]
[85 149]
[86 148]
[87 147]
[88 146]
[95 142]
[96 141]
[97 140]
[98 139]
[99 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
