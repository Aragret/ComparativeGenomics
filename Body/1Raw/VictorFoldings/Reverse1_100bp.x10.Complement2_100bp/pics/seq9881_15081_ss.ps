%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUUAUCUACCUCUGUAUGUCUUUAUCAGUUUGGUGUAGAUGUUUUACGGUCAUAGUCCGCCGCCGAAGCUUCGGUUUCACUACAAACCUACAUUUCACxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[151.78913879 478.40191650]
[150.13452148 463.47149658]
[150.44291687 448.45285034]
[152.70907593 433.60293579]
[156.89419556 419.17590332]
[162.92668152 405.41854858]
[170.70330811 392.56634521]
[180.09098816 380.83920288]
[190.92909241 370.43774414]
[203.03219604 361.53997803]
[216.19316101 354.29815674]
[210.73779297 340.32534790]
[205.28244019 326.35253906]
[199.82708740 312.37976074]
[194.26785278 298.44796753]
[188.60507202 284.55792236]
[182.94229126 270.66790771]
[177.27949524 256.77786255]
[171.61671448 242.88784790]
[165.64515686 229.12774658]
[159.36778259 215.50442505]
[152.98918152 201.92822266]
[146.50968933 188.39987183]
[140.03019714 174.87153625]
[132.56245422 161.86257935]
[124.14783478 149.44508362]
[115.73321533 137.02758789]
[107.31859589 124.61009216]
[98.90397644 112.19259644]
[100.54611969 127.10243225]
[97.56208038 141.80262756]
[90.23627472 154.89202881]
[79.26694489 165.12304688]
[65.69963074 171.52053833]
[50.82746506 173.47471619]
[36.06798553 170.79934692]
[22.82795906 163.74938965]
[12.36934662 152.99684143]
[5.68899488 139.56654358]
[3.42363262 124.73859406]
[5.78917980 109.92629242]
[12.56016731 96.54146576]
[23.09122849 85.85985565]
[36.37860870 78.89957428]
[51.15583801 76.32402802]
[66.01445007 78.37870026]
[79.53821564 84.86775970]
[90.43881989 95.17359924]
[85.61282349 80.97113800]
[80.78682709 66.76868439]
[69.02094269 56.19160843]
[72.25206757 41.65169525]
[67.42607117 27.44923973]
[63.49933243 24.01008224]
[61.48579788 19.82690430]
[61.34849167 15.75306129]
[62.71711349 12.50356770]
[58.53010559 -1.90021479]
[54.34309387 -16.30399704]
[50.15608215 -30.70777893]
[38.87422562 -41.79967880]
[42.75136948 -56.18081284]
[38.56435776 -70.58459473]
[27.40559006 -70.89387512]
[16.71716309 -74.06004333]
[7.21681595 -79.86213684]
[-0.45964080 -87.90248871]
[-5.80087519 -97.63394928]
[-8.45409107 -108.39712524]
[-8.24832153 -119.46504211]
[-5.20542431 -130.09228516]
[0.46193314 -139.56515503]
[8.36511326 -147.24963379]
[17.96615410 -152.63378906]
[14.86204338 -167.30909729]
[11.75793362 -181.98439026]
[1.51275814 -171.02828979]
[-13.45206738 -172.05493164]
[-22.10503006 -184.30752563]
[-18.06748772 -198.75392151]
[-4.31576681 -204.74476624]
[9.01187515 -197.86514282]
[7.00786209 -212.73066711]
[5.00384808 -227.59620667]
[2.99983454 -242.46173096]
[0.99582088 -257.32727051]
[-1.00819278 -272.19277954]
[-3.01220632 -287.05831909]
[-18.00932121 -288.53591919]
[-32.26123428 -293.43280029]
[-44.99935532 -301.48495483]
[-55.53673935 -312.25808716]
[-63.30511475 -325.17120361]
[-67.88554382 -339.52795410]
[-69.03100586 -354.55410767]
[-66.67974091 -369.43927002]
[-60.95853043 -383.38073730]
[-52.17592239 -395.62664795]
[-40.80555344 -405.51663208]
[-27.46061134 -412.51727295]
[-12.86076927 -416.25109863]
[2.20661831 -416.51669312]
[16.92898750 -413.29977417]
[30.51237869 -406.77383423]
[42.22425842 -397.29074097]
[51.43301773 -385.36196899]
[57.64204025 -371.63082886]
[60.51648331 -356.83776855]
[59.90132904 -341.78060913]
[55.82975388 -327.27133179]
[48.52133179 -314.09243774]
[38.37019730 -302.95458984]
[25.92378807 -294.45849609]
[11.85332203 -289.06231689]
[13.85733509 -274.19680786]
[15.86134911 -259.33126831]
[17.86536217 -244.46574402]
[19.86937714 -229.60021973]
[21.87339020 -214.73468018]
[23.87740326 -199.86915588]
[26.43323517 -185.08850098]
[29.53734589 -170.41320801]
[32.64145660 -155.73789978]
[51.33232498 -152.14312744]
[66.61135101 -140.71080017]
[75.37911987 -123.70626068]
[75.83358002 -104.53056335]
[67.84030151 -87.04022217]
[52.96813965 -74.77160645]
[57.15515137 -60.36782455]
[68.13752747 -50.30617905]
[64.55986023 -34.89479065]
[68.74687195 -20.49100876]
[72.93388367 -6.08722591]
[77.12089539 8.31655598]
[81.62852478 22.62324333]
[86.45452118 36.82569885]
[97.87522125 46.38692093]
[94.98928070 61.94268799]
[99.81527710 76.14514160]
[104.64128113 90.34760284]
[111.32147217 103.77797699]
[119.73609161 116.19547272]
[128.15071106 128.61296082]
[136.56532288 141.03045654]
[144.97994995 153.44795227]
[145.51147461 138.45738220]
[153.38311768 125.68877411]
[166.53724670 118.47983551]
[181.53541565 118.71495056]
[194.45710754 126.33267212]
[201.92465210 139.34173584]
[201.98605347 154.34161377]
[194.62522888 167.41136169]
[181.76631165 175.13458252]
[166.77058411 175.49246216]
[153.55853271 168.39202881]
[160.03804016 181.92037964]
[166.51753235 195.44873047]
[173.04689026 201.83662415]
[172.99110413 209.22706604]
[179.26846313 222.85038757]
[183.53169250 225.86236572]
[185.96949768 229.81335449]
[186.52987671 233.85081482]
[185.50674438 237.22505188]
[191.16952515 251.11508179]
[196.83230591 265.00512695]
[202.49510193 278.89514160]
[208.15788269 292.78515625]
[214.29545593 299.55038452]
[213.79988098 306.92440796]
[219.25523376 320.89718628]
[224.71060181 334.86999512]
[230.16595459 348.84277344]
[244.75213623 345.25137329]
[259.68231201 343.59463501]
[274.70101929 343.90087891]
[289.55123901 346.16491699]
[303.97888184 350.34799194]
[317.73706055 356.37850952]
[330.59039307 364.15328979]
[342.31890869 373.53927612]
[352.72189331 384.37591553]
[361.62139893 396.47772217]
[368.86508179 409.63766479]
[374.32904053 423.63052368]
[377.91976929 438.21688843]
[379.57580566 453.14715576]
[379.26882935 468.16583252]
[377.00408936 483.01593018]
[372.82034302 497.44338989]
[366.78918457 511.20129395]
[359.01379395 524.05426025]
[349.62722778 535.78228760]
[338.79010010 546.18481445]
[326.68783569 555.08367920]
[313.52755737 562.32678223]
[299.53445435 567.79010010]
[284.94793701 571.38012695]
[270.01757812 573.03540039]
[254.99891663 572.72772217]
[240.14891052 570.46228027]
[225.72166443 566.27783203]
[211.96405029 560.24603271]
[199.11146545 552.47003174]
[187.38385010 543.08288574]
[176.98188782 532.24530029]
[168.08354187 520.14263916]
[160.84109497 506.98199463]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 175]
[12 174]
[13 173]
[14 172]
[15 170]
[16 169]
[17 168]
[18 167]
[19 166]
[20 162]
[21 161]
[22 159]
[23 158]
[24 157]
[25 146]
[26 145]
[27 144]
[28 143]
[29 142]
[48 141]
[49 140]
[50 139]
[52 137]
[53 136]
[57 135]
[58 134]
[59 133]
[60 132]
[62 130]
[63 129]
[74 123]
[75 122]
[76 121]
[82 120]
[83 119]
[84 118]
[85 117]
[86 116]
[87 115]
[88 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
