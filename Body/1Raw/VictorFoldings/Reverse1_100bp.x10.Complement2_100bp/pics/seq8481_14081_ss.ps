%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[270.10797119 356.75720215]
[280.88140869 346.28878784]
[271.92071533 334.25942993]
[262.87072754 322.29708862]
[253.73191833 310.40246582]
[244.59312439 298.50781250]
[235.45431519 286.61318970]
[226.31552124 274.71856689]
[212.42588806 269.34011841]
[210.15357971 253.68293762]
[201.01477051 241.78829956]
[191.87597656 229.89367676]
[182.73716736 217.99903870]
[173.59837341 206.10440063]
[164.45956421 194.20977783]
[155.32077026 182.31513977]
[138.76567078 176.49311829]
[136.50277710 158.21852112]
[127.18789673 146.46127319]
[117.87301636 134.70402527]
[108.55812836 122.94676971]
[99.24324799 111.18952179]
[97.60345459 126.09961700]
[86.85057831 136.55790710]
[71.90068817 137.78297424]
[59.58867645 129.21476746]
[55.54342270 114.77052307]
[61.61436844 101.05397797]
[75.02595520 94.33614349]
[89.64814758 97.68932343]
[81.60697937 85.02680206]
[74.36479950 79.46005249]
[73.54197693 72.11534119]
[65.69022369 59.33450317]
[57.83846664 46.55366135]
[49.98670959 33.77281570]
[37.64588928 30.02222633]
[31.36926270 19.21538734]
[34.05000305 7.41961765]
[26.38940620 -5.47670889]
[12.68938446 -13.38998890]
[12.84166813 -28.28381538]
[5.18107033 -41.18014145]
[-2.47952700 -54.07646942]
[-15.89515400 -47.35231781]
[-29.75629616 -41.60235977]
[-43.99232101 -36.85590363]
[-58.53068542 -33.13713074]
[-73.29730225 -30.46499252]
[-88.21691895 -28.85310745]
[-103.21351624 -28.30968666]
[-118.21067810 -28.83750153]
[-133.13195801 -30.43386078]
[-147.90135193 -33.09062958]
[-162.44357300 -36.79427338]
[-176.68453979 -41.52591324]
[-190.55165100 -47.26144409]
[-203.97427368 -53.97163010]
[-216.88398743 -61.62228775]
[-229.21501160 -70.17442322]
[-240.90451050 -79.58445740]
[-251.89292908 -89.80443573]
[-262.12426758 -100.78228760]
[-271.54635620 -112.46206665]
[-280.11123657 -124.78425598]
[-287.77520752 -137.68606567]
[-294.49926758 -151.10174561]
[-300.24911499 -164.96292114]
[-304.99545288 -179.19898987]
[-308.71411133 -193.73738098]
[-311.38613892 -208.50401306]
[-312.99792480 -223.42364502]
[-313.54122925 -238.42024231]
[-313.01330566 -253.41740417]
[-311.41680908 -268.33868408]
[-308.75994873 -283.10803223]
[-305.05618286 -297.65023804]
[-300.32443237 -311.89117432]
[-294.58880615 -325.75823975]
[-287.87850952 -339.18081665]
[-280.22775269 -352.09045410]
[-271.67553711 -364.42141724]
[-262.26541138 -376.11083984]
[-252.04533386 -387.09918213]
[-241.06739807 -397.33044434]
[-229.38755798 -406.75244141]
[-217.06529236 -415.31723022]
[-204.16343689 -422.98110962]
[-190.74771118 -429.70504761]
[-176.88647461 -435.45480347]
[-162.65037537 -440.20104980]
[-148.11195374 -443.91958618]
[-133.34530640 -446.59149170]
[-118.42565155 -448.20315552]
[-103.42904663 -448.74633789]
[-88.43190002 -448.21829224]
[-73.51063538 -446.62170410]
[-58.74128723 -443.96472168]
[-44.19911957 -440.26086426]
[-29.95823669 -435.52899170]
[-16.09120560 -429.79324341]
[-2.66869211 -423.08285522]
[10.24090576 -415.43200684]
[22.57180214 -406.87966919]
[34.26116180 -397.46945190]
[45.24942017 -387.24932861]
[55.48057938 -376.27130127]
[64.90250397 -364.59136963]
[73.46717834 -352.26907349]
[81.13096619 -339.36712646]
[87.85481262 -325.95135498]
[93.60445404 -312.09008789]
[98.35057831 -297.85394287]
[102.06902313 -283.31549072]
[104.74081421 -268.54882812]
[106.35236359 -253.62916565]
[106.89543915 -238.63255310]
[106.36727905 -223.63540649]
[104.77057648 -208.71415710]
[102.11346436 -193.94483948]
[98.40948486 -179.40269470]
[93.67752075 -165.16184998]
[87.94167328 -151.29486084]
[81.23117065 -137.87239075]
[73.58022308 -124.96286011]
[65.02780151 -112.63202667]
[55.61750031 -100.94274139]
[45.39726639 -89.95455933]
[34.41917801 -79.72348785]
[22.73918533 -70.30165100]
[10.41679955 -61.73706818]
[18.07739639 -48.84074020]
[25.73799515 -35.94441223]
[38.89007950 -28.95356560]
[39.28573227 -13.13730621]
[46.94633102 -0.24097964]
[62.69227982 7.50704956]
[62.76755142 25.92106247]
[70.61930847 38.70190430]
[78.47106171 51.48274612]
[86.32281494 64.26358795]
[94.26950073 76.98562622]
[102.31067657 89.64814758]
[111.00050354 101.87463379]
[120.31538391 113.63188934]
[129.63026428 125.38913727]
[138.94514465 137.14639282]
[148.26002502 148.90364075]
[160.95909119 151.16117859]
[168.47543335 161.14559937]
[167.21539307 173.17634583]
[176.35420227 185.07096863]
[185.49299622 196.96560669]
[194.63180542 208.86024475]
[203.77059937 220.75486755]
[212.90940857 232.64950562]
[222.04821777 244.54414368]
[236.59150696 250.77336121]
[238.21014404 265.57974243]
[247.34895325 277.47439575]
[256.48776245 289.36901855]
[265.62655640 301.26364136]
[274.76535034 313.15829468]
[282.47531128 318.05670166]
[283.95010376 325.29873657]
[292.91079712 337.32809448]
[306.02523804 330.00238037]
[319.98373413 324.45117188]
[334.54736328 320.76943970]
[349.46701050 319.02023315]
[364.48730469 319.23342896]
[379.35128784 321.40539551]
[393.80456543 325.49899292]
[407.59985352 331.44415283]
[420.50109863 339.13916016]
[432.28753662 348.45230103]
[442.75747681 359.22427368]
[451.73178101 371.27072144]
[459.05688477 384.38552856]
[464.60742188 398.34426880]
[468.28845215 412.90808105]
[470.03695679 427.82778931]
[469.82305908 442.84808350]
[467.65036011 457.71197510]
[463.55609131 472.16506958]
[457.61026001 485.96005249]
[449.91464233 498.86093140]
[440.60092163 510.64694214]
[429.82846069 521.11639404]
[417.78158569 530.09008789]
[404.66644287 537.41455078]
[390.70745850 542.96447754]
[376.14343262 546.64477539]
[361.22366333 548.39257812]
[346.20336914 548.17797852]
[331.33959961 546.00457764]
[316.88671875 541.90960693]
[303.09197998 535.96313477]
[290.19146729 528.26690674]
[278.40591431 518.95263672]
[267.93701172 508.17965698]
[258.96383667 496.13235474]
[251.63999939 483.01684570]
[246.09077454 469.05758667]
[242.41113281 454.49340820]
[240.66404724 439.57354736]
[240.87939453 424.55325317]
[243.05349731 409.68960571]
[247.14915466 395.23690796]
[253.09628296 381.44244385]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 166]
[3 165]
[4 163]
[5 162]
[6 161]
[7 160]
[8 159]
[10 157]
[11 156]
[12 155]
[13 154]
[14 153]
[15 152]
[16 151]
[18 148]
[19 147]
[20 146]
[21 145]
[22 144]
[30 143]
[31 142]
[33 141]
[34 140]
[35 139]
[36 138]
[39 136]
[40 135]
[42 133]
[43 132]
[44 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
