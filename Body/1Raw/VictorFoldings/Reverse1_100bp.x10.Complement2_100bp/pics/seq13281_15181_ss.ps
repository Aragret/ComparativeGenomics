%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCUACUACCUGGGCCUCGUGUAUUUAUCAUACCGAAACUUCUUCCGCACCCAUGUCUACACGUCCUUACGAUCCACACCAACCAACUACGGCUAACAxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[24.60741234 578.01098633]
[18.39847374 591.68139648]
[10.77160645 604.61444092]
[1.81323111 616.66345215]
[-8.37514782 627.69201660]
[-19.67808914 637.57513428]
[-31.96751976 646.20080566]
[-45.10419464 653.47125244]
[-58.93925858 659.30419922]
[-73.31595612 663.63348389]
[-88.07138824 666.41003418]
[-103.03836060 667.60247803]
[-118.04728699 667.19720459]
[-132.92810059 665.19885254]
[-147.51220703 661.63012695]
[-161.63433838 656.53131104]
[-175.13447571 649.96032715]
[-187.85968018 641.99157715]
[-199.66574097 632.71527100]
[-210.41889954 622.23663330]
[-219.99729919 610.67437744]
[-228.29241943 598.15948486]
[-235.21028137 584.83374023]
[-240.67248535 570.84814453]
[-244.61712646 556.36120605]
[-246.99954224 541.53698730]
[-247.79272461 526.54357910]
[-246.98767090 511.55078125]
[-244.59352112 496.72851562]
[-240.63740540 482.24468994]
[-235.16413879 468.26342773]
[-228.23573303 454.94317627]
[-219.93069458 442.43481445]
[-210.34313965 430.88012695]
[-199.58169556 420.41000366]
[-187.76829529 411.14309692]
[-175.03678894 403.18441772]
[-161.53144836 396.62408447]
[-147.40528870 391.53649902]
[-132.81835938 387.97927856]
[-117.93596649 385.99270630]
[-102.92672729 385.59933472]
[-87.96070099 386.80361938]
[-73.20747375 389.59185791]
[-58.83420944 393.93252563]
[-45.00376511 399.77639771]
[-37.73053741 386.65771484]
[-30.45730591 373.53903198]
[-29.96326447 366.16488647]
[-22.97687531 360.28033447]
[-15.50913429 347.27136230]
[-8.04139328 334.26242065]
[-0.57365191 321.25347900]
[6.89408922 308.24450684]
[13.77350140 294.91510010]
[20.05086327 281.29177856]
[26.32822227 267.66845703]
[24.62728882 252.87129211]
[37.42971039 243.57566833]
[43.70707321 229.95236206]
[43.65128326 222.56190491]
[50.18064880 216.17401123]
[56.66014481 202.64566040]
[63.03874969 189.06945801]
[69.31610870 175.44613647]
[74.97889709 161.55612183]
[80.01581573 147.42709351]
[84.30993652 133.05487061]
[87.84960938 118.47850037]
[91.38928223 103.90212250]
[89.74521637 98.92105865]
[91.00897980 93.37342834]
[95.25743103 88.94763947]
[99.22953033 74.48311615]
[103.20162964 60.01859283]
[107.17372131 45.55406952]
[111.14582062 31.08954430]
[115.11791229 16.62502098]
[111.31119537 1.26860642]
[122.14255524 -8.95543575]
[126.11464691 -23.41996002]
[129.32792664 -38.07174683]
[131.77365112 -52.87101746]
[134.10913086 -67.68808746]
[136.33425903 -82.52213287]
[138.55937195 -97.35617065]
[136.49891663 -103.63837433]
[137.73487854 -109.18540192]
[141.07792664 -112.59612274]
[143.74371338 -127.35733795]
[146.40951538 -142.11856079]
[149.07531738 -156.87977600]
[151.63114929 -171.66043091]
[146.24748230 -186.53747559]
[155.95640564 -197.83288574]
[158.40213013 -212.63215637]
[160.84785461 -227.43142700]
[155.46420288 -242.30847168]
[165.17311096 -253.60388184]
[167.61885071 -268.40313721]
[153.93571472 -274.78082275]
[142.48143005 -284.61453247]
[134.10595703 -297.17456055]
[129.43081665 -311.52883911]
[128.80294800 -326.61221313]
[132.26892090 -341.30538940]
[139.57154846 -354.51806641]
[150.16893005 -365.26971436]
[163.27465820 -372.76251221]
[177.91621399 -376.44049072]
[193.00709534 -376.03067017]
[207.42744446 -371.56344604]
[220.10719299 -363.37039185]
[230.10542297 -352.05941772]
[236.68017578 -338.46987915]
[239.34358215 -323.61022949]
[237.89797974 -308.58316040]
[232.45066833 -294.50378418]
[223.40585327 -282.41683960]
[211.43472290 -273.21929932]
[197.42562866 -267.59368896]
[182.41812134 -265.95742798]
[179.97238159 -251.15815735]
[185.53099060 -237.33964539]
[175.64712524 -224.98570251]
[173.20140076 -210.18643188]
[170.75567627 -195.38716125]
[176.31427002 -181.56864929]
[166.43041992 -169.21470642]
[168.44125366 -162.10285950]
[163.83653259 -154.21397400]
[161.17073059 -139.45275879]
[158.50494385 -124.69154358]
[155.83914185 -109.93032837]
[153.39341736 -95.13105774]
[151.16830444 -80.29701233]
[148.94317627 -65.46296692]
[151.05967712 -58.38185120]
[146.57292175 -50.42528915]
[144.12719727 -35.62601852]
[156.26992798 -44.43249893]
[171.24084473 -43.49894333]
[182.19544983 -33.25215912]
[184.12544250 -18.37684250]
[176.14846802 -5.67378235]
[161.91146851 -0.95065022]
[147.92343140 -6.36679792]
[140.57917786 -19.44786263]
[136.60707092 -4.98333931]
[140.69790649 9.33847618]
[129.58244324 20.59711838]
[125.61034393 35.06164169]
[121.63824463 49.52616501]
[117.66615295 63.99068832]
[113.69405365 78.45521545]
[109.72195435 92.91973877]
[105.96566010 107.44179535]
[102.42598724 122.01817322]
[98.88631439 136.59454346]
[111.65040588 128.71559143]
[126.51042938 130.76005554]
[136.67257690 141.79321289]
[137.49084473 156.77087402]
[128.59114075 168.84545898]
[114.04229736 172.49661255]
[100.49582672 166.05508423]
[94.14484406 152.46400452]
[89.10792542 166.59303284]
[103.08914948 161.15930176]
[116.87257385 167.07682800]
[122.56243134 180.95579529]
[116.89931488 194.84568787]
[103.12731171 200.78974915]
[89.13565063 195.38294983]
[82.93942261 181.72351074]
[76.66206360 195.34681702]
[75.91292572 204.45048523]
[70.18849182 209.12516785]
[63.70899582 222.65350342]
[57.33039093 236.22972107]
[51.05302811 249.85302734]
[52.30496216 265.62463379]
[39.95153809 273.94580078]
[33.67417908 287.56912231]
[27.39681816 301.19244385]
[41.80706024 297.02774048]
[55.00758743 304.15136719]
[59.43653870 318.48260498]
[52.55680466 331.81185913]
[38.30941391 336.50354004]
[24.85591888 329.87002563]
[19.90304184 315.71224976]
[12.43530083 328.72122192]
[4.96755934 341.73016357]
[-2.50018191 354.73910522]
[-9.96792316 367.74807739]
[-17.33861351 380.81225586]
[-24.61184120 393.93093872]
[-31.88507080 407.04965210]
[-19.60159111 415.68377686]
[-8.30546761 425.57464600]
[1.87530529 436.61022949]
[10.82537079 448.66546631]
[18.44331932 461.60372925]
[24.64282990 475.27847290]
[29.35366249 489.53469849]
[32.52243423 504.21090698]
[34.11324692 519.14080811]
[34.10807037 534.15515137]
[32.50696564 549.08398438]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 199]
[47 198]
[48 197]
[50 196]
[51 195]
[52 194]
[53 193]
[54 192]
[55 185]
[56 184]
[57 183]
[59 181]
[60 180]
[62 179]
[63 178]
[64 176]
[65 175]
[66 168]
[67 167]
[68 159]
[69 158]
[70 157]
[73 156]
[74 155]
[75 154]
[76 153]
[77 152]
[78 151]
[80 149]
[81 148]
[82 140]
[83 139]
[84 137]
[85 136]
[86 135]
[89 134]
[90 133]
[91 132]
[92 131]
[93 129]
[95 127]
[96 126]
[97 125]
[99 123]
[100 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
