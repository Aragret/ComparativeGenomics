%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[109.35308075 623.06335449]
[94.38603210 621.91363525]
[79.59242249 619.36737061]
[65.10224152 615.44702148]
[51.04285431 610.18695068]
[37.53780746 603.63348389]
[24.70578766 595.84411621]
[12.65956688 586.88739014]
[1.50500882 576.84197998]
[-8.65985680 565.79620361]
[-17.74569893 553.84704590]
[-25.67267036 541.09960938]
[-32.37110519 527.66583252]
[-37.78213501 513.66387939]
[-41.85821152 499.21673584]
[-44.56350708 484.45135498]
[-45.87424850 469.49755859]
[-45.77891922 454.48672485]
[-44.27835846 439.55075073]
[-41.38574982 424.82095337]
[-37.12651062 410.42672729]
[-31.53808022 396.49462891]
[-24.66956711 383.14703369]
[-16.58133316 370.50128174]
[-7.34446096 358.66851807]
[2.95987558 347.75268555]
[14.24111843 337.84976196]
[26.40012550 329.04675293]
[39.33003998 321.42102051]
[52.91723251 315.03958130]
[67.04229736 309.95852661]
[81.58109283 306.22250366]
[96.40585327 303.86434937]
[111.38629913 302.90478516]
[111.83290863 287.91143799]
[112.27951050 272.91809082]
[112.72612000 257.92474365]
[113.17272186 242.93139648]
[112.05707550 227.97294617]
[109.39128113 213.21173096]
[106.72548676 198.45051575]
[104.05969238 183.68930054]
[101.39389038 168.92807007]
[98.72809601 154.16685486]
[88.16126251 164.81307983]
[73.23363495 163.34132385]
[64.94931793 150.83651733]
[69.41519165 136.51675415]
[83.33918762 130.93800354]
[96.45608521 138.21139526]
[94.89556122 123.29278564]
[93.33503723 108.37417603]
[89.90397644 93.77185822]
[84.65726471 79.71938324]
[79.41054535 65.66691589]
[74.16382599 51.61444092]
[68.91710663 37.56196976]
[52.80500031 25.44741058]
[56.83008957 6.53483200]
[51.16730499 -7.35519505]
[38.79272079 -17.21320152]
[41.15268707 -31.91965675]
[35.48990250 -45.80968475]
[21.07087326 -41.62526703]
[6.29343939 -38.97099304]
[-8.68049049 -37.87594986]
[-23.68685532 -38.35212708]
[-38.56123352 -40.39431763]
[-53.14065933 -43.98013687]
[-67.26538849 -49.07030106]
[-80.78066254 -55.60903931]
[-93.53839874 -63.52470779]
[-105.39881897 -72.73058319]
[-116.23197937 -83.12579346]
[-125.91917419 -94.59644318]
[-134.35427856 -107.01686096]
[-141.44485474 -120.25096130]
[-147.11323547 -134.15373230]
[-151.29730225 -148.57286072]
[-153.95121765 -163.35037231]
[-155.04589844 -178.32432556]
[-154.56935120 -193.33067322]
[-152.52680969 -208.20500183]
[-148.94062805 -222.78434753]
[-143.85012817 -236.90895081]
[-137.31106567 -250.42405701]
[-129.39508057 -263.18161011]
[-120.18891907 -275.04180908]
[-109.79344177 -285.87472534]
[-98.32255554 -295.56164551]
[-85.90193176 -303.99642944]
[-72.66766357 -311.08670044]
[-58.76474762 -316.75473022]
[-44.34551620 -320.93844604]
[-29.56795502 -323.59201050]
[-14.59397030 -324.68630981]
[0.41237020 -324.20941162]
[15.28665066 -322.16650391]
[29.86590004 -318.57998657]
[43.99038315 -313.48913574]
[57.50533676 -306.94973755]
[70.26268768 -299.03344727]
[82.12266541 -289.82699585]
[92.95531464 -279.43124390]
[102.64196014 -267.96011353]
[111.07645416 -255.53930664]
[118.16639709 -242.30485535]
[123.83409882 -228.40180969]
[128.01747131 -213.98246765]
[130.67065430 -199.20484924]
[131.76461792 -184.23083496]
[131.28733826 -169.22450256]
[129.24406433 -154.35028076]
[125.65718842 -139.77111816]
[120.56599426 -125.64675903]
[114.02626801 -112.13195801]
[106.10967255 -99.37480164]
[96.90293884 -87.51504517]
[86.50693512 -76.68264771]
[75.03557587 -66.99628448]
[62.61454391 -58.56208801]
[49.37992859 -51.47246933]
[55.04271317 -37.58244324]
[67.01226044 -28.71794510]
[65.05733490 -13.01798153]
[70.72011566 0.87204534]
[80.45687103 3.97181845]
[87.01791382 12.08976936]
[88.04905701 22.69717026]
[82.96957397 32.31525421]
[88.21629333 46.36772537]
[93.46301270 60.42019653]
[98.70973206 74.47266388]
[103.95645142 88.52513885]
[106.00849152 73.66616058]
[112.71520233 60.24900818]
[123.36880493 49.68962097]
[136.84500122 43.10235214]
[151.72161865 41.18237305]
[166.42869568 44.13230896]
[179.41413879 51.64084244]
[189.30758667 62.91558075]
[195.06494141 76.76667786]
[196.07864380 91.73238373]
[192.24168396 106.23333740]
[183.95899963 118.73922729]
[172.10469055 127.93026733]
[157.92974854 132.83650208]
[142.93009949 132.94017029]
[128.68870544 128.23033142]
[116.70848083 119.20403290]
[108.25364685 106.81365967]
[109.81417084 121.73226166]
[111.37468719 136.65086365]
[113.48931122 151.50106812]
[116.15511322 166.26228333]
[118.82090759 181.02349854]
[121.48670197 195.78471375]
[124.15249634 210.54592896]
[126.81829071 225.30714417]
[132.02006531 211.23797607]
[142.15338135 200.17832947]
[155.71504211 193.76882935]
[170.69322205 192.96031189]
[184.86604309 197.87269592]
[196.13101196 207.77725220]
[202.81706238 221.20471191]
[203.93234253 236.16319275]
[199.31141663 250.43370056]
[189.63975525 261.89926147]
[176.35212708 268.85903931]
[161.41963196 270.28060913]
[147.05744934 265.95309448]
[135.39610291 256.51840210]
[128.16607666 243.37800598]
[127.71946716 258.37136841]
[127.27286530 273.36471558]
[126.82625580 288.35806274]
[126.37964630 303.35140991]
[141.27642822 305.20092773]
[155.93453979 308.43728638]
[170.22518921 313.03204346]
[184.02278137 318.94482422]
[197.20605469 326.12365723]
[209.65914917 334.50546265]
[221.27264404 344.01660156]
[231.94444275 354.57342529]
[241.58079529 366.08322144]
[250.09698486 378.44482422]
[257.41818237 391.54956055]
[263.48007202 405.28231812]
[268.22933960 419.52233887]
[271.62426758 434.14456177]
[273.63500977 449.02041626]
[274.24389648 464.01922607]
[273.44561768 479.00912476]
[271.24713135 493.85839844]
[267.66778564 508.43655396]
[262.73901367 522.61547852]
[256.50415039 536.27056885]
[249.01802063 549.28179932]
[240.34635925 561.53479004]
[230.56539917 572.92199707]
[219.76109314 583.34320068]
[208.02839661 592.70684814]
[195.47042847 600.93072510]
[182.19752502 607.94244385]
[168.32635498 613.68048096]
[153.97880554 618.09436035]
[139.28097534 621.14532471]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 179]
[35 178]
[36 177]
[37 176]
[38 175]
[39 160]
[40 159]
[41 158]
[42 157]
[43 156]
[44 155]
[50 154]
[51 153]
[52 152]
[53 134]
[54 133]
[55 132]
[56 131]
[57 130]
[59 126]
[60 125]
[62 123]
[63 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
