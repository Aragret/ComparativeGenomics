%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[105.55117035 735.19885254]
[90.85751343 732.16125488]
[76.36745453 728.26654053]
[62.13093567 723.52819824]
[48.19704056 717.96252441]
[34.61380386 711.58862305]
[21.42804337 704.42858887]
[8.68521881 696.50701904]
[-3.57074428 687.85131836]
[-15.29759693 678.49121094]
[-26.45491409 668.45904541]
[-37.00423431 657.78930664]
[-46.90919113 646.51892090]
[-56.13563538 634.68664551]
[-64.65177155 622.33325195]
[-72.42823792 609.50134277]
[-79.43821716 596.23522949]
[-85.65756226 582.58056641]
[-91.06481934 568.58441162]
[-95.64135742 554.29504395]
[-99.37139893 539.76171875]
[-102.24208069 525.03454590]
[-104.24350739 510.16427612]
[-105.36878204 495.20217896]
[-105.61402893 480.19985962]
[-104.97839355 465.20895386]
[-103.46407318 450.28121948]
[-101.07629395 435.46810913]
[-97.82327271 420.82061768]
[-93.71623230 406.38931274]
[-88.76933289 392.22390747]
[-82.99962616 378.37326050]
[-76.42699432 364.88507080]
[-69.07409668 351.80587769]
[-60.96628952 339.18072510]
[-52.13151550 327.05319214]
[-42.60023117 315.46505737]
[-32.40528870 304.45626831]
[-21.58184052 294.06475830]
[-10.16719246 284.32635498]
[1.79930663 275.27465820]
[14.27640438 266.94082642]
[27.22108841 259.35363770]
[40.58873749 252.53919983]
[54.33327103 246.52104187]
[68.40730286 241.31988525]
[82.76232910 236.95365906]
[97.34884644 233.43743896]
[112.11659241 230.78332520]
[110.33412170 215.88960266]
[108.55165863 200.99588013]
[106.76918793 186.10217285]
[104.98672485 171.20845032]
[103.20426178 156.31472778]
[101.42179108 141.42102051]
[98.75599670 126.65979767]
[95.21632385 112.08342743]
[91.24423218 97.61889648]
[86.84323120 83.27905273]
[82.44223022 68.93920898]
[78.04123688 54.59935760]
[73.64023590 40.25951004]
[69.23924255 25.91966438]
[64.83824158 11.57981682]
[53.39249039 0.65711594]
[57.05509186 -13.78014946]
[52.65409470 -28.11999702]
[48.25309753 -42.45984268]
[33.49510193 -39.68827057]
[18.51958275 -38.58652496]
[3.51487160 -39.16846848]
[-11.33033085 -41.42677689]
[-25.82933235 -45.33305359]
[-39.79978943 -50.83816910]
[-53.06601334 -57.87289429]
[-65.46115875 -66.34875488]
[-76.82936096 -76.15917206]
[-87.02763367 -87.18074799]
[-95.92772675 -99.27489471]
[-103.41771698 -112.28949738]
[-109.40341187 -126.06089783]
[-113.80953217 -140.41590881]
[-116.58066559 -155.17398071]
[-117.68196106 -170.14953613]
[-117.09957123 -185.15422058]
[-114.84082031 -199.99935913]
[-110.93411255 -214.49824524]
[-105.42857361 -228.46853638]
[-98.39345551 -241.73455811]
[-89.91722107 -254.12944031]
[-80.10646820 -265.49734497]
[-69.08457947 -275.69528198]
[-56.99017334 -284.59503174]
[-43.97534180 -292.08462524]
[-30.20376396 -298.06991577]
[-15.84862804 -302.47561646]
[-1.09046805 -305.24630737]
[13.88511658 -306.34713745]
[28.88979340 -305.76431274]
[43.73485947 -303.50509644]
[58.23362732 -299.59796143]
[72.20375824 -294.09201050]
[85.46955872 -287.05648804]
[97.86420441 -278.57989502]
[109.23181152 -268.76879883]
[119.42942047 -257.74661255]
[128.32879639 -245.65193176]
[135.81800842 -232.63687134]
[141.80288696 -218.86511230]
[146.20814514 -204.50985718]
[148.97839355 -189.75160217]
[150.07879639 -174.77598572]
[149.49549866 -159.77133179]
[147.23587036 -144.92633057]
[143.32829285 -130.42768860]
[137.82191467 -116.45771790]
[130.78601074 -103.19212341]
[122.30902863 -90.79773712]
[112.49759674 -79.43041992]
[101.47509766 -69.23313904]
[89.38015747 -60.33412552]
[76.36488342 -52.84529877]
[62.59294128 -46.86083984]
[66.99394226 -32.52099609]
[71.39493561 -18.18114662]
[82.52590179 -8.28412819]
[79.17808533 7.17881918]
[83.57908630 21.51866531]
[87.98008728 35.85851288]
[92.38108063 50.19836044]
[96.78208160 64.53820801]
[101.18307495 78.87805176]
[105.58407593 93.21790314]
[108.14600372 94.86898041]
[110.16378784 97.48872375]
[111.27750397 100.87739563]
[111.20603943 104.70507812]
[109.79270172 108.54375458]
[113.33237457 123.12012482]
[120.26412964 109.81784058]
[133.63911438 103.02741241]
[148.46878052 105.28150940]
[159.22203064 115.73939514]
[161.88818359 130.50054932]
[155.47280884 144.05941772]
[142.36869812 151.35888672]
[127.46334839 149.67643738]
[116.31551361 139.63854980]
[118.09797668 154.53227234]
[119.88043976 169.42597961]
[121.66291046 184.31970215]
[123.44537354 199.21342468]
[125.22783661 214.10713196]
[127.01030731 229.00085449]
[141.98728943 228.09515381]
[156.99162292 228.06997681]
[171.97157288 228.92541504]
[186.87548828 230.65850830]
[201.65200806 233.26330566]
[216.25018311 236.73080444]
[230.61970520 241.04907227]
[244.71102905 246.20320129]
[258.47558594 252.17544556]
[271.86590576 258.94519043]
[284.83584595 266.48913574]
[297.34069824 274.78125000]
[309.33737183 283.79293823]
[320.78445435 293.49316406]
[331.64254761 303.84848022]
[341.87417603 314.82318115]
[351.44412231 326.37942505]
[360.31933594 338.47741699]
[368.46923828 351.07540894]
[375.86578369 364.12997437]
[382.48339844 377.59613037]
[388.29934692 391.42745972]
[393.29351807 405.57626343]
[397.44869995 419.99377441]
[400.75061035 434.63031006]
[403.18783569 449.43539429]
[404.75198364 464.35797119]
[405.43768311 479.34664917]
[405.24252319 494.34973145]
[404.16720581 509.31549072]
[402.21545410 524.19238281]
[399.39395142 538.92901611]
[395.71246338 553.47473145]
[391.18365479 567.77929688]
[385.82318115 581.79339600]
[379.64944458 595.46875000]
[372.68380737 608.75823975]
[364.95022583 621.61602783]
[356.47540283 633.99774170]
[347.28851318 645.86077881]
[337.42123413 657.16424561]
[326.90759277 667.86907959]
[315.78384399 677.93847656]
[304.08831787 687.33764648]
[291.86129761 696.03430176]
[279.14501953 703.99835205]
[265.98321533 711.20239258]
[252.42134094 717.62152100]
[238.50611877 723.23376465]
[224.28549194 728.01959229]
[209.80851746 731.96264648]
[195.12509155 735.04925537]
[180.28581238 737.26885986]
[165.34185791 738.61370850]
[150.34472656 739.07922363]
[135.34613037 738.66381836]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 154]
[50 153]
[51 152]
[52 151]
[53 150]
[54 149]
[55 148]
[56 139]
[57 138]
[58 133]
[59 132]
[60 131]
[61 130]
[62 129]
[63 128]
[64 127]
[66 125]
[67 124]
[68 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
