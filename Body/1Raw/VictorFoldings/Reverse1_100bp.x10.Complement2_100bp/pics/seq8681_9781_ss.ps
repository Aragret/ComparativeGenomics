%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[192.29852295 449.44946289]
[201.34452820 437.43527222]
[212.33947754 427.17456055]
[224.94924927 418.97915649]
[219.08027649 405.17495728]
[213.21131897 391.37078857]
[207.34236145 377.56661987]
[193.47604370 372.25051880]
[187.32743835 358.33471680]
[192.99746704 343.82650757]
[187.12850952 330.02230835]
[181.25955200 316.21813965]
[175.39059448 302.41397095]
[169.52162170 288.60980225]
[157.42143250 279.92449951]
[159.14239502 264.19714355]
[147.04220581 255.51185608]
[148.76315308 239.78451538]
[142.89419556 225.98034668]
[137.02523804 212.17616272]
[131.15628052 198.37199402]
[125.28731537 184.56781006]
[119.41835785 170.76364136]
[116.30277252 169.11273193]
[113.83202362 165.87075806]
[112.74522400 161.35719299]
[113.61083221 156.20959473]
[108.36411285 142.15711975]
[103.11740112 128.10466003]
[97.66204071 114.13185883]
[86.73600006 105.40756226]
[88.44792938 91.53092957]
[82.78514862 77.64090729]
[81.72630310 92.60348511]
[77.40842438 106.96858215]
[70.04220581 120.03528595]
[59.98704910 131.16604614]
[47.73357010 139.81776428]
[33.87964630 145.56831360]
[19.10123825 148.13710022]
[4.11941862 147.39880371]
[-10.33481598 143.38941956]
[-23.55621147 136.30459595]
[-34.89966965 126.49002075]
[-43.81171417 114.42455292]
[-49.85750580 100.69689941]
[-52.74206161 85.97686768]
[-52.32463455 70.98268127]
[-48.62559509 56.44593048]
[-41.82542038 43.07590103]
[-32.25591278 31.52494812]
[-20.38398933 22.35666656]
[-6.78890514 16.01839447]
[7.86600494 12.81939507]
[22.86569595 12.91575146]
[37.47829819 16.30276299]
[50.99083328 22.81517029]
[62.74398804 32.13521957]
[72.16430664 43.80815887]
[78.78990173 57.25822449]
[78.78990173 42.25822449]
[78.78990173 27.25822639]
[78.78990173 12.25822639]
[76.48632812 8.57752991]
[75.56635284 4.74110270]
[75.90903473 1.20302796]
[77.25839233 -1.66853225]
[79.26309967 -3.62793970]
[80.15591431 -18.60134506]
[81.04872894 -33.57475281]
[66.39494324 -39.82825089]
[54.78793716 -50.70311737]
[47.61851501 -64.87110138]
[45.73711395 -80.61090088]
[49.35295105 -96.01728058]
[58.01096725 -109.23170471]
[70.64896393 -118.66652679]
[85.72793579 -123.19573975]
[86.39772034 -138.18078613]
[87.06750488 -153.16581726]
[72.55600739 -157.19351196]
[59.31107712 -164.34616089]
[47.99546051 -174.26219177]
[39.17454147 -186.44187927]
[33.28810501 -200.27250671]
[30.62841225 -215.05915833]
[31.32569122 -230.05967712]
[35.34175873 -244.52192688]
[42.47209930 -257.72140503]
[52.35627747 -268.99768066]
[64.49616241 -277.78735352]
[78.28101349 -283.65216064]
[93.01823425 -286.30096436]
[93.68801880 -301.28601074]
[94.35781097 -316.27105713]
[95.02759552 -331.25607300]
[95.69738007 -346.24111938]
[96.14398193 -361.23446655]
[96.36730957 -376.23281860]
[82.53108215 -382.59509277]
[72.48371887 -394.03933716]
[67.96597290 -408.58270264]
[69.76058197 -423.70550537]
[77.55661774 -436.78762817]
[90.00337219 -445.56250000]
[104.94435883 -448.50982666]
[119.79096985 -445.11895752]
[131.97094727 -435.97738647]
[139.37402344 -422.66894531]
[140.71757507 -407.49942017]
[135.76881409 -393.09698486]
[125.38516998 -381.95700073]
[111.36564636 -376.00949097]
[111.14231873 -361.01113892]
[113.76689148 -357.02105713]
[113.91278076 -351.33990479]
[110.68241882 -345.57135010]
[110.01263428 -330.58630371]
[109.34284973 -315.60125732]
[108.67305756 -300.61621094]
[108.00327301 -285.63119507]
[122.44541931 -281.67816162]
[135.65206909 -274.60690308]
[146.95936584 -264.76922607]
[155.79811096 -252.65608215]
[161.72241211 -238.87309265]
[164.43220520 -224.11022949]
[163.78842163 -209.10731506]
[159.82014465 -194.61691284]
[152.72326660 -181.36659241]
[142.85090637 -170.02244568]
[130.69575500 -161.15547180]
[116.86550903 -155.21301270]
[102.05254364 -152.49603271]
[101.38275909 -137.51100159]
[100.71297455 -122.52595520]
[113.94515991 -117.49378967]
[124.99309540 -108.60760498]
[132.76832581 -96.72586823]
[136.49960327 -83.00299835]
[135.80931091 -68.77718353]
[130.75172424 -55.43992615]
[121.80892944 -44.29988861]
[109.84491730 -36.45452118]
[96.02214050 -32.68193436]
[95.12931824 -17.70853043]
[94.23650360 -2.73512387]
[93.78990173 12.25822639]
[93.78990173 27.25822639]
[93.78990173 42.25822449]
[93.78990173 57.25822449]
[96.67517090 71.97811890]
[102.33795929 85.86814117]
[113.26399994 94.59243774]
[111.55207062 108.46907043]
[116.53191376 112.81793976]
[118.30220032 118.21823120]
[117.16986847 122.85793304]
[122.41658783 136.91040039]
[127.66330719 150.96287537]
[133.22253418 164.89468384]
[139.09149170 178.69885254]
[144.96044922 192.50303650]
[150.82940674 206.30720520]
[156.69837952 220.11138916]
[162.56733704 233.91555786]
[175.08731079 243.58824158]
[172.94656372 258.32818604]
[185.46655273 268.00088501]
[183.32580566 282.74084473]
[189.19476318 296.54501343]
[195.06372070 310.34918213]
[200.93269348 324.15335083]
[206.80165100 337.95755005]
[221.18367004 343.94046021]
[226.93898010 358.02346802]
[221.14654541 371.69766235]
[227.01550293 385.50183105]
[232.88446045 399.30599976]
[238.75341797 413.11016846]
[253.40426636 409.71551514]
[268.42202759 408.91671753]
[283.35031128 410.73803711]
[297.73550415 415.12414551]
[311.14041138 421.94177246]
[323.15768433 430.98367310]
[333.42211914 441.97512817]
[341.62182617 454.58209229]
[347.50762939 468.42150879]
[350.90060425 483.07272339]
[351.69772339 498.09057617]
[349.87469482 513.01867676]
[345.48696899 527.40332031]
[338.66784668 540.80749512]
[329.62457275 552.82373047]
[318.63192749 563.08691406]
[306.02401733 571.28521729]
[292.18399048 577.16943359]
[277.53234863 580.56072998]
[262.51440430 581.35614014]
[247.58653259 579.53143311]
[233.20236206 575.14208984]
[219.79901123 568.32141113]
[207.78378296 559.27679443]
[197.52182007 548.28302002]
[189.32496643 535.67419434]
[183.44232178 521.83343506]
[180.05265808 507.18142700]
[179.25895691 492.16342163]
[181.08535767 477.23574829]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 180]
[5 179]
[6 178]
[7 177]
[10 174]
[11 173]
[12 172]
[13 171]
[14 170]
[16 168]
[18 166]
[19 165]
[20 164]
[21 163]
[22 162]
[23 161]
[27 160]
[28 159]
[29 158]
[30 155]
[32 153]
[33 152]
[60 151]
[61 150]
[62 149]
[63 148]
[68 147]
[69 146]
[70 145]
[78 136]
[79 135]
[80 134]
[93 121]
[94 120]
[95 119]
[96 118]
[97 117]
[98 114]
[99 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
