%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUACAAACCCAGACUCAAAUAUAUAGUGUCACUCUUAAGAUACUACCUGGUACAUUGCUUGUUACGAUGUCCCUACUUAUAAUACCUCUUCAUCAGAxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[78.76735687 666.33953857]
[63.81513596 667.99652100]
[48.81304550 666.87762451]
[34.27205276 663.02093506]
[20.68742180 656.55780029]
[8.52183533 647.70831299]
[-1.81034911 636.77392578]
[-9.95722103 624.12707520]
[-15.64130211 610.19848633]
[-18.66899300 595.46252441]
[-18.93717384 580.42114258]
[-16.43670845 565.58666992]
[-11.25276279 551.46429443]
[-3.56189919 538.53503418]
[6.37393332 527.23931885]
[18.21632385 517.96179199]
[31.56192589 511.01849365]
[45.95619202 506.64587402]
[60.90886307 504.99288940]
[62.02450943 490.03442383]
[63.14015961 475.07598877]
[64.25580597 460.11752319]
[51.35963058 467.77838135]
[37.27619934 462.61535645]
[32.38729095 448.43441772]
[40.29682922 435.68927002]
[55.17419815 433.77511597]
[66.05175781 444.10150146]
[68.27687836 429.26745605]
[70.50199127 414.43341064]
[72.50600433 399.56787109]
[74.28847504 384.67416382]
[76.07093811 369.78042603]
[69.90085602 356.22390747]
[79.22322083 343.44094849]
[81.00569153 328.54724121]
[82.78815460 313.65353394]
[84.57061768 298.75979614]
[86.13114166 283.84118652]
[87.46937561 268.90100098]
[88.80760956 253.96083069]
[89.70042419 238.98742676]
[90.14703369 223.99406433]
[90.59364319 209.00071716]
[83.23870850 196.04872131]
[91.38346100 182.48503113]
[91.83006287 167.49168396]
[92.27667236 152.49833679]
[92.50000000 137.50000000]
[92.50000000 122.50000000]
[92.50000000 107.50000000]
[91.83021545 92.51496124]
[82.89257812 79.46010590]
[89.46355438 66.09329987]
[80.52591705 53.03844452]
[87.09689331 39.67163849]
[85.75865936 24.73145294]
[84.42042542 9.79126835]
[82.63795471 -5.10244942]
[80.41284180 -19.93649292]
[78.18772125 -34.77053833]
[75.96260834 -49.60457993]
[72.70957947 -53.68685150]
[71.47153473 -58.16128159]
[72.06041718 -62.19467545]
[73.98474884 -65.14920807]
[72.42422485 -80.06781769]
[70.86370850 -94.98641968]
[69.30318451 -109.90502167]
[67.74266052 -124.82363129]
[66.18213654 -139.74223328]
[64.62161255 -154.66084290]
[51.84012222 -157.01284790]
[40.11621094 -162.58938599]
[30.24706650 -171.00352478]
[22.90175438 -181.67564392]
[18.57585335 -193.87336731]
[17.55802536 -206.76185608]
[19.91077423 -219.46084595]
[25.46663857 -231.10490417]
[33.84010696 -240.90228271]
[44.45434952 -248.18881226]
[56.58095551 -252.47296143]
[55.68814087 -267.44635010]
[47.14315796 -280.76153564]
[54.10919952 -293.92678833]
[53.21638489 -308.90017700]
[52.32356644 -323.87359619]
[51.43075180 -338.84698486]
[38.13628387 -350.21697998]
[37.19670486 -367.34683228]
[48.70576096 -379.60980225]
[47.59011459 -394.56823730]
[46.47446442 -409.52670288]
[31.82157516 -413.34396362]
[19.20346260 -421.71426392]
[9.98884487 -433.72967529]
[5.17725563 -448.08679199]
[5.29062033 -463.22833252]
[10.31664181 -477.51181030]
[19.71013451 -489.38787842]
[32.45216370 -497.56829834]
[47.16056824 -501.16574097]
[62.23989105 -499.78997803]
[76.05443573 -493.59020996]
[87.10571289 -483.23898315]
[94.19495392 -469.85910034]
[96.55317688 -454.90188599]
[93.92457581 -439.98983765]
[86.59428406 -426.74047852]
[75.35743713 -416.59100342]
[61.43291855 -410.64236450]
[62.54856873 -395.68389893]
[63.66421509 -380.72543335]
[74.50828552 -373.76586914]
[79.43746948 -361.65039062]
[76.44465637 -348.71771240]
[66.40415955 -339.73980713]
[67.29697418 -324.76638794]
[68.18978882 -309.79299927]
[69.08260345 -294.81958008]
[77.56372833 -282.57540894]
[70.66154480 -268.33917236]
[71.55435944 -253.36576843]
[88.06347656 -248.90466309]
[102.07115936 -239.05166626]
[111.87799835 -224.98155212]
[116.28715515 -208.38188171]
[114.75045776 -191.25074768]
[107.43645477 -175.65612793]
[95.21215057 -163.48632812]
[79.54021454 -156.22135925]
[81.10073853 -141.30274963]
[82.66126251 -126.38415527]
[84.22178650 -111.46554565]
[85.78231049 -96.54694366]
[87.34283447 -81.62833405]
[88.90335846 -66.70973206]
[90.79664612 -51.82969666]
[93.02176666 -36.99565506]
[95.24687958 -22.16160965]
[97.47200012 -7.32756662]
[99.64352417 -5.55482388]
[101.24368286 -2.81509781]
[101.90065002 0.67829573]
[101.32661438 4.58150005]
[99.36061096 8.45303345]
[100.69884491 23.39321899]
[102.03707886 38.33340454]
[110.87899017 50.31963730]
[104.40373993 64.75506592]
[113.24565887 76.74129486]
[106.77040100 91.17672729]
[117.19447327 80.39068604]
[132.18930054 79.99687958]
[143.16517639 90.22088623]
[143.83459473 105.20594025]
[133.81410217 116.36791992]
[118.84388733 117.31273651]
[107.50000000 107.50000000]
[107.50000000 122.50000000]
[107.50000000 137.50000000]
[110.46956635 143.40704346]
[110.07013702 149.07604980]
[107.27001953 152.94494629]
[106.82341766 167.93829346]
[106.37680817 182.93164062]
[113.69979858 196.95606995]
[105.58699036 209.44732666]
[105.14038086 224.44067383]
[104.69377899 239.43402100]
[106.88674164 243.18167114]
[107.69207764 247.04379272]
[107.24420929 250.57009888]
[105.80995941 253.40020752]
[103.74779510 255.29905701]
[102.40956116 270.23925781]
[101.07132721 285.17944336]
[103.50204468 291.32785034]
[102.59845734 296.93859863]
[99.46434021 300.54226685]
[97.68186951 315.43597412]
[95.89940643 330.32971191]
[94.11694336 345.22341919]
[100.15953064 359.84524536]
[90.96465302 371.56289673]
[89.18218994 386.45663452]
[87.39972687 401.35034180]
[89.64630127 407.56842041]
[88.57605743 413.14978027]
[85.33603668 416.65850830]
[83.11091614 431.49255371]
[80.88580322 446.32659912]
[79.21426392 461.23318481]
[78.09860992 476.19161987]
[76.98296356 491.15008545]
[75.86731720 506.10855103]
[90.40934753 509.96133423]
[103.99571991 516.42083740]
[116.16368866 525.26702881]
[126.49882507 536.19860840]
[134.64910889 548.84326172]
[140.33694458 562.77032471]
[143.36860657 577.50543213]
[143.64083862 592.54675293]
[141.14436340 607.38189697]
[135.96423340 621.50567627]
[128.27685547 634.43701172]
[118.34406281 645.73541260]
[106.50417328 655.01611328]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 197]
[20 196]
[21 195]
[22 194]
[28 193]
[29 192]
[30 191]
[31 188]
[32 187]
[33 186]
[35 184]
[36 183]
[37 182]
[38 181]
[39 178]
[40 177]
[41 176]
[42 171]
[43 170]
[44 169]
[46 167]
[47 166]
[48 165]
[49 162]
[50 161]
[51 160]
[52 153]
[54 151]
[56 149]
[57 148]
[58 147]
[59 142]
[60 141]
[61 140]
[62 139]
[66 138]
[67 137]
[68 136]
[69 135]
[70 134]
[71 133]
[72 132]
[83 124]
[84 123]
[86 121]
[87 120]
[88 119]
[89 118]
[92 114]
[93 113]
[94 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
