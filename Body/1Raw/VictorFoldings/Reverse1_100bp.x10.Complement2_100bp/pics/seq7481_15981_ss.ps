%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[97.30105591 1014.54492188]
[82.32391357 1013.69024658]
[67.38545227 1012.31622314]
[52.50368500 1010.42456055]
[37.69653320 1008.01757812]
[22.98184013 1005.09808350]
[8.37733841 1001.66967773]
[-6.09937572 997.73645020]
[-20.43085861 993.30316162]
[-34.59984207 988.37518311]
[-48.58925247 982.95837402]
[-62.38223648 977.05926514]
[-75.96217346 970.68505859]
[-89.31269836 963.84338379]
[-102.41773224 956.54241943]
[-115.26147461 948.79107666]
[-127.82845306 940.59857178]
[-140.10353088 931.97491455]
[-152.07189941 922.93041992]
[-163.71916199 913.47595215]
[-175.03128052 903.62292480]
[-185.99461365 893.38330078]
[-196.59594727 882.76928711]
[-206.82252502 871.79370117]
[-216.66201782 860.46984863]
[-226.10255432 848.81134033]
[-235.13278198 836.83215332]
[-243.74180603 824.54681396]
[-251.91926575 811.97003174]
[-259.65530396 799.11706543]
[-266.94058228 786.00329590]
[-273.76635742 772.64465332]
[-280.12435913 759.05712891]
[-286.00695801 745.25708008]
[-291.40707397 731.26123047]
[-296.31817627 717.08636475]
[-300.73434448 702.74957275]
[-304.65026855 688.26818848]
[-308.06124878 673.65960693]
[-310.96313477 658.94146729]
[-313.35247803 644.13140869]
[-315.22634888 629.24743652]
[-316.58251953 614.30731201]
[-317.41937256 599.32916260]
[-317.73587036 584.33099365]
[-317.53161621 569.33087158]
[-316.80691528 554.34686279]
[-315.56256104 539.39703369]
[-313.80014038 524.49945068]
[-311.52169800 509.67196655]
[-308.73004150 494.93249512]
[-305.42849731 480.29876709]
[-301.62103271 465.78848267]
[-297.31228638 451.41906738]
[-292.50738525 437.20785522]
[-287.21218872 423.17196655]
[-281.43304443 409.32830811]
[-275.17687988 395.69357300]
[-268.45129395 382.28417969]
[-261.26434326 369.11630249]
[-253.62472534 356.20578003]
[-245.54161072 343.56817627]
[-237.02476501 331.21871948]
[-228.08444214 319.17233276]
[-218.73141479 307.44345093]
[-208.97694397 296.04626465]
[-198.83279419 284.99450684]
[-188.31118774 274.30145264]
[-177.42478943 263.98004150]
[-166.18673706 254.04264832]
[-154.61056519 244.50129700]
[-142.71020508 235.36746216]
[-130.50001526 226.65214539]
[-117.99468994 218.36585999]
[-105.20932007 210.51858521]
[-92.15929413 203.11978149]
[-78.86034393 196.17835999]
[-65.32849121 189.70268250]
[-51.58004379 183.70056152]
[-37.63156128 178.17921448]
[-23.49985504 173.14529419]
[-9.20195103 168.60487366]
[5.24492168 164.56343079]
[19.82335663 161.02581787]
[34.51578903 157.99632263]
[49.30451202 155.47856140]
[64.17170715 153.47560120]
[79.09946442 151.98982239]
[94.06979370 151.02304077]
[93.62319183 136.02969360]
[93.17658234 121.03634644]
[92.72998047 106.04299927]
[89.82558441 101.67510986]
[89.57518768 95.99086761]
[92.50000000 90.59805298]
[92.50000000 75.59805298]
[92.50000000 60.59805298]
[78.24732971 55.43693161]
[66.62139893 45.70998001]
[59.02610016 32.59177780]
[56.37859344 17.66641426]
[58.99858856 2.73619509]
[66.56970215 -10.39598083]
[78.17768860 -20.14434052]
[92.42082214 -25.33172035]
[107.57917786 -25.33172035]
[121.82231140 -20.14434052]
[133.43029785 -10.39598083]
[141.00140381 2.73619509]
[143.62139893 17.66641426]
[140.97390747 32.59177780]
[133.37860107 45.70998001]
[121.75267029 55.43693161]
[107.50000000 60.59805298]
[107.50000000 75.59805298]
[107.50000000 90.59805298]
[107.72332764 105.59638977]
[108.16993713 120.58974457]
[108.61653900 135.58309937]
[109.06314850 150.57644653]
[124.06447601 150.65045166]
[139.05419922 151.24507141]
[154.01426697 152.35957336]
[168.92662048 153.99263000]
[183.77333069 156.14225769]
[198.53646851 158.80586243]
[213.19828796 161.98025513]
[227.74108887 165.66159058]
[242.14736938 169.84545898]
[256.39974976 174.52677917]
[270.48107910 179.69995117]
[284.37438965 185.35871887]
[298.06292725 191.49626160]
[311.53018188 198.10519409]
[324.75997925 205.17755127]
[337.73632812 212.70481873]
[350.44360352 220.67791748]
[362.86651611 229.08723450]
[374.99008179 237.92265320]
[386.79971313 247.17350769]
[398.28115845 256.82867432]
[409.42056274 266.87649536]
[420.20452881 277.30487061]
[430.62008667 288.10125732]
[440.65463257 299.25262451]
[450.29614258 310.74554443]
[459.53292847 322.56616211]
[468.35391235 334.70025635]
[476.74844360 347.13314819]
[484.70639038 359.84991455]
[492.21823120 372.83523560]
[499.27481079 386.07342529]
[505.86773682 399.54855347]
[511.98898315 413.24438477]
[517.63122559 427.14440918]
[522.78759766 441.23187256]
[527.45196533 455.48983765]
[531.61865234 469.90106201]
[535.28271484 484.44824219]
[538.43963623 499.11383057]
[541.08569336 513.88012695]
[543.21765137 528.72937012]
[544.83294678 543.64367676]
[545.92962646 558.60504150]
[546.50640869 573.59545898]
[546.56256104 588.59686279]
[546.09808350 603.59118652]
[545.11340332 618.56036377]
[543.60980225 633.48632812]
[541.58911133 648.35113525]
[539.05371094 663.13684082]
[536.00665283 677.82562256]
[532.45166016 692.39984131]
[528.39294434 706.84191895]
[523.83551025 721.13433838]
[518.78472900 735.26007080]
[513.24670410 749.20190430]
[507.22817993 762.94323730]
[500.73635864 776.46734619]
[493.77905273 789.75799561]
[486.36468506 802.79913330]
[478.50213623 815.57513428]
[470.20095825 828.07055664]
[461.47106934 840.27038574]
[452.32302856 852.15979004]
[442.76785278 863.72460938]
[432.81707764 874.95074463]
[422.48266602 885.82482910]
[411.77706909 896.33367920]
[400.71319580 906.46459961]
[389.30438232 916.20550537]
[377.56436157 925.54449463]
[365.50726318 934.47045898]
[353.14767456 942.97253418]
[340.50042725 951.04052734]
[327.58081055 958.66473389]
[314.40435791 965.83599854]
[300.98693848 972.54553223]
[287.34475708 978.78540039]
[273.49420166 984.54803467]
[259.45199585 989.82653809]
[245.23506165 994.61444092]
[230.86051941 998.90600586]
[216.34568787 1002.69616699]
[201.70805359 1005.98022461]
[186.96525574 1008.75427246]
[172.13507080 1011.01501465]
[157.23535156 1012.75970459]
[142.28405762 1013.98614502]
[127.29920197 1014.69299316]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[89 120]
[90 119]
[91 118]
[92 117]
[95 116]
[96 115]
[97 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
