%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[87.38317108 584.99359131]
[72.37524414 585.08526611]
[57.40860367 583.96899414]
[42.58031845 581.65203857]
[27.98655891 578.14941406]
[13.72196960 573.48382568]
[-0.12093601 567.68548584]
[-13.45238018 560.79211426]
[-26.18590355 552.84832764]
[-38.23891830 543.90570068]
[-49.53326416 534.02215576]
[-59.99568176 523.26184082]
[-69.55831909 511.69454956]
[-78.15916443 499.39529419]
[-85.74243927 486.44381714]
[-92.25894928 472.92416382]
[-97.66644287 458.92398071]
[-101.92984009 444.53405762]
[-105.02149963 429.84774780]
[-106.92137146 414.96026611]
[-107.61712646 399.96820068]
[-107.10425568 384.96875000]
[-105.38608551 370.05920410]
[-102.47376251 355.33627319]
[-98.38616943 340.89544678]
[-93.14981842 326.83035278]
[-86.79867554 313.23220825]
[-79.37391663 300.18923950]
[-70.92370605 287.78598022]
[-61.50284576 276.10293579]
[-51.17243195 265.21585083]
[-39.99946213 255.19531250]
[-28.05640221 246.10632324]
[-15.42070484 238.00784302]
[-2.17431927 230.95237732]
[11.59684467 224.98568726]
[25.80347443 220.14646912]
[40.35343170 216.46612549]
[55.15235901 213.96849060]
[70.10427094 212.66978455]
[85.11219788 212.57843018]
[86.22785187 197.61997986]
[87.34349823 182.66152954]
[78.88289642 167.28671265]
[89.37682343 152.15531921]
[90.26963806 137.18191528]
[91.16246033 122.20850372]
[92.05527496 107.23509979]
[90.27280426 92.34138489]
[85.87181091 78.00153351]
[81.47080994 63.66168976]
[77.06981659 49.32184219]
[72.66881561 34.98199463]
[66.59497833 21.26672745]
[58.93438339 8.37040043]
[51.27378845 -4.52592611]
[34.41177750 -5.85583258]
[21.79033661 -16.86494446]
[18.25335693 -33.06529999]
[25.00124168 -48.03004456]
[17.14948654 -60.81088638]
[9.29773045 -73.59172821]
[-4.36822271 -67.36105347]
[-18.69628716 -62.85702896]
[-33.46924973 -60.14794540]
[-48.46316147 -59.27486420]
[-63.45071411 -60.25102234]
[-78.20470428 -63.06162262]
[-92.50145721 -67.66405487]
[-106.12424469 -73.98855591]
[-118.86654663 -81.93923187]
[-130.53520203 -91.39556885]
[-140.95329285 -102.21420288]
[-149.96290588 -114.23112488]
[-157.42745972 -127.26416779]
[-163.23377991 -141.11575317]
[-167.29383850 -155.57588196]
[-169.54611206 -170.42535400]
[-169.95643616 -185.43905640]
[-168.51858521 -200.38938904]
[-165.25437927 -215.04968262]
[-160.21328735 -229.19772339]
[-153.47172546 -242.61901855]
[-145.13191223 -255.11010742]
[-135.32026672 -266.48159790]
[-124.18553925 -276.56115723]
[-111.89651489 -285.19595337]
[-98.63949585 -292.25506592]
[-84.61546326 -297.63150024]
[-70.03701019 -301.24374390]
[-55.12514496 -303.03704834]
[-40.10593033 -302.98422241]
[-25.20705032 -301.08605957]
[-10.65437031 -297.37133789]
[3.33149672 -291.89639282]
[16.53852654 -284.74420166]
[28.76650620 -276.02316284]
[39.83006287 -265.86553955]
[49.56147003 -254.42530823]
[57.81320953 -241.87586975]
[64.46018219 -228.40748596]
[69.40162659 -214.22433472]
[72.56262970 -199.54142761]
[73.89526367 -184.58135986]
[73.37934113 -169.57090759]
[71.02266693 -154.73764038]
[66.86098480 -140.30642700]
[60.95736694 -126.49604034]
[53.40132523 -113.51583099]
[44.30739975 -101.56257629]
[33.81345367 -90.81750488]
[22.07857323 -81.44348145]
[29.93032837 -68.66264343]
[37.78208542 -55.88179779]
[51.13121414 -56.08874130]
[62.93410110 -49.62066269]
[70.05638885 -38.07325745]
[70.54671478 -24.40657997]
[64.17011261 -12.18652344]
[71.83071136 0.70980334]
[79.49131012 13.60613060]
[79.02730560 -1.38669145]
[83.65335083 -15.65552711]
[92.82598877 -27.52408981]
[105.46762085 -35.59806824]
[120.09311676 -38.92894745]
[134.98429871 -37.12541199]
[148.39175415 -30.39933968]
[158.74040222 -19.54090691]
[164.81448364 -5.82574844]
[165.90042114 9.13489151]
[161.87065125 23.58345222]
[153.19856262 35.82252884]
[140.90296936 44.41429138]
[126.42833710 48.34938431]
[111.47512817 47.16551971]
[97.80003357 41.00177765]
[87.00865936 30.58099556]
[91.40966034 44.92084503]
[95.81066132 59.26068878]
[100.21165466 73.60054016]
[104.61265564 87.94038391]
[107.03133392 73.13666534]
[112.87715149 59.32267380]
[121.81949615 47.27965164]
[133.35264587 37.68869019]
[146.82432556 31.09220695]
[161.47267151 27.86326218]
[176.46923828 28.18447113]
[190.96588135 32.03766632]
[204.14277649 39.20493317]
[215.25466919 49.28092575]
[223.67315674 61.69579697]
[228.92213440 75.74742889]
[230.70472717 90.64112854]
[228.92012024 105.53459167]
[223.66926575 119.58551788]
[215.24909973 131.99925232]
[204.13584900 142.07374573]
[190.95799255 149.23924255]
[176.46083069 153.09048462]
[161.46423340 153.40968323]
[146.81631470 150.17877197]
[133.34552002 143.58047485]
[121.81365967 133.98796082]
[112.87293243 121.94372559]
[107.02867889 108.12791443]
[106.13586426 123.10131836]
[105.24304962 138.07472229]
[104.35023499 153.04812622]
[112.31218719 163.19555664]
[111.26029968 175.64855957]
[102.30194855 183.77717590]
[101.18630219 198.73562622]
[100.07065582 213.69409180]
[114.89898682 216.01072693]
[129.49282837 219.51303101]
[143.75752258 224.17831421]
[157.60055542 229.97631836]
[170.93214417 236.86941528]
[183.66584778 244.81292725]
[195.71905518 253.75531006]
[207.01362610 263.63858032]
[217.47627258 274.39865112]
[227.03916931 285.96575928]
[235.64028931 298.26480103]
[243.22384644 311.21609497]
[249.74066162 324.73562622]
[255.14845276 338.73571777]
[259.41217041 353.12551880]
[262.50415039 367.81176758]
[264.40435791 382.69921875]
[265.10043335 397.69125366]
[264.58789062 412.69073486]
[262.87005615 427.60028076]
[259.95806885 442.32330322]
[255.87078857 456.76422119]
[250.63475037 470.82943726]
[244.28390503 484.42770386]
[236.85943604 497.47085571]
[228.40950012 509.87426758]
[218.98889160 521.55755615]
[208.65872192 532.44488525]
[197.48596191 542.46563721]
[185.54310608 551.55487061]
[172.90759277 559.65362549]
[159.66136169 566.70941162]
[145.89031982 572.67639160]
[131.68380737 577.51593018]
[117.13392639 581.19659424]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 175]
[42 174]
[43 173]
[45 170]
[46 169]
[47 168]
[48 167]
[49 142]
[50 141]
[51 140]
[52 139]
[53 138]
[54 121]
[55 120]
[56 119]
[60 114]
[61 113]
[62 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
