%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[136.25654602 616.41064453]
[139.62896729 601.72821045]
[146.18446350 588.16448975]
[155.59419250 576.39996338]
[167.38619995 567.02465820]
[180.96897888 560.50885010]
[177.64671326 545.88134766]
[174.32446289 531.25390625]
[171.00219727 516.62646484]
[167.57113647 502.02413940]
[164.03146362 487.44775391]
[160.49179077 472.87136841]
[157.68707275 470.73458862]
[155.77799988 467.13311768]
[155.44166565 462.50277710]
[157.13500977 457.56518555]
[154.24972534 442.84530640]
[151.36445618 428.12542725]
[148.36968994 413.42739868]
[145.26557922 398.75210571]
[142.16146851 384.07681274]
[139.05735779 369.40148926]
[128.85374451 358.55090332]
[133.56774902 343.44827271]
[130.46363831 328.77297974]
[127.72378540 326.55361938]
[125.92277527 322.89691162]
[125.72446442 318.25860596]
[127.56405640 313.37362671]
[125.11833191 298.57437134]
[122.67259979 283.77508545]
[108.68382263 278.65847778]
[99.07039642 267.15029907]
[96.49098206 252.27708435]
[101.73699188 238.01608276]
[113.49352264 228.23184204]
[111.04779816 213.43257141]
[108.60206604 198.63330078]
[106.15634155 183.83403015]
[103.71061707 169.03475952]
[101.26488495 154.23548889]
[98.81916046 139.43621826]
[96.37342834 124.63694763]
[93.92770386 109.83767700]
[87.60282898 123.43899536]
[75.73781586 132.61622620]
[60.98335648 135.31915283]
[46.63562012 130.94393921]
[35.89993668 120.46801758]
[31.17468071 106.23172760]
[33.51548767 91.41549683]
[42.39941406 79.32931519]
[55.84177017 72.67325592]
[70.83950043 72.93431091]
[84.04206848 80.05415344]
[92.50000000 92.44221497]
[92.50000000 77.44221497]
[92.50000000 62.44221497]
[84.76270294 48.64204407]
[92.50000000 35.91477203]
[92.50000000 20.91477203]
[92.50000000 5.91477251]
[92.50000000 -9.08522797]
[92.50000000 -24.08522797]
[83.94817352 -33.74074936]
[84.25698090 -46.23428345]
[92.71562195 -54.88171005]
[92.93894958 -69.88004303]
[93.16227722 -84.87837982]
[78.12266541 -89.47720337]
[64.99787903 -98.11563873]
[54.84488678 -110.08824158]
[48.47856903 -124.42144012]
[46.40631866 -139.95272827]
[48.78762817 -155.42495728]
[55.42182541 -169.58805847]
[65.76497650 -181.30006409]
[78.97444916 -189.61920166]
[93.97759247 -193.87956238]
[93.97759247 -208.87956238]
[93.97759247 -223.87956238]
[90.84818268 -232.46121216]
[94.09092712 -239.10247803]
[94.31425476 -254.10081482]
[86.78327179 -268.01464844]
[94.70920563 -280.62530518]
[94.93253326 -295.62365723]
[95.15586090 -310.62197876]
[87.62488556 -324.53582764]
[95.55081177 -337.14648438]
[95.77413940 -352.14483643]
[93.52562714 -355.85940552]
[92.66287231 -359.70910645]
[93.05819702 -363.24169922]
[94.45014954 -366.09286499]
[96.48381042 -368.02218628]
[97.59946442 -382.98065186]
[98.71511078 -397.93908691]
[99.83075714 -412.89755249]
[85.90624237 -418.84622192]
[74.66939545 -428.99569702]
[67.33909607 -442.24505615]
[64.71049500 -457.15710449]
[67.06871796 -472.11428833]
[74.15796661 -485.49417114]
[85.20923615 -495.84539795]
[99.02378845 -502.04516602]
[114.10311127 -503.42092896]
[128.81150818 -499.82351685]
[141.55354309 -491.64306641]
[150.94703674 -479.76699829]
[155.97305298 -465.48352051]
[156.08642578 -450.34201050]
[151.27482605 -435.98486328]
[142.06021118 -423.96948242]
[129.44210815 -415.59918213]
[114.78921509 -411.78189087]
[113.67356110 -396.82345581]
[112.55791473 -381.86499023]
[111.44226837 -366.90655518]
[110.77248383 -351.92150879]
[110.54915619 -336.92315674]
[118.09610748 -324.08212280]
[110.15419769 -310.39865112]
[109.93087006 -295.40032959]
[109.70754242 -280.40197754]
[117.25449371 -267.56094360]
[109.31259155 -253.87748718]
[109.08926392 -238.87915039]
[108.97759247 -223.87956238]
[108.97759247 -208.87956238]
[108.97759247 -193.87956238]
[122.81031799 -190.12419128]
[135.20794678 -182.90657043]
[145.32037354 -172.71432495]
[152.45234680 -160.23927307]
[156.11120605 -146.33050537]
[156.04089355 -131.93658447]
[152.23995972 -118.04081726]
[144.96195984 -105.59413147]
[134.69866943 -95.44996643]
[122.14677429 -88.30577087]
[108.16061401 -84.65505219]
[107.93728638 -69.65671539]
[107.71395874 -54.65838242]
[117.07468414 -39.81439972]
[107.50000000 -24.08522797]
[107.50000000 -9.08522797]
[107.50000000 5.91477251]
[107.50000000 20.91477203]
[107.50000000 35.91477203]
[115.23729706 48.64204407]
[107.50000000 62.44221497]
[107.50000000 77.44221497]
[107.50000000 92.44221497]
[108.72697449 107.39195251]
[111.17270660 122.19122314]
[113.61843109 136.99049377]
[116.06415558 151.78976440]
[118.50988770 166.58903503]
[120.95561218 181.38830566]
[123.40133667 196.18757629]
[125.84706879 210.98684692]
[128.29280090 225.78611755]
[142.57214355 231.26765442]
[152.12747192 243.08259583]
[154.47041321 257.99490356]
[149.07067871 271.98416138]
[137.47187805 281.32937622]
[139.91760254 296.12863159]
[142.36332703 310.92791748]
[145.13893127 325.66888428]
[148.24304199 340.34417725]
[158.66868591 352.24444580]
[153.73265076 366.29739380]
[156.83676147 380.97268677]
[159.94087219 395.64801025]
[163.04498291 410.32330322]
[167.88253784 418.07156372]
[166.08435059 425.24014282]
[168.96961975 439.96002197]
[171.85488892 454.67993164]
[175.06816101 469.33169556]
[178.60783386 483.90808105]
[182.14750671 498.48446655]
[187.21362305 506.08526611]
[185.62965393 513.30419922]
[188.95191956 527.93164062]
[192.27416992 542.55914307]
[195.59643555 557.18658447]
[210.66122437 557.19580078]
[225.34611511 560.55755615]
[238.91456604 567.10321045]
[250.68594360 576.50439453]
[260.06982422 588.28955078]
[266.59552002 601.86761475]
[269.93566895 616.55743408]
[269.92279053 631.62219238]
[266.55746460 646.30627441]
[260.00854492 659.87316895]
[250.60452271 671.64227295]
[238.81706238 681.02325439]
[225.23744202 687.54565430]
[210.54681396 690.88226318]
[195.48202515 690.86572266]
[180.79875183 687.49688721]
[167.23348999 680.94464111]
[155.46667480 671.53778076]
[146.08850098 659.74804688]
[139.56939697 646.16687012]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 190]
[7 189]
[8 188]
[9 187]
[10 185]
[11 184]
[12 183]
[16 182]
[17 181]
[18 180]
[19 178]
[20 177]
[21 176]
[22 175]
[24 173]
[25 172]
[29 171]
[30 170]
[31 169]
[36 164]
[37 163]
[38 162]
[39 161]
[40 160]
[41 159]
[42 158]
[43 157]
[44 156]
[56 155]
[57 154]
[58 153]
[60 151]
[61 150]
[62 149]
[63 148]
[64 147]
[67 145]
[68 144]
[69 143]
[79 132]
[80 131]
[81 130]
[83 129]
[84 128]
[86 126]
[87 125]
[88 124]
[90 122]
[91 121]
[96 120]
[97 119]
[98 118]
[99 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
