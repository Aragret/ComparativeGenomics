%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[111.01060486 710.92755127]
[104.12346649 697.56054688]
[99.59458923 683.22192383]
[97.55426788 668.32409668]
[98.06121063 653.29577637]
[101.10083008 638.56927490]
[106.58566284 624.56842041]
[114.35791016 611.69592285]
[124.19394684 600.32226562]
[135.81076050 590.77465820]
[148.87413025 583.32769775]
[163.00819397 578.19580078]
[160.34239197 563.43457031]
[157.67658997 548.67340088]
[155.01080322 533.91217041]
[143.50154114 528.11853027]
[137.33866882 516.58154297]
[138.96978760 503.40774536]
[148.02178955 493.43395996]
[145.57606506 478.63470459]
[143.13034058 463.83541870]
[130.91011047 455.39730835]
[128.21897888 440.42358398]
[137.15249634 427.66311646]
[134.70677185 412.86383057]
[132.15093994 398.08319092]
[129.48513794 383.32196045]
[119.60912323 372.17236328]
[124.77069855 357.21682739]
[122.10489655 342.45559692]
[119.43910217 327.69436646]
[116.77330780 312.93316650]
[114.10751343 298.17193604]
[111.44171906 283.41073608]
[100.87487793 294.05694580]
[85.94725800 292.58520508]
[77.66293335 280.08038330]
[82.12880707 265.76062012]
[96.05280304 260.18188477]
[109.16970825 267.45526123]
[107.60918427 252.53665161]
[98.41278839 244.67835999]
[96.99059296 232.26219177]
[104.64689636 221.88221741]
[103.30866241 206.94203186]
[101.97042847 192.00184631]
[100.52100372 177.07203674]
[98.96047974 162.15342712]
[97.39996338 147.23483276]
[81.39681244 143.49494934]
[67.63885498 134.50573730]
[57.78651810 121.35207367]
[53.02885818 105.62145996]
[53.94007111 89.21240997]
[60.41019058 74.10529327]
[71.65834045 62.12336731]
[86.32700348 54.71271515]
[84.32299042 39.84718704]
[82.31897736 24.98165894]
[80.31496429 10.11612988]
[78.31094360 -4.74939823]
[66.02666473 -14.32719421]
[64.20607758 -29.43150139]
[73.41274261 -41.08366394]
[71.40872955 -55.94919205]
[69.40471649 -70.81472015]
[67.17960358 -85.64876556]
[64.73387146 -100.44803619]
[62.28814697 -115.24730682]
[57.80139160 -123.20386505]
[59.91788483 -130.28498840]
[57.69276810 -145.11901855]
[44.08590698 -152.34117126]
[37.41867828 -166.03063965]
[40.05950546 -180.84584045]
[50.78929901 -191.14193726]
[48.56418228 -205.97596741]
[46.33906555 -220.81001282]
[38.24818039 -208.17919922]
[24.32072258 -202.60910034]
[9.75129032 -206.17724609]
[-0.02607930 -217.55279541]
[-1.36466885 -232.49295044]
[6.23478270 -245.42539978]
[19.93786812 -251.52667236]
[34.63367462 -248.52113342]
[44.84152603 -237.52871704]
[44.39492035 -252.52206421]
[43.94831467 -267.51541138]
[43.50170898 -282.50875854]
[42.94349670 -297.49838257]
[42.27371216 -312.48339844]
[41.60392761 -327.46844482]
[38.37356186 -333.23699951]
[38.51945496 -338.91818237]
[41.14402008 -342.90826416]
[40.92069244 -357.90658569]
[40.69736481 -372.90493774]
[40.47403717 -387.90325928]
[26.78860855 -394.75656128]
[17.86506462 -407.19155884]
[15.75397110 -422.35076904]
[20.94044304 -436.75073242]
[32.23266602 -447.08245850]
[47.03577042 -450.97174072]
[61.94810867 -447.52493286]
[73.54293823 -437.53399658]
[79.15585327 -423.29483032]
[77.49703979 -408.07946777]
[68.94769287 -395.38430786]
[55.47237778 -388.12658691]
[55.69570541 -373.12826538]
[55.91903305 -358.12991333]
[56.14236069 -343.13159180]
[56.58896637 -328.13824463]
[57.25875092 -313.15319824]
[57.92853546 -298.16815186]
[61.36757278 -291.62637329]
[58.49505615 -282.95538330]
[58.94166183 -267.96200562]
[59.38826752 -252.96867371]
[59.83487701 -237.97532654]
[61.17311096 -223.03514099]
[63.39822769 -208.20109558]
[65.62334442 -193.36705017]
[78.90179443 -186.67221069]
[85.77317047 -173.28385925]
[83.41585541 -158.24069214]
[72.52680969 -147.34414673]
[74.75193024 -132.51010132]
[77.08741760 -117.69303131]
[79.53314209 -102.89376068]
[81.97887421 -88.09449005]
[85.27077484 -84.63436890]
[86.42400360 -79.06956482]
[84.27024841 -72.81873322]
[86.27426147 -57.95320511]
[88.27827454 -43.08767700]
[100.24184418 -34.28946304]
[102.48596191 -19.24225235]
[93.17647552 -6.75341177]
[95.18048859 8.11211681]
[97.18450165 22.97764397]
[99.18851471 37.84317398]
[101.19252777 52.70870209]
[114.45399475 54.95589828]
[126.54695892 60.84456635]
[136.49380493 69.89865112]
[143.49040222 81.38619995]
[146.97114563 94.37854004]
[146.65461731 107.82532501]
[142.56642151 120.63949585]
[135.03706360 131.78511047]
[124.67520905 140.36116028]
[112.31856537 145.67430115]
[113.87908936 160.59291077]
[115.43961334 175.51152039]
[119.44483185 183.72102356]
[116.91060638 190.66360474]
[118.24884796 205.60379028]
[119.58708191 220.54397583]
[130.52687073 235.35621643]
[122.52778625 250.97613525]
[124.08831024 265.89474487]
[126.20293427 280.74493408]
[128.86872864 295.50616455]
[131.53453064 310.26736450]
[134.20031738 325.02859497]
[136.86611938 339.78979492]
[139.53190613 354.55102539]
[149.59860229 366.75643921]
[144.24636841 380.65618896]
[146.91215515 395.41738892]
[151.51687622 403.30627441]
[149.50604248 410.41812134]
[151.95176697 425.21737671]
[164.51577759 434.42520142]
[166.78526306 449.46859741]
[157.92961121 461.38970947]
[160.37533569 476.18896484]
[162.82106018 490.98825073]
[177.22627258 500.91345215]
[179.94284058 517.85260010]
[169.77201843 531.24633789]
[172.43782043 546.00756836]
[175.10360718 560.76879883]
[177.76940918 575.53002930]
[192.80567932 575.39392090]
[207.64863586 577.80108643]
[221.87123108 582.68231201]
[235.06422424 589.89703369]
[246.84806824 599.23779297]
[256.88366699 610.43572998]
[264.88232422 623.16876221]
[270.61386108 637.07049561]
[273.91342163 651.74090576]
[274.68600464 666.75793457]
[272.90942383 681.68945312]
[268.63479614 696.10595703]
[261.98510742 709.59265137]
[253.15167236 721.76135254]
[242.38865662 732.26208496]
[230.00572205 740.79266357]
[216.35914612 747.10766602]
[201.84159851 751.02539062]
[186.87074280 752.43316650]
[171.87734985 751.29034424]
[157.29278564 747.62994385]
[143.53668213 741.55725098]
[131.00485229 733.24694824]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 187]
[13 186]
[14 185]
[15 184]
[19 181]
[20 180]
[21 179]
[24 176]
[25 175]
[26 173]
[27 172]
[29 170]
[30 169]
[31 168]
[32 167]
[33 166]
[34 165]
[40 164]
[41 163]
[44 161]
[45 160]
[46 159]
[47 157]
[48 156]
[49 155]
[57 145]
[58 144]
[59 143]
[60 142]
[61 141]
[64 138]
[65 137]
[66 136]
[67 133]
[68 132]
[69 131]
[71 130]
[72 129]
[76 125]
[77 124]
[78 123]
[87 122]
[88 121]
[89 120]
[90 119]
[91 117]
[92 116]
[93 115]
[96 114]
[97 113]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
