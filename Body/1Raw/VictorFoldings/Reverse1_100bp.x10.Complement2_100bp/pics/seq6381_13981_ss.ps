%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[12.88478470 444.19583130]
[14.08474350 459.17382812]
[13.14081001 474.17016602]
[10.07220268 488.87948608]
[4.94139385 503.00238037]
[-2.14716029 516.25128174]
[-11.04914474 528.35644531]
[-21.58332825 539.07147217]
[-33.53524399 548.17822266]
[-46.66157532 555.49121094]
[-60.69507599 560.86163330]
[-75.35005188 564.18017578]
[-90.32813263 565.37921143]
[-105.32440186 564.43432617]
[-120.03354645 561.36480713]
[-134.15609741 556.23315430]
[-147.40455627 549.14373779]
[-159.50918579 540.24102783]
[-170.22355652 529.70617676]
[-179.32954407 517.75372314]
[-186.64175415 504.62692261]
[-192.01132202 490.59307861]
[-195.32891846 475.93789673]
[-196.52702332 460.95974731]
[-195.58123779 445.96353149]
[-192.51080322 431.25457764]
[-187.37825012 417.13235474]
[-180.28805542 403.88433838]
[-171.38458252 391.78024292]
[-160.84906006 381.06652832]
[-148.89602661 371.96127319]
[-135.76878357 364.64990234]
[-121.73461914 359.28118896]
[-107.07923889 355.96447754]
[-92.10100555 354.76730347]
[-77.10485077 355.71401978]
[-62.39609528 358.78536987]
[-48.27417374 363.91879272]
[-41.19706726 350.69326782]
[-34.11996078 337.46774292]
[-27.04285622 324.24221802]
[-19.96575165 311.01669312]
[-23.17052650 299.35238647]
[-17.38271141 288.27606201]
[-5.22167206 283.97814941]
[2.05155730 270.85946655]
[9.32478714 257.74078369]
[16.50015259 244.56829834]
[23.57725906 231.34277344]
[30.65436363 218.11724854]
[29.83718872 203.24507141]
[43.17020035 194.72795105]
[50.24730301 181.50242615]
[57.32440948 168.27688599]
[64.20381927 154.94746399]
[62.94421005 140.10621643]
[76.01772308 131.19589233]
[82.69791412 117.76551819]
[89.37811279 104.33514404]
[76.06094360 111.23826599]
[61.07222366 110.65671539]
[48.32995987 102.74250793]
[41.16494751 89.56439972]
[41.45011139 74.56710815]
[49.11090469 61.67089844]
[62.14481354 54.24680328]
[77.14480591 54.23546600]
[90.18992615 61.63985062]
[97.87020874 74.52446747]
[98.17824554 89.52044678]
[99.74916077 73.77742004]
[113.38477325 67.78414154]
[121.98333740 55.49330521]
[123.55425262 39.75028229]
[137.18986511 33.75700378]
[138.76078796 18.01398277]
[152.39639282 12.02070427]
[160.99496460 -0.27013379]
[169.59352112 -12.56097221]
[171.16444397 -28.30399513]
[184.80004883 -34.29727173]
[193.39862061 -46.58811188]
[201.90544128 -58.94261932]
[210.32006836 -71.36011505]
[212.54351807 -80.21980286]
[218.95355225 -83.89856720]
[227.55210876 -96.18940735]
[236.15068054 -108.48024750]
[244.74923706 -120.77108002]
[253.34780884 -133.06192017]
[261.94638062 -145.35275269]
[270.54492188 -157.64360046]
[279.14349365 -169.93443298]
[267.70303345 -179.65298462]
[257.22290039 -190.40013123]
[247.79519653 -202.08145142]
[239.50280762 -214.59426880]
[232.41857910 -227.82862854]
[226.60478210 -241.66821289]
[222.11250305 -255.99140930]
[218.98121643 -270.67233276]
[217.23846436 -285.58197021]
[216.89953613 -300.58929443]
[217.96742249 -315.56240845]
[220.43273926 -330.36972046]
[224.27380371 -344.88110352]
[229.45689392 -358.96905518]
[235.93643188 -372.50973511]
[243.65547180 -385.38415527]
[252.54620361 -397.47918701]
[262.53045654 -408.68850708]
[273.52050781 -418.91363525]
[285.41979980 -428.06466675]
[298.12371826 -436.06121826]
[311.52062988 -442.83303833]
[325.49279785 -448.32055664]
[339.91744995 -452.47555542]
[354.66778564 -455.26156616]
[369.61419678 -456.65405273]
[384.62533569 -456.64080811]
[399.56927490 -455.22195435]
[414.31469727 -452.40994263]
[428.73199463 -448.22946167]
[442.69445801 -442.71731567]
[456.07940674 -435.92190552]
[468.76919556 -427.90292358]
[480.65228271 -418.73089600]
[491.62429810 -408.48641968]
[501.58877563 -397.25949097]
[510.45812988 -385.14880371]
[518.15447998 -372.26077271]
[524.61010742 -358.70867920]
[529.76831055 -344.61163330]
[533.58380127 -330.09347534]
[536.02294922 -315.28182983]
[537.06445312 -300.30685425]
[536.69903564 -285.30017090]
[534.92999268 -270.39361572]
[531.77282715 -255.71824646]
[527.25524902 -241.40299988]
[521.41705322 -227.57368469]
[514.30950928 -214.35185242]
[505.99502563 -201.85368347]
[496.54675293 -190.18901062]
[486.04766846 -179.46037292]
[474.59005737 -169.76202393]
[462.27462769 -161.17921448]
[449.20959473 -153.78736877]
[435.50979614 -147.65144348]
[421.29559326 -142.82536316]
[406.69192505 -139.35154724]
[391.82711792 -137.26051331]
[376.83184814 -136.57064819]
[361.83786011 -137.28802490]
[346.97692871 -139.40631104]
[332.37963867 -142.90690613]
[318.17431641 -147.75903320]
[304.48577881 -153.92007446]
[291.43432617 -161.33587646]
[282.83575439 -149.04502869]
[274.23721313 -136.75419617]
[265.63864136 -124.46335602]
[257.04006958 -112.17252350]
[248.44151306 -99.88168335]
[239.84294128 -87.59084320]
[231.24438477 -75.30000305]
[222.73756409 -62.94549561]
[214.32293701 -50.52799988]
[213.17297363 -43.22735977]
[205.68945312 -37.98954773]
[197.09089661 -25.69870949]
[196.13499451 -10.83480835]
[181.88435364 -3.96240783]
[173.28579712 8.32843018]
[164.68724060 20.61926842]
[163.73133850 35.48316956]
[149.48069763 42.35556793]
[148.52481079 57.21947098]
[134.27416992 64.09187317]
[125.67561340 76.38270569]
[124.71971893 91.24661255]
[110.46908569 98.11901093]
[102.80848694 111.01533508]
[96.12828827 124.44570923]
[89.44809723 137.87608337]
[90.22989655 153.67796326]
[77.63420105 161.62765503]
[77.66233826 168.23907471]
[74.78004456 173.13696289]
[70.54993439 175.35400391]
[63.47283173 188.57952881]
[56.39572525 201.80505371]
[56.70669937 217.62319946]
[43.87989044 225.19435120]
[36.80278778 238.41987610]
[29.72568130 251.64540100]
[28.43600655 260.68832397]
[22.44348145 265.01400757]
[15.17025089 278.13269043]
[7.89702177 291.25140381]
[8.64405441 309.65039062]
[-6.74022341 318.09378052]
[-13.81732845 331.31933594]
[-20.89443398 344.54486084]
[-27.97154045 357.77038574]
[-35.04864502 370.99591064]
[-22.94291306 379.89715576]
[-12.22723579 390.43066406]
[-3.11977220 402.38201904]
[4.19406128 415.50790405]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 206]
[39 205]
[40 204]
[41 203]
[42 202]
[45 200]
[46 199]
[47 198]
[48 196]
[49 195]
[50 194]
[52 192]
[53 191]
[54 190]
[55 187]
[57 185]
[58 184]
[59 183]
[70 182]
[72 180]
[73 179]
[75 177]
[77 175]
[78 174]
[79 173]
[81 171]
[82 170]
[83 168]
[84 167]
[86 166]
[87 165]
[88 164]
[89 163]
[90 162]
[91 161]
[92 160]
[93 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
