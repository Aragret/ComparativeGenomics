%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[64.00870514 572.40264893]
[73.24883270 560.33245850]
[86.40714264 552.72149658]
[84.40312958 537.85595703]
[82.39911652 522.99041748]
[80.39510345 508.12490845]
[78.39109039 493.25936890]
[69.02278137 481.67990112]
[74.84700012 466.96972656]
[72.51151276 452.15267944]
[69.84571838 437.39144897]
[67.17992401 422.63024902]
[64.51412964 407.86901855]
[60.08078003 422.19888306]
[51.67023849 434.61914062]
[40.01009369 444.05529785]
[26.10906982 449.69104004]
[11.16974258 451.03881836]
[-3.51548767 447.98202515]
[-16.67620087 440.78509521]
[-27.17386436 430.07067871]
[-34.10032654 416.76562500]
[-36.85637283 402.02099609]
[-35.20358658 387.11233521]
[-29.28494263 373.32937622]
[-19.61246681 361.86450195]
[-7.02292585 353.70953369]
[7.39456129 349.56997681]
[22.39273643 349.80389404]
[36.67411041 354.39111328]
[49.00319672 362.93472290]
[58.31340790 374.69567871]
[63.79852676 388.65307617]
[65.35905457 373.73449707]
[66.91957092 358.81588745]
[68.48009491 343.89727783]
[70.04061890 328.97866821]
[71.60114288 314.06005859]
[64.23001862 304.46875000]
[65.40802002 292.02706909]
[75.04662323 283.45617676]
[76.82909393 268.56246948]
[70.65901184 255.00593567]
[79.98137665 242.22297668]
[81.76383972 227.32925415]
[83.54631042 212.43553162]
[85.32877350 197.54182434]
[87.11124420 182.64810181]
[88.44947815 167.70791626]
[89.34229279 152.73451233]
[90.23510742 137.76110840]
[91.12792206 122.78769684]
[92.02073669 107.81429291]
[92.80206299 92.83465576]
[93.47184753 77.84961700]
[94.14163208 62.86457825]
[94.81141663 47.87953949]
[87.69804382 33.74764252]
[95.99592590 21.37855339]
[96.66571045 6.39351559]
[97.33549500 -8.59152317]
[90.22212219 -22.72341919]
[98.52001190 -35.09251022]
[97.29303741 -50.04224396]
[94.18892670 -64.71754456]
[91.08481598 -79.39284515]
[87.98070526 -94.06814575]
[77.55507660 -105.96843719]
[82.49109650 -120.02136993]
[79.27782440 -134.67315674]
[75.95556641 -149.30061340]
[72.63330841 -163.92807007]
[62.03165054 -175.67181396]
[66.75790405 -189.79667664]
[63.32683945 -204.39900208]
[59.78716660 -218.97538757]
[56.24749374 -233.55175781]
[41.27809525 -232.21955872]
[26.27734566 -233.13340759]
[11.58036518 -236.27290344]
[-2.48450923 -241.56790161]
[-15.60306263 -248.90010071]
[-27.48222160 -258.10571289]
[-37.85660172 -268.97906494]
[-46.49443817 -281.27725220]
[-53.20275116 -294.72552490]
[-57.83168411 -309.02346802]
[-60.27781677 -323.85162354]
[-60.48650742 -338.87872314]
[-58.45308685 -353.76907349]
[-54.22299194 -368.19003296]
[-47.89071655 -381.81942749]
[-39.59772873 -394.35272217]
[-29.52929878 -405.50997925]
[-17.91035652 -415.04193115]
[-5.00047445 -422.73559570]
[8.91193581 -428.41912842]
[23.51606560 -431.96554565]
[38.48565292 -433.29562378]
[53.48627472 -432.37960815]
[68.18280792 -429.23803711]
[82.24692535 -423.94104004]
[95.36444092 -416.60696411]
[107.24228668 -407.39965820]
[117.61511993 -396.52484131]
[126.25119781 -384.22540283]
[132.95759583 -370.77618408]
[137.58448792 -356.47760010]
[140.02851868 -341.64910889]
[140.23506165 -326.62194824]
[138.19952393 -311.73187256]
[133.96737671 -297.31152344]
[127.63315582 -283.68304443]
[119.33838654 -271.15090942]
[109.26836395 -259.99508667]
[97.64807129 -250.46481323]
[84.73709106 -242.77297974]
[70.82386780 -237.09143066]
[74.36354065 -222.51506042]
[77.90321350 -207.93867493]
[82.53635406 -202.18057251]
[81.38536072 -193.11894226]
[91.74938202 -182.42144775]
[87.26076508 -167.25033569]
[90.58302307 -152.62287903]
[93.90528107 -137.99540710]
[98.45217896 -132.16896057]
[97.16639709 -123.12548065]
[107.37000275 -112.27487183]
[102.65600586 -97.17225647]
[105.76011658 -82.49695587]
[108.86422729 -67.82165527]
[111.96833801 -53.14635086]
[116.20187378 -67.53652954]
[124.82469940 -79.81035614]
[136.92681885 -88.67255402]
[151.23109436 -93.18786621]
[166.22792053 -92.87979126]
[180.33468628 -87.78082275]
[192.06263733 -78.42908478]
[200.17411804 -65.81148529]
[203.81309509 -51.25958252]
[202.59555054 -36.30908203]
[196.64994812 -22.53773689]
[186.60377502 -11.39887619]
[173.51719666 -4.06800842]
[158.77128601 -1.31877804]
[143.92222595 -3.44131780]
[130.53704834 -10.21163082]
[120.02834320 -20.91522980]
[113.50505066 -34.42272186]
[120.66632843 -21.36265755]
[112.32053375 -7.92173815]
[111.65074921 7.06330061]
[110.98096466 22.04833984]
[118.14225006 35.10840607]
[109.79645538 48.54932404]
[109.12667084 63.53436279]
[108.45688629 78.51940155]
[107.78710175 93.50444031]
[110.60183716 101.05757141]
[106.99414062 108.70710754]
[106.10132599 123.68051147]
[105.20851135 138.65391541]
[104.31569672 153.62731934]
[103.42288208 168.60073853]
[105.50328827 172.41201782]
[106.19328308 176.29640198]
[105.64061737 179.80780029]
[104.12274170 182.59396362]
[102.00495911 184.43057251]
[100.22248840 199.32427979]
[98.44002533 214.21800232]
[96.65756226 229.11172485]
[94.87509155 244.00543213]
[100.91768646 258.62725830]
[91.72280884 270.34490967]
[89.94034576 285.23864746]
[97.57807159 301.99414062]
[86.51974487 315.62057495]
[84.95922852 330.53918457]
[83.39870453 345.45779419]
[81.83818054 360.37640381]
[80.27765656 375.29501343]
[78.71713257 390.21362305]
[79.27534485 405.20321655]
[81.94113922 419.96444702]
[84.60693359 434.72564697]
[87.27272797 449.48687744]
[90.64585876 453.47048950]
[92.01657867 457.90606689]
[91.54804230 461.95520020]
[89.71253204 464.96572876]
[99.22418213 477.60845947]
[93.25662231 491.25537109]
[95.26063538 506.12088013]
[97.26464844 520.98638916]
[99.26866150 535.85192871]
[101.27267456 550.71746826]
[115.97669983 554.57238770]
[128.08322144 563.76477051]
[135.74607849 576.89294434]
[137.79675293 591.95495605]
[133.92253113 606.65386963]
[124.71418762 618.74829102]
[111.57594299 626.39385986]
[96.51128387 628.42474365]
[81.81745148 624.53118896]
[69.73516083 615.30694580]
[62.10686111 602.15863037]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 199]
[4 198]
[5 197]
[6 196]
[7 195]
[9 193]
[10 189]
[11 188]
[12 187]
[13 186]
[33 185]
[34 184]
[35 183]
[36 182]
[37 181]
[38 180]
[41 178]
[42 177]
[44 175]
[45 174]
[46 173]
[47 172]
[48 171]
[49 166]
[50 165]
[51 164]
[52 163]
[53 162]
[54 160]
[55 159]
[56 158]
[57 157]
[59 155]
[60 154]
[61 153]
[63 151]
[64 133]
[65 132]
[66 131]
[67 130]
[69 128]
[70 126]
[71 125]
[72 124]
[74 122]
[75 120]
[76 119]
[77 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
