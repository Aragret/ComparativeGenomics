%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[95.80438995 583.18737793]
[85.56644440 572.15246582]
[77.75966644 559.28234863]
[72.70375824 545.10412598]
[70.60574341 530.19830322]
[71.55153656 515.17529297]
[75.50241852 500.65029907]
[82.29658508 487.21810913]
[91.65583038 475.42874146]
[103.19689941 465.76495361]
[116.44718933 458.62249756]
[130.86410522 454.29385376]
[129.52587891 439.35366821]
[128.18763733 424.41348267]
[126.73822784 409.48367310]
[125.17770386 394.56506348]
[123.61717987 379.64645386]
[122.05665588 364.72784424]
[120.49613190 349.80923462]
[109.43780518 336.18276978]
[117.07553864 319.42727661]
[115.29306793 304.53356934]
[113.51060486 289.63986206]
[111.72814178 274.74612427]
[109.94567108 259.85241699]
[98.11441803 250.87705994]
[96.09458160 235.79811096]
[105.58898163 223.44926453]
[96.27660370 215.72874451]
[94.66970825 203.33514404]
[102.17061615 192.84231567]
[100.61009216 177.92372131]
[99.04956818 163.00511169]
[97.48905182 148.08650208]
[95.92852783 133.16790771]
[94.36800385 118.24929810]
[83.17844391 109.04386139]
[81.67102814 94.63296509]
[90.71339417 83.31122589]
[85.42526245 97.34816742]
[76.72753906 109.56903076]
[65.19710541 119.16326141]
[51.59874725 125.49449921]
[36.83438492 128.14282227]
[21.88328743 126.93257141]
[7.73710918 121.94402313]
[-4.66588640 113.50804138]
[-14.50305271 102.18416595]
[-21.12192535 88.72346497]
[-24.08349991 74.01873779]
[-23.19134331 59.04529190]
[-18.50463104 44.79626465]
[-10.33421421 32.21674728]
[0.77799052 22.14108658]
[14.09495258 15.23757076]
[28.73340416 11.96408367]
[43.72243118 12.53774261]
[58.06786346 16.92049980]
[70.81822205 24.82166290]
[81.12781525 35.71717453]
[88.31285858 48.88438034]
[91.89735413 63.45503616]
[95.21961212 48.82757568]
[89.36648560 31.36841393]
[101.78243256 18.96634865]
[104.88654327 4.29104710]
[107.99064636 -10.38425541]
[111.09475708 -25.05955696]
[114.19886780 -39.73485947]
[117.30297852 -54.41016388]
[120.40708923 -69.08546448]
[110.07992554 -58.20660019]
[96.25212860 -52.39350510]
[81.25392914 -52.62578964]
[67.61278534 -58.86431122]
[57.62746429 -70.05776215]
[52.98067474 -84.31985474]
[54.45547867 -99.24717712]
[61.80334854 -112.32421112]
[73.78604126 -121.34725189]
[88.38425446 -124.79574585]
[103.13793945 -122.08856964]
[115.56083679 -113.68193817]
[123.55947876 -100.99250031]
[125.78584290 -86.15700531]
[131.65480042 -99.96118164]
[137.52377319 -113.76535797]
[143.39273071 -127.56953430]
[141.67176819 -143.29685974]
[153.77195740 -151.98216248]
[159.64093018 -165.78634644]
[157.91996765 -181.51367188]
[170.02015686 -190.19897461]
[175.88911438 -204.00315857]
[181.75808716 -217.80732727]
[187.62704468 -231.61151123]
[174.70796204 -239.27838135]
[162.92610168 -248.59884644]
[152.49169922 -259.40655518]
[143.59097290 -271.50866699]
[136.38278198 -284.68914795]
[130.99575806 -298.71282959]
[127.52602386 -313.32940674]
[126.03551483 -328.27804565]
[126.55082703 -343.29196167]
[129.06277466 -358.10324097]
[133.52650452 -372.44750977]
[139.86238098 -386.06881714]
[147.95732117 -398.72409058]
[157.66687012 -410.18740845]
[168.81773376 -420.25427246]
[181.21092224 -428.74499512]
[194.62527466 -435.50802612]
[208.82136536 -440.42272949]
[223.54588318 -443.40133667]
[238.53602600 -444.39074707]
[253.52429199 -443.37322998]
[268.24319458 -440.36703491]
[282.43005371 -435.42572021]
[295.83169556 -428.63754272]
[308.20895386 -420.12359619]
[319.34091187 -410.03585815]
[329.02896118 -398.55432129]
[337.10015869 -385.88394165]
[343.41049194 -372.25076294]
[347.84732056 -357.89813232]
[350.33148193 -343.08218384]
[350.81866455 -328.06732178]
[349.30010986 -313.12152100]
[345.80300903 -298.51144409]
[340.38967896 -284.49792480]
[333.15679932 -271.33096313]
[324.23339844 -259.24557495]
[313.77874756 -248.45744324]
[301.97943115 -239.15908813]
[289.04598999 -231.51643372]
[275.20928955 -225.66590881]
[260.71621704 -221.71188354]
[245.82542419 -219.72496033]
[230.80267334 -219.74055481]
[215.91604614 -221.75843811]
[201.43121338 -225.74255371]
[195.56225586 -211.93836975]
[189.69329834 -198.13420105]
[183.82434082 -184.33001709]
[185.96508789 -169.59005737]
[173.44509888 -159.91738892]
[167.57614136 -146.11320496]
[169.71688843 -131.37324524]
[157.19689941 -121.70056915]
[151.32794189 -107.89639282]
[145.45898438 -94.09221649]
[139.59002686 -80.28804016]
[135.08239746 -65.98135376]
[131.97828674 -51.30605316]
[128.87417603 -36.63074875]
[125.77006531 -21.95544815]
[122.66595459 -7.28014517]
[119.56184387 7.39515734]
[116.45773315 22.07045937]
[122.79103088 32.37657166]
[120.32505035 44.62821198]
[109.84707642 52.14983749]
[106.52481079 66.77729797]
[105.63199615 81.75070190]
[116.82155609 90.95613861]
[118.32897186 105.36703491]
[109.28660583 116.68877411]
[110.84712982 131.60737610]
[112.40765381 146.52598572]
[113.96817780 161.44459534]
[115.52870178 176.36318970]
[117.08921814 191.28179932]
[128.24833679 205.92951965]
[120.48269653 221.66679382]
[132.62301636 231.42642212]
[134.21852112 246.55616760]
[124.83939362 258.06994629]
[126.62185669 272.96368408]
[128.40432739 287.85739136]
[130.18678284 302.75109863]
[131.96925354 317.64483643]
[141.60786438 326.21569824]
[142.78585815 338.65740967]
[135.41473389 348.24871826]
[136.97526550 363.16732788]
[138.53578186 378.08593750]
[140.09631348 393.00454712]
[141.65682983 407.92312622]
[145.66204834 416.13265991]
[143.12782288 423.07522583]
[144.46606445 438.01541138]
[145.80429077 452.95559692]
[160.76100159 454.65316772]
[175.06971741 459.32708740]
[188.14451599 466.78598022]
[199.44998169 476.72433472]
[208.52316284 488.73526001]
[214.99252319 502.32690430]
[218.59313965 516.94262695]
[219.17758179 531.98406982]
[216.72190857 546.83514404]
[211.32667542 560.88775635]
[203.21282959 573.56646729]
[192.71260071 584.35211182]
[180.25599670 592.80303955]
[166.35308838 598.57312012]
[151.57319641 601.42614746]
[136.52154541 601.24523926]
[121.81449127 598.03778076]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 193]
[13 192]
[14 191]
[15 189]
[16 188]
[17 187]
[18 186]
[19 185]
[21 182]
[22 181]
[23 180]
[24 179]
[25 178]
[28 175]
[31 173]
[32 172]
[33 171]
[34 170]
[35 169]
[36 168]
[39 165]
[62 164]
[63 163]
[65 160]
[66 159]
[67 158]
[68 157]
[69 156]
[70 155]
[71 154]
[85 153]
[86 152]
[87 151]
[88 150]
[90 148]
[91 147]
[93 145]
[94 144]
[95 143]
[96 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
