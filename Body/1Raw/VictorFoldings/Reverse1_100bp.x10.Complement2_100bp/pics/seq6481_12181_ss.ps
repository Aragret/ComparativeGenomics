%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[109.61089325 249.86566162]
[109.56246948 234.85884094]
[110.62247467 219.88941956]
[112.78512573 205.03915405]
[116.03860474 190.38917542]
[120.36514282 176.01947021]
[125.74110413 162.00854492]
[132.13714600 148.43290710]
[139.51831055 135.36669922]
[127.03851318 127.04475403]
[114.55871582 118.72281647]
[102.07892609 110.40087128]
[89.23998260 102.64447784]
[76.06751251 95.46910858]
[62.89503479 88.29374695]
[49.72255707 81.11837769]
[36.55008316 73.94301605]
[23.37760544 66.76764679]
[10.20512962 59.59228134]
[-3.02039766 52.51517487]
[-16.29824448 45.53672028]
[-29.57608986 38.55826950]
[-37.41955948 51.35067749]
[-46.09134293 63.59673309]
[-55.55351639 75.24288940]
[-65.76470947 86.23822021]
[-76.68025970 96.53464508]
[-88.25244904 106.08714294]
[-100.43067169 114.85393524]
[-113.16166687 122.79669189]
[-126.38977814 129.88067627]
[-140.05714417 136.07492065]
[-154.10401917 141.35234070]
[-168.46896362 145.68983459]
[-183.08918762 149.06846619]
[-197.90072632 151.47344971]
[-212.83882141 152.89425659]
[-227.83818054 153.32469177]
[-242.83317566 152.76287842]
[-257.75827026 151.21124268]
[-272.54815674 148.67658997]
[-287.13821411 145.17001343]
[-301.46459961 140.70683289]
[-315.46472168 135.30656433]
[-329.07730103 128.99281311]
[-342.24282837 121.79321289]
[-354.90374756 113.73922729]
[-367.00469971 104.86608124]
[-378.49276733 95.21257782]
[-389.31768799 84.82091522]
[-399.43215942 73.73654938]
[-408.79196167 62.00794601]
[-417.35610962 49.68638992]
[-425.08721924 36.82575607]
[-431.95144653 23.48229027]
[-437.91879272 9.71433449]
[-442.96313477 -4.41790485]
[-447.06243896 -18.85263252]
[-450.19879150 -33.52672577]
[-452.35845947 -48.37601852]
[-453.53201294 -63.33558273]
[-453.71429443 -78.33999634]
[-452.90451050 -93.32365417]
[-451.10623169 -108.22103119]
[-448.32730103 -122.96699524]
[-444.57989502 -137.49703979]
[-439.88037109 -151.74766541]
[-434.24926758 -165.65652466]
[-427.71124268 -179.16281128]
[-420.29486084 -192.20747375]
[-412.03256226 -204.73345947]
[-402.96047974 -216.68598938]
[-393.11828613 -228.01280212]
[-382.54898071 -238.66436768]
[-371.29885864 -248.59413147]
[-359.41702271 -257.75863647]
[-346.95550537 -266.11782837]
[-333.96878052 -273.63516235]
[-320.51358032 -280.27774048]
[-306.64880371 -286.01654053]
[-292.43508911 -290.82644653]
[-277.93450928 -294.68646240]
[-263.21057129 -297.57965088]
[-248.32757568 -299.49340820]
[-233.35064697 -300.41937256]
[-218.34527588 -300.35345459]
[-203.37705994 -299.29595947]
[-188.51145935 -297.25152588]
[-173.81347656 -294.22909546]
[-159.34739685 -290.24185181]
[-145.17646790 -285.30725098]
[-131.36264038 -279.44686890]
[-117.96633911 -272.68634033]
[-105.04613495 -265.05520630]
[-92.65852356 -256.58685303]
[-80.85768127 -247.31832886]
[-69.69520569 -237.29013062]
[-59.21990967 -226.54611206]
[-49.47759247 -215.13327026]
[-40.51086426 -203.10150146]
[-32.35892868 -190.50341797]
[-25.05743408 -177.39411926]
[-18.63830948 -163.83090210]
[-13.12962246 -149.87310791]
[-8.55546284 -135.58175659]
[-4.93583059 -121.01934052]
[-2.28655481 -106.24954224]
[-0.61922026 -91.33693695]
[0.05888261 -76.34674835]
[-0.25521156 -61.34451294]
[-1.56012928 -46.39583588]
[-3.85016465 -31.56608963]
[-7.11530352 -16.92011452]
[-11.34126854 -2.52195716]
[-16.50957870 11.56542206]
[-22.59763718 25.28042412]
[-9.31979179 32.25887680]
[3.95805478 39.23732758]
[11.34137344 39.56657028]
[17.38049698 46.41980362]
[30.55297279 53.59516907]
[43.72544861 60.77053833]
[56.89792252 67.94589996]
[70.07039642 75.12126923]
[83.24287415 82.29663849]
[96.41535187 89.47200012]
[93.22475433 74.81526184]
[101.21617889 62.12128448]
[115.81179047 58.66175842]
[128.65054321 66.41845703]
[132.37782288 80.94799042]
[124.85847473 93.92718506]
[110.40087128 97.92107391]
[122.88066101 106.24301910]
[135.36045837 114.56496429]
[147.84025574 122.88690948]
[157.06518555 111.05018616]
[167.13909912 99.92708588]
[178.00697327 89.57834625]
[189.60946655 80.06048584]
[201.88317871 71.42549896]
[214.76110840 63.72054672]
[228.17289734 56.98770523]
[242.04528809 51.26375198]
[256.30255127 46.57994461]
[270.86676025 42.96186829]
[285.65844727 40.42928314]
[300.59674072 38.99602509]
[315.60009766 38.66991425]
[330.58657837 39.45273590]
[345.47430420 41.34021759]
[360.18200684 44.32204819]
[374.62930298 48.38193893]
[388.73730469 53.49771881]
[402.42898560 59.64144516]
[415.62951660 66.77956390]
[428.26684570 74.87309265]
[440.27194214 83.87781525]
[451.57922363 93.74456787]
[462.12692261 104.41944122]
[471.85745239 115.84414673]
[480.71768188 127.95628357]
[488.65917969 140.68969727]
[495.63861084 153.97483826]
[501.61779785 167.73915100]
[506.56414795 181.90745544]
[510.45062256 196.40237427]
[513.25598145 211.14472961]
[514.96490479 226.05401611]
[515.56811523 241.04879761]
[515.06219482 256.04718018]
[513.45001221 270.96722412]
[510.74035645 285.72747803]
[506.94802856 300.24731445]
[502.09368896 314.44738770]
[496.20391846 328.25021362]
[489.31082153 341.58035278]
[481.45208740 354.36502075]
[472.67065430 366.53436279]
[463.01443481 378.02197266]
[452.53619385 388.76504517]
[441.29318237 398.70495605]
[429.34674072 407.78735352]
[416.76220703 415.96270752]
[403.60824585 423.18630981]
[389.95669556 429.41873169]
[375.88217163 434.62594604]
[361.46151733 438.77947998]
[346.77349854 441.85665894]
[331.89831543 443.84066772]
[316.91723633 444.72070312]
[301.91207886 444.49194336]
[286.96478271 443.15560913]
[272.15701294 440.71905518]
[257.56961060 437.19552612]
[243.28227234 432.60430908]
[229.37303162 426.97048950]
[215.91784668 420.32479858]
[202.99020386 412.70355225]
[190.66072083 404.14837646]
[178.99673462 394.70599365]
[168.06195068 384.42794800]
[157.91609192 373.37045288]
[148.61456299 361.59381104]
[140.20817566 349.16241455]
[132.74284363 336.14413452]
[126.25933075 322.61004639]
[120.79305267 308.63409424]
[116.37387085 294.29260254]
[113.02592468 279.66394043]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 136]
[10 135]
[11 134]
[12 133]
[13 126]
[14 125]
[15 124]
[16 123]
[17 122]
[18 121]
[19 120]
[20 118]
[21 117]
[22 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
