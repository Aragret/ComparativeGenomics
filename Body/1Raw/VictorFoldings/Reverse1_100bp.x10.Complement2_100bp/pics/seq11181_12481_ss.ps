%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCACUCGGAUCCCACAACACUCACAUUUAAUCACGCUACUCAUCCCCUUCCCUCGGAUGAUCCCACAUCUUAUCCUUCAUACACGGACGCAAGUCCGCAxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[181.86175537 479.84020996]
[179.41603088 465.04092407]
[176.97030640 450.24166870]
[167.26138306 438.94625854]
[172.64505005 424.06918335]
[170.19932556 409.26992798]
[167.75358582 394.47064209]
[155.90380859 381.52655029]
[162.53070068 364.34616089]
[159.86489868 349.58496094]
[155.58270264 343.56127930]
[157.27101135 334.58422852]
[154.82528687 319.78497314]
[152.37956238 304.98568726]
[149.93382263 290.18643188]
[146.72055054 275.53463745]
[142.74845886 261.07009888]
[138.77636719 246.60557556]
[134.80426025 232.14105225]
[130.83216858 217.67652893]
[126.86007690 203.21200562]
[122.45907593 188.87216187]
[117.63307953 174.66970825]
[112.80708313 160.46725464]
[107.98108673 146.26480103]
[103.15509033 132.06234741]
[91.73439026 122.50112152]
[94.62033081 106.94535065]
[92.01038361 105.37128448]
[89.91548920 102.81277466]
[88.70137787 99.45877075]
[88.65884399 95.63065338]
[89.95726013 91.75160217]
[85.98516846 77.28707886]
[74.86969757 66.02843475]
[78.96052551 51.70661926]
[74.98843384 37.24209595]
[71.01633453 22.77757263]
[65.66514587 8.76455021]
[58.98495483 -4.66582584]
[52.36120987 -10.95580196]
[52.30695724 -18.34625816]
[45.82746124 -31.87460518]
[44.95202255 -16.90017319]
[39.07141876 -3.10095191]
[28.87649727 7.90193987]
[15.56495190 14.81589317]
[0.70060712 16.82866478]
[-13.97028923 13.70379448]
[-26.72421455 5.80839014]
[-36.06284714 -5.93000364]
[-40.88909912 -20.13237190]
[-40.63598633 -35.13023758]
[-35.33324051 -49.16166306]
[-25.60382652 -60.57825089]
[-12.59074402 -68.03879547]
[2.17724156 -70.66683197]
[16.96520233 -68.15362549]
[30.03586578 -60.79442978]
[39.85450745 -49.45244598]
[36.75039673 -64.12774658]
[33.64628601 -78.80304718]
[30.54217720 -93.47835541]
[27.43806648 -108.15365601]
[12.67160416 -111.85675812]
[1.02474260 -121.56436157]
[-5.22672749 -135.30987549]
[-4.89161873 -150.34480286]
[1.91005242 -163.68821716]
[13.78149128 -172.71784973]
[10.67738056 -187.39315796]
[7.57327080 -202.06845093]
[4.46916056 -216.74375916]
[1.36505055 -231.41906738]
[-9.67071819 -235.84042358]
[-17.12561226 -244.94676208]
[-19.23715401 -256.40255737]
[-15.59453201 -267.34088135]
[-7.21244860 -275.08084106]
[-9.87824440 -289.84207153]
[-14.48296356 -297.73092651]
[-12.47212982 -304.84277344]
[-14.91785717 -319.64205933]
[-17.36358452 -334.44131470]
[-19.80931282 -349.24060059]
[-34.85085297 -349.82104492]
[-49.46756744 -353.41778564]
[-63.06090927 -359.88354492]
[-75.07424164 -368.95352173]
[-85.01562500 -380.25634766]
[-92.47796631 -393.32916260]
[-97.15568542 -407.63662720]
[-98.85723114 -422.59289551]
[-97.51293182 -437.58547974]
[-93.17783356 -452.00045776]
[-86.02945709 -465.24755859]
[-76.36051941 -476.78430176]
[-64.56695557 -486.13827515]
[-51.13171768 -492.92645264]
[-36.60495758 -496.87081909]
[-21.58154297 -497.80990601]
[-6.67667007 -495.70523071]
[7.49931383 -490.64297485]
[20.36591148 -482.83044434]
[31.39624405 -472.58758545]
[40.13862610 -460.33377075]
[46.23506546 -446.57083130]
[49.43590927 -431.86236572]
[49.61009216 -416.81063843]
[46.75048065 -402.03201294]
[40.97417068 -388.13168335]
[32.51770020 -375.67886353]
[21.72735786 -365.18344116]
[9.04499817 -357.07525635]
[-5.01004171 -351.68630981]
[-2.56431413 -336.88705444]
[-0.11858673 -322.08776855]
[2.32714057 -307.28851318]
[4.88297319 -292.50784302]
[7.54876852 -277.74664307]
[23.18860626 -268.23291016]
[26.97260094 -249.99574280]
[16.04035378 -234.52317810]
[19.14446259 -219.84786987]
[22.24857330 -205.17256165]
[25.35268402 -190.49726868]
[28.45679283 -175.82196045]
[42.96775818 -172.37271118]
[54.58992004 -162.92630005]
[60.98429871 -149.31478882]
[60.83412933 -134.21520996]
[54.11563110 -120.62297058]
[42.11336899 -111.25776672]
[45.21747971 -96.58246613]
[48.32159042 -81.90715790]
[51.42570114 -67.23185730]
[54.52980804 -52.55655670]
[59.35580826 -38.35409927]
[65.83530426 -24.82575417]
[72.41532898 -11.34602070]
[79.09552765 2.08435559]
[80.43444061 -12.85576820]
[87.66300964 -25.99912262]
[99.56310272 -35.13082123]
[114.12933350 -38.71200943]
[128.90704346 -36.13919830]
[141.40591431 -27.84594917]
[149.51969910 -15.22982216]
[151.88104248 -0.41685417]
[148.09204102 14.09670830]
[138.79121399 25.86507607]
[125.54589081 32.90507126]
[110.58815765 34.03033066]
[96.43865204 29.05122948]
[85.48085785 18.80547714]
[89.45295715 33.27000046]
[93.42504883 47.73452377]
[104.25640869 57.95856476]
[100.44969177 73.31497955]
[104.42178345 87.77950287]
[108.82278442 102.11935425]
[120.58866882 112.69642639]
[117.35754395 127.23634338]
[122.18354034 141.43879700]
[127.00953674 155.64125061]
[131.83554077 169.84370422]
[136.66152954 184.04615784]
[140.02682495 186.79002380]
[142.13218689 190.12648010]
[142.94604492 193.58670044]
[142.59231567 196.73970032]
[141.32460022 199.23991394]
[145.29669189 213.70443726]
[149.26879883 228.16896057]
[153.24089050 242.63348389]
[157.21298218 257.09802246]
[161.18507385 271.56253052]
[168.52793884 258.48269653]
[182.51551819 253.06536865]
[196.75291443 257.78732300]
[204.73095703 270.48971558]
[202.80220032 285.36517334]
[191.84844971 295.61288452]
[176.87760925 296.54769897]
[164.73310852 287.74069214]
[167.17883301 302.53994751]
[169.62455750 317.33923340]
[172.07028198 332.13848877]
[174.62611389 346.91915894]
[177.29191589 361.68035889]
[187.42358398 369.66235352]
[189.34002686 382.01190186]
[182.55285645 392.02493286]
[184.99859619 406.82418823]
[187.44432068 421.62347412]
[197.32817078 433.97741699]
[191.76957703 447.79592896]
[194.21530151 462.59518433]
[196.66102600 477.39447021]
[211.32278442 481.63662720]
[222.68621826 491.82656860]
[228.49514771 505.94107056]
[227.59617615 521.17767334]
[220.16781616 534.51116943]
[207.68496704 543.29418945]
[192.62609863 545.78283691]
[177.98117065 541.48297119]
[166.65792847 531.24835205]
[160.90463257 517.11108398]
[161.86360168 501.87811279]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 199]
[2 198]
[3 197]
[5 195]
[6 194]
[7 193]
[9 190]
[10 189]
[12 188]
[13 187]
[14 186]
[15 185]
[16 177]
[17 176]
[18 175]
[19 174]
[20 173]
[21 172]
[22 167]
[23 166]
[24 165]
[25 164]
[26 163]
[28 161]
[33 160]
[34 159]
[36 157]
[37 156]
[38 155]
[39 141]
[40 140]
[42 139]
[43 138]
[60 137]
[61 136]
[62 135]
[63 134]
[64 133]
[70 127]
[71 126]
[72 125]
[73 124]
[74 123]
[79 120]
[80 119]
[82 118]
[83 117]
[84 116]
[85 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
