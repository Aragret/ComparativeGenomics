%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[94.92044067 507.46423340]
[99.26892853 492.89855957]
[108.86433411 481.10885620]
[122.24341583 473.89300537]
[120.68289948 458.97439575]
[119.12237549 444.05581665]
[109.92597961 436.19750977]
[108.50378418 423.78134155]
[116.16007996 413.40136719]
[114.82184601 398.46118164]
[105.97993469 386.47494507]
[112.45518494 372.03952026]
[108.72747803 365.65783691]
[111.20994568 356.86718750]
[110.09429169 341.90875244]
[108.97864532 326.95028687]
[95.83226776 322.51849365]
[85.33483887 313.38195801]
[79.09294891 300.89526367]
[78.07850647 286.92880249]
[82.47761536 273.58889771]
[91.65744781 262.89990234]
[104.25710297 256.49713135]
[103.36428833 241.52371216]
[102.47147369 226.55030823]
[101.57865906 211.57690430]
[90.30260468 201.91325378]
[89.18386078 186.74081421]
[99.39643860 174.97897339]
[98.50362396 160.00555420]
[97.49936676 145.03921509]
[96.04994202 130.10940552]
[94.26747894 115.21569061]
[85.56227875 107.47872162]
[84.26443481 95.90474701]
[91.03981781 86.43186951]
[89.47929382 71.51325989]
[87.91877747 56.59465790]
[78.78775787 43.67432022]
[85.15899658 30.21116066]
[83.59847260 15.29255581]
[82.03794861 0.37395084]
[80.47742462 -14.54465389]
[78.91690063 -29.46325874]
[76.91288757 -44.32878876]
[74.46716309 -59.12805939]
[72.02143097 -73.92733002]
[69.57570648 -88.72660065]
[61.67377090 -75.97672272]
[47.83078766 -70.19988251]
[33.20984650 -73.55071259]
[23.26419640 -84.77942657]
[21.70331764 -99.69799805]
[29.10938263 -112.74215698]
[42.72010803 -119.04676819]
[57.45903397 -116.26036072]
[67.82941437 -105.42115021]
[64.59905243 -111.18970490]
[64.74494171 -116.87088013]
[67.36951447 -120.86095428]
[67.14618683 -135.85929871]
[66.92285919 -150.85763550]
[58.98094940 -164.54107666]
[66.52790070 -177.38212585]
[66.30457306 -192.38046265]
[66.08124542 -207.37881470]
[55.69689941 -196.55451965]
[40.79838562 -194.81257629]
[28.19710922 -202.94940186]
[23.65419960 -217.24491882]
[29.24661446 -231.16342163]
[42.41757965 -238.34156799]
[57.14550400 -235.49758911]
[66.69760895 -223.92997742]
[68.03584290 -238.87016296]
[69.37407684 -253.81034851]
[70.71231079 -268.75054932]
[68.36100006 -277.57714844]
[72.18331146 -283.90261841]
[73.74383545 -298.82122803]
[71.52420044 -307.68188477]
[75.44026184 -313.94976807]
[77.22272491 -328.84347534]
[79.00519562 -343.73718262]
[64.41662598 -347.30526733]
[50.36453247 -352.60580444]
[37.05381775 -359.56155396]
[24.67860413 -368.07104492]
[13.41935158 -378.01019287]
[3.44025540 -389.23403931]
[-5.11315918 -401.57894897]
[-12.11615944 -414.86483765]
[-17.46661949 -428.89801025]
[-21.08651543 -443.47381592]
[-22.92305756 -458.37966919]
[-22.94946289 -473.39822388]
[-21.16534805 -488.31042480]
[-17.59673119 -502.89886475]
[-12.29565048 -516.95074463]
[-5.33941364 -530.26123047]
[3.17053795 -542.63610840]
[13.11010361 -553.89501953]
[24.33433533 -563.87365723]
[36.67955017 -572.42663574]
[49.96572113 -579.42913818]
[63.99909592 -584.77905273]
[78.57501984 -588.39843750]
[93.48094177 -590.23437500]
[108.49948883 -590.26025391]
[123.41164398 -588.47558594]
[137.99993896 -584.90643311]
[152.05163574 -579.60479736]
[165.36183167 -572.64807129]
[177.73641968 -564.13763428]
[188.99491882 -554.19769287]
[198.97317505 -542.97308350]
[207.52566528 -530.62750244]
[214.52767944 -517.34106445]
[219.87709045 -503.30752563]
[223.49589539 -488.73144531]
[225.33131409 -473.82546997]
[225.35659790 -458.80691528]
[223.57136536 -443.89483643]
[220.00166321 -429.30667114]
[214.69953918 -415.25515747]
[207.74229431 -401.94522095]
[199.23143005 -389.57098389]
[189.29101562 -378.31283569]
[178.06604004 -368.33499146]
[165.72018433 -359.78295898]
[152.43348694 -352.78146362]
[138.39971924 -347.43258667]
[123.82351685 -343.81430054]
[108.91745758 -341.97943115]
[93.89891052 -341.95471191]
[92.11644745 -327.06100464]
[90.33397675 -312.16729736]
[88.66243744 -297.26071167]
[87.10191345 -282.34210205]
[85.65249634 -267.41229248]
[84.31426239 -252.47212219]
[82.97602844 -237.53193665]
[81.63779449 -222.59175110]
[81.07958221 -207.60214233]
[81.30290985 -192.60379028]
[81.52623749 -177.60545349]
[89.45217133 -164.99479675]
[81.92119598 -151.08096313]
[82.14452362 -136.08262634]
[82.36785126 -121.08428192]
[82.81445312 -106.09093475]
[84.37497711 -91.17232513]
[86.82070160 -76.37305450]
[89.26643372 -61.57378387]
[91.71215820 -46.77451324]
[93.90983582 -45.03429794]
[95.55061340 -42.31869888]
[96.25952148 -38.83547592]
[95.74365997 -34.92415619]
[93.83551025 -31.02378082]
[95.39603424 -16.10517693]
[96.95655060 -1.18657219]
[98.51707458 13.73203278]
[100.07759857 28.65063667]
[109.09699249 40.50389862]
[102.83737946 55.03413391]
[104.39790344 69.95273590]
[105.95842743 84.87134552]
[116.15846252 98.18807983]
[109.16119385 113.43322754]
[110.94366455 128.32695007]
[114.07369995 132.50425720]
[115.17797852 137.01356506]
[114.46926880 141.02763367]
[112.45781708 143.92356873]
[116.21683502 152.24868774]
[113.47702789 159.11274719]
[114.36984253 174.08615112]
[125.90773773 184.55108643]
[126.59987640 199.74896240]
[116.55206299 210.68408203]
[117.44487762 225.65750122]
[118.33769226 240.63090515]
[119.23050690 255.60430908]
[134.33319092 261.65765381]
[145.24505615 273.64828491]
[149.81906128 289.14144897]
[147.18815613 305.02105713]
[137.92913818 318.11627197]
[123.93709564 325.83465576]
[125.05274963 340.79309082]
[126.16839600 355.75155640]
[127.39537048 370.70129395]
[136.33300781 383.75613403]
[129.76203918 397.12295532]
[131.10026550 412.06314087]
[142.04005432 426.87536621]
[134.04098511 442.49526978]
[135.60150146 457.41387939]
[137.16201782 472.33248901]
[151.74475098 476.62347412]
[163.57221985 486.17227173]
[170.84080505 499.52276611]
[172.44212341 514.63909912]
[168.13197327 529.21618652]
[158.56761169 541.03106689]
[145.20756531 548.28210449]
[130.08911133 549.86352539]
[115.51771545 545.53424072]
[103.71542358 535.95434570]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 200]
[5 199]
[6 198]
[9 196]
[10 195]
[12 193]
[14 192]
[15 191]
[16 190]
[23 184]
[24 183]
[25 182]
[26 181]
[29 178]
[30 177]
[31 175]
[32 171]
[33 170]
[36 168]
[37 167]
[38 166]
[40 164]
[41 163]
[42 162]
[43 161]
[44 160]
[45 155]
[46 154]
[47 153]
[48 152]
[57 151]
[60 150]
[61 149]
[62 148]
[64 146]
[65 145]
[66 144]
[74 143]
[75 142]
[76 141]
[77 140]
[79 139]
[80 138]
[82 137]
[83 136]
[84 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
