%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGAUAAUACUCAGGAUCAACUGAACUUCACCUCUUCCGAUGCUAAAAAAACUACAGUAAAACACAUUCCCGCGUCUGACGACGCUUGUCUCACCACUAUxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[86.76950073 680.06225586]
[73.53092957 672.99560547]
[60.83678436 664.99206543]
[48.75324631 656.09344482]
[37.34331894 646.34606934]
[26.66648865 635.80078125]
[16.77841759 624.51257324]
[7.73065853 612.54028320]
[-0.42961609 599.94628906]
[-7.65986252 586.79638672]
[-13.92238522 573.15893555]
[-19.18453407 559.10522461]
[-23.41887474 544.70843506]
[-26.60333061 530.04357910]
[-28.72129822 515.18719482]
[-29.76173782 500.21673584]
[-29.71922302 485.21020508]
[-28.59397507 470.24588013]
[-26.39186287 455.40173340]
[-23.12436485 440.75518799]
[-18.80851746 426.38259888]
[-13.46682358 412.35888672]
[-7.12712955 398.75720215]
[0.17751041 385.64843750]
[8.40901375 373.10092163]
[17.52446365 361.18008423]
[27.47633743 349.94808960]
[38.21274948 339.46347046]
[49.67772293 329.78088379]
[61.81148529 320.95086670]
[74.55077362 313.01937866]
[87.82917786 306.02783203]
[101.57746124 300.01266479]
[115.72395325 295.00521851]
[111.75186157 280.54067993]
[107.77976227 266.07614136]
[103.80767059 251.61163330]
[99.83557129 237.14710999]
[95.86347198 222.68258667]
[91.89138031 208.21806335]
[87.91928101 193.75354004]
[83.94718933 179.28901672]
[81.10152435 194.01661682]
[75.38796234 207.88583374]
[67.03407288 220.34426880]
[56.37258148 230.89569092]
[43.82813644 239.11985779]
[29.90037918 244.68919373]
[15.14404297 247.38188171]
[0.14687048 247.09068298]
[-14.49380875 243.82716370]
[-28.19486237 237.72132874]
[-40.41057968 229.01638794]
[-50.65441895 218.05902100]
[-58.51836395 205.28567505]
[-63.68920517 191.20510864]
[-65.96098328 176.37814331]
[-65.24322510 161.39532471]
[-61.56450272 146.85340881]
[-55.07135010 133.33161926]
[-46.02238083 121.36849976]
[-34.77801514 111.44054413]
[-21.78611183 103.94318390]
[-7.56413221 99.17503357]
[7.32146740 97.32599640]
[22.27779961 98.46973419]
[36.70915985 102.56068420]
[50.04074860 109.43590546]
[61.74158096 118.82156372]
[71.34561157 130.34382629]
[78.47032166 143.54377747]
[82.83111572 157.89155579]
[85.27684784 143.09228516]
[87.72257233 128.29301453]
[76.75550079 120.27123260]
[70.29998779 108.31497955]
[69.60899353 94.74486542]
[74.81663513 82.19472504]
[84.91215515 73.10043335]
[97.93608856 69.22712708]
[100.60189056 54.46590805]
[103.26768494 39.70468903]
[105.93347931 24.94347191]
[108.59927368 10.18225479]
[103.43770599 -4.77330542]
[113.31372070 -15.92290306]
[115.97951508 -30.68412018]
[118.64531708 -45.44533920]
[121.31111145 -60.20655441]
[123.97690582 -74.96777344]
[126.64270020 -89.72898865]
[119.94298553 -100.75063324]
[122.46722412 -112.99040222]
[132.32803345 -119.99690247]
[135.21330261 -134.71679688]
[121.20544434 -140.19581604]
[108.40113068 -148.08818054]
[97.21195984 -158.14015198]
[87.99761963 -170.02862549]
[81.05432129 -183.37142944]
[76.60524750 -197.73963928]
[74.79343414 -212.67138672]
[75.67710876 -227.68667603]
[79.22787476 -242.30282593]
[85.33158875 -256.04998779]
[93.79203796 -268.48623657]
[104.33725739 -279.21182251]
[116.62825775 -287.88195801]
[130.26994324 -294.21789551]
[144.82377625 -298.01602173]
[159.82191467 -299.15420532]
[174.78224182 -297.59585571]
[189.22383118 -293.39108276]
[202.68246460 -286.67504883]
[214.72547913 -277.66363525]
[224.96575928 -266.64651489]
[233.07411194 -253.97789001]
[238.78988647 -240.06495667]
[241.92935181 -225.35498047]
[242.39158630 -210.32081604]
[240.16172791 -195.44573975]
[235.31144714 -181.20796204]
[227.99668884 -168.06512451]
[218.45256042 -156.43974304]
[206.98588562 -146.70552063]
[193.96527100 -139.17535400]
[179.80926514 -134.09133911]
[164.97293091 -131.61688232]
[149.93319702 -131.83152771]
[147.04792786 -117.11163330]
[153.62156677 -100.84037018]
[141.40391541 -87.06319427]
[138.73812866 -72.30197906]
[136.07232666 -57.54076004]
[133.40652466 -42.77954102]
[130.74073792 -28.01832581]
[128.07493591 -13.25710773]
[133.42718506 0.64263135]
[123.36048889 12.84805012]
[120.69469452 27.60926819]
[118.02890015 42.37048340]
[115.36310577 57.13170242]
[112.69731140 71.89292145]
[125.11231995 82.09466553]
[130.71067810 97.15675354]
[127.97272491 112.99063110]
[117.64167023 125.29824829]
[102.52184296 130.73873901]
[100.07611847 145.53800964]
[97.63038635 160.33728027]
[98.41171265 175.31690979]
[102.38380432 189.78143311]
[106.35590363 204.24595642]
[110.32799530 218.71049500]
[114.30009460 233.17501831]
[118.27219391 247.63954163]
[122.24428558 262.10406494]
[126.21638489 276.56857300]
[130.18847656 291.03311157]
[144.90834045 288.11358643]
[159.80049133 286.26382446]
[174.78729248 285.49346924]
[189.79061890 285.80654907]
[204.73223877 287.20144653]
[219.53425598 289.67083740]
[234.11950684 293.20190430]
[248.41194153 297.77618408]
[262.33703613 303.36987305]
[275.82220459 309.95376587]
[288.79714966 317.49359131]
[301.19421387 325.94998169]
[312.94876099 335.27890015]
[323.99948120 345.43167114]
[334.28881836 356.35537720]
[343.76309204 367.99307251]
[352.37292480 380.28405762]
[360.07342529 393.16427612]
[366.82440186 406.56658936]
[372.59072876 420.42111206]
[377.34228516 434.65557861]
[381.05435181 449.19580078]
[383.70751953 463.96600342]
[385.28799438 478.88912964]
[385.78750610 493.88742065]
[385.20349121 508.88262939]
[383.53897095 523.79663086]
[380.80261230 538.55163574]
[377.00869751 553.07073975]
[372.17700195 567.27819824]
[366.33270264 581.09997559]
[359.50631714 594.46405029]
[351.73336792 607.30065918]
[343.05444336 619.54296875]
[333.51473999 631.12707520]
[323.16400146 641.99267578]
[312.05624390 652.08300781]
[300.24932861 661.34552002]
[287.80480957 669.73193359]
[274.78759766 677.19854736]
[261.26553345 683.70635986]
[247.30914307 689.22149658]
[232.99116516 693.71514893]
[218.38626099 697.16400146]
[203.57055664 699.54992676]
[188.62130737 700.86059570]
[173.61645508 701.08917236]
[158.63423157 700.23437500]
[143.75274658 698.30078125]
[129.04957581 695.29833984]
[114.60137939 691.24279785]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 159]
[35 158]
[36 157]
[37 156]
[38 155]
[39 154]
[40 153]
[41 152]
[42 151]
[72 150]
[73 149]
[74 148]
[80 143]
[81 142]
[82 141]
[83 140]
[84 139]
[86 137]
[87 136]
[88 135]
[89 134]
[90 133]
[91 132]
[94 130]
[95 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
