%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[112.26977539 664.35339355]
[100.34407043 655.23681641]
[89.32447815 645.04351807]
[79.30782318 633.86315918]
[70.38214874 621.79388428]
[62.62588120 608.94189453]
[56.10720062 595.41998291]
[50.88338089 581.34710693]
[47.00033951 566.84686279]
[44.49219894 552.04675293]
[43.38100052 537.07678223]
[43.67650604 522.06854248]
[45.37612534 507.15393066]
[48.46492004 492.46401978]
[52.91574097 478.12786865]
[58.68947601 464.27154541]
[65.73538208 451.01672363]
[73.99154663 438.47998047]
[83.38539886 426.77142334]
[93.83439636 415.99401855]
[105.24670410 406.24240112]
[117.52202606 397.60232544]
[130.55249023 390.14971924]
[144.22358704 383.95004272]
[158.41514587 379.05783081]
[154.87547302 364.48144531]
[144.35333252 353.93945312]
[148.61558533 338.70318604]
[145.07591248 324.12680054]
[134.55375671 313.58480835]
[138.81600952 298.34854126]
[135.27633667 283.77215576]
[131.73666382 269.19580078]
[128.19699097 254.61941528]
[117.67485046 244.07742310]
[121.93709564 228.84115601]
[118.39742279 214.26478577]
[114.85774994 199.68840027]
[104.69392395 193.12919617]
[101.62566376 181.01434326]
[107.82655334 169.70454407]
[104.50429535 155.07708740]
[101.18203735 140.44961548]
[97.85977936 125.82215881]
[94.53751373 111.19470215]
[90.83332825 125.73014069]
[83.23368835 138.66247559]
[72.33793640 148.97183228]
[59.00536346 155.84513855]
[44.28742599 158.74037170]
[29.34484291 157.42916870]
[15.35605049 152.01495361]
[3.42426133 142.92472839]
[-5.50953245 130.87535095]
[-10.74077606 116.81711578]
[-11.85691071 101.85869598]
[-8.76991367 87.17978668]
[-1.72323811 73.93801880]
[8.72738552 63.17770004]
[21.75777626 55.74742889]
[36.34030533 52.23319244]
[51.32493210 52.91213608]
[65.52990723 57.73071289]
[77.83496857 66.30891418]
[87.26968384 77.97022247]
[93.09087372 91.79833984]
[94.20652008 76.83988190]
[95.32217407 61.88143158]
[96.43782043 46.92297745]
[97.55346680 31.96452522]
[98.66912079 17.00607109]
[90.85912323 6.74123716]
[92.09630585 -5.69472504]
[101.17468262 -13.68907261]
[102.51291656 -28.62925720]
[103.85115051 -43.56944275]
[105.18938446 -58.50962830]
[106.30503082 -73.46807861]
[107.19784546 -88.44149017]
[108.09066772 -103.41489410]
[92.93563080 -111.49045563]
[82.86760712 -125.33337402]
[79.87301636 -142.13015747]
[84.50670624 -158.49299622]
[95.78985596 -171.14305115]
[111.41631317 -177.56752014]
[111.86292267 -192.56086731]
[112.30953217 -207.55421448]
[112.75613403 -222.54756165]
[105.43314362 -236.57199097]
[113.54595184 -249.06324768]
[113.99256134 -264.05661011]
[114.43917084 -279.04995728]
[114.88577271 -294.04330444]
[115.33238220 -309.03665161]
[100.87768555 -313.36380005]
[88.03598785 -321.28549194]
[77.68284607 -332.26159668]
[70.52416229 -345.54376221]
[67.04802704 -360.22637939]
[67.49144745 -375.30834961]
[71.82418823 -389.76135254]
[79.75083160 -402.60000610]
[90.73093414 -412.94888306]
[104.01585388 -420.10244751]
[118.69979858 -423.57290649]
[133.78160095 -423.12368774]
[148.23294067 -418.78536987]
[161.06852722 -410.85375977]
[171.41317749 -399.86965942]
[178.56159973 -386.58197021]
[182.02639771 -371.89669800]
[181.57133484 -356.81506348]
[177.22744751 -342.36538696]
[169.29087830 -329.53289795]
[158.30279541 -319.19247437]
[145.01234436 -312.04916382]
[130.32572937 -308.59005737]
[129.87911987 -293.59667969]
[129.43251038 -278.60333252]
[128.98591614 -263.60998535]
[128.53930664 -248.61663818]
[135.89424133 -235.66464233]
[127.74948120 -222.10096741]
[127.30287933 -207.10760498]
[126.85626984 -192.11425781]
[126.40966797 -177.12091064]
[138.39002991 -172.09948730]
[147.97448730 -163.28401184]
[154.00755310 -151.70776367]
[155.75187683 -138.73860168]
[152.97834778 -125.91728210]
[145.99584961 -114.77445221]
[135.61711121 -106.64793396]
[123.06407166 -102.52207947]
[122.17125702 -87.54866791]
[121.27843475 -72.57526398]
[123.72222137 -68.47197723]
[123.61428833 -62.78995514]
[120.12957001 -57.17139435]
[118.79133606 -42.23120880]
[117.45310211 -27.29102325]
[116.11486816 -12.35083866]
[124.34561920 3.14824533]
[113.62757111 18.12171936]
[112.51192474 33.08017349]
[111.39627075 48.03862762]
[110.28062439 62.99708176]
[109.16497803 77.95553589]
[108.04933167 92.91398621]
[109.16497803 107.87244415]
[112.48723602 122.49990082]
[115.80949402 137.12736511]
[119.13175201 151.75482178]
[122.45401764 166.38227844]
[135.27465820 179.60015869]
[129.43412781 196.14872742]
[132.97380066 210.72511292]
[136.51347351 225.30148315]
[147.28878784 236.88607788]
[142.77336121 251.07974243]
[146.31303406 265.65612793]
[149.85270691 280.23251343]
[153.39237976 294.80886841]
[164.16770935 306.39346313]
[159.65228271 320.58712769]
[163.19195557 335.16351318]
[173.96728516 346.74810791]
[169.45185852 360.94177246]
[172.99153137 375.51815796]
[187.84626770 373.35687256]
[202.83811951 372.59613037]
[217.83534241 373.24261475]
[232.70611572 375.29064941]
[247.31977844 378.72219849]
[261.54788208 383.50714111]
[275.26538086 389.60339355]
[288.35174561 396.95739746]
[300.69195557 405.50454712]
[312.17758179 415.16970825]
[322.70764160 425.86795044]
[332.18963623 437.50521851]
[340.54022217 449.97927856]
[347.68600464 463.18051147]
[353.56420898 476.99285889]
[358.12313843 491.29498291]
[361.32275391 505.96115112]
[363.13491821 520.86254883]
[363.54376221 535.86810303]
[362.54562378 550.84600830]
[360.14929199 565.66467285]
[356.37582397 580.19378662]
[351.25842285 594.30572510]
[344.84201050 607.87640381]
[337.18301392 620.78668213]
[328.34872437 632.92297363]
[318.41677856 644.17864990]
[307.47445679 654.45483398]
[295.61791992 663.66119385]
[282.95138550 671.71685791]
[269.58615112 678.55096436]
[255.63969421 684.10351562]
[241.23455811 688.32568359]
[226.49734497 691.18029785]
[211.55758667 692.64239502]
[196.54653931 692.69909668]
[181.59616089 691.34985352]
[166.83781433 688.60650635]
[152.40121460 684.49328613]
[138.41322327 679.04620361]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 170]
[26 169]
[28 167]
[29 166]
[31 164]
[32 163]
[33 162]
[34 161]
[36 159]
[37 158]
[38 157]
[41 155]
[42 154]
[43 153]
[44 152]
[45 151]
[66 150]
[67 149]
[68 148]
[69 147]
[70 146]
[71 145]
[74 143]
[75 142]
[76 141]
[77 140]
[78 137]
[79 136]
[80 135]
[86 127]
[87 126]
[88 125]
[89 124]
[91 122]
[92 121]
[93 120]
[94 119]
[95 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
