%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[72.16430664 580.08666992]
[70.15918732 595.06903076]
[63.82551575 608.79406738]
[53.72647476 620.04132080]
[40.76005936 627.81066895]
[26.07924271 631.41137695]
[10.98942661 630.52319336]
[-3.16760993 625.22509766]
[-15.13303280 615.98822021]
[-23.84288597 603.63385010]
[-28.52269363 589.26062012]
[-28.75633049 574.14648438]
[-24.52302361 559.63543701]
[-16.19919395 547.01776123]
[-4.52499151 537.41546631]
[9.46152115 531.68231201]
[24.51667404 530.32818604]
[27.62078476 515.65283203]
[30.72489357 500.97753906]
[33.82900620 486.30224609]
[36.93311310 471.62695312]
[31.99708939 457.57400513]
[42.42272186 445.67373657]
[45.52683258 430.99841309]
[48.41210556 416.27853394]
[51.07789993 401.51730347]
[53.74369431 386.75610352]
[48.39145279 372.85635376]
[58.45814514 360.65093994]
[61.12393951 345.88973999]
[63.78973770 331.12850952]
[66.45552826 316.36727905]
[61.10328674 302.46755981]
[71.16998291 290.26214600]
[73.61570740 275.46286011]
[75.84082794 260.62881470]
[78.06594086 245.79476929]
[80.29106140 230.96072388]
[82.07352448 216.06701660]
[83.41175842 201.12683105]
[84.74999237 186.18664551]
[86.08822632 171.24645996]
[87.42646027 156.30627441]
[88.76469421 141.36608887]
[90.10292816 126.42590332]
[91.44116211 111.48571777]
[85.73317719 98.72208405]
[93.61865234 87.17604828]
[94.95688629 72.23586273]
[87.30058289 61.85588455]
[88.72277832 49.43972397]
[97.91917419 41.58142471]
[99.47969818 26.66281891]
[87.17556763 35.24235535]
[72.38500214 32.74453354]
[63.58070374 20.60022163]
[65.80617523 5.76623106]
[77.78656769 -3.25985384]
[92.65896606 -1.30748177]
[101.90352631 10.50402546]
[104.78880310 -4.21586561]
[107.67407227 -18.93575668]
[110.55934906 -33.65564728]
[101.80831146 -43.89449692]
[100.57014465 -57.11105728]
[107.07378387 -68.45939636]
[118.75044250 -73.90779877]
[121.85455322 -88.58309937]
[124.95866394 -103.25840759]
[123.67288971 -112.30188751]
[128.21977234 -118.12834167]
[131.54203796 -132.75579834]
[134.86430359 -147.38325500]
[138.18655396 -162.01072693]
[132.33343506 -179.46987915]
[144.74937439 -191.87194824]
[147.85348511 -206.54725647]
[135.85122681 -215.91246033]
[129.13272095 -229.50468445]
[128.98255920 -244.60427856]
[135.37693787 -258.21578979]
[146.99909973 -267.66220093]
[161.51005554 -271.11145020]
[164.61416626 -285.78674316]
[167.71827698 -300.46206665]
[170.82238770 -315.13735962]
[161.29809570 -323.23397827]
[156.14984131 -334.54611206]
[156.29878235 -346.90158081]
[161.65530396 -357.95639038]
[171.14762878 -365.63937378]
[182.93577576 -368.54025269]
[186.47544861 -383.11663818]
[190.01512146 -397.69299316]
[193.55479431 -412.26937866]
[179.72660828 -418.17117310]
[167.05850220 -426.26864624]
[155.89607239 -436.34088135]
[146.54385376 -448.11312866]
[139.25695801 -461.26422119]
[134.23419189 -475.43536377]
[131.61256409 -490.23999023]
[131.46362305 -505.27423096]
[133.79141235 -520.12786865]
[138.53242493 -534.39575195]
[145.55732727 -547.68865967]
[154.67446899 -559.64385986]
[165.63514709 -569.93530273]
[178.14033508 -578.28216553]
[191.84887695 -584.45678711]
[206.38679504 -588.29064941]
[221.35748291 -589.67926025]
[236.35253906 -588.58465576]
[250.96289062 -585.03674316]
[264.78994751 -579.13226318]
[277.45648193 -571.03234863]
[288.61697388 -560.95800781]
[297.96691895 -549.18395996]
[305.25128174 -536.03143311]
[310.27130127 -521.85931396]
[312.89007568 -507.05419922]
[313.03613281 -492.01992798]
[310.70547485 -477.16671753]
[305.96173096 -462.89974976]
[298.93426514 -449.60821533]
[289.81481934 -437.65475464]
[278.85214233 -427.36544800]
[266.34536743 -419.02099609]
[252.63562012 -412.84902954]
[238.09696960 -409.01791382]
[223.12600708 -407.63223267]
[208.13116455 -408.72970581]
[204.59149170 -394.15332031]
[201.05181885 -379.57696533]
[197.51214600 -365.00057983]
[209.55966187 -352.08822632]
[211.46113586 -334.37283325]
[202.26750183 -318.92755127]
[185.49769592 -312.03323364]
[182.39358521 -297.35794067]
[179.28947449 -282.68264771]
[176.18536377 -268.00735474]
[188.05680847 -258.97769165]
[194.85847473 -245.63427734]
[195.19358826 -230.59936523]
[188.94210815 -216.85385132]
[177.29525757 -207.14624023]
[162.52879333 -203.44314575]
[159.42468262 -188.76783752]
[165.75798035 -178.46173096]
[163.29199219 -166.21008301]
[152.81402588 -158.68846130]
[149.49176025 -144.06100464]
[146.16949463 -129.43354797]
[142.84724426 -114.80608368]
[139.63397217 -100.15429688]
[136.52986145 -85.47899628]
[133.42575073 -70.80368805]
[143.19328308 -57.11303711]
[139.97355652 -40.26227188]
[125.27923584 -30.77037621]
[122.39396667 -16.05048370]
[119.50868988 -1.33059299]
[116.62342072 13.38929844]
[114.39830017 28.22334290]
[112.83777618 43.14194870]
[120.83686066 58.76185608]
[109.89707184 73.57409668]
[108.55883789 88.51428223]
[114.26682281 101.27791595]
[106.38134766 112.82395172]
[105.04311371 127.76413727]
[103.70487976 142.70433044]
[102.36664581 157.64450073]
[101.02841187 172.58468628]
[99.69017792 187.52487183]
[98.35194397 202.46505737]
[97.01371002 217.40524292]
[98.97972107 221.27677917]
[99.55375671 225.17999268]
[98.89678955 228.67338562]
[97.29663086 231.41310120]
[95.12510681 233.18585205]
[92.89998627 248.01989746]
[90.67486572 262.85394287]
[88.44975281 277.68798828]
[90.51020050 283.97018433]
[89.27425385 289.51721191]
[85.93119812 292.92791748]
[91.09276581 307.88348389]
[81.21675110 319.03308105]
[78.55095673 333.79431152]
[75.88515472 348.55551147]
[73.21936035 363.31674194]
[78.38092804 378.27230835]
[68.50491333 389.42190552]
[65.83911896 404.18310547]
[63.17332077 418.94433594]
[65.04581451 425.28509521]
[63.64525604 430.79284668]
[60.20213318 434.10253906]
[57.09802246 448.77783203]
[61.81202316 463.88046265]
[51.60841751 474.73104858]
[48.50430679 489.40637207]
[45.40019608 504.08166504]
[42.29608536 518.75695801]
[39.19197464 533.43225098]
[52.40933609 540.76660156]
[62.87644577 551.67218018]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 208]
[18 207]
[19 206]
[20 205]
[21 204]
[23 202]
[24 201]
[25 198]
[26 197]
[27 196]
[29 194]
[30 193]
[31 192]
[32 191]
[34 189]
[35 186]
[36 185]
[37 184]
[38 183]
[39 178]
[40 177]
[41 176]
[42 175]
[43 174]
[44 173]
[45 172]
[46 171]
[48 169]
[49 168]
[52 166]
[53 165]
[60 164]
[61 163]
[62 162]
[63 161]
[67 158]
[68 157]
[69 156]
[71 155]
[72 154]
[73 153]
[74 152]
[76 149]
[77 148]
[83 142]
[84 141]
[85 140]
[86 139]
[92 135]
[93 134]
[94 133]
[95 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
