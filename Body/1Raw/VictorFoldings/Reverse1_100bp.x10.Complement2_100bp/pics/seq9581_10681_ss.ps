%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[201.36718750 491.20187378]
[210.41390991 479.18536377]
[221.46101379 468.97744751]
[234.15338135 460.90631104]
[228.49060059 447.01629639]
[222.82780457 433.12625122]
[217.16502380 419.23623657]
[211.50224304 405.34622192]
[199.53269958 396.48171997]
[201.48762512 380.78173828]
[195.82482910 366.89172363]
[190.16204834 353.00170898]
[184.49926758 339.11166382]
[171.08485413 340.31546021]
[157.85791016 337.68927002]
[145.89111328 331.43643188]
[136.15762329 322.05477905]
[129.45201111 310.29696655]
[126.32536316 297.11019897]
[127.04002380 283.55984497]
[131.54759216 270.74340820]
[139.49208069 259.70159912]
[150.23800659 251.33386230]
[144.99128723 237.28138733]
[139.74456787 223.22892761]
[128.04426575 214.01197815]
[130.46575928 198.37718201]
[125.21904755 184.32470703]
[119.97232819 170.27223206]
[114.68778229 165.10548401]
[114.75381470 155.97129822]
[109.71689606 141.84226990]
[104.15766907 127.91046906]
[98.08383179 114.19519806]
[86.90288544 105.80008698]
[88.20089722 91.87863159]
[82.12706757 78.16336823]
[76.05323029 64.44809723]
[70.94611359 60.24942398]
[69.01582336 54.90423965]
[70.00950623 50.23287582]
[64.34672546 36.34284973]
[51.97214127 26.48484421]
[54.33210373 11.77838802]
[48.66931915 -2.11163878]
[43.00653076 -16.00166512]
[37.34374619 -29.89169312]
[31.68095970 -43.78171921]
[26.01817322 -57.67174530]
[13.64358997 -67.52975464]
[16.00355530 -82.23620605]
[10.34076881 -96.12623596]
[4.67798233 -110.01625824]
[3.58385444 -95.05622101]
[-0.36885422 -80.58638763]
[-7.03236914 -67.14772797]
[-16.15756989 -55.24265289]
[-27.40330315 -45.31624985]
[-40.34914017 -37.73962021]
[-54.51108932 -32.79602432]
[-69.35970306 -30.67028046]
[-84.33984375 -31.44186020]
[-98.89147186 -35.08191681]
[-112.47057343 -41.45436859]
[-124.56947327 -50.32096863]
[-134.73583984 -61.35024261]
[-142.58961487 -74.12984467]
[-147.83715820 -88.18200684]
[-150.28231812 -102.98137665]
[-149.83363342 -117.97466278]
[-146.50791931 -132.60133362]
[-140.42948914 -146.31457520]
[-131.82560730 -158.60168457]
[-121.01791382 -169.00331116]
[-108.41047668 -177.13056946]
[-94.47462463 -182.67964172]
[-79.73136902 -185.44305420]
[-64.73189545 -185.31748962]
[-50.03696823 -182.30766296]
[-36.19596863 -176.52607727]
[-23.72635078 -168.18888855]
[-13.09430218 -157.60780334]
[-4.69730902 -145.17837524]
[1.14887607 -131.37113953]
[2.04169202 -146.34454346]
[2.93450785 -161.31794739]
[3.71583009 -176.29757690]
[4.38561535 -191.28262329]
[5.05540037 -206.26765442]
[2.91847825 -210.04754639]
[2.17072701 -213.92121887]
[2.67105150 -217.44047546]
[4.14728022 -220.24891663]
[6.23748302 -222.11685181]
[7.79800606 -237.03546143]
[9.35852909 -251.95405579]
[10.91905212 -266.87268066]
[12.47957516 -281.79125977]
[-1.55889523 -287.34320068]
[-13.57819080 -296.47769165]
[-22.68639946 -308.51693726]
[-28.20763206 -322.56750488]
[-29.73217583 -337.58676147]
[-27.14690018 -352.46020508]
[-20.64365005 -366.08410645]
[-10.70500946 -377.44744873]
[1.93150842 -385.70706177]
[16.32818985 -390.24996948]
[31.41670799 -390.73910522]
[46.07738876 -387.13812256]
[59.22232056 -379.71429443]
[69.87605286 -369.01846313]
[77.24801636 -355.84439087]
[80.79116058 -341.16961670]
[80.24255371 -326.08312988]
[75.64291382 -311.70449829]
[67.33355713 -299.10061646]
[55.93110657 -289.20684814]
[42.28168488 -282.75735474]
[27.39818001 -280.23074341]
[25.83765602 -265.31213379]
[24.27713394 -250.39353943]
[22.71660995 -235.47492981]
[21.15608788 -220.55633545]
[20.04043961 -205.59786987]
[19.37065315 -190.61283875]
[18.70086861 -175.62779236]
[21.54256248 -168.80529785]
[17.90791321 -160.42512512]
[17.01509857 -145.45172119]
[16.12228203 -130.47831726]
[18.56800842 -115.67904663]
[24.23079491 -101.78902435]
[29.89358330 -87.89899445]
[41.86312485 -79.03449249]
[39.90819931 -63.33453369]
[45.57098770 -49.44450760]
[51.23377228 -35.55447769]
[56.89656067 -21.66445160]
[62.55934525 -7.77442551]
[68.22212982 6.11560154]
[80.19167328 14.98009968]
[78.23674774 30.68006325]
[83.89953613 44.57009125]
[89.76849365 58.37426758]
[95.84233093 72.08953094]
[101.91616821 85.80480194]
[113.09711456 94.19991302]
[111.79910278 108.12136841]
[117.87293243 121.83663177]
[125.62907410 108.99753571]
[140.48242188 106.90513611]
[151.48364258 117.10186005]
[150.52304077 132.07107544]
[138.30874634 140.77801514]
[123.84592438 136.80534363]
[128.88284302 150.93437195]
[134.02479553 165.02551270]
[139.27151489 179.07798767]
[144.51823425 193.13046265]
[156.59382629 203.35253906]
[153.79704285 217.98220825]
[159.04376221 232.03468323]
[164.29048157 246.08714294]
[180.92538452 245.73738098]
[196.65048218 251.09559631]
[209.57084656 261.49755859]
[218.13592529 275.67236328]
[221.32554626 291.89770508]
[218.77148438 308.20916748]
[210.79977417 322.63803101]
[198.38928223 333.44888306]
[204.05207825 347.33889771]
[209.71485901 361.22894287]
[215.37765503 375.11895752]
[227.75222778 384.97695923]
[225.39227295 399.68341064]
[231.05505371 413.57345581]
[236.71783447 427.46347046]
[242.38063049 441.35351562]
[248.04341125 455.24353027]
[262.76101685 452.13998413]
[277.79626465 451.71444702]
[292.66583252 453.98059082]
[306.89175415 458.86560059]
[320.01669312 466.21240234]
[331.61874390 475.78488159]
[341.32495117 487.27526855]
[348.82330322 500.31423950]
[353.87277222 514.48260498]
[356.31100464 529.32495117]
[356.05966187 544.36407471]
[353.12680054 559.11663818]
[347.60668945 573.10839844]
[339.67678833 585.88946533]
[329.59204102 597.04913330]
[317.67657471 606.22851562]
[304.31344604 613.13262939]
[289.93225098 617.53955078]
[274.99523926 619.30749512]
[259.98260498 618.37976074]
[245.37693787 614.78613281]
[231.64775085 608.64208984]
[219.23637390 600.14520264]
[208.54177856 589.56854248]
[199.90776062 577.25219727]
[193.61186218 563.59197998]
[189.85647583 549.02703857]
[188.76231384 534.02563477]
[190.36454773 519.06994629]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 181]
[5 180]
[6 179]
[7 178]
[8 177]
[10 175]
[11 174]
[12 173]
[13 172]
[23 164]
[24 163]
[25 162]
[27 160]
[28 159]
[29 158]
[31 157]
[32 156]
[33 150]
[34 149]
[36 147]
[37 146]
[38 145]
[41 144]
[42 143]
[44 141]
[45 140]
[46 139]
[47 138]
[48 137]
[49 136]
[51 134]
[52 133]
[53 132]
[84 131]
[85 130]
[86 129]
[87 127]
[88 126]
[89 125]
[94 124]
[95 123]
[96 122]
[97 121]
[98 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
