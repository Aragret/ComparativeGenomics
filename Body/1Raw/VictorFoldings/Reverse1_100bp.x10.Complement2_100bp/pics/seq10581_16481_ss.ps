%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGCGUCCGCCGUUUCUGAUCAUACCGUUAUCCGUGUUAUAACCGAUUCUCCCUCACCCACAACUCCCAAUACUCUCAUCGAUAUUACUUGUCGCUAUxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[45.71044540 756.67956543]
[31.50499153 761.52154541]
[16.95974159 765.21966553]
[2.16665602 767.75042725]
[-12.78073502 769.09783936]
[-27.78792953 769.25341797]
[-42.76004410 768.21618652]
[-57.60242081 765.99273682]
[-72.22122192 762.59698486]
[-86.52401733 758.05053711]
[-100.42037964 752.38214111]
[-113.82244873 745.62750244]
[-126.64550018 737.82946777]
[-138.80845642 729.03729248]
[-150.23440552 719.30651855]
[-160.85113525 708.69873047]
[-170.59149170 697.28094482]
[-179.39392090 685.12542725]
[-187.20274353 672.30895996]
[-193.96861267 658.91253662]
[-199.64872742 645.02093506]
[-204.20719910 630.72198486]
[-207.61520386 616.10607910]
[-209.85118103 601.26556396]
[-210.90100098 586.29431152]
[-210.75802612 571.28698730]
[-209.42317200 556.33850098]
[-206.90486145 541.54327393]
[-203.21900940 526.99493408]
[-198.38894653 512.78540039]
[-192.44519043 499.00454712]
[-185.42532349 485.73947144]
[-177.37373352 473.07409668]
[-168.34132385 461.08847046]
[-158.38519287 449.85833740]
[-147.56829834 439.45474243]
[-135.95903015 429.94342041]
[-123.63078308 421.38455200]
[-110.66149139 413.83224487]
[-97.13316345 407.33419800]
[-83.13132477 401.93154907]
[-68.74450684 397.65841675]
[-54.06366730 394.54187012]
[-39.18162537 392.60153198]
[-24.19246483 391.84976196]
[-9.19095802 392.29122925]
[5.72804880 393.92318726]
[20.47023201 396.73532104]
[24.44232941 382.27081299]
[28.41442490 367.80627441]
[32.38652039 353.34176636]
[31.12647820 346.05932617]
[36.52693176 338.69229126]
[40.71393967 324.28851318]
[44.90095139 309.88473511]
[49.08796310 295.48095703]
[52.84426498 280.95889282]
[56.16652298 266.33142090]
[59.48878479 251.70396423]
[62.81104279 237.07650757]
[66.13330078 222.44905090]
[56.57068253 208.61448669]
[60.04092789 191.81352234]
[74.87494659 182.54145813]
[77.97905731 167.86616516]
[73.04302979 153.81323242]
[83.46865845 141.91294861]
[86.57276917 127.23764038]
[89.67687988 112.56233978]
[84.06761932 96.75371552]
[95.41504669 84.40008545]
[98.30032349 69.68019867]
[101.18559265 54.96030426]
[104.07086182 40.24041367]
[106.95613861 25.52052116]
[109.84140778 10.80063057]
[112.28713989 -3.99864030]
[114.29115295 -18.86416817]
[116.18444061 -33.74420547]
[117.96691132 -48.63792038]
[119.74937439 -63.53163910]
[121.53184509 -78.42535400]
[109.79445648 -69.08545685]
[94.79677582 -69.34959412]
[83.39555359 -79.09700775]
[80.80326843 -93.87131500]
[88.20507050 -106.91789246]
[102.21696472 -112.27202606]
[116.43289948 -107.48588562]
[124.35392761 -94.74580383]
[127.67619324 -109.37326050]
[130.99844360 -124.00072479]
[134.32070923 -138.62818909]
[137.53398132 -153.27996826]
[140.63809204 -167.95527649]
[143.30389404 -182.71649170]
[145.52900696 -197.55053711]
[147.75411987 -212.38458252]
[133.81083679 -218.11590576]
[121.64472198 -227.01811218]
[111.96311188 -238.57362366]
[105.32887268 -252.11061096]
[102.12772369 -266.84207153]
[102.54576111 -281.91152954]
[106.55869293 -296.44287109]
[113.93319702 -309.59127808]
[124.24054718 -320.59225464]
[136.88146973 -328.80630493]
[151.12106323 -333.75579834]
[166.13142395 -335.15304565]
[181.03990173 -332.91674805]
[194.97970581 -327.17697144]
[207.14042664 -318.26739502]
[216.81503296 -306.70602417]
[223.44105530 -293.16500854]
[226.63328552 -278.43161011]
[226.20610046 -263.36239624]
[222.18437195 -248.83349609]
[214.80187988 -235.68959045]
[204.48786926 -224.69483948]
[191.84196472 -216.48846436]
[177.59938049 -211.54759216]
[162.58816528 -210.15945435]
[160.36305237 -195.32542419]
[158.13793945 -180.49137878]
[159.69377136 -178.15953064]
[160.41966248 -175.07089233]
[160.02276611 -171.53848267]
[158.32879639 -167.97547913]
[155.31340027 -164.85116577]
[152.20928955 -150.17585754]
[153.90055847 -142.98132324]
[148.94816589 -135.30592346]
[145.62591553 -120.67846680]
[142.30364990 -106.05100250]
[138.98138428 -91.42354584]
[136.42555237 -76.64289093]
[134.64309692 -61.74917221]
[132.86062622 -46.85545349]
[131.07815552 -31.96173859]
[133.40455627 -24.94677544]
[129.15667725 -16.86015511]
[127.15266418 -1.99462664]
[128.74304199 0.31380013]
[129.51484680 3.39128709]
[129.17057800 6.92920780]
[127.52984619 10.51703548]
[124.56130219 13.68590355]
[121.67603302 28.40579414]
[118.79075623 43.12568665]
[115.90548706 57.84557724]
[113.02021027 72.56546783]
[110.13494110 87.28536224]
[116.03817749 97.32493591]
[113.71292877 108.73696899]
[104.35218811 115.66644287]
[101.24807739 130.34175110]
[98.14396667 145.01704407]
[102.85796356 160.11965942]
[92.65435791 170.97027588]
[89.55024719 185.64556885]
[98.14786530 196.01358032]
[99.18912506 209.24710083]
[92.51725006 220.49736023]
[80.76076508 225.77130127]
[77.43849945 240.39877319]
[74.11624146 255.02622986]
[70.79398346 269.65368652]
[67.47172546 284.28115845]
[68.90287018 288.38064575]
[68.95028687 292.32553101]
[67.83248901 295.69985962]
[65.88064575 298.20123291]
[63.49174500 299.66796875]
[59.30473328 314.07174683]
[55.11772156 328.47552490]
[50.93071365 342.87930298]
[46.85104370 357.31387329]
[42.87894821 371.77838135]
[38.90685272 386.24291992]
[34.93475723 400.70742798]
[49.04560089 405.81860352]
[62.70574951 412.03475952]
[75.82884216 419.31655884]
[88.33190155 427.61798096]
[100.13588715 436.88653564]
[111.16616058 447.06359863]
[121.35298920 458.08489990]
[130.63197327 469.88067627]
[138.94442749 482.37640381]
[146.23782349 495.49304199]
[152.46603394 509.14770508]
[157.58967590 523.25402832]
[161.57637024 537.72283936]
[164.40090942 552.46264648]
[166.04542542 567.38024902]
[166.49952698 582.38140869]
[165.76033020 597.37121582]
[163.83253479 612.25488281]
[160.72831726 626.93829346]
[156.46730042 641.32873535]
[151.07643127 655.33508301]
[144.58976746 668.86889648]
[137.04835510 681.84454346]
[128.49986267 694.17999268]
[118.99832916 705.79724121]
[108.60382843 716.62286377]
[97.38208771 726.58843994]
[85.40404510 735.63092041]
[72.74543762 743.69317627]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 181]
[49 180]
[50 179]
[51 178]
[53 177]
[54 176]
[55 175]
[56 174]
[57 169]
[58 168]
[59 167]
[60 166]
[61 165]
[64 161]
[65 160]
[67 158]
[68 157]
[69 156]
[71 153]
[72 152]
[73 151]
[74 150]
[75 149]
[76 148]
[77 143]
[78 142]
[79 140]
[80 139]
[81 138]
[82 137]
[90 136]
[91 135]
[92 134]
[93 133]
[94 131]
[95 130]
[96 125]
[97 124]
[98 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
