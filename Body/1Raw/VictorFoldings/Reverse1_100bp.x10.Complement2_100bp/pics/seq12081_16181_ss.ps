%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACAGUCUAAGUGUUAGACUACAAAACCAAUUUGAUAUAAAUGUUCUCCUUUUGGGCCAUUACUACAGCCCCAACUCCCUAUCCUCCUCUUACCCCCUAxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[-0.14466159 867.23583984]
[-14.78479385 870.52209473]
[-29.59389496 872.93530273]
[-44.51994705 874.46697998]
[-59.51051712 875.11169434]
[-74.51296234 874.86724854]
[-89.47457123 873.73443604]
[-104.34279633 871.71734619]
[-119.06541443 868.82293701]
[-133.59071350 865.06146240]
[-147.86766052 860.44610596]
[-161.84611511 854.99304199]
[-175.47697449 848.72149658]
[-188.71237183 841.65344238]
[-201.50579834 833.81372070]
[-213.81233215 825.22985840]
[-225.58872986 815.93206787]
[-236.79365540 805.95294189]
[-247.38771057 795.32757568]
[-257.33370972 784.09320068]
[-266.59671021 772.28942871]
[-275.14416504 759.95758057]
[-282.94607544 747.14105225]
[-289.97503662 733.88488770]
[-296.20632935 720.23553467]
[-301.61807251 706.24108887]
[-306.19128418 691.95056152]
[-309.90985107 677.41418457]
[-312.76077271 662.68310547]
[-314.73400879 647.80902100]
[-315.82260132 632.84411621]
[-316.02276611 617.84100342]
[-315.33377075 602.85241699]
[-313.75805664 587.93096924]
[-311.30114746 573.12902832]
[-307.97167969 558.49865723]
[-303.78137207 544.09124756]
[-298.74487305 529.95733643]
[-292.87994385 516.14666748]
[-286.20715332 502.70764160]
[-278.74993896 489.68756104]
[-270.53448486 477.13208008]
[-261.58969116 465.08535767]
[-251.94692993 453.58969116]
[-241.64010620 442.68548584]
[-230.70539856 432.41098022]
[-219.18124390 422.80230713]
[-207.10807800 413.89321899]
[-194.52835083 405.71499634]
[-181.48623657 398.29635620]
[-168.02752686 391.66339111]
[-154.19952393 385.83938599]
[-140.05078125 380.84475708]
[-125.63100433 376.69711304]
[-110.99084473 373.41098022]
[-96.18172455 370.99792480]
[-81.25566101 369.46640015]
[-66.26508331 368.82180786]
[-51.26264572 369.06637573]
[-36.30104446 370.19931030]
[-21.43283463 372.21655273]
[-6.71024370 375.11108398]
[7.81501770 378.87268066]
[12.42902660 364.59997559]
[17.04303551 350.32723999]
[21.65704536 336.05450439]
[26.27105522 321.78176880]
[30.88506317 307.50903320]
[18.88905144 295.15856934]
[14.77947521 278.34710693]
[19.77611542 261.68466187]
[32.58885956 249.78741455]
[49.74932480 245.99906921]
[53.93633652 231.59529114]
[58.12334824 217.19151306]
[62.31035995 202.78771973]
[66.49736786 188.38394165]
[70.68437958 173.98016357]
[74.87139130 159.57638550]
[79.05840302 145.17259216]
[75.18125916 130.79145813]
[86.46311951 119.69956207]
[90.65013123 105.29577637]
[92.21065521 90.37717438]
[91.09500122 75.41872406]
[87.33599091 67.09360504]
[90.07579041 60.22954559]
[89.18297577 45.25613785]
[88.29016113 30.28273392]
[85.77159119 26.74567413]
[84.62490082 22.97080612]
[84.75638580 19.41860771]
[85.93242645 16.47182274]
[87.81696320 14.39656734]
[87.81696320 -0.60343277]
[87.81696320 -15.60343266]
[87.81696320 -30.60343361]
[87.81696320 -45.60343170]
[73.75977325 -51.38823318]
[62.98989868 -62.11568832]
[57.14966965 -76.14994049]
[57.12967300 -91.35086060]
[62.93296051 -105.40042877]
[73.67457581 -116.15617371]
[87.71649170 -121.97794342]
[102.91742706 -121.97794342]
[116.95935059 -116.15617371]
[127.70095825 -105.40042877]
[133.50424194 -91.35086060]
[133.48425293 -76.14994049]
[127.64402008 -62.11568832]
[116.87414551 -51.38823318]
[102.81696320 -45.60343170]
[102.81696320 -30.60343361]
[102.81696320 -15.60343266]
[102.81696320 -0.60343277]
[102.81696320 14.39656734]
[103.26356506 29.38991737]
[104.15637970 44.36332321]
[105.04919434 59.33672714]
[106.05345917 74.30307007]
[107.16910553 89.26152802]
[112.80649567 75.36117554]
[121.56670380 63.18502045]
[132.95429993 53.42168427]
[146.32525635 46.62332916]
[160.92337036 43.17443848]
[175.92306519 43.27006149]
[190.47602844 46.90478897]
[203.75923157 53.87306213]
[215.02140808 63.78079224]
[223.62567139 76.06764221]
[229.08538818 90.03874207]
[231.09178162 104.90394592]
[229.53138733 119.82256317]
[224.49244690 133.95088196]
[216.25993347 146.48985291]
[205.29945374 156.73034668]
[192.23086548 164.09323120]
[177.79325867 168.16207886]
[162.80316162 168.70678711]
[148.10830688 165.69653320]
[134.53979492 159.30158997]
[122.86497498 149.88360596]
[113.74411011 137.97520447]
[107.69303894 124.24988556]
[105.05390930 109.48278809]
[100.86689758 123.88657379]
[104.44456482 139.29795837]
[93.46218872 149.35960388]
[89.27517700 163.76339722]
[85.08816528 178.16717529]
[80.90115356 192.57095337]
[76.71414185 206.97473145]
[72.52713013 221.37852478]
[68.34011841 235.78230286]
[64.15310669 250.18608093]
[73.93552399 258.61721802]
[79.78138733 270.08023071]
[80.85373688 282.85620117]
[77.02848053 295.04415894]
[68.90760040 304.84411621]
[57.72471619 310.82275391]
[45.15779877 312.12304688]
[40.54378891 326.39578247]
[35.92977905 340.66851807]
[31.31576920 354.94122314]
[26.70175934 369.21395874]
[22.08775139 383.48669434]
[36.06625748 388.93963623]
[49.69717407 395.21105957]
[62.93262863 402.27899170]
[75.72612762 410.11859131]
[88.03273773 418.70233154]
[99.80921936 428.00003052]
[111.01422119 437.97906494]
[121.60837555 448.60437012]
[131.55447388 459.83859253]
[140.81758118 471.64230347]
[149.36515808 483.97406006]
[157.16717529 496.79052734]
[164.19622803 510.04666138]
[170.42764282 523.69592285]
[175.83952332 537.69036865]
[180.41284180 551.98083496]
[184.13156128 566.51715088]
[186.98260498 581.24822998]
[188.95596313 596.12231445]
[190.04469299 611.08721924]
[190.24497986 626.09027100]
[189.55612183 641.07891846]
[187.98054504 656.00036621]
[185.52377319 670.80230713]
[182.19442749 685.43273926]
[178.00422668 699.84020996]
[172.96786499 713.97412109]
[167.10304260 727.78485107]
[160.43037415 741.22393799]
[152.97326660 754.24407959]
[144.75794983 766.79962158]
[135.81324768 778.84643555]
[126.17059326 790.34216309]
[115.86386108 801.24645996]
[104.92924500 811.52105713]
[93.40516663 821.12982178]
[81.33209229 830.03906250]
[68.75243378 838.21740723]
[55.71037292 845.63610840]
[42.25173187 852.26922607]
[28.42377472 858.09332275]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[63 169]
[64 168]
[65 167]
[66 166]
[67 165]
[68 164]
[73 157]
[74 156]
[75 155]
[76 154]
[77 153]
[78 152]
[79 151]
[80 150]
[82 148]
[83 147]
[84 122]
[85 121]
[87 120]
[88 119]
[89 118]
[94 117]
[95 116]
[96 115]
[97 114]
[98 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
