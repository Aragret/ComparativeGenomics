%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[89.78588104 504.38397217]
[89.78588104 489.38397217]
[82.04858398 476.65667725]
[89.78588104 462.85650635]
[89.78588104 447.85650635]
[89.78588104 432.85650635]
[89.78588104 417.85650635]
[89.78588104 402.85650635]
[89.33927917 387.86315918]
[88.44646454 372.88977051]
[87.55364227 357.91635132]
[86.66082764 342.94293213]
[85.76801300 327.96954346]
[77.16790009 340.25930786]
[63.32941437 346.04687500]
[48.54055405 343.53897095]
[37.38381195 333.51266479]
[33.31622696 319.07467651]
[37.59818649 304.69885254]
[48.90287018 294.83963013]
[63.72740936 292.55203247]
[77.47824860 298.54489136]
[85.89463043 310.96148682]
[87.01028442 296.00305176]
[88.12593079 281.04458618]
[75.73963165 272.77142334]
[69.11337280 259.31970215]
[70.11656952 244.25784302]
[78.57970428 231.63752747]
[92.31307983 224.90390015]
[93.42872620 209.94544983]
[94.54437256 194.98699951]
[94.87934875 179.99073792]
[86.76654053 167.49948120]
[94.08953094 153.47505188]
[93.64292908 138.48170471]
[93.19631958 123.48835754]
[92.74971008 108.49501038]
[92.19150543 93.50539398]
[91.52172089 78.52035522]
[90.85192871 63.53532028]
[80.58444977 48.24936676]
[89.27302551 33.00221634]
[88.38020325 18.02880859]
[87.48738861 3.05540323]
[86.59457397 -11.91800213]
[85.59031677 -26.88434601]
[84.47466278 -41.84280014]
[83.35901642 -56.80125427]
[81.57655334 -71.69496918]
[71.56484985 -79.82691956]
[69.83247375 -92.20362091]
[76.76796722 -102.11449432]
[74.54285431 -116.94853210]
[72.31773376 -131.78257751]
[70.09262085 -146.61662292]
[67.86750031 -161.45066833]
[65.09188843 -176.19163513]
[61.76963043 -190.81909180]
[58.44737244 -205.44654846]
[55.12511063 -220.07400513]
[42.97765732 -225.89242554]
[36.49385834 -237.47564697]
[37.84527206 -250.48547363]
[46.31565857 -260.19537354]
[43.21154785 -274.87066650]
[40.10743713 -289.54595947]
[34.76308823 -275.53033447]
[23.92651367 -265.15881348]
[9.69009018 -260.43395996]
[-5.19735432 -262.26806641]
[-17.86128616 -270.30703735]
[-25.85650063 -282.99862671]
[-27.63924408 -297.89230347]
[-22.86529922 -312.11233521]
[-12.45643806 -322.91308594]
[1.57754934 -328.20904541]
[16.52692223 -326.97766113]
[29.50518799 -319.45672607]
[38.00692368 -307.09719849]
[37.56031799 -322.09054565]
[37.11371231 -337.08389282]
[36.66710663 -352.07723999]
[36.22050095 -367.07058716]
[35.77389526 -382.06393433]
[35.32728958 -397.05728149]
[34.88068390 -412.05065918]
[34.43407822 -427.04400635]
[33.98746872 -442.03735352]
[19.14555359 -444.52807617]
[5.07484531 -449.86672974]
[-7.68381453 -457.84814453]
[-18.64001656 -468.16549683]
[-27.37263298 -480.42224121]
[-33.54600525 -494.14724731]
[-36.92284775 -508.81295776]
[-37.37335968 -523.85565186]
[-34.88022995 -538.69720459]
[-29.53928185 -552.76702881]
[-21.55581093 -565.52441406]
[-11.23668003 -576.47894287]
[1.02147150 -585.20959473]
[14.74747276 -591.38073730]
[29.41373444 -594.75518799]
[44.45652008 -595.20324707]
[59.29763031 -592.70770264]
[73.36660767 -587.36450195]
[86.12268829 -579.37896729]
[97.07554626 -569.05804443]
[105.80419159 -556.79852295]
[111.97312164 -543.07147217]
[115.34522247 -528.40472412]
[115.79086304 -513.36181641]
[113.29293060 -498.52111816]
[107.94742584 -484.45300293]
[99.95982361 -471.69824219]
[89.63714600 -460.74703979]
[77.37617493 -452.02038574]
[63.64817429 -445.85366821]
[48.98081970 -442.48394775]
[49.42742538 -427.49060059]
[49.87403107 -412.49725342]
[50.32063675 -397.50390625]
[50.76724243 -382.51055908]
[51.21385193 -367.51721191]
[51.66045761 -352.52386475]
[52.10706329 -337.53048706]
[52.55366898 -322.53713989]
[53.00027466 -307.54379272]
[54.78274155 -292.65008545]
[57.88684845 -277.97479248]
[60.99095917 -263.29946899]
[75.46556854 -254.73651123]
[79.34486389 -238.02525330]
[69.75257111 -223.39627075]
[73.07482910 -208.76881409]
[76.39708710 -194.14134216]
[79.71935272 -179.51388550]
[89.80027008 -190.62132263]
[104.77872467 -189.81759644]
[113.61315155 -177.69517517]
[109.79113770 -163.19027710]
[96.13013458 -156.99536133]
[82.70154572 -163.67578125]
[84.92665863 -148.84173584]
[87.15177917 -134.00769043]
[89.37689209 -119.17365265]
[91.60201263 -104.33960724]
[103.25775909 -91.22052002]
[96.37582397 -74.14070129]
[105.96879578 -85.67217255]
[120.89280701 -87.18015289]
[132.59869385 -77.80081177]
[134.38079834 -62.90705109]
[125.21825409 -51.03069687]
[110.35977936 -48.97506714]
[98.31747437 -57.91690063]
[99.43312073 -42.95845032]
[100.54876709 -27.99999619]
[104.18105316 -21.56351280]
[101.56797791 -12.81081867]
[102.46080017 2.16258740]
[103.35361481 17.13599396]
[104.24642944 32.10939789]
[113.08276367 40.37049866]
[113.94912720 52.83778381]
[105.83696747 62.86553574]
[106.50675964 77.85057068]
[107.17654419 92.83560944]
[110.65391541 100.10750580]
[107.74306488 108.04840088]
[108.18966675 123.04174805]
[108.63627625 138.03509521]
[109.08287811 153.02845764]
[117.22763062 166.59213257]
[109.87270355 179.54412842]
[120.09474182 168.56643677]
[134.96566772 166.60287476]
[147.68669128 174.55117798]
[152.44194031 188.77748108]
[147.05737305 202.77770996]
[133.99473572 210.15115356]
[119.22609711 207.52676392]
[109.50283051 196.10264587]
[108.38718414 211.06109619]
[107.27153015 226.01956177]
[119.85408783 234.71591187]
[126.35148621 248.45201111]
[125.10928345 263.49606323]
[116.56089783 275.81600952]
[103.08438110 282.16024780]
[101.96873474 297.11868286]
[100.85308838 312.07714844]
[100.74141693 327.07672119]
[101.63423157 342.05014038]
[102.52705383 357.02352905]
[103.41986847 371.99694824]
[104.31268311 386.97033691]
[106.83124542 390.50741577]
[107.97794342 394.28228760]
[107.84645081 397.83447266]
[106.67041016 400.78125000]
[104.78588104 402.85650635]
[104.78588104 417.85650635]
[104.78588104 432.85650635]
[104.78588104 447.85650635]
[104.78588104 462.85650635]
[112.52318573 476.65667725]
[104.78588104 489.38397217]
[104.78588104 504.38397217]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 210]
[2 209]
[4 207]
[5 206]
[6 205]
[7 204]
[8 203]
[9 198]
[10 197]
[11 196]
[12 195]
[13 194]
[23 193]
[24 192]
[25 191]
[30 186]
[31 185]
[32 184]
[33 176]
[35 174]
[36 173]
[37 172]
[38 171]
[39 169]
[40 168]
[41 167]
[43 164]
[44 163]
[45 162]
[46 161]
[47 159]
[48 158]
[49 157]
[50 150]
[53 148]
[54 147]
[55 146]
[56 145]
[57 144]
[58 138]
[59 137]
[60 136]
[61 135]
[65 132]
[66 131]
[67 130]
[80 129]
[81 128]
[82 127]
[83 126]
[84 125]
[85 124]
[86 123]
[87 122]
[88 121]
[89 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
