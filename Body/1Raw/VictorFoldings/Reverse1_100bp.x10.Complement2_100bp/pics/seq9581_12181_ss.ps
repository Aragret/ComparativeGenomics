%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[90.15255737 546.95013428]
[86.73172760 532.31457520]
[85.58520508 517.32843018]
[86.73985291 502.34283447]
[90.16862488 487.70916748]
[95.79113007 473.77044678]
[103.47557831 460.85342407]
[113.04182434 449.26086426]
[124.26563263 439.26455688]
[136.88389587 431.09875488]
[150.60081482 424.95495605]
[146.62872314 410.49044800]
[142.65663147 396.02590942]
[138.68452454 381.56140137]
[134.71243286 367.09686279]
[130.74034119 352.63235474]
[123.39748383 365.71218872]
[109.40988922 371.12951660]
[95.17250061 366.40756226]
[87.19445801 353.70516968]
[89.12320709 338.82968140]
[100.07696533 328.58200073]
[115.04780579 327.64718628]
[127.19231415 336.45419312]
[124.74658966 321.65490723]
[122.30085754 306.85565186]
[119.85513306 292.05636597]
[115.66310120 285.96960449]
[117.48487091 277.01870728]
[115.25975800 262.18466187]
[113.03463745 247.35060120]
[110.80952454 232.51655579]
[101.26984406 221.07786560]
[106.87441254 206.28260803]
[102.77346039 200.13410950]
[104.72830200 191.21130371]
[102.72428894 176.34577942]
[87.77921295 175.41055298]
[73.30367279 171.57797241]
[59.85383606 164.99526978]
[47.94646454 155.91537476]
[38.03905487 144.68714905]
[30.51225662 131.74198914]
[25.65526009 117.57725525]
[23.65468025 102.73719025]
[24.58737755 87.79195404]
[28.41751671 73.31576538]
[34.99794388 59.86481857]
[44.07582474 47.95591354]
[55.30238342 38.04660416]
[68.24627686 30.51762009]
[82.41018677 25.65823174]
[80.40616608 10.79270363]
[78.40215302 -4.07282495]
[68.89050293 -16.71557045]
[74.85806274 -30.36245537]
[72.85404968 -45.22798538]
[70.85003662 -60.09351349]
[66.60216522 -68.18013000]
[68.92855835 -75.19509888]
[67.14608765 -90.08881378]
[62.14720154 -75.94628143]
[54.43947983 -63.07806778]
[44.32991409 -51.99670029]
[32.22116852 -43.14354706]
[18.59553337 -36.87122726]
[3.99570513 -33.42956543]
[-10.99680614 -32.95563889]
[-25.78485489 -35.46832275]
[-39.77944183 -40.86754608]
[-52.42316437 -48.93825150]
[-63.21242523 -59.35898972]
[-71.71749878 -71.71470642]
[-77.59963226 -85.51327515]
[-80.62453461 -100.20510864]
[-80.67173004 -115.20503235]
[-77.73934174 -129.91560364]
[-71.94416046 -143.75091553]
[-63.51700592 -156.15991211]
[-52.79352951 -166.64834595]
[-40.20084763 -174.79844666]
[-26.24051476 -180.28562927]
[-11.46856976 -182.89132690]
[3.52662706 -182.51174927]
[18.14782333 -179.16203308]
[31.81266212 -172.97558594]
[43.97687531 -164.19880676]
[54.15597534 -153.18127441]
[61.94452286 -140.36181641]
[67.03231049 -126.25102234]
[69.21649170 -111.41510010]
[73.83050537 -125.68782806]
[78.44451141 -139.96055603]
[83.05851746 -154.23329163]
[87.67253113 -168.50602722]
[91.32061768 -183.05564880]
[93.98641205 -197.81686401]
[96.65220642 -212.57807922]
[99.31800079 -227.33930969]
[101.98380280 -242.10052490]
[88.33092499 -248.52403259]
[76.80641937 -258.26303101]
[68.19602966 -270.65350342]
[63.08684158 -284.85061646]
[61.82719421 -299.88644409]
[64.50298309 -314.73577881]
[70.93176270 -328.38616943]
[80.67520905 -339.90692139]
[93.06900024 -348.51251221]
[107.26810455 -353.61621094]
[122.30440521 -354.87005615]
[137.15269470 -352.18853760]
[150.80061340 -345.75448608]
[162.31759644 -336.00659180]
[170.91841125 -323.60946655]
[176.01663208 -309.40841675]
[177.26466370 -294.37161255]
[174.57740784 -279.52435303]
[168.13809204 -265.87893677]
[158.38575745 -254.36572266]
[145.98532104 -245.76969910]
[131.78228760 -240.67695618]
[116.74501801 -239.43472290]
[114.07922363 -224.67350769]
[111.41342926 -209.91229248]
[108.74762726 -195.15107727]
[106.08183289 -180.38986206]
[117.33917999 -190.30308533]
[132.15258789 -192.66165161]
[145.93197632 -186.73471069]
[154.40763855 -174.35881042]
[154.95330811 -159.36872864]
[147.39988708 -146.40933228]
[134.08790588 -139.49621582]
[119.14221954 -140.77149963]
[107.19390869 -149.83999634]
[101.94526672 -163.89201355]
[97.33125305 -149.61929321]
[92.71724701 -135.34655762]
[88.10323334 -121.07382202]
[83.48922729 -106.80108643]
[82.03981018 -91.87127686]
[83.82227325 -76.97756195]
[85.71556854 -62.09752655]
[87.71958160 -47.23199844]
[89.72359467 -32.36647034]
[99.09190369 -20.78700638]
[93.26768494 -6.07683849]
[95.27169800 8.78868961]
[97.27571106 23.65421867]
[112.22078705 24.58943939]
[126.69632721 28.42202759]
[140.14616394 35.00472641]
[152.05352783 44.08461761]
[161.96095276 55.31285095]
[169.48774719 68.25801086]
[174.34474182 82.42274475]
[176.34532166 97.26280975]
[175.41262817 112.20804596]
[171.58248901 126.68423462]
[165.00205994 140.13517761]
[155.92417908 152.04408264]
[144.69761658 161.95339966]
[131.75372314 169.48237610]
[117.58981323 174.34176636]
[119.59383392 189.20729065]
[121.70845795 204.05749512]
[131.40728760 216.55722046]
[125.64356232 230.29144287]
[127.86868286 245.12548828]
[130.09379578 259.95953369]
[132.31892395 274.79357910]
[134.65440369 289.61065674]
[137.10012817 304.40991211]
[139.54585266 319.20919800]
[141.99159241 334.00845337]
[145.20486450 348.66024780]
[149.17695618 363.12475586]
[153.14904785 377.58929443]
[157.12115479 392.05380249]
[161.09324646 406.51834106]
[165.06533813 420.98284912]
[179.99621582 419.25970459]
[195.01515198 419.83605957]
[209.77006531 422.69836426]
[223.91508484 427.77960205]
[237.11865234 434.96057129]
[249.07121277 444.07299805]
[259.49261475 454.90328979]
[268.13858032 467.19750977]
[274.80639648 480.66751099]
[279.33975220 494.99749756]
[281.63244629 509.85159302]
[281.63064575 524.88159180]
[279.33447266 539.73510742]
[274.79772949 554.06408691]
[268.12670898 567.53247070]
[259.47787476 579.82464600]
[249.05390930 590.65246582]
[237.09918213 599.76208496]
[223.89393616 606.93994141]
[209.74771118 612.01782227]
[194.99212646 614.87664795]
[179.97305298 615.44946289]
[165.04258728 613.72277832]
[150.55070496 609.73712158]
[136.83711243 603.58587646]
[124.22327423 595.41320801]
[113.00489807 585.41082764]
[103.44493866 573.81304932]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 182]
[12 181]
[13 180]
[14 179]
[15 178]
[16 177]
[24 176]
[25 175]
[26 174]
[27 173]
[29 172]
[30 171]
[31 170]
[32 169]
[34 167]
[36 166]
[37 165]
[52 150]
[53 149]
[54 148]
[56 146]
[57 145]
[58 144]
[60 143]
[61 142]
[91 141]
[92 140]
[93 139]
[94 138]
[95 137]
[96 127]
[97 126]
[98 125]
[99 124]
[100 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
