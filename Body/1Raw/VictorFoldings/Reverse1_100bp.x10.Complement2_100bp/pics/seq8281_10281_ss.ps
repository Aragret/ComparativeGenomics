%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[72.40673065 793.59851074]
[57.43852234 794.66131592]
[42.43268204 794.70019531]
[27.45917320 793.71490479]
[12.58780861 791.71014404]
[-2.11207557 788.69512939]
[-16.57193947 784.68402100]
[-30.72436333 779.69549561]
[-44.50336456 773.75274658]
[-57.84469223 766.88354492]
[-70.68614960 759.11993408]
[-82.96785736 750.49810791]
[-94.63256073 741.05822754]
[-105.62586212 730.84429932]
[-115.89650726 719.90399170]
[-125.39662170 708.28826904]
[-134.08189392 696.05133057]
[-141.91183472 683.25018311]
[-148.84994507 669.94458008]
[-154.86386108 656.19653320]
[-159.92556763 642.07006836]
[-164.01142883 627.63116455]
[-167.10243225 612.94708252]
[-169.18414307 598.08630371]
[-170.24685669 583.11810303]
[-170.28561401 568.11224365]
[-169.30024719 553.13873291]
[-167.29534912 538.26739502]
[-164.28025818 523.56750488]
[-160.26904297 509.10766602]
[-155.28039551 494.95529175]
[-149.33758545 481.17633057]
[-142.46832275 467.83505249]
[-134.70462036 454.99365234]
[-126.08267975 442.71200562]
[-116.64270782 431.04736328]
[-106.42871857 420.05410767]
[-95.48833466 409.78353882]
[-83.87256622 400.28350830]
[-71.63556671 391.59832764]
[-58.83438873 383.76846313]
[-45.52872849 376.83044434]
[-31.78061485 370.81661987]
[-17.65415382 365.75500488]
[-3.21520591 361.66925049]
[11.46890450 358.57833862]
[26.32971382 356.49673462]
[41.29793167 355.43411255]
[56.30377579 355.39544678]
[71.27726746 356.38092041]
[73.28128052 341.51538086]
[75.28530121 326.64987183]
[77.28931427 311.78433228]
[75.15748596 307.51065063]
[75.68772888 301.85238647]
[79.58068848 296.50857544]
[82.02641296 281.70932007]
[84.47213745 266.91003418]
[86.91786957 252.11076355]
[89.36359406 237.31149292]
[91.80932617 222.51222229]
[94.25505066 207.71295166]
[95.25930786 192.74661255]
[94.81270599 177.75326538]
[94.36609650 162.75991821]
[93.91949463 147.76655579]
[93.47288513 132.77320862]
[93.02628326 117.77986145]
[82.55238342 107.76768494]
[82.12097931 93.28458405]
[91.98036957 82.66674042]
[91.53376007 67.67339325]
[91.08715820 52.68004227]
[90.64054871 37.68669510]
[90.19394684 22.69334412]
[89.74733734 7.69999361]
[89.30073547 -7.29335642]
[88.85412598 -22.28670692]
[88.18434143 -37.27174377]
[87.29152679 -52.24515152]
[86.39871216 -67.21855927]
[83.52285767 -71.57476807]
[82.68894196 -76.14180756]
[83.63531494 -80.10658264]
[85.81556702 -82.87765503]
[85.59223938 -97.87599182]
[85.25726318 -112.87225342]
[84.81066132 -127.86560059]
[84.36405182 -142.85894775]
[83.91744995 -157.85229492]
[83.47084045 -172.84565735]
[83.02423096 -187.83900452]
[68.28433990 -191.00109863]
[54.72979736 -197.59942627]
[43.14866638 -207.25036621]
[34.21424866 -219.39283752]
[28.44598198 -233.32089233]
[26.17922592 -248.22476196]
[27.54576683 -263.23794556]
[32.46615601 -277.48764038]
[40.65432739 -290.14532471]
[51.63423538 -300.47512817]
[64.76751709 -307.87652588]
[79.29061890 -311.91912842]
[94.35919952 -312.36798096]
[109.09717560 -309.19696045]
[122.64771271 -302.59042358]
[134.22299194 -292.93243408]
[143.15003967 -280.78457642]
[148.90986633 -266.85302734]
[151.16758728 -251.94778442]
[149.79194641 -236.93540955]
[144.86291504 -222.68873596]
[136.66706848 -210.03599548]
[125.68090820 -199.71284485]
[112.54313660 -192.31942749]
[98.01758575 -188.28561401]
[98.46418762 -173.29225159]
[98.91079712 -158.29890442]
[99.35739899 -143.30555725]
[99.80400848 -128.31221008]
[100.25061035 -113.31885529]
[103.59187317 -106.72660828]
[100.59057617 -98.09931946]
[100.81390381 -83.10098267]
[101.37211609 -68.11137390]
[102.26493073 -53.13796616]
[103.15774536 -38.16456223]
[106.07181549 -34.38074493]
[106.63984680 -28.72615814]
[103.84748077 -22.73331261]
[104.29408264 -7.73996210]
[104.74069214 7.25338793]
[105.18729401 22.24673843]
[105.63390350 37.24008942]
[106.08050537 52.23343658]
[106.52711487 67.22679138]
[106.97371674 82.22013855]
[117.44761658 92.23231506]
[117.87902069 106.71541595]
[108.01963043 117.33325958]
[108.46623993 132.32659912]
[108.91284180 147.31996155]
[109.35945129 162.31330872]
[109.80605316 177.30665588]
[110.25266266 192.30000305]
[117.72099304 179.29139709]
[129.78649902 170.37940979]
[144.41595459 167.06588745]
[159.14399719 169.90921021]
[171.48872375 178.43022156]
[179.36982727 191.19299316]
[181.45919800 206.04676819]
[177.40473938 220.48841858]
[167.88969421 232.08427429]
[154.51753235 238.88024902]
[139.54168701 239.73107910]
[125.48583984 234.49339294]
[114.71866608 224.04981995]
[109.05432129 210.15869141]
[106.60859680 224.95796204]
[104.16286469 239.75723267]
[101.71714020 254.55650330]
[99.27140808 269.35577393]
[96.82568359 284.15502930]
[94.37995911 298.95431519]
[92.15483856 313.78836060]
[90.15082550 328.65386963]
[88.14681244 343.51940918]
[86.14279938 358.38494873]
[100.84272003 361.39971924]
[115.30264282 365.41064453]
[129.45513916 370.39901733]
[143.23420715 376.34155273]
[156.57563782 383.21054077]
[169.41719055 390.97399902]
[181.69902039 399.59567261]
[193.36384583 409.03543091]
[204.35728455 419.24917603]
[214.62808228 430.18936157]
[224.12834167 441.80493164]
[232.81378174 454.04177856]
[240.64390564 466.84280396]
[247.58218384 480.14831543]
[253.59629822 493.89630127]
[258.65817261 508.02267456]
[262.74423218 522.46154785]
[265.83541870 537.14556885]
[267.91732788 552.00634766]
[268.98025513 566.97454834]
[269.01922607 581.98040771]
[268.03405762 596.95391846]
[266.02935791 611.82525635]
[263.01446533 626.52520752]
[259.00344849 640.98504639]
[254.01498413 655.13751221]
[248.07235718 668.91656494]
[241.20326233 682.25793457]
[233.43974304 695.09942627]
[224.81796265 707.38122559]
[215.37815857 719.04595947]
[205.16430664 730.03936768]
[194.22406006 740.31005859]
[182.60841370 749.81024170]
[170.37153625 758.49560547]
[157.57046509 766.32562256]
[144.26489258 773.26385498]
[130.51686096 779.27783203]
[116.39047241 784.33966064]
[101.95157623 788.42559814]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[50 170]
[51 169]
[52 168]
[53 167]
[56 166]
[57 165]
[58 164]
[59 163]
[60 162]
[61 161]
[62 160]
[63 146]
[64 145]
[65 144]
[66 143]
[67 142]
[68 141]
[71 138]
[72 137]
[73 136]
[74 135]
[75 134]
[76 133]
[77 132]
[78 131]
[79 128]
[80 127]
[81 126]
[85 125]
[86 124]
[87 122]
[88 121]
[89 120]
[90 119]
[91 118]
[92 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
