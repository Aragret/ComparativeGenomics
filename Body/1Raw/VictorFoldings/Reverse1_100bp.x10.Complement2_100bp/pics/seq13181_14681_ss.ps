%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGAUAAUACUCAGGAUCAACUGAACUUCACCUCUUCCGAUGCUAAAAAAACUACAGUAAAACACAUUCCCGCGUCUGACGACGCUUGUCUCACCACUAUxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[140.19467163 571.47119141]
[138.30986023 556.55828857]
[138.78126526 541.53417969]
[141.59727478 526.76879883]
[146.68853760 512.62573242]
[153.92970276 499.45333862]
[163.14242554 487.57595825]
[174.09983826 477.28610229]
[186.53210449 468.83712769]
[200.13308716 462.43710327]
[195.94607544 448.03332520]
[191.75906372 433.62954712]
[187.57205200 419.22576904]
[183.38504028 404.82199097]
[172.40266418 394.76034546]
[175.98033142 379.34896851]
[164.99795532 369.28732300]
[168.57560730 353.87591553]
[157.59323120 343.81427002]
[161.17089844 328.40289307]
[156.98388672 313.99911499]
[143.67990112 302.55484009]
[148.21827698 284.70870972]
[143.81727600 270.36886597]
[139.41627502 256.02902222]
[135.01527405 241.68916321]
[123.88431549 231.79214478]
[127.23213196 216.32919312]
[122.83113098 201.98934937]
[118.43013000 187.64950562]
[107.29917145 177.75248718]
[110.64698792 162.28953552]
[106.24598694 147.94969177]
[101.27833557 142.47755432]
[101.88792419 133.36349487]
[97.70092010 118.95970917]
[85.05349731 111.88941956]
[81.00897980 97.97582245]
[87.89530182 85.22730255]
[76.61344147 74.13540649]
[80.49058533 59.75426865]
[76.30357361 45.35048676]
[72.11656189 30.94670486]
[67.92955017 16.54292297]
[63.74254227 2.13914132]
[50.15788269 -10.29220963]
[55.00307846 -27.15907097]
[50.60208130 -41.49891663]
[46.20108032 -55.83876419]
[41.80008316 -70.17861176]
[37.39908600 -84.51845551]
[22.51540375 -88.04312897]
[11.46726036 -98.47554779]
[7.15301895 -112.94114685]
[10.63536644 -127.52639008]
[20.88166809 -138.33744812]
[16.48066902 -152.67729187]
[12.07967186 -167.01713562]
[7.67867374 -181.35697937]
[3.27767587 -195.69683838]
[-2.17944074 -181.72471619]
[-14.26136208 -172.83499146]
[-29.22437286 -171.78224182]
[-42.43202209 -178.89265442]
[-49.79177475 -191.96299744]
[-49.02313232 -206.94329834]
[-40.36426926 -219.19172668]
[-26.49822426 -224.91297913]
[-11.72154331 -222.33427429]
[-0.61280900 -212.25442505]
[-3.05853653 -227.05369568]
[-5.61436892 -241.83435059]
[-8.28016376 -256.59555054]
[-18.41182899 -264.57754517]
[-20.32828712 -276.92709351]
[-13.54111481 -286.94012451]
[-15.98684216 -301.73937988]
[-18.43256950 -316.53866577]
[-20.87829781 -331.33792114]
[-23.32402420 -346.13720703]
[-25.76975250 -360.93646240]
[-33.04463196 -347.81869507]
[-46.20591736 -340.62283325]
[-61.17543793 -341.57858276]
[-73.31472778 -350.38980103]
[-78.86228943 -364.32626343]
[-76.09915924 -379.06954956]
[-65.88151550 -390.05136108]
[-51.37541199 -393.86880493]
[-37.07571793 -389.33901978]
[-27.41324997 -377.86541748]
[-27.85985565 -392.85876465]
[-28.30646133 -407.85211182]
[-38.34521866 -423.28924561]
[-29.43060493 -438.40533447]
[-30.10038948 -453.39038086]
[-30.77017403 -468.37542725]
[-44.96055984 -473.90286255]
[-55.67128754 -484.72879028]
[-61.04665756 -498.97747803]
[-60.15535355 -514.18029785]
[-53.15180206 -527.70324707]
[-41.24940872 -537.20336914]
[-26.51033783 -541.03479004]
[-11.48821831 -538.53363037]
[1.21427405 -530.13323975]
[9.39635563 -517.28906250]
[11.64043236 -502.22634888]
[7.55770397 -487.55493164]
[-2.14447212 -475.81661987]
[-15.78513527 -469.04519653]
[-15.11535072 -454.06015015]
[-14.44556522 -439.07513428]
[-5.73320770 -430.68338013]
[-5.05255985 -418.20455933]
[-13.31311131 -408.29870605]
[-12.86650562 -393.30535889]
[-12.41989994 -378.31201172]
[-10.97048092 -363.38220215]
[-8.52475357 -348.58294678]
[-6.07902622 -333.78366089]
[-3.63329887 -318.98440552]
[-1.18757141 -304.18511963]
[1.25815594 -289.38586426]
[13.10793781 -276.44174194]
[6.48105288 -259.26135254]
[9.14684868 -244.50013733]
[13.42904186 -238.47647095]
[11.74073410 -229.49942017]
[14.18646145 -214.70014954]
[17.61752319 -200.09782410]
[22.01852036 -185.75798035]
[26.41951942 -171.41813660]
[30.82051659 -157.07829285]
[35.22151566 -142.73843384]
[49.76846695 -139.53660583]
[60.83321762 -129.41596985]
[65.37658691 -115.02069092]
[62.08288574 -100.18666077]
[51.73893356 -88.91945648]
[56.13993073 -74.57961273]
[60.54092789 -60.23976135]
[64.94192505 -45.89991760]
[69.34292603 -31.56006813]
[79.87914276 -25.61745644]
[83.66304779 -13.70671177]
[78.14632416 -2.04786992]
[82.33333588 12.35591221]
[86.52034760 26.75969505]
[90.70735931 41.16347504]
[94.89437103 55.56725693]
[105.87674713 65.62890625]
[102.29907990 81.04029083]
[114.94650269 88.11058044]
[118.99102020 102.02417755]
[112.10469818 114.77269745]
[116.29170990 129.17648315]
[120.58583069 143.54869080]
[124.98683167 157.88853455]
[136.43258667 168.81123352]
[132.76997375 183.24850464]
[137.17097473 197.58834839]
[141.57197571 211.92819214]
[153.01773071 222.85090637]
[149.35511780 237.28816223]
[153.75611877 251.62800598]
[158.15711975 265.96786499]
[162.55812073 280.30770874]
[173.56649780 287.02917480]
[176.93688965 299.06347656]
[171.38766479 309.81210327]
[175.57467651 324.21588135]
[186.85653687 335.30776978]
[182.97940063 349.68890381]
[194.26124573 360.78082275]
[190.38410950 375.16195679]
[201.66596985 386.25384521]
[197.78881836 400.63497925]
[201.97583008 415.03875732]
[206.16284180 429.44253540]
[210.34985352 443.84631348]
[214.53686523 458.25012207]
[229.44927979 456.36160278]
[244.47351074 456.82928467]
[259.23959351 459.64163208]
[273.38388062 464.72940063]
[286.55807495 471.96731567]
[298.43774414 481.17709351]
[308.73034668 492.13195801]
[317.18237305 504.56213379]
[323.58575439 518.16149902]
[327.78274536 532.59521484]
[329.67001343 547.50781250]
[329.20111084 562.53198242]
[326.38754272 577.29785156]
[321.29858398 591.44171143]
[314.05960083 604.61529541]
[304.84884644 616.49420166]
[293.89312744 626.78588867]
[281.46224976 635.23693848]
[267.86233521 641.63916016]
[253.42828369 645.83496094]
[238.51556396 647.72100830]
[223.49140930 647.25085449]
[208.72578430 644.43609619]
[194.58233643 639.34594727]
[181.40933228 632.10589600]
[169.53118896 622.89416504]
[159.24041748 611.93756104]
[150.79042053 599.50598145]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 182]
[11 181]
[12 180]
[13 179]
[14 178]
[16 176]
[18 174]
[20 172]
[21 171]
[23 168]
[24 167]
[25 166]
[26 165]
[28 163]
[29 162]
[30 161]
[32 159]
[33 158]
[35 157]
[36 156]
[39 153]
[41 151]
[42 150]
[43 149]
[44 148]
[45 147]
[47 144]
[48 143]
[49 142]
[50 141]
[51 140]
[56 135]
[57 134]
[58 133]
[59 132]
[60 131]
[70 130]
[71 129]
[72 127]
[73 126]
[76 124]
[77 123]
[78 122]
[79 121]
[80 120]
[81 119]
[91 118]
[92 117]
[93 116]
[95 113]
[96 112]
[97 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
