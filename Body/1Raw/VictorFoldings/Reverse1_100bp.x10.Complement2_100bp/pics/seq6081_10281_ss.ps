%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[199.65750122 499.31561279]
[196.33523560 484.68817139]
[193.01298523 470.06069946]
[189.69071960 455.43322754]
[174.95997620 452.99719238]
[162.24971008 445.08551025]
[153.51324463 432.87734985]
[150.10720825 418.21493530]
[152.58094788 403.32553101]
[160.58821106 390.48318481]
[172.93527222 381.66128540]
[169.61302185 367.03381348]
[166.29075623 352.40634155]
[162.96849060 337.77890015]
[145.76692200 328.63449097]
[140.75906372 309.49227905]
[151.60839844 292.58157349]
[147.63630676 278.11706543]
[143.66419983 263.65252686]
[139.69210815 249.18800354]
[128.86076355 238.96395874]
[132.66748047 223.60754395]
[128.69537354 209.14302063]
[124.72328186 194.67849731]
[120.32228088 180.33865356]
[115.49628448 166.13619995]
[110.56468964 151.97006226]
[105.52777863 137.84103394]
[100.49085999 123.71200562]
[95.45394135 109.58296967]
[89.68791199 95.73548889]
[83.20841217 82.20714569]
[76.72891998 68.67879486]
[70.24942017 55.15045166]
[62.78168106 42.14149857]
[54.36706161 29.72400284]
[45.95244598 17.30650711]
[37.53782654 4.88901234]
[29.12320709 -7.52848339]
[20.70858765 -19.94597816]
[12.29397011 -32.36347580]
[3.87935114 -44.78097153]
[-4.53526735 -57.19846344]
[-12.94988632 -69.61595917]
[-12.00920963 -54.64548492]
[-16.79632378 -40.42987823]
[-26.60108948 -29.07793617]
[-39.96902847 -22.27365494]
[-54.91708374 -21.02640915]
[-69.22780609 -25.52121925]
[-80.77827454 -35.09130859]
[-87.85505676 -48.31700897]
[-89.40834808 -63.23637009]
[-85.20772552 -77.63618469]
[-75.87633514 -89.38034058]
[-62.79842377 -96.72664642]
[-47.91402817 -98.58533478]
[-33.43115234 -94.68067169]
[-21.49952316 -85.59332275]
[-27.16230965 -99.48334503]
[-41.45365143 -105.67974091]
[-46.99865341 -119.84687042]
[-41.00326920 -133.43328857]
[-46.66605759 -147.32331848]
[-52.32884216 -161.21334839]
[-58.09487534 -175.06083679]
[-58.93479919 -160.08436584]
[-62.82863235 -145.59858704]
[-69.61080170 -132.21940613]
[-78.99292755 -120.51575470]
[-90.57608795 -110.98524475]
[-103.86774445 -104.03313446]
[-118.30273438 -99.95503235]
[-133.26728821 -98.92433167]
[-148.12507629 -100.98487091]
[-162.24436951 -106.04901886]
[-175.02479553 -113.90145874]
[-185.92292786 -124.20829773]
[-194.47535706 -136.53128052]
[-200.31843567 -150.34642029]
[-203.20373535 -165.06631470]
[-203.00854492 -180.06504822]
[-199.74116516 -194.70486450]
[-193.54054260 -208.36328125]
[-184.67033386 -220.45951843]
[-173.50767517 -230.47926331]
[-160.52723694 -237.99645996]
[-146.28094482 -242.69146729]
[-131.37455750 -244.36465454]
[-116.44189453 -242.94488525]
[-102.11791992 -238.49250793]
[-89.01167297 -231.19686890]
[-77.68045807 -221.36816406]
[-68.60607147 -209.42431641]
[-62.17430878 -195.87301636]
[-61.95098114 -210.87135315]
[-61.72765350 -225.86968994]
[-61.50432587 -240.86802673]
[-61.28099823 -255.86636353]
[-75.11722565 -262.22866821]
[-85.16459656 -273.67288208]
[-89.68233490 -288.21624756]
[-87.88772583 -303.33905029]
[-80.09169006 -316.42117310]
[-67.64494324 -325.19604492]
[-52.70394897 -328.14337158]
[-37.85733795 -324.75250244]
[-25.67736626 -315.61093140]
[-18.27429008 -302.30252075]
[-16.93073845 -287.13296509]
[-21.87948799 -272.73056030]
[-32.26313782 -261.59054565]
[-46.28266144 -255.64303589]
[-46.50598907 -240.64469910]
[-46.72931671 -225.64636230]
[-46.95264435 -210.64802551]
[-47.17597198 -195.64968872]
[-44.29069901 -180.92979431]
[-38.78071213 -176.00416565]
[-38.43881607 -166.87612915]
[-32.77602768 -152.98611450]
[-27.11324310 -139.09608459]
[-13.32761383 -133.57412720]
[-7.38687420 -119.56832886]
[-13.27228260 -105.14613342]
[-7.60949612 -91.25610352]
[-0.53239053 -78.03057861]
[7.88222790 -65.61308289]
[16.29684639 -53.19558716]
[24.71146584 -40.77809143]
[33.12608337 -28.36059761]
[41.54070282 -15.94310188]
[49.95532227 -3.52560639]
[58.36993790 8.89188862]
[66.78456116 21.30938530]
[75.19917297 33.72687912]
[75.73070526 18.73629951]
[83.60235596 5.96769857]
[96.75648499 -1.24124420]
[111.75463867 -1.00612712]
[124.67634583 6.61159086]
[132.14389038 19.62065506]
[132.20527649 34.62052917]
[124.84445953 47.69028091]
[111.98554230 55.41350937]
[96.98981476 55.77138138]
[83.77777100 48.67095566]
[90.25726318 62.19929886]
[96.73676300 75.72764587]
[103.21625519 89.25598907]
[108.11766815 75.07938385]
[120.91983032 67.26243591]
[135.76976013 69.37895203]
[145.87826538 80.46128082]
[146.62388611 95.44273376]
[137.66572571 107.47399902]
[123.09933472 111.05453491]
[109.58296967 104.54605865]
[114.61988831 118.67508698]
[119.65680695 132.80412292]
[124.69371796 146.93315125]
[130.52308655 153.96566772]
[129.69874573 161.31019592]
[134.52473450 175.51264954]
[137.89002991 178.25651550]
[139.99539185 181.59297180]
[140.80924988 185.05317688]
[140.45552063 188.20619202]
[139.18780518 190.70640564]
[143.15989685 205.17092896]
[147.13200378 219.63545227]
[158.24746704 230.89408875]
[154.15663147 245.21591187]
[158.12873840 259.68041992]
[162.10083008 274.14495850]
[166.07292175 288.60946655]
[176.36825562 291.40768433]
[184.51115417 298.17529297]
[189.07516479 307.63958740]
[189.29713440 318.06378174]
[185.20402527 327.56546021]
[177.59596252 334.45663452]
[180.91821289 349.08410645]
[184.24047852 363.71154785]
[187.56272888 378.33901978]
[202.50918579 380.96188354]
[215.27833557 389.08541870]
[223.94110107 401.44543457]
[227.20289612 416.14062500]
[224.59707642 430.92489624]
[216.55140686 443.55075073]
[204.31817627 452.11096191]
[207.64044189 466.73843384]
[210.96270752 481.36590576]
[214.28495789 495.99334717]
[229.32675171 497.86956787]
[242.81831360 504.77996826]
[253.13044739 515.89013672]
[259.01791382 529.85845947]
[259.76980591 544.99810791]
[255.29528809 559.48101807]
[246.13470459 571.55828857]
[233.39424133 579.77142334]
[218.61235046 583.12878418]
[203.57403564 581.22485352]
[190.09524536 574.28961182]
[179.80360413 563.16046143]
[173.94187927 549.18133545]
[173.21789551 534.04028320]
[177.71908569 519.56561279]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 195]
[2 194]
[3 193]
[4 192]
[11 185]
[12 184]
[13 183]
[14 182]
[17 176]
[18 175]
[19 174]
[20 173]
[22 171]
[23 170]
[24 169]
[25 164]
[26 163]
[27 161]
[28 160]
[29 159]
[30 158]
[31 150]
[32 149]
[33 148]
[34 147]
[35 136]
[36 135]
[37 134]
[38 133]
[39 132]
[40 131]
[41 130]
[42 129]
[43 128]
[44 127]
[59 126]
[60 125]
[63 122]
[64 121]
[65 120]
[66 118]
[95 117]
[96 116]
[97 115]
[98 114]
[99 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
