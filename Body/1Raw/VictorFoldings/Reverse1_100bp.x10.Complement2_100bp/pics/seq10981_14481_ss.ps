%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAUUCCUCUAAACAUCCCUCUAAUCAUAUCUCUCCAUCUCAAAAAAAGCACUAUCACCAAGUGACCUAUUCACCGCAACCGAACGGUACUAACACUCxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[158.34698486 539.81475830]
[155.50093079 525.07208252]
[154.26554871 510.10806274]
[154.65533447 495.09823608]
[156.66571045 480.21853638]
[160.27310181 465.64340210]
[165.43522644 451.54376221]
[172.09155273 438.08493042]
[180.16404724 425.42465210]
[189.55804443 413.71142578]
[200.16342163 403.08255005]
[211.85583496 393.66262817]
[224.49819946 385.56213379]
[217.81800842 372.13177490]
[211.13780212 358.70138550]
[204.45761108 345.27099609]
[193.09346008 341.12582397]
[187.41815186 329.99142456]
[190.96009827 317.58911133]
[184.48060608 304.06076050]
[178.00111389 290.53244019]
[171.52160645 277.00408936]
[165.04211426 263.47573853]
[158.56262207 249.94738770]
[152.08312988 236.41905212]
[145.60362244 222.89070129]
[139.12413025 209.36235046]
[133.39970398 204.68766785]
[132.65055847 195.58401489]
[126.37319946 181.96069336]
[120.09583282 168.33738708]
[113.81847382 154.71406555]
[111.23843384 153.61793518]
[108.93712616 151.43376160]
[107.33114624 148.26260376]
[106.79284668 144.35430908]
[107.60003662 140.08789062]
[102.14467621 126.11508942]
[96.68931580 112.14228821]
[90.92328644 98.29480743]
[78.26068115 88.80960846]
[80.18173218 74.03940582]
[74.10790253 60.32413864]
[68.03406525 46.60887146]
[61.96023178 32.89360428]
[55.88639832 19.17833900]
[49.81256485 5.46307182]
[43.73872757 -8.25219440]
[37.66489410 -21.96746063]
[31.59106064 -35.68272781]
[13.63115788 -35.75876999]
[-2.43779612 -43.66141129]
[-13.39718437 -57.75608063]
[-17.07448578 -75.17318726]
[-12.77382278 -92.39232635]
[-1.40708840 -105.95378876]
[-8.08728313 -119.38416290]
[-14.76747799 -132.81452942]
[-27.84099007 -141.72485352]
[-26.58137703 -156.56610107]
[-33.26156998 -169.99649048]
[-47.33916473 -164.77600098]
[-61.89191437 -161.08146667]
[-76.75492859 -158.95474243]
[-91.75979614 -158.41995239]
[-106.73650360 -159.48312378]
[-121.51535034 -162.13223267]
[-135.92887878 -166.33724976]
[-149.81378174 -172.05053711]
[-163.01272583 -179.20735168]
[-175.37615967 -187.72660828]
[-186.76399231 -197.51177979]
[-197.04718018 -208.45198059]
[-206.10923767 -220.42324829]
[-213.84745789 -233.28994751]
[-220.17416382 -246.90629578]
[-225.01768494 -261.11798096]
[-228.32312012 -275.76400757]
[-230.05303955 -290.67843628]
[-230.18782043 -305.69223022]
[-228.72593689 -320.63528442]
[-225.68395996 -335.33828735]
[-221.09637451 -349.63464355]
[-215.01512146 -363.36239624]
[-207.50915527 -376.36593628]
[-198.66348267 -388.49795532]
[-188.57833862 -399.62100220]
[-177.36801147 -409.60903931]
[-165.15953064 -418.34887695]
[-152.09118652 -425.74151611]
[-138.31109619 -431.70312500]
[-123.97537994 -436.16622925]
[-109.24647522 -439.08023071]
[-94.29126740 -440.41213989]
[-79.27922058 -440.14678955]
[-64.38041687 -438.28726196]
[-49.76368713 -434.85458374]
[-35.59464264 -429.88766479]
[-22.03382874 -423.44277954]
[-9.23490334 -415.59298706]
[2.65711474 -406.42715454]
[13.50747871 -396.04922485]
[23.19324493 -384.57672119]
[31.60466766 -372.13967896]
[38.64643860 -358.87899780]
[44.23876572 -344.94494629]
[48.31829071 -330.49539185]
[50.83878326 -315.69406128]
[51.77168655 -300.70867920]
[51.10642624 -285.70904541]
[48.85054779 -270.86508179]
[45.02960968 -256.34500122]
[39.68690109 -242.31333923]
[32.88296509 -228.92907715]
[24.69489098 -216.34387207]
[15.21545792 -204.70031738]
[4.55207539 -194.13034058]
[-7.17443228 -184.75370789]
[-19.83119583 -176.67668152]
[-13.15100098 -163.24630737]
[-0.55530059 -155.29661560]
[-1.33710158 -139.49473572]
[5.34309292 -126.06435394]
[12.02328777 -112.63397980]
[24.16841316 -114.10173035]
[36.20216370 -111.76811981]
[46.96113586 -105.84349823]
[55.40048218 -96.88610077]
[60.69538879 -85.74951172]
[62.32166672 -73.50131989]
[60.10761261 -61.32078552]
[54.25199509 -50.38529587]
[45.30632782 -41.75656128]
[51.38016129 -28.04129601]
[57.45399475 -14.32602882]
[63.52782822 -0.61076194]
[69.60166168 13.10450459]
[75.67549896 26.81977081]
[81.74932861 40.53503799]
[87.82316589 54.25030518]
[93.89700317 67.96556854]
[106.12516785 76.46976471]
[104.63854980 92.22097015]
[108.00294495 94.10597992]
[110.52011108 97.46480560]
[111.55047607 101.88581848]
[110.66211700 106.68693542]
[116.11747742 120.65972900]
[121.57283020 134.63252258]
[127.44179535 148.43670654]
[133.71914673 162.06002808]
[139.99650574 175.68333435]
[146.27388000 189.30665588]
[152.65248108 202.88285828]
[159.13197327 216.41120911]
[165.61146545 229.93954468]
[172.09097290 243.46789551]
[178.57046509 256.99624634]
[185.04995728 270.52459717]
[191.52944946 284.05294800]
[198.00895691 297.58126831]
[204.48844910 311.10961914]
[219.91822815 321.15966797]
[217.88798523 338.59082031]
[224.56817627 352.02117920]
[231.24838257 365.45156860]
[237.92857361 378.88192749]
[252.01618958 373.68710327]
[266.58288574 370.04586792]
[281.45788574 368.00094604]
[296.46676636 367.57632446]
[311.43359375 368.77697754]
[326.18286133 371.58877563]
[340.54165649 375.97882080]
[354.34161377 381.89562988]
[367.42092896 389.26980591]
[379.62628174 398.01489258]
[390.81457520 408.02835083]
[400.85458374 419.19281006]
[409.62866211 431.37734985]
[417.03387451 444.43914795]
[422.98342896 458.22500610]
[427.40756226 472.57333374]
[430.25439453 487.31585693]
[431.49060059 502.27978516]
[431.10162354 517.28967285]
[429.09204102 532.16949463]
[425.48541260 546.74475098]
[420.32406616 560.84466553]
[413.66845703 574.30389404]
[405.59664917 586.96459961]
[396.20327759 598.67834473]
[385.59848022 609.30780029]
[373.90655518 618.72833252]
[361.26464844 626.82952881]
[347.82092285 633.51635742]
[333.73303223 638.71044922]
[319.16613770 642.35089111]
[304.29101562 644.39495850]
[289.28210449 644.81878662]
[274.31533813 643.61737061]
[259.56622314 640.80474854]
[245.20768738 636.41394043]
[231.40805054 630.49639893]
[218.32911682 623.12152100]
[206.12422180 614.37579346]
[194.93649292 604.36169434]
[184.89706421 593.19671631]
[176.12367249 581.01165771]
[168.71916199 567.94952393]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 167]
[14 166]
[15 165]
[16 164]
[19 162]
[20 161]
[21 160]
[22 159]
[23 158]
[24 157]
[25 156]
[26 155]
[27 154]
[29 153]
[30 152]
[31 151]
[32 150]
[37 149]
[38 148]
[39 147]
[40 143]
[42 141]
[43 140]
[44 139]
[45 138]
[46 137]
[47 136]
[48 135]
[49 134]
[50 133]
[56 124]
[57 123]
[58 122]
[60 120]
[61 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
