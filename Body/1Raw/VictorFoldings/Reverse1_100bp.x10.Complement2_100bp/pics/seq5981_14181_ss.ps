%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[174.01637268 373.88732910]
[184.80212402 363.40008545]
[197.33139038 355.07348633]
[191.46243286 341.26931763]
[185.59347534 327.46514893]
[180.08348083 322.53952026]
[179.74159241 313.41146851]
[174.07881165 299.52145386]
[168.41601562 285.63143921]
[154.63038635 280.10946655]
[148.68965149 266.10366821]
[154.57505798 251.68147278]
[148.91227722 237.79144287]
[136.94273376 228.92695618]
[138.89765930 213.22698975]
[133.23486328 199.33695984]
[127.57208252 185.44692993]
[121.90929413 171.55691528]
[116.24650574 157.66688538]
[110.48047638 143.81939697]
[104.61151123 130.01521301]
[98.74255371 116.21104431]
[85.08428955 106.47306824]
[87.30068207 89.84587097]
[81.22685242 76.13059998]
[75.15301514 62.41533279]
[62.49040985 52.93013763]
[64.41146088 38.15993500]
[58.33762741 24.44466972]
[52.26379395 10.72940254]
[46.18996048 -2.98586464]
[40.11612701 -16.70113182]
[25.64662933 -22.46926880]
[19.68227768 -36.46502304]
[25.27048683 -50.22393036]
[19.19665146 -63.93919754]
[13.12281799 -77.65446472]
[0.46021202 -87.13966370]
[2.38126540 -101.90985870]
[-3.69256854 -115.62512970]
[-9.96992970 -129.24844360]
[-16.44942474 -142.77679443]
[-22.92892075 -156.30513000]
[-34.81258392 -161.31925964]
[-39.93086243 -172.72042847]
[-36.03749847 -184.17330933]
[-42.31485748 -197.79663086]
[-48.59222031 -211.41993713]
[-54.86957932 -225.04325867]
[-61.14693832 -238.66656494]
[-67.42430115 -252.28988647]
[-73.70166016 -265.91320801]
[-87.78805542 -260.73501587]
[-102.24132538 -256.69235229]
[-116.97010040 -253.81080627]
[-131.88125610 -252.10858154]
[-146.88050842 -251.59643555]
[-161.87304688 -252.27761841]
[-176.76406860 -254.14779663]
[-191.45942688 -257.19519043]
[-205.86621094 -261.40048218]
[-219.89334106 -266.73712158]
[-233.45213318 -273.17135620]
[-246.45684814 -280.66250610]
[-258.82528687 -289.16320801]
[-270.47924805 -298.61972046]
[-281.34500122 -308.97225952]
[-291.35394287 -320.15533447]
[-300.44268799 -332.09829712]
[-308.55386353 -344.72561646]
[-315.63613892 -357.95745850]
[-321.64474487 -371.71014404]
[-326.54168701 -385.89675903]
[-330.29602051 -400.42761230]
[-332.88400269 -415.21078491]
[-334.28927612 -430.15286255]
[-334.50292969 -445.15933228]
[-333.52365112 -460.13534546]
[-331.35760498 -474.98620605]
[-328.01849365 -489.61804199]
[-323.52743530 -503.93832397]
[-317.91281128 -517.85650635]
[-311.21011353 -531.28460693]
[-303.46176147 -544.13775635]
[-294.71670532 -556.33465576]
[-285.03021240 -567.79815674]
[-274.46359253 -578.45587158]
[-263.08358765 -588.24029541]
[-250.96218872 -597.08972168]
[-238.17602539 -604.94805908]
[-224.80592346 -611.76574707]
[-210.93641663 -617.49957275]
[-196.65519714 -622.11334229]
[-182.05255127 -625.57788086]
[-167.22080994 -627.87127686]
[-152.25375366 -628.97900391]
[-137.24598694 -628.89410400]
[-122.29241180 -627.61706543]
[-107.48757172 -625.15606689]
[-92.92506409 -621.52655029]
[-78.69696045 -616.75146484]
[-64.89321136 -610.86108398]
[-51.60109329 -603.89263916]
[-38.90464783 -595.89007568]
[-26.88414383 -586.90411377]
[-15.61557961 -576.99151611]
[-5.17020082 -566.21496582]
[4.38595295 -554.64257812]
[12.99246407 -542.34753418]
[20.59491920 -529.40759277]
[27.14525032 -515.90447998]
[32.60204697 -501.92367554]
[36.93080521 -487.55349731]
[40.10416031 -472.88482666]
[42.10204697 -458.01040649]
[42.91183472 -443.02426147]
[42.52840042 -428.02114868]
[40.95417404 -413.09594727]
[38.19910812 -398.34298706]
[34.28061676 -383.85556030]
[29.22347450 -369.72528076]
[23.05965805 -356.04141235]
[15.82813549 -342.89056396]
[7.57462788 -330.35583496]
[-1.64868188 -318.51644897]
[-11.78348160 -307.44732666]
[-22.76569366 -297.21838379]
[-34.52588654 -287.89431763]
[-46.98970413 -279.53408813]
[-60.07834625 -272.19055176]
[-53.80098343 -258.56726074]
[-47.52362442 -244.94393921]
[-41.24626160 -231.32061768]
[-34.96890259 -217.69729614]
[-28.69154167 -204.07398987]
[-22.41418076 -190.45066833]
[-7.55973864 -181.10655212]
[-9.40057564 -162.78463745]
[-2.92107964 -149.25628662]
[3.55841637 -135.72793579]
[7.68530989 -133.32423401]
[10.34602547 -128.30252075]
[10.02269840 -121.69895935]
[16.09653282 -107.98369598]
[28.32469749 -99.47950745]
[26.83808517 -83.72830200]
[32.91191864 -70.01303101]
[38.98575211 -56.29776382]
[52.92967987 -51.18870544]
[59.28479004 -37.36599731]
[53.83139420 -22.77496529]
[59.90522766 -9.05969810]
[65.97906494 4.65556812]
[72.05289459 18.37083435]
[78.12673187 32.08610153]
[90.35489655 40.59029007]
[88.86827850 56.34149933]
[94.94211578 70.05676270]
[101.01595306 83.77203369]
[111.60806274 88.61439514]
[116.24458313 99.29821014]
[112.54673004 110.34207916]
[118.41568756 124.14625549]
[124.28465271 137.95043945]
[130.52226257 144.62350464]
[130.13653564 152.00408936]
[135.79931641 165.89411926]
[141.46211243 179.78414917]
[147.12489319 193.67417908]
[152.78767395 207.56420898]
[165.16226196 217.42221069]
[162.80229187 232.12866211]
[168.46508789 246.01869202]
[182.75642395 252.21508789]
[188.30142212 266.38220215]
[182.30604553 279.96862793]
[187.96882629 293.85867310]
[193.63162231 307.74868774]
[199.39764404 321.59619141]
[205.26661682 335.40036011]
[211.13557434 349.20452881]
[225.82502747 345.95886230]
[240.86077881 345.46786499]
[255.73069763 347.74826050]
[269.92831421 352.72241211]
[282.97006226 360.22088623]
[294.41177368 369.98828125]
[303.86373901 381.69192505]
[311.00399780 394.93319702]
[315.58938599 409.26110840]
[317.46371460 424.18765259]
[316.56314087 439.20440674]
[312.91836548 453.79998779]
[306.65347290 467.47717285]
[297.98190308 479.77020264]
[287.19897461 490.26034546]
[274.67196655 498.59030151]
[260.82751465 504.47637939]
[246.13717651 507.71810913]
[231.10130310 508.20504761]
[216.23199463 505.92062378]
[202.03572083 500.94265747]
[188.99597168 493.44067383]
[177.55690002 483.67019653]
[168.10810852 471.96398926]
[160.97140503 458.72079468]
[156.38987732 444.39166260]
[154.51957703 429.46463013]
[155.42419434 414.44808960]
[159.07292175 399.85351562]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 181]
[4 180]
[5 179]
[7 178]
[8 177]
[9 176]
[12 173]
[13 172]
[15 170]
[16 169]
[17 168]
[18 167]
[19 166]
[20 164]
[21 163]
[22 162]
[24 159]
[25 158]
[26 157]
[28 155]
[29 154]
[30 153]
[31 152]
[32 151]
[35 148]
[36 147]
[37 146]
[39 144]
[40 143]
[41 140]
[42 139]
[43 138]
[46 136]
[47 135]
[48 134]
[49 133]
[50 132]
[51 131]
[52 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
