%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGAUGCGGGAGAGUCGGCUACUUGUCAACCUUAUCCAACAAUCGCCAUUGAUUCUAAUCAUACCAUUAAUCCUUCUACUCAUCUAUAAACUUCUUGACxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[96.70627594 713.22802734]
[87.68908691 701.18286133]
[81.11465454 687.64868164]
[77.22064972 673.11480713]
[76.14783478 658.10662842]
[77.93498993 643.16668701]
[82.51751709 628.83496094]
[89.72975159 615.62969971]
[99.31097412 604.02807617]
[110.91484833 594.44964600]
[124.12187958 587.24060059]
[138.45465088 582.66149902]
[136.67218018 567.76776123]
[134.88972473 552.87402344]
[133.10725403 537.98034668]
[130.57632446 535.52539062]
[129.10873413 531.72259521]
[129.32502747 527.08508301]
[131.59309387 522.38372803]
[130.47744751 507.42526245]
[129.36180115 492.46679688]
[128.24615479 477.50833130]
[114.03974152 472.91409302]
[102.64373779 463.20446777]
[95.81490326 449.83541870]
[94.62158203 434.82995605]
[99.27666473 420.47225952]
[109.10040283 408.95977783]
[122.61950684 402.06704712]
[121.50385284 387.10861206]
[120.38820648 372.15014648]
[119.27256012 357.19168091]
[118.15690613 342.23324585]
[117.04125977 327.27478027]
[106.39354706 313.32513428]
[114.52676392 296.80447388]
[113.18852997 281.86428833]
[111.85029602 266.92410278]
[110.51206207 251.98390198]
[109.17382812 237.04371643]
[92.38997650 231.43850708]
[79.71221161 219.01802063]
[73.72848511 202.25279236]
[75.68864441 184.50663757]
[85.24365234 169.36184692]
[100.50669098 159.89593506]
[98.50267792 145.03041077]
[96.49866486 130.16488647]
[94.49465179 115.29935455]
[83.90264893 102.29221344]
[90.44290924 86.84548950]
[88.21778870 72.01145172]
[83.84999084 63.98897171]
[86.07168579 56.94014740]
[84.06766510 42.07461929]
[82.06365204 27.20909119]
[80.05963898 12.34356403]
[77.17436981 -2.37632775]
[73.41806793 -16.89838791]
[69.66176605 -31.42044640]
[65.90546417 -45.94250488]
[62.14916611 -60.46456528]
[46.42864609 -60.91662598]
[31.48488045 -65.77115631]
[18.52391243 -74.62777710]
[8.58933640 -86.76346588]
[2.47827721 -101.19157410]
[0.67743212 -116.74205017]
[3.32432175 -132.15632629]
[10.19682217 -146.18916321]
[20.73178291 -157.70927429]
[34.07116318 -165.79048157]
[30.09906769 -180.25500488]
[26.12697220 -194.71952820]
[22.15487480 -209.18405151]
[18.07520866 -223.61860657]
[13.88819695 -238.02238464]
[-1.03331769 -236.19357300]
[-16.05496025 -236.78216553]
[-30.78763199 -239.77290344]
[-44.84972382 -245.08833313]
[-57.87699127 -252.59075928]
[-69.53199768 -262.08584595]
[-79.51285553 -273.32769775]
[-87.56102753 -286.02505493]
[-93.46804810 -299.84906006]
[-97.08091736 -314.44165039]
[-98.30605316 -329.42480469]
[-97.11170959 -344.41046143]
[-93.52883911 -359.01043701]
[-87.65023804 -372.84655762]
[-79.62817383 -385.56042480]
[-69.67044067 -396.82275391]
[-58.03497314 -406.34176636]
[-45.02314758 -413.87097168]
[-30.97200966 -419.21527100]
[-16.24551582 -422.23629761]
[-1.22511411 -422.85574341]
[13.70012760 -421.05758667]
[28.14361000 -416.88842773]
[41.73121262 -410.45623779]
[54.11098480 -401.92761230]
[64.96225739 -391.52346802]
[74.00396729 -379.51330566]
[81.00189209 -366.20822144]
[85.77478790 -351.95285034]
[88.19902039 -337.11645508]
[88.21178436 -322.08328247]
[85.81276703 -307.24276733]
[81.06409454 -292.97930908]
[74.08877563 -279.66235352]
[65.06748962 -267.63687134]
[54.23390198 -257.21432495]
[41.86863708 -248.66467285]
[28.29197884 -242.20939636]
[32.47899246 -227.80561829]
[37.36462021 -222.26013184]
[36.61940002 -213.15614319]
[40.59149551 -198.69161987]
[44.56359100 -184.22709656]
[48.53568649 -169.76257324]
[62.86905289 -169.80426025]
[76.73537445 -166.12727356]
[89.18578339 -158.97669983]
[99.36663055 -148.83558655]
[106.57799530 -136.39222717]
[110.32180786 -122.49353027]
[110.33624268 -108.08730316]
[106.61402130 -94.15768433]
[99.40335083 -81.65785980]
[89.19136810 -71.44487762]
[76.67122650 -64.22086334]
[80.42752838 -49.69880676]
[84.18383026 -35.17674637]
[87.94012451 -20.65468788]
[91.69642639 -6.13262844]
[98.42936707 -19.53664207]
[111.70175934 -26.52544975]
[126.56334686 -24.49239922]
[137.47111511 -14.19576931]
[140.35673523 0.52405345]
[134.14395142 14.17693806]
[121.14996338 21.67069626]
[106.22122192 20.21034241]
[94.92517090 10.33955002]
[96.92918396 25.20507812]
[98.93319702 40.07060623]
[100.93721008 54.93613434]
[103.05183411 69.78633118]
[105.27695465 84.62037659]
[114.20864868 92.09473419]
[115.85051727 103.62493134]
[109.36018372 113.29534149]
[111.36419678 128.16087341]
[113.36820984 143.02639771]
[115.37222290 157.89192200]
[127.51114655 160.56147766]
[138.22465515 166.81401062]
[146.48706055 176.03355408]
[151.51269531 187.32098389]
[152.83058167 199.58160400]
[150.32853699 211.63137817]
[144.26254272 222.31127930]
[135.23063660 230.59872437]
[124.11401367 235.70549011]
[125.45224762 250.64567566]
[126.79048157 265.58584595]
[128.12870789 280.52603149]
[129.46694946 295.46621704]
[138.84609985 304.32028198]
[139.65313721 316.79156494]
[131.99971008 326.15914917]
[133.11535645 341.11758423]
[134.23101807 356.07604980]
[135.34666443 371.03448486]
[136.46231079 385.99295044]
[137.57795715 400.95141602]
[151.96995544 405.76242065]
[163.39279175 415.69027710]
[170.12620544 429.19857788]
[171.17201233 444.21502686]
[166.40191650 458.44918823]
[156.57232666 469.74188232]
[143.20460510 476.39270020]
[144.32025146 491.35113525]
[145.43589783 506.30960083]
[146.55155945 521.26806641]
[148.00097656 536.19787598]
[149.78343201 551.09155273]
[151.56590271 565.98529053]
[153.34837341 580.87902832]
[168.35693359 581.94659424]
[182.89215088 585.83544922]
[196.42861938 592.40515137]
[208.47697449 601.41815186]
[218.60168457 612.54858398]
[226.43675232 625.39410400]
[231.69894409 639.49041748]
[234.19802856 654.32788086]
[233.84367371 669.37023926]
[230.64868164 684.07354736]
[224.72854614 697.90643311]
[216.29730225 710.36877441]
[205.65969849 721.01013184]
[193.20028687 729.44573975]
[179.36949158 735.37072754]
[164.66726685 738.57092285]
[149.62507629 738.93054199]
[134.78671265 736.43664551]
[120.68856812 731.17938232]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 191]
[13 190]
[14 189]
[15 188]
[19 187]
[20 186]
[21 185]
[22 184]
[29 177]
[30 176]
[31 175]
[32 174]
[33 173]
[34 172]
[36 169]
[37 168]
[38 167]
[39 166]
[40 165]
[46 156]
[47 155]
[48 154]
[49 153]
[51 150]
[52 149]
[54 148]
[55 147]
[56 146]
[57 145]
[58 136]
[59 135]
[60 134]
[61 133]
[62 132]
[72 121]
[73 120]
[74 119]
[75 118]
[76 116]
[77 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
