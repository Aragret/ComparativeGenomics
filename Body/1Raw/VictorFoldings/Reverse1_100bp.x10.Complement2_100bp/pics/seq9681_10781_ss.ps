%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGGCAGCCUUUACCACUUCCCUCUGAGCUUCAUGAGACUCCGAACAUCCUCCCAUUUUAUCUCUGGGUCAUUUUAACAUUAUUCGUCACGAACUUAAUxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[87.56226349 505.67712402]
[75.79904938 515.07501221]
[62.33877563 521.82147217]
[47.76987457 525.62158203]
[32.72923660 526.30920410]
[17.87436867 523.85430908]
[3.85466480 518.36419678]
[-8.71699333 510.07882690]
[-19.29102707 499.36044312]
[-27.40518570 486.67761230]
[-32.70475006 472.58477783]
[-34.95805359 457.69799805]
[-34.06658173 442.66806030]
[-30.06931305 428.15200806]
[-23.14098740 414.78442383]
[-13.58448315 403.14968872]
[-1.81756914 393.75643921]
[11.64535618 387.01525879]
[26.21575165 383.22088623]
[41.25666046 382.53918457]
[43.70238876 367.73992920]
[46.14811707 352.94064331]
[48.59384155 338.14138794]
[51.03956985 323.34210205]
[37.66244125 318.56561279]
[25.32279396 311.52307129]
[14.40102863 302.43014526]
[5.23408699 291.56576538]
[-1.89494252 279.26348877]
[-6.76556635 265.90130615]
[-9.22670460 251.89002991]
[-9.20138073 237.66069031]
[-6.68912125 223.65122986]
[-1.76601696 210.29304504]
[5.41758537 197.99766541]
[14.64167500 187.14418030]
[25.62331200 178.06741333]
[38.02531052 171.04769897]
[51.46658325 166.30216980]
[65.53386688 163.97804260]
[79.79440308 164.14811707]
[82.67967987 149.42822266]
[85.56494904 134.70832825]
[88.45022583 119.98844147]
[91.33549500 105.26854706]
[89.67234039 97.38143921]
[94.37486267 90.35170746]
[97.47897339 75.67639923]
[100.58308411 61.00109863]
[103.68718719 46.32579803]
[106.79129791 31.65049553]
[100.42271423 20.43426132]
[103.31025696 8.27507210]
[113.37529755 1.56527150]
[116.69756317 -13.06218910]
[120.01982117 -27.68964958]
[105.59196472 -31.80668068]
[91.41046906 -36.70546341]
[77.51765442 -42.37137985]
[63.95498657 -48.78751755]
[50.76293182 -55.93473053]
[37.98086929 -63.79168701]
[25.64694595 -72.33493805]
[13.79796505 -81.53899384]
[2.46929359 -91.37637329]
[-8.30526066 -101.81772614]
[-18.49354172 -112.83189392]
[-28.06514359 -124.38599396]
[-36.99150085 -136.44555664]
[-45.24597168 -148.97459412]
[-52.80392456 -161.93568420]
[-59.64280319 -175.29019165]
[-65.74219513 -188.99822998]
[-71.08390045 -203.01889038]
[-75.65197754 -217.31034851]
[-79.43278503 -231.82992554]
[-82.41504669 -246.53431702]
[-84.58986664 -261.37960815]
[-85.95074463 -276.32153320]
[-86.49362946 -291.31549072]
[-86.21688843 -306.31668091]
[-85.12136078 -321.28039551]
[-83.21030426 -336.16195679]
[-80.48942566 -350.91696167]
[-76.96685028 -365.50134277]
[-72.65309143 -379.87158203]
[-67.56101227 -393.98483276]
[-61.70582199 -407.79895020]
[-55.10498810 -421.27270508]
[-47.77821350 -434.36587524]
[-39.74736023 -447.03939819]
[-31.03639603 -459.25546265]
[-21.67132187 -470.97756958]
[-11.68008327 -482.17080688]
[-1.09250081 -492.80169678]
[10.05982971 -502.83853149]
[21.74362373 -512.25140381]
[33.92401505 -521.01214600]
[46.56464767 -529.09466553]
[59.62779999 -536.47485352]
[73.07448578 -543.13067627]
[86.86457825 -549.04217529]
[100.95690918 -554.19183350]
[115.30944061 -558.56427002]
[129.87931824 -562.14636230]
[144.62307739 -564.92742920]
[159.49671936 -566.89923096]
[174.45582581 -568.05584717]
[189.45578003 -568.39379883]
[204.45181274 -567.91217041]
[219.39915466 -566.61230469]
[234.25321960 -564.49810791]
[248.96966553 -561.57586670]
[263.50454712 -557.85437012]
[277.81454468 -553.34472656]
[291.85690308 -548.06030273]
[305.58972168 -542.01690674]
[318.97204590 -535.23260498]
[331.96389771 -527.72766113]
[344.52651978 -519.52441406]
[356.62240601 -510.64733887]
[368.21551514 -501.12298584]
[379.27117920 -490.97976685]
[389.75643921 -480.24792480]
[399.63998413 -468.95950317]
[408.89233398 -457.14822388]
[417.48587036 -444.84927368]
[425.39495850 -432.09939575]
[432.59594727 -418.93661499]
[439.06741333 -405.40026855]
[444.79000854 -391.53070068]
[449.74664307 -377.36932373]
[453.92254639 -362.95840454]
[457.30523682 -348.34094238]
[459.88464355 -333.56054688]
[461.65304565 -318.66137695]
[462.60519409 -303.68786621]
[462.73822021 -288.68469238]
[462.05172729 -273.69662476]
[460.54776001 -258.76843262]
[458.23083496 -243.94464111]
[455.10784912 -229.26950073]
[451.18811035 -214.78680420]
[446.48333740 -200.53976440]
[441.00756836 -186.57092285]
[434.77713013 -172.92193604]
[427.81063843 -159.63357544]
[420.12887573 -146.74546814]
[411.75476074 -134.29608154]
[402.71325684 -122.32258606]
[393.03143311 -110.86070251]
[382.73809814 -99.94464874]
[371.86401367 -89.60698700]
[360.44161987 -79.87858582]
[348.50500488 -70.78845978]
[336.08981323 -62.36375809]
[323.23306274 -54.62961197]
[309.97314453 -47.60910034]
[296.34963989 -41.32318497]
[282.40319824 -35.79061890]
[268.17541504 -31.02791214]
[253.70878601 -27.04928398]
[239.04646301 -23.86660576]
[224.23222351 -21.48937607]
[209.31027222 -19.92469025]
[194.32514954 -19.17721558]
[179.32156372 -19.24918556]
[164.34428406 -20.14038277]
[149.43803406 -21.84815025]
[134.64727783 -24.36738968]
[131.32502747 -9.73992920]
[128.00276184 4.88753080]
[134.08903503 21.34730530]
[121.46660614 34.75460434]
[118.36249542 49.42990875]
[115.25838470 64.10520935]
[112.15427399 78.78050995]
[109.05016327 93.45581818]
[106.05538940 108.15381622]
[103.17011261 122.87371063]
[100.28484344 137.59359741]
[97.39956665 152.31349182]
[94.51429749 167.03338623]
[109.19114685 172.97981262]
[122.43288422 181.65643311]
[133.73797607 192.73252869]
[142.67863464 205.78652954]
[148.91703796 220.32208252]
[152.21804810 235.78691101]
[152.45809937 251.59379578]
[149.62982178 267.14285278]
[143.84228516 281.84439087]
[135.31672668 295.14111328]
[124.37812805 306.52941895]
[111.44286346 315.57833862]
[97.00278473 321.94589233]
[81.60656738 325.39208984]
[65.83884430 325.78784180]
[63.39311218 340.58709717]
[60.94738770 355.38638306]
[58.50165939 370.18563843]
[56.05593109 384.98492432]
[70.07779694 390.46954346]
[82.65270996 398.74993896]
[93.23095703 409.46417236]
[101.35010529 422.14379883]
[106.65522003 436.23455811]
[108.91437531 451.12045288]
[108.02881622 466.15072632]
[104.03726196 480.66833496]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 202]
[21 201]
[22 200]
[23 199]
[24 198]
[41 183]
[42 182]
[43 181]
[44 180]
[45 179]
[47 178]
[48 177]
[49 176]
[50 175]
[51 174]
[54 172]
[55 171]
[56 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
