%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[149.80848694 597.87896729]
[162.77688599 589.99322510]
[160.11108398 575.23199463]
[157.44529724 560.47082520]
[153.16310120 554.44714355]
[154.85140991 545.47009277]
[152.40568542 530.67083740]
[149.84985352 515.89013672]
[147.18405151 501.12893677]
[144.51824951 486.36773682]
[141.17520142 482.95700073]
[139.93925476 477.40997314]
[141.99969482 471.12777710]
[139.77458191 456.29373169]
[137.54946899 441.45968628]
[135.32435608 426.62564087]
[133.09922791 411.79159546]
[130.87411499 396.95755005]
[128.64900208 382.12350464]
[116.55576324 373.50439453]
[114.08786011 358.49224854]
[123.21037292 345.86621094]
[120.98526001 331.03216553]
[118.76013947 316.19812012]
[116.53502655 301.36407471]
[113.29500580 297.85531616]
[112.22475433 292.27395630]
[114.47133636 286.05587769]
[112.68887329 271.16217041]
[109.55475616 267.55850220]
[108.65116119 261.94775391]
[111.08187866 255.79933167]
[109.74364471 240.85914612]
[108.40541077 225.91896057]
[106.73387146 211.01239014]
[104.72985840 196.14686584]
[102.72584534 181.28134155]
[100.72183228 166.41580200]
[91.29553986 158.83480835]
[89.50430298 146.46649170]
[96.84815979 135.86315918]
[95.06568909 120.96943665]
[93.28322601 106.07572174]
[90.61996460 103.28656006]
[89.19905090 99.33702087]
[89.51116180 94.80826569]
[91.76907349 90.47909546]
[90.65341949 75.52064514]
[89.53777313 60.56219101]
[88.42212677 45.60373688]
[86.19700623 30.76969337]
[82.87474823 16.14223289]
[79.55249023 1.51477277]
[76.00485229 -2.31424093]
[74.43743896 -6.68419695]
[74.72470093 -10.75021839]
[76.42395782 -13.83969498]
[73.75816345 -28.60091209]
[71.09236908 -43.36212921]
[68.42656708 -58.12334824]
[65.76077271 -72.88456726]
[61.15605545 -80.77343750]
[63.16688919 -87.88528442]
[60.72116089 -102.68455505]
[56.23440552 -110.64111328]
[58.35090256 -117.72223663]
[56.12578583 -132.55627441]
[53.90066528 -147.39031982]
[38.78847885 -154.98754883]
[31.25715256 -169.94683838]
[34.09784698 -186.28367615]
[45.99588013 -197.59359741]
[43.55015182 -212.39286804]
[40.67727280 -215.64871216]
[39.14408875 -219.28381348]
[38.90530777 -222.83041382]
[39.76839828 -225.88356018]
[41.42680359 -228.14360046]
[39.86627960 -243.06221008]
[28.53688049 -233.23139954]
[13.76006794 -235.80934143]
[6.42875671 -248.89567566]
[11.94731808 -262.84362793]
[26.24767303 -267.37130737]
[38.78727341 -259.14245605]
[38.34066772 -274.13583374]
[37.89406204 -289.12918091]
[37.44745636 -304.12252808]
[29.30270386 -317.68621826]
[36.65763474 -330.63821411]
[36.21102905 -345.63156128]
[35.76442337 -360.62490845]
[35.31781769 -375.61825562]
[34.87121201 -390.61160278]
[34.42460632 -405.60494995]
[33.97800064 -420.59829712]
[19.57798386 -425.33279419]
[7.66760015 -434.70928955]
[-0.31491151 -447.59552002]
[-3.40562510 -462.43545532]
[-1.23132145 -477.43704224]
[5.94544125 -490.78881836]
[17.25803375 -500.87847900]
[31.34040833 -506.48764038]
[46.49204636 -506.93893433]
[60.88331223 -502.17794800]
[72.77639771 -492.77951050]
[80.73514557 -479.87857056]
[83.79850769 -465.03298950]
[81.59655762 -450.03540039]
[74.39520264 -436.69689941]
[63.06403732 -426.62811279]
[48.97135162 -421.04492188]
[49.41795731 -406.05157471]
[49.86456299 -391.05819702]
[50.31116867 -376.06484985]
[50.75777435 -361.07150269]
[51.20438004 -346.07815552]
[51.65098572 -331.08480835]
[59.76379395 -318.59353638]
[52.44080734 -304.56912231]
[52.88741302 -289.57577515]
[53.33401871 -274.58242798]
[53.78062439 -259.58908081]
[54.78488541 -244.62272644]
[56.34540939 -229.70413208]
[58.34942245 -214.83859253]
[60.79515076 -200.03932190]
[73.23459625 -195.19140625]
[81.72225952 -184.74613953]
[83.95815277 -171.36442566]
[79.25276184 -158.52394104]
[68.73471069 -149.61543274]
[70.95983124 -134.78140259]
[73.18494415 -119.94734955]
[75.52043152 -105.13028717]
[77.96615601 -90.33101654]
[80.52198792 -75.55036163]
[83.18778992 -60.78914261]
[85.85358429 -46.02792358]
[88.51937866 -31.26670837]
[91.18517303 -16.50549126]
[94.17994690 -1.80748677]
[97.50220490 12.81997299]
[100.82447052 27.44743347]
[106.77153015 13.67672443]
[118.74794006 4.64535999]
[133.62309265 2.71411896]
[147.50866699 8.38782215]
[156.77500916 20.18337631]
[158.99989319 35.01745605]
[153.60176086 49.01246262]
[141.99168396 58.51013947]
[127.20448303 61.02781296]
[113.10550690 55.90737152]
[103.38057709 44.48808670]
[104.49622345 59.44654083]
[105.61187744 74.40499878]
[106.72752380 89.36344910]
[108.17694092 104.29325867]
[109.95941162 119.18697357]
[111.74187469 134.08068848]
[123.11783600 148.56063843]
[115.58735657 164.41178894]
[117.59136963 179.27732849]
[119.59538269 194.14285278]
[121.59940338 209.00837708]
[124.79128265 213.13862610]
[125.96257782 217.63099670]
[125.31370544 221.65518188]
[123.34559631 224.58073425]
[124.68383026 239.52091980]
[126.02206421 254.46110535]
[127.58258820 269.37969971]
[129.36505127 284.27343750]
[131.36906433 299.13894653]
[133.59419250 313.97299194]
[135.81930542 328.80703735]
[138.04441833 343.64108276]
[150.46994019 353.03491211]
[152.51521301 368.11044312]
[143.48304749 379.89840698]
[145.70816040 394.73242188]
[147.93327332 409.56646729]
[150.15838623 424.40051270]
[152.38351440 439.23455811]
[154.60862732 454.06860352]
[156.83374023 468.90264893]
[159.27947998 483.70193481]
[161.94526672 498.46313477]
[164.61106873 513.22436523]
[169.21578979 521.11322021]
[167.20495605 528.22509766]
[169.65068054 543.02435303]
[172.20651245 557.80499268]
[174.87229919 572.56622314]
[177.53810120 587.32745361]
[192.44558716 590.17895508]
[205.31425476 598.22644043]
[214.40370178 610.38153076]
[218.48468018 625.00036621]
[217.00524902 640.10583496]
[210.16549683 653.65509033]
[198.89044189 663.81567383]
[184.70495605 669.21350098]
[169.52748108 669.11846924]
[155.41067505 663.54351807]
[144.26371765 653.24255371]
[137.59411621 639.60876465]
[136.30390930 624.48590088]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 197]
[3 196]
[4 195]
[6 194]
[7 193]
[8 191]
[9 190]
[10 189]
[13 188]
[14 187]
[15 186]
[16 185]
[17 184]
[18 183]
[19 182]
[22 179]
[23 178]
[24 177]
[25 176]
[28 175]
[29 174]
[32 173]
[33 172]
[34 171]
[35 167]
[36 166]
[37 165]
[38 164]
[41 162]
[42 161]
[43 160]
[47 159]
[48 158]
[49 157]
[50 156]
[51 145]
[52 144]
[53 143]
[57 142]
[58 141]
[59 140]
[60 139]
[61 138]
[63 137]
[64 136]
[66 135]
[67 134]
[68 133]
[72 128]
[73 127]
[78 126]
[79 125]
[85 124]
[86 123]
[87 122]
[88 121]
[90 119]
[91 118]
[92 117]
[93 116]
[94 115]
[95 114]
[96 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
