%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGCGUCCGCCGUUUCUGAUCAUACCGUUAUCCGUGUUAUAACCGAUUCUCCCUCACCCACAACUCCCAAUACUCUCAUCGAUAUUACUUGUCGCUAUxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[54.00879288 548.69006348]
[57.43233490 533.85095215]
[66.60069275 521.69116211]
[79.92539215 514.31738281]
[78.58715820 499.37719727]
[77.24892426 484.43701172]
[75.91068268 469.49682617]
[60.34939575 461.14712524]
[52.84939575 444.98541260]
[56.58494949 427.40344238]
[70.24498749 415.48031616]
[68.46251678 400.58657837]
[66.68005371 385.69287109]
[64.89759064 370.79916382]
[54.79927444 381.89077759]
[39.82281876 382.73086548]
[28.54741287 372.83819580]
[27.43212128 357.87969971]
[37.11583710 346.42431641]
[52.05128479 345.03421021]
[63.68230820 354.50485229]
[60.34104919 347.91259766]
[63.34234238 339.28530884]
[63.11901474 324.28695679]
[62.89568710 309.28863525]
[51.69825745 319.26950073]
[36.71566772 318.54693604]
[26.53063202 307.53491211]
[26.97759628 292.54156494]
[37.80052185 282.15579224]
[52.79954529 282.32702637]
[63.38217545 292.95629883]
[64.49782562 277.99786377]
[65.61347198 263.03939819]
[66.72912598 248.08094788]
[54.68589401 257.02301025]
[39.82751465 254.96667480]
[30.66553879 243.08987427]
[32.44836044 228.19621277]
[44.15470123 218.81742859]
[59.07863617 220.32612610]
[68.67076874 231.85714722]
[71.11650085 217.05787659]
[73.56222534 202.25860596]
[76.00795746 187.45933533]
[73.99712372 180.34748840]
[78.60183716 172.45861816]
[81.26763916 157.69740295]
[74.63029480 147.58442688]
[76.73040771 135.26478577]
[86.97978973 127.43453217]
[89.86505890 112.71463776]
[84.02105713 96.99128723]
[95.18329620 84.47007751]
[97.84909058 69.70886230]
[91.14937592 58.68721771]
[93.67361450 46.44744492]
[103.53442383 39.44094467]
[106.41969299 24.72105598]
[100.04933929 7.44390154]
[112.09052277 -5.32233334]
[114.75631714 -20.08355141]
[117.42211151 -34.84476852]
[120.08791351 -49.60598373]
[122.75370789 -64.36720276]
[125.41950226 -79.12841797]
[128.08529663 -93.88963318]
[129.75683594 -108.79621124]
[130.42662048 -123.78125000]
[131.09640503 -138.76628113]
[130.42662048 -153.75132751]
[120.91497040 -166.39407349]
[126.88253021 -180.04095459]
[124.87851715 -194.90649414]
[122.87450409 -209.77201843]
[120.87049103 -224.63754272]
[118.86647797 -239.50306702]
[116.64135742 -254.33711243]
[114.19563293 -269.13638306]
[104.31177521 -281.49032593]
[109.87036896 -295.30883789]
[107.42464447 -310.10812378]
[95.41346741 -324.06567383]
[102.22863770 -340.23724365]
[99.56284332 -354.99847412]
[96.89704895 -369.75967407]
[94.23125458 -384.52090454]
[91.56546021 -399.28213501]
[76.52819824 -400.52435303]
[62.32515335 -405.61709595]
[49.92472076 -414.21310425]
[40.17238235 -425.72634888]
[33.73306274 -439.37176514]
[31.04580688 -454.21902466]
[32.29383850 -469.25579834]
[37.39206696 -483.45687866]
[45.99288177 -495.85400391]
[57.50986862 -505.60189819]
[71.15777588 -512.03594971]
[86.00607300 -514.71746826]
[101.04236603 -513.46362305]
[115.24147034 -508.35989380]
[127.63526154 -499.75430298]
[137.37870789 -488.23355103]
[143.80749512 -474.58316040]
[146.48327637 -459.73382568]
[145.22363281 -444.69802856]
[140.11444092 -430.50088501]
[131.50405884 -418.11041260]
[119.97955322 -408.37142944]
[106.32667542 -401.94790649]
[108.99246979 -387.18670654]
[111.65826416 -372.42547607]
[114.32406616 -357.66427612]
[116.98986053 -342.90304565]
[126.74525452 -335.75051880]
[129.08697510 -323.47451782]
[122.22391510 -312.55383301]
[124.66964722 -297.75457764]
[134.37857056 -286.45916748]
[128.99490356 -271.58212280]
[131.44062805 -256.78283691]
[134.73252869 -253.32272339]
[135.88575745 -247.75791931]
[133.73200989 -241.50708008]
[135.73602295 -226.64155579]
[137.74003601 -211.77603149]
[139.74404907 -196.91050720]
[141.74806213 -182.04496765]
[151.11637878 -170.46551514]
[145.29214478 -155.75534058]
[151.66413879 -169.33465576]
[163.24209595 -178.87147522]
[177.79049683 -182.52438354]
[192.50028992 -179.58807373]
[204.53123474 -170.62947083]
[211.56034851 -157.37837219]
[212.23042297 -142.39335632]
[206.41206360 -128.56776428]
[195.22869873 -118.57113647]
[180.83969116 -114.33364868]
[166.02331543 -116.67349243]
[153.64038086 -125.13888550]
[146.08145142 -138.09649658]
[145.41166687 -123.11146545]
[144.74188232 -108.12642670]
[154.57388306 -119.45478058]
[168.93939209 -123.77128601]
[183.38708496 -119.73841858]
[193.44020081 -108.60581207]
[195.98365784 -93.82302856]
[190.22935486 -79.97066498]
[177.96031189 -71.34103394]
[162.97822571 -70.60811615]
[149.92546082 -77.99902344]
[142.84651184 -91.22383881]
[140.18072510 -76.46262360]
[137.51492310 -61.70140839]
[134.84912109 -46.94018936]
[132.18333435 -32.17897415]
[129.51753235 -17.41775513]
[126.85173798 -2.65653801]
[133.48907471 7.45643759]
[131.38897705 19.77606773]
[121.13958740 27.60632706]
[118.25431824 42.32621765]
[124.82796478 58.59748459]
[112.61030579 72.37465668]
[109.94451141 87.13587189]
[115.99656677 97.08644867]
[113.84149170 108.53182983]
[104.58495331 115.59991455]
[101.69967651 130.31980896]
[108.07003784 147.59695435]
[96.02885437 160.36318970]
[93.36306000 175.12440491]
[90.80722809 189.90505981]
[88.36149597 204.70433044]
[85.91577148 219.50360107]
[83.47003937 234.30287170]
[81.68757629 249.19659424]
[80.57192993 264.15505981]
[79.45627594 279.11349487]
[78.34062958 294.07196045]
[77.89402771 309.06530762]
[78.11735535 324.06362915]
[78.34068298 339.06198120]
[78.67565918 354.05822754]
[79.79130554 369.01669312]
[81.57376862 383.91040039]
[83.35623932 398.80413818]
[85.13870239 413.69784546]
[96.76155853 418.29971313]
[105.27555847 427.35400391]
[109.10969543 439.10043335]
[107.59468079 451.29083252]
[101.07893372 461.61932373]
[90.85086823 468.15859985]
[92.18910217 483.09878540]
[93.52733612 498.03897095]
[94.86557770 512.97918701]
[109.28862000 517.86749268]
[120.47206879 528.20434570]
[126.47830963 542.19879150]
[126.26673889 557.42620850]
[119.87400055 571.24841309]
[108.40768433 581.27056885]
[93.85439301 585.75628662]
[78.73558044 583.92834473]
[65.67066193 576.10357666]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 201]
[5 200]
[6 199]
[7 198]
[11 192]
[12 191]
[13 190]
[14 189]
[21 188]
[23 187]
[24 186]
[25 185]
[32 184]
[33 183]
[34 182]
[35 181]
[42 180]
[43 179]
[44 178]
[45 177]
[47 176]
[48 175]
[51 173]
[52 172]
[54 169]
[55 168]
[58 166]
[59 165]
[61 162]
[62 161]
[63 160]
[64 159]
[65 158]
[66 157]
[67 156]
[68 146]
[69 145]
[70 144]
[71 131]
[73 129]
[74 128]
[75 127]
[76 126]
[77 125]
[78 122]
[79 121]
[81 119]
[82 118]
[84 115]
[85 114]
[86 113]
[87 112]
[88 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
