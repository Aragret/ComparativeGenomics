%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUACCAACUAUAACGAUCCCACCGCGAAGGUUAAUCCACGUACUCAUCCACCGGACGUCAUUACAAUCGCCAAUCCGCAUGCCGGUCCCGAUAACCAxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[90.21629333 409.08950806]
[86.27692413 424.00543213]
[74.88333893 434.40686035]
[59.67118454 436.97473145]
[45.49460983 430.88964844]
[36.87730408 418.09332275]
[36.56902313 402.66906738]
[44.66813278 389.53863525]
[58.59024048 382.89193726]
[60.37270737 367.99822998]
[62.15517426 353.10452271]
[63.93763733 338.21078491]
[65.72010803 323.31707764]
[67.50257111 308.42337036]
[69.28503418 293.52963257]
[63.11495590 279.97311401]
[72.43731689 267.19015503]
[66.26723480 253.63363647]
[75.58960724 240.85067749]
[69.41952515 227.29414368]
[78.74188995 214.51118469]
[80.52435303 199.61747742]
[82.30682373 184.72375488]
[84.08928680 169.83003235]
[69.92028046 164.99688721]
[57.06555557 157.32380676]
[46.08678436 147.14604187]
[37.46366119 134.90832520]
[31.57296181 121.14533997]
[28.67207146 106.45844269]
[28.88773727 91.48934937]
[32.21054077 76.89212036]
[38.49529266 63.30455399]
[47.46739197 51.32033157]
[58.73481750 41.46308899]
[71.80525970 34.16352463]
[86.10762787 29.74057388]
[101.01699829 28.38749695]
[102.79946136 13.49377918]
[104.58192444 -1.39993799]
[106.36439514 -16.29365540]
[108.14685822 -31.18737221]
[95.96516418 -40.43688965]
[90.08760071 -54.44942093]
[92.00031281 -69.42299652]
[101.09029388 -81.34894562]
[114.83664703 -87.08509064]
[116.61911011 -101.97880554]
[118.40157318 -116.87252808]
[120.18404388 -131.76623535]
[119.29122925 -146.73965454]
[115.75155640 -161.31602478]
[112.21188354 -175.89239502]
[108.67221069 -190.46878052]
[105.13253784 -205.04515076]
[101.59286499 -219.62152100]
[98.05319214 -234.19790649]
[87.27787018 -245.78250122]
[91.79329681 -259.97616577]
[88.25362396 -274.55255127]
[84.71395111 -289.12890625]
[81.17427826 -303.70529175]
[77.63460541 -318.28167725]
[74.09493256 -332.85803223]
[70.55525970 -347.43441772]
[67.01558685 -362.01080322]
[63.47591400 -376.58715820]
[59.93624115 -391.16354370]
[55.32223511 -405.43627930]
[49.65944672 -419.32629395]
[43.99665833 -433.21633911]
[38.33387375 -447.10635376]
[32.67108536 -460.99639893]
[27.00830078 -474.88641357]
[12.34215641 -471.57672119]
[-2.66872692 -470.72628784]
[-17.61484146 -472.35830688]
[-32.08844757 -476.42828369]
[-45.69469452 -482.82513428]
[-58.06239319 -491.37438965]
[-68.85414124 -501.84283447]
[-77.77553558 -513.94482422]
[-84.58319092 -527.35028076]
[-89.09140015 -541.69342041]
[-91.17715454 -556.58300781]
[-90.78357697 -571.61279297]
[-87.92138672 -586.37280273]
[-82.66867828 -600.46032715]
[-75.16873932 -613.49108887]
[-65.62618256 -625.10961914]
[-54.30133057 -634.99890137]
[-41.50313568 -642.88909912]
[-27.58073807 -648.56512451]
[-12.91395760 -651.87194824]
[2.09708929 -652.71954346]
[17.04289055 -651.08459473]
[31.51571083 -647.01184082]
[45.12072372 -640.61236572]
[57.48677444 -632.06072998]
[68.27650452 -621.59020996]
[77.19557190 -609.48651123]
[84.00064850 -596.07977295]
[88.50608826 -581.73571777]
[90.58897400 -566.84576416]
[90.19249725 -551.81604004]
[87.32746887 -537.05657959]
[82.07204437 -522.97003174]
[74.56959534 -509.94073486]
[65.02480316 -498.32406616]
[53.69804382 -488.43698120]
[40.89832687 -480.54919434]
[46.56111526 -466.65917969]
[52.22389984 -452.76913452]
[57.88668823 -438.87911987]
[63.54947281 -424.98910522]
[69.21225739 -411.09906006]
[72.83444977 -425.65515137]
[83.17803955 -436.51840210]
[97.53925323 -440.84915161]
[112.16410065 -437.51541138]
[123.22967529 -427.38854980]
[127.84346771 -413.11575317]
[124.79944611 -398.42788696]
[114.89330292 -387.16427612]
[100.71448517 -382.26928711]
[85.96930695 -385.02236938]
[74.51261902 -394.70321655]
[78.05229187 -380.12683105]
[81.59196472 -365.55047607]
[85.13163757 -350.97409058]
[88.67131042 -336.39770508]
[92.21098328 -321.82135010]
[95.75065613 -307.24496460]
[99.29032135 -292.66857910]
[102.82999420 -278.09222412]
[106.36966705 -263.51583862]
[116.89181519 -252.97383118]
[112.62957001 -237.73757935]
[116.16924286 -223.16119385]
[119.70891571 -208.58482361]
[123.24858093 -194.00845337]
[126.78825378 -179.43206787]
[130.32792664 -164.85569763]
[133.86759949 -150.27932739]
[137.16311646 -164.91282654]
[143.82080078 -178.35438538]
[153.46411133 -189.84379578]
[165.54766846 -198.73129272]
[179.38810730 -204.51422119]
[194.20266724 -206.86555481]
[209.15351868 -205.65231323]
[223.39512634 -200.94308472]
[236.12203979 -193.00422668]
[246.61450195 -182.28471375]
[254.27912903 -169.39077759]
[258.68243408 -155.05163574]
[259.57534790 -140.07823181]
[256.90744019 -125.31739807]
[250.82957458 -111.60391998]
[241.68547058 -99.71336365]
[229.99226379 -90.31819916]
[216.41128540 -83.94977570]
[201.71058655 -80.96824646]
[186.72157288 -81.54223633]
[172.29194641 -85.63928223]
[159.23776245 -93.02767181]
[148.29731750 -103.28956604]
[140.08932495 -115.84460449]
[135.07775879 -129.98377991]
[133.29528809 -115.09005737]
[131.51283264 -100.19634247]
[129.73036194 -85.30262756]
[141.73489380 -76.48464203]
[147.75389099 -62.75046158]
[146.07914734 -47.74840546]
[137.06092834 -35.51858902]
[123.04057312 -29.40490723]
[121.25811005 -14.51118946]
[119.47564697 0.38252789]
[117.69317627 15.27624512]
[115.91071320 30.16996193]
[130.07972717 35.00311279]
[142.93444824 42.67619705]
[153.91322327 52.85395050]
[162.53634644 65.09167480]
[168.42703247 78.85466003]
[171.32792664 93.54155731]
[171.11225891 108.51065063]
[167.78945923 123.10787964]
[161.50471497 136.69544983]
[152.53260803 148.67967224]
[141.26518250 158.53691101]
[128.19473267 165.83647156]
[113.89237213 170.25942993]
[98.98300171 171.61250305]
[97.20053864 186.50622559]
[95.41807556 201.39993286]
[93.63560486 216.29365540]
[99.67819214 230.91548157]
[90.48332214 242.63313293]
[96.52590942 257.25497437]
[87.33103943 268.97262573]
[93.37362671 283.59445190]
[84.17875671 295.31210327]
[82.39628601 310.20581055]
[80.61382294 325.09954834]
[78.83135223 339.99325562]
[77.04888916 354.88696289]
[75.26642609 369.78070068]
[73.48395538 384.67440796]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 210]
[10 209]
[11 208]
[12 207]
[13 206]
[14 205]
[15 204]
[17 202]
[19 200]
[21 198]
[22 197]
[23 196]
[24 195]
[38 181]
[39 180]
[40 179]
[41 178]
[42 177]
[47 172]
[48 171]
[49 170]
[50 169]
[51 144]
[52 143]
[53 142]
[54 141]
[55 140]
[56 139]
[57 138]
[59 136]
[60 135]
[61 134]
[62 133]
[63 132]
[64 131]
[65 130]
[66 129]
[67 128]
[68 127]
[69 116]
[70 115]
[71 114]
[72 113]
[73 112]
[74 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
