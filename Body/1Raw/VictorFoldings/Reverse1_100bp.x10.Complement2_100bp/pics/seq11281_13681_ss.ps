%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAGAAAUGAUAUUUUCGAUAACACAUUCGAUCAGUAUAAUUCAACAACCGAGUCCUCAAACUAUCAAGAACCCGUCACUCUCACUCAUCAUCUUACAAxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[129.91345215 670.89514160]
[115.09321594 673.26306152]
[100.13050079 674.43072510]
[85.12234497 674.39068604]
[70.16608429 673.14306641]
[55.35871506 670.69598389]
[40.79626846 667.06530762]
[26.57319450 662.27465820]
[12.78173161 656.35504150]
[-0.48867503 649.34484863]
[-13.15195942 641.28961182]
[-25.12599564 632.24145508]
[-36.33312607 622.25915527]
[-46.70066452 611.40740967]
[-56.16137695 599.75659180]
[-64.65390015 587.38226318]
[-72.12316132 574.36474609]
[-78.52072144 560.78839111]
[-83.80507660 546.74127197]
[-87.94197083 532.31445312]
[-90.90456390 517.60156250]
[-92.67365265 502.69799805]
[-93.23774719 487.70037842]
[-92.59320068 472.70602417]
[-90.74419403 457.81213379]
[-87.70271301 443.11535645]
[-83.48848724 428.71096802]
[-78.12884521 414.69238281]
[-71.65855408 401.15054321]
[-64.11956024 388.17324829]
[-55.56077957 375.84466553]
[-46.03770065 364.24478149]
[-35.61209488 353.44882202]
[-24.35157776 343.52676392]
[-12.32917595 334.54299927]
[0.37713987 326.55575562]
[13.68496132 319.61688232]
[27.50798225 313.77133179]
[41.75655365 309.05703735]
[56.33826447 305.50457764]
[71.15854645 303.13696289]
[86.12128448 301.96960449]
[101.12944031 302.01000977]
[116.08567810 303.25796509]
[118.53140259 288.45870972]
[120.97712708 273.65942383]
[123.42285919 258.86016846]
[125.86858368 244.06089783]
[128.31431580 229.26162720]
[127.42149353 214.28822327]
[123.23448181 199.88442993]
[119.04747772 185.48065186]
[114.86046600 171.07687378]
[110.45946503 156.73703003]
[105.84545898 142.46429443]
[101.23144531 128.19155884]
[96.61743927 113.91882324]
[86.37054443 104.40605164]
[89.10983276 90.69518280]
[84.49581909 76.42245483]
[79.88181305 62.14971924]
[75.26779938 47.87698364]
[63.66069794 37.12590408]
[67.10794067 22.63570976]
[62.49393463 8.36297512]
[57.87992477 -5.90975761]
[53.05392838 -20.11221313]
[48.01700974 -34.24124146]
[42.98009491 -48.37027359]
[40.94253922 -33.50930405]
[34.66965103 -19.88392830]
[24.70409584 -8.67287636]
[11.90799141 -0.84601665]
[-2.61166763 2.91954994]
[-17.59878731 2.29806376]
[-31.75683212 -2.65671015]
[-43.86098862 -11.51613522]
[-52.86412430 -23.51378059]
[-57.98738480 -37.61173248]
[-58.78754807 -52.59037399]
[-55.19539642 -67.15390778]
[-47.52168655 -80.04243469]
[-36.43027496 -90.14097595]
[-22.88067245 -96.57590485]
[-8.04505825 -98.79052734]
[6.79313755 -96.59326935]
[20.35026360 -90.17420959]
[31.45349121 -80.08866119]
[39.14094543 -67.21237946]
[38.24812698 -82.18578339]
[37.35531235 -97.15918732]
[36.46249771 -112.13259125]
[35.56967926 -127.10600281]
[34.67686462 -142.07940674]
[33.78404999 -157.05281067]
[19.24945259 -161.35644531]
[7.06517649 -170.37416077]
[-1.29746807 -183.01702881]
[-4.82865095 -197.75834656]
[-3.10196519 -212.81803894]
[3.67408371 -226.37757874]
[14.68125534 -236.79957581]
[28.59037971 -242.82553101]
[43.72186279 -243.72776794]
[58.24850464 -239.39735413]
[70.41613770 -230.35719299]
[78.75547028 -217.69894409]
[82.25948334 -202.95114136]
[80.50504303 -187.89465332]
[73.70401764 -174.34762573]
[62.67766190 -163.94593811]
[48.75745392 -157.94563293]
[49.65027237 -142.97222900]
[50.54308701 -127.99881744]
[51.43590164 -113.02541351]
[52.32871628 -98.05200195]
[53.22153473 -83.07859802]
[54.11434937 -68.10519409]
[57.10912323 -53.40718842]
[62.14604187 -39.27816010]
[67.18295288 -25.14912987]
[71.03738403 -22.32912827]
[73.16123199 -17.05785561]
[72.15265656 -10.52376747]
[76.76667023 3.74896622]
[81.38067627 18.02169991]
[92.65775299 27.75189781]
[89.54053497 43.26297379]
[94.15454102 57.53570938]
[98.76855469 71.80844116]
[103.38256073 86.08117676]
[113.62945557 95.59394836]
[110.89016724 109.30481720]
[115.50418091 123.57754517]
[120.11818695 137.85028076]
[124.73220062 152.12301636]
[129.37480164 156.83023071]
[130.73852539 162.34722900]
[129.26425171 166.88986206]
[133.45126343 181.29364014]
[137.63827515 195.69741821]
[141.82527161 210.10121155]
[144.46983337 195.33616638]
[149.90646362 181.35607910]
[157.93191528 168.68357849]
[168.24613953 157.79244995]
[180.46353149 149.08985901]
[194.12736511 142.90115356]
[208.72676086 139.45771790]
[223.71595764 138.88829041]
[238.53454590 141.21412659]
[252.62850952 146.34831238]
[265.47097778 154.09889221]
[276.58178711 164.17608643]
[285.54556274 176.20317078]
[292.02719116 189.73048401]
[295.78436279 204.25231934]
[296.67657471 219.22576904]
[294.67050171 234.09101868]
[289.84115601 248.29232788]
[282.36904907 261.29879761]
[272.53356934 272.62411499]
[260.70239258 281.84490967]
[247.31785583 288.61648560]
[232.88032532 292.68560791]
[217.92958069 293.90020752]
[203.02456665 292.21487427]
[188.72250366 287.69259644]
[175.55809021 280.50244141]
[164.02349854 270.91320801]
[154.54994202 259.28344727]
[147.49160767 246.04788208]
[143.11358643 231.70735168]
[140.66786194 246.50662231]
[138.22212219 261.30587769]
[135.77639771 276.10516357]
[133.33067322 290.90441895]
[130.88494873 305.70370483]
[145.44746399 309.33401489]
[159.67065430 314.12435913]
[173.46224976 320.04367065]
[186.73280334 327.05355835]
[199.39627075 335.10858154]
[211.37049866 344.15643311]
[222.57785034 354.13851929]
[232.94563293 364.99002075]
[242.40660095 376.64062500]
[250.89939880 389.01473999]
[258.36895752 402.03213501]
[264.76681519 415.60833740]
[270.05148315 429.65536499]
[274.18869019 444.08206177]
[277.15161133 458.79489136]
[278.92102051 473.69842529]
[279.48544312 488.69601440]
[278.84121704 503.69039917]
[276.99255371 518.58428955]
[273.95138550 533.28118896]
[269.73748779 547.68566895]
[264.37814331 561.70434570]
[257.90814209 575.24633789]
[250.36944580 588.22381592]
[241.81094360 600.55255127]
[232.28811646 612.15264893]
[221.86274719 622.94885254]
[210.60244751 632.87115479]
[198.58024597 641.85516357]
[185.87409973 649.84271240]
[172.56643677 656.78186035]
[158.74354553 662.62774658]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 178]
[45 177]
[46 176]
[47 175]
[48 174]
[49 173]
[50 142]
[51 141]
[52 140]
[53 139]
[54 136]
[55 135]
[56 134]
[57 133]
[59 131]
[60 130]
[61 129]
[62 128]
[64 126]
[65 125]
[66 124]
[67 121]
[68 120]
[69 119]
[89 118]
[90 117]
[91 116]
[92 115]
[93 114]
[94 113]
[95 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
