%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[-3.10038757 593.73944092]
[2.45664811 607.80975342]
[3.39170456 622.90881348]
[-0.38682523 637.55731201]
[-8.50875950 650.32012939]
[-20.17839432 659.94689941]
[-34.25245667 665.49450684]
[-49.35211563 666.41943359]
[-63.99805832 662.63110352]
[-76.75542450 654.50061035]
[-86.37438202 642.82452393]
[-91.91255188 628.74676514]
[-92.82737732 613.64648438]
[-89.02922058 599.00305176]
[-80.89018250 586.25115967]
[-69.20765686 576.64001465]
[-55.12617493 571.11126709]
[-40.02529144 570.20660400]
[-36.26898956 555.68450928]
[-32.51269150 541.16247559]
[-28.75638962 526.64038086]
[-25.00008774 512.11834717]
[-21.24378777 497.59628296]
[-17.48748779 483.07421875]
[-23.35427475 472.49560547]
[-20.34368896 460.36627197]
[-9.54030704 453.32003784]
[-5.56821108 438.85549927]
[-13.13560486 426.07778931]
[-9.31338692 411.35211182]
[4.14037037 403.50137329]
[8.11246681 389.03683472]
[12.08456326 374.57232666]
[-0.16154371 364.30667114]
[-6.72878885 349.67504883]
[-6.25609255 333.58590698]
[1.21263909 319.26187134]
[14.22714996 309.59405518]
[30.21217346 306.55877686]
[33.96847534 292.03671265]
[37.72477341 277.51464844]
[41.48107529 262.99261475]
[45.23737717 248.47055054]
[40.93376923 234.21122742]
[51.88037872 222.78833008]
[55.63668060 208.26628113]
[59.39298248 193.74421692]
[45.95228577 200.40362549]
[31.69588661 195.73939514]
[24.79049683 182.42340088]
[29.19183922 168.08364868]
[42.37862396 160.93461609]
[56.79685974 165.07157898]
[64.18701172 178.12374878]
[69.22392273 163.99472046]
[74.26084137 149.86569214]
[79.29776001 135.73666382]
[84.33467102 121.60763550]
[89.37158966 107.47860718]
[93.98559570 93.20587158]
[90.40793610 77.79448700]
[101.39031219 67.73284149]
[105.57732391 53.32905579]
[109.65699005 38.89450455]
[113.62908936 24.42998123]
[117.60118103 9.96545696]
[121.35748291 -4.55660248]
[124.89715576 -19.13297844]
[128.00126648 -33.80828094]
[130.66706848 -48.56949615]
[133.33285522 -63.33071518]
[135.99865723 -78.09193420]
[138.66444397 -92.85314941]
[141.33024597 -107.61436462]
[143.99603271 -122.37558746]
[146.44177246 -137.17485046]
[148.66688538 -152.00889587]
[150.89199829 -166.84294128]
[153.11711121 -181.67698669]
[152.89378357 -196.67532349]
[150.22799683 -211.43653870]
[147.56219482 -226.19775391]
[144.89640808 -240.95896912]
[142.23060608 -255.72019958]
[139.56481934 -270.48141479]
[136.89901733 -285.24261475]
[134.23321533 -300.00384521]
[119.18733215 -300.94442749]
[104.80395508 -305.45904541]
[91.91931915 -313.28527832]
[81.28252411 -323.96804810]
[73.51197052 -336.88632202]
[69.05944061 -351.28906250]
[68.18379211 -366.33886719]
[70.93592834 -381.16076660]
[77.15585327 -394.89306641]
[86.48194122 -406.73736572]
[98.37198639 -416.00506592]
[112.13472748 -422.15734863]
[126.97000122 -424.83651733]
[142.01531982 -423.88681030]
[156.39595032 -419.36346436]
[169.27584839 -411.52944946]
[179.90615845 -400.84020996]
[187.66888428 -387.91720581]
[192.11268616 -373.51181030]
[192.97921753 -358.46145630]
[190.21809387 -343.64123535]
[183.98983765 -329.91268921]
[174.65657043 -318.07406616]
[162.76091003 -308.81356812]
[148.99444580 -302.66964722]
[151.66023254 -287.90841675]
[154.32603455 -273.14721680]
[156.99182129 -258.38598633]
[159.65762329 -243.62477112]
[162.32341003 -228.86355591]
[164.98921204 -214.10234070]
[167.65501404 -199.34112549]
[171.88447571 -213.73249817]
[179.64915466 -226.56642151]
[190.43406677 -236.99166870]
[203.52386475 -244.31677246]
[218.05036926 -248.05587769]
[233.05006409 -247.96098328]
[247.52809143 -244.03840637]
[260.52416992 -236.54827881]
[271.17633057 -225.98742676]
[278.77801514 -213.05628967]
[282.82507324 -198.61256409]
[283.04907227 -183.61424255]
[279.43511963 -169.05609131]
[272.22296143 -155.90373230]
[261.89093018 -145.02949524]
[249.12431335 -137.15463257]
[234.76988220 -132.80145264]
[219.77970886 -132.25868225]
[205.14802551 -135.56234741]
[191.84532166 -142.49330139]
[180.75392151 -152.59184265]
[172.60945129 -165.18817139]
[167.95115662 -179.45187378]
[165.72604370 -164.61782837]
[163.50093079 -149.78378296]
[161.27581787 -134.94973755]
[163.34376526 -130.64479065]
[162.72933960 -124.99505615]
[158.75726318 -119.70978546]
[156.09146118 -104.94857025]
[153.42565918 -90.18735504]
[150.75987244 -75.42613983]
[148.09407043 -60.66492081]
[145.42828369 -45.90370178]
[142.76248169 -31.14248466]
[144.24819946 -28.76534653]
[144.88182068 -25.65646553]
[144.37991333 -22.13744736]
[142.58061218 -18.62646103]
[139.47352600 -15.59330559]
[135.93385315 -1.01693022]
[137.60951233 3.45534563]
[136.49348450 9.02773476]
[132.06570435 13.93755245]
[128.09361267 28.40207672]
[124.12151337 42.86660004]
[125.38155365 50.14905167]
[119.98110962 57.51606750]
[115.79409790 71.91985321]
[119.67124176 86.30098724]
[108.38938141 97.39288330]
[109.62563324 100.17877960]
[109.87552643 103.47605896]
[108.94771576 106.92027283]
[106.78815460 110.08137512]
[103.50061798 112.51552582]
[98.46370697 126.64455414]
[93.42678833 140.77359009]
[88.38986969 154.90261841]
[83.35295105 169.03164673]
[78.31604004 183.16067505]
[73.91503906 197.50051880]
[70.15873718 212.02258301]
[66.40243530 226.54463196]
[70.43737030 241.84266663]
[59.75943375 252.22685242]
[56.00313568 266.74890137]
[52.24683380 281.27096558]
[48.49053192 295.79302979]
[44.73423386 310.31509399]
[55.86701965 319.02185059]
[62.81938553 331.27700806]
[64.57038879 345.21398926]
[60.88843155 358.72448730]
[52.36125565 369.77740479]
[40.30243683 376.72409058]
[26.54908752 378.54443359]
[22.57699013 393.00894165]
[18.60489464 407.47348022]
[26.16240692 421.09411621]
[21.92808342 435.70660400]
[8.89631271 442.82760620]
[4.92421675 457.29211426]
[9.99191570 474.99523926]
[-2.96542788 486.83053589]
[-6.72172880 501.35256958]
[-10.47802925 515.87463379]
[-14.23433018 530.39672852]
[-17.99063110 544.91876221]
[-21.74693108 559.44079590]
[-25.50323296 573.96289062]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 210]
[19 209]
[20 208]
[21 207]
[22 206]
[23 205]
[24 204]
[27 202]
[28 201]
[31 198]
[32 197]
[33 196]
[39 189]
[40 188]
[41 187]
[42 186]
[43 185]
[45 183]
[46 182]
[47 181]
[54 180]
[55 179]
[56 178]
[57 177]
[58 176]
[59 175]
[60 170]
[62 168]
[63 167]
[64 165]
[65 164]
[66 163]
[67 160]
[68 159]
[69 154]
[70 153]
[71 152]
[72 151]
[73 150]
[74 149]
[75 148]
[76 145]
[77 144]
[78 143]
[79 142]
[80 119]
[81 118]
[82 117]
[83 116]
[84 115]
[85 114]
[86 113]
[87 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
