%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxGGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[43.89541626 374.04812622]
[45.92145157 388.94790649]
[45.40010071 403.97573853]
[42.34636307 418.69927979]
[36.84810638 432.69488525]
[29.06351662 445.55990601]
[19.21657944 456.92413330]
[7.59060907 466.46063232]
[-5.47989225 473.89501953]
[-19.61886024 479.01336670]
[-34.41949081 481.66842651]
[-49.45593643 481.78381348]
[-64.29557037 479.35623169]
[-78.51142883 474.45544434]
[-91.69448853 467.22256470]
[-103.46544647 457.86560059]
[-113.48563385 446.65383911]
[-121.46675110 433.90982056]
[-127.17915344 420.00024414]
[-130.45849609 405.32528687]
[-131.21041870 390.30722046]
[-129.41329956 375.37811279]
[-125.11882782 360.96749878]
[-118.45057678 347.49002075]
[-109.60039520 335.33346558]
[-98.82292938 324.84753418]
[-86.42826843 316.33401489]
[-72.77301788 310.03781128]
[-58.25008392 306.14007568]
[-43.27731323 304.75296021]
[-28.28549767 305.91638184]
[-13.70598888 309.59683228]
[-7.63215494 295.88159180]
[-1.55832112 282.16632080]
[4.51551294 268.45104980]
[10.58934689 254.73577881]
[5.00113821 240.97686768]
[10.96549034 226.98112488]
[25.43498802 221.21298218]
[23.51393318 206.44277954]
[36.17654037 196.95758057]
[42.25037384 183.24230957]
[48.32420731 169.52705383]
[46.40315628 154.75685120]
[59.06576157 145.27165222]
[65.13959503 131.55638123]
[53.56510925 141.09741211]
[39.93774033 147.36596680]
[25.16133690 149.94627380]
[10.21597195 148.66719055]
[-3.90708518 143.61355591]
[-16.27110291 135.12055969]
[-26.05602074 123.75150299]
[-32.61283875 110.26046753]
[-35.50667191 95.54225159]
[-34.54557419 80.57307434]
[-29.79329872 66.34577942]
[-21.56504250 53.80401993]
[-10.40655899 43.77963638]
[2.94205046 36.93751526]
[17.59542084 33.73146820]
[32.58164597 34.37414169]
[46.90674591 38.82291031]
[59.62058640 46.78270340]
[69.87990570 57.72557449]
[77.00423431 70.92572021]
[80.52104187 85.50762939]
[80.19708252 100.50413513]
[76.05178833 114.92527008]
[86.21533966 103.89339447]
[89.46533203 90.29452515]
[102.75278473 85.94306183]
[112.91632843 74.91117859]
[116.57644653 59.51916885]
[130.89051819 55.40134811]
[141.05407715 44.36947250]
[151.21762085 33.33759308]
[161.21578979 22.15561867]
[171.04637146 10.82602596]
[180.87695312 -0.50356704]
[190.70753479 -11.83316040]
[193.96804810 -20.36585617]
[200.76980591 -23.25684738]
[210.76797485 -34.43881989]
[214.11457825 -52.54632568]
[230.98684692 -57.37265015]
[240.81742859 -68.70224762]
[250.64801025 -80.03183746]
[251.32034302 -84.32158661]
[253.13975525 -87.82218933]
[255.71734619 -90.26993561]
[258.61846924 -91.55451202]
[261.41677856 -91.72063446]
[271.90426636 -102.44501495]
[282.39178467 -113.16939545]
[292.87927246 -123.89377594]
[303.36679077 -134.61814880]
[313.85427856 -145.34252930]
[324.34176636 -156.06690979]
[314.65502930 -167.53477478]
[306.10226440 -179.87150574]
[298.76092529 -192.96537781]
[292.69747925 -206.69779968]
[287.96685791 -220.94441223]
[284.61190796 -235.57618713]
[282.66299438 -250.46063232]
[282.13778687 -265.46292114]
[283.04104614 -280.44720459]
[285.36456299 -295.27780151]
[289.08731079 -309.82034302]
[294.17556763 -323.94317627]
[300.58328247 -337.51837158]
[308.25238037 -350.42300415]
[317.11343384 -362.54022217]
[327.08618164 -373.76022339]
[338.08032227 -383.98147583]
[349.99627686 -393.11135864]
[362.72613525 -401.06716919]
[376.15463257 -407.77694702]
[390.16009521 -413.17984009]
[404.61575317 -417.22692871]
[419.39065552 -419.88159180]
[434.35098267 -421.11978149]
[449.36126709 -420.93029785]
[464.28558350 -419.31478882]
[478.98873901 -416.28796387]
[493.33761597 -411.87719727]
[507.20223999 -406.12246704]
[520.45703125 -399.07583618]
[532.98199463 -390.80114746]
[544.66363525 -381.37335205]
[555.39624023 -370.87780762]
[565.08258057 -359.40960693]
[573.63488770 -347.07257080]
[580.97576904 -333.97842407]
[587.03869629 -320.24578857]
[591.76879883 -305.99899292]
[595.12322998 -291.36709595]
[597.07159424 -276.48257446]
[597.59625244 -261.48028564]
[596.69244385 -246.49601746]
[594.36840820 -231.66552734]
[590.64514160 -217.12310791]
[585.55633545 -203.00045776]
[579.14813232 -189.42549133]
[571.47857666 -176.52113342]
[562.61706543 -164.40426636]
[552.64392090 -153.18460083]
[541.64941406 -142.96377563]
[529.73309326 -133.83432007]
[517.00292969 -125.87895203]
[503.57421875 -119.16969299]
[489.56854248 -113.76731110]
[475.11276245 -109.72072601]
[460.33776855 -107.06659698]
[445.37738037 -105.82895660]
[430.36709595 -106.01900482]
[415.44284058 -107.63503265]
[400.73980713 -110.66239929]
[386.39108276 -115.07368469]
[372.52667236 -120.82894135]
[359.27212524 -127.87605286]
[346.74749756 -136.15118408]
[335.06616211 -145.57940674]
[324.57864380 -134.85502625]
[314.09115601 -124.13065338]
[303.60366821 -113.40627289]
[293.11614990 -102.68189240]
[282.62866211 -91.95751190]
[272.14114380 -81.23313141]
[261.97760010 -70.20125580]
[252.14701843 -58.87166214]
[242.31645203 -47.54206848]
[242.85816956 -35.45765305]
[234.76087952 -25.93832970]
[221.94995117 -24.44064903]
[211.95178223 -13.25867462]
[202.03712463 -2.00257921]
[192.20654297 9.32701397]
[182.37596130 20.65660667]
[172.54537964 31.98620033]
[171.98330688 36.72888947]
[168.43592834 41.16883850]
[162.24949646 43.50114059]
[152.08595276 54.53301620]
[141.92240906 65.56489563]
[138.98925781 80.16783905]
[123.94821167 85.07472992]
[113.78466034 96.10660553]
[110.53466797 109.70547485]
[97.24721527 114.05693817]
[87.08367157 125.08882141]
[78.85485840 137.63021851]
[72.78102875 151.34548950]
[74.26763916 167.09669495]
[62.03947449 175.60087585]
[55.96564102 189.31614685]
[49.89180756 203.03141785]
[51.37841797 218.78262329]
[39.15025330 227.28681946]
[44.60364914 241.87785339]
[38.24853897 255.70054626]
[24.30461311 260.80960083]
[18.23077965 274.52487183]
[12.15694523 288.24014282]
[6.08311176 301.95541382]
[0.00927761 315.67068481]
[12.53314304 323.99298096]
[23.47027206 334.31225586]
[32.50597763 346.33157349]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 207]
[33 206]
[34 205]
[35 204]
[36 203]
[39 200]
[41 198]
[42 197]
[43 196]
[45 194]
[46 193]
[69 192]
[70 191]
[72 189]
[73 188]
[75 186]
[76 185]
[77 184]
[78 181]
[79 180]
[80 179]
[81 178]
[83 177]
[84 176]
[86 173]
[87 172]
[88 171]
[93 170]
[94 169]
[95 168]
[96 167]
[97 166]
[98 165]
[99 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
