%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[165.78973389 553.40673828]
[149.40695190 552.67449951]
[142.09086609 537.99774170]
[151.36766052 524.47467041]
[152.03744507 509.48965454]
[144.10850525 500.35409546]
[144.54388428 487.86431885]
[153.65524292 478.73492432]
[154.54806519 463.76153564]
[155.44087219 448.78811646]
[156.33369446 433.81472778]
[155.32943726 418.84835815]
[152.44416809 404.12847900]
[149.55888367 389.40859985]
[146.67361450 374.68869019]
[143.28015137 371.32812500]
[141.96174622 365.80010986]
[143.92843628 359.48794556]
[141.48271179 344.68865967]
[139.03698730 329.88940430]
[136.39897156 327.54989624]
[134.76303101 323.81643677]
[134.77203369 319.17388916]
[136.82791138 314.37594604]
[135.04545593 299.48220825]
[133.26298523 284.58850098]
[131.48051453 269.69479370]
[129.69805908 254.80107117]
[118.43807220 241.34075928]
[125.82549286 224.47340393]
[123.82147980 209.60787964]
[120.71736908 194.93257141]
[116.53035736 180.52879333]
[112.34334564 166.12501526]
[108.04922485 151.75280762]
[103.64822388 137.41294861]
[99.24723053 123.07310486]
[94.84622955 108.73326111]
[89.65863037 102.56387329]
[90.48816681 94.14706421]
[86.30116272 79.74327850]
[75.01930237 68.65137482]
[78.89644623 54.27024460]
[74.70943451 39.86646271]
[70.52242279 25.46267891]
[62.36771774 38.05238724]
[47.72864914 41.32312393]
[34.99114227 33.40126038]
[31.45182037 18.82479858]
[39.13816452 5.94380140]
[53.64709091 2.13708687]
[66.66664124 9.58456612]
[63.78136826 -5.13532591]
[60.89609528 -19.85521698]
[58.01082230 -34.57510757]
[47.76144028 -42.40536880]
[45.66133118 -54.72499847]
[52.29867172 -64.83797455]
[49.63287354 -79.59918976]
[46.96707916 -94.36040497]
[44.19146729 -109.10137177]
[41.30619431 -123.82126617]
[38.42092133 -138.54115295]
[35.53565216 -153.26104736]
[32.65037918 -167.98094177]
[28.67828178 -182.44546509]
[23.64136505 -196.57449341]
[18.60444832 -210.70352173]
[13.56753349 -224.83255005]
[11.13897991 -210.03045654]
[3.85468578 -196.91789246]
[-7.42959642 -187.03533936]
[-21.38820076 -181.54376221]
[-36.38128662 -181.08833313]
[-50.64747620 -185.72251892]
[-62.51079559 -194.90194702]
[-70.57755280 -207.54818726]
[-73.90007782 -222.17558289]
[-72.08803558 -237.06573486]
[-65.35430908 -250.46934509]
[-54.48996353 -260.81179810]
[-40.77133942 -266.87802124]
[-25.81008148 -267.95541382]
[-11.36382580 -263.91738892]
[0.87029731 -255.23832703]
[9.45569801 -242.93640137]
[7.89517546 -257.85501099]
[6.33465242 -272.77362061]
[-3.17527747 -281.48706055]
[-4.16791105 -293.94491577]
[3.34519744 -303.42541504]
[2.00696325 -318.36560059]
[0.66872919 -333.30578613]
[-0.66950500 -348.24597168]
[-15.32579327 -352.11495972]
[-27.77315903 -360.76589966]
[-36.50852203 -373.15417480]
[-40.47704315 -387.78381348]
[-39.19950485 -402.88824463]
[-32.83017731 -416.64352417]
[-22.13818741 -427.38861084]
[-8.41464520 -433.82601929]
[6.68326569 -435.17837524]
[21.33239937 -431.28240967]
[33.76380157 -422.60852051]
[42.47631836 -410.20416260]
[46.41787338 -395.56723022]
[45.11250305 -380.46517944]
[38.71783447 -366.72167969]
[28.00606346 -355.99630737]
[14.27068043 -349.58419800]
[15.60891438 -334.64401245]
[16.94714928 -319.70382690]
[18.28538322 -304.76364136]
[29.13960457 -290.97406006]
[21.25325775 -274.33413696]
[22.81377983 -259.41552734]
[24.37430382 -244.49693298]
[27.69656181 -229.86946106]
[32.73347855 -215.74043274]
[37.77039337 -201.61140442]
[42.80731201 -187.48237610]
[47.07584763 -201.86221313]
[57.89419556 -212.25274658]
[72.43446350 -215.93794250]
[86.89585876 -211.95446777]
[97.49821472 -201.34362793]
[101.47009277 -186.87904358]
[97.77325439 -172.34173584]
[87.37404633 -161.53170776]
[72.99079895 -157.27470398]
[58.38325500 -160.68345642]
[47.37026978 -170.86621094]
[50.25554276 -156.14631653]
[53.14081573 -141.42642212]
[56.02608871 -126.70653534]
[58.91135788 -111.98664093]
[63.28276062 -106.02739716]
[61.72829819 -97.02620697]
[64.39408875 -82.26498413]
[67.05989075 -67.50376892]
[79.10107422 -54.73753357]
[72.73071289 -37.46038055]
[75.61598969 -22.74048996]
[78.50125885 -8.02059841]
[81.38653564 6.69929314]
[84.92620850 21.27566910]
[89.11321259 35.67945099]
[93.30022430 50.08323288]
[104.28260040 60.14487839]
[100.70494080 75.55626678]
[104.89195251 89.96005249]
[109.18607330 104.33226013]
[113.58707428 118.67211151]
[117.98807526 133.01196289]
[122.38906860 147.35180664]
[127.89860535 154.63760376]
[126.74713135 161.93800354]
[130.93414307 176.34178162]
[135.12115479 190.74557495]
[140.23802185 176.64529419]
[151.65563965 166.91709900]
[166.38948059 164.10389709]
[180.58813477 168.94105530]
[190.54013062 180.16415405]
[193.64401245 194.83950806]
[189.08845520 209.13099670]
[178.06425476 219.30288696]
[163.45314026 222.69624329]
[149.07438660 218.42407227]
[138.68701172 207.60386658]
[140.69102478 222.46939087]
[150.45616150 230.89582825]
[151.81927490 243.31861877]
[144.59176636 253.01860046]
[146.37423706 267.91232300]
[148.15670776 282.80603027]
[149.93916321 297.69973755]
[151.72163391 312.59347534]
[153.83625793 327.44366455]
[156.28198242 342.24295044]
[158.72770691 357.04220581]
[161.39350891 371.80343628]
[164.27877808 386.52331543]
[167.16404724 401.24319458]
[170.04933167 415.96310425]
[174.49664307 401.63754272]
[183.30125427 389.49346924]
[195.53398132 380.81243896]
[209.90388489 376.51058960]
[224.89447021 377.04190063]
[238.92375183 382.35034180]
[250.51116943 391.87564087]
[258.43389893 404.61260986]
[261.85580444 419.21710205]
[260.41580200 434.14779663]
[254.26583862 447.82910156]
[244.05491638 458.81716919]
[230.86065674 465.95236206]
[216.07545471 468.48175049]
[201.25962830 466.13836670]
[187.97674561 459.16952515]
[177.62855530 448.31063843]
[171.30709839 434.70751953]
[170.41427612 449.68093872]
[169.52146912 464.65435791]
[168.62864685 479.62774658]
[177.25015259 495.89892578]
[167.02249146 510.15942383]
[166.35270691 525.14447021]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 210]
[5 209]
[8 207]
[9 206]
[10 205]
[11 204]
[12 186]
[13 185]
[14 184]
[15 183]
[18 182]
[19 181]
[20 180]
[24 179]
[25 178]
[26 177]
[27 176]
[28 175]
[30 172]
[31 171]
[32 160]
[33 159]
[34 158]
[35 156]
[36 155]
[37 154]
[38 153]
[40 152]
[41 151]
[43 149]
[44 148]
[45 147]
[52 146]
[53 145]
[54 144]
[55 143]
[58 141]
[59 140]
[60 139]
[61 137]
[62 136]
[63 135]
[64 134]
[65 133]
[66 122]
[67 121]
[68 120]
[69 119]
[86 118]
[87 117]
[88 116]
[91 114]
[92 113]
[93 112]
[94 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
