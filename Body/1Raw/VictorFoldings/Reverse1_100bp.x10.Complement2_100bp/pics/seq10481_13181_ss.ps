%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAAUAAGGAAGAUCCGUAUCAUCCCUCCUAUACUCCACACUCGCUAUAUGAUCAUAAGGAUCUUCACUCUACCAUUUACGAUCAUAUUAUAAAUACAUxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[-39.75371552 357.74523926]
[-34.24119949 371.71411133]
[-30.38767624 386.22845459]
[-28.24526215 401.09207153]
[-27.84292984 416.10388184]
[-29.18612099 431.06091309]
[-32.25666809 445.76083374]
[-37.01305008 460.00491333]
[-43.39093781 473.60046387]
[-51.30408096 486.36364746]
[-60.64546204 498.12182617]
[-71.28874969 508.71603394]
[-83.09000397 518.00292969]
[-95.88962555 525.85699463]
[-109.51451874 532.17199707]
[-123.78041840 536.86242676]
[-138.49440002 539.86499023]
[-153.45745850 541.13903809]
[-168.46725464 540.66729736]
[-183.32080078 538.45617676]
[-197.81719971 534.53564453]
[-211.76040649 528.95855713]
[-224.96186829 521.80053711]
[-237.24304199 513.15820312]
[-248.43785095 503.14859009]
[-258.39486694 491.90695190]
[-266.97949219 479.58538818]
[-274.07556152 466.35049438]
[-279.58712769 452.38128662]
[-283.43969727 437.86666870]
[-285.58111572 423.00292969]
[-285.98245239 407.99108887]
[-284.63824463 393.03414917]
[-281.56674194 378.33441162]
[-276.80938721 364.09066772]
[-270.43060303 350.49554443]
[-262.51660156 337.73287964]
[-253.17443848 325.97531128]
[-242.53045654 315.38183594]
[-230.72857666 306.09570312]
[-217.92842102 298.24249268]
[-204.30311584 291.92843628]
[-190.03689575 287.23892212]
[-175.32272339 284.23733521]
[-160.35957336 282.96432495]
[-145.34980774 283.43704224]
[-130.49641418 285.64913940]
[-116.00027466 289.57067871]
[-102.05743408 295.14865112]
[-88.85645294 302.30758667]
[-76.57585144 310.95071411]
[-66.57768250 299.76873779]
[-56.57950974 288.58676147]
[-46.58133698 277.40478516]
[-43.86592484 262.75979614]
[-28.89960670 257.62951660]
[-18.90143394 246.44752502]
[-8.90326214 235.26556396]
[0.84270352 223.86309814]
[10.33160210 212.24583435]
[19.82049942 200.62857056]
[29.30939865 189.01130676]
[38.79829788 177.39404297]
[48.28719711 165.77677917]
[57.06779861 153.61532593]
[65.10897064 140.95278931]
[73.15014648 128.29026794]
[81.19131470 115.62774658]
[89.23249054 102.96522522]
[97.17917633 90.24318695]
[105.03092957 77.46234131]
[112.88268280 64.68150330]
[98.07965088 67.10432434]
[85.81916046 58.46253967]
[83.12458801 43.70654678]
[91.53950500 31.28925323]
[106.24346161 28.32384682]
[118.81336975 36.50904846]
[122.04876709 51.15506363]
[124.08771515 35.46579361]
[137.89572144 29.88115501]
[146.85643005 17.85177612]
[155.81712341 5.82239914]
[164.77781677 -6.20697832]
[156.07702637 -18.56633186]
[151.62840271 -32.99034882]
[151.85559082 -48.06273270]
[156.72378540 -62.30758667]
[165.74427795 -74.33393860]
[178.02363586 -82.97155762]
[192.35203552 -87.38483429]
[207.32255554 -87.15357971]
[221.46929932 -82.31303406]
[230.42999268 -94.34240723]
[232.46893311 -110.03168488]
[246.27694702 -115.61631775]
[255.23764038 -127.64569855]
[264.19833374 -139.67507935]
[273.15902710 -151.70445251]
[262.17657471 -161.94401550]
[252.38722229 -173.32962036]
[243.90982056 -185.72303772]
[236.84727478 -198.97383118]
[231.28532410 -212.92115784]
[227.29147339 -227.39570618]
[224.91421509 -242.22175598]
[224.18240356 -257.21932983]
[225.10491943 -272.20642090]
[227.67056274 -287.00103760]
[231.84820557 -301.42358398]
[237.58709717 -315.29904175]
[244.81762695 -328.45895386]
[253.45196533 -340.74353027]
[263.38534546 -352.00369263]
[274.49716187 -362.10275269]
[286.65252686 -370.91806030]
[299.70391846 -378.34268188]
[313.49285889 -384.28646851]
[327.85195923 -388.67721558]
[342.60696411 -391.46170044]
[357.57873535 -392.60604858]
[372.58551025 -392.09643555]
[387.44512939 -389.93899536]
[401.97723389 -386.15997314]
[416.00540161 -380.80517578]
[429.35934448 -373.93963623]
[441.87695312 -365.64669800]
[453.40628052 -356.02703857]
[463.80737305 -345.19744873]
[472.95394897 -333.28933716]
[480.73501587 -320.44726562]
[487.05609131 -306.82717896]
[491.84045410 -292.59436035]
[495.03002930 -277.92160034]
[496.58605957 -262.98699951]
[496.48971558 -247.97189331]
[494.74215698 -233.05850220]
[491.36456299 -218.42788696]
[486.39794922 -204.25762939]
[479.90258789 -190.71977234]
[471.95736694 -177.97862244]
[462.65872192 -166.18887329]
[452.11950684 -155.49362183]
[440.46768188 -146.02272034]
[427.84469604 -137.89109802]
[414.40374756 -131.19750977]
[400.30801392 -126.02318573]
[385.72860718 -122.43093872]
[370.84252930 -120.46437073]
[355.83044434 -120.14736938]
[340.87460327 -121.48377228]
[326.15655518 -124.45735931]
[311.85494995 -129.03204346]
[298.14343262 -135.15226746]
[285.18841553 -142.74375916]
[276.22772217 -130.71438599]
[267.26702881 -118.68499756]
[258.30633545 -106.65562439]
[256.90829468 -91.82677460]
[242.45936584 -85.38171387]
[233.49867249 -73.35233307]
[242.18649292 -61.18340683]
[246.69374084 -46.90563583]
[246.56704712 -31.91350174]
[241.80619812 -17.67533875]
[232.86552429 -5.58952475]
[220.61048889 3.15285563]
[206.23396301 7.68538904]
[191.14009094 7.55218935]
[176.80718994 2.75371742]
[167.84649658 14.78309536]
[158.88580322 26.81247330]
[149.92510986 38.84185028]
[148.52708435 53.67070007]
[134.07814026 60.11576080]
[125.66352844 72.53325653]
[117.81177521 85.31409454]
[109.96001434 98.09494019]
[108.75935364 106.06557465]
[101.89501190 111.00639343]
[93.85384369 123.66892242]
[85.81266785 136.33145142]
[77.77149963 148.99397278]
[69.73032379 161.65649414]
[84.11930847 157.41889954]
[98.28928375 162.33944702]
[106.95520782 174.58287048]
[106.88489532 189.58271790]
[98.10458374 201.74438477]
[83.88910675 206.53187561]
[69.54048157 202.15957642]
[60.41039276 190.25825500]
[59.90445709 175.26567078]
[50.41556168 186.88293457]
[40.92666245 198.50019836]
[31.43776321 210.11746216]
[21.94886589 221.73472595]
[12.45996666 233.35198975]
[11.62339783 238.50439453]
[9.14222336 242.42829895]
[5.75979185 244.70298767]
[2.27871227 245.26373291]
[-7.71945953 256.44570923]
[-17.71763229 267.62768555]
[-21.14817810 283.07247925]
[-35.39936066 287.40295410]
[-45.39753342 298.58493042]
[-55.39570618 309.76690674]
[-65.39387512 320.94888306]
[-55.43609619 332.18984985]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[51 209]
[52 208]
[53 207]
[54 206]
[56 204]
[57 203]
[58 202]
[59 198]
[60 197]
[61 196]
[62 195]
[63 194]
[64 193]
[65 184]
[66 183]
[67 182]
[68 181]
[69 180]
[70 178]
[71 177]
[72 176]
[79 175]
[81 173]
[82 172]
[83 171]
[84 170]
[93 161]
[94 160]
[96 158]
[97 157]
[98 156]
[99 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
