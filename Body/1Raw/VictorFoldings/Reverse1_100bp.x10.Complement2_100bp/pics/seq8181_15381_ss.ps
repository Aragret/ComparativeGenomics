%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[67.19921112 571.69067383]
[54.44828796 579.60144043]
[41.20241928 586.65216064]
[27.51951981 592.81201172]
[13.45942688 598.05407715]
[-0.91637927 602.35546875]
[-15.54503632 605.69738770]
[-30.36257744 608.06512451]
[-45.30420685 609.44836426]
[-60.30458832 609.84112549]
[-75.29812622 609.24157715]
[-90.21926880 607.65246582]
[-105.00275421 605.08062744]
[-119.58394623 601.53741455]
[-133.89907837 597.03820801]
[-147.88555908 591.60278320]
[-161.48222351 585.25482178]
[-174.62962341 578.02215576]
[-187.27027893 569.93640137]
[-199.34887695 561.03283691]
[-210.81263733 551.35046387]
[-221.61141968 540.93164062]
[-231.69799805 529.82189941]
[-241.02827454 518.06982422]
[-249.56143188 505.72677612]
[-257.26019287 492.84674072]
[-264.09085083 479.48605347]
[-270.02355957 465.70315552]
[-275.03237915 451.55828857]
[-279.09539795 437.11328125]
[-282.19485474 422.43136597]
[-284.31716919 407.57669067]
[-285.45312500 392.61422729]
[-285.59768677 377.60940552]
[-284.75027466 362.62780762]
[-282.91455078 347.73501587]
[-280.09857178 332.99609375]
[-276.31463623 318.47549438]
[-271.57928467 304.23672485]
[-265.91326904 290.34207153]
[-259.34130859 276.85226440]
[-251.89215088 263.82626343]
[-243.59840393 251.32110596]
[-234.49630737 239.39141846]
[-224.62565613 228.08937073]
[-214.02964783 217.46440125]
[-202.75457764 207.56295776]
[-190.84976196 198.42834473]
[-178.36726379 190.10049438]
[-165.36166382 182.61584473]
[-151.88984680 176.00709534]
[-138.01068115 170.30316162]
[-123.78490448 165.52899170]
[-109.27468872 161.70544434]
[-94.54350281 158.84925842]
[-79.65575409 156.97291565]
[-64.67654419 156.08460999]
[-49.67138290 156.18824768]
[-34.70587540 157.28335571]
[-19.84546280 159.36514282]
[-5.15512991 162.42453003]
[9.30088806 166.44812012]
[23.45937729 171.41831970]
[37.25842285 177.31340027]
[50.63769150 184.10757446]
[58.29829025 171.21125793]
[65.95888519 158.31492615]
[73.61948395 145.41859436]
[80.09897614 131.89025879]
[85.34569550 117.83777618]
[90.59241486 103.78530884]
[90.23749542 95.73257446]
[96.02327728 89.56364441]
[101.47863007 75.59085083]
[106.93399048 61.61804962]
[112.38934326 47.64525223]
[117.84470367 33.67245483]
[122.88162231 19.54342651]
[127.49562836 5.27069283]
[132.10963440 -9.00204086]
[131.10105896 -15.53612900]
[133.22491455 -20.80740166]
[137.07934570 -23.62740326]
[142.11625671 -37.75643158]
[147.15316772 -51.88546371]
[152.19009399 -66.01448822]
[157.22700500 -80.14352417]
[143.67832947 -86.61169434]
[130.86653137 -94.43869781]
[118.92743683 -103.54155731]
[107.98759460 -113.82376862]
[98.16298676 -125.17635345]
[89.55774689 -137.47895813]
[82.26310730 -150.60115051]
[76.35638428 -164.40385437]
[71.90019989 -178.74075317]
[68.94179535 -193.45985413]
[67.51251984 -208.40512085]
[67.62752533 -223.41813660]
[69.28560638 -238.33976746]
[72.46917725 -253.01181030]
[77.14448547 -267.27874756]
[83.26197815 -280.98934937]
[90.75680542 -293.99826050]
[99.54950714 -306.16757202]
[109.54689789 -317.36828613]
[120.64297485 -327.48168945]
[132.72013855 -336.40057373]
[145.65034485 -344.03036499]
[159.29652405 -350.29022217]
[173.51403809 -355.11373901]
[188.15216064 -358.44982910]
[203.05570984 -360.26309204]
[218.06672668 -360.53433228]
[233.02606201 -359.26068115]
[247.77514648 -356.45559692]
[262.15765381 -352.14886475]
[276.02105713 -346.38610840]
[289.21847534 -339.22839355]
[301.60995483 -330.75167847]
[313.06417847 -321.04574585]
[323.45968628 -310.21350098]
[332.68627930 -298.36978149]
[340.64617920 -285.64013672]
[347.25500488 -272.15948486]
[352.44268799 -258.07077026]
[356.15423584 -243.52331543]
[358.35031128 -228.67134094]
[359.00762939 -213.67227173]
[358.11920166 -198.68511963]
[355.69448853 -183.86874390]
[351.75915527 -169.38023376]
[346.35494995 -155.37313843]
[339.53912354 -141.99597168]
[331.38397217 -129.39051819]
[321.97592163 -117.69041443]
[311.41467285 -107.01968384]
[299.81222534 -97.49144745]
[287.29156494 -89.20670319]
[273.98541260 -82.25328064]
[260.03482056 -76.70487976]
[245.58764648 -72.62032318]
[230.79707336 -70.04290771]
[215.81988525 -68.99996185]
[200.81483459 -69.50253296]
[185.94099426 -71.54530334]
[171.35603333 -75.10660553]
[166.31912231 -60.97757721]
[161.28219604 -46.84854507]
[156.24528503 -32.71951675]
[151.20837402 -18.59048653]
[146.38237000 -4.38803148]
[141.76835632 9.88470173]
[137.15435791 24.15743446]
[138.30915833 26.71175575]
[138.52175903 29.87741852]
[137.55419922 33.29783630]
[135.30195618 36.53695679]
[131.81750488 39.12781143]
[126.36214447 53.10060883]
[120.90678406 67.07341003]
[115.45143127 81.04620361]
[109.99607086 95.01900482]
[104.64488983 109.03202820]
[99.39817047 123.08449554]
[94.15145111 137.13696289]
[106.17646027 128.17041016]
[120.88430023 125.22433472]
[135.43513489 128.86759949]
[147.01940918 138.39674377]
[153.40039062 151.97183228]
[153.34600830 166.97174072]
[146.86676025 180.50019836]
[135.21369934 189.94509888]
[120.63683319 193.48277283]
[105.95073700 190.43013000]
[93.99106598 181.37661743]
[87.06703949 168.07031250]
[86.51580811 153.07919312]
[78.85521698 165.97552490]
[71.19461823 178.87184143]
[63.53401947 191.76817322]
[75.90050507 200.26733398]
[87.67824554 209.56521606]
[98.81572723 219.62117004]
[109.26424408 230.39122009]
[118.97811890 241.82827759]
[127.91487885 253.88233948]
[136.03543091 266.50067139]
[143.30426025 279.62811279]
[149.68960571 293.20724487]
[155.16354370 307.17871094]
[159.70210266 321.48141479]
[163.28547668 336.05279541]
[165.89797974 350.82913208]
[167.52819824 365.74584961]
[168.16897583 380.73767090]
[167.81755066 395.73907471]
[166.47541809 410.68447876]
[164.14848328 425.50848389]
[160.84689331 440.14627075]
[156.58509827 454.53387451]
[151.38174438 468.60833740]
[145.25956726 482.30813599]
[138.24534607 495.57336426]
[130.36973572 508.34603882]
[121.66720581 520.57025146]
[112.17578888 532.19256592]
[101.93699646 543.16223145]
[90.99559021 553.43115234]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[65 182]
[66 181]
[67 180]
[68 179]
[69 166]
[70 165]
[71 164]
[73 163]
[74 162]
[75 161]
[76 160]
[77 159]
[78 154]
[79 153]
[80 152]
[83 151]
[84 150]
[85 149]
[86 148]
[87 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
