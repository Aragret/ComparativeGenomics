%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[70.81146240 318.51940918]
[70.35055542 303.50268555]
[71.93878937 288.56311035]
[75.54656982 273.97894287]
[81.10668182 260.02191162]
[88.51556396 246.95201111]
[97.63516998 235.01272583]
[108.29562378 224.42648315]
[120.29831696 215.39050293]
[133.41964722 208.07310486]
[127.96429443 194.10031128]
[122.50894165 180.12750244]
[117.05358124 166.15470886]
[111.59822845 152.18191528]
[106.23733521 147.09440613]
[106.16736603 137.96025085]
[100.92064667 123.90778351]
[95.67392731 109.85530853]
[87.44512177 97.31391144]
[76.64296722 86.90653229]
[65.84081268 76.49916077]
[55.03865433 66.09178925]
[44.23649597 55.68441391]
[28.53912544 64.58216095]
[10.88506603 68.22995758]
[-7.01990986 66.28585815]
[-23.44901085 58.94771576]
[-36.82096100 46.93309021]
[-45.85219193 31.40909958]
[-49.68005753 13.87905216]
[-47.94520569 -3.96313643]
[-40.82530975 -20.39661789]
[-52.37160873 -29.97173691]
[-63.91791153 -39.54685593]
[-75.46421051 -49.12197495]
[-87.01051331 -58.69709778]
[-98.55681610 -68.27221680]
[-110.10311890 -77.84733582]
[-120.59315491 -67.11365509]
[-131.92318726 -57.27073288]
[-144.01782227 -48.38407135]
[-156.79655457 -40.51281357]
[-170.17436218 -33.70933914]
[-184.06219482 -28.01892662]
[-198.36764526 -23.47944450]
[-212.99549866 -20.12110138]
[-227.84843445 -17.96624947]
[-242.82757568 -17.02922821]
[-257.83325195 -17.31627274]
[-272.76559448 -18.82547188]
[-287.52526855 -21.54678535]
[-302.01397705 -25.46210098]
[-316.13534546 -30.54536057]
[-329.79541016 -36.76273727]
[-342.90322876 -44.07285690]
[-355.37158203 -52.42707062]
[-367.11749268 -61.76977539]
[-378.06280518 -72.03880310]
[-388.13467407 -83.16581726]
[-397.26608276 -95.07675934]
[-405.39620972 -107.69235992]
[-412.47100830 -120.92868042]
[-418.44338989 -134.69761658]
[-423.27355957 -148.90754700]
[-426.92944336 -163.46389771]
[-429.38665771 -178.26980591]
[-430.62884521 -193.22673035]
[-430.64779663 -208.23515320]
[-429.44332886 -223.19515991]
[-427.02349854 -238.00723267]
[-423.40438843 -252.57275391]
[-418.61007690 -266.79483032]
[-412.67248535 -280.57879639]
[-405.63110352 -293.83294678]
[-397.53283691 -306.46902466]
[-388.43151855 -318.40295410]
[-378.38778687 -329.55535889]
[-367.46841431 -339.85198975]
[-355.74612427 -349.22430420]
[-343.29888916 -357.60995483]
[-330.20956421 -364.95312500]
[-316.56524658 -371.20495605]
[-302.45675659 -376.32385254]
[-287.97793579 -380.27572632]
[-273.22521973 -383.03427124]
[-258.29672241 -384.58117676]
[-243.29180908 -384.90606689]
[-228.31034851 -384.00686646]
[-213.45202637 -381.88949585]
[-198.81573486 -378.56808472]
[-184.49888611 -374.06472778]
[-170.59672546 -368.40939331]
[-157.20179749 -361.63970947]
[-144.40322876 -353.80072021]
[-132.28620911 -344.94461060]
[-120.93137360 -335.13031006]
[-110.41428375 -324.42312622]
[-100.80491638 -312.89434814]
[-92.16724396 -300.62066650]
[-84.55873871 -287.68377686]
[-78.03003693 -274.16973877]
[-72.62458038 -260.16851807]
[-68.37834930 -245.77331543]
[-65.31959534 -231.07987976]
[-63.46868896 -216.18603516]
[-62.83793259 -201.19085693]
[-63.43152618 -186.19418335]
[-65.24552917 -171.29579163]
[-68.26785278 -156.59481812]
[-72.47840118 -142.18913269]
[-77.84914398 -128.17456055]
[-84.34433746 -114.64440918]
[-91.92076874 -101.68869019]
[-100.52799988 -89.39363861]
[-88.98169708 -79.81851959]
[-77.43539429 -70.24340057]
[-65.88909149 -60.66827774]
[-54.34279251 -51.09315872]
[-42.79648972 -41.51803970]
[-31.25018883 -31.94291878]
[-21.54371452 -39.24856567]
[-10.51502132 -44.36069870]
[1.34729254 -47.04945374]
[13.51698875 -47.19240952]
[25.45353317 -44.78014755]
[36.62610245 -39.91681671]
[46.53719711 -32.81562424]
[54.74478531 -23.78951454]
[60.88201904 -13.23735428]
[64.67363739 -1.62632358]
[65.94831085 10.52877522]
[64.64635468 22.68834114]
[60.82256317 34.31192398]
[54.64387131 44.88225937]
[65.44602966 55.28963089]
[76.24818420 65.69700623]
[87.05033875 76.10437775]
[97.85249329 86.51174927]
[92.79525757 72.38998413]
[90.55026245 57.55893326]
[91.20144653 42.57307434]
[94.72444916 27.99266434]
[100.98757935 14.36279869]
[109.75667572 2.19304204]
[120.70389557 -8.06163025]
[133.41998291 -16.01784134]
[147.42951965 -21.37813950]
[162.20875549 -23.94212723]
[177.20516968 -23.61395073]
[191.85809326 -20.40587425]
[205.61972046 -14.43783855]
[217.97558594 -5.93296051]
[228.46371460 4.79079819]
[236.69203186 17.33252144]
[242.35290527 31.22332954]
[245.23469543 45.94390106]
[245.22967529 60.94390106]
[242.33801270 75.66254425]
[236.66784668 89.54955292]
[228.43113708 102.08576202]
[217.93580627 112.80249786]
[205.57426453 121.29909515]
[191.80863953 127.25791168]
[177.15356445 130.45617676]
[162.15693665 130.77430725]
[147.37942505 128.20040894]
[133.37347412 122.83073425]
[120.66272736 114.86601257]
[109.72640228 104.60858917]
[114.97312164 118.66106415]
[120.21984100 132.71353149]
[125.57102203 146.72656250]
[131.02638245 160.69935608]
[136.48173523 174.67214966]
[141.93708801 188.64494324]
[147.39245605 202.61775208]
[162.00070190 199.10876465]
[176.95069885 197.62170410]
[191.96392822 198.18423462]
[206.76072693 200.78591919]
[221.06541443 205.37825012]
[234.61151123 211.87570190]
[247.14666748 220.15722656]
[258.43737793 230.06852722]
[268.27325439 241.42498779]
[276.47109985 254.01502991]
[282.87817383 267.60409546]
[287.37512207 281.93905640]
[289.87820435 296.75286865]
[290.34072876 311.76950073]
[288.75411987 326.70928955]
[285.14791870 341.29382324]
[279.58929443 355.25146484]
[272.18185425 368.32217407]
[263.06353760 380.26242065]
[252.40422058 390.84982300]
[240.40249634 399.88711548]
[227.28195190 407.20593262]
[213.28701782 412.66992188]
[198.67839050 416.17733765]
[183.72822571 417.66278076]
[168.71505737 417.09863281]
[153.91854858 414.49533081]
[139.61434937 409.90145874]
[126.06895447 403.40252686]
[113.53469086 395.11965942]
[102.24507141 385.20712280]
[92.41041565 373.84960938]
[84.21393585 361.25866699]
[77.80832672 347.66891479]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 176]
[11 175]
[12 174]
[13 173]
[14 172]
[16 171]
[17 170]
[18 169]
[19 138]
[20 137]
[21 136]
[22 135]
[23 134]
[32 120]
[33 119]
[34 118]
[35 117]
[36 116]
[37 115]
[38 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
