%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[172.16261292 485.95001221]
[157.83515930 490.70678711]
[142.75559998 491.42050171]
[128.04292297 488.03820801]
[114.78892517 480.81088257]
[103.97712708 470.27487183]
[96.40983582 457.21200562]
[92.64860535 442.59161377]
[92.97253418 427.49865723]
[97.35758209 413.05310059]
[105.47836304 400.32693481]
[116.73224640 390.26449585]
[130.28413391 383.61248779]
[145.12837219 380.86456299]
[146.46661377 365.92437744]
[147.80484009 350.98419189]
[149.14308167 336.04400635]
[150.48130798 321.10382080]
[148.80976868 306.19723511]
[144.19575500 291.92449951]
[139.58175659 277.65179443]
[134.96774292 263.37905884]
[130.35372925 249.10630798]
[125.73972321 234.83358765]
[114.46264648 225.10337830]
[117.57986450 209.59230042]
[112.96585083 195.31956482]
[108.35184479 181.04684448]
[97.07476807 171.31663513]
[100.19198608 155.80555725]
[96.91650391 170.44357300]
[88.35160828 182.75788879]
[75.76784515 190.92176819]
[61.03194809 193.72415161]
[46.32989502 190.74931335]
[33.84265137 182.43855286]
[25.42262459 170.02471924]
[22.31887436 155.34933472]
[24.99182510 140.58941650]
[33.04496002 127.93449402]
[45.28364182 119.26185608]
[59.89233780 115.85803986]
[74.70393372 118.22797394]
[87.52121735 126.02010345]
[96.44200897 138.07676697]
[94.88148499 123.15817261]
[93.32096100 108.23956299]
[90.98547363 93.42249298]
[87.88136292 78.74719238]
[84.77725220 64.07189178]
[81.67314148 49.39658737]
[78.56903076 34.72128677]
[75.02935791 20.14491081]
[71.05726624 5.68038750]
[67.08516693 -8.78413677]
[63.11307144 -23.24866104]
[51.99760437 -34.50730133]
[56.08843231 -48.82911682]
[42.63467407 -56.67985916]
[38.81245804 -71.40552521]
[46.37985229 -84.18325043]
[42.40775681 -98.64777374]
[38.43565750 -113.11229706]
[35.58999634 -98.38469696]
[29.87643433 -84.51548004]
[21.52254295 -72.05704498]
[10.86105347 -61.50561905]
[-1.68339002 -53.28145218]
[-15.61114788 -47.71210861]
[-30.36748314 -45.01942062]
[-45.36465454 -45.31063080]
[-60.00533676 -48.57414246]
[-73.70639038 -54.67997360]
[-85.92210388 -63.38492584]
[-96.16594696 -74.34229279]
[-104.02989197 -87.11563110]
[-109.20072937 -101.19620514]
[-111.47251129 -116.02317047]
[-110.75474548 -131.00598145]
[-107.07602692 -145.54789734]
[-100.58287811 -159.06968689]
[-91.53390503 -171.03280640]
[-80.28954315 -180.96075439]
[-67.29763794 -188.45812988]
[-53.07566071 -193.22627258]
[-38.19005966 -195.07530212]
[-23.23372650 -193.93157959]
[-8.80236816 -189.84062195]
[4.52922344 -182.96540833]
[16.23005486 -173.57974243]
[25.83408546 -162.05747986]
[32.95879364 -148.85752869]
[37.31959152 -134.50975037]
[39.76531601 -149.30902100]
[42.21104431 -164.10829163]
[44.65677261 -178.90756226]
[47.10250092 -193.70683289]
[33.11668396 -199.29353333]
[20.65907860 -207.75651550]
[10.31234550 -218.69996643]
[2.56041956 -231.61204529]
[-2.23412681 -245.88882446]
[-3.84704399 -260.86254883]
[-2.20289302 -275.83288574]
[2.62142634 -290.09963989]
[10.40027237 -302.99551392]
[20.76981354 -313.91735840]
[33.24504852 -322.35433960]
[47.24248505 -327.91183472]
[62.10744095 -330.32989502]
[77.14465332 -329.49548340]
[91.65081024 -325.44757080]
[104.94742584 -318.37551880]
[116.41259003 -308.61004639]
[125.51006317 -296.60797119]
[131.81434631 -282.93060303]
[135.03056335 -268.21768188]
[135.00828552 -253.15736389]
[131.74856567 -238.45402527]
[125.40386200 -224.79536438]
[116.27092743 -212.82025146]
[104.77692413 -203.08874512]
[91.45944977 -196.05604553]
[76.94138336 -192.05105591]
[61.90177155 -191.26110840]
[59.45604324 -176.46183777]
[57.01031494 -161.66256714]
[54.56458664 -146.86329651]
[52.11886215 -132.06402588]
[52.90018463 -117.08438873]
[56.87228012 -102.61986542]
[60.84437561 -88.15534210]
[73.87614441 -81.03434753]
[78.11046600 -66.42185211]
[70.55295563 -52.80121231]
[81.38430786 -42.57717133]
[77.57759094 -27.22075653]
[81.54969025 -12.75623226]
[85.52178955 1.70829129]
[89.49388123 16.17281532]
[91.86067963 17.67495155]
[93.77506256 20.20511818]
[94.84250641 23.59568977]
[94.73635864 27.53945160]
[93.24433136 31.61717606]
[96.34844208 46.29248047]
[99.45255280 60.96778107]
[102.55666351 75.64308167]
[105.66077423 90.31838989]
[113.76913452 77.69877625]
[128.05436707 73.12362671]
[141.98545837 78.68461609]
[149.19329834 91.83935547]
[146.38256836 106.57366180]
[134.83828735 116.15120697]
[119.83834076 116.19327545]
[108.23956299 106.67903900]
[109.80008698 121.59764862]
[111.36061096 136.51625061]
[114.46472168 151.19155884]
[126.07182312 161.94262695]
[122.62458038 176.43283081]
[127.23858643 190.70556641]
[131.85260010 204.97830200]
[143.45970154 215.72937012]
[140.01245117 230.21957397]
[144.62646484 244.49230957]
[149.24047852 258.76504517]
[153.85447693 273.03778076]
[158.46849060 287.31051636]
[163.08250427 301.58325195]
[165.24945068 286.74060059]
[170.51486206 272.69509888]
[178.63920593 260.08578491]
[189.25286865 249.48625183]
[201.87301636 241.37872314]
[215.92549133 236.13203430]
[230.77102661 233.98486328]
[245.73422241 235.03491211]
[260.13436890 239.23439026]
[273.31637573 246.39227295]
[284.68048096 256.18289185]
[293.70977783 268.16088867]
[299.99343872 281.78128052]
[303.24563599 296.42449951]
[303.31838989 311.42431641]
[300.20837402 326.09835815]
[294.05712891 339.77908325]
[285.14443970 351.84408569]
[273.87579346 361.74447632]
[260.76385498 369.02987671]
[246.40512085 373.36883545]
[231.45280457 374.56396484]
[216.58714294 372.56088257]
[202.48443604 367.45074463]
[189.78625488 359.46600342]
[179.07028198 348.96990967]
[170.82402039 336.43997192]
[165.42149353 322.44204712]
[164.08326721 337.38223267]
[162.74502563 352.32241821]
[161.40678406 367.26260376]
[160.06855774 382.20278931]
[174.18812561 387.54510498]
[186.34208679 396.49963379]
[195.62854004 408.40191650]
[201.35835266 422.36874390]
[203.10633850 437.36364746]
[200.74279785 452.27392578]
[194.44309998 465.99310303]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 203]
[15 202]
[16 201]
[17 200]
[18 199]
[19 171]
[20 170]
[21 169]
[22 168]
[23 167]
[24 166]
[26 164]
[27 163]
[28 162]
[30 160]
[45 159]
[46 158]
[47 157]
[48 149]
[49 148]
[50 147]
[51 146]
[52 145]
[53 140]
[54 139]
[55 138]
[56 137]
[58 135]
[61 132]
[62 131]
[63 130]
[93 129]
[94 128]
[95 127]
[96 126]
[97 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
