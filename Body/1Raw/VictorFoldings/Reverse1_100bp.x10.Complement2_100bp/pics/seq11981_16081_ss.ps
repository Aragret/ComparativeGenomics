%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCACAUACUUGUACUCCCACAAAAGAGCACACUUACUCCCAAAAUACAACAAUUACACCACCCACUCACUCGGGGUAACACAACACCAUUUAUACAUCUxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[-19.50065994 656.41326904]
[-19.84685898 671.44824219]
[-22.79878616 686.19470215]
[-28.26673317 700.20440674]
[-36.08453751 713.05169678]
[-46.01462173 724.34613037]
[-57.75522614 733.74450684]
[-70.94956207 740.96118164]
[-85.19667816 745.77691650]
[-100.06360626 748.04528809]
[-115.09857178 747.69738770]
[-129.84466553 744.74377441]
[-143.85379028 739.27423096]
[-156.70019531 731.45495605]
[-167.99351501 721.52362061]
[-177.39054871 709.78192139]
[-184.60574341 696.58679199]
[-189.41981506 682.33911133]
[-191.68649292 667.47192383]
[-191.33688354 652.43701172]
[-188.38162231 637.69122314]
[-182.91049194 623.68273926]
[-175.08976746 610.83721924]
[-165.15711975 599.54504395]
[-153.41439819 590.14935303]
[-140.21841431 582.93560791]
[-125.97021484 578.12316895]
[-111.10276794 575.85815430]
[-96.06788635 576.20947266]
[-81.32245636 579.16644287]
[-75.86709595 565.19366455]
[-70.41174316 551.22082520]
[-64.95638275 537.24804688]
[-59.50102997 523.27526855]
[-54.04566956 509.30245972]
[-48.59031296 495.32965088]
[-53.15846252 484.12881470]
[-48.72787094 472.44320679]
[-37.16372299 466.73065186]
[-31.50093460 452.84063721]
[-25.83814812 438.95059204]
[-20.17536163 425.06057739]
[-14.51257515 411.17053223]
[-8.84978867 397.28051758]
[-3.18700218 383.39050293]
[2.37222362 369.45867920]
[7.82758045 355.48590088]
[13.28293800 341.51309204]
[18.73829460 327.54028320]
[7.47369432 317.72225952]
[0.23427127 304.61804199]
[-2.08932829 289.79998779]
[0.80240750 275.05346680]
[8.57940483 262.16207886]
[20.31955719 252.69163513]
[34.61801910 247.80023193]
[49.75531387 248.09645081]
[55.21067047 234.12365723]
[60.66602707 220.15086365]
[66.12138367 206.17805481]
[71.57674408 192.20526123]
[75.87086487 177.83305359]
[78.97497559 163.15774536]
[64.53669739 156.33210754]
[52.13974380 146.26390076]
[42.49771118 133.53266907]
[36.16560745 118.87123108]
[33.50792313 103.12353516]
[34.67763138 87.19604492]
[39.60741043 72.00556946]
[48.01348877 58.42650223]
[59.41199875 47.24047852]
[73.14682770 39.09138107]
[88.42736816 34.44828796]
[104.37404633 33.57846451]
[107.03984070 18.81724548]
[109.70563507 4.05602837]
[112.37142944 -10.70518875]
[107.20986176 -25.66074944]
[117.08588409 -36.81034851]
[119.75167847 -51.57156372]
[122.41747284 -66.33277893]
[115.79058838 -83.51317596]
[127.64036560 -96.45726776]
[130.08609009 -111.25653839]
[119.64007568 -125.28864288]
[122.51782227 -142.20117188]
[136.45709229 -151.61050415]
[138.68220520 -166.44454956]
[140.90733337 -181.27859497]
[143.13244629 -196.11264038]
[141.22032166 -200.96968079]
[141.34956360 -205.61042786]
[143.09593201 -209.29353333]
[145.80242920 -211.55343628]
[148.68769836 -226.27333069]
[151.57296753 -240.99322510]
[154.45825195 -255.71311951]
[140.64497375 -261.71374512]
[128.44485474 -270.54388428]
[118.42854309 -281.79055786]
[111.06449127 -294.92770386]
[106.69714355 -309.34091187]
[105.53076935 -324.35601807]
[107.61991119 -339.27075195]
[112.86686707 -353.38754272]
[121.02622223 -366.04608154]
[131.71635437 -376.65435791]
[144.43725586 -384.71615601]
[158.59394836 -389.85443115]
[173.52432251 -391.82885742]
[188.53001404 -390.54708862]
[202.90922546 -386.06906128]
[215.98937988 -378.60424805]
[227.15870667 -368.50177002]
[235.89480591 -356.23416138]
[241.78906250 -342.37515259]
[244.56579590 -327.57299805]
[244.09512329 -312.51998901]
[240.39907837 -297.92022705]
[233.65051270 -284.45654297]
[224.16508484 -272.75863647]
[212.38642883 -263.37368774]
[198.86547852 -256.74060059]
[184.23460388 -253.16964722]
[169.17813110 -252.82785034]
[166.29286194 -238.10795593]
[163.40759277 -223.38806152]
[160.52232361 -208.66816711]
[157.96649170 -193.88751221]
[155.74136353 -179.05346680]
[153.51625061 -164.21943665]
[151.29113770 -149.38539124]
[160.32444763 -140.19686890]
[162.44783020 -127.29054260]
[156.66496277 -115.34194183]
[144.88536072 -108.81081390]
[142.43963623 -94.01154327]
[149.22680664 -83.99850464]
[147.31034851 -71.64897919]
[137.17869568 -63.66698456]
[134.51289368 -48.90576935]
[131.84709167 -34.14455032]
[137.19934082 -20.24481201]
[127.13265228 -8.03939342]
[124.46685028 6.72182369]
[121.80105591 21.48304176]
[119.13526154 36.24425888]
[132.02851868 41.64653778]
[143.50921631 49.62241364]
[153.07099915 59.82012177]
[160.29214478 71.78990936]
[164.85421753 85.00386047]
[166.55596924 98.87918854]
[165.32237244 112.80395508]
[161.20782471 126.16402435]
[154.39378357 138.37016296]
[145.18078613 148.88403320]
[133.97515869 157.24195862]
[121.27111053 163.07528687]
[107.62892151 166.12678528]
[93.65027618 166.26185608]
[90.54616547 180.93716431]
[101.38459015 170.56756592]
[115.77474976 166.33396912]
[130.50184631 169.18220520]
[142.27583313 178.47593689]
[148.46633911 192.13893127]
[147.69039917 207.11885071]
[140.12136841 220.06913757]
[127.45018768 228.09664917]
[112.50762177 229.40805054]
[98.63188171 223.71034241]
[88.92285156 212.27641296]
[85.54953766 197.66061401]
[80.09418488 211.63342285]
[74.63882446 225.60621643]
[69.18346405 239.57901001]
[63.72811127 253.55181885]
[75.06167603 263.59051514]
[82.26332855 276.87615967]
[84.48084259 291.79605103]
[81.46567535 306.54660034]
[73.60064697 319.35137939]
[61.85145187 328.67504883]
[47.64815140 333.40744019]
[32.71109390 332.99566650]
[27.25573540 346.96844482]
[21.80037880 360.94125366]
[16.34502220 374.91403198]
[16.13906479 384.04614258]
[10.70302486 389.05328369]
[5.04023790 402.94329834]
[-0.62254852 416.83334351]
[-6.28533506 430.72335815]
[-11.94812202 444.61337280]
[-17.61090851 458.50341797]
[-23.27369499 472.39343262]
[-20.34558105 490.57330322]
[-34.61751556 500.78500366]
[-40.07287216 514.75781250]
[-45.52822876 528.73059082]
[-50.98358917 542.70336914]
[-56.43894577 556.67620850]
[-61.89430237 570.64898682]
[-67.34965515 584.62176514]
[-54.50147247 592.43811035]
[-43.20590210 602.36694336]
[-33.80620193 614.10650635]
[-26.58802032 627.29998779]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 206]
[31 205]
[32 204]
[33 203]
[34 202]
[35 201]
[36 200]
[39 198]
[40 197]
[41 196]
[42 195]
[43 194]
[44 193]
[45 192]
[46 190]
[47 189]
[48 188]
[49 187]
[57 179]
[58 178]
[59 177]
[60 176]
[61 175]
[62 163]
[63 162]
[75 148]
[76 147]
[77 146]
[78 145]
[80 143]
[81 142]
[82 141]
[84 138]
[85 137]
[88 133]
[89 132]
[90 131]
[91 130]
[95 129]
[96 128]
[97 127]
[98 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
