%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[180.89019775 523.83996582]
[193.88397217 516.03369141]
[190.99870300 501.31381226]
[188.11341858 486.59390259]
[185.22814941 471.87402344]
[182.34288025 457.15414429]
[179.34809875 442.45611572]
[166.93215942 430.05407715]
[172.78529358 412.59490967]
[169.46302795 397.96743774]
[156.86381531 385.75161743]
[162.45634460 368.20724487]
[158.91667175 353.63085938]
[155.37699890 339.05447388]
[151.83734131 324.47811890]
[148.29766846 309.90173340]
[144.75752258 306.69604492]
[143.19360352 301.23242188]
[144.87648010 294.83871460]
[141.77236938 280.16339111]
[131.56875610 269.31280518]
[136.28276062 254.21018982]
[133.17864990 239.53488159]
[122.49484253 235.53207397]
[114.99234009 226.77832031]
[112.62284851 215.37307739]
[116.08827972 204.12622070]
[124.63826752 195.86582947]
[121.97247314 181.10461426]
[117.89280701 166.67005920]
[112.43745422 152.69726562]
[106.98209381 138.72445679]
[101.52673340 124.75166321]
[96.07138062 110.77886200]
[92.23287964 125.27941132]
[81.72869110 135.98745728]
[67.30458832 140.10392761]
[52.73100281 136.55279541]
[41.81742477 126.26232147]
[37.41664505 111.92240906]
[40.67901230 97.28147125]
[50.75175476 86.16662598]
[65.00187683 81.48325348]
[79.70443726 84.45558167]
[91.01571655 94.30592346]
[87.69345856 79.67845917]
[84.37120056 65.05100250]
[81.04894257 50.42353821]
[77.72668457 35.79608154]
[74.40441895 21.16861916]
[71.08216095 6.54115915]
[67.75990295 -8.08630085]
[64.43764496 -22.71376038]
[56.51806641 -9.97483158]
[42.30253220 -5.18749714]
[28.29018974 -10.54046345]
[20.88729286 -23.58642578]
[23.47834778 -38.36094666]
[34.87875748 -48.10931015]
[49.87641144 -48.37470245]
[61.61555481 -39.03421021]
[52.29318619 -51.81716919]
[58.46326828 -65.37369537]
[56.68080521 -80.26741028]
[54.89833832 -95.16112518]
[53.11587143 -110.05484772]
[51.33340454 -124.94856262]
[44.75995255 -111.46562195]
[33.04129028 -102.10223389]
[18.44010544 -98.66633606]
[3.77566051 -101.82133484]
[-8.12057209 -110.95805359]
[-14.95161533 -124.31233978]
[-15.39850140 -139.30567932]
[-9.37494373 -153.04310608]
[1.95600307 -162.87211609]
[16.40650940 -166.89491272]
[31.18641090 -164.33473206]
[43.44194031 -155.68591309]
[50.80710983 -142.61718750]
[51.69992828 -157.59059143]
[52.59274292 -172.56401062]
[53.48555756 -187.53741455]
[54.37837601 -202.51081848]
[51.76567078 -208.58413696]
[52.50181198 -214.21931458]
[55.52724457 -217.91468811]
[49.05198669 -232.35011292]
[57.89390564 -244.33634949]
[59.23213959 -259.27651978]
[52.75688553 -273.71197510]
[61.59880447 -285.69818115]
[62.93703842 -300.63836670]
[64.27526855 -315.57855225]
[65.61350250 -330.51873779]
[59.13824844 -344.95419312]
[67.98016357 -356.94039917]
[53.80865860 -362.12026978]
[41.46123505 -370.79226685]
[31.77976227 -382.36514282]
[25.42433929 -396.04983521]
[22.82828903 -410.91329956]
[24.16861343 -425.94213867]
[29.35392952 -440.11166382]
[38.03069305 -452.45571899]
[49.60730743 -462.13272095]
[63.29446030 -468.48287964]
[78.15893555 -471.07318115]
[93.18725586 -469.72705078]
[107.35475922 -464.53625488]
[119.69548035 -455.85473633]
[129.36801147 -444.27438354]
[135.71287537 -430.58477783]
[138.29743958 -415.71929932]
[136.94551086 -400.69149780]
[131.74925232 -386.52600098]
[123.06296539 -374.18862915]
[111.47888184 -364.52056885]
[97.78682709 -358.18099976]
[82.92034912 -355.60217285]
[89.49132538 -342.23538208]
[80.55368805 -329.18051147]
[79.21545410 -314.24032593]
[77.87722015 -299.30014038]
[76.53898621 -284.35995483]
[83.10996246 -270.99316406]
[74.17232513 -257.93829346]
[72.83409119 -242.99810791]
[79.40506744 -229.63130188]
[70.46743011 -216.57644653]
[69.35178375 -201.61799622]
[68.45896149 -186.64459229]
[67.56614685 -171.67118835]
[66.67333221 -156.69778442]
[65.78051758 -141.72438049]
[66.22711945 -126.73102570]
[68.00959015 -111.83731079]
[69.79205322 -96.94359589]
[71.57452393 -82.04987335]
[73.35698700 -67.15615845]
[82.55185699 -55.43849564]
[76.50926971 -40.81667328]
[79.06510162 -26.03602028]
[82.38735962 -11.40856075]
[85.70962524 3.21889973]
[89.03188324 17.84635925]
[92.35414124 32.47381973]
[95.67639923 47.10128021]
[98.99865723 61.72874069]
[102.32092285 76.35620117]
[105.64318085 90.98365784]
[110.04417419 105.32350922]
[115.49953461 119.29630280]
[120.95489502 133.26910400]
[126.41024780 147.24189758]
[131.86560059 161.21470642]
[134.53207397 146.45359802]
[142.90441895 134.00756836]
[155.57173157 125.97395325]
[170.39938354 123.70658112]
[184.88862610 127.58753204]
[196.59777832 136.96279907]
[203.55363464 150.25250244]
[204.58403015 165.21707153]
[199.51530457 179.33471680]
[189.20162964 190.22637939]
[175.38105774 196.05661011]
[160.38258362 195.84292603]
[146.73370361 189.62132263]
[136.73368835 178.43881226]
[139.39949036 193.20002747]
[155.36395264 203.40052795]
[158.74484253 221.71670532]
[147.85394287 236.43077087]
[150.95805359 251.10607910]
[161.38369751 263.00634766]
[156.44766235 277.05929565]
[159.55177307 291.73458862]
[162.87403870 306.36206055]
[166.41371155 320.93844604]
[169.95338440 335.51480103]
[173.49305725 350.09118652]
[177.03273010 364.66757202]
[187.62152100 372.03234863]
[190.26963806 384.24591064]
[184.09048462 394.64517212]
[187.41275024 409.27264404]
[197.89071655 416.79428101]
[200.35670471 429.04589844]
[194.02340698 439.35202026]
[198.86096191 447.10031128]
[197.06277466 454.26885986]
[199.94804382 468.98873901]
[202.83331299 483.70864868]
[205.71858215 498.42852783]
[208.60386658 513.14843750]
[223.58312988 515.47161865]
[236.86294556 522.78070068]
[246.83972168 534.19293213]
[252.30870056 548.33038330]
[252.60948181 563.48571777]
[247.70574951 577.82897949]
[238.18963623 589.62811279]
[225.21028137 597.45831299]
[210.33499146 600.37408447]
[195.36003113 598.02325439]
[182.09370422 590.68975830]
[172.13798523 579.25909424]
[166.69505310 565.11163330]
[166.42221069 549.95574951]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 196]
[3 195]
[4 194]
[5 193]
[6 192]
[7 190]
[9 187]
[10 186]
[12 183]
[13 182]
[14 181]
[15 180]
[16 179]
[19 178]
[20 177]
[22 175]
[23 174]
[28 171]
[29 170]
[30 156]
[31 155]
[32 154]
[33 153]
[34 152]
[45 151]
[46 150]
[47 149]
[48 148]
[49 147]
[50 146]
[51 145]
[52 144]
[53 143]
[61 142]
[63 140]
[64 139]
[65 138]
[66 137]
[67 136]
[80 135]
[81 134]
[82 133]
[83 132]
[84 131]
[87 130]
[89 128]
[90 127]
[92 125]
[93 124]
[94 123]
[95 122]
[97 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
