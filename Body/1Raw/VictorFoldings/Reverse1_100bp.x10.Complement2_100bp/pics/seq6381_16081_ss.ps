%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[29.96558380 463.37005615]
[28.48712158 478.31893921]
[25.07002831 492.94692993]
[19.77277756 507.00375366]
[12.68600845 520.24884033]
[3.93098664 532.45562744]
[-6.34247828 543.41510010]
[-17.95859337 552.93988037]
[-30.71859169 560.86688232]
[-44.40413284 567.06048584]
[-58.78104019 571.41473389]
[-73.60330963 573.85516357]
[-88.61730194 574.33990479]
[-103.56611633 572.86071777]
[-118.19395447 569.44293213]
[-132.25051880 564.14501953]
[-145.49528503 557.05761719]
[-157.70161438 548.30200195]
[-168.66064453 538.02801514]
[-178.18484497 526.41143799]
[-186.11123657 513.65106201]
[-192.30421448 499.96524048]
[-196.65777588 485.58813477]
[-199.09745789 470.76574707]
[-199.58149719 455.75173950]
[-198.10160828 440.80297852]
[-194.68312073 426.17529297]
[-189.38453674 412.11898804]
[-182.29650879 398.87457275]
[-173.54032898 386.66867065]
[-163.26582336 375.71011353]
[-151.64878845 366.18646240]
[-138.88804626 358.26068115]
[-125.20191193 352.06835938]
[-110.82458496 347.71548462]
[-96.00209045 345.27648926]
[-80.98805237 344.79318237]
[-66.03937531 346.27377319]
[-51.41186142 349.69296265]
[-37.35580063 354.99221802]
[-30.27869415 341.76669312]
[-23.20158768 328.54116821]
[-22.81739044 321.16049194]
[-15.91938877 315.17254639]
[-8.64615917 302.05386353]
[-1.37292981 288.93518066]
[5.90029955 275.81646729]
[13.17352867 262.69778442]
[20.44675827 249.57908630]
[27.71998787 236.46038818]
[34.99321747 223.34170532]
[41.97166824 210.06385803]
[48.65186310 196.63348389]
[55.33205795 183.20310974]
[51.87414551 161.83775330]
[70.71623993 149.70866394]
[76.58519745 135.90449524]
[82.45416260 122.10031128]
[88.32312012 108.29613495]
[86.81798553 94.39555359]
[97.87270355 85.83489990]
[103.74166107 72.03072357]
[109.61062622 58.22654724]
[114.85734558 44.17407608]
[119.47135162 29.90134430]
[124.08535767 15.62861061]
[128.69937134 1.35587680]
[127.60477448 -3.74793935]
[128.48895264 -8.30551910]
[130.81246948 -11.65459442]
[133.85122681 -13.44296741]
[139.09794617 -27.49543762]
[144.34466553 -41.54790878]
[149.59138489 -55.60037994]
[154.83810425 -69.65285492]
[147.87359619 -81.18152618]
[148.80694580 -94.42310333]
[157.07388306 -104.55917358]
[169.48263550 -108.03080750]
[174.93798828 -122.00360107]
[163.14399719 -130.44361877]
[153.72349548 -141.45779419]
[147.22248840 -154.40075684]
[144.01606750 -168.51560974]
[144.28686523 -182.97805786]
[148.01451111 -196.94470215]
[154.97723389 -209.60209656]
[164.76496887 -220.21417236]
[176.80348206 -228.16506958]
[190.38815308 -232.99484253]
[204.72512817 -234.42607117]
[218.97775269 -232.37977600]
[224.64054871 -246.26980591]
[230.30332947 -260.15982056]
[235.96612549 -274.04986572]
[241.62890625 -287.93988037]
[247.29168701 -301.82989502]
[252.95448303 -315.71994019]
[240.03799438 -323.40252686]
[228.41088867 -332.92449951]
[218.33288574 -344.07308960]
[210.02914429 -356.59930420]
[203.68516541 -370.22323608]
[199.44270325 -384.64056396]
[197.39649963 -399.52917480]
[197.59230042 -414.55645752]
[200.02569580 -429.38668823]
[204.64236450 -443.68859863]
[211.33912659 -457.14260864]
[219.96640015 -469.44821167]
[230.33145142 -480.33047485]
[242.20271301 -489.54626465]
[255.31495667 -496.88973999]
[269.37527466 -502.19680786]
[284.06958008 -505.34890747]
[299.06951904 -506.27563477]
[314.04006958 -504.95626831]
[328.64672852 -501.42031860]
[342.56320190 -495.74673462]
[355.47860718 -488.06231689]
[367.10433960 -478.53869629]
[377.18075562 -467.38864136]
[385.48272705 -454.86126709]
[391.82476807 -441.23641968]
[396.06518555 -426.81851196]
[398.10925293 -411.92959595]
[397.91131592 -396.90234375]
[395.47579956 -382.07244873]
[390.85708618 -367.77120972]
[384.15841675 -354.31814575]
[375.52938843 -342.01376343]
[365.16278076 -331.13299561]
[353.29022217 -321.91888428]
[340.17691040 -314.57730103]
[326.11584473 -309.27221680]
[311.42111206 -306.12222290]
[296.42102051 -305.19763184]
[281.45065308 -306.51910400]
[266.84451294 -310.05715942]
[261.18173218 -296.16711426]
[255.51893616 -282.27709961]
[249.85614014 -268.38705444]
[244.19335938 -254.49703979]
[238.53057861 -240.60700989]
[232.86778259 -226.71697998]
[245.32141113 -217.42034912]
[254.95632935 -205.21238708]
[261.11343384 -190.91893005]
[263.36911011 -175.50881958]
[261.56445312 -160.02818298]
[255.81628418 -145.52947998]
[246.50982666 -132.99984741]
[234.27273560 -123.29402161]
[219.93284607 -117.07592010]
[204.46211243 -114.77327728]
[188.91079712 -116.54824829]
[183.45542908 -102.57544708]
[190.86001587 -87.47541809]
[184.93589783 -71.37512207]
[168.89056396 -64.40613556]
[163.64384460 -50.35366440]
[158.39714050 -36.30119324]
[153.15042114 -22.24872017]
[147.90370178 -8.19624901]
[142.97210693 5.96988630]
[138.35809326 20.24261856]
[133.74407959 34.51535416]
[129.13008118 48.78808594]
[142.94331360 42.94049072]
[156.89682007 48.44501495]
[162.99739075 62.14841080]
[157.75033569 76.20075989]
[144.16140747 82.55223083]
[130.01496887 77.56441498]
[123.41480255 64.09551239]
[117.54583740 77.89968872]
[111.67687988 91.70386505]
[113.18201447 105.60444641]
[102.12729645 114.16510010]
[96.25833893 127.96927643]
[90.38937378 141.77345276]
[84.52041626 155.57762146]
[89.02375031 162.60649109]
[90.36736298 170.75019836]
[88.40568542 178.67077637]
[83.53015137 185.09640503]
[76.59371185 189.02566528]
[68.76243591 189.88330078]
[62.08224106 203.31367493]
[55.40204620 216.74404907]
[55.72742844 221.95376587]
[54.17695999 226.32977295]
[51.38233948 229.29711914]
[48.11191177 230.61492920]
[40.83868027 243.73362732]
[33.56545258 256.85232544]
[26.29222298 269.97100830]
[19.01899338 283.08972168]
[11.74576378 296.20840454]
[4.47253466 309.32708740]
[-2.80069470 322.44580078]
[-9.97606087 335.61825562]
[-17.05316734 348.84378052]
[-24.13027191 362.06930542]
[-11.92311096 370.82376099]
[-0.96310794 381.09671021]
[8.56219578 392.71237183]
[16.48981094 405.47198486]
[22.68408585 419.15722656]
[27.03902626 433.53393555]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 204]
[41 203]
[42 202]
[44 201]
[45 200]
[46 199]
[47 198]
[48 197]
[49 196]
[50 195]
[51 194]
[52 190]
[53 189]
[54 188]
[56 182]
[57 181]
[58 180]
[59 179]
[61 177]
[62 176]
[63 175]
[64 168]
[65 167]
[66 166]
[67 165]
[71 164]
[72 163]
[73 162]
[74 161]
[75 160]
[79 157]
[80 156]
[92 145]
[93 144]
[94 143]
[95 142]
[96 141]
[97 140]
[98 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
