%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[140.41474915 814.08288574]
[125.51985931 812.17962646]
[110.93173218 808.62060547]
[96.83383179 803.45056152]
[83.40345001 796.73455811]
[70.80948639 788.55706787]
[59.21032715 779.02081299]
[48.75184250 768.24584961]
[39.56555557 756.36761475]
[31.76699638 743.53552246]
[25.45424080 729.91094971]
[20.70667648 715.66522217]
[17.58401108 700.97753906]
[16.12551498 686.03253174]
[16.34953117 671.01818848]
[18.25323868 656.12335205]
[21.81270027 641.53533936]
[26.98315048 627.43762207]
[33.69956589 614.00744629]
[41.87747955 601.41369629]
[51.41404343 589.81481934]
[62.18933105 579.35668945]
[74.06782532 570.17071533]
[86.90014648 562.37255859]
[100.52491760 556.06024170]
[114.77078247 551.31311035]
[129.45858765 548.19085693]
[144.40362549 546.73278809]
[144.62695312 531.73449707]
[144.85028076 516.73614502]
[145.07360840 501.73779297]
[145.29693604 486.73947144]
[145.52026367 471.74111938]
[143.34001160 468.97006226]
[142.39363098 465.00527954]
[143.22755432 460.43823242]
[146.10340881 456.08203125]
[146.99623108 441.10861206]
[147.88903809 426.13522339]
[148.78186035 411.16180420]
[149.67466736 396.18838501]
[148.55902100 381.22994995]
[145.45491028 366.55465698]
[142.35079956 351.87933350]
[139.24668884 337.20404053]
[135.80357361 333.89434814]
[134.40301514 328.38659668]
[136.27551270 322.04583740]
[133.60971069 307.28460693]
[130.94390869 292.52340698]
[128.27812195 277.76217651]
[125.39284515 263.04229736]
[122.28873444 248.36698914]
[112.08512878 237.51637268]
[116.79913330 222.41377258]
[113.69502258 207.73846436]
[103.73098755 200.87956238]
[101.02480316 188.67872620]
[107.55966949 177.55854797]
[104.67440033 162.83866882]
[101.78913116 148.11877441]
[98.90385437 133.39888000]
[96.01858521 118.67898560]
[84.05237579 110.50854492]
[81.26529694 96.28960419]
[89.26152802 84.20628357]
[86.37625122 69.48639679]
[83.49098206 54.76650238]
[73.24368286 42.71231461]
[78.38838959 28.73442841]
[74.33805084 23.50888634]
[73.63957214 17.86892700]
[75.64321136 13.53366661]
[73.19748688 -1.26560414]
[68.71073151 -9.22216415]
[70.82722473 -16.30328178]
[68.60210419 -31.13732529]
[66.37699127 -45.97137070]
[64.15187073 -60.80541229]
[61.92675400 -75.63945770]
[57.55895996 -83.66193390]
[59.78064728 -90.71076202]
[57.77663422 -105.57628632]
[54.04450607 -111.03364563]
[53.68296432 -116.70517731]
[55.94108963 -120.91349792]
[46.81007767 -133.83383179]
[53.18131256 -147.29699707]
[51.62078857 -162.21559143]
[50.06026459 -177.13420105]
[48.49974442 -192.05281067]
[46.93922043 -206.97140503]
[45.37869644 -221.89001465]
[30.61864853 -225.26931763]
[17.75691414 -233.26022339]
[8.18863964 -244.99592590]
[2.95171809 -259.20343018]
[2.61421275 -274.34164429]
[7.21273375 -288.76843262]
[16.24846649 -300.91891479]
[28.74128532 -309.47509766]
[43.33605957 -313.50885010]
[58.44965744 -312.58264160]
[72.44267273 -306.79696655]
[83.79724121 -296.77935791]
[91.28171539 -283.61645508]
[94.08422089 -268.73611450]
[91.90077209 -253.75242615]
[84.96820831 -240.29069519]
[74.03852844 -229.81114197]
[60.29730225 -223.45053101]
[61.85782623 -208.53193665]
[63.41834641 -193.61332703]
[64.97887421 -178.69471741]
[66.53939056 -163.77612305]
[68.09991455 -148.85751343]
[77.11930847 -137.00425720]
[70.85969543 -122.47401428]
[72.64215851 -107.58029938]
[74.64617920 -92.71477509]
[76.76080322 -77.86457825]
[78.98591614 -63.03052902]
[81.21103668 -48.19648743]
[83.43614960 -33.36244202]
[85.66127014 -18.52840042]
[87.99675751 -3.71133161]
[90.44248199 11.08793926]
[93.10827637 25.84915733]
[103.14920044 36.85047913]
[98.21086884 51.88122940]
[101.09614563 66.60112000]
[103.98141479 81.32101440]
[115.94762421 89.49145508]
[118.73470306 103.71039581]
[110.73847198 115.79371643]
[113.62374878 130.51361084]
[116.50901794 145.23350525]
[119.39429474 159.95338440]
[122.27956390 174.67327881]
[134.70098877 188.26702881]
[128.37031555 204.63435364]
[131.47442627 219.30966187]
[141.90007019 231.20994568]
[136.96403503 245.26287842]
[140.06814575 259.93817139]
[144.19584656 265.10284424]
[144.97821045 270.73178101]
[143.03933716 275.09637451]
[145.70513916 289.85760498]
[148.37092590 304.61883545]
[151.03672791 319.38003540]
[153.92199707 334.09991455]
[157.02610779 348.77523804]
[160.13021851 363.45053101]
[163.23432922 378.12582397]
[167.34243774 363.69934082]
[175.65527344 351.21350098]
[187.38049316 341.85830688]
[201.40051270 336.52548218]
[216.37904358 335.72332764]
[230.88842773 339.52828979]
[243.54573059 347.57766724]
[253.14453125 359.10430908]
[258.76992798 373.00952148]
[259.88574219 387.96795654]
[256.38565063 402.55386353]
[248.60322571 415.37704468]
[237.28024292 425.21524048]
[223.49595642 431.13076782]
[208.56417847 432.55975342]
[193.90811157 429.36602783]
[180.92469788 421.85397339]
[170.85140991 410.73962402]
[164.64807129 397.08120728]
[163.75526428 412.05462646]
[162.86244202 427.02801514]
[161.96963501 442.00143433]
[161.07681274 456.97485352]
[160.51860046 471.96444702]
[160.29527283 486.96279907]
[160.07194519 501.96112061]
[159.84861755 516.95947266]
[159.62528992 531.95782471]
[159.40196228 546.95611572]
[174.29696655 548.85852051]
[188.88529968 552.41668701]
[202.98350525 557.58581543]
[216.41429138 564.30102539]
[229.00874329 572.47784424]
[240.60847473 582.01336670]
[251.06761169 592.78771973]
[260.25460815 604.66540527]
[268.05392456 617.49700928]
[274.36749268 631.12121582]
[279.11590576 645.36663818]
[282.23947144 660.05419922]
[283.69885254 674.99908447]
[283.47573853 690.01342773]
[281.57290649 704.90838623]
[278.01434326 719.49658203]
[272.84472656 733.59466553]
[266.12911987 747.02520752]
[257.95193481 759.61944580]
[248.41607666 771.21887207]
[237.64141846 781.67767334]
[225.76347351 790.86431885]
[212.93161011 798.66326904]
[199.30722046 804.97644043]
[185.06164551 809.72442627]
[170.37402344 812.84753418]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 184]
[29 183]
[30 182]
[31 181]
[32 180]
[33 179]
[37 178]
[38 177]
[39 176]
[40 175]
[41 174]
[42 155]
[43 154]
[44 153]
[45 152]
[48 151]
[49 150]
[50 149]
[51 148]
[52 145]
[53 144]
[55 142]
[56 141]
[59 139]
[60 138]
[61 137]
[62 136]
[63 135]
[66 132]
[67 131]
[68 130]
[70 128]
[73 127]
[74 126]
[76 125]
[77 124]
[78 123]
[79 122]
[80 121]
[82 120]
[83 119]
[86 118]
[88 116]
[89 115]
[90 114]
[91 113]
[92 112]
[93 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
