%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[26.46529198 415.93304443]
[26.60083961 430.95336914]
[24.81446457 445.86767578]
[21.13549995 460.43112183]
[15.62436008 474.40451050]
[8.37153912 487.55841064]
[-0.50386214 499.67678833]
[-10.85610294 510.56069946]
[-22.51519012 520.03137207]
[-35.28966904 527.93334961]
[-48.96977234 534.13684082]
[-63.33086395 538.53997803]
[-78.13711548 541.07043457]
[-93.14540100 541.68664551]
[-108.10926056 540.37854004]
[-122.78298950 537.16760254]
[-136.92561340 532.10656738]
[-150.30491638 525.27850342]
[-162.70118713 516.79553223]
[-173.91087341 506.79696655]
[-183.74989319 495.44699097]
[-192.05668640 482.93197632]
[-198.69485474 469.45742798]
[-203.55537415 455.24462891]
[-206.55845642 440.52697754]
[-207.65476990 425.54608154]
[-206.82630920 410.54803467]
[-204.08670044 395.77905273]
[-199.48091125 381.48165894]
[-193.08456421 367.89068604]
[-185.00271606 355.22921753]
[-175.36807251 343.70526123]
[-164.33883667 333.50799561]
[-152.09613037 324.80487061]
[-138.84095764 317.73883057]
[-124.79102325 312.42587280]
[-110.17701721 308.95324707]
[-95.23891449 307.37799072]
[-80.22201538 307.72598267]
[-65.37290955 309.99145508]
[-50.93543625 314.13726807]
[-37.14667130 320.09530640]
[-29.48607445 307.19897461]
[-21.82547760 294.30264282]
[-22.55362511 276.76876831]
[-6.41909027 267.89419556]
[1.04865098 254.88523865]
[8.51639175 241.87629700]
[2.26596451 228.38294983]
[5.19412994 213.62185669]
[16.38351250 203.29466248]
[31.68520164 201.51576233]
[39.15294266 188.50682068]
[36.29687881 176.75225830]
[42.41191101 165.85317993]
[54.69552231 161.91926575]
[54.54323959 147.02543640]
[68.24326324 139.11215210]
[75.90386200 126.21582794]
[83.56445312 113.31950378]
[91.22505188 100.42317200]
[90.72583771 97.41646576]
[91.30960846 94.16166687]
[93.07035828 91.05953217]
[95.95271301 88.53996277]
[99.74505615 87.00662994]
[108.15967560 74.58913422]
[116.57429504 62.17163849]
[124.52098083 49.44960022]
[131.98872375 36.44065094]
[139.45646667 23.43169785]
[146.92420959 10.42274475]
[137.68641663 0.41488394]
[131.64860535 -11.77449417]
[129.29106140 -25.15437317]
[130.79531860 -38.63991547]
[136.03021240 -51.14042664]
[144.56317139 -61.64755630]
[155.69607544 -69.31665039]
[168.52226257 -73.53464508]
[182.00039673 -73.96905518]
[195.03901672 -70.59416962]
[202.89077759 -83.37501526]
[210.74252319 -96.15586090]
[218.59428406 -108.93669891]
[226.25488281 -121.83303070]
[233.72262573 -134.84197998]
[241.19036865 -147.85093689]
[248.65811157 -160.85987854]
[256.12585449 -173.86883545]
[263.59359741 -186.87779236]
[271.06134033 -199.88674927]
[278.52908325 -212.89569092]
[285.99679565 -225.90464783]
[283.38711548 -238.53605652]
[289.87484741 -249.21749878]
[301.51580811 -252.50596619]
[309.17642212 -265.40228271]
[316.83700562 -278.29861450]
[304.98590088 -287.52651978]
[294.38485718 -298.16705322]
[285.20104980 -310.05236816]
[277.57931519 -322.99505615]
[271.63989258 -336.79092407]
[267.47640991 -351.22244263]
[265.15457153 -366.06201172]
[264.71096802 -381.07553101]
[266.15261841 -396.02627563]
[269.45678711 -410.67843628]
[274.57135010 -424.80093384]
[281.41561890 -438.17102051]
[289.88168335 -450.57781982]
[299.83602905 -461.82568359]
[311.12164307 -471.73718262]
[323.56054688 -480.15606689]
[336.95654297 -486.94949341]
[351.09835815 -492.01031494]
[365.76296997 -495.25878906]
[380.71908569 -496.64358521]
[395.73083496 -496.14294434]
[410.56146240 -493.76473999]
[424.97705078 -489.54644775]
[438.75024414 -483.55462646]
[451.66384888 -475.88375854]
[463.51419067 -466.65484619]
[474.11434937 -456.01342773]
[483.29714966 -444.12731934]
[490.91778564 -431.18402100]
[496.85607910 -417.38763428]
[501.01834106 -402.95578003]
[503.33892822 -388.11602783]
[503.78125000 -373.10244751]
[502.33834839 -358.15182495]
[499.03295898 -343.49993896]
[493.91720581 -329.37789917]
[487.07177734 -316.00839233]
[478.60467529 -303.60229492]
[468.64938354 -292.35528564]
[457.36294556 -282.44470215]
[444.92333984 -274.02688599]
[431.52676392 -267.23458862]
[417.38452148 -262.17492676]
[402.71963501 -258.92773438]
[387.76342773 -257.54415894]
[372.75170898 -258.04608154]
[357.92129517 -260.42553711]
[343.50604248 -264.64505005]
[329.73333740 -270.63803101]
[322.07275391 -257.74169922]
[314.41213989 -244.84536743]
[315.14028931 -227.31149292]
[299.00576782 -218.43690491]
[291.53802490 -205.42794800]
[284.07028198 -192.41900635]
[276.60253906 -179.41004944]
[269.13479614 -166.40109253]
[261.66705322 -153.39215088]
[254.19931030 -140.38319397]
[246.73156738 -127.37423706]
[239.26383972 -114.36528778]
[239.62451172 -109.60304260]
[236.99740601 -104.56366730]
[231.37512207 -101.08494568]
[223.52337646 -88.30410004]
[215.67161560 -75.52326202]
[207.81985474 -62.74241638]
[218.30157471 -50.05273438]
[223.81399536 -34.51718903]
[223.67433167 -18.00756073]
[217.88186646 -2.51940179]
[207.12023926 10.06919384]
[192.67674255 18.22531128]
[176.28843689 20.94787598]
[159.93315125 17.89048576]
[152.46540833 30.89943886]
[144.99768066 43.90839005]
[137.52993774 56.91734314]
[152.47009277 55.57881546]
[162.94154358 66.31887054]
[161.22511292 81.22034454]
[148.58609009 89.29842377]
[134.34150696 84.59824371]
[128.99179077 70.58625793]
[120.57717133 83.00375366]
[112.16255188 95.42124939]
[104.12138367 108.08377075]
[96.46078491 120.98010254]
[88.80018616 133.87641907]
[81.13958740 146.77275085]
[80.74393463 162.58900452]
[67.59185028 169.57986450]
[67.79074860 187.99295044]
[52.16189575 195.97454834]
[44.69415283 208.98350525]
[50.87454224 223.09410095]
[47.59937286 237.96443176]
[36.32933044 247.93690491]
[21.52534485 249.34403992]
[14.05760288 262.35299683]
[6.58986235 275.36193848]
[9.19955063 287.99334717]
[2.71183610 298.67477417]
[-8.92914963 301.96325684]
[-16.58974648 314.85958862]
[-24.25034523 327.75592041]
[-12.42223740 337.01464844]
[-1.87525928 347.70996094]
[7.21739960 359.66619873]
[14.70642948 372.68707275]
[20.46885300 386.55871582]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 205]
[43 204]
[44 203]
[46 200]
[47 199]
[48 198]
[52 194]
[53 193]
[56 191]
[58 189]
[59 188]
[60 187]
[61 186]
[66 185]
[67 184]
[68 183]
[69 177]
[70 176]
[71 175]
[72 174]
[82 166]
[83 165]
[84 164]
[85 163]
[86 160]
[87 159]
[88 158]
[89 157]
[90 156]
[91 155]
[92 154]
[93 153]
[94 152]
[97 150]
[98 149]
[99 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
