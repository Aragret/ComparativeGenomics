%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[105.59150696 485.87716675]
[97.98148346 472.85647583]
[93.84945679 458.35208130]
[93.45515442 443.27575684]
[96.82337189 428.57522583]
[103.74237823 415.17456055]
[113.77724457 403.91610718]
[126.29715729 395.50762939]
[140.51512146 390.47766113]
[139.17687988 375.53750610]
[137.83865356 360.59732056]
[136.50041199 345.65713501]
[135.16218567 330.71694946]
[133.71276855 315.78713989]
[132.15223694 300.86853027]
[129.70651245 286.06924438]
[126.38425446 271.44180298]
[123.06199646 256.81433105]
[112.69796753 246.11683655]
[117.18659210 230.94572449]
[113.86432648 216.31826782]
[110.54206848 201.69079590]
[107.21981049 187.06333923]
[103.89755249 172.43588257]
[100.57529449 157.80842590]
[97.25302887 143.18095398]
[90.12399292 156.37857056]
[76.64939880 162.96910095]
[61.85493088 160.49447632]
[51.25856781 149.87763977]
[48.81248856 135.07843018]
[55.42901993 121.61657715]
[68.64035797 114.51302338]
[83.51900482 116.41721344]
[94.51615906 126.61995697]
[92.95563507 111.70134735]
[87.72914124 125.76135254]
[79.89452362 138.55270386]
[69.74467468 149.59719849]
[57.65907288 158.48190308]
[44.08953857 164.87469482]
[29.54337311 168.53654480]
[14.56440449 169.33055115]
[-0.28737292 167.22705078]
[-14.45671272 162.30467224]
[-27.41388321 154.74745178]
[-38.67447281 144.83790588]
[-47.81749344 132.94651794]
[-54.50113297 119.51784515]
[-58.47550964 105.05394745]
[-59.59204483 90.09556580]
[-57.80899048 75.20191193]
[-53.19301605 60.92981720]
[-45.91668320 47.81284332]
[-36.25203323 36.34138107]
[-24.56037712 26.94429588]
[-11.27882004 19.97290802]
[3.09609771 15.68784618]
[18.02695847 14.24931240]
[32.95556259 15.71108627]
[47.32379150 20.01851845]
[60.59448242 27.01057053]
[72.27149200 36.42584229]
[81.91828156 47.91233826]
[89.17418671 61.04062271]
[93.76793671 75.31988525]
[95.52767944 90.21018982]
[100.56459808 76.08116150]
[105.60150909 61.95213318]
[110.63842773 47.82310486]
[115.67534637 33.69407272]
[113.02133179 18.09706306]
[124.58311462 8.70693779]
[129.62002563 -5.42209148]
[133.80703735 -19.82587433]
[137.12930298 -34.45333481]
[140.45155334 -49.08079529]
[143.77381897 -63.70825577]
[147.09606934 -78.33571625]
[150.41833496 -92.96317291]
[153.74060059 -107.59063721]
[157.06285095 -122.21809387]
[160.38511658 -136.84555054]
[161.72334290 -151.78573608]
[161.05355835 -166.77078247]
[160.38377380 -181.75581360]
[159.71398926 -196.74085999]
[159.04420471 -211.72589111]
[158.37442017 -226.71093750]
[157.70463562 -241.69596863]
[145.81018066 -232.55693054]
[131.21301270 -236.00984192]
[124.67361450 -249.50932312]
[131.01258850 -263.10409546]
[145.55708313 -266.77255249]
[157.58465576 -257.81195068]
[158.03126526 -272.80529785]
[158.47787476 -287.79864502]
[144.38519287 -293.38183594]
[133.05401611 -303.45062256]
[125.85266113 -316.78915405]
[123.65071869 -331.78671265]
[126.71407318 -346.63232422]
[134.67282104 -359.53326416]
[146.56590271 -368.93167114]
[160.95718384 -373.69268799]
[176.10881042 -373.24136353]
[190.19119263 -367.63220215]
[201.50378418 -357.54257202]
[208.68054199 -344.19079590]
[210.85484314 -329.18917847]
[207.76412964 -314.34924316]
[199.78161621 -301.46301270]
[187.87124634 -292.08651733]
[173.47122192 -287.35205078]
[173.02461243 -272.35870361]
[172.57800293 -257.36535645]
[172.68968201 -242.36575317]
[173.35946655 -227.38072205]
[174.02925110 -212.39567566]
[174.69903564 -197.41064453]
[175.36882019 -182.42559814]
[176.03860474 -167.44056702]
[176.70838928 -152.45552063]
[183.11375427 -166.01913452]
[193.35113525 -176.98251343]
[206.44479370 -184.30073547]
[221.14671326 -187.27622986]
[236.05558777 -185.62544250]
[249.75042725 -179.50567627]
[260.92590332 -169.50024414]
[268.51684570 -156.56278992]
[271.79974365 -141.92645264]
[270.46170044 -126.98625183]
[264.63021851 -113.16619873]
[254.86112976 -101.78353882]
[242.08557129 -93.92317963]
[227.52122498 -90.33434296]
[212.55627441 -91.35906982]
[198.61706543 -96.89971161]
[187.03221130 -106.42815399]
[178.90591431 -119.03620911]
[175.01257324 -133.52330017]
[171.69032288 -118.89583588]
[168.36805725 -104.26837158]
[165.04579163 -89.64091492]
[161.72354126 -75.01345825]
[158.40127563 -60.38599396]
[155.07902527 -45.75853348]
[151.75675964 -31.13107491]
[148.43449402 -16.50361443]
[160.56503296 -25.32689476]
[175.56451416 -25.45026207]
[187.83853149 -16.82770348]
[192.80917358 -2.67522120]
[188.62249756 11.72866058]
[176.84005737 21.01164818]
[161.85638428 21.71142006]
[149.26004028 13.56697464]
[143.74905396 -0.38517517]
[138.71214294 13.74385452]
[141.72642517 28.33026314]
[129.80436707 38.73099136]
[124.76745605 52.86001968]
[119.73053741 66.98905182]
[114.69362640 81.11808014]
[109.65670776 95.24710846]
[107.87424469 110.14082336]
[109.43476868 125.05943298]
[111.88049316 139.85870361]
[115.20275116 154.48616028]
[118.52500916 169.11361694]
[121.84727478 183.74108887]
[125.16953278 198.36854553]
[128.49179077 212.99600220]
[131.81405640 227.62345886]
[142.41571045 239.36720276]
[137.68945312 253.49206543]
[141.01171875 268.11953735]
[144.33396912 282.74697876]
[151.46301270 269.54937744]
[164.93760681 262.95883179]
[179.73207092 265.43347168]
[190.32843018 276.05032349]
[192.77452087 290.84951782]
[186.15798950 304.31137085]
[172.94664001 311.41494751]
[158.06799316 309.51074219]
[147.07084656 299.30801392]
[148.63136292 314.22659302]
[152.63658142 322.43612671]
[150.10237122 329.37869263]
[151.44059753 344.31887817]
[152.77883911 359.25906372]
[154.11706543 374.19924927]
[155.45530701 389.13943481]
[170.34085083 391.56253052]
[184.15582275 397.61209106]
[196.03178406 406.90792847]
[205.22221375 418.86563110]
[211.14938354 432.73355103]
[213.44071960 447.63995361]
[211.95217896 462.64779663]
[206.77734375 476.81365967]
[198.24148560 489.24707031]
[186.88119507 499.16647339]
[173.41058350 505.94833374]
[158.67642212 509.16629028]
[143.60490417 508.61810303]
[129.14346313 504.33822632]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 196]
[10 195]
[11 194]
[12 193]
[13 192]
[14 190]
[15 189]
[16 180]
[17 179]
[18 178]
[20 176]
[21 175]
[22 174]
[23 173]
[24 172]
[25 171]
[26 170]
[35 169]
[36 168]
[67 167]
[68 166]
[69 165]
[70 164]
[71 163]
[73 161]
[74 160]
[75 151]
[76 150]
[77 149]
[78 148]
[79 147]
[80 146]
[81 145]
[82 144]
[83 143]
[84 124]
[85 123]
[86 122]
[87 121]
[88 120]
[89 119]
[90 118]
[96 117]
[97 116]
[98 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
