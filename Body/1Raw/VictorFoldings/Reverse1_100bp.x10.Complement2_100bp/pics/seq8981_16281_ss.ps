%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUACCAACUAUAACGAUCCCACCGCGAAGGUUAAUCCACGUACUCAUCCACCGGACGUCAUUACAAUCGCCAAUCCGCAUGCCGGUCCCGAUAACCAxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[-9.50520992 537.46826172]
[-3.18295217 551.18707275]
[-0.98319030 566.13153076]
[-3.08424950 581.09027100]
[-9.31580544 594.85046387]
[-19.17269516 606.29681396]
[-31.85586357 614.50134277]
[-46.33714294 618.79888916]
[-61.44260406 618.84118652]
[-75.94770813 614.62469482]
[-88.67659760 606.49133301]
[-98.59739685 595.10034180]
[-104.90586853 581.37518311]
[-107.09061432 566.42846680]
[-104.97453308 551.47192383]
[-98.72915649 537.71795654]
[-88.86077118 526.28155518]
[-76.16936493 518.08978271]
[-61.68377686 513.80676270]
[-46.57828140 513.77966309]
[-42.39126968 499.37585449]
[-38.20425797 484.97207642]
[-34.01725006 470.56829834]
[-37.89439392 456.18716431]
[-26.61253548 445.09524536]
[-22.42552376 430.69146729]
[-18.23851204 416.28768921]
[-25.96324921 405.97470093]
[-26.34329033 392.90039062]
[-19.01593018 381.83148193]
[-6.46936989 376.93267822]
[-2.06837153 362.59283447]
[2.33262634 348.25299072]
[6.73362446 333.91314697]
[5.32714272 329.34906006]
[6.77285957 323.85296631]
[11.48502541 319.21539307]
[10.66067600 311.87088013]
[16.49004555 304.83834839]
[21.52696037 290.70932007]
[18.51267242 276.12292480]
[30.43472862 265.72219849]
[23.33752823 254.96768188]
[23.73635674 241.89393616]
[31.70955849 231.28080750]
[44.52545547 227.13746643]
[49.77217484 213.08499146]
[55.01889420 199.03251648]
[52.22210693 184.40284729]
[64.29769897 174.18077087]
[69.54441071 160.12829590]
[74.79113007 146.07583618]
[62.83484268 137.11091614]
[53.88740158 125.14154816]
[48.67318344 111.13674927]
[47.61432648 96.23032379]
[50.79655457 81.62909698]
[57.96223831 68.51515198]
[68.53125000 57.95018387]
[81.64793396 50.78952408]
[96.25038147 47.61288834]
[111.15639496 48.67745209]
[116.40311432 34.62498093]
[121.64983368 20.57250786]
[126.89655304 6.52003717]
[132.14326477 -7.53243399]
[137.38998413 -21.58490562]
[142.63670349 -35.63737488]
[141.92089844 -42.20998383]
[144.27799988 -47.38116455]
[148.25450134 -50.02624130]
[153.91729736 -63.91627121]
[153.20533752 -69.08736420]
[154.42604065 -73.56655884]
[156.99221802 -76.73354340]
[160.15556335 -78.29094696]
[166.43292236 -91.91426086]
[166.20796204 -98.52190399]
[168.94314575 -103.50344849]
[173.10536194 -105.84544373]
[179.78555298 -119.27581787]
[186.46575928 -132.70619202]
[193.14595032 -146.13656616]
[199.82614136 -159.56694031]
[206.50633240 -172.99732971]
[213.18653870 -186.42770386]
[219.86672974 -199.85807800]
[219.08493042 -215.65995789]
[231.68063354 -223.60964966]
[230.11277771 -241.95693970]
[245.10469055 -251.07885742]
[251.58419800 -264.60720825]
[258.06369019 -278.13555908]
[264.54318237 -291.66390991]
[268.62286377 -306.09844971]
[270.18338013 -321.01705933]
[263.92376709 -335.54730225]
[272.94314575 -347.40054321]
[274.50366211 -362.31915283]
[276.06420898 -377.23776245]
[262.32296753 -383.59835815]
[251.39329529 -394.07791138]
[244.46072388 -407.53964233]
[242.27728271 -422.52334595]
[245.07978821 -437.40368652]
[252.56425476 -450.56658936]
[263.91882324 -460.58416748]
[277.91183472 -466.36987305]
[293.02545166 -467.29608154]
[307.62020874 -463.26229858]
[320.11303711 -454.70611572]
[329.14877319 -442.55563354]
[333.74728394 -428.12884521]
[333.40979004 -412.99066162]
[328.17285156 -398.78314209]
[318.60458374 -387.04745483]
[305.74285889 -379.05654907]
[290.98278809 -375.67724609]
[289.42227173 -360.75863647]
[287.86175537 -345.84002686]
[294.23300171 -332.37686157]
[285.10198975 -319.45654297]
[283.54144287 -304.53793335]
[291.58477783 -317.19909668]
[302.48907471 -327.49938965]
[315.58755493 -334.80895996]
[330.07925415 -338.68081665]
[345.07794189 -338.87820435]
[359.66650391 -335.38906860]
[372.95278931 -328.42672729]
[384.12438965 -318.41696167]
[392.49813843 -305.97186279]
[397.56195068 -291.85244751]
[399.00622559 -276.92214966]
[396.74258423 -262.09393311]
[390.90948486 -248.27455139]
[381.86364746 -236.30908203]
[370.15817261 -226.92921448]
[356.50888062 -220.70852661]
[341.75042725 -218.02740479]
[326.78533936 -219.04981995]
[312.52865601 -223.71324158]
[299.85223389 -231.73249817]
[289.53125000 -242.61721802]
[282.19680786 -255.70178223]
[278.29742432 -270.18606567]
[278.07153320 -285.18438721]
[271.59204102 -271.65606689]
[265.11254883 -258.12771606]
[258.63305664 -244.59936523]
[262.35546875 -233.08979797]
[257.06799316 -221.76608276]
[245.11100769 -216.92944336]
[246.37062073 -202.08819580]
[233.29710388 -193.17788696]
[226.61691284 -179.74749756]
[219.93670654 -166.31712341]
[213.25651550 -152.88674927]
[206.57632446 -139.45637512]
[199.89613342 -126.02600098]
[193.21594238 -112.59562683]
[186.53573608 -99.16524506]
[180.05624390 -85.63690186]
[173.77888489 -72.01358795]
[167.80732727 -58.25348282]
[162.14453125 -44.36345673]
[156.68917847 -30.39065742]
[151.44245911 -16.33818626]
[146.19573975 -2.28571582]
[140.94902039 11.76675510]
[135.70230103 25.81922722]
[130.45558167 39.87169647]
[125.20886993 53.92416763]
[137.16516113 62.88908386]
[146.11259460 74.85845184]
[151.32681274 88.86325073]
[152.38566589 103.76967621]
[149.20344543 118.37090302]
[142.03776550 131.48484802]
[131.46875000 142.04981995]
[118.35206604 149.21047974]
[103.74961853 152.38711548]
[88.84360504 151.32255554]
[83.59688568 165.37501526]
[78.35016632 179.42749023]
[80.77167511 195.06228638]
[69.07136536 204.27923584]
[63.82464600 218.33171082]
[58.57792664 232.38417053]
[66.12978363 248.16355896]
[60.05262756 264.20672607]
[44.56375885 270.75909424]
[47.21777344 286.35610962]
[35.65599060 295.74624634]
[30.61907387 309.87527466]
[25.68748093 324.04141235]
[21.07347107 338.31414795]
[16.67247391 352.65399170]
[12.27147579 366.99383545]
[7.87047768 381.33367920]
[16.34814835 396.63558960]
[11.23667145 413.01202393]
[-3.83473015 420.47470093]
[-8.02174091 434.87847900]
[-12.20875263 449.28225708]
[-8.63109207 464.69366455]
[-19.61346626 474.75531006]
[-23.80047798 489.15908813]
[-27.98748970 503.56286621]
[-32.17449951 517.96667480]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 210]
[21 209]
[22 208]
[23 207]
[25 205]
[26 204]
[27 203]
[31 200]
[32 199]
[33 198]
[34 197]
[37 196]
[39 195]
[40 194]
[42 192]
[46 189]
[47 188]
[48 187]
[50 185]
[51 184]
[52 183]
[62 173]
[63 172]
[64 171]
[65 170]
[66 169]
[67 168]
[68 167]
[71 166]
[72 165]
[76 164]
[77 163]
[80 162]
[81 161]
[82 160]
[83 159]
[84 158]
[85 157]
[86 156]
[87 155]
[89 153]
[91 150]
[92 149]
[93 148]
[94 147]
[95 123]
[96 122]
[98 120]
[99 119]
[100 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
