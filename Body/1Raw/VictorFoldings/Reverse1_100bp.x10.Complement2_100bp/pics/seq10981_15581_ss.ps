%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAUUCCUCUAAACAUCCCUCUAAUCAUAUCUCUCCAUCUCAAAAAAAGCACUAUCACCAAGUGACCUAUUCACCGCAACCGAACGGUACUAACACUCxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[72.56634521 549.28686523]
[66.26665497 535.56768799]
[63.90310669 520.65740967]
[65.65110016 505.66247559]
[71.38091278 491.69567871]
[80.66735840 479.79339600]
[92.82131958 470.83883667]
[106.94089508 465.49655151]
[105.60266113 450.55636597]
[104.26442719 435.61618042]
[102.92618561 420.67599487]
[100.86402893 418.77713013]
[99.42977905 415.94702148]
[98.98190308 412.42071533]
[99.78724670 408.55859375]
[101.98020935 404.81094360]
[90.99687195 394.81585693]
[90.33036804 379.61682129]
[100.88861847 368.16427612]
[100.44200897 353.17092896]
[99.99540710 338.17758179]
[96.65414429 331.58532715]
[99.65544128 322.95803833]
[99.43211365 307.95968628]
[99.20878601 292.96136475]
[98.98545837 277.96301270]
[98.76213074 262.96469116]
[85.04350281 253.94931030]
[79.34465790 238.37739563]
[84.09752655 222.31776428]
[97.61897278 212.15574646]
[97.17236328 197.16239929]
[96.72576141 182.16905212]
[96.27915192 167.17570496]
[95.60936737 152.19065857]
[94.71655273 137.21725464]
[93.82373810 122.24385071]
[92.93092346 107.27043915]
[89.34566498 100.05112457]
[92.13796234 92.06777191]
[86.11624908 105.80599976]
[77.22537231 117.88707733]
[65.89913940 127.72152710]
[52.69018936 134.82951355]
[38.24300385 138.86422729]
[23.26250458 139.62879944]
[8.47961521 137.08593750]
[-5.38437033 131.35968018]
[-17.65299797 122.72946167]
[-27.72765541 111.61634827]
[-35.11677551 98.56257629]
[-39.45982742 84.20507050]
[-40.54490662 69.24436951]
[-38.31906509 54.41043472]
[-32.89091110 40.42704773]
[-24.52529526 27.97648811]
[-13.63039207 17.66624451]
[-0.73778957 9.99938107]
[13.52345371 5.34997797]
[28.45749855 3.94489074]
[43.33568192 5.85267687]
[57.43206406 10.98025036]
[70.05885315 19.07742691]
[80.59995270 29.74912643]
[88.54104614 42.47465134]
[93.49466705 56.63309860]
[95.21909332 71.52703094]
[100.25601196 57.39799881]
[105.29292297 43.26897049]
[110.32984161 29.13994026]
[115.36676025 15.01091003]
[120.40367126 0.88188064]
[124.91130066 -13.42480564]
[128.88339233 -27.88932991]
[128.13818359 -36.99330902]
[133.02380371 -42.53879929]
[137.21081543 -56.94258118]
[141.39782715 -71.34635925]
[133.59515381 -82.32511139]
[133.54104614 -95.59942627]
[141.03120422 -106.32228851]
[153.14738464 -110.70722961]
[157.54838562 -125.04707336]
[149.91003418 -136.14077759]
[150.05357361 -149.41442871]
[157.70252991 -160.02458191]
[169.88265991 -164.22865295]
[174.49667358 -178.50137329]
[179.11067200 -192.77410889]
[165.44146729 -198.99104309]
[152.57003784 -206.72566223]
[140.66421509 -215.87712097]
[129.87921143 -226.32612610]
[120.35563660 -237.93641663]
[112.21763611 -250.55667114]
[105.57131195 -264.02233887]
[100.50331116 -278.15786743]
[97.07971191 -292.77896118]
[95.34513855 -307.69503784]
[95.32221222 -322.71160889]
[97.01122284 -337.63290405]
[100.39016724 -352.26437378]
[105.41497803 -366.41531372]
[112.02014923 -379.90121460]
[120.11957550 -392.54626465]
[129.60766602 -404.18560791]
[140.36070251 -414.66748047]
[152.23852539 -423.85525513]
[165.08627319 -431.62911987]
[178.73643494 -437.88778687]
[193.01107788 -442.54959106]
[207.72407532 -445.55380249]
[222.68363953 -446.86123657]
[237.69471741 -446.45486450]
[252.56163025 -444.33996582]
[267.09054565 -440.54412842]
[281.09204102 -435.11682129]
[294.38360596 -428.12881470]
[306.79193115 -419.67120361]
[318.15524292 -409.85424805]
[328.32543945 -398.80593872]
[337.16989136 -386.67028809]
[344.57330322 -373.60556030]
[350.43914795 -359.78204346]
[354.69097900 -345.37997437]
[357.27334595 -330.58709717]
[358.15258789 -315.59628296]
[357.31723022 -300.60296631]
[354.77819824 -285.80258179]
[350.56854248 -271.38812256]
[344.74316406 -257.54751587]
[337.37802124 -244.46115112]
[328.56915283 -232.29968262]
[318.43133545 -221.22164917]
[307.09680176 -211.37147522]
[294.71328735 -202.87757874]
[281.44226074 -195.85069275]
[267.45669556 -190.38241577]
[252.93894958 -186.54405212]
[238.07829285 -184.38565063]
[223.06846619 -183.93533325]
[208.10514832 -185.19897461]
[193.38340759 -188.16011047]
[188.76940918 -173.88737488]
[184.15539551 -159.61463928]
[192.44561768 -144.98210144]
[187.49031067 -128.55773926]
[171.88822937 -120.64608002]
[167.48722839 -106.30622864]
[175.99440002 -91.79875183]
[171.28416443 -75.30242920]
[155.80160522 -67.15934753]
[151.61459351 -52.75556946]
[147.42758179 -38.35178757]
[143.34791565 -23.91723442]
[139.37582397 -9.45271015]
[153.50476074 -14.48990440]
[166.33207703 -6.71431541]
[168.40196228 8.14218330]
[158.18858337 19.12793350]
[143.22084045 18.14464760]
[134.53269958 5.91879702]
[129.49578857 20.04782677]
[124.45886993 34.17685699]
[119.42195129 48.30588531]
[114.38504028 62.43491364]
[109.34812164 76.56394196]
[107.12300110 91.39798737]
[107.90432739 106.37762451]
[108.79714203 121.35102844]
[109.68995667 136.32443237]
[110.58277130 151.29783630]
[113.89866638 157.01766968]
[113.83737183 162.70037842]
[111.27250671 166.72909546]
[111.71910858 181.72244263]
[112.16571808 196.71578979]
[112.61231995 211.70913696]
[124.54615021 218.60656738]
[131.45864868 230.40640259]
[131.63655090 243.97245789]
[125.14031982 255.75987244]
[113.76046753 262.74136353]
[113.98379517 277.73968506]
[114.20712280 292.73803711]
[114.43045044 307.73635864]
[114.65377808 322.73471069]
[114.98875427 337.73095703]
[115.43536377 352.72430420]
[115.88196564 367.71765137]
[127.10316467 378.52148438]
[127.34249878 393.73324585]
[116.97355652 404.36434937]
[117.86637115 419.33776855]
[119.20460510 434.27795410]
[120.54283905 449.21813965]
[121.88108063 464.15832520]
[136.72531128 466.90625000]
[150.27720642 473.55822754]
[161.53108215 483.62066650]
[169.65187073 496.34686279]
[174.03691101 510.79238892]
[174.36083984 525.88537598]
[170.59960938 540.50573730]
[163.03231812 553.56860352]
[152.22052002 564.10461426]
[138.96652222 571.33197021]
[124.25385284 574.71423340]
[109.17429352 574.00054932]
[94.84683990 569.24377441]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 197]
[9 196]
[10 195]
[11 194]
[16 193]
[19 190]
[20 189]
[21 188]
[23 187]
[24 186]
[25 185]
[26 184]
[27 183]
[31 178]
[32 177]
[33 176]
[34 175]
[35 172]
[36 171]
[37 170]
[38 169]
[40 168]
[67 167]
[68 166]
[69 165]
[70 164]
[71 163]
[72 162]
[73 156]
[74 155]
[76 154]
[77 153]
[78 152]
[82 149]
[83 148]
[87 145]
[88 144]
[89 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
