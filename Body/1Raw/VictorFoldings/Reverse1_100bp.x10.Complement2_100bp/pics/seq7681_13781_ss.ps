%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[116.67243958 588.87982178]
[115.82633209 573.85089111]
[118.02319336 558.95935059]
[123.17305756 544.81494141]
[131.06504822 531.99694824]
[141.37599182 521.03021240]
[153.68363953 512.36376953]
[167.48403931 506.35263062]
[164.37992859 491.67733765]
[161.27581787 477.00201416]
[158.17170715 462.32672119]
[144.75689697 461.12734985]
[132.20724487 456.19229126]
[121.54219055 447.91223145]
[113.63095093 436.95007324]
[109.12168121 424.18771362]
[108.38835907 410.65521240]
[111.49980927 397.44757080]
[118.21335602 385.63626099]
[127.99371338 376.18209839]
[140.05569458 369.85733032]
[137.38989258 355.09613037]
[134.72410583 340.33489990]
[132.05830383 325.57369995]
[127.77611542 319.55001831]
[129.46441650 310.57296753]
[127.01869202 295.77371216]
[124.57296753 280.97442627]
[122.12723541 266.17517090]
[119.57140350 251.39450073]
[116.90560913 236.63328552]
[114.23981476 221.87207031]
[104.36380005 210.72247314]
[109.52536774 195.76690674]
[106.85957336 181.00569153]
[104.19377136 166.24447632]
[101.52797699 151.48326111]
[98.86218262 136.72204590]
[96.19638824 121.96083069]
[91.91419220 115.93715668]
[93.60250092 106.96010590]
[90.14059448 103.01940155]
[89.13301849 97.41957092]
[91.31112671 91.68434906]
[89.30711365 76.81881714]
[87.30310059 61.95329285]
[85.07798004 47.11924744]
[82.63225555 32.31997681]
[80.18653107 17.52070618]
[65.90717316 12.03916168]
[56.35185623 0.22422755]
[54.00890732 -14.68808174]
[59.40863800 -28.67732430]
[71.00745392 -38.02254486]
[68.56172180 -52.82181549]
[64.80541992 -67.34387207]
[59.76850510 -81.47290039]
[54.73159027 -95.60193634]
[49.69467545 -109.73096466]
[44.65775681 -123.85999298]
[39.62084198 -137.98901367]
[34.58392715 -152.11805725]
[22.66186905 -162.51878357]
[25.67615891 -177.10519409]
[20.63924217 -191.23422241]
[15.60232544 -205.36325073]
[10.56540966 -219.49227905]
[5.52849340 -233.62130737]
[-6.39356375 -244.02203369]
[-3.37927437 -258.60842896]
[-8.41619015 -272.73745728]
[-13.45310688 -286.86648560]
[-18.49002266 -300.99554443]
[-23.52693939 -315.12457275]
[-28.56385612 -329.25360107]
[-43.35006332 -326.53988647]
[-58.38010406 -326.23330688]
[-73.26467133 -328.34185791]
[-87.61820984 -332.81085205]
[-101.06893158 -339.52459717]
[-113.26843262 -348.30914307]
[-123.90071869 -358.93698120]
[-132.69038391 -371.13278198]
[-139.40975952 -384.58068848]
[-143.88478088 -398.93237305]
[-145.99955750 -413.81604004]
[-145.69929504 -428.84622192]
[-142.99177551 -443.63354492]
[-137.94714355 -457.79504395]
[-130.69604492 -470.96386719]
[-121.42631531 -482.79888916]
[-110.37805939 -492.99362183]
[-97.83744812 -501.28393555]
[-84.12931824 -507.45510864]
[-69.60874939 -511.34729004]
[-54.65184784 -512.85968018]
[-39.64604187 -511.95309448]
[-24.98001289 -508.65100098]
[-11.03364754 -503.03897095]
[1.83180869 -495.26229858]
[13.28310966 -485.52249146]
[23.02363968 -474.07180786]
[30.80109596 -461.20684814]
[36.41402054 -447.26083374]
[39.71702957 -432.59503174]
[40.62456894 -417.58926392]
[39.11312103 -402.63226318]
[35.22184753 -388.11145020]
[29.05153465 -374.40292358]
[20.76201057 -361.86181641]
[10.56799507 -350.81289673]
[-1.26646423 -341.54241943]
[-14.43482590 -334.29049683]
[-9.39791012 -320.16146851]
[-4.36099339 -306.03244019]
[0.67592275 -291.90341187]
[5.71283913 -277.77438354]
[10.74975491 -263.64535522]
[22.31153870 -254.25523376]
[19.65752220 -238.65821838]
[24.69443893 -224.52919006]
[29.73135567 -210.40016174]
[34.76827240 -196.27113342]
[39.80518723 -182.14210510]
[51.36697006 -172.75198364]
[48.71295547 -157.15496826]
[53.74987030 -143.02593994]
[58.78678894 -128.89691162]
[63.82370377 -114.76787567]
[68.86061859 -100.63884735]
[73.89753723 -86.50981903]
[78.93445587 -72.38079071]
[82.35839081 -86.98478699]
[91.71217346 -98.71111298]
[105.18972015 -105.29560852]
[120.18874359 -105.46690369]
[133.81315613 -99.19193268]
[143.43231201 -87.68228149]
[147.18887329 -73.16029358]
[144.35754395 -58.42993164]
[135.48498535 -46.33539963]
[122.28434753 -39.21196365]
[107.30448151 -38.43504715]
[93.43775940 -44.15465927]
[83.36099243 -55.26753998]
[85.80672455 -40.46826935]
[99.79549408 -35.35165405]
[109.40892792 -23.84348869]
[111.98834229 -8.97025776]
[106.74233246 5.29074478]
[94.98580170 15.07497883]
[97.43152618 29.87424850]
[99.87725067 44.67351913]
[103.16915894 48.13364029]
[104.32238007 53.69844818]
[102.16862488 59.94927597]
[104.17264557 74.81480408]
[106.17665863 89.68033600]
[108.40177155 104.51438141]
[110.95760345 119.29502869]
[113.62339783 134.05624390]
[116.28919983 148.81745911]
[118.95499420 163.57868958]
[121.62078857 178.33990479]
[124.28658295 193.10112000]
[134.35327148 205.30653381]
[129.00103760 219.20626831]
[131.66682434 233.96749878]
[134.33262634 248.72871399]
[138.93734741 256.61758423]
[136.92651367 263.72943115]
[139.37223816 278.52871704]
[141.81796265 293.32797241]
[144.26368713 308.12725830]
[146.81951904 322.90789795]
[149.48532104 337.66912842]
[152.15110779 352.43032837]
[154.81690979 367.19155884]
[171.24917603 369.80371094]
[185.77168274 377.87127686]
[196.63774109 390.40386963]
[202.54731750 405.87518311]
[202.80261230 422.40911865]
[197.39033508 438.00701904]
[186.98123169 450.78945923]
[172.84701538 459.22262573]
[175.95112610 473.89791870]
[179.05522156 488.57321167]
[182.15933228 503.24853516]
[197.21179199 503.15673828]
[211.97453308 506.09722900]
[225.84303284 511.94955444]
[238.24937439 520.47406006]
[248.68554688 531.32171631]
[256.72418213 544.04827881]
[262.03607178 558.13262939]
[264.40377808 572.99798584]
[263.73025513 588.03564453]
[260.04315186 602.62982178]
[253.49340820 616.18292236]
[244.34925842 628.13989258]
[232.98515320 638.01110840]
[219.86640930 645.39245605]
[205.53027344 649.98156738]
[190.56376648 651.59051514]
[175.57978821 650.15350342]
[161.19189453 645.72924805]
[147.98928833 638.49908447]
[136.51258850 628.75891113]
[127.23176575 616.90771484]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 189]
[9 188]
[10 187]
[11 186]
[21 178]
[22 177]
[23 176]
[24 175]
[26 174]
[27 173]
[28 172]
[29 171]
[30 169]
[31 168]
[32 167]
[34 165]
[35 164]
[36 163]
[37 162]
[38 161]
[39 160]
[41 159]
[44 158]
[45 157]
[46 156]
[47 153]
[48 152]
[49 151]
[54 146]
[55 145]
[56 132]
[57 131]
[58 130]
[59 129]
[60 128]
[61 127]
[62 126]
[64 124]
[65 123]
[66 122]
[67 121]
[68 120]
[70 118]
[71 117]
[72 116]
[73 115]
[74 114]
[75 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
