%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUAUCACCCCCCAUUCCGCUCCAAUCGCUCCGAACGAUCUUCAGUAGUUUUUCGAUAAUCACCCUCAUCUCAAACUUCAGGAACUCUCUCCUAAUACxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[201.23054504 669.24822998]
[187.38461304 663.23217773]
[175.67594910 653.70275879]
[166.97341919 641.36712646]
[161.92282104 627.14062500]
[160.89892578 612.07891846]
[163.97772217 597.29974365]
[170.93075562 583.89984131]
[181.24203491 572.87347412]
[194.14642334 565.03900146]
[208.68630981 560.97766113]
[208.68630981 545.97766113]
[208.68630981 530.97766113]
[208.68630981 515.97766113]
[208.68630981 500.97766113]
[208.68630981 485.97766113]
[206.46118164 471.14361572]
[202.06018066 456.80377197]
[197.65919495 442.46392822]
[179.82513428 434.62426758]
[173.40740967 415.90753174]
[182.96893311 398.23672485]
[177.93202209 384.10769653]
[172.89509583 369.97866821]
[167.85818481 355.84963989]
[162.82127380 341.72061157]
[148.85971069 331.08850098]
[152.32780457 313.00387573]
[147.08108521 298.95141602]
[141.83436584 284.89892578]
[136.58764648 270.84646606]
[134.09626770 269.56146240]
[131.96379089 267.21218872]
[130.59811401 263.93035889]
[130.35200500 259.99285889]
[131.47427368 255.79829407]
[127.07327271 241.45845032]
[122.67227936 227.11859131]
[118.27127838 212.77874756]
[113.87027740 198.43890381]
[109.46928406 184.09906006]
[105.06828308 169.75920105]
[100.66728973 155.41935730]
[96.59465790 169.85589600]
[86.72660065 181.15286255]
[72.96848297 187.12899780]
[57.97676849 186.63037109]
[44.64613724 179.75329590]
[35.55051804 167.82560730]
[32.44613266 153.15036011]
[35.93239212 138.56112671]
[45.33615112 126.87483215]
[58.84169388 120.34794617]
[73.84130859 120.24068451]
[87.43881226 126.57377625]
[97.00930786 138.12553406]
[95.22683716 123.23181152]
[93.44437408 108.33808899]
[90.99864960 93.53881836]
[87.89453888 78.86351776]
[77.46890259 66.96323395]
[82.40493011 52.91030121]
[72.04010010 45.23350906]
[69.75680542 32.94651031]
[76.24284363 22.73583603]
[73.35756683 8.01594353]
[70.47229767 -6.70394754]
[58.50346375 -12.88146019]
[52.36741638 -24.65258408]
[54.10557938 -37.61641312]
[62.86130905 -47.06980896]
[60.19551468 -61.83102417]
[57.52972031 -76.59223938]
[54.15659332 -80.57585144]
[52.78587341 -85.01143646]
[53.25440598 -89.06056976]
[55.08992004 -92.07109070]
[53.08590698 -106.93662262]
[51.08189392 -121.80214691]
[49.07788086 -136.66767883]
[47.07386780 -151.53320312]
[45.06985092 -166.39872742]
[35.13779831 -155.15798950]
[20.17550850 -154.09501648]
[8.75406456 -163.81874084]
[7.41618824 -178.75895691]
[16.92827606 -190.35723877]
[31.84136963 -191.96955872]
[43.61210632 -182.67314148]
[42.94232178 -197.65818787]
[34.59653091 -211.09910583]
[41.75780869 -224.15916443]
[41.08802414 -239.14421082]
[40.41823959 -254.12924194]
[25.78535080 -257.92001343]
[12.92078400 -265.85693359]
[2.96844769 -277.23419189]
[-3.18670273 -291.04019165]
[-4.99735546 -306.04730225]
[-2.30250907 -320.92105103]
[4.65821362 -334.33895874]
[15.26586914 -345.10784912]
[28.57723236 -352.27017212]
[43.40866470 -355.18908691]
[58.44136810 -353.60501099]
[72.33863831 -347.65881348]
[83.86474609 -337.87924194]
[91.99479675 -325.13586426]
[96.00587463 -310.56182861]
[95.54130554 -295.45303345]
[90.64241028 -281.15295410]
[81.74479675 -268.93313599]
[69.63961792 -259.88018799]
[55.40327835 -254.79904175]
[56.07306290 -239.81399536]
[56.74284744 -224.82896423]
[65.04073334 -212.45986938]
[57.92736053 -198.32797241]
[58.59714508 -183.34292603]
[59.93538284 -168.40274048]
[61.93939590 -153.53721619]
[63.94340897 -138.67169189]
[65.94741821 -123.80615997]
[67.95143890 -108.94063568]
[69.95545197 -94.07510376]
[72.29093933 -79.25804138]
[74.95673370 -64.49681854]
[77.62252808 -49.73560333]
[91.83576965 -40.74546432]
[95.21578979 -23.92612076]
[85.19218445 -9.58922005]
[88.07746124 5.13067102]
[90.96273041 19.85056305]
[103.19265747 32.43610764]
[97.08023071 49.80619049]
[107.28383636 60.65679932]
[102.56983948 75.75940704]
[105.67395020 90.43470764]
[114.74244690 78.48638916]
[129.58422852 76.31352234]
[141.69726562 85.16081238]
[144.14263916 99.96014404]
[135.51953125 112.23377991]
[120.76766205 114.95082855]
[108.33808899 106.55562592]
[110.12055969 121.44934082]
[111.90302277 136.34306335]
[115.00713348 151.01835632]
[119.40813446 165.35821533]
[123.80912781 179.69805908]
[128.21012878 194.03790283]
[132.61112976 208.37774658]
[137.01213074 222.71760559]
[141.41311646 237.05744934]
[145.81411743 251.39729309]
[150.64012146 265.59976196]
[155.88684082 279.65222168]
[161.13356018 293.70468140]
[166.38027954 307.75717163]
[177.76921082 313.81149292]
[181.84991455 325.62384033]
[176.95030212 336.68368530]
[181.98721313 350.81271362]
[187.02413940 364.94174194]
[192.06105042 379.07077026]
[197.09796143 393.19979858]
[207.57290649 395.22451782]
[216.19659424 401.36773682]
[221.45188904 410.46640015]
[222.44856262 420.84518433]
[219.07348633 430.62500000]
[211.99903870 438.06292725]
[216.40003967 452.40277100]
[220.80104065 466.74264526]
[223.41386414 451.97195435]
[230.03059387 438.51019287]
[240.12939453 427.41900635]
[252.91381836 419.57308960]
[267.37567139 415.59121704]
[282.37438965 415.78741455]
[296.72711182 420.14617920]
[309.30194092 428.32379150]
[319.10720825 439.67532349]
[325.36956787 453.30554199]
[327.59515381 468.13952637]
[325.60845947 483.00738525]
[319.56619263 496.73657227]
[309.94482422 508.24438477]
[297.50317383 516.62322998]
[283.22241211 521.21234131]
[268.22879028 521.64978027]
[253.70477295 517.90106201]
[240.79577637 510.26181030]
[230.51986694 499.33453369]
[223.68630981 485.97766113]
[223.68630981 500.97766113]
[223.68630981 515.97766113]
[223.68630981 530.97766113]
[223.68630981 545.97766113]
[223.68630981 560.97766113]
[238.22619629 565.03900146]
[251.13056946 572.87347412]
[261.44186401 583.89984131]
[268.39486694 597.29974365]
[271.47366333 612.07891846]
[270.44979858 627.14062500]
[265.39916992 641.36712646]
[256.69665527 653.70275879]
[244.98799133 663.23217773]
[231.14205933 669.24822998]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 200]
[12 199]
[13 198]
[14 197]
[15 196]
[16 195]
[17 174]
[18 173]
[19 172]
[22 166]
[23 165]
[24 164]
[25 163]
[26 162]
[28 159]
[29 158]
[30 157]
[31 156]
[36 155]
[37 154]
[38 153]
[39 152]
[40 151]
[41 150]
[42 149]
[43 148]
[56 147]
[57 146]
[58 145]
[59 138]
[60 137]
[62 135]
[65 133]
[66 132]
[67 131]
[71 128]
[72 127]
[73 126]
[77 125]
[78 124]
[79 123]
[80 122]
[81 121]
[82 120]
[89 119]
[90 118]
[92 116]
[93 115]
[94 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
