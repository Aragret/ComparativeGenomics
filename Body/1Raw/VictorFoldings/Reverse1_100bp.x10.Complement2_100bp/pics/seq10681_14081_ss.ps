%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCCUGCUAAUCAAAAUCGUAACCUCAUCCAAAUCCAAUACAUGCAUCAGAUCCGGUAUACACAACCUCUAACUCUGAUCAUCCCGAUCCGGGUGGCGAxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[191.39173889 501.34469604]
[202.30276489 490.96374512]
[215.19052124 483.17144775]
[210.36451721 468.96899414]
[205.53852844 454.76654053]
[200.71252441 440.56408691]
[194.84356689 426.75991821]
[187.96415710 413.43048096]
[181.08474731 400.10104370]
[174.20532227 386.77163696]
[167.32591248 373.44219971]
[160.44650269 360.11276245]
[158.61206055 375.00018311]
[150.14524841 387.38214111]
[136.93756104 394.49249268]
[121.93965149 394.74279785]
[108.50207520 388.07708740]
[99.62683105 375.98452759]
[97.29666138 361.16662598]
[102.03214264 346.93371582]
[112.77534485 336.46551514]
[127.12622070 332.10058594]
[141.87873840 334.81411743]
[153.73716736 343.99987793]
[149.12315369 329.72714233]
[144.50914001 315.45440674]
[139.89514160 301.18167114]
[135.28112793 286.90893555]
[130.66711426 272.63619995]
[126.05310822 258.36349487]
[121.43910217 244.09074402]
[110.16202545 234.36054993]
[113.27924347 218.84947205]
[108.66522980 204.57673645]
[104.05122375 190.30400085]
[99.43721771 176.03126526]
[94.82320404 161.75854492]
[92.55435944 176.58595276]
[86.57389832 190.34219360]
[77.27850342 202.11485291]
[65.28469086 211.12310791]
[51.38796997 216.76943970]
[36.51006317 218.67938232]
[21.63776398 216.72624207]
[7.75750351 211.03955078]
[-4.21009302 201.99650574]
[-13.47125721 190.19689941]
[-19.41172981 176.42333984]
[-21.63750076 161.58940125]
[-20.00094223 146.67893982]
[-14.61060143 132.68093872]
[-5.82399988 120.52381134]
[5.77607775 111.01391602]
[19.42024040 104.78199005]
[34.20352173 102.24139404]
[49.14539719 103.56063080]
[63.25482559 108.65219116]
[75.59597778 117.17838287]
[85.35031891 128.57368469]
[91.87248230 142.08715820]
[92.09580994 127.08882141]
[92.31913757 112.09048462]
[85.67764282 99.78673553]
[92.68252563 87.68618774]
[92.90585327 72.68785095]
[85.37487030 58.77401352]
[93.30080414 46.16334915]
[93.52413177 31.16501045]
[93.74745941 16.16667366]
[93.52413177 1.16833591]
[92.85434723 -13.81670284]
[81.47354126 -24.45225525]
[81.00775146 -39.65875626]
[91.21726227 -50.44307327]
[90.54747772 -65.42811584]
[89.87769318 -80.41315460]
[89.20790863 -95.39819336]
[76.08419037 -106.96484375]
[75.39975739 -124.10679626]
[87.09011841 -136.19705200]
[86.19730377 -151.17045593]
[85.30448151 -166.14385986]
[84.41166687 -181.11726379]
[69.44380951 -182.46662903]
[54.84426117 -186.03186035]
[40.93918991 -191.73332214]
[28.03923607 -199.44363403]
[16.43259239 -208.99053955]
[6.37855291 -220.16076660]
[-1.89826977 -232.70477295]
[-8.21296883 -246.34230042]
[-12.42447186 -260.76870728]
[-14.43869305 -275.66165161]
[-14.21063137 -290.68850708]
[-11.74538422 -305.51348877]
[-7.09802580 -319.80541992]
[-0.37237915 -333.24505615]
[8.28130245 -345.53210449]
[18.66969109 -356.39205933]
[30.56070900 -365.58233643]
[43.68870544 -372.89764404]
[57.76039124 -378.17449951]
[72.46141052 -381.29504395]
[87.46332550 -382.18954468]
[102.43099213 -380.83804321]
[117.03002930 -377.27075195]
[130.93429565 -371.56729126]
[143.83314514 -363.85516357]
[155.43843079 -354.30657959]
[165.49087524 -343.13494873]
[173.76591492 -330.58975220]
[180.07867432 -316.95132446]
[184.28811646 -302.52432251]
[186.30021667 -287.63107300]
[186.07002258 -272.60427856]
[183.60266113 -257.77963257]
[178.95326233 -243.48835754]
[172.22570801 -230.04969788]
[163.57026672 -217.76388550]
[153.18034363 -206.90539551]
[141.28800964 -197.71679688]
[128.15898132 -190.40338135]
[114.08653259 -185.12854004]
[99.38507080 -182.01008606]
[100.27789307 -167.03668213]
[101.17070770 -152.06327820]
[102.06352234 -137.08985901]
[112.80277252 -129.96960449]
[117.55102539 -117.78206635]
[114.36599731 -104.89540863]
[104.19294739 -96.06797791]
[104.86273193 -81.08293915]
[105.53251648 -66.09790039]
[106.20230103 -51.11285782]
[117.33322906 -41.28239441]
[118.22595215 -26.09497643]
[107.83938599 -14.48648834]
[108.50917053 0.49855074]
[110.48448944 2.48758817]
[111.79093933 5.37892008]
[112.08090210 8.92170429]
[111.10391235 12.74400902]
[108.74579620 16.39000130]
[108.52246857 31.38833809]
[108.29914093 46.38667679]
[115.84609222 59.22773361]
[107.90419006 72.91117859]
[107.68086243 87.90951538]
[114.32235718 100.21326447]
[107.31747437 112.31381226]
[107.09414673 127.31214905]
[106.87081909 142.31048584]
[109.09593964 157.14453125]
[113.70994568 171.41726685]
[118.32395935 185.69000244]
[122.93796539 199.96272278]
[127.55197906 214.23545837]
[139.15907288 224.98654175]
[135.71183777 239.47674561]
[140.32583618 253.74946594]
[144.93984985 268.02221680]
[149.55386353 282.29495239]
[154.16787720 296.56765747]
[158.78187561 310.84039307]
[163.39588928 325.11312866]
[168.00990295 339.38586426]
[173.77592468 353.23336792]
[180.65534973 366.56277466]
[187.53475952 379.89221191]
[194.41416931 393.22164917]
[201.29357910 406.55108643]
[208.17298889 419.88049316]
[210.48210144 405.05929565]
[219.81527710 393.31655884]
[233.73286438 387.72183228]
[248.59680176 389.73751831]
[260.52172852 398.83676147]
[266.39047241 412.64102173]
[264.66897583 427.54193115]
[255.80723572 439.64437866]
[242.12167358 445.78485107]
[227.18966675 444.35821533]
[214.91497803 435.73809814]
[219.74098206 449.94055176]
[224.56697083 464.14300537]
[229.39297485 478.34545898]
[244.36013794 476.67263794]
[259.33691406 478.25689697]
[273.62286377 483.02410889]
[286.54974365 490.75128174]
[297.51300049 501.07705688]
[305.99981689 513.51843262]
[311.61328125 527.49353027]
[314.09082031 542.34869385]
[313.31655884 557.38909912]
[309.32672119 571.91131592]
[302.30789185 585.23614502]
[292.58840942 596.74029541]
[280.62280273 605.88574219]
[266.97079468 612.24468994]
[252.27085876 615.51971436]
[237.21055603 615.55767822]
[222.49427795 612.35681152]
[208.81036377 606.06683350]
[196.79879761 596.98187256]
[187.02139282 585.52691650]
[179.93545532 572.23767090]
[175.87242126 557.73571777]
[175.02230835 542.69940186]
[177.42488098 527.83190918]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 186]
[4 185]
[5 184]
[6 183]
[7 172]
[8 171]
[9 170]
[10 169]
[11 168]
[12 167]
[24 166]
[25 165]
[26 164]
[27 163]
[28 162]
[29 161]
[30 160]
[31 159]
[33 157]
[34 156]
[35 155]
[36 154]
[37 153]
[60 152]
[61 151]
[62 150]
[64 148]
[65 147]
[67 145]
[68 144]
[69 143]
[70 138]
[71 137]
[74 134]
[75 133]
[76 132]
[77 131]
[80 127]
[81 126]
[82 125]
[83 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
