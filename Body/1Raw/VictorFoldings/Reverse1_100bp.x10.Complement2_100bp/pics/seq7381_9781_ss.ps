%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[74.91483307 740.31927490]
[59.96865463 738.99938965]
[45.12569809 736.80456543]
[30.43713188 733.74249268]
[15.95359230 729.82360840]
[1.72500610 725.06146240]
[-12.19957733 719.47253418]
[-25.77215576 713.07598877]
[-38.94594193 705.89392090]
[-51.67552567 697.95111084]
[-63.91702271 689.27496338]
[-75.62823486 679.89526367]
[-86.76878357 669.84448242]
[-97.30027771 659.15716553]
[-107.18640137 647.87023926]
[-116.39308167 636.02258301]
[-124.88858032 623.65496826]
[-132.64361572 610.81018066]
[-139.63143921 597.53234863]
[-145.82797241 583.86724854]
[-151.21186829 569.86212158]
[-155.76454163 555.56512451]
[-159.47030640 541.02563477]
[-162.31640625 526.29370117]
[-164.29299927 511.42010498]
[-165.39329529 496.45614624]
[-165.61349487 481.45339966]
[-164.95283508 466.46362305]
[-163.41358948 451.53842163]
[-161.00108337 436.72930908]
[-157.72361755 422.08728027]
[-153.59248352 407.66284180]
[-148.62194824 393.50570679]
[-142.82911682 379.66470337]
[-136.23397827 366.18753052]
[-128.85926819 353.12060547]
[-120.73038483 340.50903320]
[-111.87538147 328.39627075]
[-102.32476044 316.82403564]
[-92.11145782 305.83227539]
[-81.27067566 295.45886230]
[-69.83978271 285.73953247]
[-57.85818863 276.70782471]
[-45.36719513 268.39483643]
[-32.40986252 260.82925415]
[-19.03085327 254.03717041]
[-5.27629375 248.04196167]
[8.80640507 242.86430359]
[23.16869545 238.52206421]
[37.76106644 235.03018188]
[52.53321838 232.40072632]
[67.43422699 230.64274597]
[82.41271973 229.76229858]
[82.41271973 214.76229858]
[82.41271973 199.76229858]
[71.86836243 210.43078613]
[56.94556808 211.95071411]
[44.46683121 203.62718201]
[40.13726425 189.26560974]
[45.93628693 175.43190002]
[59.21266174 168.45065308]
[73.89661407 171.51359558]
[83.27543640 183.22213745]
[84.83596039 168.30354309]
[86.39648438 153.38493347]
[87.95700073 138.46632385]
[85.52642822 131.48678589]
[89.65343475 123.33781433]
[91.43589783 108.44409180]
[92.99642181 93.52548981]
[94.33465576 78.58530426]
[95.67288971 63.64511871]
[97.01112366 48.70493698]
[90.53586578 34.26950455]
[99.37778473 22.28327370]
[100.71601868 7.34308815]
[91.41776276 -10.54279613]
[103.21754456 -25.86115456]
[104.11035919 -40.83456039]
[105.00318146 -55.80796432]
[105.89599609 -70.78137207]
[91.11037445 -73.40851593]
[76.72972870 -77.73444366]
[62.94854736 -83.70063782]
[49.95319748 -91.22642517]
[37.91943359 -100.21002197]
[27.00999641 -110.52993774]
[17.37241936 -122.04660797]
[9.13704491 -134.60427856]
[2.41524410 -148.03312683]
[-2.70207739 -162.15153503]
[-6.14571381 -176.76858521]
[-7.86909342 -191.68656921]
[-7.84891033 -206.70376587]
[-6.08543682 -221.61706543]
[-2.60252213 -236.22480774]
[2.55273151 -250.32940674]
[9.31060505 -263.74014282]
[17.57970619 -276.27563477]
[27.24820328 -287.76635742]
[38.18534470 -298.05691528]
[50.24321365 -307.00811768]
[63.25874329 -314.49896240]
[77.05591583 -320.42807007]
[91.44813538 -324.71533203]
[106.24076080 -327.30273438]
[121.23374939 -328.15527344]
[136.22433472 -327.26144409]
[151.00978088 -324.63330078]
[165.39013672 -320.30642700]
[179.17091370 -314.33929443]
[192.16577148 -306.81265259]
[204.19892883 -297.82824707]
[215.10768127 -287.50759888]
[224.74449158 -275.99029541]
[232.97901917 -263.43206787]
[239.69992065 -250.00276184]
[244.81631470 -235.88401794]
[248.25897217 -221.26673889]
[249.98135376 -206.34863281]
[249.96015930 -191.33143616]
[248.19569397 -176.41825867]
[244.71180725 -161.81076050]
[239.55561829 -147.70649719]
[232.79684448 -134.29621887]
[224.52690125 -121.76127625]
[214.85763550 -110.27120209]
[203.91981506 -99.98137665]
[191.86134338 -91.03096771]
[178.84532166 -83.54100800]
[165.04776001 -77.61279297]
[150.65524292 -73.32649994]
[135.86244202 -70.74009705]
[120.86940002 -69.88855743]
[119.97658539 -54.91514969]
[119.08377075 -39.94174194]
[118.19095612 -24.96833801]
[125.63343048 -17.96673393]
[128.04408264 -7.81108952]
[124.39202881 2.20103836]
[115.65620422 8.68132210]
[114.31797028 23.62150764]
[120.88894653 36.98831558]
[111.95130920 50.04317093]
[110.61307526 64.98335266]
[109.27484131 79.92353821]
[107.93660736 94.86372375]
[110.30137634 99.54579926]
[109.87453461 105.21952057]
[106.32961273 110.22656250]
[104.54714966 125.12027740]
[102.87561035 140.02685547]
[101.31508636 154.94544983]
[99.75456238 169.86405945]
[98.19403839 184.78266907]
[97.41271973 199.76229858]
[97.41271973 214.76229858]
[97.41271973 229.76229858]
[112.39121246 230.64274597]
[127.29222107 232.40072632]
[142.06436157 235.03018188]
[156.65673828 238.52206421]
[171.01902771 242.86430359]
[185.10173035 248.04196167]
[198.85629272 254.03717041]
[212.23529053 260.82925415]
[225.19262695 268.39483643]
[237.68362427 276.70782471]
[249.66522217 285.73953247]
[261.09609985 295.45886230]
[271.93688965 305.83227539]
[282.15020752 316.82403564]
[291.70080566 328.39627075]
[300.55581665 340.50903320]
[308.68469238 353.12060547]
[316.05941772 366.18753052]
[322.65457153 379.66470337]
[328.44738770 393.50570679]
[333.41793823 407.66284180]
[337.54904175 422.08728027]
[340.82650757 436.72930908]
[343.23904419 451.53842163]
[344.77825928 466.46362305]
[345.43893433 481.45339966]
[345.21871948 496.45614624]
[344.11843872 511.42010498]
[342.14184570 526.29370117]
[339.29574585 541.02563477]
[335.58996582 555.56512451]
[331.03729248 569.86212158]
[325.65341187 583.86724854]
[319.45687866 597.53234863]
[312.46905518 610.81018066]
[304.71401978 623.65496826]
[296.21850586 636.02258301]
[287.01184082 647.87023926]
[277.12570190 659.15716553]
[266.59420776 669.84448242]
[255.45367432 679.89526367]
[243.74246216 689.27496338]
[231.50096130 697.95111084]
[218.77137756 705.89392090]
[205.59759521 713.07598877]
[192.02500916 719.47253418]
[178.10043335 725.06146240]
[163.87184143 729.82360840]
[149.38830566 733.74249268]
[134.69973755 736.80456543]
[119.85678101 738.99938965]
[104.91059875 740.31927490]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 158]
[54 157]
[55 156]
[63 155]
[64 154]
[65 153]
[66 152]
[68 151]
[69 150]
[70 147]
[71 146]
[72 145]
[73 144]
[75 142]
[76 141]
[78 137]
[79 136]
[80 135]
[81 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
