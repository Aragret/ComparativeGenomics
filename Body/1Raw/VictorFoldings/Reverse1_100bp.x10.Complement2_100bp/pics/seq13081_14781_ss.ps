%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGGAUUCGUAUCACAAUCUCAAACCUAAUCACCCGAUAAAAGACGAUCCCCCACCUUCGCCUACUCAUUCUUCUAAGGACGAUGUUGAUAUCACGAACxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[146.16424561 309.45791626]
[141.97723389 295.05413818]
[137.79022217 280.65036011]
[133.60321045 266.24658203]
[129.41619873 251.84278870]
[124.53056335 246.29730225]
[125.27578735 237.19332886]
[121.30368805 222.72880554]
[117.33159637 208.26428223]
[106.50023651 198.04023743]
[110.30695343 182.68382263]
[107.94016266 181.18168640]
[106.02577209 178.65151978]
[104.95833588 175.26094055]
[105.06448364 171.31718445]
[106.55650330 167.23945618]
[103.45239258 152.56416321]
[93.24878693 141.71354675]
[97.96279144 126.61093903]
[94.85868073 111.93563843]
[91.31900787 97.35926056]
[87.34690857 82.89473724]
[83.37480927 68.43021393]
[79.40271759 53.96569061]
[73.63668060 40.11820602]
[66.16894531 27.10925484]
[58.70120239 14.10030174]
[51.23345947 1.09134924]
[43.76571655 -11.91760349]
[44.55934143 3.06138754]
[41.33619308 17.71100616]
[34.32895660 30.97368240]
[24.04348564 41.89197540]
[11.22230148 49.67768097]
[-3.20902538 53.76874542]
[-18.20868492 53.86983109]
[-32.69384003 49.97363663]
[-45.61878967 42.36143494]
[-56.05047607 31.58275414]
[-63.23582458 18.41572189]
[-66.65612030 3.81087399]
[-66.06444550 -11.17745209]
[-61.50352097 -25.46723747]
[-53.30259705 -38.02688599]
[-42.05370712 -47.94971085]
[-28.56891632 -54.51937485]
[-13.82170773 -57.26160431]
[1.12330770 -55.97843933]
[15.18723583 -50.76250839]
[27.35478973 -41.99035645]
[36.74818420 -30.29425621]
[33.64407349 -44.96955872]
[30.53996277 -59.64486313]
[27.43585205 -74.32016754]
[24.33174133 -88.99546814]
[21.22763252 -103.67076874]
[18.12352180 -118.34606934]
[15.01941109 -133.02137756]
[11.91530132 -147.69667053]
[1.55047417 -155.37347412]
[-0.73282522 -167.66046143]
[5.75321245 -177.87113953]
[2.86793971 -192.59103394]
[-0.78014779 -207.14065552]
[-5.18114567 -221.48049927]
[-9.58214378 -235.82034302]
[-13.98314190 -250.16020203]
[-18.38414001 -264.50003052]
[-22.78513718 -278.83990479]
[-37.55569839 -276.12936401]
[-52.54106522 -275.15194702]
[-67.53857422 -275.92086792]
[-82.34540558 -278.42572021]
[-96.76130676 -282.63265991]
[-110.59132385 -288.48477173]
[-123.64842224 -295.90289307]
[-135.75601196 -304.78674316]
[-146.75036621 -315.01614380]
[-156.48278809 -326.45275879]
[-164.82167053 -338.94195557]
[-171.65422058 -352.31478882]
[-176.88804626 -366.39044189]
[-180.45236206 -380.97851562]
[-182.29896545 -395.88174438]
[-182.40287781 -410.89859009]
[-180.76271057 -425.82595825]
[-177.40065002 -440.46197510]
[-172.36212158 -454.60870361]
[-165.71531677 -468.07482910]
[-157.55009460 -480.67822266]
[-147.97688293 -492.24847412]
[-137.12516785 -502.62905884]
[-125.14167786 -511.67962646]
[-112.18849945 -519.27777100]
[-98.44080353 -525.32067871]
[-84.08450317 -529.72674561]
[-69.31375885 -532.43627930]
[-54.32833099 -533.41271973]
[-39.33087158 -532.64282227]
[-24.52420998 -530.13696289]
[-10.10858917 -525.92907715]
[3.72103810 -520.07604980]
[16.77764130 -512.65704346]
[28.88464355 -503.77236938]
[39.87831497 -493.54223633]
[49.60997391 -482.10494995]
[57.94801331 -469.61520386]
[64.77967072 -456.24191284]
[70.01255035 -442.16592407]
[73.57589722 -427.57760620]
[75.42150879 -412.67425537]
[75.52442932 -397.65737915]
[73.88326263 -382.73013306]
[70.52021790 -368.09432983]
[65.48075867 -353.94793701]
[58.83304214 -340.48226929]
[50.66698074 -327.87942505]
[41.09300232 -316.30981445]
[30.24058533 -305.92996216]
[18.25649834 -296.88018799]
[5.30281162 -289.28292847]
[-8.44529057 -283.24087524]
[-4.04429293 -268.90103149]
[0.35670516 -254.56118774]
[4.75770330 -240.22134399]
[9.15870094 -225.88150024]
[13.55969906 -211.54165649]
[20.50986099 -224.83433533]
[34.32995605 -230.66571045]
[48.70162582 -226.36975098]
[57.05432892 -213.91053772]
[55.56933212 -198.98422241]
[44.92554855 -188.41493225]
[29.98917389 -187.03480530]
[17.58783150 -195.47630310]
[20.47310448 -180.75640869]
[32.70302582 -168.17086792]
[26.59060287 -150.80078125]
[29.69471359 -136.12548828]
[32.79882431 -121.45018005]
[35.90293503 -106.77487946]
[39.00704575 -92.09957886]
[42.11115265 -77.42427063]
[45.21526337 -62.74897003]
[48.31937408 -48.07366943]
[51.42348480 -33.39836884]
[56.77466965 -19.38534355]
[64.24240875 -6.37639189]
[71.71015167 6.63256025]
[79.17789459 19.64151192]
[86.64563751 32.65046692]
[86.24748230 17.65575027]
[90.67679596 3.32462430]
[99.46614075 -8.83051491]
[111.68795776 -17.52690697]
[126.05244446 -21.84679985]
[141.04368591 -21.33430481]
[155.07962036 -16.04350853]
[166.67900085 -6.53275919]
[174.61772156 6.19424963]
[178.05798340 20.79440689]
[176.63673401 35.72692108]
[170.50395203 49.41593552]
[160.30685425 60.41680527]
[147.12156677 67.56858826]
[132.33955383 70.11654663]
[117.52079773 67.79177094]
[104.22916412 60.83961868]
[93.86724091 49.99359512]
[97.83934021 64.45812225]
[101.81143188 78.92264557]
[105.78353119 93.38716888]
[108.29515839 95.11379242]
[110.23405457 97.79244995]
[111.24637604 101.21277618]
[111.06098175 105.03663635]
[109.53398132 108.83152771]
[112.63809204 123.50682831]
[123.06372070 135.40711975]
[118.12770081 149.46005249]
[121.23180389 164.13534546]
[124.77147675 178.71173096]
[135.88694763 189.97036743]
[131.79611206 204.29219055]
[135.76821899 218.75671387]
[139.74031067 233.22123718]
[143.81997681 247.65577698]
[148.00698853 262.05957031]
[152.19400024 276.46334839]
[156.38101196 290.86712646]
[160.56802368 305.27090454]
[175.67350769 305.29800415]
[190.15910339 309.58105469]
[202.85050964 317.77279663]
[212.71888733 329.20922852]
[218.96426392 342.96319580]
[221.08035278 357.91976929]
[218.89561462 372.86645508]
[212.58714294 386.59161377]
[202.66633606 397.98260498]
[189.93745422 406.11596680]
[175.43234253 410.33245850]
[160.32688904 410.29016113]
[145.84559631 405.99258423]
[133.16242981 397.78808594]
[123.30554199 386.34176636]
[117.07398987 372.58151245]
[114.97293091 357.62283325]
[117.17269135 342.67834473]
[123.49494934 328.95953369]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 191]
[2 190]
[3 189]
[4 188]
[5 187]
[7 186]
[8 185]
[9 184]
[11 182]
[16 181]
[17 180]
[19 178]
[20 177]
[21 172]
[22 171]
[23 170]
[24 169]
[25 151]
[26 150]
[27 149]
[28 148]
[29 147]
[51 146]
[52 145]
[53 144]
[54 143]
[55 142]
[56 141]
[57 140]
[58 139]
[59 138]
[62 136]
[63 135]
[64 127]
[65 126]
[66 125]
[67 124]
[68 123]
[69 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
