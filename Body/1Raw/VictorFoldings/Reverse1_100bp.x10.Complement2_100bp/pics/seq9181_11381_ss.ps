%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[208.51786804 267.47702026]
[217.06959534 255.13476562]
[226.92720032 243.80819702]
[216.76364136 232.77632141]
[206.60009766 221.74444580]
[196.43655396 210.71257019]
[186.27301025 199.68069458]
[171.42671204 199.32949829]
[160.96228027 188.28639221]
[161.43130493 172.71661377]
[151.26776123 161.68473816]
[140.86038208 150.88258362]
[130.21437073 140.31553650]
[119.56836700 129.74848938]
[108.92236328 119.18144226]
[98.27635193 108.61439514]
[95.23851013 108.36737061]
[92.22341156 107.00954437]
[89.64264679 104.54720306]
[87.89972687 101.13861847]
[87.33475494 97.08722687]
[77.33658600 85.90525055]
[67.33840942 74.72327423]
[57.34024048 63.54130173]
[47.34206772 52.35932541]
[37.34389496 41.17734909]
[27.26275635 30.07011795]
[17.09921074 19.03824043]
[6.93566322 8.00636292]
[-3.22788382 -3.02551484]
[-13.39143085 -14.05739212]
[-28.94739151 -14.86352348]
[-39.09751892 -26.19619942]
[-38.23313141 -41.02146149]
[-46.34934235 -45.21251297]
[-48.46436691 -52.29407120]
[-58.46253967 -63.47604370]
[-68.46070862 -74.65802002]
[-80.34005737 -65.48856354]
[-92.85009003 -57.20020676]
[-105.92557526 -49.83615112]
[-119.49835968 -43.43479919]
[-133.49766541 -38.02951813]
[-147.85052490 -33.64849091]
[-162.48208618 -30.31455994]
[-177.31608582 -28.04510689]
[-192.27516174 -26.85196304]
[-207.28134155 -26.74134636]
[-222.25639343 -27.71383858]
[-237.12222290 -29.76436424]
[-251.80134583 -32.88223648]
[-266.21722412 -37.05120087]
[-280.29470825 -42.24951935]
[-293.96038818 -48.45008850]
[-307.14300537 -55.62058640]
[-319.77386475 -63.72362518]
[-331.78707886 -72.71695709]
[-343.12005615 -82.55370331]
[-353.71368408 -93.18256378]
[-363.51275635 -104.54814148]
[-372.46612549 -116.59117126]
[-380.52719116 -129.24887085]
[-387.65386963 -142.45523071]
[-393.80902100 -156.14141846]
[-398.96057129 -170.23608398]
[-403.08163452 -184.66572571]
[-406.15072632 -199.35511780]
[-408.15188599 -214.22767639]
[-409.07464600 -229.20587158]
[-408.91421509 -244.21160889]
[-407.67138672 -259.16665649]
[-405.35269165 -273.99301147]
[-401.97018433 -288.61343384]
[-397.54150391 -302.95166016]
[-392.08978271 -316.93295288]
[-385.64340210 -330.48440552]
[-378.23596191 -343.53536987]
[-369.90609741 -356.01779175]
[-360.69723511 -367.86663818]
[-350.65740967 -379.02008057]
[-339.83892822 -389.41998291]
[-328.29821777 -399.01217651]
[-316.09542847 -407.74658203]
[-303.29421997 -415.57766724]
[-289.96127319 -422.46466064]
[-276.16613770 -428.37161255]
[-261.98074341 -433.26773071]
[-247.47900391 -437.12750244]
[-232.73657227 -439.93078613]
[-217.83029175 -441.66296387]
[-202.83787537 -442.31503296]
[-187.83749390 -441.88357544]
[-172.90733337 -440.37084961]
[-158.12525940 -437.78472900]
[-143.56832886 -434.13870239]
[-129.31243896 -429.45178223]
[-115.43190002 -423.74841309]
[-101.99909973 -417.05828857]
[-89.08406067 -409.41635132]
[-76.75411224 -400.86239624]
[-65.07354736 -391.44100952]
[-54.10325623 -381.20135498]
[-43.90044022 -370.19680786]
[-34.51828766 -358.48471069]
[-26.00571251 -346.12615967]
[-18.40709877 -333.18557739]
[-11.76206207 -319.73040771]
[-6.10524654 -305.83084106]
[-1.46614432 -291.55932617]
[2.13105822 -276.99023438]
[4.66760683 -262.19958496]
[6.13027668 -247.26445007]
[6.51144218 -232.26269531]
[5.80911589 -217.27255249]
[4.02695990 -202.37216187]
[1.17426515 -187.63920593]
[-2.73409510 -173.15051270]
[-7.67774487 -158.98159790]
[-13.63090897 -145.20634460]
[-20.56255150 -131.89656067]
[-28.43653297 -119.12166595]
[-37.21179962 -106.94823456]
[-46.84260559 -95.43974304]
[-57.27873611 -84.65618896]
[-47.28056335 -73.47422028]
[-37.28239059 -62.29224396]
[-27.20125389 -51.18500900]
[-12.35496616 -50.83382034]
[-1.89053082 -39.79071045]
[-2.35955334 -24.22093964]
[7.80399370 -13.18906116]
[17.96754074 -2.15718436]
[28.13108635 8.87469292]
[38.29463577 19.90657043]
[45.13868332 22.69597244]
[48.52587128 31.17917824]
[58.52404404 42.36115265]
[68.52221680 53.54312897]
[78.52038574 64.72510529]
[88.51855469 75.90707397]
[98.51673126 87.08905029]
[108.84339905 97.96838379]
[119.48941040 108.53543091]
[130.13542175 119.10247803]
[140.78141785 129.66952515]
[151.42742920 140.23657227]
[156.47488403 141.56709290]
[160.14068604 144.41581726]
[162.07789612 148.00222778]
[162.29963684 151.52119446]
[172.46318054 162.55307007]
[188.01914978 163.35920715]
[198.16926575 174.69187927]
[197.30488586 189.51713562]
[207.46842957 200.54902649]
[217.63197327 211.58090210]
[227.79551697 222.61277771]
[237.95907593 233.64465332]
[250.05401611 224.74658203]
[263.05441284 217.23309326]
[276.80249023 211.19537354]
[291.13131714 206.70672607]
[305.86697388 203.82165527]
[320.83056641 202.57514954]
[335.84048462 202.98236084]
[350.71447754 205.03836060]
[365.27203369 208.71815491]
[379.33639526 213.97711182]
[392.73687744 220.75135803]
[405.31079102 228.95867920]
[416.90548706 238.49945068]
[427.38021851 249.25784302]
[436.60784912 261.10327148]
[444.47634888 273.89193726]
[450.89019775 287.46856689]
[455.77157593 301.66842651]
[459.06118774 316.31906128]
[460.71911621 331.24270630]
[460.72521973 346.25811768]
[459.07943726 361.18310547]
[455.80175781 375.83642578]
[450.93194580 390.04022217]
[444.52911377 403.62210083]
[436.67102051 416.41714478]
[427.45303345 428.27008057]
[416.98703003 439.03698730]
[405.40011597 448.58718872]
[392.83288574 456.80471802]
[379.43792725 463.58987427]
[365.37783813 468.86026001]
[350.82327271 472.55191040]
[335.95095825 474.61999512]
[320.94137573 475.03942871]
[305.97677612 473.80511475]
[291.23876953 470.93200684]
[276.90631104 466.45501709]
[263.15332031 460.42849731]
[250.14682007 452.92556763]
[238.04464722 444.03735352]
[226.99372864 433.87170410]
[217.12820435 422.55206299]
[208.56782532 410.21578979]
[201.41653442 397.01266479]
[195.76112366 383.10299683]
[191.67024231 368.65557861]
[189.19355774 353.84579468]
[188.36112976 338.85345459]
[189.18305969 323.86053467]
[191.64938354 309.04904175]
[195.73014832 294.59875488]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 158]
[4 157]
[5 156]
[6 155]
[7 154]
[10 151]
[11 150]
[12 146]
[13 145]
[14 144]
[15 143]
[16 142]
[21 141]
[22 140]
[23 139]
[24 138]
[25 137]
[26 136]
[27 134]
[28 133]
[29 132]
[30 131]
[31 130]
[34 127]
[36 126]
[37 125]
[38 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
