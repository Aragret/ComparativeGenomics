%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[220.66093445 316.21804810]
[221.78427124 301.25253296]
[224.06394958 286.41909790]
[227.48626709 271.80691528]
[232.03062439 257.50384521]
[237.66969299 243.59597778]
[244.36958313 230.16691589]
[252.08998108 217.29742432]
[239.86349487 208.60758972]
[225.00712585 207.54107666]
[218.24099731 193.23966980]
[206.01451111 184.54985046]
[193.78802490 175.86001587]
[181.56153870 167.17019653]
[166.96394348 169.89891052]
[154.44076538 161.26036072]
[151.67761230 145.93057251]
[139.45112610 137.24073792]
[127.22463989 128.55091858]
[112.36827087 127.48439789]
[105.60214996 113.18299103]
[91.70182800 111.67543030]
[85.70803070 99.04349518]
[73.48154449 90.35366821]
[61.25505447 81.66384125]
[49.02856827 72.97402191]
[36.80208588 64.28419495]
[43.91474533 77.49063873]
[48.26325226 91.84648895]
[49.67441559 106.77996063]
[48.09202194 121.69625854]
[43.57910156 136.00128174]
[36.31539917 149.12524414]
[26.59022713 160.54545593]
[14.79093552 169.80702209]
[1.38748467 176.54107666]
[-13.08627129 180.47940063]
[-28.05384636 181.46513367]
[-42.91909027 179.45901489]
[-57.08992386 174.54093933]
[-70.00193024 166.90679932]
[-81.14083099 156.86065674]
[-90.06296539 144.80265808]
[-96.41296387 131.21304321]
[-99.93791199 116.63310242]
[-100.49742126 101.64353943]
[-98.06919098 86.84138489]
[-92.74994659 72.81620789]
[-84.75154877 60.12662125]
[-74.39257050 49.27804565]
[-62.08560944 40.70257568]
[-48.32084274 34.74177170]
[-33.64651871 31.63304710]
[-18.64710426 31.50022316]
[-3.92002797 34.34859085]
[9.94814110 40.06469727]
[22.40181732 48.41821671]
[14.93407631 35.40926361]
[7.94768810 29.52469063]
[7.45364523 22.15056610]
[0.18041579 9.03187275]
[-13.27792358 0.71420074]
[-12.68226337 -14.16848946]
[-19.95549202 -27.28718376]
[-27.22872162 -40.40587616]
[-41.20432663 -34.89793015]
[-55.77931595 -31.26134682]
[-70.70429230 -29.55835152]
[-85.72386169 -29.81808472]
[-100.58103180 -32.03610229]
[-115.02156830 -36.17444992]
[-128.79837036 -42.16231918]
[-141.67572021 -49.89724350]
[-153.43324280 -59.24687195]
[-163.86976624 -70.05122375]
[-172.80670166 -82.12541199]
[-180.09114075 -95.26284027]
[-185.59841919 -109.23870850]
[-189.23431396 -123.81387329]
[-190.93659973 -138.73892212]
[-190.67614746 -153.75848389]
[-188.45742798 -168.61553955]
[-184.31838989 -183.05589294]
[-178.32986450 -196.83241272]
[-170.59432983 -209.70938110]
[-161.24414062 -221.46646118]
[-150.43930054 -231.90248108]
[-138.36466980 -240.83883667]
[-125.22689819 -248.12265015]
[-111.25077057 -253.62927246]
[-96.67543793 -257.26446533]
[-81.75030518 -258.96603394]
[-66.73075867 -258.70486450]
[-51.87379837 -256.48544312]
[-37.43365860 -252.34571838]
[-23.65741920 -246.35653687]
[-10.78081322 -238.62039185]
[0.97582418 -229.26963806]
[11.41132069 -218.46429443]
[20.34711266 -206.38925171]
[27.63029671 -193.25112915]
[33.13624573 -179.27474976]
[36.77074814 -164.69923401]
[38.47161484 -149.77401733]
[38.20973587 -134.75448608]
[35.98959732 -119.89763641]
[31.84918594 -105.45768738]
[25.85935211 -91.68173218]
[18.12258720 -78.80549622]
[8.77127838 -67.04930878]
[-2.03456092 -56.61432266]
[-14.11002827 -47.67910767]
[-6.83679914 -34.56041336]
[0.43643054 -21.44171906]
[13.37454033 -14.06238365]
[13.29910946 1.75864315]
[20.57234001 14.87733746]
[27.94302940 27.94152260]
[35.41077042 40.95047379]
[45.49190903 52.05770874]
[57.71839523 60.74753189]
[69.94487762 69.43735504]
[82.17136383 78.12718201]
[94.39785004 86.81700897]
[108.29817200 88.32456970]
[114.29196930 100.95650482]
[130.02287292 102.64457703]
[135.91447449 116.32443237]
[148.14094543 125.01425171]
[160.36743164 133.70408630]
[175.75349426 131.27360535]
[188.02909851 140.26048279]
[190.25135803 154.94371033]
[202.47784424 163.63354492]
[214.70433044 172.32336426]
[226.93081665 181.01318359]
[242.66171265 182.70126343]
[248.55331421 196.38110352]
[260.77981567 205.07093811]
[270.39559937 193.54858398]
[280.87539673 182.80603027]
[292.15615845 172.90791321]
[304.17001343 163.91371155]
[316.84472656 155.87756348]
[330.10409546 148.84777832]
[343.86831665 142.86663818]
[358.05465698 137.97010803]
[372.57778931 134.18765259]
[387.35037231 131.54200745]
[402.28353882 130.04908752]
[417.28750610 129.71786499]
[432.27200317 130.55035400]
[447.14691162 132.54151917]
[461.82281494 135.67939758]
[476.21142578 139.94512939]
[490.22619629 145.31303406]
[503.78286743 151.75085449]
[516.79986572 159.21984863]
[529.19891357 167.67510986]
[540.90545654 177.06579590]
[551.84912109 187.33540344]
[561.96405029 198.42219543]
[571.18939209 210.25949097]
[579.46966553 222.77607727]
[586.75512695 235.89668274]
[593.00189209 249.54240417]
[598.17248535 263.63119507]
[602.23571777 278.07827759]
[605.16717529 292.79681396]
[606.94921875 307.69824219]
[607.57122803 322.69293213]
[607.02929688 337.69076538]
[605.32678223 352.60150146]
[602.47393799 367.33544922]
[598.48791504 381.80401611]
[593.39263916 395.92019653]
[587.21875000 409.59909058]
[580.00347900 422.75842285]
[571.79010010 435.31903076]
[562.62811279 447.20538330]
[552.57250977 458.34600830]
[541.68383789 468.67388916]
[530.02758789 478.12695312]
[517.67382812 486.64828491]
[504.69689941 494.18667603]
[491.17480469 500.69674683]
[477.18887329 506.13940430]
[462.82324219 510.48187256]
[448.16430664 513.69805908]
[433.30023193 515.76861572]
[418.32037354 516.68109131]
[403.31488037 516.42999268]
[388.37396240 515.01678467]
[373.58746338 512.45001221]
[359.04434204 508.74514771]
[344.83206177 503.92443848]
[331.03610229 498.01687622]
[317.73941040 491.05795288]
[305.02197266 483.08956909]
[292.96026611 474.15966797]
[281.62683105 464.32189941]
[271.08984375 453.63543701]
[261.41265869 442.16458130]
[252.65348816 429.97830200]
[244.86500549 417.14990234]
[238.09405518 403.75653076]
[232.38134766 389.87872314]
[227.76126099 375.59997559]
[224.26156616 361.00613403]
[221.90332031 346.18496704]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 139]
[9 138]
[11 136]
[12 135]
[13 134]
[14 133]
[17 130]
[18 129]
[19 128]
[21 126]
[23 124]
[24 123]
[25 122]
[26 121]
[27 120]
[57 119]
[58 118]
[60 117]
[61 116]
[63 114]
[64 113]
[65 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
