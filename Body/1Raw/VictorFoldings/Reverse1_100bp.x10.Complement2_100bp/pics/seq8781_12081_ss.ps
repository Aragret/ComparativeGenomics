%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[102.32254028 592.42395020]
[92.68675232 580.91802979]
[83.98342133 568.69158936]
[76.26619720 555.81994629]
[69.58266449 542.38250732]
[63.97402954 528.46215820]
[59.47487640 514.14459229]
[56.11293793 499.51821899]
[53.90894699 484.67312622]
[52.87648773 469.70086670]
[53.02192688 454.69378662]
[54.34437180 439.74435425]
[56.83566284 424.94479370]
[60.48044586 410.38629150]
[65.25624847 396.15866089]
[71.13361359 382.34957886]
[78.07632446 369.04418945]
[86.04156494 356.32455444]
[94.98023224 344.26910400]
[104.83720398 332.95211792]
[115.55171967 322.44338989]
[127.05771637 312.80770874]
[139.28425598 304.10452271]
[152.15594482 296.38742065]
[145.47575378 282.95703125]
[138.79556274 269.52667236]
[132.11537170 256.09628296]
[119.51966858 248.14659119]
[120.30146790 232.34471130]
[107.70576477 224.39501953]
[108.48756409 208.59315491]
[101.80737305 195.16276550]
[101.86618042 210.16265869]
[98.74253845 224.83381653]
[92.57855988 238.50880432]
[83.65467072 250.56550598]
[72.37683868 260.45544434]
[59.25812912 267.72863770]
[44.89536285 272.05426025]
[29.94194412 273.23547363]
[15.07815742 271.21859741]
[0.98020440 266.09533691]
[-11.71055222 258.09878540]
[-22.41676903 247.59275818]
[-30.65138054 235.05516052]
[-36.03977203 221.05639648]
[-38.33680344 206.23332214]
[-37.43797684 191.26028442]
[-33.38418579 176.81843567]
[-26.35984612 163.56480408]
[-16.68451881 152.10234070]
[-4.79836988 142.95251465]
[8.75786304 136.53157043]
[23.36746025 133.13162231]
[38.36578369 132.90733337]
[53.07050705 135.86894226]
[66.81266785 141.88166809]
[78.96708679 150.67201233]
[88.98081970 161.84005737]
[96.40003967 174.88169861]
[95.50722504 159.90829468]
[94.61440277 144.93489075]
[91.07835388 138.44503784]
[93.82144928 129.73222351]
[93.15166473 114.74718475]
[83.76233673 100.84693909]
[91.65460968 86.04530334]
[90.76178741 71.07189941]
[89.86897278 56.09849548]
[88.97615814 41.12509155]
[81.61183929 54.19286728]
[69.35663605 62.84214401]
[54.57683182 65.40287018]
[40.12617493 61.38062286]
[28.79486084 51.55202484]
[22.77078819 37.81483078]
[23.21711540 22.82147026]
[30.04765892 9.46693325]
[41.94355011 0.32976910]
[56.60787964 -2.82577920]
[71.20919037 0.60957539]
[82.92820740 9.97251987]
[89.50244904 23.45645714]
[91.28491974 8.56274033]
[93.06738281 -6.33097649]
[94.84985352 -21.22469330]
[88.80725861 -35.84651566]
[98.00213623 -47.56417847]
[99.78459930 -62.45789337]
[92.14687347 -79.21338654]
[103.20519257 -92.83984375]
[96.94557953 -107.37008667]
[105.96497345 -119.22334290]
[107.52549744 -134.14195251]
[109.08602142 -149.06054688]
[110.64654541 -163.97915649]
[112.20706940 -178.89776611]
[98.06557465 -184.13883972]
[85.67223358 -192.73280334]
[75.80610657 -204.13938904]
[69.08737946 -217.64158630]
[65.93840790 -232.39065552]
[66.55712128 -247.45942688]
[70.90464783 -261.90069580]
[78.70767975 -274.80664062]
[89.47572327 -285.36599731]
[102.53189087 -292.91497803]
[117.05545044 -296.97909546]
[132.13345337 -297.30282593]
[146.81806946 -293.86584473]
[160.18621826 -286.88421631]
[171.39756775 -276.79675293]
[179.74736023 -264.23764038]
[184.71072388 -249.99629211]
[185.97564697 -234.96795654]
[183.46263123 -220.09732056]
[177.32963562 -206.31918335]
[167.96220398 -194.49963379]
[155.94914246 -185.38165283]
[142.04563904 -179.53842163]
[127.12567139 -177.33723450]
[125.56514740 -162.41864014]
[124.00462341 -147.50003052]
[122.44410706 -132.58142090]
[120.88358307 -117.66281891]
[127.25481415 -104.19966125]
[118.12380219 -91.27932739]
[125.49492645 -81.68801880]
[124.31692505 -69.24631500]
[114.67831421 -60.67543030]
[112.89585114 -45.78171158]
[119.06593323 -32.22518921]
[109.74356842 -19.44222832]
[107.96110535 -4.54851055]
[106.17863464 10.34520626]
[104.39617157 25.23892403]
[103.94956207 40.23227310]
[104.84237671 55.20568085]
[105.73519897 70.17908478]
[106.62801361 85.15248871]
[114.85726929 93.39389038]
[115.46391296 105.02458954]
[108.13670349 114.07740021]
[108.80648804 129.06243896]
[109.58781433 144.04206848]
[110.48062897 159.01547241]
[111.37344360 173.98889160]
[115.23774719 188.48257446]
[121.91794586 201.91294861]
[134.99145508 210.82327271]
[133.73184204 225.66452026]
[146.80535889 234.57484436]
[145.54574585 249.41609192]
[152.22593689 262.84646606]
[158.90612793 276.27685547]
[165.58631897 289.70721436]
[179.50654602 284.09817505]
[193.82394409 279.59857178]
[208.45024109 276.23617554]
[223.29524231 274.03173828]
[238.26745605 272.99880981]
[253.27456665 273.14379883]
[268.22402954 274.46578979]
[283.02368164 276.95663452]
[297.58227539 280.60095215]
[311.81008911 285.37631226]
[325.61932373 291.25326538]
[338.92492676 298.19558716]
[351.64477539 306.16043091]
[363.70053101 315.09872437]
[375.01782227 324.95535278]
[385.52688599 335.66955566]
[395.16290283 347.17523193]
[403.86648560 359.40151978]
[411.58395386 372.27297974]
[418.26776123 385.71026611]
[423.87667847 399.63055420]
[428.37612915 413.94799805]
[431.73837280 428.57431030]
[433.94265747 443.41934204]
[434.97543335 458.39157104]
[434.83029175 473.39868164]
[433.50814819 488.34811401]
[431.01718140 503.14776611]
[427.37268066 517.70629883]
[422.59716797 531.93408203]
[416.72009277 545.74322510]
[409.77764893 559.04876709]
[401.81268311 571.76855469]
[392.87426758 583.82421875]
[383.01751709 595.14141846]
[372.30322266 605.65032959]
[360.79739380 615.28625488]
[348.57104492 623.98968506]
[335.69952393 631.70709229]
[322.26214600 638.39074707]
[308.34182739 643.99951172]
[294.02432251 648.49877930]
[279.39797974 651.86090088]
[264.55291748 654.06506348]
[249.58067322 655.09765625]
[234.57357788 654.95239258]
[219.62413025 653.63006592]
[204.82453918 651.13891602]
[190.26600647 647.49432373]
[176.03831482 642.71862793]
[162.22917175 636.84143066]
[148.92373657 629.89886475]
[136.20402527 621.93371582]
[124.14846039 612.99517822]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 156]
[25 155]
[26 154]
[27 153]
[29 151]
[31 149]
[32 148]
[60 147]
[61 146]
[62 145]
[64 144]
[65 143]
[67 140]
[68 139]
[69 138]
[70 137]
[83 136]
[84 135]
[85 134]
[86 133]
[88 131]
[89 130]
[91 127]
[93 125]
[94 124]
[95 123]
[96 122]
[97 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
