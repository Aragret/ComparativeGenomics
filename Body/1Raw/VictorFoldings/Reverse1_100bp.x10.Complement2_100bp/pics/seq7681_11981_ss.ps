%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[86.52860260 440.81524658]
[89.91320801 426.08312988]
[97.49125671 413.00396729]
[108.58892059 402.74075317]
[122.21939087 396.20611572]
[119.99427795 381.37207031]
[110.45460510 369.93334961]
[116.05916595 355.13812256]
[113.83404541 340.30407715]
[111.60893250 325.47003174]
[109.05310059 310.68936157]
[106.16782379 295.96948242]
[103.28255463 281.24960327]
[100.39727783 266.52969360]
[94.04284668 280.11724854]
[81.80284882 288.78802490]
[66.87678528 290.27551270]
[53.16629791 284.19088745]
[44.25527191 272.12466431]
[42.47303391 257.23092651]
[48.28544998 243.40284729]
[60.17317200 234.25506592]
[75.02877808 232.17877197]
[88.96904755 237.71672058]
[98.34967041 249.42048645]
[97.67988586 234.43545532]
[97.01010132 219.45040894]
[88.71221161 207.08132935]
[95.82558441 192.94943237]
[95.15579987 177.96438599]
[94.48601532 162.97935486]
[91.04698181 156.43757629]
[93.91949463 147.76655579]
[93.47288513 132.77320862]
[93.02628326 117.77986145]
[82.55238342 107.76768494]
[82.12097931 93.28458405]
[91.98036957 82.66674042]
[91.53376007 67.67339325]
[91.08715820 52.68004227]
[82.94240570 39.11635590]
[90.29733276 26.16436005]
[89.85073090 11.17101002]
[89.40412140 -3.82234001]
[88.84591675 -18.81194878]
[88.17612457 -33.79698944]
[87.50634003 -48.78202820]
[83.99686432 -57.21537781]
[86.93981934 -63.99481583]
[86.49321747 -78.98816681]
[86.04660797 -93.98151398]
[76.00785065 -109.41864014]
[84.92247009 -124.53474426]
[84.25267792 -139.51979065]
[83.58289337 -154.50482178]
[75.23710632 -167.94573975]
[82.39838409 -181.00581360]
[81.72859955 -195.99084473]
[81.05881500 -210.97589111]
[80.38903046 -225.96092224]
[79.71924591 -240.94596863]
[79.04946136 -255.93099976]
[78.37966919 -270.91604614]
[63.37964630 -271.38143921]
[48.45777512 -272.97991943]
[33.69953537 -275.70236206]
[19.18945885 -279.53317261]
[5.01066017 -284.45040894]
[-8.75564575 -290.42587280]
[-22.03060532 -297.42535400]
[-34.73818207 -305.40875244]
[-46.80558395 -314.33038330]
[-58.16368866 -324.13909912]
[-68.74744415 -334.77871704]
[-78.49621582 -346.18829346]
[-87.35417175 -358.30252075]
[-95.27056885 -371.05194092]
[-102.20006561 -384.36358643]
[-108.10297394 -398.16116333]
[-112.94547272 -412.36563110]
[-116.69982910 -426.89569092]
[-119.34453583 -441.66806030]
[-120.86444855 -456.59814453]
[-121.25085449 -471.60040283]
[-120.50154877 -486.58892822]
[-118.62081146 -501.47787476]
[-115.61943054 -516.18188477]
[-111.51458740 -530.61688232]
[-106.32979584 -544.70001221]
[-100.09476471 -558.35070801]
[-92.84519196 -571.49078369]
[-84.62260437 -584.04492188]
[-75.47411346 -595.94122314]
[-65.45211792 -607.11157227]
[-54.61401367 -617.49200439]
[-43.02188873 -627.02301025]
[-30.74214363 -635.65002441]
[-17.84511375 -643.32360840]
[-4.40467262 -649.99981689]
[9.50219250 -655.64044189]
[23.79582214 -660.21313477]
[38.39434433 -663.69171143]
[53.21414185 -666.05627441]
[68.17031860 -667.29321289]
[83.17721558 -667.39550781]
[98.14887238 -666.36254883]
[112.99951935 -664.20025635]
[127.64411163 -660.92102051]
[141.99874878 -656.54364014]
[155.98121643 -651.09313965]
[169.51142883 -644.60070801]
[182.51187134 -637.10369873]
[194.90808105 -628.64489746]
[206.62905884 -619.27276611]
[217.60766602 -609.04107666]
[227.78100586 -598.00842285]
[237.09083557 -586.23791504]
[245.48379517 -573.79699707]
[252.91181946 -560.75701904]
[259.33236694 -547.19256592]
[264.70867920 -533.18139648]
[269.00991821 -518.80377197]
[272.21145630 -504.14199829]
[274.29501343 -489.28009033]
[275.24856567 -474.30316162]
[275.06671143 -459.29702759]
[273.75048828 -444.34762573]
[271.30740356 -429.54055786]
[267.75146484 -414.96069336]
[263.10305786 -400.69149780]
[257.38882446 -386.81472778]
[250.64143372 -373.40988159]
[242.89956665 -360.55371094]
[234.20758057 -348.31988525]
[224.61526489 -336.77844238]
[214.17753601 -325.99551392]
[202.95419312 -316.03289795]
[191.00953674 -306.94760132]
[178.41198730 -298.79168701]
[165.23367310 -291.61187744]
[151.55010986 -285.44927979]
[137.43966675 -280.33923340]
[122.98316193 -276.31097412]
[108.26340485 -273.38760376]
[93.36470795 -271.58581543]
[94.03450012 -256.60079956]
[94.70428467 -241.61575317]
[95.37406921 -226.63070679]
[96.04385376 -211.64567566]
[96.71363831 -196.66062927]
[97.38342285 -181.67559814]
[105.68130493 -169.30650330]
[98.56793213 -155.17460632]
[99.23771667 -140.18957520]
[99.90750885 -125.20452881]
[108.61986542 -116.81278229]
[109.30051422 -104.33398438]
[101.03995514 -94.42812347]
[101.48656464 -79.43476868]
[101.93317413 -64.44142151]
[102.49137878 -49.45181274]
[103.16116333 -34.46677399]
[103.83095551 -19.48173523]
[107.26998901 -12.93995953]
[104.39747620 -4.26894569]
[104.84407806 10.72440434]
[105.29068756 25.71775436]
[113.40349579 38.20901489]
[106.08050537 52.23343658]
[106.52711487 67.22679138]
[106.97371674 82.22013855]
[117.44761658 92.23231506]
[117.87902069 106.71541595]
[108.01963043 117.33325958]
[108.46623993 132.32659912]
[108.91284180 147.31996155]
[109.47105408 162.30957031]
[110.14083862 177.29460144]
[110.81062317 192.27964783]
[119.15641785 205.72056580]
[111.99514008 218.78062439]
[112.66492462 233.76567078]
[113.33470917 248.75070190]
[115.11717224 263.64440918]
[118.00244904 278.36431885]
[120.88771820 293.08419800]
[123.77298737 307.80410767]
[127.20505524 311.73703003]
[128.64166260 316.15173340]
[128.23345947 320.20739746]
[126.44297791 323.24490356]
[128.66809082 338.07894897]
[130.89320374 352.91299438]
[140.59204102 365.41271973]
[134.82832336 379.14694214]
[137.05343628 393.98098755]
[152.00129700 396.22885132]
[165.62176514 402.78433228]
[176.70373535 413.06448364]
[184.26179504 426.15521240]
[187.62388611 440.89248657]
[186.49104309 455.96591187]
[180.96401978 470.03515625]
[171.53427124 481.84918213]
[159.04026794 490.35748291]
[144.59298706 494.80355835]
[129.47706604 494.79199219]
[115.03658295 490.32388306]
[102.55560303 481.79647827]
[93.14391327 469.96804810]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 196]
[6 195]
[8 193]
[9 192]
[10 191]
[11 187]
[12 186]
[13 185]
[14 184]
[25 183]
[26 182]
[27 181]
[29 179]
[30 178]
[31 177]
[33 176]
[34 175]
[35 174]
[38 171]
[39 170]
[40 169]
[42 167]
[43 166]
[44 165]
[45 163]
[46 162]
[47 161]
[49 160]
[50 159]
[51 158]
[53 155]
[54 154]
[55 153]
[57 151]
[58 150]
[59 149]
[60 148]
[61 147]
[62 146]
[63 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
