%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCCCCCAAACCUACUCUUACCGACAAUGAUGCUCCCGAUACACCGACUAACUUCUCAUACGUUACUCGCUAAAAUCCAGACAAACAGCAUCCGUCUAxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[164.79240417 562.85046387]
[164.15469360 547.50482178]
[171.28945923 533.90368652]
[184.27748108 525.70568848]
[183.60769653 510.72067261]
[182.93791199 495.73562622]
[182.26812744 480.75057983]
[181.59834290 465.76556396]
[180.92855835 450.78051758]
[180.25877380 435.79547119]
[179.58898926 420.81042480]
[177.58497620 405.94491577]
[174.26271057 391.31744385]
[170.94046021 376.68997192]
[167.61819458 362.06253052]
[153.95983887 359.62991333]
[142.22323608 352.15167236]
[134.19810486 340.72903442]
[131.12309265 327.06759644]
[133.49467468 313.22268677]
[140.98733521 301.29019165]
[152.49778748 293.08923340]
[149.39367676 278.41394043]
[146.28956604 263.73861694]
[141.82992554 257.84512329]
[143.25021362 248.82177734]
[140.36492920 234.10188293]
[137.47966003 219.38200378]
[134.59439087 204.66210938]
[130.19338989 190.32226562]
[124.32443237 176.51808167]
[112.22423553 167.83277893]
[113.94519806 152.10545349]
[108.07623291 138.30126953]
[102.20727539 124.49709320]
[96.33831024 110.69291687]
[91.66823578 124.94740295]
[79.57940674 133.82772827]
[64.58065796 134.02175903]
[52.26615906 125.45712280]
[47.22890854 111.32820892]
[51.34767532 96.90476227]
[63.08626175 87.56637573]
[78.06646729 86.79602051]
[90.70178986 94.88193512]
[86.51477814 80.47815704]
[82.32776642 66.07437134]
[78.14075470 51.67059326]
[75.52112579 66.44007111]
[69.60970306 80.22612000]
[60.71658707 92.30554199]
[49.30829239 102.04467773]
[35.98327637 108.93264008]
[21.44054413 112.60808563]
[6.44297695 112.87821960]
[-8.22268295 109.72886658]
[-21.78710365 103.32524109]
[-33.53872299 94.00325012]
[-42.86107635 82.25192261]
[-49.26512909 68.68769836]
[-52.41493607 54.02214050]
[-52.14527130 39.02456284]
[-48.47027206 24.48171616]
[-41.58272934 11.15648746]
[-31.84394455 -0.25210980]
[-19.76479912 -9.14560223]
[-5.97893620 -15.05745506]
[8.79046249 -17.67754555]
[23.76862335 -16.86842537]
[38.16982269 -12.67254448]
[51.23860550 -5.31000710]
[62.28940582 4.83296251]
[70.74252319 17.22428322]
[76.15493774 31.21553802]
[77.49317169 16.27535248]
[78.83140564 1.33516824]
[80.16963959 -13.60501671]
[67.27702332 -24.55383110]
[63.48846054 -40.86787796]
[70.10406494 -56.07299423]
[84.33496857 -64.25582886]
[85.45062256 -79.21428680]
[77.64062500 -89.47911835]
[78.87779999 -101.91507721]
[87.95618439 -109.90942383]
[89.29441833 -124.84960938]
[82.81916046 -139.28504944]
[91.66107941 -151.27127075]
[92.99931335 -166.21145630]
[94.33754730 -181.15164185]
[95.67578125 -196.09182739]
[97.01401520 -211.03201294]
[94.66270447 -219.85862732]
[98.48501587 -226.18411255]
[100.04553986 -241.10272217]
[101.60606384 -256.02133179]
[102.83303833 -270.97106934]
[103.72585297 -285.94445801]
[89.63541412 -291.45034790]
[77.93730164 -301.04251099]
[69.77758789 -313.78118896]
[65.95567322 -328.41839600]
[66.84598541 -343.52014160]
[72.36130524 -357.60690308]
[81.96129608 -369.29855347]
[94.70545197 -377.44973755]
[109.34523010 -381.26184082]
[124.44636536 -380.36141968]
[138.52941895 -374.83666992]
[150.21466064 -365.22885132]
[158.35729980 -352.47921753]
[162.15959167 -337.83691406]
[161.24903870 -322.73635864]
[155.71484375 -308.65701294]
[146.09919739 -296.97821045]
[133.34413147 -288.84411621]
[118.69925690 -285.05163574]
[117.80644226 -270.07824707]
[119.86078644 -267.21258545]
[120.62918091 -263.20950317]
[119.59216309 -258.68426514]
[116.52466583 -254.46080017]
[114.96414185 -239.54219055]
[113.40361786 -224.62359619]
[111.95420074 -209.69378662]
[110.61596680 -194.75360107]
[109.27773285 -179.81341553]
[107.93949890 -164.87322998]
[106.60126495 -149.93304443]
[113.17224121 -136.56623840]
[104.23460388 -123.51137543]
[102.89636993 -108.57118988]
[111.12712097 -93.07211304]
[100.40907288 -78.09863281]
[99.29342651 -63.14018250]
[110.23755646 -55.49373627]
[116.02066040 -43.34055328]
[115.03561401 -29.80913544]
[107.43303680 -18.44166946]
[95.10982513 -12.26678276]
[93.77159119 2.67340231]
[92.43335724 17.61358833]
[91.09512329 32.55377197]
[92.54454041 47.48358154]
[96.73155212 61.88736343]
[100.91856384 76.29114532]
[105.10557556 90.69492340]
[110.14248657 104.82395935]
[116.01145172 118.62813568]
[121.88040924 132.43231201]
[127.74937439 146.23648071]
[140.26934814 155.90916443]
[138.12860107 170.64912415]
[143.99757385 184.45329285]
[145.95405579 169.58143616]
[153.38616943 156.55210876]
[165.19140625 147.29811096]
[179.61851501 143.19223022]
[194.52734375 144.84355164]
[207.70623779 152.00712585]
[217.20021057 163.62025452]
[221.60084534 177.96020508]
[220.25537109 192.89973450]
[213.36337280 206.22265625]
[201.94721985 215.95259094]
[187.70045471 220.64616394]
[172.73648071 219.60710144]
[159.27513123 212.98956299]
[149.31428528 201.77684021]
[152.19955444 216.49671936]
[155.08482361 231.21661377]
[157.97009277 245.93650818]
[160.96487427 260.63452148]
[164.06898499 275.30981445]
[167.17309570 289.98510742]
[183.00663757 293.73114014]
[195.57647705 303.97042847]
[202.39816284 318.61367798]
[202.15196228 334.70785522]
[194.93794250 349.03167725]
[182.24565125 358.74026489]
[185.56791687 373.36773682]
[188.89018250 387.99517822]
[192.21243286 402.62265015]
[197.34751892 388.52899170]
[208.02847290 377.99728394]
[222.19297791 373.06097412]
[237.10607910 374.67324829]
[249.88829041 382.52276611]
[258.07159424 395.09393311]
[260.07586670 409.95941162]
[255.51417542 424.24896240]
[245.26727295 435.20346069]
[231.31369019 440.70776367]
[216.34764099 439.69909668]
[203.25883484 432.37222290]
[194.57403564 420.14065552]
[195.24382019 435.12570190]
[195.91360474 450.11071777]
[196.58338928 465.09576416]
[197.25317383 480.08081055]
[197.92295837 495.06585693]
[198.59274292 510.05087280]
[199.26252747 525.03594971]
[212.93014526 532.04248047]
[221.24989319 544.95281982]
[221.98379517 560.29418945]
[214.93443298 573.93975830]
[201.99806213 582.21899414]
[186.65447998 582.90484619]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 204]
[5 203]
[6 202]
[7 201]
[8 200]
[9 199]
[10 198]
[11 197]
[12 184]
[13 183]
[14 182]
[15 181]
[22 175]
[23 174]
[24 173]
[26 172]
[27 171]
[28 170]
[29 169]
[30 154]
[31 153]
[33 151]
[34 150]
[35 149]
[36 148]
[45 147]
[46 146]
[47 145]
[48 144]
[74 143]
[75 142]
[76 141]
[77 140]
[81 135]
[82 134]
[85 132]
[86 131]
[88 129]
[89 128]
[90 127]
[91 126]
[92 125]
[94 124]
[95 123]
[96 122]
[97 118]
[98 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
