%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxGAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAG\
) } def
/len { sequence length } bind def

/coor [
[71.90731812 681.86621094]
[62.33647537 693.53076172]
[50.07218552 702.31994629]
[35.95064163 707.63446045]
[20.93467522 709.11206055]
[6.04810190 706.65191650]
[-7.69408751 700.42175293]
[-19.35492706 690.84643555]
[-28.13936424 678.57873535]
[-33.44845963 664.45513916]
[-34.92022705 649.43859863]
[-32.45432663 634.55297852]
[-26.21887970 620.81317139]
[-16.63903427 609.15606689]
[-4.36795807 600.37634277]
[9.75768566 595.07269287]
[24.77478790 593.60675049]
[27.22051430 578.80749512]
[29.66624260 564.00817871]
[32.11196899 549.20892334]
[34.55769730 534.40966797]
[37.00342560 519.61041260]
[39.44915009 504.81112671]
[33.89055252 490.99261475]
[43.77441025 478.63867188]
[46.22013855 463.83938599]
[48.66586685 449.04013062]
[51.11159515 434.24084473]
[53.22621918 419.39065552]
[55.00868225 404.49691772]
[48.83860016 390.94039917]
[58.16096878 378.15744019]
[48.78183746 366.64364624]
[50.37734222 351.51391602]
[62.51766205 341.75427246]
[53.13853073 330.24047852]
[54.73403931 315.11074829]
[66.87435913 305.35113525]
[68.65682220 290.45739746]
[62.48674393 276.90087891]
[71.80911255 264.11791992]
[73.59157562 249.22419739]
[64.28869629 240.30871582]
[61.78199005 227.47132874]
[67.20652771 215.35585022]
[78.78644562 208.47689819]
[80.79045868 193.61135864]
[82.79447937 178.74583435]
[84.79849243 163.88031006]
[86.69178009 149.00027466]
[88.47425079 134.10655212]
[90.25671387 119.21283722]
[92.03917694 104.31912231]
[90.10931396 100.98026276]
[89.66053772 96.80695343]
[91.03252411 92.47975159]
[94.24825287 88.80566406]
[96.69397736 74.00639343]
[99.13970184 59.20712280]
[101.58543396 44.40785217]
[104.03115845 29.60857964]
[106.47689056 14.80930901]
[108.81237793 -0.00775880]
[111.03749084 -14.84180260]
[113.26261139 -29.67584610]
[107.65804291 -44.47109604]
[117.19772339 -55.90979767]
[110.06224823 -72.88526917]
[121.52138519 -86.17643738]
[123.52539825 -101.04196167]
[125.08592224 -115.96057129]
[126.20156860 -130.91902161]
[123.71910095 -139.70965576]
[127.44681549 -146.09133911]
[128.78504944 -161.03152466]
[122.30979156 -175.46694946]
[131.15170288 -187.45318604]
[132.48994446 -202.39337158]
[133.82817078 -217.33355713]
[121.42474365 -224.10862732]
[112.56723022 -235.06620789]
[108.56725311 -248.53118896]
[109.99707031 -262.46124268]
[116.60797882 -274.75656128]
[127.37277222 -283.57650757]
[140.64527893 -287.61492920]
[142.20579529 -302.53350830]
[143.76632690 -317.45211792]
[145.32684326 -332.37072754]
[146.88737488 -347.28933716]
[139.38645935 -357.78216553]
[140.99336243 -370.17578125]
[150.30572510 -377.89627075]
[152.08819580 -392.78997803]
[153.87066650 -407.68371582]
[155.65312195 -422.57742310]
[157.43559265 -437.47113037]
[159.21806335 -452.36486816]
[145.20706177 -457.96435547]
[133.12330627 -467.00012207]
[123.79069519 -478.85614014]
[117.84553528 -492.72399902]
[115.69317627 -507.65817261]
[117.48036957 -522.64044189]
[123.08526611 -536.64929199]
[132.12571716 -548.72955322]
[143.98532104 -558.05755615]
[157.85546875 -563.99737549]
[172.79048157 -566.14398193]
[187.77204895 -564.35101318]
[201.77873230 -558.74066162]
[213.85549927 -549.69555664]
[223.17895508 -537.83239746]
[229.11340332 -523.95989990]
[231.25422668 -509.02407837]
[229.45545959 -494.04321289]
[223.83975220 -480.03869629]
[214.78997803 -467.96542358]
[202.92317200 -458.64654541]
[189.04844666 -452.71743774]
[174.11178589 -450.58239746]
[172.32931519 -435.68869019]
[170.54684448 -420.79495239]
[168.76437378 -405.90124512]
[166.98191833 -391.00753784]
[165.19944763 -376.11380005]
[172.96508789 -360.37652588]
[161.80596924 -345.72882080]
[160.24545288 -330.81021118]
[158.68493652 -315.89160156]
[157.12440491 -300.97299194]
[155.56388855 -286.05438232]
[169.31991577 -277.92282104]
[178.18493652 -264.55776978]
[180.34187317 -248.60687256]
[175.30860901 -233.25674438]
[164.04457092 -221.59632874]
[148.76835632 -215.99533081]
[147.43013000 -201.05514526]
[146.09188843 -186.11495972]
[152.66287231 -172.74815369]
[143.72523499 -159.69329834]
[142.38699341 -144.75311279]
[141.16001892 -129.80337524]
[140.04437256 -114.84491730]
[141.76933289 -112.63524628]
[142.72294617 -109.60915375]
[142.58987427 -106.05701447]
[141.16558838 -102.37789154]
[138.39093018 -99.03794861]
[136.38691711 -84.17242432]
[143.46919250 -74.36590576]
[141.92127991 -61.96479034]
[132.03176880 -53.68468094]
[137.79548645 -39.95045853]
[128.09664917 -27.45072937]
[125.87153625 -12.61668491]
[123.64641571 2.21735835]
[125.76291656 9.29847717]
[121.27616119 17.25503731]
[118.83042908 32.05430603]
[116.38470459 46.85357666]
[113.93897247 61.65284729]
[111.49324799 76.45211792]
[109.04752350 91.25138855]
[106.93289948 106.10158539]
[105.15042877 120.99530792]
[103.36796570 135.88902283]
[101.58550262 150.78274536]
[103.67296600 159.67544556]
[99.66401672 165.88432312]
[97.66000366 180.74984741]
[95.65599060 195.61538696]
[93.65197754 210.48091125]
[104.51115417 224.19577026]
[102.13822937 241.18647766]
[88.48529053 251.00666809]
[86.70282745 265.90039062]
[92.74541473 280.52221680]
[83.55054474 292.23986816]
[81.76807404 307.13357544]
[91.26247406 319.48245239]
[89.24263763 334.56140137]
[77.41138458 343.53674316]
[86.90577698 355.88558960]
[84.88594055 370.96456909]
[73.05468750 379.93991089]
[79.09727478 394.56173706]
[69.90239716 406.27938843]
[68.11993408 421.17312622]
[70.17581940 425.97106934]
[70.18481445 430.61361694]
[68.54888153 434.34707642]
[65.91086578 436.68658447]
[63.46513748 451.48583984]
[61.01940918 466.28512573]
[58.57368088 481.08438110]
[63.95734406 495.96142578]
[54.24842072 507.25683594]
[51.80269623 522.05609131]
[49.35696793 536.85540771]
[46.91123962 551.65466309]
[44.46551132 566.45391846]
[42.01978683 581.25317383]
[39.57405853 596.05249023]
[53.32105255 602.27197266]
[64.98928833 611.83831787]
[73.78319550 624.09924316]
[79.10319519 638.21868896]
[80.58655548 653.23413086]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 205]
[18 204]
[19 203]
[20 202]
[21 201]
[22 200]
[23 199]
[25 197]
[26 196]
[27 195]
[28 194]
[29 190]
[30 189]
[32 187]
[35 184]
[38 181]
[39 180]
[41 178]
[42 177]
[46 174]
[47 173]
[48 172]
[49 171]
[50 169]
[51 168]
[52 167]
[53 166]
[57 165]
[58 164]
[59 163]
[60 162]
[61 161]
[62 160]
[63 158]
[64 157]
[65 156]
[67 154]
[69 151]
[70 150]
[71 145]
[72 144]
[74 143]
[75 142]
[77 140]
[78 139]
[79 138]
[86 132]
[87 131]
[88 130]
[89 129]
[90 128]
[93 126]
[94 125]
[95 124]
[96 123]
[97 122]
[98 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
