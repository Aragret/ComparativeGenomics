%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[1.85807240 287.37475586]
[5.50287151 301.93862915]
[7.65554667 316.79653931]
[8.29400730 331.79595947]
[7.41170263 346.78305054]
[5.01768541 361.60397339]
[1.13652349 376.10665894]
[-4.19195700 390.14224243]
[-10.91307640 403.56677246]
[-18.95786667 416.24243164]
[-28.24377251 428.03915405]
[-38.67550659 438.83590698]
[-50.14602280 448.52191162]
[-62.53761292 456.99771118]
[-75.72312164 464.17639160]
[-89.56724548 469.98425293]
[-103.92790985 474.36172485]
[-118.65776825 477.26385498]
[-133.60565186 478.66088867]
[-148.61817932 478.53848267]
[-163.54130554 476.89788818]
[-178.22187805 473.75595093]
[-192.50924683 469.14489746]
[-206.25682068 463.11206055]
[-219.32351685 455.71932983]
[-231.57525635 447.04257202]
[-242.88630676 437.17083740]
[-253.14059448 426.20541382]
[-262.23291016 414.25881958]
[-270.06991577 401.45364380]
[-276.57122803 387.92132568]
[-281.67013550 373.80068970]
[-285.31430054 359.23666382]
[-287.46630859 344.37866211]
[-288.10412598 329.37921143]
[-287.22116089 314.39215088]
[-284.82647705 299.57135010]
[-280.94470215 285.06884766]
[-275.61560059 271.03347778]
[-268.89389038 257.60925293]
[-260.84854126 244.93394470]
[-251.56210327 233.13761902]
[-241.12989807 222.34132385]
[-229.65895081 212.65583801]
[-217.26698303 204.18057251]
[-204.08116150 197.00247192]
[-190.23678589 191.19522095]
[-175.87593079 186.81838989]
[-161.14595032 183.91690063]
[-146.19799805 182.52052307]
[-131.18547058 182.64358521]
[-116.26242828 184.28483582]
[-101.58199310 187.42742920]
[-87.29481506 192.03910828]
[-73.54750824 198.07257080]
[-60.48114014 205.46586609]
[-48.22978973 214.14315796]
[-36.91917801 224.01539612]
[-25.96326828 213.77000427]
[-15.00735855 203.52461243]
[-4.05144882 193.27922058]
[6.82788563 182.95256042]
[17.63004112 172.54518127]
[28.43219757 162.13781738]
[39.07820892 151.57077026]
[49.56570816 140.84638977]
[60.05320740 130.12200928]
[52.70317459 116.31231689]
[49.97743225 100.90774536]
[52.14247894 85.41442871]
[58.98663330 71.34716034]
[69.84073639 60.08133316]
[83.64355469 52.71841812]
[99.04557800 49.97830200]
[114.54090881 52.12889099]
[128.61456299 58.95991898]
[138.94122314 48.08058167]
[149.26789856 37.20124817]
[159.59455872 26.32191467]
[169.50921631 15.06581879]
[178.99810791 3.44855523]
[185.77810669 -9.93171787]
[189.53440857 -24.45377731]
[193.29071045 -38.97583771]
[197.04701233 -53.49789429]
[200.80329895 -68.01995850]
[204.55960083 -82.54201508]
[208.31590271 -97.06407166]
[212.07220459 -111.58613586]
[208.03727722 -126.88417053]
[218.71520996 -137.26834106]
[222.47151184 -151.79040527]
[226.22781372 -166.31245422]
[229.98411560 -180.83451843]
[233.74041748 -195.35658264]
[219.97758484 -201.40475464]
[207.36323547 -209.58245850]
[196.22413635 -219.67782593]
[186.84880066 -231.42939758]
[179.48008728 -244.53276062]
[174.30883789 -258.64849854]
[171.46902466 -273.41101074]
[171.03419495 -288.43789673]
[173.01560974 -303.33990479]
[177.36195374 -317.73107910]
[183.96064758 -331.23861694]
[192.64074707 -343.51263428]
[203.17744446 -354.23526001]
[215.29780579 -363.12869263]
[228.68786621 -369.96258545]
[243.00082397 -374.55993652]
[257.86590576 -376.80166626]
[272.89810181 -376.62969971]
[287.70800781 -374.04849243]
[301.91204834 -369.12490845]
[315.14227295 -361.98648071]
[327.05599976 -352.81808472]
[337.34463501 -341.85723877]
[345.74166870 -329.38784790]
[352.02963257 -315.73287964]
[356.04559326 -301.24606323]
[357.68557739 -286.30261230]
[356.90710449 -271.28961182]
[353.73031616 -256.59594727]
[348.23748779 -242.60218811]
[340.57095337 -229.67082214]
[330.92922974 -218.13681030]
[319.56210327 -208.29890442]
[306.76397705 -200.41192627]
[292.86636353 -194.68017578]
[278.22927856 -191.25212097]
[263.23181152 -190.21653748]
[248.26246643 -191.60028076]
[244.50617981 -177.07821655]
[240.74987793 -162.55615234]
[236.99357605 -148.03410339]
[233.23727417 -133.51203918]
[237.54087830 -119.25271606]
[226.59426880 -107.82983398]
[222.83796692 -93.30776978]
[219.08166504 -78.78571320]
[215.32536316 -64.26365662]
[211.56906128 -49.74159622]
[207.81275940 -35.21953583]
[204.05645752 -20.69747734]
[200.30015564 -6.17541742]
[210.10023499 -17.53141594]
[221.96017456 -26.71518898]
[235.40762329 -33.36095047]
[249.90696716 -37.20400238]
[264.88070679 -38.09127808]
[279.73242188 -35.98743820]
[293.87060547 -30.97627831]
[306.73214722 -23.25738716]
[317.80471802 -13.13820934]
[326.64736938 -1.02178502]
[332.90786743 12.60929203]
[336.33685303 27.21210098]
[336.79776001 42.20501709]
[334.27224731 56.99087906]
[328.86087036 70.98077393]
[320.77920532 83.61748505]
[310.34909058 94.39770508]
[297.98599243 102.89205170]
[284.18234253 108.76219940]
[269.48788452 111.77435303]
[254.48791504 111.80852509]
[239.77989197 108.86337280]
[225.94961548 103.05618286]
[213.54794312 94.61825562]
[203.06883240 83.88568115]
[194.92964172 71.28593445]
[189.45458984 57.32084274]
[186.86170959 42.54664230]
[187.25430298 27.55177879]
[190.61537170 12.93745327]
[181.12648010 24.55471611]
[196.08494568 25.67007065]
[204.66511536 37.97375870]
[200.54199219 52.39595795]
[186.75500488 58.30516434]
[173.46739197 51.34532547]
[170.47389221 36.64858246]
[160.14723206 47.52791595]
[149.82055664 58.40725327]
[139.49389648 69.28658295]
[146.54623413 81.65526581]
[149.82888794 95.50964355]
[149.07598877 109.72769165]
[144.34852600 123.15791321]
[136.02937317 134.71261597]
[124.79225922 143.45600891]
[111.54727173 148.67999268]
[97.36708832 149.96147156]
[83.40014648 147.19667053]
[70.77758789 140.60951233]
[60.29008865 151.33389282]
[49.80258560 162.05825806]
[47.79568863 168.35778809]
[43.54654694 172.13160706]
[38.83957291 172.93997192]
[28.03741455 183.34733582]
[17.23525810 193.75471497]
[13.22650337 201.96249390]
[6.19394255 204.23513794]
[-4.76196671 214.48052979]
[-15.71787643 224.72592163]
[-26.67378616 234.97131348]
[-17.58095169 246.91749573]
[-9.74336433 259.72232056]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[58 208]
[59 207]
[60 206]
[61 205]
[62 203]
[63 202]
[64 201]
[65 198]
[66 197]
[67 196]
[76 186]
[77 185]
[78 184]
[79 183]
[80 177]
[81 176]
[82 146]
[83 145]
[84 144]
[85 143]
[86 142]
[87 141]
[88 140]
[89 139]
[91 137]
[92 136]
[93 135]
[94 134]
[95 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
