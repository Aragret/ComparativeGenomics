%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[92.90595245 619.74584961]
[82.35707855 609.04846191]
[73.36314392 597.01422119]
[66.09170532 583.86730957]
[60.67822647 569.85278320]
[57.22354889 555.23156738]
[55.79204178 540.27618408]
[56.41036224 525.26513672]
[59.06700134 510.47808838]
[63.71245956 496.19058228]
[70.26020050 482.66870117]
[78.58824158 470.16439819]
[88.54143524 458.91061401]
[99.93435669 449.11700439]
[112.55477142 440.96600342]
[126.16756439 434.60946655]
[140.51913452 430.16580200]
[138.07341003 415.36651611]
[128.42558289 408.06951904]
[126.26689148 395.76004028]
[133.29179382 384.94274902]
[131.06666565 370.10870361]
[128.84155273 355.27465820]
[126.61643219 340.44061279]
[124.39131927 325.60656738]
[122.16619873 310.77252197]
[119.94108582 295.93847656]
[117.71596527 281.10443115]
[108.17629242 269.66574097]
[113.78085327 254.87048340]
[111.55574036 240.03645325]
[109.33061981 225.20240784]
[107.10550690 210.36836243]
[104.88038635 195.53431702]
[102.65527344 180.70027161]
[93.11559296 169.26156616]
[98.72016144 154.46632385]
[96.49504089 139.63227844]
[94.32351685 137.85952759]
[92.72335815 135.11981201]
[92.06639099 131.62641907]
[92.64042664 127.72321320]
[94.60643768 123.85167694]
[93.26820374 108.91149139]
[91.81877899 93.98168182]
[90.25825500 79.06307983]
[88.69773865 64.14447021]
[86.80444336 49.26443863]
[84.57932281 34.43039322]
[82.35420990 19.59634972]
[80.12908936 4.76230669]
[77.90397644 -10.07173729]
[74.58171844 -24.69919777]
[70.18071747 -39.03904343]
[65.77971649 -53.37889099]
[61.37871933 -67.71874237]
[56.97772217 -82.05858612]
[52.57672501 -96.39842987]
[48.17572784 -110.73828125]
[43.24413300 -124.90441895]
[37.78877640 -138.87721252]
[32.33341980 -152.85000610]
[26.87806129 -166.82281494]
[21.42270470 -180.79560852]
[15.96734715 -194.76840210]
[10.51199055 -208.74119568]
[5.05663347 -222.71400452]
[3.77513409 -207.76884460]
[-0.75613582 -193.46961975]
[-8.31608582 -180.51403809]
[-18.53584862 -169.53422546]
[-30.91677856 -161.06588745]
[-44.85478592 -155.52224731]
[-59.66979980 -153.17378235]
[-74.63896942 -154.13505554]
[-89.03190613 -158.35919189]
[-102.14635468 -165.64007568]
[-113.34243011 -175.62245178]
[-122.07384491 -187.81927490]
[-127.91458893 -201.63540649]
[-130.57966614 -216.39675903]
[-129.93904114 -231.38307190]
[-126.02397919 -245.86312866]
[-119.02549744 -259.13043213]
[-109.28507996 -270.53762817]
[-97.27796936 -279.52813721]
[-83.59001923 -285.66329956]
[-68.88910675 -288.64376831]
[-53.89251328 -288.32409668]
[-39.33195877 -284.71987915]
[-25.91788292 -278.00701904]
[-14.30478954 -268.51303101]
[-5.05930758 -256.70111084]
[1.36529839 -243.15390015]
[-6.16568041 -257.06774902]
[1.76025259 -269.67840576]
[1.98358035 -284.67675781]
[2.20690799 -299.67507935]
[2.43023586 -314.67343140]
[-11.40599060 -321.03570557]
[-21.45335960 -332.47991943]
[-25.97110176 -347.02331543]
[-24.17649078 -362.14611816]
[-16.38045502 -375.22824097]
[-3.93370628 -384.00311279]
[11.00728416 -386.95040894]
[25.85389709 -383.55957031]
[38.03386688 -374.41799927]
[45.43694305 -361.10955811]
[46.78049469 -345.94003296]
[41.83174515 -331.53759766]
[31.44809532 -320.39761353]
[17.42857361 -314.45010376]
[17.20524597 -299.45175171]
[16.98191833 -284.45343018]
[16.75859070 -269.45507812]
[24.30554199 -256.61401367]
[16.36363602 -242.93057251]
[19.02943039 -228.16935730]
[24.48478889 -214.19656372]
[29.94014549 -200.22375488]
[35.39550400 -186.25096130]
[40.85086060 -172.27816772]
[46.30621719 -158.30537415]
[51.76157379 -144.33256531]
[57.21693039 -130.35977173]
[65.53862762 -142.83973694]
[80.47058868 -144.26681519]
[91.00552368 -133.58903503]
[89.37747955 -118.67764282]
[76.78657532 -110.52477264]
[62.51557541 -115.13927460]
[66.91657257 -100.79943085]
[71.31756592 -86.45958710]
[75.71856689 -72.11973572]
[80.11956787 -57.77988815]
[84.52056122 -43.44004440]
[88.92156219 -29.10019493]
[93.82793427 -43.27508545]
[105.09945679 -53.17219925]
[119.78977203 -56.20445633]
[134.05886841 -51.57922745]
[144.17684937 -40.50554276]
[147.49888611 -25.87803078]
[143.15661621 -11.52029228]
[132.28509521 -1.18540430]
[117.72610474 2.42511868]
[103.28533936 -1.63250554]
[92.73801422 -12.29685402]
[94.96313477 2.53718925]
[97.18825531 17.37123299]
[99.41336823 32.20527649]
[101.63848877 47.03932190]
[104.24137878 49.41782379]
[105.82154083 53.17523575]
[105.74343109 57.81713104]
[103.61634064 62.58395004]
[105.17686462 77.50255585]
[106.73738861 92.42115784]
[110.64142609 99.47318268]
[108.20838165 107.57325745]
[109.54661560 122.51344299]
[111.32908630 137.40716553]
[113.55419922 152.24119568]
[123.25302887 164.74093628]
[117.48931122 178.47515869]
[119.71443176 193.30920410]
[121.93954468 208.14323425]
[124.16466522 222.97727966]
[126.38978577 237.81132507]
[128.61489868 252.64537048]
[138.31373596 265.14511108]
[132.55001831 278.87933350]
[134.77513123 293.71337891]
[137.00024414 308.54742432]
[139.22535706 323.38146973]
[141.45048523 338.21548462]
[143.67559814 353.04953003]
[145.90071106 367.88357544]
[148.12582397 382.71762085]
[159.92787170 396.85244751]
[152.87268066 412.92077637]
[155.31840515 427.72006226]
[170.33659363 427.31008911]
[185.27070618 428.94897461]
[199.84254456 432.60617065]
[213.78063965 438.21359253]
[226.82534790 445.66674805]
[238.73364258 454.82678223]
[249.28366089 465.52307129]
[258.27890015 477.55633545]
[265.55175781 490.70242310]
[270.96676636 504.71640015]
[274.42300415 519.33721924]
[275.85614014 534.29248047]
[275.23944092 549.30358887]
[272.58441162 564.09088135]
[267.94049072 578.37890625]
[261.39422607 591.90148926]
[253.06753540 604.40667725]
[243.11555481 615.66156006]
[231.72369385 625.45642090]
[219.10415649 633.60876465]
[205.49206543 639.96679688]
[191.14096069 644.41198730]
[176.31823730 646.86163330]
[161.30001831 647.26995850]
[146.36607361 645.62945557]
[131.79463196 641.97070312]
[117.85713959 636.36175537]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 183]
[18 182]
[21 180]
[22 179]
[23 178]
[24 177]
[25 176]
[26 175]
[27 174]
[28 173]
[30 171]
[31 170]
[32 169]
[33 168]
[34 167]
[35 166]
[37 164]
[38 163]
[43 162]
[44 161]
[45 159]
[46 158]
[47 157]
[48 153]
[49 152]
[50 151]
[51 150]
[52 149]
[53 138]
[54 137]
[55 136]
[56 135]
[57 134]
[58 133]
[59 132]
[60 126]
[61 125]
[62 124]
[63 123]
[64 122]
[65 121]
[66 120]
[67 119]
[94 118]
[96 116]
[97 115]
[98 114]
[99 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
