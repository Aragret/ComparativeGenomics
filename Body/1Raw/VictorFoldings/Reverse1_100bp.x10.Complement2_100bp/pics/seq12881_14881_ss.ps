%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAUCAUCACCCCACUCCGAACCUAAUCGCAAAUCUUCCCGAUAAACAACACCCAGAGUACUCAACCUCACAUCCUAUUUAGUACGAUUCCGCUCCUACxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[117.64900208 526.29559326]
[118.34523010 511.27044678]
[121.71331787 496.61111450]
[127.64499664 482.78884888]
[135.94958496 470.24798584]
[146.36013794 459.39163208]
[158.54199219 450.56878662]
[172.10353088 444.06307983]
[168.13143921 429.59857178]
[164.15934753 415.13403320]
[160.18724060 400.66952515]
[147.15547180 393.54852295]
[142.92115784 378.93603516]
[150.47866821 365.31539917]
[146.50656128 350.85086060]
[142.53446960 336.38635254]
[137.73194885 330.76873779]
[138.61262512 321.67684937]
[134.85632324 307.15478516]
[131.10002136 292.63272095]
[128.26380920 290.53793335]
[126.30132294 286.96530151]
[125.89608765 282.34045410]
[127.51572418 277.37820435]
[124.41161346 262.70291138]
[121.30750275 248.02761841]
[118.20339203 233.35231018]
[115.09928131 218.67700195]
[111.12718964 204.21247864]
[106.30119324 190.01002502]
[101.47518921 175.80757141]
[98.82652283 190.57186890]
[91.34781647 203.57452393]
[79.91764832 213.28797913]
[65.87882996 218.57112122]
[50.88062286 218.80328369]
[36.68500900 213.95719910]
[24.95967293 204.60217285]
[17.08209229 191.83723450]
[13.97771931 177.16198730]
[16.01125145 162.30046082]
[22.94379425 148.99859619]
[33.96091461 138.81904602]
[47.76833725 132.95773315]
[62.74397659 132.10321045]
[77.12850952 136.35588074]
[89.23206329 145.21612549]
[97.63335419 157.64450073]
[96.29512024 142.70433044]
[94.95688629 127.76413727]
[93.61865234 112.82395172]
[85.73317719 101.27791595]
[91.44116211 88.51428223]
[90.10292816 73.57409668]
[88.65351105 58.64428711]
[87.09298706 43.72568130]
[85.53246307 28.80707741]
[83.97193909 13.88847351]
[74.84092712 0.96813446]
[81.21216583 -12.49502373]
[79.65164185 -27.41362953]
[78.09111786 -42.33223343]
[76.53059387 -57.25083923]
[74.97006989 -72.16944122]
[73.40954590 -87.08805084]
[70.34205627 -91.31150055]
[69.30503082 -95.83675385]
[70.07343292 -99.83982849]
[72.12776947 -102.70549011]
[71.23495483 -117.67889404]
[70.34214020 -132.65229797]
[69.44932556 -147.62570190]
[61.33655167 -135.00894165]
[48.04785538 -128.05116272]
[33.05686951 -128.57113647]
[20.28220367 -136.43293762]
[13.06312275 -149.58151245]
[13.28667736 -164.57983398]
[20.89443207 -177.50741577]
[33.89773560 -184.98498535]
[48.89756012 -185.05793762]
[61.97298050 -177.70719910]
[69.70587158 -164.85508728]
[71.04410553 -179.79527283]
[72.38233948 -194.73545837]
[59.37353516 -187.26747131]
[45.36853409 -192.63960266]
[40.69130325 -206.89175415]
[48.78972244 -219.51773071]
[63.69393921 -221.21017456]
[74.41654968 -210.72299194]
[76.86227417 -225.52226257]
[79.30800629 -240.32153320]
[73.92433929 -255.19859314]
[83.63326263 -266.49398804]
[86.07898712 -281.29327393]
[88.52471924 -296.09252930]
[90.97044373 -310.89181519]
[77.06687927 -316.70452881]
[64.87895203 -325.56741333]
[55.06393051 -337.00253296]
[48.15113449 -350.39321899]
[44.51335907 -365.01727295]
[44.34678650 -380.08609009]
[47.66039658 -394.78698730]
[54.27549744 -408.32720947]
[63.83533478 -419.97650146]
[75.82437134 -429.10665894]
[89.59603882 -435.22531128]
[104.40766144 -438.00244141]
[119.46046448 -437.28836060]
[133.94265747 -433.12149048]
[147.07325745 -425.72662354]
[158.14411926 -415.50250244]
[166.55822754 -403.00051880]
[171.86180115 -388.89489746]
[173.76884460 -373.94631958]
[172.17651367 -358.96093750]
[167.17065430 -344.74691772]
[159.02125549 -332.07080078]
[148.16778564 -321.61621094]
[135.19557190 -313.94689941]
[120.80417633 -309.47650146]
[105.76971436 -308.44607544]
[103.32398987 -293.64678955]
[100.87825775 -278.84753418]
[98.43253326 -264.04824829]
[103.99113464 -250.22975159]
[94.10727692 -237.87580872]
[91.66154480 -223.07653809]
[89.21582031 -208.27726746]
[87.32252502 -193.39723206]
[85.98429108 -178.45704651]
[84.64605713 -163.51686096]
[84.42272949 -148.51852417]
[85.31554413 -133.54512024]
[86.20835876 -118.57170868]
[87.10118103 -103.59830475]
[88.32815552 -88.64856720]
[89.88867950 -73.72996521]
[91.44919586 -58.81135941]
[93.00971985 -43.89275742]
[94.57024384 -28.97415161]
[96.13076782 -14.05554676]
[105.15016174 -2.20228648]
[98.89054871 12.32795048]
[100.45107269 27.24655533]
[102.01159668 42.16516113]
[103.57211304 57.08376312]
[107.39443207 63.40924454]
[105.04311371 72.23586273]
[106.38134766 87.17604828]
[114.26682281 98.72208405]
[108.55883789 111.48571777]
[109.89707184 126.42590332]
[111.23530579 141.36608887]
[112.57353973 156.30627441]
[115.67765045 170.98158264]
[120.50364685 185.18403625]
[125.32964325 199.38648987]
[131.04698181 185.51882935]
[143.76281738 177.56222534]
[158.73445129 178.48428345]
[170.37783813 187.94111633]
[174.35028076 202.40554810]
[169.17015076 216.48269653]
[156.76951599 224.92214966]
[141.77351379 224.57618713]
[129.77458191 215.57290649]
[132.87869263 230.24819946]
[135.98280334 244.92350769]
[139.08691406 259.59881592]
[142.19102478 274.27410889]
[145.62208557 288.87643433]
[149.37838745 303.39849854]
[153.13468933 317.92056274]
[156.99899292 332.41424561]
[160.97108459 346.87875366]
[164.94319153 361.34329224]
[178.39694214 369.19403076]
[182.21916199 383.91970825]
[174.65176392 396.69741821]
[178.62387085 411.16195679]
[182.59596252 425.62646484]
[186.56805420 440.09100342]
[201.55017090 438.75833130]
[216.52944946 440.12246704]
[231.02438354 444.13952637]
[244.56900024 450.68038940]
[256.72790527 459.53482056]
[267.11026001 470.41815186]
[275.38229370 482.98052979]
[281.27807617 496.81811523]
[284.60812378 511.48614502]
[285.26535034 526.51306152]
[283.22866821 541.41577148]
[278.56350708 555.71527100]
[271.41986084 568.95190430]
[262.02737427 580.70013428]
[250.68795776 590.58233643]
[237.76611328 598.28076172]
[223.67726135 603.54803467]
[208.87428284 606.21472168]
[193.83302307 606.19525146]
[179.03700256 603.49011230]
[164.96186829 598.18627930]
[152.06005859 590.45434570]
[140.74630737 580.54278564]
[131.38432312 568.77026367]
[124.27505493 555.51513672]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 185]
[9 184]
[10 183]
[11 182]
[14 179]
[15 178]
[16 177]
[18 176]
[19 175]
[20 174]
[24 173]
[25 172]
[26 171]
[27 170]
[28 169]
[29 160]
[30 159]
[31 158]
[48 157]
[49 156]
[50 155]
[51 154]
[53 152]
[54 151]
[55 149]
[56 148]
[57 147]
[58 146]
[60 144]
[61 143]
[62 142]
[63 141]
[64 140]
[65 139]
[69 138]
[70 137]
[71 136]
[72 135]
[83 134]
[84 133]
[85 132]
[91 131]
[92 130]
[93 129]
[95 127]
[96 126]
[97 125]
[98 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
