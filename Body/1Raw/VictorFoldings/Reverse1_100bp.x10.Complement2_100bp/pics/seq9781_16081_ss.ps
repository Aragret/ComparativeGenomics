%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[306.52618408 324.94058228]
[315.42034912 312.84521484]
[304.31314087 302.76406860]
[293.20590210 292.68295288]
[282.09866333 282.60180664]
[270.99142456 272.52066040]
[259.88418579 262.43951416]
[247.22782898 264.85736084]
[235.31190491 259.46359253]
[228.57913208 248.02330017]
[229.68060303 234.59939575]
[218.72470093 224.35400391]
[207.76878357 214.10861206]
[196.81288147 203.86322021]
[185.85696411 193.61782837]
[174.90106201 183.37243652]
[160.32035828 180.33065796]
[155.52557373 165.25349426]
[144.56965637 155.00810242]
[139.85118103 154.26992798]
[135.54631042 150.55976868]
[133.44584656 144.29083252]
[122.79984283 133.72378540]
[112.15383148 123.15673828]
[101.50782776 112.58969116]
[106.29192352 126.80631256]
[107.28650665 141.77330017]
[104.42562103 156.49795532]
[97.89900208 170.00363159]
[88.13954926 181.39454651]
[75.79456329 189.91519165]
[61.68284607 195.00041199]
[46.74037933 196.31294250]
[31.95824242 193.76570129]
[18.31688118 187.52764893]
[6.72107649 178.01254272]
[-2.06006265 165.85147095]
[-7.44411469 151.85104370]
[-9.07397461 136.93984985]
[-6.84154081 122.10691071]
[-0.89488119 108.33602905]
[8.37158298 96.54057312]
[20.34324074 87.50290680]
[34.22605515 81.82246399]
[49.09922791 79.87599945]
[63.97627640 81.79261780]
[77.87046051 87.44520569]
[89.86389160 96.46241760]
[83.18370056 83.03204346]
[76.50350189 69.60166931]
[69.82331085 56.17129135]
[63.14311600 42.74091721]
[56.36312485 29.36064339]
[49.48371124 16.03121376]
[42.60429764 2.70178437]
[42.86797333 17.69946671]
[40.14819717 32.45083237]
[34.55329132 46.36834335]
[26.30610847 58.89766693]
[15.73512173 69.53976440]
[3.26137424 77.87076569]
[-10.61831093 83.55885315]
[-25.35111046 86.37747192]
[-40.35022354 86.21435547]
[-55.01824188 83.07600403]
[-68.77094269 77.08740997]
[-81.06056213 68.48709869]
[-91.39760590 57.61762619]
[-99.37035370 44.91191101]
[-104.66126251 30.87601662]
[-107.05959320 16.06899071]
[-106.46981812 1.08059013]
[-102.91542816 -13.49220371]
[-96.53799438 -27.06896019]
[-87.59152222 -39.10892487]
[-76.43235779 -49.13254929]
[-63.50495911 -56.74059296]
[-49.32422256 -61.63003922]
[-34.45495605 -63.60613251]
[-19.48940277 -62.59017563]
[-5.02363014 -58.62262726]
[8.36619282 -51.86151505]
[20.14675522 -42.57612991]
[29.84884262 -31.13630867]
[37.08438492 -18.00153542]
[36.41459656 -32.98657608]
[35.74481201 -47.97161484]
[35.07502747 -62.95665359]
[21.54822922 -70.09618378]
[13.46459484 -82.96287537]
[12.91029453 -98.04793549]
[19.93412018 -111.29640198]
[32.56125259 -119.19710541]
[31.89146805 -134.18214417]
[31.22168159 -149.16719055]
[22.87588882 -162.60810852]
[30.03717041 -175.66816711]
[15.84678364 -181.19563293]
[5.13605690 -192.02154541]
[-0.23931274 -206.27023315]
[0.65199006 -221.47303772]
[7.65554190 -234.99598694]
[19.55793381 -244.49615479]
[34.29700851 -248.32754517]
[49.31912613 -245.82638550]
[62.02161789 -237.42599487]
[70.20369720 -224.58178711]
[72.44777679 -209.51911926]
[68.36505127 -194.84768677]
[58.66287231 -183.10937500]
[45.02220917 -176.33795166]
[53.32009506 -163.96887207]
[46.20672226 -149.83697510]
[46.87650681 -134.85192871]
[47.54629135 -119.86689758]
[60.82793427 -113.12422943]
[69.00572205 -100.55522919]
[69.79945374 -85.48087311]
[62.89596558 -71.94430542]
[50.06006622 -63.62643814]
[50.72985077 -48.64139938]
[51.39963531 -33.65636063]
[52.06942368 -18.67132187]
[55.93372726 -4.17762804]
[62.81314087 9.15180111]
[69.69255066 22.48122978]
[75.55362701 26.98340416]
[76.57349396 36.06072235]
[83.25368500 49.49109650]
[89.93388367 62.92147446]
[96.61407471 76.35185242]
[103.29426575 89.78222656]
[112.07487488 101.94367981]
[122.72087860 112.51072693]
[133.36689758 123.07777405]
[144.01289368 133.64482117]
[154.81504822 144.05220032]
[165.77096558 154.29759216]
[181.13529968 158.07218933]
[185.14645386 172.41651917]
[196.10235596 182.66191101]
[207.05827332 192.90730286]
[218.01417542 203.15269470]
[228.97009277 213.39808655]
[239.92599487 223.64347839]
[257.39593506 222.73750305]
[269.87036133 234.51475525]
[269.96533203 251.33229065]
[281.07257080 261.41342163]
[292.17980957 271.49456787]
[303.28704834 281.57571411]
[314.39425659 291.65686035]
[325.50149536 301.73797607]
[336.68084717 291.71670532]
[348.83135986 282.89801025]
[361.82421875 275.37539673]
[375.52169800 269.22860718]
[389.77859497 264.52282715]
[404.44381714 261.30792236]
[419.36187744 259.61795044]
[434.37460327 259.47085571]
[449.32290649 260.86819458]
[464.04827881 263.79516602]
[478.39465332 268.22070312]
[492.20996094 274.09790039]
[505.34771729 281.36450195]
[517.66870117 289.94342041]
[529.04223633 299.74374390]
[539.34777832 310.66159058]
[548.47613525 322.58120728]
[556.33050537 335.37625122]
[562.82763672 348.91107178]
[567.89862061 363.04220581]
[571.48974609 377.61987305]
[573.56286621 392.48950195]
[574.09613037 407.49349976]
[573.08380127 422.47277832]
[570.53662109 437.26858521]
[566.48162842 451.72406006]
[560.96179199 465.68597412]
[554.03558350 479.00634766]
[545.77642822 491.54391479]
[536.27191162 503.16580200]
[525.62280273 513.74884033]
[513.94195557 523.18078613]
[501.35321045 531.36169434]
[487.99002075 538.20483398]
[473.99398804 543.63769531]
[459.51354980 547.60266113]
[444.70217896 550.05761719]
[429.71685791 550.97668457]
[414.71649170 550.35003662]
[399.86004639 548.18432617]
[385.30505371 544.50256348]
[371.20574951 539.34368896]
[357.71163940 532.76245117]
[344.96572876 524.82855225]
[333.10317993 515.62622070]
[322.24969482 505.25283813]
[312.52038574 493.81851196]
[304.01831055 481.44436646]
[296.83364868 468.26162720]
[291.04257202 454.41000366]
[286.70642090 440.03637695]
[283.87121582 425.29302979]
[282.56695557 410.33633423]
[282.80752563 395.32479858]
[284.59030151 380.41757202]
[287.89645386 365.77264404]
[292.69091797 351.54531860]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 153]
[3 152]
[4 151]
[5 150]
[6 149]
[7 148]
[11 145]
[12 144]
[13 143]
[14 142]
[15 141]
[16 140]
[18 138]
[19 137]
[22 136]
[23 135]
[24 134]
[25 133]
[48 132]
[49 131]
[50 130]
[51 129]
[52 128]
[53 126]
[54 125]
[55 124]
[85 123]
[86 122]
[87 121]
[88 120]
[93 115]
[94 114]
[95 113]
[97 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
