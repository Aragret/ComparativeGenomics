%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[26.12359619 441.72979736]
[26.05083656 456.75238037]
[23.97634506 471.63122559]
[19.93714714 486.10079956]
[14.00532532 499.90286255]
[6.28673983 512.79113770]
[-3.08086252 524.53552246]
[-13.93030548 534.92651367]
[-26.06796837 543.77868652]
[-39.27724075 550.93402100]
[-53.32238388 556.26477051]
[-67.95275116 559.67590332]
[-82.90724182 561.10650635]
[-97.91898346 560.53106689]
[-112.72006226 557.95977783]
[-127.04634094 553.43859863]
[-140.64215088 547.04815674]
[-153.26486206 538.90258789]
[-164.68920898 529.14715576]
[-174.71130371 517.95605469]
[-183.15228271 505.52896118]
[-189.86152649 492.08761597]
[-194.71928406 477.87191772]
[-197.63887024 463.13558960]
[-198.56817627 448.14160156]
[-197.49063110 433.15753174]
[-194.42546082 418.45080566]
[-189.42735291 404.28384399]
[-182.58551025 390.90951538]
[-174.02204895 378.56649780]
[-163.88977051 367.47503662]
[-152.36950684 357.83309937]
[-139.66687012 349.81271362]
[-126.00852203 343.55706787]
[-111.63822937 339.17779541]
[-96.81244659 336.75302124]
[-81.79575348 336.32601929]
[-66.85614014 337.90444946]
[-52.26021957 341.46008301]
[-38.26847839 346.92950439]
[-30.99524879 333.81082153]
[-23.72202110 320.69213867]
[-24.97189522 303.18771362]
[-9.10874176 293.83666992]
[-2.03163671 280.61114502]
[5.04546881 267.38562012]
[12.02392101 254.10777283]
[18.90333366 240.77833557]
[25.78274536 227.44891357]
[24.74423599 212.59056091]
[37.94896317 203.87586975]
[44.82837296 190.54643250]
[43.78986359 175.68807983]
[56.99459076 166.97338867]
[63.87400055 153.64396667]
[62.83549118 138.78559875]
[76.04021454 130.07090759]
[82.91963196 116.74148560]
[89.79904175 103.41205597]
[93.87870789 88.97750092]
[94.99436188 74.01905060]
[96.11000824 59.06059647]
[97.22565460 44.10214233]
[98.34130096 29.14368820]
[95.81931305 23.03213501]
[96.63927460 17.40855026]
[99.71939087 13.75862885]
[101.27990723 -1.15997553]
[102.84043121 -16.07858086]
[104.28984833 -31.00838852]
[105.62808990 -45.94857407]
[106.85506439 -60.89830780]
[107.97071075 -75.85675812]
[109.08635712 -90.81521606]
[110.20201111 -105.77366638]
[111.31765747 -120.73212433]
[112.43330383 -135.69056702]
[113.54895020 -150.64903259]
[114.66460419 -165.60748291]
[115.78025055 -180.56593323]
[116.89589691 -195.52438354]
[118.01155090 -210.48283386]
[111.32209015 -224.82026672]
[119.98456573 -236.93681335]
[121.10021973 -251.89526367]
[111.06388092 -263.80786133]
[112.40840149 -278.96194458]
[123.82707977 -288.45666504]
[124.94273376 -303.41510010]
[126.05838013 -318.37356567]
[116.69541168 -325.69964600]
[112.07872009 -336.52493286]
[113.24881744 -348.11480713]
[119.79991150 -357.60156250]
[130.00930786 -362.69415283]
[131.56982422 -377.61276245]
[133.13035583 -392.53137207]
[134.69087219 -407.44998169]
[120.65240479 -413.00189209]
[108.63311005 -422.13641357]
[99.52490234 -434.17562866]
[94.00366974 -448.22619629]
[92.47912598 -463.24548340]
[95.06439972 -478.11889648]
[101.56764984 -491.74279785]
[111.50629425 -503.10614014]
[124.14281464 -511.36575317]
[138.53948975 -515.90869141]
[153.62800598 -516.39776611]
[168.28869629 -512.79681396]
[181.43362427 -505.37298584]
[192.08735657 -494.67718506]
[199.45932007 -481.50308228]
[203.00245667 -466.82830811]
[202.45385742 -451.74185181]
[197.85421753 -437.36318970]
[189.54486084 -424.75930786]
[178.14241028 -414.86557007]
[164.49299622 -408.41607666]
[149.60948181 -405.88943481]
[148.04896545 -390.97085571]
[146.48843384 -376.05224609]
[144.92791748 -361.13363647]
[157.29049683 -347.63244629]
[155.83346558 -329.06390381]
[141.01683044 -317.25790405]
[139.90118408 -302.29946899]
[138.78553772 -287.34100342]
[148.66943359 -276.25750732]
[147.75109863 -261.07159424]
[136.05867004 -250.77961731]
[134.94302368 -235.82116699]
[141.71228027 -222.55366516]
[132.97000122 -209.36718750]
[131.85435486 -194.40873718]
[130.73870850 -179.45028687]
[129.62306213 -164.49183655]
[128.50740051 -149.53338623]
[127.39176178 -134.57492065]
[126.27610779 -119.61647034]
[125.16046143 -104.65802002]
[124.04481506 -89.69956207]
[122.92916107 -74.74111176]
[121.81351471 -59.78265762]
[124.45082092 -52.87857056]
[120.56826782 -44.61034012]
[119.23003387 -29.67015457]
[121.76425934 -22.72756767]
[117.75904083 -14.51805687]
[116.19851685 0.40054753]
[114.63799286 15.31915188]
[113.29975891 30.25933647]
[112.18411255 45.21779251]
[111.06845856 60.17624283]
[109.95281219 75.13469696]
[108.83716583 90.09314728]
[116.44714355 77.16689301]
[126.62536621 66.14855194]
[138.90878296 57.53938675]
[152.73858643 51.73106384]
[167.48559570 48.98781967]
[182.47895813 49.43445206]
[197.03652954 53.05064392]
[210.49607849 59.67188263]
[222.24525452 68.99694824]
[231.74955750 80.60160065]
[238.57661438 93.95792389]
[242.41583252 108.45828247]
[243.09255981 123.44300842]
[240.57600403 138.23040771]
[234.98063660 152.14772034]
[226.56103516 164.56184387]
[215.70022583 174.90798950]
[202.89230347 182.71548462]
[188.71994019 187.62915039]
[173.82788086 189.42543030]
[158.89361572 188.02261353]
[144.59657288 183.48452759]
[131.58714294 176.01760864]
[120.45718384 165.96156311]
[111.71303558 153.77386475]
[105.75249481 140.00898743]
[102.84673309 125.29312897]
[103.12847137 110.29146576]
[96.24906158 123.62089539]
[89.36964417 136.95033264]
[89.91609192 152.76210022]
[77.20343018 160.52337646]
[70.32402039 173.85279846]
[70.87046814 189.66456604]
[58.15780258 197.42584229]
[51.27838898 210.75527954]
[51.82484055 226.56704712]
[39.11217499 234.32832336]
[32.23276138 247.65774536]
[25.35334969 260.98718262]
[24.19845390 270.04830933]
[18.27099609 274.46270752]
[11.19389057 287.68826294]
[4.11678553 300.91378784]
[7.10140085 313.46188354]
[0.93458909 324.33175659]
[-10.60332584 327.96536255]
[-17.87655640 341.08404541]
[-25.14978600 354.20275879]
[-13.09843826 363.17205811]
[-2.35015607 373.66766357]
[6.90324450 385.50228882]
[14.49662685 398.46469116]
[20.29447746 412.32354736]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 205]
[41 204]
[42 203]
[44 200]
[45 199]
[46 198]
[47 196]
[48 195]
[49 194]
[51 192]
[52 191]
[54 189]
[55 188]
[57 186]
[58 185]
[59 184]
[60 156]
[61 155]
[62 154]
[63 153]
[64 152]
[67 151]
[68 150]
[69 149]
[70 147]
[71 146]
[72 144]
[73 143]
[74 142]
[75 141]
[76 140]
[77 139]
[78 138]
[79 137]
[80 136]
[81 135]
[82 134]
[84 132]
[85 131]
[88 128]
[89 127]
[90 126]
[95 123]
[96 122]
[97 121]
[98 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
