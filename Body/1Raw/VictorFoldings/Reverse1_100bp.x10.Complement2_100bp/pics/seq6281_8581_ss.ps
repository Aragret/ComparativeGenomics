%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxGGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[-40.36527252 629.55847168]
[-50.20441437 640.88995361]
[-60.86285019 651.45452881]
[-72.28097534 661.19305420]
[-84.39494324 670.05102539]
[-97.13699341 677.97900391]
[-110.43587494 684.93255615]
[-124.21721649 690.87280273]
[-138.40394592 695.76660156]
[-152.91670227 699.58654785]
[-167.67436218 702.31121826]
[-182.59436035 703.92541504]
[-197.59327698 704.42016602]
[-212.58721924 703.79260254]
[-227.49235535 702.04632568]
[-242.22529602 699.19110107]
[-256.70367432 695.24279785]
[-270.84649658 690.22357178]
[-284.57470703 684.16149902]
[-297.81149292 677.09045410]
[-310.48281860 669.04998779]
[-322.51788330 660.08508301]
[-333.84933472 650.24584961]
[-344.41378784 639.58728027]
[-354.15219116 628.16906738]
[-363.01007080 616.05505371]
[-370.93792725 603.31292725]
[-377.89135742 590.01397705]
[-383.83151245 576.23260498]
[-388.72515869 562.04583740]
[-392.54495239 547.53302002]
[-395.26950073 532.77532959]
[-396.88360596 517.85534668]
[-397.37820435 502.85641479]
[-396.75054932 487.86245728]
[-395.00411987 472.95736694]
[-392.14874268 458.22442627]
[-388.20031738 443.74609375]
[-383.18096924 429.60330200]
[-377.11877441 415.87515259]
[-370.04760742 402.63845825]
[-362.00704956 389.96716309]
[-353.04202271 377.93218994]
[-343.20266724 366.60083008]
[-332.54403687 356.03646851]
[-321.12573242 346.29815674]
[-309.01162720 337.44036865]
[-296.26943970 329.51266479]
[-282.97042847 322.55932617]
[-269.18899536 316.61929321]
[-255.00218201 311.72576904]
[-240.48933411 307.90609741]
[-225.73164368 305.18167114]
[-210.81161499 303.56771851]
[-195.81268311 303.07324219]
[-180.81875610 303.70104980]
[-165.91365051 305.44760132]
[-151.18075562 308.30313110]
[-136.70245361 312.25164795]
[-122.55971527 317.27111816]
[-108.83162689 323.33343506]
[-95.59496307 330.40472412]
[-82.92375946 338.44540405]
[-73.96305847 326.41604614]
[-65.00236511 314.38665771]
[-56.04167175 302.35729980]
[-47.08097458 290.32791138]
[-38.12027740 278.29852295]
[-29.24938202 266.20278931]
[-20.46877861 254.04132080]
[-19.29169273 239.19329834]
[-4.94031525 232.53382874]
[3.84028792 220.37237549]
[12.62089157 208.21092224]
[21.40149498 196.04946899]
[15.17825890 182.51666260]
[16.57362366 167.58651733]
[25.31254196 155.27807617]
[39.12971497 148.95491028]
[54.35604095 150.40621948]
[63.13664246 138.24476624]
[71.91724396 126.08330536]
[80.69784546 113.92185211]
[89.47845459 101.76039886]
[97.04283142 88.80739594]
[103.32019043 75.18408203]
[109.59754944 61.56076431]
[114.63446808 47.43173599]
[118.39076996 32.90967560]
[122.14707184 18.38761711]
[125.90337372 3.86555791]
[129.65966797 -10.65650177]
[132.87294006 -25.30828857]
[135.53874207 -40.06950760]
[138.20452881 -54.83072281]
[140.87033081 -69.59194183]
[135.70875549 -84.54750061]
[145.58477783 -95.69709778]
[148.25057983 -110.45831299]
[134.48411560 -116.60224915]
[122.58844757 -125.86273193]
[113.25518036 -137.70137024]
[107.02693176 -151.42990112]
[104.26580811 -166.25013733]
[105.13233185 -181.30047607]
[109.57613373 -195.70590210]
[117.33885193 -208.62889099]
[127.96916962 -219.31811523]
[140.84906006 -227.15214539]
[155.22969055 -231.67549133]
[170.27500916 -232.62519836]
[185.11029053 -229.94602966]
[198.87303162 -223.79374695]
[210.76307678 -214.52604675]
[220.08917236 -202.68174744]
[226.30908203 -188.94944763]
[229.06123352 -174.12753296]
[228.18557739 -159.07772827]
[223.73304749 -144.67501831]
[215.96249390 -131.75672913]
[205.32569885 -121.07394409]
[192.44105530 -113.24772644]
[178.05767822 -108.73309326]
[163.01179504 -107.79251862]
[160.34599304 -93.03130341]
[165.69824219 -79.13156128]
[155.63154602 -66.92614746]
[152.96575928 -52.16492844]
[150.29995728 -37.40370941]
[147.63415527 -22.64249229]
[161.25735474 -28.92012215]
[174.72723389 -22.31993675]
[178.11430359 -7.70734739]
[168.92173767 4.14578867]
[153.92596436 4.50178051]
[144.18173218 -6.90020084]
[140.42543030 7.62185860]
[136.66912842 22.14391708]
[132.91282654 36.66597748]
[129.15652466 51.18803787]
[140.18344116 41.01910782]
[154.50498962 36.55889893]
[169.35588074 38.66860199]
[181.86866760 46.94086456]
[189.62730408 59.77845001]
[191.13372803 74.70261383]
[186.09707642 88.83173370]
[175.48983765 99.43770599]
[161.36012268 104.47267914]
[146.43614197 102.96447754]
[133.59947205 95.20430756]
[125.32870483 82.69054413]
[123.22087097 67.83812714]
[116.94350433 81.46144104]
[110.66614532 95.08475494]
[123.14631653 86.76338196]
[137.91819763 84.15729523]
[152.49246216 87.70567322]
[164.41307068 96.81054688]
[171.67123413 109.93759155]
[173.04379272 124.87465668]
[168.29945374 139.10459900]
[158.23771667 150.22941589]
[144.55416870 156.37438965]
[129.55473328 156.50396729]
[115.76706696 150.59632874]
[105.51463318 139.64700317]
[100.52516174 125.50114441]
[101.63990784 110.54100037]
[92.85930634 122.70245361]
[84.07870483 134.86390686]
[75.29809570 147.02536011]
[66.51749420 159.18682861]
[72.68643188 173.18295288]
[71.03240204 188.28794861]
[62.09917068 200.45608521]
[48.36658478 206.47871399]
[33.56295013 204.83006287]
[24.78234673 216.99153137]
[16.00174332 229.15298462]
[7.22114038 241.31443787]
[5.41600704 257.03231812]
[-8.30732346 262.82192993]
[-17.08792686 274.98336792]
[-19.57418251 283.77294922]
[-26.09090042 287.25921631]
[-35.05159760 299.28860474]
[-44.01229095 311.31799316]
[-52.97298813 323.34735107]
[-61.93368530 335.37673950]
[-70.89437866 347.40612793]
[-59.56276321 357.24514771]
[-48.99810791 367.90350342]
[-39.25949860 379.32153320]
[-30.40139771 391.43542480]
[-22.47334099 404.17739868]
[-15.51966858 417.47622681]
[-9.57926846 431.25750732]
[-4.68536139 445.44418335]
[-0.86531639 459.95693970]
[1.85950255 474.71456909]
[3.47385716 489.63455200]
[3.96871924 504.63345337]
[3.34132123 519.62738037]
[1.59517205 534.53253174]
[-1.25996327 549.26550293]
[-5.20811749 563.74395752]
[-10.22721004 577.88677979]
[-16.28917313 591.61505127]
[-23.36010361 604.85192871]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[63 191]
[64 190]
[65 189]
[66 188]
[67 187]
[68 186]
[69 184]
[70 183]
[72 181]
[73 180]
[74 179]
[75 178]
[80 173]
[81 172]
[82 171]
[83 170]
[84 169]
[85 155]
[86 154]
[87 153]
[88 140]
[89 139]
[90 138]
[91 137]
[92 136]
[93 130]
[94 129]
[95 128]
[96 127]
[98 125]
[99 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
