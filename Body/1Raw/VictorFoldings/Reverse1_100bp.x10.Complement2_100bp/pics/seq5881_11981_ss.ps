%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[50.83216858 480.48919678]
[57.15442657 494.20800781]
[59.35418701 509.15249634]
[57.25312805 524.11114502]
[51.02157211 537.87139893]
[41.16468048 549.31774902]
[28.48151398 557.52227783]
[14.00023365 561.81982422]
[-1.10522532 561.86212158]
[-15.61033154 557.64562988]
[-28.33922005 549.51226807]
[-38.26001740 538.12127686]
[-44.56849289 524.39611816]
[-46.75323868 509.44943237]
[-44.63715363 494.49285889]
[-38.39177704 480.73886108]
[-28.52339363 469.30245972]
[-15.83198833 461.11068726]
[-1.34639835 456.82766724]
[13.75909519 456.80056763]
[17.94610596 442.39678955]
[22.13311768 427.99301147]
[26.32012939 413.58923340]
[30.50714111 399.18542480]
[34.69415283 384.78164673]
[38.88116455 370.37786865]
[41.87593842 355.67987061]
[43.65840149 340.78616333]
[45.44086838 325.89242554]
[47.22333527 310.99871826]
[49.00580215 296.10501099]
[50.78826523 281.21127319]
[37.56287766 288.28866577]
[23.72403526 282.50192261]
[19.47321510 268.11682129]
[27.94396591 255.73754883]
[42.89196396 254.48962402]
[53.29758072 265.29141235]
[56.18285370 250.57151794]
[59.06812668 235.85162354]
[52.49448013 219.58036804]
[64.71212769 205.80319214]
[67.37792969 191.04197693]
[70.04372406 176.28076172]
[72.70951843 161.51953125]
[61.84857941 171.86555481]
[47.29329681 175.49098206]
[32.84838486 171.44815063]
[22.28970909 160.79383850]
[18.37728119 146.31306458]
[22.13380241 131.79106140]
[32.57732391 121.02384186]
[46.97793579 116.82595062]
[61.57135391 120.29468536]
[72.54289246 130.52334595]
[77.02458191 144.83728027]
[81.85057831 130.63482666]
[86.67657471 116.43236542]
[91.50257111 102.22991180]
[90.39195251 99.39159393]
[90.28953552 96.08644104]
[91.37021637 92.68708801]
[93.66877747 89.62557983]
[97.06172180 87.34064484]
[95.10679626 71.64068604]
[107.07633972 62.77618790]
[112.73912048 48.88616180]
[118.40190887 34.99613190]
[105.26020050 25.90254211]
[94.46211243 14.13036060]
[86.54126740 0.26573578]
[81.88808441 -15.00189686]
[80.73060608 -30.91409492]
[83.12330627 -46.68108368]
[88.94448853 -61.52096176]
[97.90255737 -74.69846344]
[109.55052948 -85.56141663]
[123.30841827 -93.57296753]
[138.49206543 -98.33818054]
[154.34715271 -99.62343597]
[170.08673096 -97.36794281]
[175.33345032 -111.42041779]
[180.58016968 -125.47288513]
[185.82688904 -139.52536011]
[190.96884155 -153.61650085]
[196.00576782 -167.74552917]
[201.04267883 -181.87455750]
[206.07958984 -196.00358582]
[211.11651611 -210.13261414]
[216.15342712 -224.26164246]
[219.14820862 -238.95965576]
[220.04101562 -253.93305969]
[220.93383789 -268.90646362]
[221.82664490 -283.87988281]
[222.71946716 -298.85327148]
[223.61227417 -313.82669067]
[224.39360046 -328.80630493]
[225.06338501 -343.79135132]
[225.73316956 -358.77639771]
[211.82748413 -364.85885620]
[201.06082153 -375.55667114]
[194.88926697 -389.42306519]
[194.14749146 -404.58267212]
[198.93580627 -418.98532104]
[208.60662842 -430.68316650]
[221.85205078 -438.09417725]
[236.88076782 -440.21606445]
[251.66023254 -436.76184082]
[264.19168091 -428.19869995]
[272.78030396 -415.68472290]
[276.26458740 -400.91229248]
[274.17327881 -385.87930298]
[266.78924561 -372.61880493]
[255.11109924 -362.92422485]
[240.71821594 -358.10659790]
[240.04843140 -343.12158203]
[239.37864685 -328.13653564]
[242.22033691 -321.31402588]
[238.58569336 -312.93386841]
[237.69287109 -297.96044922]
[236.80004883 -282.98706055]
[235.90724182 -268.01364136]
[235.01441956 -253.04023743]
[234.12161255 -238.06683350]
[241.81127930 -250.94584656]
[252.91520691 -261.03063965]
[266.47277832 -267.44876099]
[281.31112671 -269.64498901]
[296.14657593 -267.42932129]
[309.69573975 -260.99346924]
[320.78646851 -250.89416504]
[328.45928955 -238.00511169]
[332.05041504 -223.44132996]
[331.24923706 -208.46273804]
[326.12500000 -194.36514282]
[317.12103271 -182.36811829]
[305.01626587 -173.50953674]
[290.85787964 -168.55574036]
[275.87072754 -167.93528748]
[261.35131836 -171.70184326]
[248.55575562 -179.52958679]
[238.59097290 -190.74133301]
[232.31903076 -204.36714172]
[230.28245544 -219.22473145]
[225.24554443 -205.09570312]
[220.20861816 -190.96667480]
[215.17170715 -176.83764648]
[210.13479614 -162.70861816]
[205.09786987 -148.57958984]
[205.81278992 -141.22358704]
[199.87936401 -134.27864075]
[194.63264465 -120.22616577]
[189.38592529 -106.17369843]
[184.13920593 -92.12122345]
[196.06318665 -84.65406799]
[206.29463196 -74.98957062]
[214.43467712 -63.50174332]
[220.16542053 -50.63571930]
[223.26234436 -36.89052200]
[223.60317993 -22.79971504]
[221.17265320 -8.91068554]
[216.06320190 4.23662281]
[208.47143555 16.13069725]
[198.69058228 26.30835724]
[187.09918213 34.37279129]
[174.14642334 40.00902939]
[160.33468628 42.99624634]
[146.20016479 43.21640015]
[132.29193115 40.65892029]
[126.62915039 54.54894638]
[120.96636200 68.43897247]
[123.32633209 83.14543152]
[110.95174408 93.00343323]
[105.70502472 107.05590820]
[100.87902832 121.25836182]
[96.05303192 135.46081543]
[91.22703552 149.66326904]
[87.47073364 164.18533325]
[84.80493927 178.94654846]
[82.13914490 193.70776367]
[79.47335052 208.46897888]
[86.17305756 219.49063110]
[83.64882660 231.73040771]
[73.78801727 238.73689270]
[70.90274048 253.45678711]
[68.01747131 268.17669678]
[65.68198395 282.99374390]
[63.89951706 297.88748169]
[62.11705399 312.78118896]
[60.33458710 327.67489624]
[58.55212021 342.56863403]
[56.76965332 357.46234131]
[66.63972473 346.16711426]
[80.59480286 340.66659546]
[95.51728821 342.18957520]
[108.07345581 350.39584351]
[115.45822906 363.45205688]
[116.02183533 378.44146729]
[109.63835907 392.01538086]
[97.73387909 401.14135742]
[82.96789551 403.78063965]
[68.63916779 399.34356689]
[57.94876099 388.82144165]
[53.28494644 374.56488037]
[49.09793472 388.96865845]
[44.91092300 403.37243652]
[40.72391129 417.77624512]
[36.53689957 432.18002319]
[32.34988785 446.58380127]
[28.16287804 460.98757935]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 210]
[21 209]
[22 208]
[23 207]
[24 206]
[25 205]
[26 204]
[27 192]
[28 191]
[29 190]
[30 189]
[31 188]
[32 187]
[38 186]
[39 185]
[40 184]
[42 181]
[43 180]
[44 179]
[45 178]
[56 177]
[57 176]
[58 175]
[59 174]
[64 173]
[66 171]
[67 170]
[68 169]
[81 154]
[82 153]
[83 152]
[84 151]
[85 149]
[86 148]
[87 147]
[88 146]
[89 145]
[90 144]
[91 124]
[92 123]
[93 122]
[94 121]
[95 120]
[96 119]
[97 117]
[98 116]
[99 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
