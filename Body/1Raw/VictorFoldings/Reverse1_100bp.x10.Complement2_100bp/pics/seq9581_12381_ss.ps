%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[-22.71907043 555.30426025]
[-20.67000008 570.22906494]
[-21.99390030 585.23553467]
[-26.62436485 599.57104492]
[-34.32912827 612.51647949]
[-44.72172928 623.42254639]
[-57.28087234 631.74212646]
[-71.37660217 637.05798340]
[-86.30187988 639.10339355]
[-101.30805206 637.77587891]
[-115.64243317 633.14196777]
[-128.58599854 625.43402100]
[-139.48951721 615.03881836]
[-147.80607605 602.47766113]
[-153.11849976 588.38061523]
[-155.16033936 573.45483398]
[-153.82916260 558.44897461]
[-149.19175720 544.11572266]
[-141.48071289 531.17407227]
[-131.08282471 520.27307129]
[-118.51966095 511.95953369]
[-104.42135620 506.65054321]
[-89.49508667 504.61230469]
[-74.48955536 505.94711304]
[-69.87554932 491.67437744]
[-65.26153564 477.40164185]
[-60.64752960 463.12890625]
[-56.03351974 448.85620117]
[-51.41950989 434.58346558]
[-62.08689499 427.39907837]
[-70.53824615 417.68667603]
[-76.19145203 406.10458374]
[-78.65438843 393.44024658]
[-77.75209045 380.55670166]
[-73.53916168 368.33377075]
[-66.29653168 357.60797119]
[-56.51275253 349.11532593]
[-44.85099792 343.44070435]
[-32.10416794 340.97775269]
[-19.14093590 341.90142822]
[-13.89421844 327.84896851]
[-8.64750004 313.79647827]
[-3.40078187 299.74401855]
[1.84593642 285.69155884]
[-10.17906857 294.65811157]
[-24.88691330 297.60418701]
[-39.43774033 293.96090698]
[-51.02201843 284.43176270]
[-57.40299988 270.85668945]
[-57.34861755 255.85678101]
[-50.86937714 242.32830811]
[-39.21631241 232.88342285]
[-24.63944817 229.34574890]
[-9.95335197 232.39839172]
[2.00632358 241.45190430]
[8.93035126 254.75820923]
[9.48157692 269.74932861]
[17.14217377 256.85299683]
[24.80277061 243.95666504]
[32.46336746 231.06034851]
[40.12396622 218.16401672]
[47.78456497 205.26768494]
[55.44515991 192.37136841]
[62.71839142 179.25267029]
[68.68995667 165.49256897]
[73.72686768 151.36354065]
[78.76378632 137.23451233]
[83.80070496 123.10547638]
[88.83761597 108.97644806]
[86.50777435 95.19010162]
[97.03335571 85.98663330]
[102.07026672 71.85760498]
[106.89626312 57.65515137]
[111.51027679 43.38241577]
[116.12428284 29.10968399]
[113.00706482 13.59860611]
[124.28414154 3.86840725]
[128.89814758 -10.40432644]
[133.51216125 -24.67705917]
[138.12617493 -38.94979477]
[140.79196167 -53.71100998]
[141.46174622 -68.69605255]
[142.13153076 -83.68109131]
[139.38844299 -92.39390564]
[142.92448425 -98.88375854]
[143.81730652 -113.85716248]
[144.71012878 -128.83056641]
[145.60293579 -143.80397034]
[131.54808044 -149.36439514]
[119.91578674 -158.98376465]
[111.83722687 -171.71032715]
[108.09294128 -186.29098511]
[109.03741455 -201.29466248]
[114.56561279 -215.25280762]
[124.12442780 -226.80310059]
[136.76805115 -234.82238770]
[151.25149536 -238.53596497]
[152.14431763 -253.50936890]
[153.03713989 -268.48275757]
[153.92994690 -283.45617676]
[140.24200439 -290.06741333]
[130.12973022 -301.41690063]
[125.13519287 -315.77386475]
[126.02000427 -330.94903564]
[132.64924622 -344.62826538]
[144.01200867 -354.72561646]
[158.37554932 -359.70126343]
[173.54953003 -358.79647827]
[187.22004700 -352.14926147]
[197.30241394 -340.77322388]
[202.25917053 -326.40313721]
[201.33444214 -311.23034668]
[194.66921997 -297.56860352]
[183.27993774 -287.50122070]
[168.90335083 -282.56335449]
[168.01054382 -267.58996582]
[167.11772156 -252.61654663]
[166.22491455 -237.64314270]
[180.16444397 -232.23480225]
[191.76554871 -222.76988220]
[199.88409424 -210.16554260]
[203.71446228 -195.64938354]
[202.86933899 -180.63977051]
[197.41894531 -166.60736084]
[187.88531494 -154.93096924]
[175.19236755 -146.76203918]
[160.57633972 -142.91116333]
[159.68353271 -127.93775177]
[158.79071045 -112.96434784]
[157.89790344 -97.99094391]
[157.11657715 -83.01129913]
[156.44679260 -68.02626038]
[155.77700806 -53.04122543]
[163.36691284 -65.97928619]
[174.54158020 -75.98561859]
[188.23591614 -82.10649109]
[203.14466858 -83.75849152]
[217.84683228 -80.78417206]
[230.94107056 -73.46701813]
[241.17935181 -62.50445557]
[247.58580017 -48.94136810]
[249.54981995 -34.07050323]
[246.88420105 -19.30925560]
[239.84300232 -6.06457233]
[229.09736633 4.40114641]
[215.67149353 11.09037495]
[200.84503174 13.36554050]
[186.03117371 11.00978565]
[172.64187622 4.24764872]
[161.95330811 -6.27634764]
[154.98423767 -19.55912399]
[152.39891052 -34.33578491]
[147.78489685 -20.06305122]
[143.17088318 -5.79031706]
[138.55686951 8.48241615]
[142.00411987 22.97261238]
[130.39701843 33.72369385]
[125.78301239 47.99642563]
[121.16899872 62.26915741]
[122.50737000 66.85367584]
[120.97998810 72.32762909]
[116.19929504 76.89452362]
[111.16238403 91.02355194]
[113.49222565 104.80989838]
[102.96664429 114.01336670]
[97.92973328 128.14239502]
[92.89281464 142.27142334]
[87.85589600 156.40045166]
[82.81898499 170.52947998]
[95.54202271 162.58439636]
[110.54176331 162.67269897]
[123.17037201 170.76704407]
[129.51473999 184.35928345]
[127.60899353 199.23771667]
[118.04365540 210.79212952]
[103.78263855 215.44223022]
[89.24488068 211.74714661]
[78.93506622 200.85183716]
[76.04782104 186.13208008]
[76.40676880 190.45933533]
[75.46479797 194.29042053]
[73.53762054 197.27729797]
[71.02156830 199.21018982]
[68.34149170 200.03196716]
[60.68088913 212.92828369]
[53.02029419 225.82461548]
[45.35969543 238.72094727]
[37.69909668 251.61726379]
[30.03850174 264.51361084]
[22.37790298 277.40991211]
[15.89840794 290.93826294]
[10.65168953 304.99075317]
[5.40497112 319.04321289]
[0.15825312 333.09567261]
[-5.08846521 347.14816284]
[8.26481915 358.10620117]
[17.05206871 372.94943237]
[20.22781944 389.87875366]
[17.42557526 406.84887695]
[9.00001812 421.81549072]
[-4.01778746 432.98147583]
[-20.04653931 439.01269531]
[-37.14677811 439.19744873]
[-41.76078796 453.47018433]
[-46.37479401 467.74291992]
[-50.98880386 482.01565552]
[-55.60281372 496.28839111]
[-60.21682358 510.56112671]
[-47.26951981 518.26275635]
[-36.36096573 528.65270996]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 208]
[25 207]
[26 206]
[27 205]
[28 204]
[29 203]
[40 195]
[41 194]
[42 193]
[43 192]
[44 191]
[57 190]
[58 189]
[59 188]
[60 187]
[61 186]
[62 185]
[63 184]
[64 179]
[65 169]
[66 168]
[67 167]
[68 166]
[69 165]
[71 163]
[72 162]
[73 159]
[74 158]
[75 157]
[77 155]
[78 154]
[79 153]
[80 152]
[81 133]
[82 132]
[83 131]
[85 130]
[86 129]
[87 128]
[88 127]
[97 118]
[98 117]
[99 116]
[100 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
