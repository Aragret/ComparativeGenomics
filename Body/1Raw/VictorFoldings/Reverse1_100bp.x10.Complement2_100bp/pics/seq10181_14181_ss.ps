%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCAUUUUCCUCCCGUUAAAGAUCUAGUUUAUUAUUCUUCCAUUAUCGAUGAUUCUUCUUAAAAUACCUCUUUCCCUGCGCCCGCCCCCUAUAUCCCAGxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[63.75806427 382.56109619]
[56.61229324 395.75650024]
[48.57318115 408.42745972]
[39.67903519 420.51361084]
[29.97224426 431.95733643]
[19.49905968 442.70410156]
[8.30939579 452.70269775]
[-3.54342437 461.90548706]
[-16.00291634 470.26861572]
[-29.00970268 477.75219727]
[-42.50180054 484.32061768]
[-56.41491699 489.94253540]
[-70.68274689 494.59115601]
[-85.23728943 498.24435425]
[-100.00919342 500.88470459]
[-114.92806244 502.49963379]
[-129.92280579 503.08145142]
[-144.92195129 502.62734985]
[-159.85403442 501.13952637]
[-174.64788818 498.62506104]
[-189.23301697 495.09594727]
[-203.53991699 490.56900024]
[-217.50039673 485.06576538]
[-231.04794312 478.61248779]
[-244.11799622 471.23992920]
[-256.64825439 462.98321533]
[-268.57901001 453.88171387]
[-279.85342407 443.97875977]
[-290.41772461 433.32156372]
[-300.22161865 421.96090698]
[-309.21838379 409.95095825]
[-317.36511230 397.34890747]
[-324.62298584 384.21484375]
[-330.95742798 370.61132812]
[-336.33825684 356.60321045]
[-340.73983765 342.25723267]
[-344.14114380 327.64178467]
[-346.52603149 312.82647705]
[-347.88311768 297.88195801]
[-348.20590210 282.87939453]
[-347.49288940 267.89031982]
[-345.74743652 252.98616028]
[-342.97790527 238.23793030]
[-339.19744873 223.71591187]
[-334.42413330 209.48931885]
[-328.68066406 195.62594604]
[-321.99441528 182.19184875]
[-314.39724731 169.25106812]
[-305.92541504 156.86524963]
[-296.61923218 145.09342957]
[-286.52307129 133.99169922]
[-275.68505859 123.61298370]
[-264.15679932 114.00672150]
[-251.99328613 105.21870422]
[-239.25244141 97.29079437]
[-225.99499512 90.26079559]
[-212.28413391 84.16219330]
[-198.18519592 79.02405548]
[-183.76536560 74.87086487]
[-169.09335327 71.72241211]
[-154.23907471 69.59371185]
[-139.27334595 68.49489594]
[-124.26745605 68.43121338]
[-109.29293060 69.40295410]
[-94.42112732 71.40549469]
[-79.72292328 74.42929077]
[-65.26835632 78.45993805]
[-51.12630463 83.47821808]
[-37.36417007 89.46022034]
[-24.04753685 96.37743378]
[-11.23986149 104.19690704]
[0.99781924 112.88137054]
[12.60718727 122.38942719]
[23.53291893 132.67578125]
[33.72294617 143.69140625]
[45.41052628 134.28926086]
[57.09811020 124.88710785]
[68.78569031 115.48495483]
[73.85260773 101.47868347]
[89.45513153 98.85728455]
[100.63710785 88.85911560]
[111.28311920 78.29206848]
[121.92912292 67.72502136]
[132.49617004 57.07901001]
[142.98367310 46.35462952]
[153.47117615 35.63024902]
[163.95867920 24.90587044]
[174.44618225 14.18148994]
[184.93368530 3.45711017]
[195.42117310 -7.26726961]
[185.50564575 -18.53201675]
[176.45967102 -30.50625801]
[168.33383179 -43.12302780]
[161.17356873 -56.31176758]
[155.01892090 -69.99871826]
[149.90432739 -84.10733032]
[145.85836792 -98.55871582]
[142.90368652 -113.27204895]
[141.05680847 -128.16503906]
[140.32804871 -143.15440369]
[140.72148132 -158.15632629]
[142.23492432 -173.08688354]
[144.85990906 -187.86259460]
[148.58174133 -202.40083313]
[153.37962341 -216.62026978]
[159.22671509 -230.44140625]
[166.09030151 -243.78694153]
[173.93203735 -256.58224487]
[182.70802307 -268.75573730]
[192.36921692 -280.23934937]
[202.86157227 -290.96887207]
[214.12640381 -300.88430786]
[226.10072327 -309.93017578]
[238.71755981 -318.05590820]
[251.90637207 -325.21606445]
[265.59338379 -331.37057495]
[279.70202637 -336.48507690]
[294.15344238 -340.53088379]
[308.86682129 -343.48544312]
[323.75982666 -345.33218384]
[338.74920654 -346.06082153]
[353.75109863 -345.66723633]
[368.68164062 -344.15368652]
[383.45733643 -341.52856445]
[397.99554443 -337.80661011]
[412.21493530 -333.00860596]
[426.03601074 -327.16137695]
[439.38150024 -320.29766846]
[452.17672729 -312.45584106]
[464.35012817 -303.67971802]
[475.83367920 -294.01843262]
[486.56311035 -283.52600098]
[496.47845459 -272.26107788]
[505.52423096 -260.28668213]
[513.64984131 -247.66975403]
[520.80987549 -234.48089600]
[526.96429443 -220.79383850]
[532.07861328 -206.68511963]
[536.12432861 -192.23367310]
[539.07873535 -177.52029419]
[540.92535400 -162.62725830]
[541.65386963 -147.63787842]
[541.26013184 -132.63598633]
[539.74645996 -117.70544434]
[537.12121582 -102.92977905]
[533.39910889 -88.39160919]
[528.60101318 -74.17224884]
[522.75366211 -60.35121918]
[515.88983154 -47.00580978]
[508.04788208 -34.21065140]
[499.27166748 -22.03730774]
[489.61026001 -10.55385303]
[479.11773682 0.17549017]
[467.85272217 10.09071922]
[455.87823486 19.13638306]
[443.26126099 27.26189232]
[430.07232666 34.42181015]
[416.38522339 40.57608795]
[402.27645874 45.69031525]
[387.82498169 49.73588562]
[373.11157227 52.69017792]
[358.21850586 54.53667068]
[343.22912598 55.26503372]
[328.22723389 54.87119293]
[313.29672241 53.35735703]
[298.52105713 50.73198700]
[283.98294067 47.00976562]
[269.76361084 42.21151352]
[255.94262695 36.36405945]
[242.59729004 29.50010681]
[229.80220032 21.65804291]
[217.62892151 12.88172436]
[206.14555359 3.22023153]
[195.65806580 13.94461155]
[185.17056274 24.66899109]
[174.68305969 35.39337158]
[164.19555664 46.11775208]
[153.70805359 56.84212875]
[143.22055054 67.56651306]
[140.79142761 74.54656219]
[132.49617004 78.37102509]
[121.85016632 88.93807220]
[111.20415497 99.50511932]
[126.20412445 99.47318268]
[137.79551697 108.99365234]
[140.67892456 123.71391296]
[133.53607178 136.90405273]
[119.63259125 142.53370667]
[105.32495880 138.02909851]
[97.15442657 125.44965363]
[98.85728455 110.54486847]
[92.95439148 125.22364044]
[78.18784332 127.17253876]
[66.50025940 136.57469177]
[54.81267929 145.97683716]
[43.12509537 155.37898254]
[51.70211411 167.69221497]
[59.40918732 180.56784058]
[66.20958710 193.94450378]
[72.07090759 207.75846863]
[76.96521759 221.94389343]
[80.86919403 236.43318176]
[83.76422882 251.15730286]
[85.63653564 266.04605103]
[86.47717285 281.02850342]
[86.28215027 296.03326416]
[85.05239105 310.98880005]
[82.79376221 325.82388306]
[79.51702118 340.46777344]
[75.23777771 354.85070801]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[75 196]
[76 195]
[77 194]
[78 193]
[80 191]
[81 183]
[82 182]
[83 181]
[84 179]
[85 178]
[86 177]
[87 176]
[88 175]
[89 174]
[90 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
