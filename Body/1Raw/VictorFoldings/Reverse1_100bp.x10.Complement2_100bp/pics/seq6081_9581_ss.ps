%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxGGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUU\
) } def
/len { sequence length } bind def

/coor [
[79.96497345 614.46643066]
[69.06441498 603.87176514]
[63.05258942 589.91015625]
[62.84626770 574.71063232]
[68.47689819 560.59100342]
[79.08586121 549.70434570]
[93.05536652 543.71093750]
[92.83203888 528.71258545]
[92.60871124 513.71423340]
[92.38538361 498.71591187]
[79.19698334 495.24951172]
[67.34674072 488.47680664]
[57.64796066 478.85494995]
[50.76824951 467.03695679]
[47.18357086 453.82733154]
[47.14534378 440.12728882]
[50.66279221 426.87319946]
[57.50186920 414.97277832]
[67.20083618 405.24273682]
[79.10141754 398.35284424]
[92.39345551 394.77981567]
[92.61678314 379.78146362]
[92.84011078 364.78314209]
[93.06343842 349.78479004]
[93.28676605 334.78643799]
[93.51009369 319.78811646]
[91.65666962 317.68502808]
[90.52463531 314.72106934]
[90.44605255 311.16729736]
[91.64881897 307.40991211]
[94.21976471 303.91076660]
[95.33541107 288.95230103]
[96.45106506 273.99383545]
[96.89766693 259.00048828]
[96.67433929 244.00216675]
[96.33936310 229.00590515]
[95.89276123 214.01255798]
[95.44615173 199.01919556]
[94.99954987 184.02584839]
[86.88673401 171.53459167]
[94.20972443 157.51016235]
[93.76312256 142.51681519]
[79.60613251 137.82418823]
[67.90582275 128.57521057]
[60.07160950 115.88401794]
[57.04721451 101.27943420]
[59.19696426 86.52072144]
[66.26189423 73.38573456]
[77.39096069 63.45674133]
[91.24353027 57.92978668]
[90.79692841 42.93643570]
[90.35031891 27.94308662]
[89.90370941 12.94973755]
[77.87451172 21.91067123]
[63.33036423 18.24081993]
[56.99267578 4.64546490]
[63.53335571 -8.85340691]
[78.13085175 -12.30492878]
[90.02368927 -3.16623831]
[90.69347382 -18.15127754]
[91.36325836 -33.13631439]
[92.03304291 -48.12135315]
[92.70283508 -63.10639191]
[93.26103973 -78.09600067]
[93.59601593 -93.09226227]
[93.81934357 -108.09059906]
[94.04267120 -123.08893585]
[86.51169586 -137.00277710]
[94.43762970 -149.61343384]
[94.66095734 -164.61178589]
[94.88428497 -179.61012268]
[85.54484558 -195.48010254]
[95.12553406 -210.18305969]
[95.12553406 -225.18305969]
[95.12553406 -240.18305969]
[80.18946838 -241.70127869]
[65.48363495 -244.72276306]
[51.15893555 -249.21655273]
[37.36236954 -255.13648987]
[24.23551178 -262.42184448]
[11.91306305 -270.99789429]
[0.52147263 -280.77658081]
[-9.82236195 -291.65756226]
[-19.01229668 -303.52923584]
[-26.95402908 -316.26971436]
[-33.56606293 -329.74829102]
[-38.78054428 -343.82662964]
[-42.54396820 -358.36032104]
[-44.81771851 -373.20016479]
[-45.57845306 -388.19390869]
[-44.81837845 -403.18768311]
[-42.54528046 -418.02761841]
[-38.78249741 -432.56146240]
[-33.56863403 -446.64004517]
[-26.95719337 -460.11892700]
[-19.01602364 -472.85974121]
[-9.82661057 -484.73181152]
[0.51674521 -495.61325073]
[11.90790462 -505.39245605]
[24.22997665 -513.96899414]
[37.35651398 -521.25494385]
[51.15282059 -527.17553711]
[65.47731781 -531.66992188]
[80.18302155 -534.69207764]
[95.11901855 -536.21093750]
[110.13204956 -536.21093750]
[125.06804657 -534.69207764]
[139.77375793 -531.66992188]
[154.09825134 -527.17553711]
[167.89456177 -521.25494385]
[181.02110291 -513.96899414]
[193.34317017 -505.39245605]
[204.73432922 -495.61325073]
[215.07768250 -484.73181152]
[224.26708984 -472.85974121]
[232.20826721 -460.11892700]
[238.81970215 -446.64004517]
[244.03356934 -432.56146240]
[247.79635620 -418.02761841]
[250.06944275 -403.18768311]
[250.82952881 -388.19390869]
[250.06878662 -373.20016479]
[247.79504395 -358.36032104]
[244.03161621 -343.82662964]
[238.81713867 -329.74829102]
[232.20509338 -316.26971436]
[224.26336670 -303.52923584]
[215.07344055 -291.65756226]
[204.72959900 -280.77658081]
[193.33801270 -270.99789429]
[181.01556396 -262.42184448]
[167.88870239 -255.13648987]
[154.09213257 -249.21655273]
[139.76744080 -244.72276306]
[125.06159973 -241.70127869]
[110.12553406 -240.18305969]
[110.12553406 -225.18305969]
[110.12553406 -210.18305969]
[118.45449066 -201.41065979]
[118.57725525 -188.91390991]
[109.88262177 -179.38679504]
[109.65929413 -164.38845825]
[109.43596649 -149.39010620]
[116.98291779 -136.54905701]
[109.04100800 -122.86560822]
[108.81768036 -107.86727142]
[108.59435272 -92.86893463]
[111.63792419 -86.13406372]
[108.25439453 -77.64939880]
[111.19734955 -70.86995697]
[107.68787384 -62.43660736]
[107.01808167 -47.45156860]
[106.34829712 -32.46652985]
[105.67851257 -17.48149109]
[105.00872803 -2.49645305]
[104.89706421 12.50313091]
[105.34366608 27.49648094]
[105.79027557 42.48983002]
[106.23687744 57.48318100]
[120.39386749 62.17581558]
[132.09417725 71.42479706]
[139.92839050 84.11598206]
[142.95278931 98.72056580]
[140.80303955 113.47927856]
[133.73809814 126.61426544]
[122.60903931 136.54325867]
[108.75646973 142.07020569]
[109.20307159 157.06356812]
[117.34782410 170.62724304]
[109.99289703 183.57925415]
[110.43949890 198.57260132]
[110.88610840 213.56594849]
[111.33271027 228.55929565]
[114.71623993 237.04396057]
[111.67267609 243.77883911]
[111.89600372 258.77716064]
[123.09343719 248.79631042]
[138.07601929 249.51885986]
[148.26106262 260.53088379]
[147.81410217 275.52423096]
[136.99116516 285.91000366]
[121.99214935 285.73876953]
[111.40951538 275.10949707]
[110.29386902 290.06796265]
[109.17821503 305.02639771]
[108.50843048 320.01144409]
[108.28510284 335.00976562]
[108.06177521 350.00811768]
[107.83844757 365.00646973]
[107.61511993 380.00479126]
[107.39179230 395.00314331]
[123.01853180 400.15170288]
[136.27745056 409.86203003]
[145.88006592 423.17620850]
[150.89761353 438.78677368]
[150.85083008 455.16519165]
[145.75582886 470.71142578]
[136.12129211 483.91030884]
[122.89772034 493.47918701]
[107.38372040 498.49258423]
[107.60704803 513.49090576]
[107.83037567 528.48925781]
[108.05370331 543.48760986]
[122.19545746 549.06243896]
[133.12385559 559.62835693]
[139.17239380 573.57409668]
[139.41870117 588.77307129]
[133.82522583 602.90747070]
[123.24494934 613.82196045]
[109.29125977 619.85211182]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 203]
[8 202]
[9 201]
[10 200]
[21 191]
[22 190]
[23 189]
[24 188]
[25 187]
[26 186]
[31 185]
[32 184]
[33 183]
[34 176]
[35 175]
[36 173]
[37 172]
[38 171]
[39 170]
[41 168]
[42 167]
[50 159]
[51 158]
[52 157]
[53 156]
[59 155]
[60 154]
[61 153]
[62 152]
[63 151]
[64 149]
[65 147]
[66 146]
[67 145]
[69 143]
[70 142]
[71 141]
[73 138]
[74 137]
[75 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
