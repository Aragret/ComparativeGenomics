%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGAUAAUACUCAGGAUCAACUGAACUUCACCUCUUCCGAUGCUAAAAAAACUACAGUAAAACACAUUCCCGCGUCUGACGACGCUUGUCUCACCACUAUxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[-46.44320297 376.05920410]
[-38.82046127 389.00811768]
[-33.11821365 402.91009521]
[-29.45254517 417.48211670]
[-27.89808464 432.42749023]
[-28.48648262 447.44195557]
[-31.20575714 462.21987915]
[-36.00054550 476.46032715]
[-42.77323914 489.87344360]
[-51.38594437 502.18612671]
[-61.66332626 513.14770508]
[-73.39614868 522.53503418]
[-86.34554291 530.15692139]
[-100.24787903 535.85833740]
[-114.82012177 539.52313232]
[-129.76559448 541.07666016]
[-144.78004456 540.48730469]
[-159.55776978 537.76715088]
[-173.79792786 532.97143555]
[-187.21061707 526.19793701]
[-199.52276611 517.58447266]
[-210.48370361 507.30639648]
[-219.87030029 495.57299805]
[-227.49143982 482.62313843]
[-233.19195557 468.72045898]
[-236.85583496 454.14797974]
[-238.40843201 439.20239258]
[-237.81817627 424.18798828]
[-235.09707642 409.41043091]
[-230.30052185 395.17056274]
[-223.52616882 381.75830078]
[-214.91194153 369.44668579]
[-204.63320923 358.48638916]
[-192.89921570 349.10052490]
[-179.94888306 341.48019409]
[-166.04583740 335.78051758]
[-151.47314453 332.11755371]
[-136.52748108 330.56585693]
[-121.51310730 331.15704346]
[-106.73571777 333.87905884]
[-92.49614716 338.67651367]
[-79.08429718 345.45169067]
[-70.48573303 333.16085815]
[-61.88716888 320.86999512]
[-69.98351288 308.32495117]
[-72.66730499 293.59597778]
[-69.49894714 278.92196655]
[-60.93081284 266.54559326]
[-48.24293518 258.37054443]
[-33.35189056 255.66874695]
[-18.52127075 258.88253784]
[-9.92270660 246.59170532]
[-1.32414305 234.30085754]
[7.27442074 222.01002502]
[15.87298489 209.71919250]
[24.47154808 197.42834473]
[18.62634468 182.08850098]
[23.12131500 166.12738037]
[36.37565231 155.88903809]
[53.28692627 155.56513977]
[61.70154190 143.14764404]
[70.11616516 130.73014832]
[78.53078461 118.31264496]
[86.94539642 105.89514923]
[88.14216614 91.96463013]
[100.63710785 85.69023132]
[86.68598175 91.20079041]
[71.76241302 89.68853760]
[59.20034409 81.49131012]
[51.80618668 68.44039154]
[51.23180771 53.45139313]
[57.60552979 39.87289429]
[69.50344086 30.73836327]
[84.26752472 28.08848000]
[98.59944153 32.51523590]
[109.29740906 43.02967834]
[113.97146606 57.28285980]
[111.57741547 72.09059906]
[121.90408325 61.21126556]
[132.23075867 50.33193207]
[142.55741882 39.45259476]
[152.88409424 28.57326126]
[163.21075439 17.69392776]
[148.37667847 15.46910286]
[140.73538208 2.56133080]
[145.91975403 -11.51426029]
[160.10806274 -16.38166809]
[172.84123230 -8.45281982]
[174.73333740 6.42586184]
[185.84057617 -3.65527725]
[190.85929871 -18.65937424]
[205.48367310 -21.48373413]
[216.59091187 -31.56487274]
[227.69813538 -41.64601135]
[238.80537415 -51.72714996]
[229.64541626 -63.61586761]
[221.47181702 -76.20310974]
[214.33758545 -89.40723419]
[208.28898621 -103.14261627]
[203.36524963 -117.32017517]
[199.59829712 -131.84796143]
[197.01257324 -146.63174438]
[195.62484741 -161.57565308]
[195.44410706 -176.58277893]
[196.47154236 -191.55577087]
[198.70046997 -206.39755249]
[202.11645508 -221.01184082]
[206.69732666 -235.30386353]
[212.41337585 -249.18092346]
[219.22755432 -262.55303955]
[227.09564209 -275.33346558]
[235.96661377 -287.43933105]
[245.78294373 -298.79214478]
[256.48098755 -309.31820679]
[267.99133301 -318.94934082]
[280.23931885 -327.62301636]
[293.14556885 -335.28298950]
[306.62634277 -341.87960815]
[320.59417725 -347.37008667]
[334.95855713 -351.71878052]
[349.62628174 -354.89755249]
[364.50219727 -356.88571167]
[379.48989868 -357.67041016]
[394.49209595 -357.24658203]
[409.41159058 -355.61691284]
[424.15151978 -352.79199219]
[438.61636353 -348.79016113]
[452.71228027 -343.63735962]
[466.34786987 -337.36700439]
[479.43469238 -330.01977539]
[491.88784790 -321.64331055]
[503.62658691 -312.29196167]
[514.57476807 -302.02630615]
[524.66143799 -290.91299438]
[533.82116699 -279.02407837]
[541.99444580 -266.43667603]
[549.12841797 -253.23237610]
[555.17669678 -239.49687195]
[560.10015869 -225.31919861]
[563.86676025 -210.79133606]
[566.45214844 -196.00749207]
[567.83953857 -181.06355286]
[568.01995850 -166.05642700]
[566.99218750 -151.08345032]
[564.76293945 -136.24172974]
[561.34661865 -121.62751007]
[556.76544189 -107.33559418]
[551.04907227 -93.45864868]
[544.23461914 -80.08668518]
[536.36627197 -67.30641937]
[527.49499512 -55.20074844]
[517.67840576 -43.84817505]
[506.98016357 -33.32232666]
[495.46960449 -23.69146919]
[483.22140503 -15.01806450]
[470.31500244 -7.35836220]
[456.83410645 -0.76203966]
[442.86611938 4.72812271]
[428.50164795 9.07651901]
[413.83386230 12.25494766]
[398.95788574 14.24279499]
[383.97018433 15.02716827]
[368.96798706 14.60298061]
[354.04855347 12.97298431]
[339.30865479 10.14774990]
[324.84390259 6.14559984]
[310.74807739 0.99249029]
[297.11264038 -5.27815819]
[284.02600098 -12.62567711]
[271.57302856 -21.00241470]
[259.83447266 -30.35404396]
[248.88650513 -40.61991501]
[237.77928162 -30.53877831]
[226.67204285 -20.45763969]
[215.56480408 -10.37650013]
[211.34054565 3.90652657]
[195.92170715 7.45195675]
[184.81446838 17.53309441]
[174.09008789 28.02059555]
[163.76342773 38.89992905]
[153.43675232 49.77926636]
[143.11009216 60.65859985]
[132.78341675 71.53793335]
[122.45674896 82.41726685]
[113.05460358 94.10485077]
[111.85783386 108.03536987]
[99.36289215 114.30976868]
[90.94827271 126.72726440]
[82.53366089 139.14476013]
[74.11904144 151.56225586]
[65.70442200 163.97975159]
[71.34236145 176.55767822]
[70.03945923 190.17094421]
[62.24247742 201.27395630]
[50.07553482 207.02804565]
[36.76238632 206.02691650]
[28.16382217 218.31774902]
[19.56525803 230.60859680]
[10.96669483 242.89942932]
[2.36813092 255.19026184]
[-6.23043299 267.48110962]
[1.87253153 280.31143188]
[4.43904161 295.22640991]
[1.10869157 309.94790649]
[-7.58065367 322.23947144]
[-20.27944565 330.24606323]
[-35.03598022 332.77392578]
[-49.59632874 329.46856689]
[-58.19489288 341.75939941]
[-66.79345703 354.05026245]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 210]
[43 209]
[44 208]
[51 201]
[52 200]
[53 199]
[54 198]
[55 197]
[56 196]
[60 191]
[61 190]
[62 189]
[63 188]
[64 187]
[66 185]
[78 184]
[79 183]
[80 182]
[81 181]
[82 180]
[83 179]
[89 178]
[90 177]
[92 175]
[93 174]
[94 173]
[95 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
