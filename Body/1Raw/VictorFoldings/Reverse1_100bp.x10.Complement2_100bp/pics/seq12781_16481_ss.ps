%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUGGCUAUAGCGGCUAUGCCAACAUAUCCUAACGAACUUACCGACGACACAACCGUAGACGAGCCCGCAUAGUAGUUGACUACUCGUUCUUCCUAUAUUxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[50.27270508 815.49029541]
[35.30923080 816.62127686]
[20.30331039 816.70568848]
[5.32805729 815.74316406]
[-9.54357147 813.73828125]
[-24.23912430 810.70092773]
[-38.68700027 806.64587402]
[-52.81681442 801.59283447]
[-66.55973053 795.56646729]
[-79.84878540 788.59613037]
[-92.61923981 780.71575928]
[-104.80887604 771.96380615]
[-116.35830688 762.38281250]
[-127.21126556 752.01947021]
[-137.31486511 740.92437744]
[-146.61990356 729.15148926]
[-155.08103943 716.75817871]
[-162.65704346 703.80480957]
[-169.31100464 690.35455322]
[-175.01051331 676.47290039]
[-179.72779846 662.22747803]
[-183.43988037 647.68774414]
[-186.12867737 632.92443848]
[-187.78106689 618.00952148]
[-188.38902283 603.01568604]
[-187.94958496 588.01593018]
[-186.46487427 573.08343506]
[-183.94213867 558.29083252]
[-180.39367676 543.71026611]
[-175.83674622 529.41271973]
[-170.29357910 515.46795654]
[-163.79115295 501.94375610]
[-156.36117554 488.90609741]
[-148.03984070 476.41851807]
[-138.86767578 464.54180908]
[-128.88935852 453.33386230]
[-118.15353394 442.84927368]
[-106.71248627 433.13909912]
[-94.62196350 424.25070190]
[-81.94085693 416.22732544]
[-68.73096466 409.10812378]
[-55.05663300 402.92770386]
[-40.98448563 397.71624756]
[-26.58308411 393.49908447]
[-11.92258930 390.29681396]
[2.92557454 388.12500000]
[17.88906670 386.99423218]
[32.89498520 386.91003418]
[47.87022781 387.87280273]
[49.87424088 373.00726318]
[51.87825394 358.14175415]
[53.88226700 343.27621460]
[47.91470718 329.62933350]
[57.42635727 316.98660278]
[59.43037033 302.12106323]
[61.43438721 287.25552368]
[50.05758667 281.87738037]
[40.63716888 273.50701904]
[33.93901062 262.81155396]
[30.51144600 250.64759827]
[30.64039040 237.99269104]
[34.32550812 225.86685181]
[41.27943420 215.25019836]
[50.95016098 207.00387573]
[62.56484222 201.80010986]
[75.19155121 200.06744385]
[77.85734558 185.30622864]
[80.52313995 170.54501343]
[73.70796967 154.37341309]
[85.71914673 140.41587830]
[88.16487122 125.61660004]
[90.61060333 110.81732941]
[85.86773682 97.66450500]
[94.59012604 86.73694611]
[92.90181732 77.75989532]
[97.18401337 71.73622131]
[90.48429871 60.71457672]
[93.00853729 48.47480392]
[102.86934662 41.46830750]
[105.75461578 26.74841499]
[108.63989258 12.02852345]
[111.52516174 -2.69136834]
[109.74728394 -9.05930996]
[111.22969055 -14.54561138]
[114.72170258 -17.80365753]
[118.04396057 -32.43111801]
[121.36622620 -47.05857849]
[124.68848419 -61.68603897]
[128.01074219 -76.31349945]
[131.33300781 -90.94095612]
[134.65525818 -105.56842041]
[137.97752380 -120.19587708]
[140.31300354 -135.01293945]
[141.65124512 -149.95312500]
[142.98947144 -164.89331055]
[144.32771301 -179.83349609]
[145.66593933 -194.77368164]
[131.49443054 -199.95353699]
[119.14701080 -208.62553406]
[109.46553802 -220.19841003]
[103.11011505 -233.88310242]
[100.51406860 -248.74658203]
[101.85439301 -263.77542114]
[107.03970337 -277.94491577]
[115.71646881 -290.28900146]
[127.29308319 -299.96600342]
[140.98023987 -306.31613159]
[155.84471130 -308.90646362]
[170.87303162 -307.56033325]
[185.04054260 -302.36953735]
[197.38125610 -293.68801880]
[207.05378723 -282.10766602]
[213.39865112 -268.41806030]
[215.98321533 -253.55258179]
[214.63128662 -238.52478027]
[209.43502808 -224.35928345]
[200.74873352 -212.02191162]
[189.16465759 -202.35385132]
[175.47261047 -196.01428223]
[160.60612488 -193.43545532]
[159.26789856 -178.49526978]
[157.92965698 -163.55508423]
[156.59143066 -148.61489868]
[155.25318909 -133.67471313]
[165.58123779 -144.55274963]
[180.12515259 -148.22349548]
[194.37835693 -143.54953003]
[203.92434692 -131.97912598]
[205.80519104 -117.09751129]
[199.43807983 -103.51590729]
[186.79594421 -95.44272614]
[171.79606628 -95.37953186]
[159.08634949 -103.34589386]
[152.60498047 -116.87361908]
[149.28271484 -102.24616241]
[145.96046448 -87.61869812]
[142.63819885 -72.99124146]
[139.31594849 -58.36377716]
[135.99368286 -43.73631668]
[132.67141724 -29.10885811]
[129.34916687 -14.48139763]
[126.24505615 0.19390437]
[123.35977936 14.91379547]
[120.47451019 29.63368797]
[117.58923340 44.35357666]
[124.16287994 60.62484360]
[111.94522858 74.40201569]
[109.38939667 89.18267059]
[114.13226318 102.33549500]
[105.40987396 113.26305389]
[102.96414948 128.06233215]
[100.51841736 142.86160278]
[107.38148499 153.78227234]
[105.03975677 166.05827332]
[95.28436279 173.21080017]
[92.61856842 187.97201538]
[89.95276642 202.73324585]
[104.95084381 211.89755249]
[115.25868988 226.09039307]
[119.31737518 243.11917114]
[116.53080750 260.36602783]
[107.35308075 275.19021606]
[93.21475220 285.33255005]
[76.29991150 289.25955200]
[74.29589844 304.12506104]
[72.29188538 318.99060059]
[78.11611176 333.70077515]
[68.74779510 345.28024292]
[66.74378204 360.14575195]
[64.73976898 375.01129150]
[62.73575592 389.87683105]
[77.43135071 392.91397095]
[91.87928772 396.96881104]
[106.00917053 402.02163696]
[119.75217438 408.04782104]
[133.04132080 415.01797485]
[145.81188965 422.89816284]
[158.00164795 431.64996338]
[169.55122375 441.23080444]
[180.40432739 451.59393311]
[190.50810242 462.68893433]
[199.81330872 474.46170044]
[208.27461243 486.85485840]
[215.85079956 499.80810547]
[222.50495911 513.25823975]
[228.20466614 527.13983154]
[232.92216492 541.38519287]
[236.63444519 555.92492676]
[239.32344055 570.68817139]
[240.97605896 585.60302734]
[241.58422852 600.59686279]
[241.14500427 615.59661865]
[239.66050720 630.52917480]
[237.13798523 645.32177734]
[233.58972168 659.90240479]
[229.03300476 674.20001221]
[223.49003601 688.14489746]
[216.98780823 701.66912842]
[209.55801392 714.70690918]
[201.23684692 727.19464111]
[192.06484985 739.07147217]
[182.08671570 750.27954102]
[171.35102844 760.76428223]
[159.91012573 770.47460938]
[147.81971741 779.36322021]
[135.13873291 787.38671875]
[121.92894745 794.50616455]
[108.25469971 800.68676758]
[94.18263245 805.89843750]
[79.78128815 810.11578369]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 171]
[50 170]
[51 169]
[52 168]
[54 166]
[55 165]
[56 164]
[66 157]
[67 156]
[68 155]
[70 152]
[71 151]
[72 150]
[74 148]
[76 147]
[79 145]
[80 144]
[81 143]
[82 142]
[85 141]
[86 140]
[87 139]
[88 138]
[89 137]
[90 136]
[91 135]
[92 134]
[93 124]
[94 123]
[95 122]
[96 121]
[97 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
