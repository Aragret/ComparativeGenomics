%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAACUAACAAUCGCCACACCAGCCCACACAAUAAUAAGACUUAAAACCCCCUCCAAUAUACCCAAAUUAUCAAAAAAAUUAAAUAAAUCCCCCUUACUACxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[248.71670532 258.29495239]
[255.12268066 244.72065735]
[262.70330811 231.76567078]
[250.47680664 223.07585144]
[238.25032043 214.38601685]
[226.02383423 205.69619751]
[213.79734802 197.00637817]
[201.57086182 188.31654358]
[198.05204773 188.54074097]
[194.24981689 187.07170105]
[190.96118164 183.79478455]
[189.00421143 178.95564270]
[177.17794800 169.72853088]
[162.93821716 174.01432800]
[148.73733521 169.03445435]
[140.09068298 156.50094604]
[140.48672485 141.10128784]
[128.66044617 131.87419128]
[116.83418274 122.64709473]
[105.00791168 113.41999054]
[91.18876648 111.29325867]
[85.76499176 98.40627289]
[73.93872070 89.17917633]
[64.56607056 94.15050507]
[54.11120987 95.71481323]
[43.76900101 93.71903229]
[34.71288681 88.41550446]
[27.96175194 80.43039703]
[24.26532364 70.68984985]
[24.02094650 60.31261444]
[27.23104095 50.48154068]
[15.97494507 40.56689072]
[4.71884966 30.65223885]
[-6.53724623 20.73758698]
[-17.79334259 10.82293606]
[-29.04943848 0.90828466]
[-44.51935196 -2.40718889]
[-48.95580292 -16.62574005]
[-60.21189880 -26.54039001]
[-71.01686859 -16.12379646]
[-82.63494110 -6.62257528]
[-94.98879242 1.90004325]
[-107.99622345 9.38734150]
[-121.57065582 15.78949261]
[-135.62176514 21.06389046]
[-150.05603027 25.17543411]
[-164.77738953 28.09676170]
[-179.68789673 29.80843163]
[-194.68829346 30.29905319]
[-209.67877197 29.56536102]
[-224.55957031 27.61223793]
[-239.23165894 24.45268059]
[-253.59738159 20.10771942]
[-267.56115723 14.60626602]
[-281.03002930 7.98493385]
[-293.91439819 0.28778696]
[-306.12847900 -8.43395042]
[-317.59103394 -18.12223625]
[-328.22573853 -28.71259499]
[-337.96185303 -40.13454819]
[-346.73455811 -52.31208420]
[-354.48547363 -65.16416168]
[-361.16305542 -78.60525513]
[-366.72280884 -92.54590607]
[-371.12777710 -106.89334869]
[-374.34863281 -121.55210114]
[-376.36392212 -136.42460632]
[-377.16024780 -151.41188049]
[-376.73233032 -166.41421509]
[-375.08300781 -181.33172607]
[-372.22320557 -196.06517029]
[-368.17202759 -210.51649475]
[-362.95642090 -224.58952332]
[-356.61105347 -238.19059753]
[-349.17816162 -251.22920227]
[-340.70727539 -263.61856079]
[-331.25466919 -275.27624512]
[-320.88333130 -286.12466431]
[-309.66226196 -296.09161377]
[-297.66610718 -305.11074829]
[-284.97470093 -313.12210083]
[-271.67254639 -320.07229614]
[-257.84814453 -325.91513062]
[-243.59349060 -330.61166382]
[-229.00344849 -334.13070679]
[-214.17512512 -336.44879150]
[-199.20718384 -337.55050659]
[-184.19926453 -337.42852783]
[-169.25120544 -336.08364868]
[-154.46252441 -333.52484131]
[-139.93161011 -329.76913452]
[-125.75518036 -324.84149170]
[-112.02756500 -318.77474976]
[-98.84013367 -311.60925293]
[-86.28064728 -303.39266968]
[-74.43267822 -294.17971802]
[-63.37508011 -284.03170776]
[-53.18143845 -273.01614380]
[-43.91959381 -261.20635986]
[-35.65118027 -248.68093872]
[-28.43122864 -235.52323914]
[-22.30778122 -221.82081604]
[-17.32159042 -207.66488647]
[-13.50584221 -193.14961243]
[-10.88592720 -178.37162781]
[-9.47928143 -163.42927551]
[-9.29526615 -148.42198181]
[-10.33510685 -133.44961548]
[-12.59188175 -118.61183167]
[-16.05057335 -104.00737762]
[-20.68816376 -89.73342896]
[-26.47379112 -75.88498688]
[-33.36894989 -62.55421066]
[-41.32775879 -49.82981873]
[-50.29724503 -37.79648590]
[-39.04114914 -27.88183403]
[-24.37634850 -25.27552414]
[-19.13478661 -10.34781075]
[-7.87869072 -0.43315992]
[3.37740517 9.48149109]
[14.63350105 19.39614296]
[25.88959694 29.31079292]
[37.14569092 39.22544479]
[55.90236664 33.67553711]
[74.33815765 40.63277817]
[84.90548706 57.43521500]
[83.16581726 77.35290527]
[94.99208832 86.58000946]
[108.81123352 88.70674133]
[114.23500824 101.59372711]
[126.06127930 110.82082367]
[137.88754272 120.04792023]
[149.71382141 129.27502441]
[164.55477905 125.14559937]
[178.81488037 130.48440552]
[187.09895325 143.04776001]
[186.40504456 157.90226746]
[198.23132324 167.12936401]
[210.26069641 176.09005737]
[222.48718262 184.77989197]
[234.71366882 193.46971130]
[246.94015503 202.15953064]
[259.16662598 210.84936523]
[271.39312744 219.53918457]
[281.13562012 208.12072754]
[291.84918213 197.60801697]
[303.44995117 188.08329773]
[315.84710693 179.62115479]
[328.94366455 172.28779602]
[342.63708496 166.14060974]
[356.82022095 161.22772217]
[371.38204956 157.58758545]
[386.20861816 155.24867249]
[401.18386841 154.22930908]
[416.19061279 154.53744507]
[431.11141968 156.17070007]
[445.82946777 159.11627197]
[460.22961426 163.35112000]
[474.19909668 168.84208679]
[487.62863159 175.54620361]
[500.41311646 183.41099548]
[512.45245361 192.37492371]
[523.65246582 202.36781311]
[533.92541504 213.31146240]
[543.19097900 225.12022400]
[551.37664795 237.70167542]
[558.41827393 250.95735168]
[564.26080322 264.78350830]
[568.85852051 279.07189941]
[572.17541504 293.71075439]
[574.18554688 308.58547974]
[574.87316895 323.57962036]
[574.23291016 338.57586670]
[572.26971436 353.45684814]
[568.99908447 368.10610962]
[564.44647217 382.40896606]
[558.64764404 396.25347900]
[551.64788818 409.53131104]
[543.50201416 422.13854980]
[534.27374268 433.97650146]
[524.03540039 444.95254517]
[512.86700439 454.98074341]
[500.85601807 463.98263550]
[488.09643555 471.88775635]
[474.68814087 478.63424683]
[460.73605347 484.16928101]
[446.34936523 488.44955444]
[431.64065552 491.44158936]
[416.72509766 493.12191772]
[401.71939087 493.47744751]
[386.74099731 492.50537109]
[371.90710449 490.21328735]
[357.33386230 486.61914062]
[343.13528442 481.75103760]
[329.42251587 475.64712524]
[316.30288696 468.35516357]
[303.87908936 459.93218994]
[292.24832153 450.44415283]
[281.50161743 439.96530151]
[271.72311401 428.57766724]
[262.98931885 416.37036133]
[255.36857605 403.43890381]
[248.92057800 389.88455200]
[243.69573975 375.81335449]
[239.73498535 361.33541870]
[237.06930542 346.56411743]
[235.71954346 331.61502075]
[235.69628906 316.60510254]
[236.99971008 301.65188599]
[239.61961365 286.87237549]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 144]
[4 143]
[5 142]
[6 141]
[7 140]
[8 139]
[12 138]
[13 137]
[17 133]
[18 132]
[19 131]
[20 130]
[22 128]
[23 127]
[31 123]
[32 122]
[33 121]
[34 120]
[35 119]
[36 118]
[38 116]
[39 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
