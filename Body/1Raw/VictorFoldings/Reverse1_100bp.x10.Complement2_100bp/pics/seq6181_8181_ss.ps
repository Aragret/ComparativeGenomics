%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxGACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUG\
) } def
/len { sequence length } bind def

/coor [
[149.42462158 709.65930176]
[134.52503967 707.32403564]
[120.67464447 701.35601807]
[108.74407959 692.13037109]
[99.48331451 680.22705078]
[93.47447205 666.39428711]
[91.09529114 651.50164795]
[92.49532318 636.48535156]
[97.58655548 622.28918457]
[106.04895782 609.80566406]
[117.35057068 599.81945801]
[130.78096008 592.95831299]
[145.49589539 589.65350342]
[145.94250488 574.66015625]
[146.38909912 559.66680908]
[146.83570862 544.67346191]
[145.94290161 529.70007324]
[136.40322876 518.26135254]
[142.00778198 503.46612549]
[139.78266907 488.63208008]
[137.55755615 473.79803467]
[135.33242798 458.96398926]
[133.16090393 457.19125366]
[131.56074524 454.45150757]
[130.90377808 450.95812988]
[131.47781372 447.05493164]
[133.44383240 443.18338013]
[132.10559082 428.24319458]
[130.76736450 413.30300903]
[129.42912292 398.36282349]
[117.87034607 389.03918457]
[116.30035400 373.90676880]
[126.15821838 361.84609985]
[124.81998444 346.90591431]
[110.13926697 344.03295898]
[96.84951019 337.13269043]
[86.03168488 326.75674438]
[78.56842041 313.73980713]
[75.07196045 299.13259888]
[75.83399200 284.11688232]
[80.80129242 269.91003418]
[89.57936096 257.66625977]
[101.46376038 248.38275146]
[115.49659729 242.81861877]
[114.15836334 227.87843323]
[112.82012939 212.93824768]
[111.48189545 197.99806213]
[110.14365387 183.05789185]
[107.80817413 168.24081421]
[104.48590851 153.61335754]
[101.16365051 138.98590088]
[97.84139252 124.35843658]
[94.51913452 109.73097229]
[91.08807373 95.12865448]
[87.54840088 80.55227661]
[76.95960236 73.18748474]
[74.31148529 60.97391891]
[80.49063873 50.57465744]
[77.16837311 35.94719696]
[73.84611511 21.31973839]
[67.89905548 35.09044647]
[55.92264175 44.12181091]
[41.04748154 46.05305099]
[27.16191101 40.37934875]
[17.89558220 28.58379364]
[15.67068863 13.74971676]
[21.06881523 -0.24529062]
[32.67890167 -9.74296665]
[47.46610260 -12.26064205]
[61.56507874 -7.14020157]
[71.29000854 4.27908325]
[70.17435455 -10.67936993]
[68.94738007 -25.62910461]
[67.60914612 -40.56929016]
[66.27091217 -55.50947571]
[56.63676834 -60.09281540]
[49.82623291 -68.19983673]
[47.01686859 -78.32460785]
[48.65101242 -88.62229919]
[54.36759949 -97.24529266]
[63.07925415 -102.67466736]
[62.40946960 -117.65970612]
[61.73968506 -132.64474487]
[53.39389420 -146.08566284]
[60.55517197 -159.14572144]
[59.88538742 -174.13076782]
[59.21560287 -189.11579895]
[55.98523712 -194.88436890]
[56.13113022 -200.56553650]
[58.75569916 -204.55561829]
[58.53237152 -219.55395508]
[58.30904388 -234.55229187]
[43.59377289 -237.80152893]
[30.02474785 -244.35731506]
[18.33372498 -253.86608887]
[9.15118694 -265.81503296]
[2.97233605 -279.55981445]
[0.13039057 -294.35913086]
[0.77861291 -309.41491699]
[4.88204527 -323.91522217]
[12.21939468 -337.07803345]
[22.39496803 -348.19354248]
[34.86000824 -356.66229248]
[48.94229126 -362.02752686]
[63.88237762 -363.99996948]
[78.87456512 -362.47323608]
[93.11035156 -357.52963257]
[105.82200623 -349.43579102]
[116.32402039 -338.62817383]
[124.05002594 -325.68963623]
[128.58335876 -311.31796265]
[129.67956543 -296.28814697]
[127.27951050 -281.41076660]
[121.51263428 -267.48812866]
[112.68993378 -255.27105713]
[101.28720093 -245.41842651]
[87.91938019 -238.46154785]
[73.30738068 -234.77561951]
[73.53070831 -219.77728271]
[73.75403595 -204.77894592]
[74.20063782 -189.78558350]
[74.87042999 -174.80055237]
[75.54021454 -159.81550598]
[83.83809662 -147.44642639]
[76.72472382 -133.31452942]
[77.39450836 -118.32949066]
[78.06429291 -103.34445190]
[93.36690521 -91.28856659]
[94.89308167 -71.56105804]
[81.21109772 -56.84770966]
[82.54933167 -41.90752411]
[83.88756561 -26.96733856]
[87.61528015 -20.58564949]
[85.13281250 -11.79501915]
[86.24845886 3.16343427]
[88.47357941 17.99747849]
[91.79583740 32.62493896]
[95.11809540 47.25239944]
[107.71731567 59.46823120]
[102.12477112 77.01260376]
[105.66444397 91.58898163]
[110.47563934 98.05619812]
[109.14659119 106.40871429]
[112.46884918 121.03617859]
[115.79111481 135.66363525]
[119.11337280 150.29109192]
[122.43563080 164.91856384]
[128.91682434 151.39102173]
[141.62648010 143.42454529]
[156.62634277 143.48759460]
[169.26855469 151.56065369]
[175.63580322 165.14219666]
[173.75511169 180.02383423]
[164.20922852 191.59431458]
[149.95605469 196.26841736]
[135.41210938 192.59780884]
[125.08383942 181.71965027]
[126.42207336 196.65983582]
[127.76030731 211.60002136]
[129.09854126 226.54020691]
[130.43678284 241.48039246]
[145.23507690 244.46202087]
[158.58015442 251.48565674]
[169.39445496 261.97451782]
[176.80751038 275.07241821]
[180.22599792 289.71365356]
[179.38119507 304.70971680]
[174.35009766 318.84579468]
[165.54849243 330.97912598]
[153.69660950 340.13140869]
[139.76016235 345.56765747]
[141.09840393 360.50784302]
[152.94276428 370.62463379]
[154.08709717 385.79516602]
[144.36930847 397.02459717]
[145.70755005 411.96478271]
[147.04577637 426.90496826]
[148.38401794 441.84515381]
[150.16647339 456.73886108]
[152.39160156 471.57290649]
[154.61671448 486.40695190]
[156.84182739 501.24099731]
[166.54066467 513.74072266]
[160.77694702 527.47497559]
[166.94604492 513.80224609]
[178.38072205 504.09411621]
[192.87313843 500.22500610]
[207.62501526 502.94201660]
[219.78800964 511.72048950]
[227.01362610 524.86547852]
[227.90672302 539.83886719]
[222.29486084 553.74951172]
[211.26158142 563.91156006]
[196.93725586 568.36279297]
[182.08767700 566.24383545]
[169.58007812 557.96374512]
[161.82905579 545.12005615]
[161.38246155 560.11340332]
[160.93585205 575.10675049]
[160.48924255 590.10009766]
[174.98138428 594.27490234]
[187.97958374 601.92327881]
[198.66676331 612.56445312]
[206.37113953 625.52954102]
[210.60836792 640.00354004]
[211.11212158 655.07659912]
[207.85073853 669.80120850]
[201.02922058 683.25177002]
[191.07637024 694.58276367]
[178.61782837 703.08197021]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 200]
[14 199]
[15 198]
[16 197]
[17 184]
[19 182]
[20 181]
[21 180]
[22 179]
[27 178]
[28 177]
[29 176]
[30 175]
[33 172]
[34 171]
[44 161]
[45 160]
[46 159]
[47 158]
[48 157]
[49 147]
[50 146]
[51 145]
[52 144]
[53 143]
[54 141]
[55 140]
[58 138]
[59 137]
[60 136]
[71 135]
[72 134]
[73 132]
[74 131]
[75 130]
[81 127]
[82 126]
[83 125]
[85 123]
[86 122]
[87 121]
[90 120]
[91 119]
[92 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
