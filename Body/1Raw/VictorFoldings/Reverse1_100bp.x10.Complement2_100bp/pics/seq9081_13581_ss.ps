%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[75.45104980 458.73535156]
[81.59979248 444.98248291]
[90.65509033 432.94299316]
[102.16271973 423.22076416]
[115.54547882 416.30343628]
[111.78917694 401.78137207]
[108.03287506 387.25930786]
[104.16857147 372.76559448]
[100.19647980 358.30108643]
[96.22438049 343.83654785]
[85.39302826 333.61251831]
[89.19974518 318.25610352]
[85.22764587 303.79159546]
[82.24494171 318.49203491]
[75.45594025 331.86773682]
[65.35073090 342.95309448]
[52.65882111 350.94778442]
[38.29645920 355.27474976]
[23.30046844 355.62158203]
[8.75342464 351.96322632]
[-4.29450703 344.56378174]
[-14.90138721 333.95745850]
[-22.30149460 320.90991211]
[-25.96061134 306.36306763]
[-25.61458015 291.36706543]
[-21.28838158 277.00448608]
[-13.29432869 264.31213379]
[-2.20951939 254.20635986]
[11.16582489 247.41664124]
[25.86612701 244.43318176]
[40.83015823 245.47131348]
[54.97765732 250.45613098]
[67.28729248 259.02774048]
[76.87043762 270.56741333]
[83.03559113 284.24313354]
[83.70537567 269.25808716]
[76.54409790 256.19802856]
[84.88989258 242.75709534]
[85.55967712 227.77206421]
[82.71797943 220.94955444]
[86.35263062 212.56939697]
[87.24544525 197.59599304]
[88.13825989 182.62258911]
[89.03107452 167.64916992]
[89.92388916 152.67576599]
[81.23532104 137.42861938]
[91.50279999 122.14266968]
[92.17258453 107.15763092]
[92.17258453 92.15763092]
[91.50279999 77.17259216]
[90.83301544 62.18754959]
[90.16323090 47.20251083]
[89.49344635 32.21747208]
[86.68277740 27.81892586]
[85.91693878 23.23997498]
[86.92224121 19.28973198]
[89.14350891 16.55142784]
[89.14350891 1.55142760]
[81.40621185 -12.24874496]
[89.14350891 -24.97601700]
[89.14350891 -39.97601700]
[81.40621185 -53.77618790]
[89.14350891 -66.50346375]
[89.14350891 -81.50346375]
[89.14350891 -96.50346375]
[89.14350891 -111.50346375]
[89.14350891 -126.50346375]
[89.14350891 -141.50346375]
[89.14350891 -156.50346375]
[75.46301270 -163.18218994]
[66.07716370 -175.08985901]
[62.80552292 -189.83152771]
[66.24471283 -204.47163391]
[75.66044617 -216.11866760]
[89.14350891 -222.49617004]
[89.14350891 -237.49617004]
[89.14350891 -252.49617004]
[74.51894379 -256.13040161]
[61.19727325 -263.15502930]
[49.95084000 -273.15786743]
[41.43050003 -285.55426025]
[36.12794876 -299.62109375]
[34.34735107 -314.53921509]
[36.18790436 -329.44091797]
[41.53830338 -343.46051025]
[50.08348465 -355.78463745]
[61.32316208 -365.69934082]
[74.60112000 -372.63159180]
[89.14350891 -376.18225098]
[89.14350891 -391.18225098]
[89.14350891 -406.18225098]
[80.59168243 -415.83776855]
[80.90048981 -428.33129883]
[89.35913086 -436.97872925]
[89.58245850 -451.97705078]
[89.80578613 -466.97540283]
[90.02911377 -481.97372437]
[90.25244141 -496.97207642]
[90.47576904 -511.97042847]
[76.63954163 -518.33270264]
[66.59217834 -529.77691650]
[62.07443619 -544.32031250]
[63.86904526 -559.44311523]
[71.66507721 -572.52520752]
[84.11183167 -581.30010986]
[99.05281830 -584.24743652]
[113.89942932 -580.85656738]
[126.07940674 -571.71496582]
[133.48248291 -558.40655518]
[134.82603455 -543.23699951]
[129.87728882 -528.83459473]
[119.49362946 -517.69458008]
[105.47410583 -511.74707031]
[105.25077820 -496.74874878]
[105.02745056 -481.75039673]
[104.80412292 -466.75207520]
[104.58079529 -451.75372314]
[104.35746765 -436.75540161]
[113.71819305 -421.91140747]
[104.14350891 -406.18225098]
[104.14350891 -391.18225098]
[104.14350891 -376.18225098]
[118.68590546 -372.63159180]
[131.96385193 -365.69934082]
[143.20353699 -355.78463745]
[151.74871826 -343.46051025]
[157.09912109 -329.44091797]
[158.93966675 -314.53921509]
[157.15907288 -299.62109375]
[151.85652161 -285.55426025]
[143.33618164 -273.15786743]
[132.08975220 -263.15502930]
[118.76807404 -256.13040161]
[104.14350891 -252.49617004]
[104.14350891 -237.49617004]
[104.14350891 -222.49617004]
[117.62657166 -216.11866760]
[127.04230499 -204.47163391]
[130.48149109 -189.83152771]
[127.20985413 -175.08985901]
[117.82400513 -163.18218994]
[104.14350891 -156.50346375]
[104.14350891 -141.50346375]
[104.14350891 -126.50346375]
[104.14350891 -111.50346375]
[104.14350891 -96.50346375]
[104.14350891 -81.50346375]
[104.14350891 -66.50346375]
[111.88081360 -53.77618790]
[104.14350891 -39.97601700]
[104.14350891 -24.97601700]
[111.88081360 -12.24874496]
[104.14350891 1.55142760]
[104.14350891 16.55142784]
[104.47848511 31.54768753]
[105.14826965 46.53272629]
[105.81805420 61.51776505]
[106.48783875 76.50279999]
[107.15762329 91.48783875]
[118.05292511 81.17801666]
[133.05038452 81.45415497]
[143.55877686 92.15806580]
[143.55841064 107.15806580]
[133.04951477 117.86147308]
[118.05204010 118.13689423]
[107.15762329 107.82741547]
[106.48783875 122.81245422]
[114.59999084 132.84019470]
[113.73362732 145.30747986]
[104.89730072 153.56858826]
[104.00448608 168.54199219]
[103.11166382 183.51539612]
[102.21884918 198.48880005]
[101.32603455 213.46220398]
[100.54471588 228.44184875]
[99.87493134 243.42687988]
[106.98830414 257.55877686]
[98.69041443 269.92788696]
[98.02062988 284.91290283]
[99.69216919 299.81948853]
[103.66426849 314.28399658]
[114.77973175 325.54266357]
[110.68890381 339.86447144]
[114.66100311 354.32897949]
[118.63309479 368.79351807]
[123.92326355 376.24011230]
[122.55493927 383.50299072]
[126.31124115 398.02505493]
[130.06753540 412.54711914]
[145.12591553 412.10781860]
[159.90440369 415.03085327]
[173.66171265 421.16961670]
[185.70777893 430.21615601]
[195.43838501 441.71670532]
[202.36544800 455.09442139]
[206.14151001 469.67831421]
[206.57716370 484.73678589]
[203.65054321 499.51455688]
[197.50846863 513.27038574]
[188.45899963 525.31427002]
[176.95608521 535.04205322]
[163.57667542 541.96588135]
[148.99189758 545.73840332]
[133.93331909 546.17041016]
[119.15624237 543.24023438]
[105.40191650 537.09484863]
[93.36022949 528.04241943]
[83.63519287 516.53717041]
[76.71461487 503.15609741]
[72.94562531 488.57040405]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 189]
[6 188]
[7 187]
[8 185]
[9 184]
[10 183]
[12 181]
[13 180]
[35 179]
[36 178]
[38 176]
[39 175]
[41 174]
[42 173]
[43 172]
[44 171]
[45 170]
[47 167]
[48 166]
[49 159]
[50 158]
[51 157]
[52 156]
[53 155]
[57 154]
[58 153]
[60 151]
[61 150]
[63 148]
[64 147]
[65 146]
[66 145]
[67 144]
[68 143]
[69 142]
[75 136]
[76 135]
[77 134]
[89 122]
[90 121]
[91 120]
[94 118]
[95 117]
[96 116]
[97 115]
[98 114]
[99 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
