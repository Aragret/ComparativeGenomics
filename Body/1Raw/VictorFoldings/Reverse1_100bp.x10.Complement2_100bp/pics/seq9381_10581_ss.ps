%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAGACUCCAUUAUUUAUCCUAAUAGGGCAUAGCUUCCGGAAAAACCUGUCCACCACACACCACCGGAACCAUACACGAAAGAGCACAAUGUAGCGxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[65.94216919 596.63159180]
[50.15364456 595.92590332]
[39.55028152 584.20648193]
[40.42286682 568.42633057]
[52.25371170 557.94744873]
[52.92349625 542.96240234]
[53.59328079 527.97735596]
[54.26306534 512.99230957]
[44.05355453 502.20800781]
[44.51934433 487.00149536]
[55.90015030 476.36593628]
[56.56993866 461.38092041]
[57.23972321 446.39587402]
[44.61259079 438.49517822]
[37.58876419 425.24670410]
[38.14306641 410.16165161]
[46.22669983 397.29495239]
[59.75349808 390.15542603]
[60.42328262 375.17037964]
[61.09306717 360.18533325]
[53.93178558 347.12527466]
[62.27758026 333.68435669]
[51.26737213 343.87136841]
[36.29159164 344.72344971]
[24.19696617 335.85101318]
[20.51299477 321.31042480]
[26.92394066 307.74945068]
[40.49880600 301.36801147]
[55.03134155 305.08355713]
[63.87799454 317.19921875]
[66.10311127 302.36517334]
[60.33939362 288.63095093]
[70.03822327 276.13122559]
[72.26333618 261.29718018]
[74.48845673 246.46313477]
[76.71357727 231.62908936]
[70.94985199 217.89486694]
[80.64868927 205.39514160]
[82.76331329 190.54493713]
[84.54577637 175.65121460]
[86.10630035 160.73262024]
[87.66682434 145.81401062]
[89.22734070 130.89540100]
[75.08975220 121.21451569]
[67.78346252 105.71582794]
[69.31212616 88.64965057]
[79.25653076 74.69615173]
[94.88955688 67.68190002]
[96.00520325 52.72344589]
[97.12084961 37.76499557]
[98.23650360 22.80654144]
[86.58025360 9.76233864]
[87.93766785 -7.33948326]
[100.98188782 -17.95489693]
[101.87470245 -32.92830276]
[91.66212463 -44.69014359]
[92.78086853 -59.86258698]
[104.05692291 -69.52623749]
[104.94973755 -84.49964905]
[98.04755402 -98.73588562]
[106.52867889 -110.98005676]
[107.42149353 -125.95346069]
[108.31430817 -140.92686462]
[105.70124054 -149.67956543]
[109.33351898 -156.11604309]
[110.44917297 -171.07449341]
[111.56481934 -186.03295898]
[112.68046570 -200.99140930]
[99.53459930 -208.66914368]
[91.06040192 -221.24192810]
[88.89425659 -236.18608093]
[93.41280365 -250.52986145]
[103.66872406 -261.44433594]
[117.58878326 -266.80133057]
[118.70442963 -281.75979614]
[119.82007599 -296.71823120]
[120.82434082 -311.68457031]
[121.71715546 -326.65798950]
[122.60997009 -341.63140869]
[107.27024841 -345.56369019]
[92.98801422 -352.39340210]
[80.30449677 -361.85983276]
[69.69995117 -373.60232544]
[61.57551956 -387.17410278]
[56.23799515 -402.05929565]
[53.88827896 -417.69238281]
[54.61382294 -433.47991943]
[58.38533783 -448.82287598]
[65.05801392 -463.13943481]
[74.37705994 -475.88705444]
[85.98742676 -486.58300781]
[99.44734192 -494.82269287]
[114.24511719 -500.29492188]
[129.81861877 -502.79370117]
[130.26522827 -517.78704834]
[130.71182251 -532.78039551]
[123.38883972 -546.80480957]
[131.50164795 -559.29608154]
[131.94825745 -574.28942871]
[118.06953430 -580.49023438]
[107.62383270 -591.53356934]
[102.20404816 -605.73547363]
[102.63664246 -620.93023682]
[108.85566711 -634.80084229]
[119.91275787 -645.23199463]
[134.12178040 -650.63305664]
[149.31597900 -650.18048096]
[163.17834473 -643.94323730]
[173.59495544 -632.87243652]
[178.97735596 -618.65631104]
[178.50479126 -603.46270752]
[172.24929810 -589.60858154]
[161.16479492 -579.20654297]
[146.94160461 -573.84283447]
[146.49499512 -558.84948730]
[153.84992981 -545.89746094]
[145.70518494 -532.33380127]
[145.25857544 -517.34045410]
[144.81196594 -502.34710693]
[158.70732117 -499.40060425]
[171.87722778 -494.06979370]
[183.91590881 -486.51757812]
[194.45216370 -476.97528076]
[203.16087341 -465.73574829]
[209.77304077 -453.14407349]
[214.08403015 -439.58721924]
[215.95999146 -425.48205566]
[215.34191895 -411.26254272]
[212.24761963 -397.36636353]
[206.77108765 -384.22149658]
[199.07972717 -372.23297119]
[189.40921021 -361.77041626]
[178.05622864 -353.15670776]
[165.36946106 -346.65795898]
[151.73880005 -342.47525024]
[137.58337402 -340.73858643]
[136.69056702 -325.76516724]
[135.79774475 -310.79177856]
[138.53755188 -303.92770386]
[134.77853394 -295.60260010]
[133.66288757 -280.64413452]
[132.54724121 -265.68566895]
[145.51861572 -258.32302856]
[154.04200745 -246.00793457]
[156.38278198 -231.15257263]
[152.02377319 -216.69508362]
[141.77827454 -205.51847839]
[127.63892365 -199.87576294]
[126.52326965 -184.91729736]
[125.40762329 -169.95884705]
[124.29197693 -155.00039673]
[123.28771210 -140.03405762]
[122.39489746 -125.06064606]
[121.50208282 -110.08724213]
[128.46812439 -96.92200470]
[119.92314148 -83.60682678]
[119.03032684 -68.63342285]
[129.07814026 -57.69829941]
[128.38600159 -42.50041580]
[116.84810638 -32.03548431]
[115.95529175 -17.06208038]
[125.77234650 -8.71611977]
[129.03869629 3.94930625]
[124.34490204 16.36617851]
[113.19495392 23.92218971]
[112.07930756 38.88064194]
[110.96365356 53.83909607]
[109.84800720 68.79754639]
[120.89522552 74.82132721]
[128.85226440 84.56876373]
[132.54235840 96.59832001]
[131.41976929 109.13095093]
[125.65053558 120.31320190]
[116.08785248 128.49134827]
[104.14595032 132.45593262]
[102.58542633 147.37452698]
[101.02490234 162.29313660]
[99.46437836 177.21174622]
[101.80329132 183.39567566]
[100.81626129 188.99235535]
[97.62883759 192.54895020]
[99.58367920 201.47175598]
[95.48272705 207.62025452]
[101.08729553 222.41549683]
[91.54761505 233.85420227]
[89.32250214 248.68824768]
[87.09738159 263.52227783]
[84.87226868 278.35632324]
[90.47682953 293.15158081]
[80.93715668 304.59027100]
[78.71203613 319.42431641]
[77.26261902 334.35412598]
[84.37599182 348.48602295]
[76.07810974 360.85513306]
[75.40831757 375.84014893]
[74.73853302 390.82519531]
[87.57444000 399.14306641]
[94.47792816 412.67962646]
[93.68419647 427.75399780]
[85.50640869 440.32299805]
[72.22476196 447.06564331]
[71.55497742 462.05068970]
[70.88519287 477.03573608]
[81.27175903 488.64422607]
[80.37902832 503.83163452]
[69.24810791 513.66210938]
[68.57831573 528.64715576]
[67.90853119 543.63220215]
[67.23874664 558.61724854]
[78.08753967 570.10980225]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 209]
[6 208]
[7 207]
[8 206]
[11 203]
[12 202]
[13 201]
[18 196]
[19 195]
[20 194]
[22 192]
[30 191]
[31 190]
[33 188]
[34 187]
[35 186]
[36 185]
[38 183]
[39 181]
[40 178]
[41 177]
[42 176]
[43 175]
[48 168]
[49 167]
[50 166]
[51 165]
[54 161]
[55 160]
[58 157]
[59 156]
[61 154]
[62 153]
[63 152]
[65 151]
[66 150]
[67 149]
[68 148]
[74 142]
[75 141]
[76 140]
[77 138]
[78 137]
[79 136]
[94 119]
[95 118]
[96 117]
[98 115]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
