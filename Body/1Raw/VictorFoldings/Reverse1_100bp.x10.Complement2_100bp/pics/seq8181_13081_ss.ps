%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[83.16761780 583.83190918]
[72.88181305 572.80224609]
[65.66284180 559.56072998]
[61.96448898 544.93975830]
[62.01924133 529.85839844]
[65.82366180 515.26464844]
[73.13858795 502.07592773]
[83.50420380 491.12124634]
[96.26892090 483.08926392]
[110.63034058 478.48486328]
[109.73752594 463.51144409]
[108.84470367 448.53805542]
[107.95188904 433.56463623]
[107.05907440 418.59121704]
[106.16625977 403.61782837]
[97.68513489 391.37365723]
[104.58731842 377.13742065]
[103.69450378 362.16400146]
[102.46752930 347.21426392]
[100.90700531 332.29568481]
[87.63449860 328.25723267]
[76.86970520 319.43731689]
[70.25879669 307.14199829]
[68.82897186 293.21194458]
[72.82895660 279.74694824]
[81.68647003 268.78936768]
[94.08990479 262.01431274]
[92.75167084 247.07412720]
[91.41343689 232.13394165]
[90.07520294 217.19375610]
[88.73696899 202.25357056]
[87.39872742 187.31338501]
[80.07975006 200.40661621]
[67.56503296 208.67594910]
[52.65040588 210.27400208]
[38.66782379 204.84376526]
[28.74103928 193.59837341]
[25.08771706 179.05006409]
[28.52402115 164.44897461]
[38.28227234 153.05702209]
[52.18244934 147.41920471]
[67.11922455 148.79501343]
[79.75567627 156.87709045]
[87.26879883 169.85992432]
[88.38444519 154.90145874]
[89.50009155 139.94300842]
[90.61574554 124.98455811]
[91.73139191 110.02610779]
[92.40117645 95.04106903]
[92.62450409 80.04272461]
[92.84783173 65.04438782]
[93.07115936 50.04605484]
[93.29448700 35.04771805]
[93.51781464 20.04937935]
[93.74114227 5.05104160]
[86.28849792 18.06864929]
[74.87782288 27.80499268]
[60.84961700 33.11625671]
[45.85190964 33.37847519]
[31.64661217 28.56084442]
[19.90255165 19.22933578]
[11.99940681 6.48020649]
[8.86563206 -8.18879032]
[10.86938000 -23.05435371]
[17.77525139 -36.37009430]
[28.77195168 -46.57168961]
[42.56760025 -52.46067047]
[57.54149628 -53.34519958]
[71.93452454 -49.12136841]
[84.05580902 -40.28538895]
[92.48133850 -27.87529755]
[96.22143555 -13.34745979]
[99.97773743 -27.86951828]
[103.73403168 -42.39157867]
[107.27370453 -56.96795273]
[110.59597015 -71.59541321]
[113.91822815 -86.22287750]
[117.02233887 -100.89817810]
[119.90760803 -115.61806488]
[122.79288483 -130.33795166]
[123.57420349 -145.31759644]
[122.23596954 -160.25778198]
[120.89773560 -175.19796753]
[119.55950165 -190.13815308]
[107.38066864 -194.43414307]
[97.76613617 -202.98609924]
[92.12072754 -214.49714661]
[91.25138092 -227.24169922]
[95.25199127 -239.32403564]
[103.49469757 -248.96035767]
[114.72813416 -254.74206543]
[113.83531189 -269.71548462]
[112.94249725 -284.68887329]
[112.04968262 -299.66229248]
[97.40481567 -303.45477295]
[84.64974213 -311.58886719]
[75.03409576 -323.26766968]
[69.49990082 -337.34701538]
[68.58934784 -352.44754028]
[72.39164734 -367.08987427]
[80.53428650 -379.83947754]
[92.21952820 -389.44729614]
[106.30257416 -394.97207642]
[121.40371704 -395.87249756]
[136.04348755 -392.06039429]
[148.78764343 -383.90921021]
[158.38763428 -372.21752930]
[163.90295410 -358.13079834]
[164.79327393 -343.02905273]
[160.97135925 -328.39181519]
[152.81163025 -315.65313721]
[141.11352539 -306.06097412]
[127.02308655 -300.55511475]
[127.91590118 -285.58169556]
[128.80871582 -270.60827637]
[129.70153809 -255.63488770]
[145.36781311 -248.49301147]
[155.31011963 -234.32743835]
[156.71563721 -216.98878479]
[149.10720825 -201.24639893]
[134.49967957 -191.47637939]
[135.83792114 -176.53619385]
[137.17614746 -161.59600830]
[138.51438904 -146.65583801]
[144.20851135 -160.53305054]
[153.69358826 -172.15342712]
[166.14909363 -180.51168823]
[180.49748230 -184.88475037]
[195.49746704 -184.89433289]
[209.85142517 -180.53956604]
[222.31758118 -172.19720459]
[231.81748962 -160.58894348]
[237.52931213 -146.71900940]
[238.95892334 -131.78729248]
[235.98263550 -117.08553314]
[228.85794067 -103.88558197]
[218.20120239 -93.32936859]
[204.93431091 -86.33010864]
[190.20500183 -83.49330902]
[175.28750610 -85.06437683]
[161.47232056 -90.90740967]
[149.95463562 -100.51691437]
[141.73080444 -113.06158447]
[137.51277161 -127.45269012]
[134.62750244 -112.73279572]
[131.74223328 -98.01290131]
[133.61590576 -93.61991119]
[132.74981689 -88.00324249]
[128.54568481 -82.90061188]
[125.22342682 -68.27315521]
[121.90116882 -53.64569473]
[123.64321136 -49.19886017]
[122.61028290 -43.61047363]
[118.25609589 -38.63527679]
[114.49979401 -24.11321831]
[110.74349213 -9.59115887]
[108.73947906 5.27436924]
[108.51615143 20.27270699]
[108.29282379 35.27104568]
[108.06949615 50.26938248]
[107.84616852 65.26771545]
[107.62284088 80.26605988]
[107.39951324 95.26439667]
[109.32935333 97.62346649]
[110.44347382 100.73686981]
[110.46083069 104.30381775]
[109.21543884 107.92393494]
[106.68984222 111.14175415]
[105.57419586 126.10020447]
[104.45854950 141.05865479]
[103.34289551 156.01712036]
[102.22724915 170.97557068]
[102.33891296 185.97515869]
[103.67714691 200.91532898]
[105.01538086 215.85551453]
[106.35361481 230.79570007]
[107.69185638 245.73588562]
[109.03009033 260.67608643]
[124.30629730 266.27706909]
[135.57032776 277.93750000]
[140.60360718 293.28762817]
[138.44667053 309.23852539]
[129.58163452 322.60357666]
[115.82560730 330.73513794]
[117.38613129 345.65374756]
[120.45362854 349.87719727]
[121.49064636 354.40246582]
[120.72225189 358.40551758]
[118.66790771 361.27117920]
[119.56072235 376.24459839]
[128.10571289 389.55978394]
[121.13966370 402.72500610]
[122.03247833 417.69842529]
[122.92530060 432.67181396]
[123.81811523 447.64523315]
[124.71092987 462.61862183]
[125.60374451 477.59204102]
[140.41055298 480.45724487]
[154.03927612 486.91546631]
[165.63319397 496.56076050]
[174.46353149 508.78680420]
[179.97517395 522.82507324]
[181.82168579 537.79309082]
[179.88696289 552.74993896]
[174.29263306 566.75543213]
[165.39038086 578.92919922]
[153.73979187 588.50598145]
[140.07322693 594.88372803]
[125.24978638 597.66156006]
[110.20127869 596.66491699]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 197]
[11 196]
[12 195]
[13 194]
[14 193]
[15 192]
[17 190]
[18 189]
[19 185]
[20 184]
[27 178]
[28 177]
[29 176]
[30 175]
[31 174]
[32 173]
[44 172]
[45 171]
[46 170]
[47 169]
[48 168]
[49 163]
[50 162]
[51 161]
[52 160]
[53 159]
[54 158]
[55 157]
[72 156]
[73 155]
[74 154]
[75 151]
[76 150]
[77 149]
[78 146]
[79 145]
[80 144]
[81 124]
[82 123]
[83 122]
[84 121]
[91 116]
[92 115]
[93 114]
[94 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
