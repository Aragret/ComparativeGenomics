%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCAGUGAGUAUCCGGUCUGAAUCCCGAUCCUACUACUAAUUAUUCUCCCUACUGUAUUGAUAAUCACCGUCCAAUCAACAAACAUCCCGAGUACCAUxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[124.76276398 862.22802734]
[110.02551270 859.41461182]
[95.45416260 855.84002686]
[81.08797455 851.51397705]
[66.96569824 846.44812012]
[53.12539673 840.65606689]
[39.60437775 834.15344238]
[26.43909645 826.95776367]
[13.66504288 819.08850098]
[1.31665432 810.56683350]
[-10.57278061 801.41564941]
[-21.97121048 791.65979004]
[-32.84790421 781.32537842]
[-43.17354584 770.44036865]
[-52.92029190 759.03411865]
[-62.06187439 747.13732910]
[-70.57363892 734.78210449]
[-78.43265533 722.00177002]
[-85.61772156 708.83068848]
[-92.10947418 695.30444336]
[-97.89041138 681.45947266]
[-102.94494629 667.33312988]
[-107.25946045 652.96350098]
[-110.82231140 638.38928223]
[-113.62390900 623.64978027]
[-115.65668488 608.78472900]
[-116.91516876 593.83422852]
[-117.39596558 578.83850098]
[-117.09777832 563.83807373]
[-116.02141571 548.87335205]
[-114.16977692 533.98461914]
[-111.54784393 519.21209717]
[-108.16269684 504.59558105]
[-104.02346039 490.17446899]
[-99.14128876 475.98764038]
[-93.52935028 462.07333374]
[-87.20275879 448.46905518]
[-80.17858887 435.21148682]
[-72.47576141 422.33639526]
[-64.11505890 409.87844849]
[-55.11899948 397.87124634]
[-45.51184845 386.34713745]
[-35.31949997 375.33724976]
[-24.56943512 364.87121582]
[-13.29063034 354.97723389]
[-1.51349390 345.68203735]
[10.73022556 337.01062012]
[23.40752220 328.98641968]
[36.48421860 321.63101196]
[49.92506409 314.96426392]
[63.69382095 309.00411987]
[77.75337219 303.76666260]
[92.06581879 299.26602173]
[106.59257507 295.51431274]
[121.29447937 292.52166748]
[119.06935883 277.68762207]
[116.84424591 262.85357666]
[102.56430817 258.54672241]
[91.52501678 248.42529297]
[85.95214081 234.45732117]
[87.00079346 219.39344788]
[94.51640320 206.22520447]
[107.05480957 197.59098816]
[104.82969666 182.75694275]
[102.60457611 167.92289734]
[100.37946320 153.08885193]
[98.15434265 138.25480652]
[95.92922211 123.42076874]
[93.70410919 108.58672333]
[90.27304840 93.98440552]
[85.65903473 79.71166992]
[80.93890381 65.47367859]
[76.11290741 51.27122498]
[71.28691101 37.06876755]
[66.46091461 22.86631203]
[51.64769745 25.41880989]
[36.61756134 25.62246132]
[21.74063110 23.47224998]
[7.38326263 19.02112961]
[-6.10097837 12.37871075]
[-18.38003159 3.70856929]
[-29.15151405 -6.77578402]
[-38.15016937 -18.81616211]
[-45.15439224 -32.11606216]
[-49.99170685 -46.34795761]
[-52.54298019 -61.16138077]
[-52.74539185 -76.19153595]
[-50.59395218 -91.06829071]
[-46.14164734 -105.42529297]
[-39.49811554 -118.90898132]
[-30.82696152 -131.18731689]
[-20.34172058 -141.95793152]
[-8.30059814 -150.95559692]
[4.99987841 -157.95872498]
[19.23217583 -162.79486084]
[34.04580688 -165.34490967]
[49.07597733 -165.54608154]
[63.95255280 -163.39341736]
[78.30918884 -158.93992615]
[91.79233551 -152.29528809]
[104.06995392 -143.62312317]
[114.83970642 -133.13699341]
[123.83637238 -121.09512329]
[130.83840942 -107.79407501]
[135.67337036 -93.56137848]
[138.22219849 -78.74753571]
[138.42213440 -63.71734619]
[136.26823425 -48.84094620]
[131.81356812 -34.48468018]
[125.16780090 -21.00208473]
[116.49462128 -8.72517776]
[106.00760651 2.04370856]
[93.96499634 11.03938198]
[80.66336823 18.04031563]
[85.48936462 32.24277115]
[90.31536102 46.44522476]
[95.14135742 60.64768219]
[100.26973724 65.96948242]
[99.93177032 75.09765625]
[104.54578400 89.37039185]
[108.78305054 74.98131561]
[119.15541840 64.14554596]
[133.34568787 59.28382874]
[148.18370056 61.48228073]
[160.35462952 70.24976349]
[167.13943481 83.62759399]
[167.02238464 98.62713623]
[160.02961731 111.89745331]
[147.72335815 120.47392273]
[132.85282898 122.44053650]
[118.74016571 117.35794830]
[108.53815460 106.36161041]
[110.76326752 121.19564819]
[112.98838806 136.02969360]
[115.21350098 150.86373901]
[117.43862152 165.69778442]
[119.66373444 180.53182983]
[121.88885498 195.36587524]
[136.40872192 199.94131470]
[147.45713806 210.32495117]
[152.87936401 224.41819763]
[151.64996338 239.40650940]
[144.06613159 252.32142639]
[131.67828369 260.62844849]
[133.90341187 275.46249390]
[136.12852478 290.29653931]
[151.06143188 288.84396362]
[166.04962158 288.16839600]
[181.05265808 288.27169800]
[196.03012085 289.15356445]
[210.94160461 290.81164551]
[225.74694824 293.24145508]
[240.40620422 296.43646240]
[254.87988281 300.38800049]
[269.12893677 305.08547974]
[283.11499023 310.51617432]
[296.80029297 316.66552734]
[310.14797974 323.51687622]
[323.12207031 331.05178833]
[335.68756104 339.24996948]
[347.81060791 348.08929443]
[359.45852661 357.54592896]
[370.59991455 367.59439087]
[381.20471191 378.20761108]
[391.24435425 389.35693359]
[400.69177246 401.01232910]
[409.52148438 413.14236450]
[417.70971680 425.71435547]
[425.23437500 438.69439697]
[432.07516479 452.04751587]
[438.21365356 465.73767090]
[443.63330078 479.72802734]
[448.31948853 493.98077393]
[452.25958252 508.45758057]
[455.44296265 523.11938477]
[457.86105347 537.92663574]
[459.50732422 552.83941650]
[460.37734985 567.81756592]
[460.46878052 582.82067871]
[459.78134155 597.80834961]
[458.31695557 612.74011230]
[456.07949829 627.57574463]
[453.07504272 642.27520752]
[449.31164551 656.79895020]
[444.79949951 671.10778809]
[439.55078125 685.16314697]
[433.57958984 698.92706299]
[426.90203857 712.36254883]
[419.53613281 725.43334961]
[411.50170898 738.10418701]
[402.82049561 750.34094238]
[393.51580811 762.11059570]
[383.61279297 773.38146973]
[373.13812256 784.12310791]
[362.12002563 794.30664062]
[350.58822632 803.90454102]
[338.57379150 812.89093018]
[326.10913086 821.24163818]
[313.22784424 828.93408203]
[299.96466064 835.94763184]
[286.35531616 842.26324463]
[272.43649292 847.86401367]
[258.24572754 852.73480225]
[243.82128906 856.86248779]
[229.20205688 860.23583984]
[214.42742920 862.84594727]
[199.53724670 864.68560791]
[184.57165527 865.74993896]
[169.57098389 866.03607178]
[154.57568359 865.54321289]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[55 146]
[56 145]
[57 144]
[63 138]
[64 137]
[65 136]
[66 135]
[67 134]
[68 133]
[69 132]
[70 120]
[71 119]
[72 117]
[73 116]
[74 115]
[75 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
