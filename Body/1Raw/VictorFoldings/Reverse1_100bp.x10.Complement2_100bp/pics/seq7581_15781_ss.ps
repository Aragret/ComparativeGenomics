%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[82.38532257 684.84246826]
[67.41923523 686.07287598]
[52.41044235 685.58923340]
[37.55461502 683.39782715]
[23.04543686 679.52722168]
[9.07205963 674.02789307]
[-4.18334532 666.97155762]
[-16.54796600 658.45019531]
[-27.86060333 648.57482910]
[-37.97377396 637.47436523]
[-46.75563431 625.29333496]
[-54.09169006 612.19067383]
[-59.88630676 598.33715820]
[-64.06393433 583.91339111]
[-66.57010651 569.10742188]
[-67.37216187 554.11224365]
[-66.45963287 539.12341309]
[-63.84442520 524.33630371]
[-59.56062317 509.94372559]
[-53.66408157 496.13327026]
[-46.23167419 483.08499146]
[-37.36029053 470.96905518]
[-27.16559792 459.94335938]
[-15.78049850 450.15167236]
[-3.35342145 441.72161865]
[9.95361996 434.76315308]
[23.96714211 429.36694336]
[38.50444794 425.60336304]
[53.37601852 423.52148438]
[68.38796997 423.14846802]
[69.72620392 408.20828247]
[71.06443787 393.26809692]
[62.83367920 377.76901245]
[73.55172729 362.79553223]
[74.66738129 347.83706665]
[75.78302765 332.87863159]
[76.89867401 317.92016602]
[63.04119873 312.30490112]
[51.58231354 302.66830444]
[43.65231705 289.94448853]
[40.03850174 275.37289429]
[41.10699463 260.37753296]
[46.76570892 246.42782593]
[56.47212219 234.89466858]
[69.28529358 226.91561890]
[83.95703125 223.28277588]
[85.07267761 208.32432556]
[78.30342102 195.05683899]
[87.04570007 181.87036133]
[88.16134644 166.91191101]
[89.27700043 151.95344543]
[90.28125763 136.98710632]
[91.17407227 122.01370239]
[92.06688690 107.04029846]
[92.29021454 92.04196167]
[91.73200226 77.05234528]
[91.06221771 62.06731033]
[90.39243317 47.08227158]
[89.72264862 32.09723282]
[89.05286407 17.11219215]
[88.38307953 2.12715411]
[79.02205658 13.84769917]
[64.59069061 17.93862534]
[50.47152328 12.87411690]
[41.93066406 0.54311162]
[42.15363312 -14.45523071]
[51.05727386 -26.52689934]
[65.32074738 -31.16946220]
[79.62413025 -26.65135384]
[88.63299561 -14.65661716]
[89.74864197 -29.61507034]
[90.86428833 -44.57352448]
[91.86855316 -59.53986740]
[92.76136780 -74.51327515]
[93.09634399 -89.50953674]
[92.87301636 -104.50787354]
[92.64968872 -119.50621033]
[92.42636108 -134.50454712]
[92.20303345 -149.50288391]
[91.97970581 -164.50122070]
[91.75637817 -179.49955750]
[91.53305054 -194.49789429]
[82.86499786 -182.25596619]
[69.27887726 -175.89849854]
[54.32606125 -177.08734131]
[41.91518402 -185.51171875]
[35.29042053 -198.96952820]
[36.18346024 -213.94291687]
[44.36087418 -226.51788330]
[57.68510056 -233.40736389]
[72.67321777 -232.81047058]
[85.40737152 -224.88322449]
[92.55867004 -211.69863892]
[94.56269073 -226.56416321]
[96.56670380 -241.42970276]
[82.35744476 -246.39778137]
[69.43929291 -254.12477112]
[58.34124756 -264.29425049]
[49.51776123 -276.48977661]
[43.33014679 -290.21197510]
[40.03178787 -304.89889526]
[39.75774765 -319.94912720]
[42.51924896 -334.74639893]
[48.20320892 -348.68472290]
[56.57687378 -361.19338989]
[67.29734802 -371.76016235]
[79.92563629 -379.95230103]
[93.94461060 -385.43438721]
[108.78021240 -387.98190308]
[123.82492828 -387.49053955]
[138.46267700 -383.98040771]
[152.09408569 -377.59527588]
[164.16090393 -368.59658813]
[174.16905212 -357.35284424]
[181.70867920 -344.32446289]
[186.47103882 -330.04492188]
[188.26113892 -315.09899902]
[187.00564575 -300.09872437]
[182.75598145 -285.65832520]
[175.68617249 -272.36911011]
[166.08572388 -260.77532959]
[154.34777832 -251.35166931]
[140.95297241 -244.48405457]
[126.44982147 -240.45372009]
[111.43222809 -239.42568970]
[109.42821503 -224.56015015]
[107.42420197 -209.69462585]
[106.53138733 -194.72122192]
[106.75471497 -179.72288513]
[106.97804260 -164.72454834]
[107.20137024 -149.72621155]
[107.42469788 -134.72787476]
[107.64802551 -119.72953796]
[107.87135315 -104.73120117]
[108.09468079 -89.73286438]
[120.25596619 -98.51370239]
[134.74386597 -94.62772369]
[140.87843323 -80.93951416]
[134.13749695 -67.53952026]
[119.49022675 -64.30571747]
[107.73477173 -73.62046051]
[106.84195709 -58.64705276]
[109.58175659 -51.78299713]
[105.82274628 -43.45787430]
[104.70709229 -28.49942207]
[103.59144592 -13.54096794]
[103.36811829 1.45736909]
[104.03790283 16.44240761]
[104.70768738 31.42744637]
[105.37747192 46.41248703]
[106.04725647 61.39752579]
[106.71704102 76.38256073]
[110.15608215 82.92433929]
[107.28356934 91.59535217]
[118.33115387 81.44889069]
[133.32284546 81.94828033]
[143.67070007 92.80746460]
[143.44702148 107.80579376]
[132.77992249 118.35155487]
[117.78000641 118.40364838]
[107.04029846 107.93311310]
[106.14747620 122.90651703]
[105.25466156 137.87992859]
[107.86773682 146.63261414]
[104.23545074 153.06910706]
[103.11980438 168.02755737]
[102.00415039 182.98600769]
[108.69361115 197.32342529]
[100.03113556 209.43997192]
[98.91548157 224.39842224]
[112.88600159 230.16749573]
[124.37378693 239.95898438]
[132.26196289 252.80441284]
[135.78875732 267.43917847]
[134.62100220 282.42715454]
[128.88560486 296.30145264]
[119.15587616 307.70812988]
[106.39426422 315.53829956]
[91.85713196 319.03582764]
[90.74147797 333.99426270]
[89.62583160 348.95272827]
[88.51018524 363.91116333]
[96.32017517 374.17599487]
[95.08300018 386.61196899]
[86.00462341 394.60632324]
[84.66638947 409.54650879]
[83.32815552 424.48669434]
[98.03482819 427.52169800]
[112.29966736 432.21340942]
[125.93669891 438.50064087]
[138.76812744 446.30142212]
[150.62667847 455.51403809]
[161.35775757 466.01843262]
[170.82144165 477.67761230]
[178.89436340 490.33956909]
[185.47126770 503.83929443]
[190.46643066 518.00073242]
[193.81472778 532.63928223]
[195.47247314 547.56402588]
[195.41810608 562.58050537]
[193.65229797 577.49291992]
[190.19807434 592.10681152]
[185.10047913 606.23168945]
[178.42596436 619.68341064]
[170.26155090 632.28662109]
[160.71366882 643.87695312]
[149.90679932 654.30334473]
[137.98184204 663.42980957]
[125.09425354 671.13745117]
[111.41204071 677.32574463]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 187]
[31 186]
[32 185]
[34 182]
[35 181]
[36 180]
[37 179]
[46 170]
[47 169]
[49 167]
[50 166]
[51 165]
[52 163]
[53 162]
[54 161]
[55 154]
[56 152]
[57 151]
[58 150]
[59 149]
[60 148]
[61 147]
[70 146]
[71 145]
[72 144]
[73 142]
[74 141]
[75 135]
[76 134]
[77 133]
[78 132]
[79 131]
[80 130]
[81 129]
[82 128]
[93 127]
[94 126]
[95 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
