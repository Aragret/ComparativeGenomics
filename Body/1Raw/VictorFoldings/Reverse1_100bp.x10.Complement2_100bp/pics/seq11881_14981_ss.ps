%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUCAUAUCCCGACACUGAUCAUACAACUCAGGACAUUCAUCCUCUCACUAUAAACUAGUCCUCUUGCACCAAUGAUCGUGUCUCUCAAGAGGGUCAUCxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[90.49092102 478.53533936]
[80.05479431 489.44360352]
[67.06206512 497.13070679]
[52.47689438 501.02624512]
[37.38158798 500.84115601]
[22.89631844 496.58914185]
[10.09599113 488.58575439]
[-0.06952406 477.42489624]
[-6.84587908 463.93475342]
[-9.73022366 449.11642456]
[-8.50852013 434.06948853]
[-3.27142620 419.91055298]
[5.59242964 407.69030762]
[17.42529106 398.31555176]
[31.34908104 392.48196411]
[46.33056259 390.62246704]
[48.55567932 375.78842163]
[50.78079605 360.95437622]
[45.01707840 347.22015381]
[54.71590805 334.72042847]
[56.94102478 319.88638306]
[59.16614151 305.05233765]
[46.77829742 296.74530029]
[39.19446945 283.83038330]
[37.96506119 268.84207153]
[43.38730240 254.74882507]
[54.43570709 244.36520386]
[68.95557404 239.78974915]
[71.18069458 224.95570374]
[73.40580750 210.12165833]
[71.28931427 203.04054260]
[75.77606964 195.08398438]
[78.22180176 180.28471375]
[80.66752625 165.48544312]
[78.65669250 158.37359619]
[83.26141357 150.48472595]
[85.92720795 135.72351074]
[88.59300232 120.96228790]
[91.25879669 106.20107269]
[91.81700897 91.21145630]
[90.25648499 76.29285431]
[88.69596100 61.37425232]
[87.13543701 46.45564651]
[85.57492065 31.53704071]
[84.01439667 16.61843681]
[82.34284973 1.71186209]
[80.56038666 -13.18185520]
[78.77792358 -28.07557297]
[62.98354340 -29.21908760]
[47.71488953 -33.40185928]
[33.55090714 -40.46347809]
[21.02830887 -50.13441086]
[10.62123013 -62.04627991]
[2.72328377 -75.74591064]
[-2.36733508 -90.71257019]
[-4.45910120 -106.37773132]
[-3.47436690 -122.14671326]
[0.54775679 -137.42123413]
[7.45295143 -151.62208557]
[16.97760963 -164.21116638]
[28.75890350 -174.71179199]
[42.34859467 -182.72677612]
[57.23009872 -187.95349121]
[55.00498199 -202.78753662]
[52.77986526 -217.62158203]
[50.55474472 -232.45561218]
[47.45063782 -247.13092041]
[43.47853851 -261.59545898]
[39.50644302 -276.05996704]
[35.53434753 -290.52450562]
[31.56225204 -304.98901367]
[17.86344147 -307.81838989]
[6.77304697 -316.23382568]
[0.42091843 -328.54757690]
[-0.00397810 -342.33050537]
[5.52429581 -354.89102173]
[15.87470245 -363.80090332]
[12.11840248 -378.32296753]
[8.36210155 -392.84503174]
[4.60580063 -407.36709595]
[0.84950006 -421.88916016]
[-14.16713619 -420.94198608]
[-29.09162140 -422.85409546]
[-43.38444519 -427.55639648]
[-56.52893448 -434.87890625]
[-68.04991913 -444.55688477]
[-77.53092194 -456.24050903]
[-84.62921906 -469.50741577]
[-89.08820343 -483.87799072]
[-90.74668884 -498.83279419]
[-89.54471588 -513.83117676]
[-85.52574921 -528.33099365]
[-78.83506012 -541.80804443]
[-69.71451569 -553.77520752]
[-58.49381638 -563.79980469]
[-45.57858658 -571.51947021]
[-31.43570137 -576.65515137]
[-16.57641792 -579.02117920]
[-1.53789210 -578.53210449]
[13.13624477 -575.20550537]
[26.91553307 -569.16168213]
[39.30185699 -560.61914062]
[49.84746170 -549.88659668]
[58.17112732 -537.35211182]
[63.97196198 -523.46881104]
[67.04026794 -508.73849487]
[67.26512909 -493.69369507]
[64.63841248 -478.87826538]
[59.25507355 -464.82778931]
[51.30971909 -452.05017090]
[41.08956909 -441.00729370]
[28.96407127 -432.09835815]
[15.37155914 -425.64544678]
[19.12785912 -411.12338257]
[22.88416100 -396.60131836]
[26.64046097 -382.07928467]
[30.39676285 -367.55722046]
[46.06911469 -363.62149048]
[57.68501663 -352.25372314]
[62.00782394 -336.48886108]
[57.76635742 -320.60473633]
[46.02677536 -308.96112061]
[49.99887085 -294.49658203]
[53.97096634 -280.03207397]
[57.94306564 -265.56753540]
[61.91516113 -251.10301208]
[68.44778442 -264.60580444]
[81.61465454 -271.79144287]
[96.50486755 -269.97985840]
[107.56472778 -259.84677124]
[110.66918182 -245.17155457]
[104.66035461 -231.42768860]
[91.77938843 -223.74128723]
[76.83055115 -224.97921753]
[65.38879395 -234.68074036]
[67.61390686 -219.84669495]
[69.83902740 -205.01264954]
[72.06414032 -190.17860413]
[86.26194763 -189.74850464]
[100.16960144 -186.84309387]
[113.35881042 -181.55059814]
[125.42318726 -174.03273010]
[135.99076843 -164.51980591]
[144.73545837 -153.30368042]
[151.38714600 -140.72879028]
[155.74000549 -127.18156433]
[157.65885925 -113.07856750]
[157.08343506 -98.85369110]
[154.03019714 -84.94477844]
[148.59187317 -71.78017426]
[140.93469238 -59.76553726]
[131.29327393 -49.27130508]
[119.96341705 -40.62131119]
[107.29307556 -34.08277130]
[93.67163849 -29.85803795]
[95.45410156 -14.96432114]
[97.23657227 -0.07060386]
[101.15263367 6.19726849]
[98.93299866 15.05791283]
[100.49352264 29.97651863]
[102.05404663 44.89512253]
[103.61457062 59.81372833]
[105.17508698 74.73233032]
[106.73561096 89.65093994]
[112.22248840 75.69048309]
[121.53350830 63.93017578]
[133.86318970 55.38739777]
[148.14488220 50.80118179]
[163.14306641 50.56828308]
[177.56027222 54.70885086]
[190.14924622 62.86468506]
[199.82093811 74.33022308]
[205.73863220 88.11357880]
[207.39038086 103.02235413]
[204.63331604 117.76679993]
[197.70594788 131.07136536]
[187.20753479 141.78506470]
[174.04632568 148.98107910]
[159.36088562 152.03686523]
[144.42164612 150.68806458]
[130.52101135 145.05137634]
[118.86152649 135.61441040]
[110.45183563 123.19357300]
[106.02001190 108.86686707]
[103.35421753 123.62808228]
[100.68842316 138.38929749]
[98.02262878 153.15051270]
[95.46679688 167.93116760]
[93.02107239 182.73043823]
[90.57534027 197.52970886]
[88.23985291 212.34678650]
[86.01473999 227.18081665]
[83.78961945 242.01486206]
[96.32803345 250.64907837]
[103.84363556 263.81732178]
[104.89228821 278.88119507]
[99.31941986 292.84918213]
[88.28012085 302.97061157]
[74.00018311 307.27743530]
[71.77507019 322.11148071]
[69.54994965 336.94552612]
[75.15451813 351.74078369]
[65.61483765 363.17947388]
[63.38972473 378.01351929]
[61.16460419 392.84756470]
[74.94116974 399.02081299]
[86.54059601 408.68289185]
[95.10214233 421.11682129]
[99.99047852 435.39993286]
[100.84285736 450.47229004]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 205]
[17 204]
[18 203]
[20 201]
[21 200]
[22 199]
[28 193]
[29 192]
[30 191]
[32 190]
[33 189]
[34 188]
[36 187]
[37 186]
[38 185]
[39 184]
[40 164]
[41 163]
[42 162]
[43 161]
[44 160]
[45 159]
[46 157]
[47 156]
[48 155]
[63 138]
[64 137]
[65 136]
[66 135]
[67 126]
[68 125]
[69 124]
[70 123]
[71 122]
[77 117]
[78 116]
[79 115]
[80 114]
[81 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
