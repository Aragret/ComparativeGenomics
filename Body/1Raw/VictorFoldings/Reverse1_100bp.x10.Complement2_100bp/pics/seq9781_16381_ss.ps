%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[88.93731689 631.64306641]
[82.63762665 617.92388916]
[80.27407837 603.01361084]
[82.02207184 588.01867676]
[87.75188446 574.05187988]
[97.03833008 562.14959717]
[109.19229126 553.19506836]
[123.31186676 547.85278320]
[121.97362518 532.91259766]
[120.63539124 517.97241211]
[118.85292816 503.07867432]
[116.62781525 488.24462891]
[114.40269470 473.41058350]
[111.84686279 458.62994385]
[108.96158600 443.91003418]
[106.07631683 429.19015503]
[103.19104767 414.47024536]
[100.94252777 412.79623413]
[99.22162628 410.13070679]
[98.40932465 406.67013550]
[98.80850220 402.74517822]
[100.59967804 398.78973389]
[98.59566498 383.92419434]
[89.57115936 395.90579224]
[74.98520660 399.40579224]
[61.50630951 392.82403564]
[55.29683685 379.16964722]
[59.19567490 364.68521118]
[71.42033386 355.99279785]
[86.38185120 357.06649780]
[97.24086761 367.41705322]
[96.79426575 352.42370605]
[96.34765625 337.43035889]
[95.90105438 322.43701172]
[95.45444489 307.44366455]
[95.00784302 292.45031738]
[94.56123352 277.45697021]
[94.11462402 262.46362305]
[93.66802216 247.47026062]
[90.86790466 243.60136414]
[90.46848297 237.93235779]
[93.43804169 232.02531433]
[93.43804169 217.02531433]
[93.43804169 202.02531433]
[78.70585632 196.18675232]
[67.31450653 185.11489868]
[61.02891159 170.48388672]
[60.83872604 154.52244568]
[66.80264282 139.67430115]
[78.03489685 128.22410583]
[92.83665466 121.94587708]
[92.61332703 106.94754028]
[89.35401154 99.57533264]
[92.50000000 91.72462463]
[92.50000000 76.72462463]
[91.83021545 61.73958969]
[90.49198151 46.79940414]
[89.15374756 31.85921860]
[77.30938721 21.74245262]
[76.16505432 6.57191658]
[85.88284302 -4.65752220]
[84.54460907 -19.59770775]
[83.09518433 -34.52751541]
[81.53466034 -49.44612122]
[70.37554932 -64.09384155]
[78.14118958 -79.83111572]
[76.35872650 -94.72483063]
[74.57625580 -109.61854553]
[71.44622040 -113.79586029]
[70.34194183 -118.30516815]
[71.05065155 -122.31924438]
[73.06210327 -125.21517181]
[64.31982422 -138.40164185]
[71.08908081 -151.66914368]
[69.97343445 -166.62759399]
[68.85778809 -181.58604431]
[67.74213409 -196.54450989]
[66.62648773 -211.50296021]
[63.22580338 -217.17277527]
[63.20248413 -222.85577393]
[65.70708466 -226.92222595]
[65.03730011 -241.90727234]
[64.36751556 -256.89230347]
[49.41735840 -258.41235352]
[34.84786224 -262.09307861]
[20.96957779 -267.85598755]
[8.07832432 -275.57824707]
[-3.55112195 -285.09527588]
[-13.67087841 -296.20422363]
[-22.06524086 -308.66827393]
[-28.55528641 -322.22177124]
[-33.00267410 -336.57580566]
[-35.31261063 -351.42443848]
[-35.43585968 -366.45117188]
[-33.36979675 -381.33569336]
[-29.15845299 -395.76077271]
[-22.89159966 -409.41888428]
[-14.70281315 -422.01895142]
[-4.76663780 -433.29238892]
[6.70513678 -442.99890137]
[19.46798897 -450.93157959]
[33.24987411 -456.92135620]
[47.75703812 -460.84054565]
[62.68025208 -462.60562134]
[77.70143127 -462.17898560]
[92.50039673 -459.56967163]
[106.76171112 -454.83334351]
[120.18138885 -448.07092285]
[132.47338867 -439.42660522]
[143.37570190 -429.08456421]
[152.65596008 -417.26531982]
[160.11634827 -404.22076416]
[165.59783936 -390.22894287]
[168.98359680 -375.58810425]
[170.20144653 -360.61029053]
[169.22544861 -345.61477661]
[166.07640076 -330.92120361]
[160.82142639 -316.84274292]
[153.57252502 -303.67947388]
[144.48420715 -291.71200562]
[133.75021362 -281.19540405]
[121.59930420 -272.35382080]
[108.29050446 -265.37573242]
[94.10748291 -260.40988159]
[79.35255432 -257.56210327]
[80.02233887 -242.57705688]
[80.69212341 -227.59201050]
[81.58494568 -212.61860657]
[82.70059204 -197.66015625]
[83.81623840 -182.70170593]
[84.93188477 -167.74324036]
[86.04753876 -152.78479004]
[94.71001434 -140.66824341]
[88.02055359 -126.33082581]
[89.46997833 -111.40101624]
[91.25244141 -96.50729370]
[93.03490448 -81.61357880]
[102.34728241 -73.89307404]
[103.95417786 -61.49945831]
[96.45326996 -51.00664520]
[98.01379395 -36.08803940]
[101.83610535 -29.76255608]
[99.48479462 -20.93594170]
[100.82302856 -5.99575615]
[112.38180542 3.32788134]
[113.95178986 18.46028900]
[104.09393311 30.52098274]
[105.43216705 45.46117020]
[106.77040100 60.40135193]
[117.19447327 49.61531448]
[132.18930054 49.22150421]
[143.16517639 59.44551468]
[143.83459473 74.43056488]
[133.81410217 85.59254456]
[118.84388733 86.53736115]
[107.50000000 76.72462463]
[107.50000000 91.72462463]
[107.61166382 106.72421265]
[107.83499146 121.72254944]
[121.22103882 126.58721924]
[132.11968994 135.70974731]
[139.23489380 147.97868347]
[141.72961426 161.91006470]
[139.32421875 175.82682800]
[132.32777405 188.06076050]
[121.59838104 197.15243530]
[108.43804169 202.02531433]
[108.43804169 217.02531433]
[108.43804169 232.02531433]
[108.66136932 247.02365112]
[109.10797882 262.01699829]
[109.55458069 277.01034546]
[110.00119019 292.00369263]
[110.44779205 306.99703979]
[110.89440155 321.99041748]
[111.34101105 336.98376465]
[111.78761292 351.97711182]
[112.23422241 366.97045898]
[113.46119690 381.92019653]
[115.46520996 396.78570557]
[117.91093445 411.58499146]
[120.79621124 426.30487061]
[123.68148041 441.02478027]
[126.56675720 455.74465942]
[129.99880981 459.67761230]
[131.43542480 464.09228516]
[131.02722168 468.14794922]
[129.23674011 471.18545532]
[131.46185303 486.01950073]
[133.68696594 500.85354614]
[136.51106262 504.15182495]
[137.98995972 507.80932617]
[138.17590332 511.35910034]
[137.26745605 514.39904785]
[135.57557678 516.63415527]
[136.91381836 531.57434082]
[138.25204468 546.51452637]
[153.09628296 549.26245117]
[166.64817810 555.91442871]
[177.90205383 565.97686768]
[186.02284241 578.70306396]
[190.40788269 593.14862061]
[190.73181152 608.24157715]
[186.97058105 622.86193848]
[179.40328979 635.92486572]
[168.59149170 646.46087646]
[155.33749390 653.68817139]
[140.62483215 657.07043457]
[125.54526520 656.35675049]
[111.21781158 651.59997559]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 197]
[9 196]
[10 195]
[11 190]
[12 189]
[13 188]
[14 184]
[15 183]
[16 182]
[17 181]
[22 180]
[23 179]
[31 178]
[32 177]
[33 176]
[34 175]
[35 174]
[36 173]
[37 172]
[38 171]
[39 170]
[42 169]
[43 168]
[44 167]
[51 159]
[52 158]
[54 157]
[55 156]
[56 149]
[57 148]
[58 147]
[61 144]
[62 143]
[63 141]
[64 140]
[66 137]
[67 136]
[68 135]
[72 134]
[74 132]
[75 131]
[76 130]
[77 129]
[78 128]
[81 127]
[82 126]
[83 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
