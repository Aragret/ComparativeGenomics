%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[29.10143471 500.80026245]
[33.06223297 515.30828857]
[34.44337845 530.28375244]
[33.20289230 545.27148438]
[29.37847710 559.81604004]
[23.08634949 573.47552490]
[14.51772213 585.83471680]
[3.93298459 596.51806641]
[-8.34620476 605.20092773]
[-21.94669533 611.61950684]
[-36.45518494 615.57867432]
[-51.43077087 616.95812988]
[-66.41837311 615.71594238]
[-80.96252441 611.88983154]
[-94.62124634 605.59619141]
[-106.97946930 597.02612305]
[-117.66164398 586.44018555]
[-126.34313965 574.16003418]
[-132.76014709 560.55883789]
[-136.71766663 546.04986572]
[-138.09541321 531.07409668]
[-136.85151672 516.08666992]
[-133.02380371 501.54293823]
[-126.72858429 487.88494873]
[-118.15715027 475.52767944]
[-107.56999207 464.84671021]
[-95.28883362 456.16659546]
[-81.68688202 449.75115967]
[-67.17749786 445.79528809]
[-52.20159912 444.41921997]
[-37.21428299 445.66482544]
[-22.67099953 449.49417114]
[-16.39363861 435.87084961]
[-10.11627865 422.24755859]
[-3.83891773 408.62423706]
[2.43844295 395.00091553]
[8.71580315 381.37759399]
[14.89157200 367.70791626]
[20.96540642 353.99267578]
[27.03923988 340.27740479]
[33.11307526 326.56213379]
[39.18690872 312.84686279]
[39.02109528 305.45806885]
[45.45462799 298.97366333]
[51.73198700 285.35034180]
[58.00934982 271.72702026]
[64.28671265 258.10372925]
[70.56407166 244.48040771]
[76.53562927 230.72029114]
[82.19841766 216.83027649]
[85.52067566 202.20280457]
[86.41349792 187.22940063]
[87.30631256 172.25599670]
[79.51426697 163.00340271]
[80.13553619 150.52149963]
[89.38182068 141.52877808]
[90.49746704 126.57032776]
[91.61312103 111.61187744]
[85.71572876 98.93463135]
[93.42842865 87.27247620]
[94.54407501 72.31402588]
[95.65972900 57.35557175]
[96.77537537 42.39711761]
[86.73903656 30.48452950]
[88.08355713 15.33042240]
[99.50223541 5.83572578]
[100.61788940 -9.12272739]
[101.62214661 -24.08907127]
[102.51496124 -39.06247711]
[94.55300903 -49.20989609]
[95.60489655 -61.66289902]
[104.56324005 -69.79152679]
[105.67889404 -84.74997711]
[106.79454041 -99.70842743]
[107.91018677 -114.66688538]
[109.02584076 -129.62533569]
[110.14148712 -144.58378601]
[109.24867249 -159.55718994]
[106.36339569 -174.27708435]
[103.47812653 -188.99697876]
[93.23082733 -201.05116272]
[98.37553406 -215.02905273]
[95.49025726 -229.74894714]
[92.60498810 -244.46884155]
[77.55283356 -244.60118103]
[62.83550644 -247.76113892]
[49.05568314 -253.81929016]
[36.77762985 -262.52758789]
[26.50412750 -273.52938843]
[18.65586853 -286.37423706]
[13.55423737 -300.53610229]
[11.40813923 -315.43505859]
[12.30545712 -330.46102905]
[16.20944595 -344.99868774]
[22.96024132 -358.45275879]
[32.28139877 -370.27224731]
[43.79122925 -379.97323608]
[57.01840210 -387.15838623]
[71.42128754 -391.53353882]
[86.41007996 -392.91952515]
[101.37100983 -391.25955200]
[115.69142914 -386.62161255]
[128.78492737 -379.19564819]
[140.11534119 -369.28570557]
[149.21868896 -357.29763794]
[155.72219849 -343.72232056]
[159.35955811 -329.11566162]
[159.98179626 -314.07577515]
[157.56347656 -299.21856689]
[152.20358276 -285.15243530]
[144.12162781 -272.45333862]
[133.64855957 -261.64132690]
[121.21323395 -253.15913391]
[107.32487488 -247.35411072]
[110.21015167 -232.63421631]
[113.09542084 -217.91432190]
[123.13634491 -206.91300964]
[118.19801331 -191.88224792]
[121.08329010 -177.16235352]
[123.96855927 -162.44247437]
[128.29101562 -176.80618286]
[136.78881836 -189.16690063]
[148.65200806 -198.34648132]
[162.74987793 -203.46997070]
[177.73870850 -204.04902649]
[192.18983459 -200.02848816]
[204.72589111 -191.79153442]
[214.15200806 -180.12327576]
[219.56974792 -166.13584900]
[220.46273804 -151.16246033]
[216.74586487 -136.63024902]
[208.77337646 -123.92436981]
[197.30519104 -114.25584412]
[183.43434143 -108.54621124]
[168.48294067 -107.33969116]
[153.87606812 -110.75126648]
[141.00592041 -118.45578003]
[131.09922791 -129.71888733]
[125.09993744 -143.46813965]
[123.98429108 -128.50968933]
[122.86864471 -113.55123901]
[121.75299072 -98.59278107]
[120.63734436 -83.63433075]
[119.52169800 -68.67587280]
[127.98229980 -53.30105209]
[117.48836517 -38.16966248]
[116.59555054 -23.19625664]
[119.33535767 -16.33219910]
[115.57633972 -8.00707912]
[114.46069336 6.95137405]
[124.34458923 18.03488541]
[123.42624664 33.22077560]
[111.73382568 43.51276398]
[110.61817932 58.47121811]
[109.50253296 73.42967224]
[108.38687897 88.38812256]
[114.28427124 101.06536865]
[106.57157135 112.72752380]
[105.45592499 127.68597412]
[104.34027100 142.64442444]
[112.71855927 159.04217529]
[102.27971649 173.14881897]
[101.38690186 188.12222290]
[100.49408722 203.09562683]
[108.00015259 190.10874939]
[118.57408142 179.46957397]
[131.51452637 171.88375854]
[145.96322632 167.85443115]
[160.96180725 167.64886475]
[175.51550293 171.28067017]
[188.65899658 178.50897217]
[199.52055359 188.85435486]
[207.37973022 201.63063049]
[211.71528625 215.99038696]
[212.23963928 230.98123169]
[208.91802979 245.60882568]
[201.97074890 258.90301514]
[191.85859680 269.98202515]
[179.25227356 278.11102295]
[164.98791504 282.75085449]
[150.01161194 283.59375000]
[135.31671143 280.58383179]
[121.87784576 273.92071533]
[110.58638763 264.04635620]
[102.19124603 251.61569214]
[97.24925232 237.45318604]
[96.08844757 222.49305725]
[90.42565918 236.38308716]
[91.13761902 241.55418396]
[89.91691589 246.03337097]
[87.35074615 249.20036316]
[84.18738556 250.75776672]
[77.91002655 264.38107300]
[71.63266754 278.00439453]
[65.35530090 291.62771606]
[59.07794189 305.25103760]
[52.90217590 318.92068481]
[46.82834244 332.63595581]
[40.75450516 346.35122681]
[34.68067169 360.06649780]
[28.60683823 373.78176880]
[27.99331856 382.89556885]
[22.33911896 387.65496826]
[16.06175995 401.27828979]
[9.78439808 414.90158081]
[3.50703764 428.52490234]
[-2.77032304 442.14822388]
[-9.04768372 455.77154541]
[3.31248426 464.33877563]
[13.99705696 474.92230225]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 208]
[33 207]
[34 206]
[35 205]
[36 204]
[37 203]
[38 201]
[39 200]
[40 199]
[41 198]
[42 197]
[44 196]
[45 195]
[46 194]
[47 193]
[48 192]
[49 188]
[50 187]
[51 164]
[52 163]
[53 162]
[56 160]
[57 159]
[58 158]
[60 156]
[61 155]
[62 154]
[63 153]
[66 150]
[67 149]
[68 147]
[69 146]
[72 144]
[73 143]
[74 142]
[75 141]
[76 140]
[77 139]
[78 120]
[79 119]
[80 118]
[82 116]
[83 115]
[84 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
