%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAAUAAGGAAGAUCCGUAUCAUCCCUCCUAUACUCCACACUCGCUAUAUGAUCAUAAGGAUCUUCACUCUACCAUUUACGAUCAUAUUAUAAAUACAUxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[-26.96635628 481.43856812]
[-19.68825912 494.64056396]
[-15.78177357 509.20089722]
[-15.47401714 524.27301025]
[-18.78288460 538.98065186]
[-25.51600075 552.46875000]
[-35.28190994 563.95312500]
[-47.51284027 572.76605225]
[-61.49769592 578.39520264]
[-76.42341614 580.51324463]
[-91.42224121 578.99713135]
[-105.62216187 573.93493652]
[-118.19760895 565.62097168]
[-128.41746521 554.53869629]
[-135.68756104 541.33227539]
[-139.58522034 526.76959229]
[-139.88383484 511.69726562]
[-136.56605530 496.99163818]
[-129.82475281 483.50762939]
[-120.05188751 472.02920532]
[-107.81561279 463.22369385]
[-93.82734680 457.60302734]
[-78.90034485 455.49398804]
[-63.90244293 457.01922607]
[-58.86552429 442.89019775]
[-53.82860947 428.76116943]
[-48.79169464 414.63211060]
[-43.75477600 400.50308228]
[-38.71786118 386.37405396]
[-33.68094635 372.24502563]
[-45.81198120 363.49203491]
[-54.99432373 351.66342163]
[-60.47705460 337.71258545]
[-61.80788803 322.76702881]
[-58.87045670 308.03723145]
[-51.89443207 294.71853638]
[-41.43759537 283.89437866]
[-28.34125328 276.44784546]
[-13.66253567 272.98986816]
[1.41091657 273.80902100]
[-1.60337293 259.22262573]
[10.31868458 248.82188416]
[15.35560036 234.69285583]
[14.64069176 227.33686829]
[20.57411766 220.39192200]
[25.82083702 206.33944702]
[31.06755447 192.28697205]
[19.67640877 202.04615784]
[5.65887642 207.38552856]
[-9.33827591 207.67779541]
[-23.55319786 202.88864136]
[-35.31593323 193.58068848]
[-43.24461365 180.84742737]
[-46.40777588 166.18473816]
[-44.43382263 151.31518555]
[-37.55464935 137.98564148]
[-26.57841301 127.76202393]
[-12.79459381 121.84540558]
[2.17750096 120.93087006]
[16.57896423 125.12585449]
[28.71792603 133.93753052]
[37.16831207 146.33070374]
[40.93738556 160.84945679]
[39.58194351 175.78964233]
[47.99656296 163.37214661]
[56.41117859 150.95465088]
[64.82579803 138.53715515]
[65.56027985 123.66067505]
[79.70702362 116.57686615]
[88.12163544 104.15937042]
[96.25685120 91.55705261]
[104.10861206 78.77621460]
[100.65348053 63.58740616]
[108.79833984 50.73766708]
[123.29984283 47.53733063]
[131.15159607 34.75648880]
[139.00335693 21.97564507]
[146.85510254 9.19480228]
[146.93037415 -9.21921062]
[162.67633057 -16.96723938]
[170.33692932 -29.86356544]
[177.99752808 -42.75989151]
[185.65812683 -55.65621948]
[193.31871033 -68.55254364]
[200.39582825 -81.77807617]
[206.87532043 -95.30641937]
[213.35481262 -108.83476257]
[214.23941040 -117.92626190]
[220.03280640 -122.51519775]
[226.71301270 -135.94557190]
[233.39320374 -149.37594604]
[240.07339478 -162.80632019]
[246.55288696 -176.33467102]
[252.83024597 -189.95799255]
[259.10760498 -203.58129883]
[265.38497925 -217.20462036]
[271.66232300 -230.82794189]
[277.93969727 -244.45124817]
[284.21704102 -258.07455444]
[290.49441528 -271.69787598]
[277.96279907 -279.99600220]
[266.84478760 -290.10989380]
[257.40106201 -301.80249023]
[249.85299683 -314.79965210]
[244.37748718 -328.79678345]
[241.10290527 -343.46569824]
[240.10601807 -358.46258545]
[241.41018677 -373.43588257]
[244.98484802 -388.03460693]
[250.74620056 -401.91650391]
[258.55917358 -414.75619507]
[268.24066162 -426.25268555]
[279.56369019 -436.13650513]
[292.26281738 -444.17593384]
[306.04037476 -450.18249512]
[320.57342529 -454.01547241]
[335.52124023 -455.58493042]
[350.53344727 -454.85409546]
[365.25811768 -451.84014893]
[379.35012817 -446.61367798]
[392.47912598 -439.29724121]
[404.33731079 -430.06231689]
[414.64675903 -419.12542725]
[423.16577148 -406.74288940]
[429.69464111 -393.20501709]
[434.08035278 -378.82913208]
[436.22009277 -363.95223999]
[436.06372070 -348.92306519]
[433.61483765 -334.09393311]
[428.93090820 -319.81243896]
[422.12170410 -306.41336060]
[413.34686279 -294.21078491]
[402.81207275 -283.49078369]
[390.76425171 -274.50463867]
[377.48587036 -267.46301270]
[363.28814697 -262.53094482]
[348.50393677 -259.82403564]
[333.47976685 -259.40579224]
[318.56784058 -261.28598022]
[304.11773682 -265.42053223]
[297.84036255 -251.79721069]
[291.56301880 -238.17388916]
[285.28564453 -224.55058289]
[279.00830078 -210.92726135]
[272.73092651 -197.30393982]
[266.45358276 -183.68063354]
[260.17620850 -170.05731201]
[260.96032715 -165.34623718]
[258.79327393 -160.09257507]
[253.50376892 -156.12612915]
[246.82357788 -142.69575500]
[240.14338684 -129.26538086]
[233.46318054 -115.83500671]
[226.88316345 -102.35527039]
[220.40367126 -88.82692719]
[213.92416382 -75.29857635]
[228.39482117 -79.24829102]
[241.48782349 -71.92891693]
[245.70291138 -57.53332138]
[238.62548828 -44.30796432]
[224.30982971 -39.82892609]
[210.95658875 -46.66200256]
[206.21504211 -60.89194870]
[198.55444336 -47.99562454]
[190.89384460 -35.09929657]
[183.23324585 -22.20296860]
[175.57264709 -9.30664158]
[178.25338745 2.48912811]
[171.97677612 13.29596519]
[159.63595581 17.04655838]
[151.78419495 29.82740021]
[143.93243408 42.60824203]
[136.08068848 55.38908386]
[139.78059387 69.77123260]
[131.99986267 82.84468079]
[116.88945007 86.62796783]
[109.03769684 99.40881348]
[109.39315796 103.24886322]
[108.05426025 107.22695923]
[104.99729919 110.58285522]
[100.53913116 112.57398987]
[92.12451935 124.99148560]
[90.78816223 140.75614929]
[77.24329376 146.95178223]
[68.82867432 159.36927795]
[60.41405869 171.78677368]
[51.99943924 184.20426941]
[45.12002563 197.53369141]
[39.87330627 211.58616638]
[34.62659073 225.63864136]
[29.48463058 239.72978210]
[24.44771385 253.85881042]
[27.10172844 269.45581055]
[15.53994560 278.84594727]
[27.73229218 287.74688721]
[36.91323853 299.71066284]
[42.34552383 313.76254272]
[43.59687424 328.76065063]
[40.57439423 343.48873901]
[33.53140259 356.75494385]
[23.04623795 367.48815918]
[9.97475338 374.82452393]
[-4.61952162 378.17687988]
[-19.55191612 377.28195190]
[-24.58883095 391.41098022]
[-29.62574768 405.54000854]
[-34.66266251 419.66903687]
[-39.69958115 433.79806519]
[-44.73649597 447.92709351]
[-49.77341080 462.05612183]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 210]
[25 209]
[26 208]
[27 207]
[28 206]
[29 205]
[30 204]
[40 194]
[42 192]
[43 191]
[45 190]
[46 189]
[47 188]
[64 187]
[65 186]
[66 185]
[67 184]
[69 182]
[70 181]
[71 177]
[72 176]
[75 173]
[76 172]
[77 171]
[78 170]
[80 167]
[81 166]
[82 165]
[83 164]
[84 163]
[85 156]
[86 155]
[87 154]
[89 153]
[90 152]
[91 151]
[92 150]
[93 147]
[94 146]
[95 145]
[96 144]
[97 143]
[98 142]
[99 141]
[100 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
