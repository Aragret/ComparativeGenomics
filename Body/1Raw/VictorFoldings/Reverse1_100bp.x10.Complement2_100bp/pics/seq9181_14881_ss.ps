%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[56.51935196 763.45642090]
[41.84322739 760.29937744]
[27.54032516 755.74060059]
[13.74418449 749.82263184]
[0.58362162 742.60083008]
[-11.81848335 734.14245605]
[-23.34633446 724.52667236]
[-33.89229202 713.84307861]
[-43.35789490 702.19158936]
[-51.65476227 689.68090820]
[-58.70542145 676.42779541]
[-64.44404602 662.55615234]
[-68.81705475 648.19531250]
[-71.78360748 633.47955322]
[-73.31601715 618.54608154]
[-73.39997864 603.53448486]
[-72.03469086 588.58483887]
[-69.23291779 573.83679199]
[-65.02081299 559.42797852]
[-59.43770218 545.49298096]
[-52.53572083 532.16186523]
[-44.37930679 519.55914307]
[-35.04462051 507.80249023]
[-24.61881638 497.00164795]
[-13.19924068 487.25747681]
[-0.89251786 478.66098022]
[12.18644428 471.29238892]
[25.91552925 465.22048950]
[40.16654968 460.50201416]
[54.80643845 457.18099976]
[69.69851685 455.28848267]
[69.25190735 440.29513550]
[68.80529785 425.30178833]
[68.35869598 410.30844116]
[67.91208649 395.31509399]
[67.13076782 380.33544922]
[66.01512146 365.37698364]
[58.50201035 378.35980225]
[45.86556625 386.44189453]
[30.92879486 387.81771851]
[17.02861214 382.17990112]
[7.27035475 370.78796387]
[3.83404064 356.18685913]
[7.48735189 341.63854980]
[17.41412926 330.39315796]
[31.39670563 324.96292114]
[46.31134033 326.56094360]
[58.82606125 334.83029175]
[66.14505768 347.92352295]
[67.48329163 332.98333740]
[68.82152557 318.04315186]
[70.15975952 303.10296631]
[61.92900085 287.60388184]
[72.64704895 272.63040161]
[73.76270294 257.67196655]
[74.87834930 242.71350098]
[75.99399567 227.75505066]
[77.10964203 212.79660034]
[75.38468933 210.58692932]
[74.43107605 207.56083679]
[74.56415558 204.00869751]
[75.98842621 200.32957458]
[78.76309204 196.98962402]
[80.76710510 182.12409973]
[82.77111816 167.25857544]
[84.77513123 152.39305115]
[77.69284821 142.58653259]
[79.24076080 130.18540955]
[89.13027954 121.90530396]
[91.35540009 107.07125854]
[93.47002411 92.22106171]
[95.47403717 77.35552979]
[97.47805023 62.49000549]
[89.09831238 55.88668442]
[84.25250244 46.47258759]
[83.75538635 35.97704697]
[87.62971497 26.29704094]
[95.11418152 19.15434074]
[104.81199646 15.78930664]
[107.47779083 1.02808905]
[110.14358521 -13.73312855]
[103.44387054 -24.75477409]
[105.96810913 -36.99454498]
[115.82891846 -44.00104523]
[118.71418762 -58.72093582]
[113.77585602 -73.75168610]
[123.81678772 -84.75300598]
[126.70205688 -99.47290039]
[129.58732605 -114.19279480]
[132.47259521 -128.91268921]
[135.35787964 -143.63256836]
[138.13348389 -158.37353516]
[140.79928589 -173.13475037]
[143.35511780 -187.91540527]
[145.80084229 -202.71467590]
[148.24656677 -217.51394653]
[150.69229126 -232.31321716]
[151.91926575 -247.26295471]
[151.91926575 -262.26293945]
[138.14540100 -268.83892822]
[128.59547424 -280.74530029]
[125.16563416 -295.61804199]
[128.53688049 -310.50421143]
[138.03984070 -322.44808960]
[151.78771973 -329.07824707]
[167.05082703 -329.07824707]
[180.79869080 -322.44808960]
[190.30166626 -310.50421143]
[193.67291260 -295.61804199]
[190.24307251 -280.74530029]
[180.69314575 -268.83892822]
[166.91926575 -262.26293945]
[166.91926575 -247.26295471]
[175.37718201 -259.65100098]
[188.57974243 -266.77084351]
[203.57748413 -267.03192139]
[217.01983643 -260.37588501]
[225.90377808 -248.28968811]
[228.24459839 -233.47346497]
[223.51934814 -219.23718262]
[212.78366089 -208.76124573]
[198.43594360 -204.38601685]
[183.68147278 -207.08892822]
[171.81645203 -216.26615906]
[165.49156189 -229.86749268]
[163.04583740 -215.06822205]
[160.60011292 -200.26895142]
[158.15438843 -185.46968079]
[160.16522217 -178.35783386]
[155.56050110 -170.46896362]
[152.89469910 -155.70774841]
[154.79942322 -148.56674194]
[150.07775879 -140.74729919]
[147.19248962 -126.02741241]
[144.30722046 -111.30751801]
[141.42195129 -96.58762360]
[138.53668213 -81.86773682]
[143.68138123 -67.88985443]
[133.43408203 -55.83566284]
[130.54881287 -41.11577225]
[137.12245178 -24.84450531]
[124.90480042 -11.06733227]
[122.23900604 3.69388461]
[119.57321167 18.45510101]
[131.82557678 33.60084915]
[128.94453430 53.17642593]
[112.34358215 64.49401855]
[110.33956909 79.35954285]
[108.33554840 94.22507477]
[110.46520996 101.99920654]
[106.18944550 109.29637146]
[103.96432495 124.13041687]
[111.09980011 141.10589600]
[99.64066315 154.39706421]
[97.63665009 169.26258850]
[95.63263702 184.12811279]
[93.62862396 198.99363708]
[92.06809998 213.91224670]
[90.95245361 228.87069702]
[89.83679962 243.82914734]
[88.72115326 258.78759766]
[87.60550690 273.74606323]
[95.41549683 284.01089478]
[94.17832184 296.44686890]
[85.09994507 304.44119263]
[83.76171112 319.38137817]
[82.42346954 334.32156372]
[81.08523560 349.26174927]
[80.97357178 364.26135254]
[82.08921814 379.21978760]
[85.02960968 383.53271484]
[85.93143463 388.08682251]
[85.04418945 392.06524658]
[82.90544128 394.86846924]
[83.35204315 409.86181641]
[83.79865265 424.85516357]
[84.24525452 439.84854126]
[84.69186401 454.84188843]
[99.67018127 455.84466553]
[114.48178864 458.28839111]
[128.98838806 462.15026855]
[143.05453491 467.39422607]
[156.54888916 473.97128296]
[169.34547424 481.82003784]
[181.32478333 490.86721802]
[192.37498474 501.02835083]
[202.39288330 512.20855713]
[211.28497314 524.30346680]
[218.96820068 537.20013428]
[225.37083435 550.77807617]
[230.43309021 564.91064453]
[234.10772705 579.46582031]
[236.36039734 594.30767822]
[237.17010498 609.29766846]
[236.52926636 624.29583740]
[234.44386292 639.16210938]
[230.93338013 653.75775146]
[226.03059387 667.94641113]
[219.78126526 681.59564209]
[212.24375916 694.57800293]
[203.48844910 706.77227783]
[193.59709167 718.06457520]
[182.66201782 728.34948730]
[170.78535461 737.53100586]
[158.07797241 745.52337646]
[144.65853882 752.25201416]
[130.65232849 757.65399170]
[116.19013977 761.67901611]
[101.40699768 764.28936768]
[86.44092560 765.46081543]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 178]
[32 177]
[33 176]
[34 175]
[35 174]
[36 170]
[37 169]
[49 168]
[50 167]
[51 166]
[52 165]
[54 162]
[55 161]
[56 160]
[57 159]
[58 158]
[63 157]
[64 156]
[65 155]
[66 154]
[69 152]
[70 151]
[71 149]
[72 148]
[73 147]
[79 144]
[80 143]
[81 142]
[84 140]
[85 139]
[87 137]
[88 136]
[89 135]
[90 134]
[91 133]
[92 131]
[93 130]
[94 128]
[95 127]
[96 126]
[97 125]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
