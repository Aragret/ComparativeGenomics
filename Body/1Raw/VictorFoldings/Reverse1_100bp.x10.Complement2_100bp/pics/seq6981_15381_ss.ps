%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[53.62848282 702.17663574]
[38.71707153 703.90411377]
[23.70941353 704.22772217]
[8.73740196 703.14447021]
[-6.06738806 700.66406250]
[-20.57484818 696.80810547]
[-34.65748215 691.61065674]
[-48.19152832 685.11724854]
[-61.05804825 677.38500977]
[-73.14396667 668.48193359]
[-84.34307098 658.48620605]
[-94.55694580 647.48571777]
[-103.69581604 635.57708740]
[-111.67937469 622.86499023]
[-118.43746185 609.46118164]
[-123.91069031 595.48339844]
[-128.05094910 581.05450439]
[-130.82185364 566.30133057]
[-132.19906616 551.35345459]
[-132.17047119 536.34234619]
[-130.73631287 521.39990234]
[-127.90921783 506.65734863]
[-123.71401215 492.24435425]
[-118.18757629 478.28750610]
[-111.37846375 464.90954590]
[-103.34652710 452.22796631]
[-94.16235352 440.35421753]
[-83.90664673 429.39270020]
[-72.66953278 419.43972778]
[-60.54978180 410.58273315]
[-47.65389633 402.89962769]
[-34.09520721 396.45785522]
[-19.99287033 391.31405640]
[-5.47082567 387.51342773]
[9.34330750 385.08938599]
[24.31933784 384.06326294]
[39.32565308 384.44400024]
[41.10811996 369.55029297]
[42.89058685 354.65655518]
[44.67304993 339.76284790]
[42.79291916 336.77999878]
[42.26415253 332.73828125]
[43.56867981 328.28277588]
[46.88212204 324.24938965]
[49.32785034 309.45013428]
[42.54067612 299.43707275]
[44.45713425 287.08755493]
[54.58879852 279.10556030]
[57.25459671 264.34436035]
[59.92039108 249.58312988]
[62.58618546 234.82191467]
[65.25198364 220.06069946]
[56.57479095 208.00906372]
[59.06800842 193.00111389]
[71.76770782 183.98138428]
[74.43350220 169.22016907]
[60.81031036 175.49780273]
[47.34043503 168.89761353]
[43.95336914 154.28501892]
[53.14592743 142.43188477]
[68.14170074 142.07589722]
[77.88593292 153.47787476]
[81.64223480 138.95582581]
[80.27391052 131.69293213]
[85.56407928 124.24633026]
[89.53617096 109.78180695]
[86.18740082 96.20692444]
[95.99930573 86.24610138]
[99.97139740 71.78157043]
[103.94349670 57.31705093]
[107.91558838 42.85252762]
[111.45526123 28.27615166]
[114.45003510 13.57814693]
[117.33531189 -1.14174461]
[120.22058105 -15.86163616]
[123.10585785 -30.58152771]
[125.99112701 -45.30141830]
[128.87640381 -60.02130890]
[131.76167297 -74.74120331]
[134.64694214 -89.46109009]
[137.53222656 -104.18098450]
[140.41749573 -118.90087891]
[134.04713440 -136.17802429]
[146.08831787 -148.94425964]
[148.75411987 -163.70547485]
[151.41990662 -178.46670532]
[154.08570862 -193.22792053]
[142.47615051 -203.18609619]
[137.44305420 -217.52363586]
[140.24360657 -232.35681152]
[150.02731323 -243.72056580]
[164.09072876 -248.62834167]
[166.75651550 -263.38955688]
[169.42231750 -278.15078735]
[172.08810425 -292.91198730]
[174.75390625 -307.67321777]
[175.98088074 -322.62295532]
[175.75755310 -337.62127686]
[175.53422546 -352.61962891]
[161.84880066 -359.47290039]
[152.92524719 -371.90789795]
[150.81416321 -387.06710815]
[156.00062561 -401.46710205]
[167.29284668 -411.79879761]
[182.09594727 -415.68811035]
[197.00830078 -412.24127197]
[208.60311890 -402.25033569]
[214.21603394 -388.01119995]
[212.55722046 -372.79583740]
[204.00787354 -360.10067749]
[190.53256226 -352.84295654]
[190.75588989 -337.84460449]
[190.97921753 -322.84628296]
[198.64039612 -335.74224854]
[210.83726501 -344.47360229]
[225.51441956 -347.56896973]
[240.19850159 -344.50668335]
[252.41499329 -335.80279541]
[260.10519409 -322.92410278]
[261.97320557 -308.04089355]
[257.70416260 -293.66119385]
[248.01753235 -282.20828247]
[234.54566956 -275.61215210]
[219.55880737 -274.98440552]
[205.58250427 -280.43075562]
[194.97201538 -291.03347778]
[189.51512146 -305.00741577]
[186.84931946 -290.24621582]
[184.18353271 -275.48498535]
[181.51773071 -260.72375488]
[178.85194397 -245.96255493]
[190.31033325 -236.44567871]
[195.50117493 -222.37759399]
[192.93647766 -207.50181580]
[183.20629883 -195.83045959]
[168.84692383 -190.56211853]
[166.18112183 -175.80090332]
[163.51533508 -161.03968811]
[160.84953308 -146.27847290]
[167.48687744 -136.16549683]
[165.38676453 -123.84586334]
[155.13739014 -116.01560211]
[152.25210571 -101.29571533]
[149.36683655 -86.57582092]
[146.48156738 -71.85592651]
[143.59629822 -57.13603592]
[140.71101379 -42.41614532]
[137.82574463 -27.69625473]
[134.94047546 -12.97636318]
[132.05520630 1.74352801]
[129.16993713 16.46341896]
[130.96812439 23.63198090]
[126.13056946 31.38026047]
[127.54484558 33.80057907]
[128.08561707 36.92694855]
[127.47917175 40.42946243]
[125.57612610 43.88532257]
[122.38011932 46.82462311]
[118.40802002 61.28914642]
[114.43592072 75.75366974]
[110.46382904 90.21819305]
[113.81259918 103.79307556]
[104.00069427 113.75389862]
[100.02860260 128.21842957]
[96.16429901 142.71211243]
[92.40799713 157.23417664]
[89.19471741 171.88597107]
[86.52892303 186.64718628]
[95.27147675 199.53926086]
[92.35769653 214.47125244]
[80.01319885 222.72648621]
[77.34740448 237.48770142]
[74.68161011 252.24893188]
[72.01581573 267.01013184]
[69.35001373 281.77136230]
[75.97689819 298.95175171]
[64.12712097 311.89584351]
[61.68139267 326.69512939]
[59.56676865 341.54531860]
[57.78430176 356.43902588]
[56.00183487 371.33276367]
[54.21937180 386.22647095]
[68.89173126 389.39764404]
[83.20266724 393.92880249]
[97.02640533 399.78021240]
[110.24146271 406.90036011]
[122.73169708 415.22674561]
[134.38735962 424.68612671]
[145.10598755 435.19543457]
[154.79341125 446.66226196]
[163.36447144 458.98587036]
[170.74386597 472.05795288]
[176.86672974 485.76361084]
[181.67924500 499.98239136]
[185.13914490 514.58935547]
[187.21600342 529.45617676]
[187.89157104 544.45208740]
[187.15991211 559.44537354]
[185.02746582 574.30432129]
[181.51295471 588.89825439]
[176.64727783 603.09893799]
[170.47320557 616.78155518]
[163.04496765 629.82592773]
[154.42787170 642.11743164]
[144.69763184 653.54791260]
[133.93975830 664.01708984]
[122.24880219 673.43280029]
[109.72750854 681.71240234]
[96.48591614 688.78308105]
[82.64038849 694.58270264]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 182]
[38 181]
[39 180]
[40 179]
[44 178]
[45 177]
[48 175]
[49 174]
[50 173]
[51 172]
[52 171]
[55 168]
[56 167]
[62 166]
[63 165]
[65 164]
[66 163]
[68 161]
[69 160]
[70 159]
[71 158]
[72 153]
[73 151]
[74 150]
[75 149]
[76 148]
[77 147]
[78 146]
[79 145]
[80 144]
[81 143]
[82 142]
[84 139]
[85 138]
[86 137]
[87 136]
[92 131]
[93 130]
[94 129]
[95 128]
[96 127]
[97 113]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
