%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxUGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[231.61329651 596.75305176]
[244.43551636 588.82495117]
[239.82150269 574.55224609]
[235.20748901 560.27947998]
[230.59349060 546.00677490]
[225.97947693 531.73400879]
[221.36546326 517.46130371]
[208.02871704 510.92932129]
[203.14613342 496.52044678]
[210.08792114 482.57595825]
[205.47390747 468.30322266]
[190.56137085 469.65148926]
[175.71556091 467.64633179]
[161.68150330 462.38519287]
[149.16413879 454.12884521]
[138.79302979 443.28869629]
[131.09063721 430.40621948]
[126.44601440 416.12585449]
[125.09516144 401.16275024]
[127.10902405 386.26708984]
[132.38978577 372.18634033]
[140.67562866 359.62786865]
[151.55366516 349.22320557]
[164.48057556 341.49658203]
[159.86656189 327.22384644]
[155.25254822 312.95111084]
[150.20397949 307.55352783]
[150.67781067 298.43139648]
[146.27680969 284.09155273]
[135.14585876 274.19454956]
[138.49366760 258.73159790]
[134.09266663 244.39173889]
[129.69166565 230.05189514]
[125.29067230 215.71205139]
[120.88967133 201.37220764]
[108.94976807 199.17811584]
[99.01696777 192.07373047]
[93.01195526 181.35734558]
[92.12786865 169.03265381]
[96.59367371 157.43415833]
[105.61917114 148.78498840]
[101.64707947 134.32046509]
[89.99980164 132.87252808]
[79.51937103 127.58896637]
[71.42865753 119.08626556]
[66.67170715 108.35654449]
[65.80355835 96.65176392]
[68.92552185 85.33766174]
[75.67331696 75.73439789]
[85.25959778 68.96247864]
[81.93733215 54.33502197]
[78.61507416 39.70756149]
[68.01342010 27.96381760]
[72.73966980 13.83895302]
[69.41741180 -0.78850734]
[66.09515381 -15.41596794]
[62.77289200 -30.04342842]
[59.45063400 -44.67088699]
[56.12837601 -59.29834747]
[52.58870316 -73.87472534]
[48.83240128 -88.39678192]
[45.07609940 -102.91883850]
[39.98989487 -88.80747986]
[28.99095345 -78.60829926]
[14.53646946 -74.59982300]
[-0.14438850 -77.67755127]
[-11.77187920 -87.15391541]
[-17.74839211 -100.91186523]
[-16.73875809 -115.87785339]
[-8.96853256 -128.70841980]
[3.82639575 -136.53720093]
[18.78760910 -137.61521912]
[32.57273102 -131.70164490]
[42.10214233 -120.11756134]
[40.76390839 -135.05775452]
[39.42567444 -149.99792480]
[29.00160027 -139.21189880]
[14.00677013 -138.81808472]
[3.03090525 -149.04209900]
[2.36147904 -164.02714539]
[12.38196945 -175.18913269]
[27.35218430 -176.13394165]
[38.69607544 -166.32121277]
[38.69607544 -181.32121277]
[38.69607544 -196.32121277]
[30.95877457 -210.12138367]
[38.69607544 -222.84864807]
[25.01557541 -229.52737427]
[15.62972641 -241.43505859]
[12.35808659 -256.17672729]
[15.79727650 -270.81683350]
[25.21301079 -282.46386719]
[38.69607544 -288.84136963]
[38.69607544 -303.84136963]
[38.69607544 -318.84136963]
[38.69607544 -333.84136963]
[38.69607544 -348.84136963]
[38.69607544 -363.84136963]
[24.63888741 -369.62615967]
[13.86901379 -380.35360718]
[8.02878284 -394.38784790]
[8.00878716 -409.58877563]
[13.81207466 -423.63833618]
[24.55368805 -434.39410400]
[38.59560776 -440.21588135]
[53.79654312 -440.21588135]
[67.83846283 -434.39410400]
[78.58007050 -423.63833618]
[84.38336182 -409.58877563]
[84.36336517 -394.38784790]
[78.52313232 -380.35360718]
[67.75326538 -369.62615967]
[53.69607544 -363.84136963]
[53.69607544 -348.84136963]
[53.69607544 -333.84136963]
[53.69607544 -318.84136963]
[53.69607544 -303.84136963]
[53.69607544 -288.84136963]
[67.17913818 -282.46386719]
[76.59487152 -270.81683350]
[80.03406525 -256.17672729]
[76.76242065 -241.43505859]
[67.37657166 -229.52737427]
[53.69607544 -222.84864807]
[61.43337631 -210.12138367]
[53.69607544 -196.32121277]
[53.69607544 -181.32121277]
[53.69607544 -166.32121277]
[54.36585999 -151.33616638]
[55.70409393 -136.39598083]
[57.04232788 -121.45579529]
[59.59815979 -106.67514038]
[63.35446167 -92.15308380]
[67.11076355 -77.63102722]
[70.69823456 -74.47839355]
[72.34333038 -69.03865814]
[70.75583649 -62.62060928]
[74.07809448 -47.99314880]
[77.40035248 -33.36568832]
[80.72261047 -18.73822784]
[84.04487610 -4.11076689]
[87.36713409 10.51669312]
[97.73115540 21.21418381]
[93.24253845 36.38530350]
[96.56479645 51.01276398]
[99.88705444 65.64022064]
[117.31311035 70.32065582]
[129.96475220 83.18570709]
[134.35308838 100.68760681]
[129.26791382 117.99988556]
[116.11160278 130.34837341]
[120.08369446 144.81289673]
[137.23413086 150.69680786]
[147.33078003 165.56748962]
[146.48712158 183.36465454]
[135.22952271 196.97120667]
[139.63052368 211.31105042]
[144.03150940 225.65089417]
[148.43251038 239.99073792]
[152.83351135 254.33059692]
[164.27926636 265.25329590]
[160.61665344 279.69055176]
[165.01765442 294.03039551]
[169.52528381 308.33709717]
[174.13929749 322.60983276]
[178.75331116 336.88256836]
[193.75694275 335.57998657]
[208.66706848 337.64797974]
[222.73634338 342.97961426]
[235.26028442 351.30456543]
[245.61256409 362.20254517]
[253.27635193 375.12484741]
[257.87002563 389.42169189]
[259.16625977 404.37512207]
[257.10327148 419.23489380]
[251.78768921 433.25616455]
[243.48912048 445.73687744]
[232.62643433 456.05291748]
[219.74664307 463.68920898]
[224.36065674 477.96194458]
[238.15155029 485.20410156]
[242.62748718 499.74441528]
[235.63819885 512.84729004]
[240.25221252 527.11999512]
[244.86621094 541.39276123]
[249.48022461 555.66546631]
[254.09423828 569.93823242]
[258.70825195 584.21093750]
[273.74490356 583.13293457]
[288.60250854 585.68548584]
[302.41720581 591.72015381]
[314.38589478 600.88604736]
[323.81268311 612.65039062]
[330.14950562 626.32916260]
[333.02798462 641.12701416]
[332.28073120 656.18377686]
[327.95123291 670.62396240]
[320.29113770 683.60803223]
[309.74584961 694.38116455]
[296.92843628 702.31701660]
[282.58410645 706.95416260]
[267.54678345 708.02307129]
[252.69075012 705.46148682]
[238.87969971 699.41845703]
[226.91658020 690.24530029]
[217.49693298 678.47528076]
[211.16839600 664.79266357]
[208.29888916 649.99304199]
[209.05526733 634.93676758]
[213.39353943 620.49920654]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 188]
[3 187]
[4 186]
[5 185]
[6 184]
[7 183]
[10 180]
[11 179]
[24 166]
[25 165]
[26 164]
[28 163]
[29 162]
[31 160]
[32 159]
[33 158]
[34 157]
[35 156]
[41 152]
[42 151]
[50 146]
[51 145]
[52 144]
[54 142]
[55 141]
[56 140]
[57 139]
[58 138]
[59 137]
[60 134]
[61 133]
[62 132]
[74 131]
[75 130]
[76 129]
[83 128]
[84 127]
[85 126]
[87 124]
[93 118]
[94 117]
[95 116]
[96 115]
[97 114]
[98 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
