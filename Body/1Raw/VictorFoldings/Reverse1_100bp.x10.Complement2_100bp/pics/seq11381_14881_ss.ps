%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGGCGGAUCAAAAUUCUCAUGACGCCGUUCAUGAUAACUGGGUCGCUACCCCCGAAGCUGUACCCGAAAUCCCUCAGUAUUCACCUCAGGCAUUUCUCxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[38.17608643 733.95477295]
[24.70113182 740.56915283]
[10.67335415 745.91198730]
[-3.78756309 749.93774414]
[-18.55824280 752.61199951]
[-33.51266479 753.91198730]
[-48.52323914 753.82653809]
[-63.46189880 752.35650635]
[-78.20118713 749.51434326]
[-92.61535645 745.32427979]
[-106.58142853 739.82214355]
[-119.98023987 733.05487061]
[-132.69747925 725.08013916]
[-144.62464905 715.96600342]
[-155.65997314 705.79022217]
[-165.70930481 694.63964844]
[-174.68692017 682.60937500]
[-182.51622009 669.80206299]
[-189.13040161 656.32702637]
[-194.47302246 642.29913330]
[-198.49850464 627.83819580]
[-201.17251587 613.06744385]
[-202.47224426 598.11297607]
[-202.38658142 583.10241699]
[-200.91627502 568.16381836]
[-198.07385254 553.42456055]
[-193.88359070 539.01043701]
[-188.38121033 525.04449463]
[-181.61367798 511.64578247]
[-173.63871765 498.92868042]
[-164.52439880 487.00164795]
[-154.34844971 475.96649170]
[-143.19769287 465.91735840]
[-131.16729736 456.93994141]
[-118.35987091 449.11083984]
[-104.88469696 442.49688721]
[-90.85674286 437.15451050]
[-76.39569092 433.12927246]
[-61.62491989 430.45550537]
[-46.67045593 429.15600586]
[-31.65988350 429.24194336]
[-16.72127151 430.71249390]
[-1.98207545 433.55514526]
[-5.85921907 419.17401123]
[5.42263842 408.08212280]
[9.60964966 393.67834473]
[13.79666042 379.27456665]
[17.98367119 364.87075806]
[22.17068291 350.46697998]
[26.35769463 336.06320190]
[30.54470634 321.65942383]
[26.66756248 307.27828979]
[37.94942093 296.18640137]
[42.13642883 281.78259277]
[46.32344055 267.37881470]
[50.51045227 252.97503662]
[45.41467285 236.18218994]
[58.81274414 223.54995728]
[62.78483963 209.08543396]
[66.75693512 194.62091064]
[70.72903442 180.15638733]
[69.18728638 175.63619995]
[70.46871948 170.09951782]
[75.04071808 165.32369995]
[79.44171906 150.98385620]
[83.41381073 136.51933289]
[86.95348358 121.94295502]
[90.49315643 107.36658478]
[93.81541443 92.73912048]
[96.91952515 78.06381989]
[92.20552826 62.96121216]
[102.40913391 52.11060333]
[105.51324463 37.43529892]
[108.61735535 22.75999832]
[110.84247589 7.92595387]
[112.18070984 -7.01423073]
[113.51894379 -21.95441628]
[114.85717773 -36.89459991]
[101.44219208 -43.98783112]
[91.79094696 -55.64529800]
[87.35015106 -70.07072449]
[88.76674652 -85.05674744]
[95.79386902 -98.32265472]
[107.33317566 -107.86151886]
[121.60640717 -112.24375916]
[122.94464111 -127.18394470]
[124.28287506 -142.12413025]
[124.72948456 -157.11747742]
[124.28287506 -172.11082458]
[123.83627319 -187.10417175]
[123.38966370 -202.09751892]
[122.94306183 -217.09088135]
[122.38484955 -232.08049011]
[121.71506500 -247.06552124]
[121.04528046 -262.05056763]
[106.51254272 -266.30239868]
[94.14923859 -275.04467773]
[85.29644775 -287.32910156]
[80.91445923 -301.82312012]
[81.47859192 -316.95455933]
[86.92765808 -331.08206177]
[96.67057800 -342.67318726]
[109.65052032 -350.47061157]
[124.45951080 -353.62854004]
[139.49119568 -351.80441284]
[153.11502075 -345.19610596]
[163.85321045 -334.52041626]
[170.54093933 -320.93539429]
[172.45277405 -305.91461182]
[169.38136292 -291.08743286]
[161.65983582 -278.06219482]
[150.12577820 -268.25180054]
[136.03031921 -262.72033691]
[136.70010376 -247.73530579]
[137.36988831 -232.75027466]
[140.80892944 -226.20849609]
[137.93641663 -217.53747559]
[138.38301086 -202.54412842]
[138.82962036 -187.55078125]
[139.27622986 -172.55743408]
[139.72283936 -157.56408691]
[149.25732422 -169.14395142]
[163.74800110 -173.01956177]
[177.79019165 -167.74540710]
[186.14651489 -155.28860474]
[185.70027161 -140.29524231]
[176.61788940 -128.35748291]
[162.28688049 -123.92779541]
[148.05235291 -128.65835571]
[139.22306824 -140.78588867]
[137.88482666 -125.84570312]
[136.54660034 -110.90552521]
[149.81381226 -104.05641174]
[159.47418213 -92.61863708]
[164.03181458 -78.31504059]
[162.76255798 -63.31582642]
[155.82876587 -49.90924835]
[144.25939941 -40.15257645]
[129.79736328 -35.55636597]
[128.45912170 -20.61618233]
[127.12089539 -5.67599678]
[125.78266144 9.26418781]
[136.62564087 -1.10064304]
[151.47418213 -3.22685075]
[164.79014587 3.67858791]
[171.60700989 17.04011536]
[169.38224792 31.87421227]
[158.94563293 42.64812851]
[144.18978882 45.34345627]
[130.61825562 38.95490646]
[123.29265594 25.86410713]
[120.18854523 40.53940964]
[117.08443451 55.21471405]
[122.02046204 69.26764679]
[111.59483337 81.16793060]
[108.49072266 95.84323120]
[110.28236389 100.77313995]
[109.18433380 106.35594177]
[105.06953430 110.90625763]
[101.52986145 125.48262787]
[97.99018860 140.05900574]
[99.36013794 144.17935181]
[99.34881592 148.12452698]
[98.18090820 151.48181152]
[96.19203949 153.95385742]
[93.78156281 155.38485718]
[89.38056946 169.72470093]
[85.19355774 184.12847900]
[81.22145844 198.59300232]
[77.24935913 213.05752563]
[73.27726746 227.52204895]
[78.96695709 239.09747314]
[75.36080933 251.06323242]
[64.91423798 257.16204834]
[60.72722244 271.56582642]
[56.54021454 285.96960449]
[52.35320282 300.37341309]
[55.93086243 315.78479004]
[44.94848633 325.84643555]
[40.76147461 340.25021362]
[36.57446671 354.65399170]
[32.38745499 369.05776978]
[28.20044327 383.46154785]
[24.01343155 397.86535645]
[19.82641983 412.26913452]
[23.40408134 427.68051147]
[12.42170620 437.74215698]
[26.38795853 443.24383545]
[39.78699493 450.01071167]
[52.50450134 457.98501587]
[64.43196869 467.09875488]
[75.46763611 477.27413940]
[85.51734924 488.42440796]
[94.49536133 500.45434570]
[102.32508087 513.26141357]
[108.93970490 526.73620605]
[114.28279877 540.76391602]
[118.30876923 555.22479248]
[120.98327637 569.99542236]
[122.28349304 584.94982910]
[122.19833374 599.96038818]
[120.72852325 614.89904785]
[117.88659668 629.63842773]
[113.69680786 644.05261230]
[108.19489288 658.01879883]
[101.42781067 671.41772461]
[93.45327759 684.13507080]
[84.33934784 696.06243896]
[74.16376495 707.09790039]
[63.01335526 717.14746094]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 187]
[45 185]
[46 184]
[47 183]
[48 182]
[49 181]
[50 180]
[51 179]
[53 177]
[54 176]
[55 175]
[56 174]
[58 171]
[59 170]
[60 169]
[61 168]
[64 167]
[65 166]
[66 161]
[67 160]
[68 159]
[69 156]
[70 155]
[72 153]
[73 152]
[74 151]
[75 142]
[76 141]
[77 140]
[78 139]
[85 132]
[86 131]
[87 130]
[88 121]
[89 120]
[90 119]
[91 118]
[92 117]
[93 115]
[94 114]
[95 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
