%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCGGCGUGAGCAUUCCCCACCUAAAAAGAUACAUCGGCAACUCAACACCAUCAGUUUUACAUUAUUAAUAAUCAUCAUUCCGAUCCUCCCACAACUAAxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[100.39054108 466.33129883]
[97.46710205 451.58132935]
[97.07864380 436.54943848]
[99.23633575 421.66818237]
[103.87809753 407.36566162]
[110.87038422 394.05340576]
[120.01200867 382.11444092]
[131.03994751 371.89227295]
[143.63690186 363.68103027]
[157.44044495 357.71694946]
[153.90077209 343.14056396]
[150.36109924 328.56420898]
[146.82142639 313.98782349]
[143.28175354 299.41143799]
[139.74208069 284.83508301]
[135.55506897 270.43127441]
[130.72908020 256.22882080]
[125.90307617 242.02638245]
[121.07707977 227.82391357]
[114.52577209 241.31764221]
[100.88542175 247.55790710]
[86.39221954 243.69175720]
[77.67226410 231.48674011]
[78.71218872 216.52284241]
[89.03656769 205.64132690]
[103.92522430 203.81710815]
[116.57241058 211.88563538]
[113.25014496 197.25816345]
[109.92788696 182.63070679]
[105.38099670 176.80426025]
[106.66677094 167.76077271]
[103.56266022 153.08546448]
[100.45854950 138.41017151]
[97.35443878 123.73486328]
[94.25033569 109.05956268]
[88.89914703 95.04653931]
[81.43140411 82.03759003]
[73.96366119 69.02863312]
[66.49592590 56.01968384]
[48.62416840 46.69429398]
[49.51172638 27.37851715]
[41.65997314 14.59767437]
[33.80821609 1.81683159]
[19.99189568 -5.89159775]
[19.92241478 -20.78604126]
[12.07065964 -33.56688309]
[4.21890450 -46.34772491]
[-3.63285089 -59.12856674]
[-11.48460674 -71.90940857]
[-19.33636284 -84.69025421]
[-27.18811798 -97.47109985]
[-35.03987122 -110.25193787]
[-42.89162827 -123.03278351]
[-47.48255920 -125.51681519]
[-50.37259293 -129.15013123]
[-51.40877914 -133.09239197]
[-50.79385757 -136.56430054]
[-58.06708908 -149.68299866]
[-71.52542877 -158.00067139]
[-70.92976379 -172.88336182]
[-78.20299530 -186.00205994]
[-85.47622681 -199.12074280]
[-92.74945831 -212.23944092]
[-100.02268219 -225.35813904]
[-113.96772003 -219.77787781]
[-128.50219727 -215.98944092]
[-143.39688110 -214.05258179]
[-158.41688538 -213.99784851]
[-173.32528687 -215.82611084]
[-187.88699341 -219.50851440]
[-201.87232971 -224.98698425]
[-215.06071472 -232.17514038]
[-227.24417114 -240.95959473]
[-238.23054504 -251.20181274]
[-247.84654236 -262.74026489]
[-255.94053650 -275.39294434]
[-262.38485718 -288.96032715]
[-267.07785034 -303.22845459]
[-269.94555664 -317.97222900]
[-270.94268799 -332.95919800]
[-270.05352783 -347.95294189]
[-267.29214478 -362.71704102]
[-262.70202637 -377.01858521]
[-256.35562134 -390.63204956]
[-248.35299683 -403.34271240]
[-238.82035828 -414.95013428]
[-227.90806580 -425.27120972]
[-215.78820801 -434.14321899]
[-202.65194702 -441.42617798]
[-188.70643616 -447.00527954]
[-174.17164612 -450.79248047]
[-159.27679443 -452.72808838]
[-144.25679016 -452.78155518]
[-129.34852600 -450.95205688]
[-114.78713989 -447.26843262]
[-100.80226898 -441.78875732]
[-87.61447906 -434.59948730]
[-75.43177032 -425.81402588]
[-64.44626617 -415.57089233]
[-54.83122635 -404.03161621]
[-46.73830414 -391.37826538]
[-40.29512787 -377.81033325]
[-35.60332108 -363.54180908]
[-32.73687744 -348.79779053]
[-31.74100494 -333.81072998]
[-32.63140869 -318.81704712]
[-35.39405060 -304.05322266]
[-39.98535538 -289.75204468]
[-46.33291245 -276.13912964]
[-54.33660889 -263.42913818]
[-63.87022400 -251.82252502]
[-74.78338623 -241.50234985]
[-86.90399170 -232.63136292]
[-79.63076019 -219.51268005]
[-72.35752869 -206.39398193]
[-65.08430481 -193.27528381]
[-57.81107330 -180.15658569]
[-44.87296295 -172.77725220]
[-44.94839478 -156.95622253]
[-37.67516327 -143.83753967]
[-30.11078644 -130.88453674]
[-22.25902939 -118.10369110]
[-14.40727520 -105.32285309]
[-6.55551958 -92.54200745]
[1.29623604 -79.76116943]
[9.14799118 -66.98032379]
[16.99974632 -54.19948196]
[24.85150337 -41.41864014]
[32.70325851 -28.63779640]
[45.95796585 -21.84353828]
[46.58905792 -6.03492403]
[54.44081497 6.74591875]
[62.29256821 19.52676201]
[72.40444183 20.99748993]
[80.20130157 27.93703842]
[82.94817352 38.23436737]
[79.50487518 48.55194092]
[86.97261810 61.56089401]
[94.44035339 74.56984711]
[101.90809631 87.57879639]
[101.11447144 72.59980774]
[104.33762360 57.95019150]
[111.34486389 44.68751144]
[121.63033295 33.76922226]
[134.45150757 25.98351479]
[148.88284302 21.89245033]
[163.88250732 21.79136658]
[178.36766052 25.68756104]
[191.29260254 33.29976273]
[201.72428894 44.07844162]
[208.90963745 57.24547577]
[212.32994080 71.85031891]
[211.73826599 86.83864594]
[207.17733765 101.12843323]
[198.97640991 113.68807983]
[187.72752380 123.61090851]
[174.24273682 130.18057251]
[159.49552917 132.92280579]
[144.55050659 131.63963318]
[130.48658752 126.42370605]
[118.31903076 117.65155029]
[108.92563629 105.95545197]
[112.02974701 120.63075256]
[115.13385773 135.30606079]
[118.23796844 149.98135376]
[121.34207153 164.65666199]
[124.55535126 179.30845642]
[127.87760925 193.93591309]
[131.19987488 208.56336975]
[135.27954102 222.99792480]
[140.10552979 237.20037842]
[144.93153381 251.40283203]
[149.75752258 265.60528564]
[157.34193420 252.66401672]
[171.82035828 248.74287415]
[184.89889526 256.08807373]
[189.08555603 270.49194336]
[181.98204041 283.70330811]
[167.65757751 288.15408325]
[154.31845093 281.29541016]
[157.85812378 295.87176514]
[161.39779663 310.44815063]
[164.93746948 325.02453613]
[168.47714233 339.60089111]
[172.01681519 354.17727661]
[187.01834106 353.14645386]
[201.97825623 354.66589355]
[216.46617126 358.69189453]
[230.06520081 365.10858154]
[242.38410950 373.73138428]
[253.06845093 384.31216431]
[261.81079102 396.54650879]
[268.35961914 410.08242798]
[272.52651978 424.53042603]
[274.19158936 439.47485352]
[273.30688477 454.48568726]
[269.89791870 469.13107300]
[264.06277466 482.98959351]
[255.96928406 495.66253662]
[245.85035706 506.78527832]
[233.99713135 516.03778076]
[220.75064087 523.15386963]
[206.49200439 527.92871094]
[191.63148499 530.22503662]
[176.59664917 529.97668457]
[161.82006836 527.19085693]
[147.72691345 521.94769287]
[134.72265625 514.39807129]
[123.18145752 504.75912476]
[113.43537903 493.30828857]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 185]
[11 184]
[12 183]
[13 182]
[14 181]
[15 180]
[16 173]
[17 172]
[18 171]
[19 170]
[27 169]
[28 168]
[29 167]
[31 166]
[32 165]
[33 164]
[34 163]
[35 162]
[36 140]
[37 139]
[38 138]
[39 137]
[41 133]
[42 132]
[43 131]
[45 129]
[46 128]
[47 127]
[48 126]
[49 125]
[50 124]
[51 123]
[52 122]
[53 121]
[57 120]
[58 119]
[60 117]
[61 116]
[62 115]
[63 114]
[64 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
