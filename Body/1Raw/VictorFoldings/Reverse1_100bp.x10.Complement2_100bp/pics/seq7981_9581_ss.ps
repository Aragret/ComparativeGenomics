%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxGGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUU\
) } def
/len { sequence length } bind def

/coor [
[316.44375610 438.05709839]
[309.96426392 424.52874756]
[295.87438965 419.83712769]
[289.11053467 406.20974731]
[294.12710571 391.46282959]
[287.64761353 377.93447876]
[281.16809082 364.40612793]
[274.68859863 350.87777710]
[268.20910645 337.34942627]
[261.72961426 323.82107544]
[253.78292847 311.09906006]
[244.46804810 299.34179688]
[235.15316772 287.58456421]
[228.53553772 284.29382324]
[225.78868103 275.58221436]
[216.64988708 263.68756104]
[207.51107788 251.79293823]
[198.37228394 239.89830017]
[189.23347473 228.00366211]
[180.09468079 216.10903931]
[170.60577393 204.49177551]
[160.77519226 193.16218567]
[150.94461060 181.83258057]
[148.80702209 196.67948914]
[136.88027954 205.77635193]
[121.99658203 203.91207886]
[112.68197632 192.15460205]
[114.27230072 177.23915100]
[125.85653687 167.70996094]
[140.79786682 169.02536011]
[132.01727295 156.86390686]
[123.23666382 144.70245361]
[114.45606232 132.54098511]
[105.67545319 120.37953186]
[96.89485168 108.21807861]
[93.93794250 107.47904968]
[91.18457794 105.64778137]
[89.03983307 102.79760742]
[87.87599945 99.15044403]
[87.97916412 95.06114960]
[79.93799591 82.39862823]
[72.69580841 76.83188629]
[71.87299347 69.48717499]
[64.02123260 56.70633316]
[50.20491409 48.99790192]
[50.13543320 34.10345840]
[42.28367996 21.32261658]
[34.43192291 8.54177475]
[26.58016777 -4.23906803]
[18.72841263 -17.01991081]
[10.87665749 -29.80075264]
[3.02490163 -42.58159637]
[-9.31591988 -46.33218765]
[-15.59254456 -57.13902664]
[-12.91180420 -68.93479156]
[-20.57240295 -81.83112335]
[-28.23299980 -94.72744751]
[-35.89359665 -107.62377930]
[-41.46346283 -111.18581390]
[-44.01524734 -116.26374817]
[-43.58370590 -121.02009583]
[-57.04204559 -129.33776855]
[-56.44638443 -144.22045898]
[-63.71961212 -157.33915710]
[-70.99284363 -170.45783997]
[-84.96845245 -164.94990540]
[-99.54343414 -161.31330872]
[-114.46840668 -159.61032104]
[-129.48797607 -159.87005615]
[-144.34515381 -162.08807373]
[-158.78569031 -166.22642517]
[-172.56250000 -172.21427917]
[-185.43983459 -179.94921875]
[-197.19735718 -189.29884338]
[-207.63389587 -200.10319519]
[-216.57083130 -212.17738342]
[-223.85527039 -225.31480408]
[-229.36254883 -239.29067993]
[-232.99842834 -253.86584473]
[-234.70071411 -268.79089355]
[-234.44027710 -283.81045532]
[-232.22154236 -298.66751099]
[-228.08251953 -313.10784912]
[-222.09399414 -326.88436890]
[-214.35844421 -339.76135254]
[-205.00825500 -351.51843262]
[-194.20341492 -361.95443726]
[-182.12879944 -370.89080811]
[-168.99102783 -378.17462158]
[-155.01489258 -383.68124390]
[-140.43955994 -387.31643677]
[-125.51442719 -389.01800537]
[-110.49487305 -388.75683594]
[-95.63791656 -386.53741455]
[-81.19777679 -382.39767456]
[-67.42153931 -376.40850830]
[-54.54493332 -368.67236328]
[-42.78829575 -359.32162476]
[-32.35279846 -348.51626587]
[-23.41700935 -336.44122314]
[-16.13382530 -323.30310059]
[-10.62787533 -309.32672119]
[-6.99337196 -294.75119019]
[-5.29250765 -279.82598877]
[-5.55438519 -264.80645752]
[-7.77452421 -249.94960022]
[-11.91493511 -235.50965881]
[-17.90476990 -221.73370361]
[-25.64153481 -208.85746765]
[-34.99284363 -197.10127258]
[-45.79868317 -186.66629028]
[-57.87414932 -177.73107910]
[-50.60092163 -164.61238098]
[-43.32769012 -151.49368286]
[-30.38958168 -144.11434937]
[-30.46501160 -128.29331970]
[-22.99727058 -115.28437042]
[-15.33667278 -102.38804626]
[-7.67607498 -89.49172211]
[-0.01547776 -76.59539032]
[15.73047352 -68.84736633]
[15.80574417 -50.43334961]
[23.65749931 -37.65250778]
[31.50925446 -24.87166595]
[39.36101151 -12.09082317]
[47.21276474 0.69001901]
[55.06452179 13.47086143]
[62.91627502 26.25170326]
[76.17098999 33.04596329]
[76.80207825 48.85457611]
[84.65383148 61.63541794]
[92.60051727 74.35745239]
[100.64169312 87.01998138]
[109.05630493 99.43747711]
[117.83691406 111.59893036]
[126.61751556 123.76038361]
[135.39811707 135.92184448]
[144.17872620 148.08329773]
[152.95932007 160.24475098]
[162.27420044 172.00199890]
[172.10478210 183.33160400]
[181.93536377 194.66119385]
[186.08749390 195.93154907]
[189.29664612 198.22630310]
[191.35656738 201.12321472]
[192.21932983 204.17645264]
[191.98930359 206.97023010]
[201.12811279 218.86486816]
[210.26690674 230.75950623]
[219.40571594 242.65412903]
[228.54450989 254.54876709]
[237.68331909 266.44338989]
[246.91041565 278.26965332]
[256.22531128 290.02691650]
[265.54019165 301.78417969]
[263.26406860 286.95785522]
[266.42633057 272.29498291]
[274.61093140 259.72467041]
[286.74102783 250.90080261]
[301.22070312 246.98426819]
[316.14489746 248.49037170]
[329.55007935 255.22096252]
[339.67257690 266.29052734]
[345.18060303 280.24264526]
[345.34945679 295.24169922]
[340.15695190 309.31430054]
[330.28625488 320.60894775]
[317.03601074 327.63961792]
[302.14950562 329.48135376]
[287.58532715 325.89181519]
[275.25796509 317.34158325]
[281.73745728 330.86993408]
[288.21694946 344.39828491]
[294.69644165 357.92663574]
[301.17593384 371.45498657]
[307.65542603 384.98330688]
[322.29025269 390.31808472]
[328.66867065 404.13006592]
[323.49258423 418.04925537]
[329.97210693 431.57760620]
[344.52612305 427.75964355]
[359.53970337 426.76531982]
[374.47012329 428.63055420]
[388.77764893 433.28793335]
[401.94506836 440.56912231]
[413.49639893 450.21087646]
[423.01403809 461.86468506]
[430.15396118 475.10922241]
[434.65805054 489.46572876]
[436.36349487 504.41525269]
[435.20861816 519.41735840]
[431.23519897 533.92968750]
[424.58688354 547.42773438]
[415.50396729 559.42340088]
[404.31478882 569.48321533]
[391.42388916 577.24340820]
[377.29718018 582.42346191]
[362.44540405 584.83618164]
[347.40542603 584.39428711]
[332.72091675 581.11383057]
[318.92269897 575.11328125]
[306.50961304 566.60968018]
[295.93035889 555.91033936]
[287.56738281 543.40203857]
[281.72296143 529.53704834]
[278.60842896 514.81640625]
[278.33630371 499.77239990]
[280.91650391 484.94879150]
[286.25567627 470.88146973]
[294.16085815 458.07894897]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 180]
[2 179]
[5 176]
[6 175]
[7 174]
[8 173]
[9 172]
[10 171]
[11 155]
[12 154]
[13 153]
[15 152]
[16 151]
[17 150]
[18 149]
[19 148]
[20 147]
[21 142]
[22 141]
[23 140]
[30 139]
[31 138]
[32 137]
[33 136]
[34 135]
[35 134]
[40 133]
[41 132]
[43 131]
[44 130]
[46 128]
[47 127]
[48 126]
[49 125]
[50 124]
[51 123]
[52 122]
[55 120]
[56 119]
[57 118]
[58 117]
[61 116]
[63 114]
[64 113]
[65 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
