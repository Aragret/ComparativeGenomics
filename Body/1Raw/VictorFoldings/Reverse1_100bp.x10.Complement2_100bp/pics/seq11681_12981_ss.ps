%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGCUGACACUCACGCAAGCAUCAAACUCAAACGAUCCGUCUUAUCAUUACUCCUACAUUCGGGCACCCGCUAAUACUCUUACUGACGCGGCCACUUCGxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[144.72122192 607.44879150]
[157.68962097 599.56304932]
[155.02383423 584.80181885]
[145.14781189 573.65222168]
[150.30938721 558.69665527]
[147.64358521 543.93542480]
[144.97778320 529.17419434]
[142.31199646 514.41302490]
[139.64619446 499.65179443]
[129.77018738 488.50219727]
[134.93174744 473.54663086]
[130.64955139 467.52294922]
[132.33786011 458.54589844]
[129.89213562 443.74664307]
[127.44641113 428.94735718]
[117.73748779 417.65194702]
[123.12114716 402.77490234]
[120.34553528 388.03393555]
[117.24142456 373.35864258]
[114.13732147 358.68334961]
[109.67767334 352.78982544]
[111.09795380 343.76647949]
[108.21268463 329.04660034]
[100.69386292 342.02609253]
[87.02901459 348.21252441]
[72.31478882 345.29852295]
[62.03922272 334.37088013]
[60.03485870 319.50540161]
[67.04926300 306.24652100]
[80.46624756 299.53945923]
[95.28160095 301.88580322]
[105.97010803 312.41143799]
[97.30762482 300.29489136]
[103.99708557 285.95748901]
[102.88143921 270.99902344]
[101.76578522 256.04058838]
[100.53881073 241.09083557]
[99.20057678 226.15065002]
[97.86234283 211.21046448]
[89.02042389 199.22424316]
[95.49568176 184.78880310]
[93.43352509 182.88995361]
[91.99926758 180.05984497]
[91.55139923 176.53353882]
[92.35674286 172.67143250]
[94.54969788 168.92378235]
[94.10309601 153.93041992]
[93.65648651 138.93707275]
[85.54367828 126.44581604]
[92.86666870 112.42139435]
[85.68240356 100.42647552]
[92.13998413 88.02521515]
[88.75645447 79.54055023]
[91.80001831 72.80567932]
[91.57669067 57.80733871]
[88.31986237 49.27323914]
[91.46336365 42.58442688]
[91.46336365 27.58442688]
[82.91153717 17.92890549]
[83.22034454 5.43536997]
[91.67898560 -3.21205401]
[91.90231323 -18.21039200]
[92.01397705 -33.20997620]
[92.01397705 -48.20997620]
[78.11647034 -61.08528519]
[78.04454803 -79.71074677]
[91.37705231 -92.25505829]
[90.93045044 -107.24841309]
[90.48384094 -122.24176025]
[90.03723907 -137.23510742]
[89.59062958 -152.22845459]
[89.03242493 -167.21806335]
[88.36263275 -182.20310974]
[87.69284821 -197.18814087]
[87.02306366 -212.17318726]
[83.51358795 -220.60653687]
[86.45654297 -227.38597107]
[86.00994110 -242.37933350]
[75.93560791 -248.69157410]
[70.21776581 -258.97784424]
[70.17575836 -270.62652588]
[75.70434570 -280.74337769]
[85.32854462 -286.87045288]
[85.32854462 -301.87045288]
[82.19913483 -310.45208740]
[85.44187164 -317.09335327]
[85.66519928 -332.09170532]
[85.88852692 -347.09002686]
[86.11185455 -362.08837891]
[86.22351837 -377.08795166]
[86.22351837 -392.08795166]
[76.64883423 -407.81713867]
[86.00955963 -422.66110229]
[85.78623199 -437.65945435]
[75.97842407 -453.24432373]
[85.11710358 -468.22604370]
[84.67050171 -483.21939087]
[70.44731140 -488.58306885]
[59.36281586 -498.98513794]
[53.10732269 -512.83929443]
[52.63474655 -528.03283691]
[58.01715469 -542.24896240]
[68.43376923 -553.31976318]
[82.29612732 -559.55706787]
[97.49031830 -560.00964355]
[111.69934845 -554.60852051]
[122.75643921 -544.17736816]
[128.97546387 -530.30682373]
[129.40806580 -515.11199951]
[123.98827362 -500.91012573]
[113.54257202 -489.86676025]
[99.66384888 -483.66598511]
[100.11045837 -468.67263794]
[108.69690704 -460.15209961]
[109.19168854 -447.66455078]
[100.78456879 -437.88278198]
[101.00789642 -422.88442993]
[109.46653748 -414.23703003]
[109.77534485 -401.74349976]
[101.22351837 -392.08795166]
[101.22351837 -377.08795166]
[104.36701965 -370.39913940]
[101.11019135 -361.86505127]
[100.88686371 -346.86669922]
[100.66353607 -331.86837769]
[100.44020844 -316.87002563]
[100.32854462 -301.87045288]
[100.32854462 -286.87045288]
[114.02863312 -274.72866821]
[114.51128387 -256.10931396]
[101.00328827 -242.82592773]
[101.44989014 -227.83258057]
[102.00810242 -212.84297180]
[102.67788696 -197.85794067]
[103.34767151 -182.87289429]
[104.01746368 -167.88786316]
[107.45649719 -161.34608459]
[104.58398438 -152.67506409]
[105.03058624 -137.68171692]
[105.47719574 -122.68836975]
[105.92379761 -107.69501495]
[106.37040710 -92.70166779]
[116.17276001 -86.86384583]
[122.00011444 -76.91610718]
[122.30495453 -65.27131653]
[116.89590454 -54.81937790]
[107.01397705 -48.20997620]
[107.01397705 -33.20997620]
[110.15747833 -26.52116394]
[106.90065002 -17.98706436]
[106.67732239 -2.98872638]
[116.03804779 11.85525322]
[106.46336365 27.58442688]
[106.46336365 42.58442688]
[106.57502747 57.58401108]
[106.79835510 72.58235168]
[107.13333130 87.57860565]
[114.31759644 99.57352448]
[107.86001587 111.97478485]
[116.00476837 125.53847504]
[108.64984131 138.49046326]
[109.09644318 153.48382568]
[109.54305267 168.47717285]
[110.43586731 183.45057678]
[119.37350464 196.50543213]
[112.80252838 209.87223816]
[114.14076233 224.81242371]
[115.47899628 239.75260925]
[119.36154175 248.02084351]
[116.72424316 254.92492676]
[117.83988953 269.88339233]
[118.95553589 284.84182739]
[127.69781494 298.02832031]
[120.92855835 311.29580688]
[122.93257141 326.16131592]
[125.81784821 340.88122559]
[128.81262207 355.57922363]
[131.91673279 370.25451660]
[135.02084351 384.92984009]
[138.51107788 388.81124878]
[140.01325989 393.20404053]
[139.66548157 397.26535034]
[137.92042542 400.32916260]
[147.80427551 412.68310547]
[142.24568176 426.50161743]
[144.69140625 441.30090332]
[147.13713074 456.10015869]
[149.69296265 470.88082886]
[159.75965881 483.08624268]
[154.40740967 496.98599243]
[157.07321167 511.74719238]
[159.73901367 526.50842285]
[162.40480042 541.26965332]
[165.07060242 556.03088379]
[175.13729858 568.23626709]
[169.78504944 582.13598633]
[172.45083618 596.89721680]
[187.35833740 599.74871826]
[200.22700500 607.79620361]
[209.31645203 619.95129395]
[213.39741516 634.57012939]
[211.91798401 649.67565918]
[205.07823181 663.22485352]
[193.80319214 673.38549805]
[179.61769104 678.78326416]
[164.44023132 678.68829346]
[150.32342529 673.11328125]
[139.17645264 662.81237793]
[132.50686646 649.17852783]
[131.21665955 634.05572510]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 197]
[3 196]
[5 194]
[6 193]
[7 192]
[8 191]
[9 190]
[11 188]
[13 187]
[14 186]
[15 185]
[17 183]
[18 179]
[19 178]
[20 177]
[22 176]
[23 175]
[32 174]
[34 172]
[35 171]
[36 170]
[37 168]
[38 167]
[39 166]
[41 164]
[46 163]
[47 162]
[48 161]
[50 159]
[52 157]
[54 156]
[55 155]
[57 154]
[58 153]
[61 151]
[62 150]
[63 148]
[64 147]
[67 142]
[68 141]
[69 140]
[70 139]
[71 138]
[72 136]
[73 135]
[74 134]
[75 133]
[77 132]
[78 131]
[83 128]
[84 127]
[86 126]
[87 125]
[88 124]
[89 123]
[90 121]
[91 120]
[93 117]
[94 116]
[96 113]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
