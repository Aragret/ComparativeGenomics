%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxGAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUU\
) } def
/len { sequence length } bind def

/coor [
[88.84448242 520.62359619]
[73.93541718 518.42895508]
[59.93457794 512.85461426]
[47.59700775 504.20123291]
[37.58805466 492.93545532]
[30.44749451 479.66485596]
[26.56040382 465.10507202]
[26.13641167 450.04132080]
[29.19838142 435.28594971]
[35.58118820 421.63467407]
[44.94060898 409.82376099]
[56.77190781 400.49011230]
[70.43703461 394.13708496]
[85.19905090 391.10726929]
[85.64565277 376.11392212]
[86.09226227 361.12057495]
[78.73732758 348.16857910]
[86.88208008 334.60488892]
[87.32868958 319.61154175]
[84.38573456 312.83212280]
[87.89521027 304.39877319]
[88.56499481 289.41372681]
[89.23477936 274.42868042]
[89.90456390 259.44363403]
[90.23954010 244.44738770]
[90.23954010 229.44738770]
[90.23954010 214.44738770]
[90.23954010 199.44738770]
[87.09603882 192.75857544]
[90.35287476 184.22447205]
[90.57620239 169.22613525]
[90.79953003 154.22779846]
[87.75596619 147.49291992]
[91.13948822 139.00825500]
[91.58609772 124.01490784]
[92.03269958 109.02156067]
[84.38707733 121.92676544]
[72.83270264 131.49214172]
[58.72697449 136.59396362]
[43.72702408 136.63285828]
[29.59502983 131.60426331]
[17.99120331 122.09893799]
[10.27875042 109.23355865]
[7.36372280 94.51953125]
[9.58857441 79.68544769]
[16.69193268 66.47399902]
[27.83930016 56.43725586]
[41.72109985 50.75432587]
[56.70650482 50.09283447]
[71.03504944 54.53048706]
[83.02342987 63.54595947]
[91.26326752 76.08011627]
[94.78664398 90.66202545]
[98.75874329 76.19750214]
[102.73084259 61.73297882]
[95.17332458 48.11234283]
[99.40765381 33.49984360]
[112.43942261 26.37884903]
[116.41151428 11.91432476]
[120.38361359 -2.55019903]
[109.61478424 7.89165211]
[95.69824982 13.48898125]
[80.69844818 13.41145897]
[66.84051514 7.67058372]
[56.18018341 -2.88201833]
[50.29886246 -16.68093300]
[50.06900024 -31.67917061]
[55.52470016 -45.65183640]
[65.85664368 -56.52616119]
[79.53214264 -62.68901062]
[94.52252197 -63.22616196]
[108.60404205 -58.05792618]
[119.68780518 -47.95098495]
[126.12959290 -34.40464401]
[126.97406769 -19.43031311]
[133.85346985 -32.75974274]
[140.73289490 -46.08917236]
[147.61230469 -59.41860199]
[154.49171448 -72.74803162]
[140.22883606 -68.10363770]
[126.27093506 -73.59699249]
[118.99937439 -86.71661377]
[121.73860931 -101.46437836]
[133.23629761 -111.09780884]
[148.23587036 -111.21263885]
[159.87969971 -101.75635529]
[162.84411621 -87.05042267]
[171.07293701 -99.59182739]
[172.17442322 -115.37464142]
[185.62554932 -121.77124023]
[193.85435486 -134.31263733]
[202.08316040 -146.85404968]
[210.31196594 -159.39544678]
[218.35314941 -172.05796814]
[226.20489502 -184.83880615]
[234.05665588 -197.61965942]
[241.81304932 -210.45860291]
[249.47364807 -223.35491943]
[257.13424683 -236.25125122]
[264.79483032 -249.14758301]
[252.99075317 -258.43835449]
[242.50039673 -269.19046021]
[233.50326538 -281.21984863]
[226.15330505 -294.32073975]
[220.57627869 -308.26892090]
[216.86764526 -322.82574463]
[215.09082031 -337.74209595]
[215.27626038 -352.76278687]
[217.42074585 -367.63073730]
[221.48759460 -382.09158325]
[227.40724182 -395.89782715]
[235.07836914 -408.81329346]
[244.36972046 -420.61691284]
[255.12229919 -431.10678101]
[267.15213013 -440.10333252]
[280.25335693 -447.45266724]
[294.20181274 -453.02902222]
[308.75881958 -456.73696899]
[323.67526245 -458.51306152]
[338.69592285 -458.32693481]
[353.56378174 -456.18173218]
[368.02441406 -452.11419678]
[381.83041382 -446.19390869]
[394.74548340 -438.52215576]
[406.54867554 -429.23025513]
[417.03802490 -418.47714233]
[426.03399658 -406.44689941]
[433.38272095 -393.34530640]
[438.95840454 -379.39660645]
[442.66567993 -364.83941650]
[444.44107056 -349.92288208]
[444.25421143 -334.90225220]
[442.10830688 -320.03448486]
[438.04006958 -305.57403564]
[432.11911011 -291.76834106]
[424.44674683 -278.85360718]
[415.15429688 -267.05087280]
[404.40069580 -256.56204224]
[392.37002563 -247.56661987]
[379.26809692 -240.21853638]
[365.31909180 -234.64350891]
[350.76174927 -230.93693542]
[335.84512329 -229.16226196]
[320.82449341 -229.34983826]
[305.95684814 -231.49644470]
[291.49658203 -235.56536865]
[277.69116211 -241.48698425]
[270.03057861 -228.59065247]
[262.36996460 -215.69432068]
[254.70936584 -202.79800415]
[253.99598694 -195.44184875]
[246.83749390 -189.76789856]
[238.98574829 -176.98706055]
[231.13398743 -164.20620728]
[231.35272217 -159.43534851]
[228.57673645 -154.47642517]
[222.85336304 -151.16664124]
[214.62455750 -138.62524414]
[206.39575195 -126.08383942]
[198.16694641 -113.54243469]
[197.65403748 -98.65666199]
[183.61433411 -91.36301422]
[175.38552856 -78.82161713]
[167.82115173 -65.86861420]
[160.94172668 -52.53918839]
[154.06231689 -39.20975876]
[147.18290710 -25.88032913]
[140.30349731 -12.55090046]
[134.84814453 1.42189729]
[130.87603760 15.88642120]
[126.90394592 30.35094452]
[134.47134399 43.12866592]
[130.64912415 57.85433197]
[117.19536591 65.70507812]
[113.22326660 80.16960144]
[109.25116730 94.63412476]
[107.02605438 109.46817017]
[106.57944489 124.46151733]
[106.13284302 139.45486450]
[105.79786682 154.45112610]
[105.57453918 169.44946289]
[105.35121155 184.44779968]
[105.23954010 199.44738770]
[105.23954010 214.44738770]
[105.23954010 229.44738770]
[105.23954010 244.44738770]
[107.85100555 248.96704102]
[108.41161346 253.57562256]
[107.23092651 257.47705078]
[104.88960266 260.11343384]
[104.21981812 275.09848022]
[103.55003357 290.08349609]
[102.88024902 305.06854248]
[102.32203674 320.05816650]
[101.87543488 335.05151367]
[109.19841766 349.07592773]
[101.08560944 361.56719971]
[100.63900757 376.56054688]
[100.19239807 391.55389404]
[114.74790192 395.45697021]
[128.01066589 402.61209106]
[139.26544189 412.63342285]
[147.90527344 424.98046875]
[153.46421814 438.98742676]
[155.64250183 453.89889526]
[154.32266235 468.91070557]
[149.57585144 483.21331787]
[141.65806580 496.03540039]
[130.99630737 506.68545532]
[118.16555023 514.58917236]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 199]
[15 198]
[16 197]
[18 195]
[19 194]
[21 193]
[22 192]
[23 191]
[24 190]
[25 186]
[26 185]
[27 184]
[28 183]
[30 182]
[31 181]
[32 180]
[34 179]
[35 178]
[36 177]
[53 176]
[54 175]
[55 174]
[58 171]
[59 170]
[60 169]
[75 168]
[76 167]
[77 166]
[78 165]
[79 164]
[87 163]
[88 162]
[90 160]
[91 159]
[92 158]
[93 157]
[94 154]
[95 153]
[96 152]
[97 150]
[98 149]
[99 148]
[100 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
