%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAUCCUCAGUCCAUCAAUCAUAAUCCUCCCCCCAACAAUCCCCCAGCCUCCUUUUCCAACCCCUUGUCGAUUUAUCCAACAACAACUAAACCAAUUUUxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[57.11904144 616.62237549]
[43.41207504 622.72821045]
[29.33511353 627.92449951]
[14.94843769 632.18896484]
[0.31365365 635.50335693]
[-14.50656986 637.85351562]
[-29.44877052 639.22937012]
[-44.44896317 639.62500000]
[-59.44290924 639.03869629]
[-74.36640930 637.47296143]
[-89.15555573 634.93457031]
[-103.74701691 631.43438721]
[-118.07830811 626.98730469]
[-132.08807373 621.61248779]
[-145.71629333 615.33288574]
[-158.90463257 608.17535400]
[-171.59660339 600.17059326]
[-183.73786926 591.35290527]
[-195.27644348 581.76000977]
[-206.16288757 571.43298340]
[-216.35060120 560.41601562]
[-225.79595947 548.75634766]
[-234.45851135 536.50390625]
[-242.30117798 523.71118164]
[-249.29034424 510.43283081]
[-255.39610291 496.72583008]
[-260.59231567 482.64886475]
[-264.85671997 468.26214600]
[-268.17105103 453.62734985]
[-270.52111816 438.80709839]
[-271.89685059 423.86489868]
[-272.29235840 408.86471558]
[-271.70599365 393.87075806]
[-270.14019775 378.94726562]
[-267.60171509 364.15814209]
[-264.10140991 349.56671143]
[-259.65429688 335.23544312]
[-254.27935791 321.22570801]
[-247.99964905 307.59750366]
[-240.84205627 294.40921021]
[-232.83723450 281.71728516]
[-224.01947021 269.57608032]
[-214.42648315 258.03756714]
[-204.09939575 247.15118408]
[-193.08241272 236.96353149]
[-181.42269897 227.51824951]
[-169.17021179 218.85575867]
[-156.37739563 211.01318359]
[-143.09902954 204.02407837]
[-129.39199829 197.91839600]
[-115.31497192 192.72227478]
[-100.92824554 188.45796204]
[-86.29341888 185.14372253]
[-71.47316742 182.79374695]
[-56.53095245 181.41809082]
[-41.53075790 181.02265930]
[-26.53681374 181.60913086]
[-11.61333275 183.17500305]
[3.17578244 185.71356201]
[17.76720238 189.21395874]
[32.09844208 193.66117859]
[46.10813522 199.03619385]
[52.38549805 185.41287231]
[58.66285706 171.78956604]
[64.94021606 158.16624451]
[71.21758270 144.54292297]
[77.49494171 130.91961670]
[83.77230072 117.29629517]
[90.04965973 103.67298126]
[95.81569672 89.82549286]
[101.06241608 75.77301788]
[106.30912781 61.72055054]
[111.55584717 47.66807938]
[105.24364471 33.42750931]
[110.76474762 19.25104523]
[124.37985992 13.32108498]
[129.62657166 -0.73138607]
[134.87329102 -14.78385735]
[140.12001038 -28.83632851]
[126.52772522 -35.19997787]
[113.49157715 -42.63671875]
[101.09611511 -51.09833145]
[89.42173004 -60.52993011]
[78.54413605 -70.87034607]
[68.53387451 -82.05252838]
[59.45587921 -94.00393677]
[51.36901093 -106.64707184]
[44.32572937 -119.89994049]
[38.37170410 -133.67658997]
[33.54555130 -147.88766479]
[29.87857437 -162.44099426]
[27.39455414 -177.24220276]
[26.10960007 -192.19531250]
[26.03204727 -207.20332336]
[27.16239548 -222.16889954]
[29.49331665 -236.99499512]
[33.00969315 -251.58544922]
[37.68871689 -265.84564209]
[43.50004578 -279.68307495]
[50.40599060 -293.00802612]
[58.36175919 -305.73406982]
[67.31575775 -317.77865601]
[77.20991516 -329.06369019]
[87.98006439 -339.51599121]
[99.55635071 -349.06771851]
[111.86370087 -357.65698242]
[124.82229614 -365.22805786]
[138.34809875 -371.73184204]
[152.35336304 -377.12615967]
[166.74729919 -381.37600708]
[181.43652344 -384.45382690]
[196.32577515 -386.33969116]
[211.31849670 -387.02133179]
[226.31744385 -386.49435425]
[241.22535706 -384.76214600]
[255.94554138 -381.83596802]
[270.38253784 -377.73477173]
[284.44268799 -372.48516846]
[298.03482056 -366.12124634]
[311.07083130 -358.68420410]
[323.46609497 -350.22232056]
[335.14025879 -340.79046631]
[346.01763916 -330.44979858]
[356.02764893 -319.26739502]
[365.10537720 -307.31579590]
[373.19195557 -294.67248535]
[380.23495483 -281.41946411]
[386.18869019 -267.64266968]
[391.01452637 -253.43150330]
[394.68118286 -238.87808228]
[397.16488647 -224.07681274]
[398.44949341 -209.12368774]
[398.52673340 -194.11567688]
[397.39602661 -179.15011597]
[395.06478882 -164.32408142]
[391.54809570 -149.73370361]
[386.86874390 -135.47360229]
[381.05712891 -121.63629913]
[374.15087891 -108.31150055]
[366.19482422 -95.58563232]
[357.24057007 -83.54123688]
[347.34616089 -72.25642395]
[336.57577515 -61.80437851]
[324.99929810 -52.25288773]
[312.69174194 -43.66389465]
[299.73300171 -36.09310913]
[286.20706177 -29.58962631]
[272.20166016 -24.19562531]
[257.80764771 -19.94609070]
[243.11834717 -16.86858177]
[228.22904968 -14.98305702]
[213.23631287 -14.30174637]
[198.23736572 -14.82906628]
[183.32949829 -16.56159973]
[168.60937500 -19.48810768]
[154.17248535 -23.58961105]
[148.92576599 -9.53713894]
[143.67904663 4.51533222]
[138.43232727 18.56780243]
[144.82957458 31.96969986]
[139.70883179 46.29564667]
[125.60832214 52.91479874]
[120.36160278 66.96726990]
[115.11488342 81.01973724]
[109.86816406 95.07221222]
[124.39015198 91.31562042]
[136.47262573 100.20460510]
[137.20881653 115.18652344]
[126.05606079 125.21727753]
[111.23573303 122.90255737]
[103.67298126 109.95034027]
[97.39561462 123.57365417]
[91.11825562 137.19697571]
[84.84089661 150.82028198]
[78.56353760 164.44360352]
[72.28617096 178.06692505]
[66.00881195 191.69023132]
[59.73145294 205.31355286]
[72.91987610 212.47090149]
[85.61194611 220.47550964]
[97.75331879 229.29306030]
[109.29199219 238.88583374]
[120.17855835 249.21273804]
[130.36640930 260.22955322]
[139.81190491 271.88909912]
[148.47460938 284.14141846]
[156.31741333 296.93411255]
[163.30674744 310.21234131]
[169.41265869 323.91928101]
[174.60903931 337.99618530]
[178.87361145 352.38284302]
[182.18811035 367.01760864]
[184.53834534 381.83782959]
[185.91426086 396.78002930]
[186.30996704 411.78021240]
[185.72375488 426.77416992]
[184.15815735 441.69766235]
[181.61984253 456.48681641]
[178.11972046 471.07830811]
[173.67274475 485.40963745]
[168.29798889 499.41943359]
[162.01843262 513.04766846]
[154.86100769 526.23608398]
[146.85633850 538.92810059]
[138.03869629 551.06939697]
[128.44586182 562.60803223]
[118.11889648 573.49450684]
[107.10202789 583.68231201]
[95.44243622 593.12774658]
[83.19004059 601.79034424]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[62 178]
[63 177]
[64 176]
[65 175]
[66 174]
[67 173]
[68 172]
[69 171]
[70 165]
[71 164]
[72 163]
[73 162]
[76 159]
[77 158]
[78 157]
[79 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
