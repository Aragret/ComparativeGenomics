%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAUCGCCCCACUACGGACAACCCCCGGUCACGGGAGGAUUAACCCCCCAUCCCCGAUCCGACCUCACCAUUUUCCGAGUCUUUUUAGGACGCUUCUUUxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[66.28765869 431.99838257]
[78.53292847 422.61453247]
[77.19469452 407.67434692]
[75.85646057 392.73416138]
[74.51822662 377.79397583]
[73.17999268 362.85379028]
[62.32577133 349.06420898]
[70.21212006 332.42428589]
[68.65159607 317.50567627]
[67.09107208 302.58706665]
[65.53054810 287.66845703]
[61.70823669 281.34298706]
[64.05955505 272.51635742]
[62.72131729 257.57617188]
[61.38308334 242.63600159]
[60.04484940 227.69581604]
[58.70661545 212.75563049]
[53.30064392 226.74760437]
[45.13976669 239.33331299]
[34.57098389 249.97760010]
[22.04368973 258.22787476]
[8.09054852 263.73330688]
[-6.69514418 266.25982666]
[-21.68469429 265.69998169]
[-36.24073410 262.07760620]
[-49.74434280 255.54672241]
[-61.62133026 246.38499451]
[-71.36668396 234.98200989]
[-78.56603241 221.82263184]
[-82.91324615 207.46638489]
[-84.22348785 192.52371216]
[-82.44104004 177.63000488]
[-77.64169312 163.41851807]
[-70.02951813 150.49354553]
[-59.92819595 139.40466309]
[-47.76723099 130.62338257]
[-34.06371689 124.52307892]
[-19.40033340 121.36314392]
[-4.40057516 121.27793884]
[10.29776001 124.27109528]
[24.06969261 130.21531677]
[36.32963181 138.85787964]
[46.55627823 149.83129883]
[54.31479263 162.66896057]
[59.27527618 176.82499695]
[61.22681046 191.69767761]
[66.05281067 177.49522400]
[70.87880707 163.29277039]
[75.70480347 149.09031677]
[80.53079987 134.88786316]
[76.18994141 117.88421631]
[90.13871002 105.86283875]
[77.99289703 114.66507721]
[63.08374023 116.31340790]
[49.30845261 110.37696075]
[40.26785660 98.40751648]
[38.32514954 83.53385162]
[43.98814392 69.64390564]
[55.77655411 60.36848831]
[70.60890961 58.13216019]
[84.60807800 63.51949692]
[94.11470032 75.12226105]
[96.64385223 89.90663147]
[103.32404327 76.47625732]
[98.52761078 61.65626907]
[105.49359894 48.13111877]
[119.65174866 43.64978409]
[126.33194733 30.21940804]
[124.76409912 11.87210846]
[139.75601196 2.75019121]
[146.23551941 -10.77815437]
[152.71501160 -24.30649948]
[159.19450378 -37.83484650]
[144.39527893 -35.38882446]
[133.15403748 -45.32030487]
[133.75738525 -60.30816650]
[145.76057434 -69.30391693]
[160.31529236 -65.67622375]
[166.69235229 -52.10093689]
[166.85247803 -67.92133331]
[179.89901733 -75.10722351]
[187.36676025 -88.11617279]
[194.83450317 -101.12512207]
[202.30224609 -114.13407898]
[209.76998901 -127.14302826]
[210.13540649 -133.74440002]
[213.30412292 -138.46205139]
[217.65869141 -140.42337036]
[225.51045227 -153.20420837]
[233.36219788 -165.98506165]
[241.21395874 -178.76589966]
[249.06571960 -191.54673767]
[256.91748047 -204.32759094]
[264.76922607 -217.10842896]
[272.62097168 -229.88926697]
[280.47274780 -242.67010498]
[268.62054443 -251.88903809]
[257.85446167 -262.35586548]
[248.30517578 -273.94354248]
[240.08860779 -286.51141357]
[233.30451965 -299.90692139]
[228.03524780 -313.96743774]
[224.34474182 -328.52227783]
[222.27783203 -343.39477539]
[221.85958862 -358.40435791]
[223.09509277 -373.36889648]
[225.96934509 -388.10665894]
[230.44746399 -402.43878174]
[236.47508240 -416.19125366]
[243.97901917 -429.19717407]
[252.86820984 -441.29867554]
[263.03472900 -452.34878540]
[274.35516357 -462.21340942]
[286.69207764 -470.77279663]
[299.89575195 -477.92306519]
[313.80590820 -483.57739258]
[328.25363159 -487.66711426]
[343.06359863 -490.14263916]
[358.05599976 -490.97387695]
[373.04885864 -490.15075684]
[387.86016846 -487.68328857]
[402.31011963 -483.60137939]
[416.22332764 -477.95462036]
[429.43087769 -470.81152344]
[441.77246094 -462.25881958]
[453.09823608 -452.40032959]
[463.27075195 -441.35571289]
[472.16647339 -429.25906372]
[479.67749023 -416.25720215]
[485.71255493 -402.50799561]
[490.19842529 -388.17831421]
[493.08068848 -373.44207764]
[494.32431030 -358.47824097]
[493.91418457 -343.46841431]
[491.85534668 -328.59481812]
[488.17276001 -314.03796387]
[482.91110229 -299.97460938]
[476.13427734 -286.57543945]
[467.92453003 -274.00311279]
[458.38153076 -262.41024780]
[447.62112427 -251.93757629]
[435.77392578 -242.71221924]
[422.98376465 -234.84617615]
[409.40585327 -228.43492126]
[395.20507812 -223.55628967]
[380.55380249 -220.26950073]
[365.62985229 -218.61445618]
[350.61444092 -218.61123657]
[335.68978882 -220.25987244]
[321.03707886 -223.54039001]
[306.83422852 -228.41293335]
[293.25357056 -234.81835938]
[285.40182495 -222.03752136]
[277.55007935 -209.25666809]
[269.69830322 -196.47583008]
[261.84655762 -183.69499207]
[253.99479675 -170.91413879]
[246.14305115 -158.13330078]
[238.29129028 -145.35246277]
[230.43952942 -132.57160950]
[222.77894592 -119.67529297]
[215.31120300 -106.66633606]
[207.84346008 -93.65738678]
[200.37571716 -80.64842987]
[192.90797424 -67.63948059]
[193.28198242 -52.74957275]
[179.70129395 -44.63319778]
[172.72285461 -31.35535049]
[166.24334717 -17.82700348]
[159.76385498 -4.29865837]
[153.28436279 9.22968674]
[157.00677490 20.73925591]
[151.71931458 32.06297302]
[139.76232910 36.89960098]
[133.08212280 50.32997894]
[138.05039978 64.32468414]
[131.46705627 78.04016113]
[116.75442505 83.15644836]
[110.07422638 96.58682251]
[104.41143799 110.47685242]
[109.57859039 122.29477692]
[105.44174194 134.08758545]
[94.73325348 139.71385193]
[89.90725708 153.91630554]
[85.08126068 168.11877441]
[80.25526428 182.32122803]
[75.42926788 196.52368164]
[73.64679718 211.41740417]
[74.98503113 226.35757446]
[76.32326508 241.29776001]
[77.66149902 256.23794556]
[78.99973297 271.17813110]
[80.44915771 286.10794067]
[82.00968170 301.02655029]
[83.57019806 315.94515991]
[85.13072205 330.86376953]
[94.64065552 339.57720947]
[95.63328552 352.03506470]
[88.12017822 361.51556396]
[89.45841217 376.45574951]
[90.79664612 391.39593506]
[92.13488007 406.33612061]
[93.47311401 421.27630615]
[107.19115448 428.33456421]
[114.89572906 441.70028687]
[114.12834930 457.10855103]
[105.13387299 469.64263916]
[90.78240204 475.30291748]
[75.65345001 472.28326416]
[64.57460785 461.54724121]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 203]
[3 202]
[4 201]
[5 200]
[6 199]
[8 196]
[9 195]
[10 194]
[11 193]
[13 192]
[14 191]
[15 190]
[16 189]
[17 188]
[46 187]
[47 186]
[48 185]
[49 184]
[50 183]
[52 180]
[63 179]
[64 178]
[67 175]
[68 174]
[70 171]
[71 170]
[72 169]
[73 168]
[79 167]
[81 165]
[82 164]
[83 163]
[84 162]
[85 161]
[88 160]
[89 159]
[90 158]
[91 157]
[92 156]
[93 155]
[94 154]
[95 153]
[96 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
