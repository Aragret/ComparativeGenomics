%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[105.99678040 605.07592773]
[118.47382355 596.11938477]
[116.91329956 581.20080566]
[115.35277557 566.28216553]
[113.79225159 551.36358643]
[105.74948883 564.02508545]
[92.18322754 570.42486572]
[77.29713440 568.57977295]
[65.70382690 559.06164551]
[60.99560928 544.81970215]
[64.63137817 530.26696777]
[75.48455048 519.91284180]
[90.19216156 516.96557617]
[104.19688416 522.33843994]
[113.15929413 534.36682129]
[113.60590363 519.37347412]
[114.05251312 504.38015747]
[113.94084167 489.38055420]
[113.27105713 474.39550781]
[112.60127258 459.41049194]
[111.93148804 444.42544556]
[111.26170349 429.44039917]
[110.59191895 414.45535278]
[109.92213440 399.47033691]
[109.25234985 384.48529053]
[100.95446014 372.11621094]
[108.06783295 357.98431396]
[107.39804840 342.99926758]
[106.72826385 328.01422119]
[106.05847931 313.02917480]
[104.38694000 298.12261963]
[101.72114563 283.36138916]
[99.05534363 268.60018921]
[96.38954926 253.83895874]
[90.26787567 267.53292847]
[78.54081726 276.88580322]
[63.82823563 279.80810547]
[49.41695023 275.64700317]
[38.52648544 265.33206177]
[33.58979797 251.16770935]
[35.70975113 236.31826782]
[44.41275024 224.10115051]
[57.75451660 217.24569702]
[72.75447083 217.28343201]
[86.06157684 224.20591736]
[94.70301056 236.46669006]
[94.47968292 221.46835327]
[86.55374908 208.85768127]
[94.08473206 194.94384766]
[93.86140442 179.94551086]
[93.63807678 164.94717407]
[93.41474915 149.94883728]
[93.19142151 134.95050049]
[92.96809387 119.95215607]
[92.74476624 104.95381927]
[90.74554443 102.65325165]
[89.53922272 99.57440186]
[89.41566467 96.00954437]
[90.55272675 92.35395050]
[92.98139191 89.06237030]
[93.65117645 74.07733154]
[94.32096100 59.09228897]
[94.99074554 44.10725021]
[95.66053009 29.12221336]
[96.33031464 14.13717365]
[84.16600800 7.23120880]
[76.20191193 -4.18760777]
[73.94548035 -17.85826111]
[77.78081512 -31.10361290]
[86.90468597 -41.35465240]
[99.49394226 -46.64876175]
[100.38676453 -61.62216568]
[101.27957916 -76.59557343]
[102.17239380 -91.56897736]
[102.95371246 -106.54861450]
[100.54666901 -111.18037415]
[100.19240570 -115.80939484]
[101.54611969 -119.65419769]
[104.00283051 -122.18341064]
[105.34106445 -137.12359619]
[106.67929840 -152.06378174]
[108.01753235 -167.00396729]
[109.35576630 -181.94415283]
[110.69400024 -196.88433838]
[111.92097473 -211.83406067]
[112.36758423 -226.82742310]
[112.14425659 -241.82575989]
[104.20234680 -255.50920105]
[111.74929810 -268.35025024]
[111.52597046 -283.34860229]
[109.16785431 -286.99459839]
[108.19086456 -290.81689453]
[108.48083496 -294.35968018]
[109.78728485 -297.25100708]
[111.76259613 -299.24005127]
[112.43238068 -314.22509766]
[113.10216522 -329.21011353]
[113.77194977 -344.19515991]
[99.67649841 -349.72659302]
[88.14244080 -359.53701782]
[80.42091370 -372.56225586]
[77.34949493 -387.38943481]
[79.26133728 -402.41018677]
[85.94906616 -415.99523926]
[96.68724823 -426.67089844]
[110.31108093 -433.27923584]
[125.34275818 -435.10336304]
[140.15174866 -431.94543457]
[153.13169861 -424.14801025]
[162.87461853 -412.55688477]
[168.32368469 -398.42938232]
[168.88781738 -383.29794312]
[164.50582886 -368.80392456]
[155.65303040 -356.51950073]
[143.28973389 -347.77722168]
[128.75698853 -343.52539062]
[128.08720398 -328.54034424]
[127.41741943 -313.55529785]
[126.74763489 -298.57025146]
[126.52430725 -283.57192993]
[126.74763489 -268.57357788]
[134.67356873 -255.96292114]
[127.14259338 -242.04908752]
[127.36592102 -227.05075073]
[138.56335449 -237.03160095]
[153.54594421 -236.30906677]
[163.73097229 -225.29701233]
[163.28401184 -210.30368042]
[152.46109009 -199.91790771]
[137.46206665 -200.08914185]
[126.87942505 -210.71841431]
[129.51672363 -203.81433105]
[125.63418579 -195.54609680]
[124.29595184 -180.60591125]
[122.95771790 -165.66572571]
[121.61948395 -150.72554016]
[120.28125000 -135.78535461]
[118.94301605 -120.84517670]
[117.93875122 -105.87882996]
[120.78044891 -99.05632782]
[117.14579773 -90.67616272]
[116.25298309 -75.70275879]
[115.36016846 -60.72935104]
[114.46735382 -45.75594330]
[128.16920471 -37.19022369]
[135.72518921 -22.80053902]
[134.98912048 -6.47034836]
[126.06733704 7.33896780]
[111.31535339 14.80695915]
[110.64556885 29.79199791]
[109.97578430 44.77703476]
[109.30599976 59.76207352]
[108.63621521 74.74711609]
[107.96643066 89.73215485]
[107.74310303 104.73049164]
[107.96643066 119.72882843]
[108.18975830 134.72715759]
[108.41308594 149.72550964]
[108.63641357 164.72384644]
[108.85974121 179.72218323]
[109.08306885 194.72052002]
[117.02497101 208.40396118]
[109.47801971 221.24502563]
[109.70134735 236.24336243]
[111.15077209 251.17317200]
[113.81656647 265.93438721]
[116.48236084 280.69558716]
[119.14815521 295.45681763]
[126.22692871 282.23217773]
[139.27961731 274.84115601]
[154.26170349 275.57391357]
[166.53083801 284.20343018]
[172.28527832 298.05575562]
[169.74195862 312.83856201]
[159.68894958 323.97125244]
[145.24128723 328.00427246]
[130.87574768 323.68789673]
[121.04351807 312.35940552]
[121.71330261 327.34445190]
[122.38308716 342.32946777]
[123.05287170 357.31451416]
[131.39866638 370.75543213]
[124.23738861 383.81549072]
[124.90717316 398.80053711]
[125.57695770 413.78558350]
[126.24674225 428.77062988]
[126.91652679 443.75564575]
[127.58631134 458.74069214]
[128.25610352 473.72573853]
[128.92588806 488.71078491]
[140.82032776 479.57174683]
[155.41751099 483.02462769]
[161.95690918 496.52413940]
[155.61793518 510.11889648]
[141.07344055 513.78735352]
[129.04585266 504.82675171]
[128.59925842 519.82012939]
[128.15264893 534.81347656]
[128.71086121 549.80303955]
[130.27137756 564.72167969]
[131.83190918 579.64025879]
[133.39242554 594.55889893]
[147.45285034 600.73950195]
[156.52629089 613.13177490]
[158.17201233 628.40222168]
[151.94735718 642.44323730]
[139.52670288 651.47778320]
[124.25115967 653.07562256]
[110.22975922 646.80694580]
[101.23419189 634.35809326]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 202]
[3 201]
[4 200]
[5 199]
[15 198]
[16 197]
[17 196]
[18 190]
[19 189]
[20 188]
[21 187]
[22 186]
[23 185]
[24 184]
[25 183]
[27 181]
[28 180]
[29 179]
[30 178]
[31 168]
[32 167]
[33 166]
[34 165]
[46 164]
[47 163]
[49 161]
[50 160]
[51 159]
[52 158]
[53 157]
[54 156]
[55 155]
[60 154]
[61 153]
[62 152]
[63 151]
[64 150]
[65 149]
[71 144]
[72 143]
[73 142]
[74 141]
[75 139]
[79 138]
[80 137]
[81 136]
[82 135]
[83 134]
[84 133]
[85 131]
[86 124]
[87 123]
[89 121]
[90 120]
[95 119]
[96 118]
[97 117]
[98 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
