%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGUCCAAAACCGAGCAUUCUUCCGGAUCUAUCCCCUAACACGCCACACACUACGAUCCCAUCUUAGGCUCAUACAACCUCUUUAUUUUACACGUAUCACCxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[110.32548523 623.36785889]
[101.11422729 611.50744629]
[93.34220123 598.65783691]
[87.11450958 584.99285889]
[82.51537323 570.69726562]
[79.60698700 555.96435547]
[78.42868042 540.99346924]
[78.99640656 525.98699951]
[81.30246735 511.14788818]
[85.31568909 496.67684937]
[90.98178864 482.76959229]
[98.22414398 469.61419678]
[106.94480896 457.38854980]
[117.02584839 446.25799561]
[128.33091736 436.37307739]
[140.70715332 427.86746216]
[153.98715210 420.85617065]
[167.99133301 415.43405151]
[164.23503113 400.91198730]
[160.47872925 386.38992310]
[156.72242737 371.86785889]
[152.96612549 357.34579468]
[148.88645935 342.91125488]
[144.48547363 328.57141113]
[140.08447266 314.23156738]
[128.95350647 304.33453369]
[132.30131531 288.87158203]
[127.90032196 274.53173828]
[123.49932861 260.19189453]
[119.04829407 274.51629639]
[108.51573944 285.19644165]
[94.25466156 289.84634399]
[79.45101929 287.42721558]
[67.41198730 278.47949219]
[60.82711029 265.00213623]
[61.16746902 250.00599670]
[68.35703278 236.84126282]
[80.78962708 228.44895935]
[95.68777466 226.70396423]
[109.72320557 231.99610901]
[119.76036835 243.14312744]
[117.75635529 228.27760315]
[115.75234222 213.41206360]
[113.19651031 198.63142395]
[100.61169434 190.74739075]
[97.25463104 175.90875244]
[105.60945892 162.76210022]
[102.50534821 148.08679199]
[99.40123749 133.41149902]
[96.29712677 118.73619843]
[84.21060181 110.74481964]
[81.21212769 96.56894684]
[89.02757263 84.36791229]
[85.92346191 69.69261169]
[75.49782562 57.79232788]
[80.43385315 43.73939514]
[77.32974243 29.06409264]
[74.22563171 14.38879013]
[71.12152100 -0.28651181]
[68.01741028 -14.96181393]
[64.91329956 -29.63711739]
[61.80919266 -44.31241989]
[58.70508194 -58.98772049]
[55.60097122 -73.66302490]
[51.41396332 -88.06680298]
[46.16724396 -102.11927795]
[34.09165573 -112.34134674]
[36.88844299 -126.97102356]
[31.64172363 -141.02349854]
[26.79356956 -145.51870728]
[25.18485451 -150.96929932]
[26.45482254 -155.57324219]
[21.62882614 -169.77569580]
[16.80282784 -183.97814941]
[12.09066200 -188.61572266]
[10.64494514 -194.11180115]
[12.05142689 -198.67588806]
[7.65042877 -213.01573181]
[3.24943089 -227.35557556]
[-1.15156722 -241.69543457]
[-16.12321281 -240.16700745]
[-31.10533333 -241.58908081]
[-45.52205658 -245.90698242]
[-58.81924057 -252.95475769]
[-70.48577881 -262.46148682]
[-80.07324219 -274.06179810]
[-87.21311188 -287.30975342]
[-91.63095093 -301.69616699]
[-93.15694427 -316.66806030]
[-91.73244476 -331.64996338]
[-87.41220856 -346.06597900]
[-80.36228180 -359.36203003]
[-70.85365295 -371.02700806]
[-59.25181198 -380.61260986]
[-46.00269318 -387.75033569]
[-31.61556244 -392.16583252]
[-16.64342499 -393.68942261]
[-1.66176462 -392.26248169]
[12.75356007 -387.93991089]
[26.04846382 -380.88784790]
[37.71192551 -371.37731934]
[47.29563141 -359.77392578]
[54.43120956 -346.52365112]
[58.84439087 -332.13580322]
[60.36554337 -317.16342163]
[58.93619156 -302.18200684]
[54.61128616 -287.76736450]
[47.55705643 -274.47360229]
[38.04465485 -262.81167603]
[26.43970680 -253.22985840]
[13.18828011 -246.09642029]
[17.58927727 -231.75657654]
[21.99027634 -217.41673279]
[26.39127350 -203.07688904]
[31.00528336 -188.80415344]
[35.83127975 -174.60169983]
[40.65727997 -160.39924622]
[45.69419479 -146.27020264]
[50.94091415 -132.21774292]
[62.64122009 -123.00079346]
[60.21971512 -107.36599731]
[65.46643066 -93.31352234]
[69.52040100 -107.75531769]
[80.18285370 -118.30577087]
[94.66664124 -122.20703888]
[109.18574524 -118.43932343]
[119.94490051 -107.98750305]
[124.13169098 -93.58365631]
[120.65170288 -78.99291992]
[110.41459656 -68.02926636]
[96.09632111 -63.55857849]
[81.43964386 -66.74948120]
[70.27627563 -76.76713562]
[73.38038635 -62.09183121]
[76.48449707 -47.41653061]
[79.58860779 -32.74122620]
[82.69271851 -18.06592369]
[85.79682922 -3.39062190]
[88.90093231 11.28468037]
[92.00504303 25.95998192]
[95.10915375 40.63528442]
[105.31275940 51.48589325]
[100.59876251 66.58850098]
[103.70287323 81.26380157]
[115.78939819 89.25518036]
[118.78787231 103.43105316]
[110.97242737 115.63208771]
[114.07653809 130.30738831]
[117.18064880 144.98269653]
[120.28475952 159.65798950]
[133.24737549 168.29559326]
[136.18634033 183.22265625]
[127.87181091 195.52731323]
[138.11698914 184.57119751]
[153.08181763 185.59783936]
[161.73477173 197.85044861]
[157.69723511 212.29684448]
[143.94551086 218.28767395]
[130.61787415 211.40805054]
[132.62188721 226.27359009]
[134.62590027 241.13911438]
[137.83917236 255.79089355]
[142.24017334 270.13073730]
[146.64117432 284.47058105]
[158.08691406 295.39331055]
[154.42431641 309.83056641]
[158.82531738 324.17041016]
[163.22631836 338.51025391]
[167.04891968 342.06478882]
[168.93701172 346.30606079]
[168.95295715 350.38220215]
[167.48818970 353.58950806]
[171.24449158 368.11157227]
[175.00079346 382.63363647]
[178.75709534 397.15567017]
[182.51339722 411.67773438]
[197.39025879 409.62945557]
[212.40431213 409.32214355]
[227.35253906 410.75997925]
[242.03274536 413.92349243]
[256.24642944 418.76992798]
[269.80133057 425.23373413]
[282.51416016 433.22750854]
[294.21301270 442.64312744]
[304.73962402 453.35324097]
[313.95166016 465.21304321]
[321.72454834 478.06213379]
[327.95315552 491.72671509]
[332.55325317 506.02200317]
[335.46261597 520.75469971]
[336.64193726 535.72552490]
[336.07519531 550.73205566]
[333.77014160 565.57128906]
[329.75787354 580.04260254]
[324.09271240 593.95019531]
[316.85122681 607.10607910]
[308.13137817 619.33233643]
[298.05108643 630.46356201]
[286.74667358 640.34924316]
[274.37100220 648.85571289]
[261.09146118 655.86785889]
[247.08764648 661.29089355]
[232.54893494 665.05151367]
[217.67193604 667.09881592]
[202.65785217 667.40515137]
[187.70973206 665.96630859]
[173.02972412 662.80181885]
[158.81637573 657.95440674]
[145.26190186 651.48968506]
[132.54959106 643.49505615]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 176]
[19 175]
[20 174]
[21 173]
[22 172]
[23 168]
[24 167]
[25 166]
[27 164]
[28 163]
[29 162]
[41 161]
[42 160]
[43 159]
[44 153]
[47 150]
[48 149]
[49 148]
[50 147]
[53 144]
[54 143]
[56 141]
[57 140]
[58 139]
[59 138]
[60 137]
[61 136]
[62 135]
[63 134]
[64 133]
[65 122]
[66 121]
[68 119]
[69 118]
[72 117]
[73 116]
[74 115]
[77 114]
[78 113]
[79 112]
[80 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
