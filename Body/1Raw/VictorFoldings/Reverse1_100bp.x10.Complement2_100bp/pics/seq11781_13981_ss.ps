%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUAUCACCCCCCAUUCCGCUCCAAUCGCUCCGAACGAUCUUCAGUAGUUUUUCGAUAAUCACCCUCAUCUCAAACUUCAGGAACUCUCUCCUAAUACxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[137.83650208 709.58056641]
[123.06676483 712.74786377]
[108.00308228 711.62438965]
[93.86660004 706.30114746]
[81.80329895 697.20977783]
[72.79109192 685.08721924]
[67.56055450 670.91613770]
[66.53571320 655.84545898]
[69.79964447 641.09680176]
[77.08774567 627.86572266]
[87.80921936 617.22491455]
[101.09491730 610.03698730]
[115.86782074 606.88452148]
[116.98346710 591.92608643]
[118.09912109 576.96759033]
[119.21476746 562.00915527]
[110.75416565 546.63433838]
[121.24809265 531.50292969]
[122.14090729 516.52954102]
[123.03372192 501.55612183]
[123.92654419 486.58273315]
[124.03820801 471.58312988]
[123.36842346 456.59808350]
[122.69863892 441.61306763]
[122.02885437 426.62802124]
[121.35906982 411.64297485]
[111.13140869 397.38247681]
[119.75289917 381.11129761]
[118.86008453 366.13787842]
[104.75258636 357.74407959]
[98.36409760 342.44216919]
[102.39513397 326.18634033]
[115.44933319 315.43066406]
[114.33367920 300.47222900]
[111.36360168 296.73220825]
[110.71144104 291.08670044]
[113.41428375 285.05294800]
[112.74449921 270.06790161]
[112.07470703 255.08287048]
[111.40492249 240.09783936]
[101.17726898 225.83734131]
[109.79875946 209.56616211]
[108.90594482 194.59274292]
[108.01313019 179.61933899]
[106.00911713 164.75381470]
[102.90500641 150.07850647]
[92.70140076 139.22790527]
[97.41539764 124.12529755]
[94.31128693 109.44998932]
[84.06610870 120.40610504]
[69.10128784 119.37945557]
[60.44832230 107.12685394]
[64.48586273 92.68045807]
[78.23758698 86.68962097]
[91.56523132 93.56924438]
[89.56121826 78.70371246]
[87.55720520 63.83818436]
[85.55318451 48.97265625]
[76.04153442 36.32991028]
[82.00909424 22.68302536]
[80.00508118 7.81749821]
[77.77996826 -7.01654577]
[75.33423615 -21.81581688]
[72.88851166 -36.61508560]
[60.87733459 -50.57263565]
[67.69250488 -66.74422455]
[65.02671051 -81.50544739]
[54.89504623 -89.48743439]
[52.97858810 -101.83696747]
[59.76576233 -111.84999847]
[57.32003403 -126.64926910]
[54.87430573 -141.44854736]
[46.97237396 -128.69866943]
[33.12939072 -122.92182922]
[18.50844765 -126.27265930]
[8.56279564 -137.50137329]
[7.00191832 -152.41993713]
[14.40798187 -165.46409607]
[28.01870918 -171.76870728]
[42.75763321 -168.98229980]
[53.12801743 -158.14308167]
[52.45822906 -173.12812805]
[51.78844452 -188.11317444]
[51.11865997 -203.09820557]
[48.30798721 -207.49674988]
[47.54215240 -212.07569885]
[48.54745483 -216.02593994]
[50.76872253 -218.76425171]
[50.76872253 -233.76425171]
[47.63931274 -242.34590149]
[50.88205338 -248.98716736]
[51.10538101 -263.98550415]
[51.32870865 -278.98382568]
[51.55203629 -293.98217773]
[51.77536392 -308.98049927]
[44.24438477 -322.89434814]
[52.17031860 -335.50500488]
[52.39364624 -350.50335693]
[44.86266708 -364.41720581]
[52.78860092 -377.02786255]
[39.31328583 -384.28558350]
[30.76393318 -396.98074341]
[29.10512161 -412.19610596]
[34.71803665 -426.43524170]
[46.31286621 -436.42617798]
[61.22520447 -439.87301636]
[76.02831268 -435.98370361]
[87.32053375 -425.65200806]
[92.50700378 -411.25201416]
[90.39591217 -396.09280396]
[81.47236633 -383.65780640]
[67.78693390 -376.80453491]
[75.33389282 -363.96347046]
[67.39198303 -350.28002930]
[67.16865540 -335.28167725]
[74.71560669 -322.44064331]
[66.77370453 -308.75717163]
[66.55037689 -293.75885010]
[66.32704163 -278.76049805]
[66.10371399 -263.76217651]
[65.88038635 -248.76383972]
[65.76872253 -233.76425171]
[65.76872253 -218.76425171]
[66.10369873 -203.76799011]
[66.77348328 -188.78295898]
[67.44326782 -173.79791260]
[68.11305237 -158.81288147]
[69.67357635 -143.89427185]
[72.11930847 -129.09500122]
[74.56503296 -114.29573059]
[86.41481781 -101.35163116]
[79.78792572 -84.17124176]
[82.45372772 -69.41001892]
[92.20912170 -62.25748444]
[94.55084991 -49.98149109]
[87.68778229 -39.06081390]
[90.13350677 -24.26154327]
[92.57923889 -9.46227264]
[95.87113953 -6.00215435]
[97.02436829 -0.43734589]
[94.87061310 5.81348419]
[96.87462616 20.67901230]
[106.24293518 32.25847626]
[100.41871643 46.96864319]
[102.42272949 61.83417130]
[104.42674255 76.69969940]
[106.43075562 91.56523132]
[108.98658752 106.34587860]
[112.09069824 121.02118683]
[122.51633453 132.92146301]
[117.58030701 146.97439575]
[120.68441772 161.64970398]
[126.83584595 147.96907043]
[138.94538879 139.11701965]
[153.84765625 137.40745544]
[167.64721680 143.28726196]
[176.73690796 155.21946716]
[178.74069214 170.08503723]
[173.13479614 183.99812317]
[161.38458252 193.32188416]
[146.56153870 195.61912537]
[132.54035950 190.28933716]
[122.98653412 178.72653198]
[123.87934875 193.69993591]
[124.77216339 208.67333984]
[133.88352966 217.80273438]
[134.31890869 230.29249573]
[126.38996124 239.42805481]
[127.05974579 254.41308594]
[127.72953796 269.39813232]
[128.39932251 284.38317871]
[129.29212952 299.35656738]
[130.40779114 314.31503296]
[142.63769531 320.67269897]
[150.07019043 332.15209961]
[150.85366821 345.69668579]
[144.89025879 357.76242065]
[133.83349609 365.24508667]
[134.72630310 380.21847534]
[143.83767700 389.34786987]
[144.27304077 401.83764648]
[136.34410095 410.97320557]
[137.01388550 425.95822144]
[137.68367004 440.94326782]
[138.35345459 455.92831421]
[139.02325439 470.91336060]
[149.08070374 459.78466797]
[163.92076111 457.59994507]
[176.75871277 465.35794067]
[181.72523499 479.51187134]
[176.54969788 493.59072876]
[163.59829712 501.15783691]
[148.79222107 498.75363159]
[138.89994812 487.47552490]
[138.00712585 502.44894409]
[137.11431885 517.42236328]
[136.22149658 532.39575195]
[144.18345642 542.54315186]
[143.13156128 554.99615479]
[134.17321777 563.12481689]
[133.05757141 578.08325195]
[131.94192505 593.04168701]
[130.82627869 608.00018311]
[144.96809387 613.30914307]
[157.04052734 622.38842773]
[166.06491089 634.50195312]
[171.30967712 648.66772461]
[172.34965515 663.73736572]
[169.10055542 678.48931885]
[161.82574463 691.72766113]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 203]
[14 202]
[15 201]
[16 200]
[18 197]
[19 196]
[20 195]
[21 194]
[22 186]
[23 185]
[24 184]
[25 183]
[26 182]
[28 179]
[29 178]
[33 173]
[34 172]
[37 171]
[38 170]
[39 169]
[40 168]
[42 165]
[43 164]
[44 163]
[45 152]
[46 151]
[48 149]
[49 148]
[55 147]
[56 146]
[57 145]
[58 144]
[60 142]
[61 141]
[62 138]
[63 137]
[64 136]
[66 133]
[67 132]
[70 130]
[71 129]
[72 128]
[81 127]
[82 126]
[83 125]
[84 124]
[88 123]
[89 122]
[91 121]
[92 120]
[93 119]
[94 118]
[95 117]
[97 115]
[98 114]
[100 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
