%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[39.07619095 672.00598145]
[37.07107162 686.98834229]
[30.73740005 700.71331787]
[20.63835716 711.96057129]
[7.67194319 719.72998047]
[-7.00887537 723.33068848]
[-22.09869194 722.44250488]
[-36.25572586 717.14440918]
[-48.22114944 707.90753174]
[-56.93100357 695.55316162]
[-61.61080933 681.17993164]
[-61.84444809 666.06579590]
[-57.61114120 651.55474854]
[-49.28731155 638.93707275]
[-37.61310959 629.33477783]
[-23.62659645 623.60162354]
[-8.57144356 622.24743652]
[-5.46733332 607.57214355]
[-2.36322308 592.89685059]
[0.74088699 578.22155762]
[3.84499717 563.54626465]
[-1.09102738 549.49328613]
[9.33460426 537.59301758]
[12.43871403 522.91772461]
[10.74744701 515.72320557]
[15.69983006 508.04779053]
[19.02209091 493.42031860]
[22.34434891 478.79284668]
[20.76038551 471.57394409]
[25.82649612 463.97311401]
[29.36616707 449.39675903]
[32.90584183 434.82037354]
[36.44551086 420.24398804]
[30.60497284 403.69543457]
[43.42562103 390.47753906]
[46.74788284 375.85009766]
[50.07014084 361.22262573]
[53.06491470 346.52462769]
[55.73071289 331.76339722]
[58.39650726 317.00219727]
[61.06230164 302.24096680]
[63.72809982 287.47976685]
[66.28392792 272.69909668]
[68.72966003 257.89984131]
[71.17538452 243.10055542]
[73.62110901 228.30128479]
[76.06684113 213.50201416]
[74.06320190 209.16676331]
[74.76167297 203.52679443]
[78.81201172 198.30125427]
[81.69728851 183.58135986]
[84.58255768 168.86148071]
[86.80767822 154.02743530]
[88.36820221 139.10882568]
[89.92872620 124.19022369]
[91.48924255 109.27161407]
[92.71622467 94.32188416]
[85.81404114 80.08564758]
[94.29516602 67.84146881]
[95.18798065 52.86806488]
[93.10757446 49.05678177]
[92.41757202 45.17240143]
[92.97023773 41.66099548]
[94.48812103 38.87483978]
[96.60590363 37.03823090]
[98.38836670 22.14451218]
[100.17082977 7.25079489]
[101.95330048 -7.64292240]
[103.73576355 -22.53664017]
[105.51823425 -37.43035507]
[106.85646820 -52.37054062]
[107.74928284 -67.34394836]
[97.53669739 -79.10578918]
[98.65544128 -94.27823639]
[109.93149567 -103.94188690]
[110.82431030 -118.91529083]
[111.71713257 -133.88870239]
[112.60994720 -148.86210632]
[113.50276184 -163.83551025]
[106.60057831 -178.07174683]
[115.08170319 -190.31591797]
[112.46900177 -196.38925171]
[113.20513916 -202.02441406]
[116.23057556 -205.71978760]
[109.75531769 -220.15522766]
[118.59723663 -232.14144897]
[119.93547058 -247.08163452]
[121.27370453 -262.02182007]
[108.24360657 -269.89443970]
[99.95753479 -282.59197998]
[98.01412964 -297.56674194]
[102.74572754 -311.84164429]
[113.16300964 -322.60220337]
[127.16128540 -327.75137329]
[128.49951172 -342.69155884]
[129.83775330 -357.63174438]
[131.17597961 -372.57192993]
[132.51422119 -387.51211548]
[133.85244751 -402.45230103]
[135.19068909 -417.39248657]
[121.45530701 -423.80459595]
[110.74353027 -434.52996826]
[104.34886932 -448.27346802]
[103.04349518 -463.37551880]
[106.98505402 -478.01245117]
[115.69757080 -490.41680908]
[128.12896729 -499.09066772]
[142.77810669 -502.98666382]
[157.87600708 -501.63430786]
[171.59956360 -495.19689941]
[182.29154968 -484.45181274]
[188.66087341 -470.69653320]
[189.93841553 -455.59210205]
[185.96989441 -440.96246338]
[177.23452759 -428.57418823]
[164.78715515 -419.92324829]
[150.13087463 -416.05426025]
[148.79263306 -401.11407471]
[147.45440674 -386.17388916]
[146.11616516 -371.23370361]
[144.77793884 -356.29351807]
[143.43969727 -341.35333252]
[142.10147095 -326.41314697]
[154.96179199 -318.85818481]
[163.30088806 -306.41757202]
[165.42022705 -291.52899170]
[160.84645081 -277.13800049]
[150.43568420 -266.11517334]
[136.21388245 -260.68359375]
[134.87565613 -245.74340820]
[133.53741455 -230.80322266]
[140.10839844 -217.43641663]
[131.17076111 -204.38156128]
[130.05511475 -189.42311096]
[137.02114868 -176.25785828]
[128.47616577 -162.94268799]
[127.58335114 -147.96928406]
[126.69053650 -132.99588013]
[125.79772186 -118.02247620]
[124.90490723 -103.04907227]
[134.95271301 -92.11394501]
[134.26057434 -76.91606140]
[122.72268677 -66.45113373]
[121.82987213 -51.47772598]
[123.58753967 -49.29397964]
[124.58609772 -46.28242111]
[124.50592041 -42.72869492]
[123.13658142 -39.02877045]
[120.41194916 -35.64789200]
[118.62948608 -20.75417328]
[116.84701538 -5.86045647]
[115.06455231 9.03326130]
[113.28208160 23.92697906]
[111.49961853 38.82069397]
[110.16138458 53.76087952]
[109.26856995 68.73428345]
[116.23461151 81.89952850]
[107.68962860 95.21469879]
[109.81480408 98.43276978]
[110.51118469 102.57196808]
[109.39919281 106.97315979]
[106.40785217 110.83213806]
[104.84732819 125.75074768]
[103.28680420 140.66934204]
[101.72628021 155.58795166]
[114.03041077 147.00842285]
[128.82098389 149.50624084]
[137.62527466 161.65055847]
[135.39981079 176.48454285]
[123.41941071 185.51062012]
[108.54701233 183.55825806]
[99.30245209 171.74674988]
[96.41717529 186.46664429]
[93.53190613 201.18652344]
[90.86611176 215.94775391]
[88.42037964 230.74702454]
[85.97465515 245.54629517]
[83.52893066 260.34555054]
[81.08319855 275.14483643]
[82.77150726 284.12188721]
[78.48931885 290.14553833]
[75.82351685 304.90676880]
[73.15772247 319.66799927]
[70.49192810 334.42919922]
[67.82613373 349.19042969]
[69.59279633 354.10223389]
[69.32543945 358.73709106]
[67.47019196 362.36657715]
[64.69760132 364.54489136]
[61.37534332 379.17236328]
[58.05308151 393.79980469]
[64.25396729 405.10961914]
[61.18571854 417.22445679]
[51.02188873 423.78366089]
[47.48221588 438.36004639]
[43.94254303 452.93643188]
[40.40287018 467.51278687]
[36.97180939 482.11511230]
[33.64955139 496.74258423]
[30.32729149 511.37005615]
[27.11401749 526.02185059]
[24.00990677 540.69714355]
[28.72390366 555.79974365]
[18.52029991 566.65032959]
[15.41618919 581.32562256]
[12.31207943 596.00097656]
[9.20796871 610.67626953]
[6.10385895 625.35156250]
[19.32121849 632.68591309]
[29.78832817 643.59149170]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 208]
[18 207]
[19 206]
[20 205]
[21 204]
[23 202]
[24 201]
[26 200]
[27 199]
[28 198]
[30 197]
[31 196]
[32 195]
[33 194]
[35 191]
[36 190]
[37 189]
[38 185]
[39 184]
[40 183]
[41 182]
[42 181]
[43 179]
[44 178]
[45 177]
[46 176]
[47 175]
[50 174]
[51 173]
[52 172]
[53 165]
[54 164]
[55 163]
[56 162]
[57 158]
[59 156]
[60 155]
[65 154]
[66 153]
[67 152]
[68 151]
[69 150]
[70 149]
[71 144]
[72 143]
[75 140]
[76 139]
[77 138]
[78 137]
[79 136]
[81 134]
[84 133]
[86 131]
[87 130]
[88 129]
[94 123]
[95 122]
[96 121]
[97 120]
[98 119]
[99 118]
[100 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
