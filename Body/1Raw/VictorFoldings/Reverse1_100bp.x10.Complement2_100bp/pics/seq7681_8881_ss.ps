%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxGAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGU\
) } def
/len { sequence length } bind def

/coor [
[131.14778137 595.19299316]
[134.53239441 580.46081543]
[142.11044312 567.38165283]
[153.20809937 557.11846924]
[166.83857727 550.58380127]
[164.61346436 535.74975586]
[162.38835144 520.91577148]
[160.16322327 506.08169556]
[157.93811035 491.24765015]
[155.71299744 476.41360474]
[153.48788452 461.57955933]
[151.26275635 446.74551392]
[149.03764343 431.91146851]
[139.49797058 420.47277832]
[145.10252380 405.67752075]
[142.87741089 390.84347534]
[128.76367188 388.84643555]
[115.77050781 382.94580078]
[104.95519257 373.61178589]
[97.20053864 361.59451294]
[93.14287567 347.86352539]
[93.11981964 333.52960205]
[97.14221191 319.75506592]
[104.89251709 307.65930176]
[115.74985504 298.22790527]
[128.83975220 292.23245239]
[126.83573151 277.36694336]
[117.46742249 265.78747559]
[123.29164124 251.07730103]
[121.28762817 236.21177673]
[118.62183380 221.45056152]
[115.29957581 206.82310486]
[111.97731781 192.19563293]
[101.61328888 181.49815369]
[106.10191345 166.32702637]
[102.77965546 151.69956970]
[99.28763580 148.44152832]
[97.80522919 142.95521545]
[99.58311462 136.58728027]
[96.69783783 121.86738586]
[93.81256866 107.14749908]
[90.23486328 103.31161499]
[89.06100464 97.74426270]
[91.06739044 91.94673157]
[88.62166595 77.14746094]
[86.17593384 62.34819412]
[73.61193085 53.14039230]
[71.34243774 38.09698486]
[80.19809723 26.17587471]
[67.63409424 16.96807289]
[65.36460114 1.92466784]
[74.22026062 -9.99644375]
[71.77453613 -24.79571342]
[69.32880402 -39.59498596]
[66.88307953 -54.39425659]
[56.99922180 -66.74819946]
[62.55781937 -80.56671143]
[60.11209488 -95.36598206]
[50.22823715 -107.71992493]
[55.78683472 -121.53843689]
[53.34110641 -136.33770752]
[41.32992935 -150.29525757]
[48.14510345 -166.46684265]
[45.47930527 -181.22805786]
[41.50721741 -186.51333618]
[40.89279175 -192.16307068]
[42.96075058 -196.46801758]
[40.73563385 -211.30206299]
[38.51051712 -226.13610840]
[26.08499908 -235.52993774]
[24.03973007 -250.60546875]
[33.07189560 -262.39340210]
[30.84677887 -277.22744751]
[28.62166214 -292.06149292]
[26.39654350 -306.89553833]
[24.17142677 -321.72958374]
[21.94631004 -336.56362915]
[19.72119331 -351.39767456]
[4.69857502 -351.21133423]
[-10.20948505 -353.07238770]
[-24.72525978 -356.94613647]
[-38.57833099 -362.76046753]
[-51.51062012 -370.40701294]
[-63.28120804 -379.74331665]
[-73.67082214 -390.59548950]
[-82.48590088 -402.76135254]
[-89.56222534 -416.01425171]
[-94.76798248 -430.10729980]
[-98.00617218 -444.77795410]
[-99.21647644 -459.75289917]
[-98.37635803 -474.75317383]
[-95.50144958 -489.49929810]
[-90.64532471 -503.71661377]
[-83.89844513 -517.14019775]
[-75.38649750 -529.52008057]
[-65.26805878 -540.62548828]
[-53.73162460 -550.24969482]
[-40.99211502 -558.21325684]
[-27.28685760 -564.36791992]
[-12.87117386 -568.59893799]
[1.98637950 -570.82757568]
[17.00901604 -571.01232910]
[31.91687584 -569.14965820]
[46.43223190 -565.27429199]
[60.28467178 -559.45849609]
[73.21613312 -551.81054688]
[84.98571014 -542.47296143]
[95.37415314 -531.61968994]
[104.18791199 -519.45281982]
[111.26280975 -506.19918823]
[116.46703339 -492.10556030]
[119.70363617 -477.43457031]
[120.91232300 -462.45950317]
[120.07057953 -447.45932007]
[117.19407654 -432.71350098]
[112.33641052 -418.49673462]
[105.58807373 -405.07385254]
[97.07479095 -392.69491577]
[86.95514679 -381.59057617]
[75.41767120 -371.96765137]
[62.67729950 -364.00546265]
[48.97137833 -357.85229492]
[34.55523682 -353.62280273]
[36.78035355 -338.78875732]
[39.00547028 -323.95471191]
[41.23058701 -309.12066650]
[43.45570374 -294.28662109]
[45.68082047 -279.45257568]
[47.90594101 -264.61853027]
[59.99917984 -255.99940491]
[62.46707916 -240.98727417]
[53.34456253 -228.36122131]
[55.56967926 -213.52717590]
[57.79479599 -198.69313049]
[60.24052429 -183.89385986]
[62.90631866 -169.13264465]
[72.66172028 -161.98010254]
[75.00344086 -149.70411682]
[68.14037323 -138.78343201]
[70.58610535 -123.98416138]
[80.29502869 -112.68876648]
[74.91136169 -97.81170654]
[77.35709381 -83.01243591]
[87.06601715 -71.71704102]
[81.68235016 -56.83998489]
[84.12808228 -42.04071426]
[86.57380676 -27.24144173]
[89.01953125 -12.44217110]
[101.23975372 -4.00405979]
[103.93089294 10.96966457]
[94.99736786 23.73014641]
[107.21759796 32.16825867]
[109.90872955 47.14198303]
[100.97520447 59.90246582]
[103.42093658 74.70173645]
[105.86666107 89.50100708]
[108.53245544 104.26222229]
[111.41773224 118.98211670]
[114.30300140 133.70201111]
[117.40711212 148.37730408]
[120.72937012 163.00477600]
[131.33102417 174.74851990]
[126.60477448 188.87338257]
[129.92703247 203.50083923]
[133.24929810 218.12829590]
[142.13890076 206.04629517]
[156.94668579 203.65267944]
[169.19009399 212.31864929]
[171.85552979 227.07994080]
[163.41612244 239.48059082]
[148.70634460 242.41697693]
[136.15315247 234.20776367]
[138.15716553 249.07328796]
[147.66882324 261.71603394]
[141.70126343 275.36291504]
[143.70527649 290.22845459]
[159.27995300 292.99432373]
[173.22047424 300.42858887]
[184.16784668 311.79290771]
[191.05909729 325.96649170]
[193.23043823 341.55664062]
[190.48120117 357.03558350]
[183.09236145 370.89019775]
[171.79780579 381.76992798]
[157.71145630 388.61837769]
[159.93656921 403.45242310]
[169.63540649 415.95214844]
[163.87168884 429.68637085]
[166.09680176 444.52041626]
[168.32191467 459.35446167]
[170.54704285 474.18850708]
[172.77215576 489.02252197]
[174.99726868 503.85656738]
[177.22239685 518.69061279]
[179.44750977 533.52465820]
[181.67262268 548.35870361]
[196.62048340 550.60656738]
[210.24095154 557.16204834]
[221.32292175 567.44219971]
[228.88098145 580.53289795]
[232.24305725 595.27020264]
[231.11022949 610.34362793]
[225.58320618 624.41290283]
[216.15345764 636.22692871]
[203.65945435 644.73522949]
[189.21217346 649.18127441]
[174.09625244 649.16973877]
[159.65577698 644.70159912]
[147.17478943 636.17419434]
[137.76310730 624.34576416]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 196]
[6 195]
[7 194]
[8 193]
[9 192]
[10 191]
[11 190]
[12 189]
[13 188]
[15 186]
[16 185]
[26 176]
[27 175]
[29 173]
[30 172]
[31 165]
[32 164]
[33 163]
[35 161]
[36 160]
[39 159]
[40 158]
[41 157]
[44 156]
[45 155]
[46 154]
[49 151]
[52 148]
[53 147]
[54 146]
[55 145]
[57 143]
[58 142]
[60 140]
[61 139]
[63 136]
[64 135]
[67 134]
[68 133]
[69 132]
[72 129]
[73 128]
[74 127]
[75 126]
[76 125]
[77 124]
[78 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
