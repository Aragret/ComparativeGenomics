%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGAUGCGGGAGAGUCGGCUACUUGUCAACCUUAUCCAACAAUCGCCAUUGAUUCUAAUCAUACCAUUAAUCCUUCUACUCAUCUAUAAACUUCUUGACxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[55.58583832 486.33407593]
[48.60628891 499.63497925]
[39.98311234 511.93414307]
[29.85791397 523.02954102]
[18.39695358 532.73907471]
[5.78843260 540.90325928]
[-7.76060629 547.38800049]
[-22.02767563 552.08685303]
[-36.77849579 554.92260742]
[-51.77084732 555.84875488]
[-66.75853729 554.85003662]
[-81.49546051 551.94293213]
[-95.73962402 547.17510986]
[-109.25711823 540.62481689]
[-121.82598114 532.39978027]
[-133.23980713 522.63488770]
[-143.31118774 511.49057007]
[-151.87474060 499.14984131]
[-158.78984070 485.81530762]
[-163.94291687 471.70593262]
[-167.24938965 457.05343628]
[-168.65492249 442.09841919]
[-168.13647461 427.08642578]
[-165.70252991 412.26400757]
[-161.39305115 397.87454224]
[-155.27883911 384.15432739]
[-147.46026611 371.32864380]
[-138.06573486 359.60809326]
[-127.24949646 349.18518066]
[-115.18917084 340.23101807]
[-102.08280945 332.89263916]
[-88.14561462 327.29058838]
[-73.60646057 323.51684570]
[-58.70408630 321.63333130]
[-43.68320465 321.67102051]
[-28.79047012 323.62930298]
[-14.27043724 327.47598267]
[-8.60765076 313.58593750]
[-2.94486427 299.69592285]
[2.71792245 285.80587769]
[8.27714825 271.87408447]
[13.73250580 257.90130615]
[19.18786240 243.92849731]
[15.61058521 226.74798584]
[30.08222198 215.36145020]
[35.32894135 201.30897522]
[40.57565689 187.25650024]
[28.91819191 196.69596863]
[14.55778408 201.02940369]
[-0.37528509 199.61398315]
[-13.66578388 192.65965271]
[-23.34214401 181.19805908]
[-27.96893692 166.92945862]
[-26.85980606 151.97053528]
[-20.17928123 138.54031372]
[-8.91838074 128.63111877]
[5.25240755 123.71291351]
[20.23093224 124.51528168]
[33.79521942 130.91920471]
[43.93308258 141.97468567]
[49.14063644 156.04171753]
[48.64579773 171.03167725]
[56.68697357 158.36915588]
[64.72814178 145.70661926]
[72.48453522 132.86769104]
[79.95227814 119.85873413]
[87.42002106 106.84977722]
[87.57736206 92.86883545]
[99.57102966 85.68247986]
[107.03877258 72.67353058]
[114.50650787 59.66457367]
[116.06485748 50.66405487]
[122.18351746 46.51871872]
[129.84411621 33.62239456]
[120.29901123 21.87010384]
[115.35993195 7.58803368]
[115.60475159 -7.49375296]
[120.98462677 -21.55529594]
[130.83221436 -32.90635681]
[143.94439697 -40.18957520]
[158.72923279 -42.54279709]
[173.39926147 -39.70105743]
[181.05986023 -52.59738159]
[188.72045898 -65.49371338]
[196.38105774 -78.39003754]
[196.28030396 -82.73097992]
[197.44863892 -86.49920654]
[199.55018616 -89.36607361]
[202.17681885 -91.14579010]
[204.90106201 -91.80657959]
[213.31567383 -104.22407532]
[221.73030090 -116.64157104]
[230.14491272 -129.05906677]
[238.55953979 -141.47656250]
[235.78605652 -156.80450439]
[244.49656677 -169.27774048]
[259.12649536 -171.82736206]
[267.54113770 -184.24485779]
[256.13113403 -194.00662231]
[245.88587952 -204.98454285]
[236.93420410 -217.04055786]
[229.38870239 -230.02305603]
[223.34423828 -243.76876831]
[218.87684631 -258.10482788]
[216.04270935 -272.85092163]
[214.87745667 -287.82165527]
[215.39575195 -302.82867432]
[217.59107971 -317.68331909]
[221.43583679 -332.19876099]
[226.88165283 -346.19244385]
[233.86004639 -359.48840332]
[242.28326416 -371.91937256]
[252.04537964 -383.32907104]
[263.02359009 -393.57400513]
[275.07989502 -402.52529907]
[288.06262207 -410.07043457]
[301.80850220 -416.11447144]
[316.14468384 -420.58145142]
[330.89086914 -423.41513062]
[345.86163330 -424.57995605]
[360.86865234 -424.06118774]
[375.72323608 -421.86541748]
[390.23855591 -418.02023315]
[404.23208618 -412.57400513]
[417.52780151 -405.59521484]
[429.95855713 -397.17163086]
[441.36795044 -387.40917969]
[451.61254883 -376.43063354]
[460.56350708 -364.37408447]
[468.10824585 -351.39114380]
[474.15185547 -337.64508057]
[478.61840820 -323.30874634]
[481.45166016 -308.56246948]
[482.61602783 -293.59167480]
[482.09683228 -278.58468628]
[479.90060425 -263.73016357]
[476.05499268 -249.21495056]
[470.60833740 -235.22160339]
[463.62915039 -221.92607117]
[455.20516968 -209.49559021]
[445.44238281 -198.08647156]
[434.46356201 -187.84220886]
[422.40673828 -178.89161682]
[409.42355347 -171.34727478]
[395.67730713 -165.30404663]
[381.34085083 -160.83793640]
[366.59448242 -158.00512695]
[351.62365723 -156.84121704]
[336.61666870 -157.36087036]
[321.76220703 -159.55752563]
[307.24713135 -163.40357971]
[293.25393677 -168.85064697]
[279.95861816 -175.83023071]
[271.54400635 -163.41273499]
[274.59802246 -148.87973022]
[266.24130249 -136.16674805]
[250.97702026 -133.06195068]
[242.56240845 -120.64444733]
[234.14779663 -108.22695923]
[225.73316956 -95.80946350]
[217.31855774 -83.39196777]
[209.27737427 -70.72943878]
[201.61677551 -57.83311462]
[193.95619202 -44.93678665]
[186.29559326 -32.04045868]
[195.80862427 -20.51711845]
[200.81455994 -6.40790939]
[200.69099426 8.59073162]
[195.43356323 22.66840363]
[185.65870667 34.11927032]
[172.53152466 41.54875565]
[157.62686157 44.04336929]
[142.74043274 41.28298950]
[135.07984924 54.17931747]
[127.51546478 67.13231659]
[120.04772186 80.14126587]
[112.57997894 93.15022278]
[112.42263794 107.13116455]
[100.42897034 114.31752014]
[92.96122742 127.32646942]
[85.49349213 140.33541870]
[85.50820923 145.55528259]
[83.70001984 149.83123779]
[80.73374176 152.62698364]
[77.39067078 153.74780273]
[69.34949493 166.41032410]
[61.30832291 179.07284546]
[54.62812805 192.50321960]
[49.38141251 206.55569458]
[44.13469315 220.60816956]
[48.76898956 232.64503479]
[44.10968781 244.24134827]
[33.16065979 249.38385010]
[27.70530319 263.35665894]
[22.24994659 277.32943726]
[22.04399109 286.46154785]
[16.60795021 291.46868896]
[10.94516277 305.35870361]
[5.28237629 319.24871826]
[-0.38041043 333.13876343]
[12.69028473 340.54046631]
[24.70712852 349.55288696]
[35.47279358 360.02804565]
[44.81049347 371.79391479]
[52.56689835 384.65728760]
[58.61464310 398.40695190]
[62.85441589 412.81710815]
[65.21659851 427.65112305]
[65.66239166 442.66543579]
[64.18448639 457.61349487]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 200]
[38 199]
[39 198]
[40 197]
[41 195]
[42 194]
[43 193]
[45 190]
[46 189]
[47 188]
[62 187]
[63 186]
[64 185]
[65 181]
[66 180]
[67 179]
[69 177]
[70 176]
[71 175]
[73 174]
[74 173]
[82 165]
[83 164]
[84 163]
[85 162]
[90 161]
[91 160]
[92 159]
[93 158]
[94 157]
[97 154]
[98 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
