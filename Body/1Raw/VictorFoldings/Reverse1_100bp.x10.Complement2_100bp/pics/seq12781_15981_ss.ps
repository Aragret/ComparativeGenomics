%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUGGCUAUAGCGGCUAUGCCAACAUAUCCUAACGAACUUACCGACGACACAACCGUAGACGAGCCCGCAUAGUAGUUGACUACUCGUUCUUCCUAUAUUxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[43.71129227 286.91604614]
[51.63925171 299.70126343]
[57.08271408 313.72564697]
[59.85628891 328.51153564]
[59.86549759 343.55526733]
[57.11003494 358.34454346]
[51.68375015 372.37557983]
[43.77145767 385.17050171]
[33.64264679 396.29354858]
[21.64230347 405.36581421]
[8.17915440 412.07836914]
[-6.28825235 416.20254517]
[-21.26716042 417.59786987]
[-36.24739456 416.21685791]
[-50.71873093 412.10650635]
[-64.18828583 405.40682983]
[-76.19728851 396.34600830]
[-86.33672333 385.23263550]
[-94.26123047 372.44528198]
[-99.70091248 358.41943359]
[-102.47050476 343.63281250]
[-102.47565460 328.58905029]
[-99.71620941 313.80053711]
[-94.28614044 299.77096558]
[-86.37039948 286.97814941]
[-76.23859406 275.85784912]
[-64.23580170 266.78881836]
[-50.77084351 260.07989502]
[-36.30232620 255.95962524]
[-21.32304382 254.56832886]
[-6.34318209 255.95338440]
[8.12704754 260.06762695]
[14.80724239 246.63726807]
[21.48743629 233.20689392]
[21.65171432 225.81805420]
[28.36837578 219.62739563]
[35.24778748 206.29797363]
[42.12720108 192.96853638]
[49.00661469 179.63911438]
[49.28087997 172.25354004]
[56.08896637 166.16357422]
[63.16607285 152.93804932]
[70.24317932 139.71250916]
[69.42600250 124.84034729]
[82.75901031 116.32321930]
[89.83612061 103.09769440]
[96.01188660 89.42802429]
[101.25860596 75.37554932]
[106.50532532 61.32308197]
[104.08381653 45.68828201]
[115.78412628 36.47133636]
[121.03084564 22.41886520]
[121.10081482 13.28470325]
[126.46170044 8.19720364]
[131.91705322 -5.77559376]
[137.37242126 -19.74839211]
[142.19841003 -33.95084763]
[146.38542175 -48.35462952]
[150.57243347 -62.75841141]
[154.75944519 -77.16219330]
[158.94645691 -91.56597900]
[163.13346863 -105.96975708]
[167.32048035 -120.37354279]
[153.18858337 -125.41585541]
[139.38352966 -131.29429626]
[125.95474243 -137.98780823]
[112.95029449 -145.47245789]
[100.41673279 -153.72142029]
[88.39893341 -162.70518494]
[76.93991089 -172.39157104]
[66.08068085 -182.74594116]
[55.86013031 -193.73118591]
[46.31483841 -205.30801392]
[37.47897339 -217.43496704]
[29.38416862 -230.06863403]
[22.05940056 -243.16380310]
[15.53089046 -256.67358398]
[9.82200813 -270.54962158]
[4.95319176 -284.74221802]
[0.94186860 -299.20059204]
[-2.19760084 -313.87298584]
[-4.45397806 -328.70687866]
[-5.81918621 -343.64916992]
[-6.28833723 -358.64636230]
[-5.85975266 -373.64474487]
[-4.53496647 -388.59066772]
[-2.31872082 -403.43060303]
[0.78105044 -418.11141968]
[4.75325108 -432.58062744]
[9.58366108 -446.78634644]
[15.25498962 -460.67776489]
[21.74693489 -474.20513916]
[29.03625488 -487.32006836]
[37.09685898 -499.97558594]
[45.89988708 -512.12640381]
[55.41383362 -523.72900391]
[65.60463715 -534.74188232]
[76.43581390 -545.12554932]
[87.86859894 -554.84289551]
[99.86205292 -563.85913086]
[112.37325287 -572.14196777]
[125.35741425 -579.66174316]
[138.76805115 -586.39160156]
[152.55714417 -592.30737305]
[166.67535400 -597.38787842]
[181.07212830 -601.61499023]
[195.69593811 -604.97351074]
[210.49443054 -607.45147705]
[225.41461182 -609.03997803]
[240.40310669 -609.73339844]
[255.40623474 -609.52911377]
[270.37030029 -608.42803955]
[285.24169922 -606.43395996]
[299.96725464 -603.55407715]
[314.49423218 -599.79870605]
[328.77059937 -595.18127441]
[342.74526978 -589.71832275]
[356.36825562 -583.42944336]
[369.59072876 -576.33703613]
[382.36535645 -568.46661377]
[394.64645386 -559.84625244]
[406.39004517 -550.50689697]
[417.55407715 -540.48193359]
[428.09860229 -529.80725098]
[437.98583984 -518.52105713]
[447.18041992 -506.66378784]
[455.64944458 -494.27786255]
[463.36257935 -481.40762329]
[470.29217529 -468.09912109]
[476.41348267 -454.40005493]
[481.70458984 -440.35940552]
[486.14651489 -426.02743530]
[489.72338867 -411.45550537]
[492.42239380 -396.69570923]
[494.23385620 -381.80096436]
[495.15130615 -366.82452393]
[495.17147827 -351.82000732]
[494.29425049 -336.84115601]
[492.52279663 -321.94158936]
[489.86346436 -307.17459106]
[486.32577515 -292.59310913]
[481.92236328 -278.24926758]
[476.66903687 -264.19445801]
[470.58453369 -250.47897339]
[463.69070435 -237.15190125]
[456.01217651 -224.26098633]
[447.57647705 -211.85234070]
[438.41378784 -199.97039795]
[428.55688477 -188.65769958]
[418.04110718 -177.95472717]
[406.90405273 -167.89979553]
[395.18560791 -158.52891541]
[382.92770386 -149.87561035]
[370.17425537 -141.97088623]
[356.97088623 -134.84300232]
[343.36486816 -128.51751709]
[329.40490723 -123.01703644]
[315.14099121 -118.36126709]
[300.62417603 -114.56687927]
[285.90640259 -111.64745331]
[271.04040527 -109.61343384]
[256.07934570 -108.47211456]
[241.07682800 -108.22756195]
[226.08653259 -108.88066864]
[211.16212463 -110.42909241]
[196.35704041 -112.86728668]
[181.72425842 -116.18653107]
[177.53724670 -101.78274536]
[173.35023499 -87.37896729]
[169.16322327 -72.97518158]
[164.97621155 -58.57139969]
[160.78919983 -44.16761780]
[156.60220337 -29.76383591]
[170.23521423 -36.02011108]
[184.34642029 -30.93347549]
[190.85227966 -17.41778946]
[186.02593994 -3.21544957]
[172.63214111 3.53779864]
[158.34347534 -1.02661192]
[151.34521484 -14.29303455]
[145.88986206 -0.32023677]
[140.43449402 13.65256119]
[135.08331299 27.66558456]
[129.83659363 41.71805573]
[132.63337708 56.34772491]
[120.55779266 66.56980133]
[115.31107330 80.62226868]
[110.06436157 94.67474365]
[122.90427399 86.91996765]
[137.90103149 87.23158264]
[150.40773010 95.51303864]
[156.54902649 109.19823456]
[154.42198181 124.04665375]
[144.68566895 135.45736694]
[130.35700989 139.89462280]
[115.87586975 135.98350525]
[105.72941589 124.93591309]
[103.06164551 110.17479706]
[95.98454285 123.40032959]
[96.29551697 139.21847534]
[83.46870422 146.78962708]
[76.39160156 160.01515198]
[69.31449127 173.24067688]
[62.33604050 186.51852417]
[55.45663071 199.84794617]
[48.57721710 213.17738342]
[41.69780350 226.50680542]
[34.91781235 239.88708496]
[28.23761940 253.31745911]
[21.55742455 266.74783325]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 210]
[33 209]
[34 208]
[36 207]
[37 206]
[38 205]
[39 204]
[41 203]
[42 202]
[43 201]
[45 199]
[46 198]
[47 188]
[48 187]
[49 186]
[51 184]
[52 183]
[54 182]
[55 181]
[56 180]
[57 173]
[58 172]
[59 171]
[60 170]
[61 169]
[62 168]
[63 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
