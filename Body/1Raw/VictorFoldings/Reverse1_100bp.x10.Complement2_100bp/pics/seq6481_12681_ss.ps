%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[102.32963562 548.11169434]
[102.10630798 533.11334229]
[101.88298035 518.11499023]
[101.65965271 503.11666870]
[100.98986816 488.13162231]
[99.87422180 473.17318726]
[98.75857544 458.21472168]
[97.64292145 443.25628662]
[96.52727509 428.29782104]
[85.87956238 414.34814453]
[94.01277924 397.82748413]
[92.67454529 382.88729858]
[81.20003510 392.54833984]
[66.46324158 389.75067139]
[59.32757950 376.55667114]
[65.05319214 362.69241333]
[79.41937256 358.37814331]
[91.83506775 366.79275513]
[91.61174011 351.79443359]
[91.38841248 336.79608154]
[83.46248627 324.18542480]
[90.99346161 310.27157593]
[90.77013397 295.27325439]
[90.54680634 280.27490234]
[82.15488434 276.14138794]
[75.80583191 269.19253540]
[72.40297699 260.35449219]
[72.45312500 250.82623291]
[75.99153900 241.91688538]
[82.57133484 234.86589050]
[91.31947327 230.67062378]
[91.98925781 215.68557739]
[92.65904236 200.70054626]
[93.32883453 185.71549988]
[93.55216217 170.71716309]
[93.32883453 155.71882629]
[93.10550690 140.72048950]
[92.88217926 125.72215271]
[92.65885162 110.72381592]
[91.98905945 95.73877716]
[90.87341309 80.78031921]
[89.75776672 65.82186890]
[88.64212036 50.86341476]
[87.52646637 35.90496063]
[73.38712311 30.26224327]
[63.14161682 19.08563423]
[58.78260422 4.62813854]
[61.12338638 -10.22722244]
[69.64677429 -22.54230690]
[82.61815643 -29.90496445]
[81.50251007 -44.86341858]
[80.16427612 -59.80360413]
[78.60375214 -74.72220612]
[77.04322815 -89.64080811]
[75.48270416 -104.55941772]
[73.92218018 -119.47801971]
[72.36165619 -134.39662170]
[70.80113220 -149.31523132]
[69.24061584 -164.23384094]
[67.68009186 -179.15243530]
[58.54907608 -192.07278442]
[64.92031097 -205.53593445]
[63.35978699 -220.45454407]
[55.31702042 -207.79302979]
[41.75076294 -201.39329529]
[26.86466980 -203.23834229]
[15.27135944 -212.75650024]
[10.56314278 -226.99842834]
[14.19891262 -241.55113220]
[25.05208778 -251.90528870]
[39.75969315 -254.85255432]
[53.76441574 -249.47969055]
[62.72682953 -237.45127869]
[63.17343521 -252.44462585]
[63.62004089 -267.43798828]
[64.06665039 -282.43133545]
[64.51325226 -297.42468262]
[51.55493546 -305.55050659]
[44.45067215 -318.98278809]
[45.01988220 -334.06732178]
[53.00962830 -346.75668335]
[66.18941498 -353.69631958]
[66.63601685 -368.68966675]
[67.08262634 -383.68304443]
[67.41760254 -398.67929077]
[67.64093018 -413.67761230]
[67.86425781 -428.67596436]
[68.08758545 -443.67431641]
[68.31091309 -458.67263794]
[56.06369781 -468.01672363]
[51.71773911 -482.61007690]
[56.73881912 -496.79644775]
[69.00379181 -505.20526123]
[69.22711945 -520.20361328]
[69.45044708 -535.20196533]
[69.67377472 -550.20025635]
[55.29246140 -554.85528564]
[42.92311478 -563.54382324]
[33.66561127 -575.49328613]
[28.34312057 -589.64117432]
[27.42891502 -604.72943115]
[31.00428772 -619.41644287]
[38.75131607 -632.39624023]
[49.98114014 -642.51464844]
[63.69521332 -648.87200928]
[78.67408752 -650.90295410]
[93.58585358 -648.42694092]
[107.10456085 -641.66412354]
[118.02814484 -631.21582031]
[125.38527679 -618.01110840]
[128.52177429 -603.22418213]
[127.15874481 -588.16979980]
[121.41738129 -574.18664551]
[111.80820465 -562.51812744]
[99.18564606 -554.20172119]
[84.67211151 -549.97692871]
[84.44878387 -534.97863770]
[84.22545624 -519.98028564]
[84.00212860 -504.98193359]
[96.01129913 -496.21166992]
[100.60777283 -481.88211060]
[95.82924652 -467.42462158]
[83.30924988 -458.44931030]
[83.08592224 -443.45095825]
[82.86259460 -428.45263672]
[82.63926697 -413.45428467]
[82.41593933 -398.45596313]
[85.45950317 -391.72109985]
[82.07597351 -383.23641968]
[81.62937164 -368.24307251]
[81.18276215 -353.24972534]
[93.92612457 -345.53790283]
[101.14642334 -332.39547729]
[100.81678009 -317.30383301]
[92.92560577 -304.31820679]
[79.50660706 -296.97808838]
[79.05999756 -281.98471069]
[78.61339569 -266.99136353]
[78.16678619 -251.99803162]
[77.72018433 -237.00466919]
[78.27838898 -222.01506042]
[79.83891296 -207.09646606]
[88.85830688 -195.24319458]
[82.59869385 -180.71296692]
[84.15921783 -165.79435730]
[85.71974182 -150.87574768]
[87.28026581 -135.95715332]
[88.84078979 -121.03854370]
[90.40130615 -106.11994171]
[91.96183014 -91.20133209]
[93.52235413 -76.28273010]
[95.08287811 -61.36412430]
[98.16299438 -57.71420288]
[98.98295593 -52.09062195]
[96.46096039 -45.97906494]
[97.57660675 -31.02061272]
[111.49666595 -25.66360283]
[121.75258636 -14.74913979]
[126.27113342 -0.40536904]
[124.10498810 14.53879356]
[115.63079071 27.11157799]
[102.48492432 34.78931046]
[103.60057068 49.74776459]
[104.71621704 64.70621490]
[105.83187103 79.66467285]
[106.94751740 94.62312317]
[109.08012390 96.80062103]
[110.46756744 99.80220795]
[110.80308533 103.35338593]
[109.88562775 107.07017517]
[107.65718842 110.50048828]
[107.88051605 125.49882507]
[108.10384369 140.49716187]
[108.32717133 155.49549866]
[108.55049896 170.49383545]
[110.90861511 174.13983154]
[111.88560486 177.96212769]
[111.59563446 181.50491333]
[110.28918457 184.39624023]
[108.31387329 186.38528442]
[107.64408112 201.37033081]
[106.97429657 216.35536194]
[106.30451202 231.34040833]
[121.47147369 245.90524292]
[120.96369171 266.63293457]
[105.54514313 280.05157471]
[105.76847076 295.04992676]
[105.99179840 310.04824829]
[113.93370819 323.73168945]
[106.38674927 336.57275391]
[106.61007690 351.57110596]
[106.83340454 366.56942749]
[107.61473083 381.54907227]
[108.95296478 396.48925781]
[118.33210754 405.34332275]
[119.13915253 417.81457520]
[111.48572540 427.18215942]
[112.60137939 442.14062500]
[113.71702576 457.09909058]
[114.83267212 472.05752563]
[115.94832611 487.01599121]
[118.51927185 490.51516724]
[119.72203827 494.27252197]
[119.64345551 497.82629395]
[118.51141357 500.79025269]
[116.65798950 502.89334106]
[116.88131714 517.89166260]
[117.10464478 532.89001465]
[117.32797241 547.88836670]
[119.80529022 567.11108398]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 209]
[2 208]
[3 207]
[4 206]
[5 201]
[6 200]
[7 199]
[8 198]
[9 197]
[11 194]
[12 193]
[18 192]
[19 191]
[20 190]
[22 188]
[23 187]
[24 186]
[31 183]
[32 182]
[33 181]
[34 180]
[35 175]
[36 174]
[37 173]
[38 172]
[39 171]
[40 166]
[41 165]
[42 164]
[43 163]
[44 162]
[50 156]
[51 155]
[52 152]
[53 151]
[54 150]
[55 149]
[56 148]
[57 147]
[58 146]
[59 145]
[60 144]
[62 142]
[63 141]
[73 140]
[74 139]
[75 138]
[76 137]
[77 136]
[82 131]
[83 130]
[84 129]
[85 127]
[86 126]
[87 125]
[88 124]
[89 123]
[93 119]
[94 118]
[95 117]
[96 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
