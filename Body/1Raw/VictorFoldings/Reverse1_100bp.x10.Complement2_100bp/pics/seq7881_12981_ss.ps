%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[188.77749634 561.54626465]
[197.81448364 549.51928711]
[208.90769958 539.35784912]
[221.67932129 531.40795898]
[216.22396851 517.43518066]
[210.76861572 503.46240234]
[205.31326294 489.48959351]
[202.24819946 487.74667358]
[199.87507629 484.43255615]
[198.92315674 479.88864136]
[199.94163513 474.76910400]
[195.11564636 460.56661987]
[190.28964233 446.36416626]
[185.46363831 432.16171265]
[180.53205872 417.99557495]
[175.49513245 403.86654663]
[163.72866821 403.38272095]
[152.78237915 398.94662476]
[143.94720459 391.05621338]
[138.27355957 380.61831665]
[136.44650269 368.84439087]
[138.70312500 357.10995483]
[144.80200195 346.79388428]
[154.04884338 339.11639404]
[149.64785767 324.77655029]
[145.24685669 310.43667603]
[140.84585571 296.09683228]
[136.44485474 281.75698853]
[127.21799469 293.58343506]
[112.22125244 293.89599609]
[102.50966644 282.46423340]
[105.24226379 267.71524048]
[118.40467072 260.52142334]
[132.29293823 266.18457031]
[128.97067261 251.55709839]
[125.53961945 236.95478821]
[121.99994659 222.37840271]
[118.46027374 207.80203247]
[114.92060089 193.22566223]
[111.38092804 178.64927673]
[107.84125519 164.07290649]
[97.31911469 153.53089905]
[101.58135986 138.29463196]
[98.04168701 123.71826172]
[94.50201416 109.14188385]
[89.57041931 94.97575378]
[83.29306030 81.35243988]
[77.01570129 67.72911835]
[70.73833466 54.10580444]
[57.93591309 44.81018448]
[59.63684845 30.01301956]
[53.20331573 23.52861786]
[53.36912918 16.13982391]
[47.29529572 2.42455649]
[41.11952591 -11.24511337]
[34.84216690 -24.86842918]
[31.30065918 -10.29250050]
[20.51472473 0.13168411]
[5.82650328 3.17407656]
[-8.21269989 -2.10804129]
[-17.25268555 -14.07794762]
[-18.49231529 -29.02663803]
[-11.54747581 -42.32209396]
[1.42989731 -49.84458160]
[16.41862488 -49.26316833]
[28.77445030 -40.75781631]
[24.37345123 -55.09766388]
[19.86582375 -69.40435028]
[15.25181389 -83.67708588]
[10.63780499 -97.94981384]
[6.02379560 -112.22254944]
[-5.58330774 -122.97363281]
[-2.13606286 -137.46382141]
[-13.74316597 -148.21490479]
[-10.29592133 -162.70510864]
[-14.90993023 -176.97782898]
[-19.52393913 -191.25056458]
[-34.40723419 -189.10684204]
[-49.43873215 -189.50939941]
[-64.18595123 -192.44668579]
[-78.22457886 -197.83415222]
[-91.15069580 -205.51683044]
[-102.59239960 -215.27363586]
[-112.22048950 -226.82388306]
[-119.75793457 -239.83522034]
[-124.98787689 -253.93328857]
[-127.75983429 -268.71246338]
[-127.99406433 -283.74752808]
[-125.68381500 -298.60589600]
[-120.89556122 -312.86004639]
[-113.76706696 -326.09985352]
[-104.50344086 -337.94439697]
[-93.37120819 -348.05288696]
[-80.69067383 -356.13446045]
[-66.82667542 -361.95663452]
[-52.17810822 -365.35183716]
[-37.16644287 -366.22244263]
[-22.22359657 -364.54336548]
[-7.77950096 -360.36291504]
[5.75025654 -353.80139160]
[17.97639847 -345.04757690]
[28.54715347 -334.35330200]
[37.15838242 -322.02630615]
[43.56232071 -308.42126465]
[47.57471085 -293.92956543]
[49.08011627 -278.96823120]
[48.03521729 -263.96768188]
[44.47008133 -249.35955811]
[38.48728180 -235.56411743]
[30.25895882 -222.97830200]
[20.02185249 -211.96423340]
[8.07051086 -202.83880615]
[-5.25120640 -195.86457825]
[-0.63719690 -181.59184265]
[3.97681236 -167.31910706]
[15.25389099 -157.58891296]
[12.13667107 -142.07783508]
[23.41374969 -132.34764099]
[20.29652977 -116.83655548]
[24.91053772 -102.56382751]
[29.52454758 -88.29109192]
[34.13855743 -74.01835632]
[39.18712997 -68.62079620]
[38.71329880 -59.49866104]
[43.11429596 -45.15881348]
[48.46548462 -31.14579010]
[54.74284363 -17.52247429]
[60.39704132 -12.76308060]
[61.01056290 -3.64927745]
[67.08439636 10.06598949]
[73.26016235 23.73565865]
[85.61358643 32.05684662]
[84.36165619 47.82844162]
[90.63901520 61.45175934]
[96.91637421 75.07507324]
[103.19373322 88.69839478]
[104.97688293 73.80475616]
[112.59357452 60.88245010]
[124.76026917 52.10911179]
[139.42666626 48.96319962]
[154.12121582 51.97485733]
[166.36764526 60.63656998]
[174.10218811 73.48867798]
[176.02145386 88.36538696]
[171.80201721 102.75970459]
[162.15492249 114.24593353]
[148.70585632 120.88844299]
[133.72125244 121.56785583]
[119.72627258 116.16967773]
[109.07839203 105.60221863]
[112.61806488 120.17858887]
[116.15773773 134.75495911]
[126.93305969 146.33956909]
[122.41763306 160.53323364]
[125.95730591 175.10960388]
[129.49697876 189.68598938]
[133.03665161 204.26235962]
[136.57632446 218.83872986]
[140.11599731 233.41511536]
[145.18209839 241.01591492]
[143.59814453 248.23484802]
[146.92039490 262.86230469]
[150.78469849 277.35598755]
[155.18569946 291.69583130]
[159.58670044 306.03570557]
[163.98770142 320.37554932]
[168.38870239 334.71539307]
[186.51173401 338.23422241]
[200.27606201 350.40939331]
[205.92822266 367.80545044]
[201.98564148 385.57955933]
[189.62416077 398.82965088]
[194.66108704 412.95867920]
[200.49044800 419.99118042]
[199.66610718 427.33572388]
[204.49209595 441.53817749]
[209.31809998 455.74063110]
[214.14408875 469.94308472]
[219.28605652 484.03424072]
[224.74140930 498.00701904]
[230.19676208 511.97982788]
[235.65213013 525.95263672]
[250.43170166 523.14575195]
[265.47540283 523.10266113]
[280.27084351 525.82476807]
[294.31405640 531.21942139]
[307.12677002 539.10290527]
[318.27261353 549.20660400]
[327.37191772 561.18646240]
[334.11477661 574.63446045]
[338.27151489 589.09252930]
[339.70059204 604.06829834]
[338.35333252 619.05157471]
[334.27560425 633.53216553]
[327.60626221 647.01678467]
[318.57254028 659.04614258]
[307.48205566 669.21057129]
[294.71255493 677.16387939]
[280.69900513 682.63519287]
[265.91867065 685.43804932]
[250.87496948 685.47711182]
[236.08027649 682.75097656]
[222.03849792 677.35253906]
[209.22789001 669.46563721]
[198.08479309 659.35888672]
[188.98872375 647.37658691]
[182.24949646 633.92675781]
[178.09663391 619.46759033]
[176.67158508 604.49145508]
[178.02290344 589.50854492]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 182]
[5 181]
[6 180]
[7 179]
[11 178]
[12 177]
[13 176]
[14 175]
[15 173]
[16 172]
[24 167]
[25 166]
[26 165]
[27 164]
[28 163]
[34 162]
[35 161]
[36 159]
[37 158]
[38 157]
[39 156]
[40 155]
[41 154]
[43 152]
[44 151]
[45 150]
[46 136]
[47 135]
[48 134]
[49 133]
[51 131]
[53 130]
[54 129]
[55 127]
[56 126]
[66 125]
[67 124]
[68 122]
[69 121]
[70 120]
[71 119]
[73 117]
[75 115]
[76 114]
[77 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
