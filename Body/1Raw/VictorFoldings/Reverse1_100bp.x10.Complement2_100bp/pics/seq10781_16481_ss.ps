%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUCAUCUCCCUACUACGAUUAUUAAUCCGACACCCACCAACACAACUAAGUUUAAUACACAAAAAACCUUUCAGUACAGUCACCAUCAUUAUAUUAACxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[160.90025330 470.35403442]
[164.70944214 455.81317139]
[170.74653625 442.04727173]
[178.86288452 429.39535522]
[188.85858154 418.16894531]
[200.48750305 408.64450073]
[213.46325684 401.05661011]
[208.00790405 387.08380127]
[202.64700317 381.99630737]
[202.57704163 372.86215210]
[197.33032227 358.80966187]
[192.08360291 344.75720215]
[186.83688354 330.70474243]
[181.27766418 316.77291870]
[175.40869141 302.96875000]
[159.55728149 297.34988403]
[152.53599548 281.69689941]
[159.13525391 265.49600220]
[153.06141663 251.78073120]
[146.98759460 238.06547546]
[140.91375732 224.35020447]
[135.33103943 219.50715637]
[134.85328674 210.38522339]
[130.83782959 207.79963684]
[128.40400696 202.66412354]
[129.02188110 196.08158875]
[123.56651306 182.10879517]
[118.11116028 168.13600159]
[112.65579987 154.16320801]
[107.20044708 140.19039917]
[101.74508667 126.21760559]
[96.28973389 112.24480438]
[94.94895172 127.18476868]
[89.98307800 141.33891296]
[81.69577026 153.84173584]
[70.59379578 163.92866516]
[57.35604858 170.98289490]
[42.79202271 174.57304382]
[27.79231453 174.47958374]
[13.27416039 170.70820618]
[0.12535134 163.48956299]
[-10.85005856 153.26507568]
[-18.98091698 140.65994263]
[-23.77002144 126.44500732]
[-24.92451286 111.48950195]
[-22.37379837 96.70796204]
[-16.27384949 83.00429535]
[-6.99768543 71.21646881]
[4.88745546 62.06532669]
[18.65479279 56.11045837]
[33.46244431 53.71600723]
[48.40492249 55.02840042]
[62.56848526 59.96737289]
[75.08702850 68.23091888]
[85.19503021 79.31370544]
[92.27440643 92.53805542]
[91.82779694 77.54470062]
[91.38119507 62.55135345]
[90.93458557 47.55800247]
[90.48798370 32.56465149]
[89.59516907 17.59124756]
[88.25692749 2.65106225]
[74.84688568 -1.81181943]
[64.18299103 -11.02081585]
[57.85369492 -23.56057358]
[56.78511429 -37.52297592]
[61.10565567 -50.79747391]
[70.13161469 -61.39011002]
[82.47512817 -67.72303009]
[81.35948181 -82.68148804]
[80.24383545 -97.63993835]
[79.12818146 -112.59838867]
[77.78994751 -127.53857422]
[76.22943115 -142.45718384]
[72.66143799 -148.02323914]
[72.46892548 -153.70301819]
[74.85134125 -157.84223938]
[73.73569489 -172.80068970]
[72.62004852 -187.75915527]
[71.50440216 -202.71760559]
[70.38874817 -217.67605591]
[69.27310181 -232.63450623]
[68.15745544 -247.59295654]
[54.42407990 -254.32658386]
[45.96094131 -266.94689941]
[44.95774841 -282.00875854]
[51.58400345 -295.46047974]
[63.97030258 -303.73364258]
[62.85465622 -318.69210815]
[61.73900604 -333.65054321]
[46.85643005 -336.01815796]
[32.92125320 -341.75466919]
[20.68498611 -350.55072021]
[10.80751228 -361.93194580]
[3.82151341 -375.28457642]
[0.10373492 -389.88851929]
[-0.14532797 -404.95617676]
[3.08775640 -419.67501831]
[9.62863159 -433.25122070]
[19.12455750 -444.95266724]
[31.06342888 -454.14834595]
[44.80139923 -460.34228516]
[59.59759521 -463.20046997]
[74.65407562 -462.56878662]
[89.15887451 -458.48126221]
[102.32975006 -451.15838623]
[113.45642090 -440.99502563]
[121.93884277 -428.53930664]
[127.31956482 -414.46292114]
[129.30841064 -399.52499390]
[127.79812622 -384.53112793]
[122.87016296 -370.28994751]
[114.79027557 -357.56939697]
[103.99420166 -347.05551147]
[91.06416321 -339.31530762]
[76.69745636 -334.76620483]
[77.81311035 -319.80773926]
[78.92875671 -304.84927368]
[92.40526581 -298.50506592]
[100.95365906 -286.18511963]
[102.19585419 -271.14108276]
[95.69846344 -257.40496826]
[83.11590576 -248.70860291]
[84.23155212 -233.75015259]
[85.34720612 -218.79170227]
[86.46285248 -203.83325195]
[87.57849884 -188.87480164]
[88.69415283 -173.91633606]
[89.80979919 -158.95788574]
[91.14803314 -144.01770020]
[92.70855713 -129.09910583]
[95.78867340 -125.44918060]
[96.60862732 -119.82559204]
[94.08663940 -113.71404266]
[95.20228577 -98.75558472]
[96.31793213 -83.79713440]
[97.43358612 -68.83868408]
[112.41577148 -63.28128052]
[123.51491547 -51.70446396]
[128.47230530 -36.39081573]
[126.24717712 -20.39053154]
[117.23474121 -6.91389608]
[103.19711304 1.31282794]
[104.53534698 16.25301361]
[106.59751129 18.15186501]
[108.03176117 20.98197556]
[108.47963715 24.50827980]
[107.67429352 28.37039566]
[105.48133087 32.11804581]
[105.92794037 47.11139679]
[106.37454224 62.10474777]
[106.82115173 77.09809875]
[107.26775360 92.09144592]
[110.26252747 106.78945160]
[115.71788788 120.76224518]
[121.17324066 134.73504639]
[126.62860107 148.70783997]
[132.08395386 162.68064880]
[137.53932190 176.65344238]
[142.99467468 190.62623596]
[148.65745544 204.51626587]
[154.62902832 218.27636719]
[160.70285034 231.99163818]
[166.77668762 245.70689392]
[172.85052490 259.42218018]
[185.89031982 262.79534912]
[194.48107910 272.91510010]
[195.65736389 285.94192505]
[189.21287537 297.09979248]
[195.08183289 310.90396118]
[199.25349426 314.04153442]
[201.57257080 318.06338501]
[202.01249695 322.11572266]
[200.88935852 325.45800781]
[206.13607788 339.51046753]
[211.38279724 353.56295776]
[216.62950134 367.61541748]
[221.98069763 381.62844849]
[227.43605042 395.60125732]
[242.12051392 392.38986206]
[257.12655640 391.51525879]
[272.08465576 392.99905396]
[286.62646484 396.80462646]
[300.39385986 402.83831787]
[313.04782104 410.95153809]
[324.27670288 420.94445801]
[333.80401611 432.57101440]
[341.39511108 445.54489136]
[346.86309814 459.54660034]
[350.07327271 474.23132324]
[350.94662476 489.23745728]
[349.46160889 504.19543457]
[345.65481567 518.73693848]
[339.61999512 532.50378418]
[331.50573730 545.15710449]
[321.51190186 556.38513184]
[309.88455200 565.91149902]
[296.91003418 573.50152588]
[282.90789795 578.96838379]
[268.22290039 582.17736816]
[253.21670532 583.04943848]
[238.25883484 581.56317139]
[223.71766663 577.75518799]
[209.95127869 571.71923828]
[197.29866028 563.60394287]
[186.07142639 553.60919189]
[176.54603577 541.98101807]
[168.95706177 529.00592041]
[163.49139404 515.00329590]
[160.28363037 500.31805420]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 179]
[8 178]
[10 177]
[11 176]
[12 175]
[13 174]
[14 170]
[15 169]
[18 165]
[19 164]
[20 163]
[21 162]
[23 161]
[26 160]
[27 159]
[28 158]
[29 157]
[30 156]
[31 155]
[32 154]
[56 153]
[57 152]
[58 151]
[59 150]
[60 149]
[61 144]
[62 143]
[69 137]
[70 136]
[71 135]
[72 134]
[73 131]
[74 130]
[77 129]
[78 128]
[79 127]
[80 126]
[81 125]
[82 124]
[83 123]
[88 118]
[89 117]
[90 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
