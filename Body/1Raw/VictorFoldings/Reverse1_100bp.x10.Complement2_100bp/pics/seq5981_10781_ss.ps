%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[68.65278625 450.42694092]
[59.79080582 462.53842163]
[50.02769852 473.93600464]
[39.42076111 484.55276489]
[28.03223419 494.32641602]
[15.92895412 503.19958496]
[3.18194890 511.12023926]
[-10.13397694 518.04187012]
[-23.94067764 523.92382812]
[-38.15713120 528.73168945]
[-52.69990921 532.43713379]
[-67.48366547 535.01843262]
[-82.42164612 536.46051025]
[-97.42617798 536.75488281]
[-112.40922546 535.89971924]
[-127.28283691 533.90020752]
[-141.95974731 530.76794434]
[-156.35382080 526.52136230]
[-170.38058472 521.18536377]
[-183.95771790 514.79125977]
[-197.00555420 507.37664795]
[-209.44750977 498.98495483]
[-221.21057129 489.66546631]
[-232.22572327 479.47286987]
[-242.42831421 468.46694946]
[-251.75846863 456.71234131]
[-260.16143799 444.27798462]
[-267.58789062 431.23687744]
[-273.99426270 417.66555786]
[-279.34295654 403.64364624]
[-283.60260010 389.25341797]
[-286.74816895 374.57934570]
[-288.76119995 359.70755005]
[-289.62988281 344.72528076]
[-289.34915161 329.72048950]
[-287.92062378 314.78121948]
[-285.35269165 299.99511719]
[-281.66043091 285.44900513]
[-276.86547852 271.22817993]
[-270.99603271 257.41616821]
[-264.08648682 244.09396362]
[-256.17739868 231.33978271]
[-247.31518555 219.22846985]
[-237.55186462 207.83108521]
[-226.94471741 197.21453857]
[-215.55599976 187.44110107]
[-203.45256042 178.56814575]
[-190.70539856 170.64773560]
[-177.38934326 163.72636414]
[-163.58253479 157.84465027]
[-149.36598206 153.03709412]
[-134.82313538 149.33190918]
[-120.03933716 146.75085449]
[-105.10132599 145.30908203]
[-90.09678650 145.01501465]
[-75.11376190 145.87042236]
[-60.24018097 147.87025452]
[-45.56333160 151.00279236]
[-31.16934013 155.24964905]
[-17.14268112 160.58590698]
[-3.56566644 166.98023987]
[9.48202515 174.39511108]
[21.92382431 182.78704834]
[31.23870659 171.02978516]
[40.55358887 159.27253723]
[40.90333939 154.50947571]
[44.24892426 149.91555786]
[50.32503891 147.30934143]
[59.98585129 135.83464050]
[69.64665985 124.35994720]
[79.30747223 112.88524628]
[88.96828461 101.41054535]
[73.96961975 101.61066437]
[63.12670898 91.24575806]
[62.65087128 76.25330353]
[72.81468201 65.22167206]
[87.79585266 64.47027588]
[99.01248169 74.42955017]
[100.03948212 89.39347076]
[110.68548584 78.82642365]
[121.33149719 68.25937653]
[131.97750854 57.69232941]
[135.86361694 49.42576981]
[142.86155701 47.04867935]
[153.66371155 36.64130783]
[164.46588135 26.23393250]
[175.26803589 15.82656002]
[186.07019043 5.41918659]
[196.87234497 -4.98818636]
[187.25779724 -16.51007462]
[178.48973083 -28.68850327]
[170.61279297 -41.46141434]
[163.66714478 -54.76371384]
[157.68817139 -68.52761841]
[152.70634460 -82.68299866]
[148.74705505 -97.15770721]
[145.83045959 -111.87799072]
[143.97145081 -126.76883698]
[143.17947388 -141.75436401]
[143.45857239 -156.75820923]
[144.80732727 -171.70391846]
[147.21887207 -186.51531982]
[150.68090820 -201.11695862]
[155.17578125 -215.43440247]
[160.68061829 -229.39469910]
[167.16735840 -242.92672729]
[174.60292053 -255.96150208]
[182.94944763 -268.43261719]
[192.16438293 -280.27651978]
[202.20077515 -291.43286133]
[213.00749207 -301.84478760]
[224.52946472 -311.45925903]
[236.70794678 -320.22723389]
[249.48092651 -328.10406494]
[262.78326416 -335.04962158]
[276.54724121 -341.02847290]
[290.70263672 -346.01019287]
[305.17739868 -349.96939087]
[319.89770508 -352.88586426]
[334.78854370 -354.74475098]
[349.77407837 -355.53662109]
[364.77792358 -355.25741577]
[379.72363281 -353.90853882]
[394.53500366 -351.49688721]
[409.13662720 -348.03472900]
[423.45404053 -343.53973389]
[437.41427612 -338.03479004]
[450.94625854 -331.54797363]
[463.98098755 -324.11230469]
[476.45202637 -315.76568604]
[488.29586792 -306.55065918]
[499.45214844 -296.51416016]
[509.86398315 -285.70736694]
[519.47833252 -274.18533325]
[528.24621582 -262.00677490]
[536.12298584 -249.23374939]
[543.06842041 -235.93133545]
[549.04718018 -222.16734314]
[554.02880859 -208.01188660]
[557.98785400 -193.53710938]
[560.90423584 -178.81678772]
[562.76300049 -163.92590332]
[563.55474854 -148.94036865]
[563.27545166 -133.93652344]
[561.92645264 -118.99084473]
[559.51470947 -104.17947388]
[556.05242920 -89.57789612]
[551.55731201 -75.26052094]
[546.05224609 -61.30030441]
[539.56530762 -47.76838303]
[532.12957764 -34.73371506]
[523.78283691 -22.26272011]
[514.56774902 -10.41895294]
[504.53115845 0.73723519]
[493.72427368 11.14899445]
[482.20217896 20.76326752]
[470.02352905 29.53106308]
[457.25045776 37.40769958]
[443.94799805 44.35304260]
[430.18395996 50.33169937]
[416.02844238 55.31320190]
[401.55364990 59.27216339]
[386.83331299 62.18841553]
[371.94241333 64.04709625]
[356.95687866 64.83872223]
[341.95303345 64.55928040]
[327.00735474 63.21017838]
[312.19601440 60.79829788]
[297.59445190 57.33592606]
[283.27709961 52.84070969]
[269.31692505 47.33555603]
[255.78506470 40.84851456]
[242.75045776 33.41264343]
[230.27952576 25.06583595]
[218.43582153 15.85062504]
[207.27970886 5.81396961]
[196.47755432 16.22134209]
[185.67539978 26.62871552]
[174.87324524 37.03609085]
[164.07109070 47.44346237]
[153.26893616 57.85083771]
[142.54455566 68.33834076]
[131.89854431 78.90538788]
[121.25254059 89.47243500]
[110.60652924 100.03948212]
[100.44297791 111.07135773]
[90.78217316 122.54605865]
[81.12136078 134.02075195]
[71.46054840 145.49545288]
[61.79973984 156.97015381]
[52.31084061 168.58741760]
[42.99596024 180.34466553]
[33.68107605 192.10192871]
[44.69641876 202.29432678]
[54.89921570 213.30003357]
[64.22959137 225.05447388]
[72.63278961 237.48866272]
[80.05949402 250.52963257]
[86.46612549 264.10083008]
[91.81509399 278.12265015]
[96.07499695 292.51278687]
[99.22083282 307.18679810]
[101.23415375 322.05856323]
[102.10314178 337.04080200]
[101.82268524 352.04559326]
[100.39443970 366.98489380]
[97.82678986 381.77105713]
[94.13479614 396.31726074]
[89.34012604 410.53814697]
[83.47092438 424.35028076]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[63 193]
[64 192]
[65 191]
[68 190]
[69 189]
[70 188]
[71 187]
[72 186]
[79 185]
[80 184]
[81 183]
[82 182]
[84 181]
[85 180]
[86 179]
[87 178]
[88 177]
[89 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
