%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[77.61436462 540.72949219]
[63.30183792 536.20220947]
[49.48447037 530.33489990]
[36.28740311 523.18072510]
[23.83014870 514.80450439]
[12.22552490 505.28204346]
[1.57862747 494.69958496]
[-8.01412106 483.15298462]
[-16.46584511 470.74679565]
[-23.70000267 457.59341431]
[-29.65107727 443.81192017]
[-34.26517868 429.52716064]
[-37.50051498 414.86843872]
[-39.32778549 399.96859741]
[-39.73044586 384.96249390]
[-38.70484543 369.98608398]
[-36.26027679 355.17498779]
[-32.41887283 340.66333008]
[-27.21542931 326.58251953]
[-20.69706535 313.06011963]
[-12.92281723 300.21853638]
[-3.96308923 288.17413330]
[6.10097551 277.03591919]
[17.17823410 266.90484619]
[29.16836548 257.87258911]
[41.96278381 250.02098083]
[55.44561386 243.42114258]
[69.49475861 238.13281250]
[83.98297882 234.20391846]
[98.77906036 231.67001343]
[97.66340637 216.71156311]
[96.54776001 201.75309753]
[95.43211365 186.79464722]
[93.01332855 184.22914124]
[91.71701050 180.36460876]
[92.14015198 175.74137878]
[94.61589050 171.14596558]
[94.16928864 156.15261841]
[93.72267914 141.15927124]
[85.60987091 128.66801453]
[92.93286133 114.64358521]
[83.75152588 100.60508728]
[91.86329651 85.92259979]
[91.19351196 70.93756104]
[82.84771729 57.49664688]
[90.00899506 44.43658066]
[89.33921051 29.45153999]
[88.66942596 14.46650124]
[87.99964142 -0.51853746]
[87.32985687 -15.50357628]
[86.66007233 -30.48861504]
[85.99028778 -45.47365570]
[85.32050323 -60.45869446]
[82.65470886 -75.21990967]
[78.04069519 -89.49264526]
[66.43359375 -100.24372101]
[69.88083649 -114.73391724]
[65.26683044 -129.00665283]
[60.65282059 -143.27938843]
[56.03881073 -157.55212402]
[51.42480087 -171.82485962]
[46.81079102 -186.09757996]
[42.19678497 -200.37031555]
[37.58277512 -214.64305115]
[22.90935707 -211.46981812]
[7.99290037 -209.77336121]
[-7.01834488 -209.57057190]
[-21.97518730 -210.86343384]
[-36.72897339 -213.63911438]
[-51.13306808 -217.87002563]
[-65.04431915 -223.51411438]
[-78.32446289 -230.51528931]
[-90.84150696 -238.80395508]
[-102.47106171 -248.29776001]
[-113.09752655 -258.90231323]
[-122.61530304 -270.51226807]
[-130.92977905 -283.01217651]
[-137.95834351 -296.27783203]
[-143.63113403 -310.17742920]
[-147.89175415 -324.57275391]
[-150.69787598 -339.32077026]
[-152.02159119 -354.27493286]
[-151.84977722 -369.28656006]
[-150.18411255 -384.20648193]
[-147.04115295 -398.88641357]
[-142.45214844 -413.18045044]
[-136.46270752 -426.94653320]
[-129.13233948 -440.04785156]
[-120.53392792 -452.35418701]
[-110.75289917 -463.74322510]
[-99.88648987 -474.10177612]
[-88.04267883 -483.32690430]
[-75.33919525 -491.32690430]
[-61.90227890 -498.02227783]
[-47.86548615 -503.34646606]
[-33.36832047 -507.24658203]
[-18.55486679 -509.68380737]
[-3.57235050 -510.63400269]
[11.43031979 -510.08764648]
[26.30403900 -508.05023193]
[40.90097809 -504.54196167]
[55.07606506 -499.59771729]
[68.68841553 -493.26666260]
[81.60274506 -485.61166382]
[93.69069672 -476.70886230]
[104.83213806 -466.64669800]
[114.91632843 -455.52520752]
[123.84304810 -443.45489502]
[131.52357483 -430.55575562]
[137.88159180 -416.95596313]
[142.85388184 -402.79067993]
[146.39103699 -388.20071411]
[148.45790100 -373.33105469]
[149.03393555 -358.32949829]
[148.11341858 -343.34512329]
[145.70550537 -328.52688599]
[141.83410645 -314.02203369]
[136.53770447 -299.97473145]
[129.86894226 -286.52459717]
[121.89411163 -273.80526733]
[112.69245148 -261.94323730]
[102.35543060 -251.05633545]
[90.98577881 -241.25279236]
[78.69648743 -232.63002014]
[65.60971069 -225.27374268]
[51.85550690 -219.25706482]
[56.46951675 -204.98432922]
[61.08352661 -190.71159363]
[65.69753265 -176.43885803]
[70.31154633 -162.16612244]
[74.92555237 -147.89340210]
[79.53956604 -133.62066650]
[84.15357208 -119.34793091]
[95.43064880 -109.61772919]
[92.31343079 -94.10665131]
[96.92743683 -79.83391571]
[99.51241302 -94.60950470]
[106.48116302 -107.89244080]
[117.16948700 -118.41668701]
[130.55863953 -125.17913818]
[145.37243652 -127.53524017]
[160.19894409 -125.26042175]
[173.62496948 -118.57150269]
[184.37086487 -108.10604095]
[191.41235352 -94.86151886]
[194.07832336 -80.10033417]
[192.11465454 -65.22942352]
[185.70852661 -51.66618729]
[175.47050476 -40.70338440]
[162.37643433 -33.38592529]
[147.67434692 -30.41126060]
[132.76554871 -32.06291580]
[119.07106781 -38.18346786]
[107.89616394 -48.18954086]
[100.30554199 -61.12847900]
[100.97532654 -46.14344025]
[101.64511108 -31.15839958]
[102.31489563 -16.17336082]
[102.98468018 -1.18832254]
[103.65446472 13.79671574]
[104.32424927 28.78175545]
[104.99403381 43.76679230]
[113.29192352 56.13588333]
[106.17855072 70.26777649]
[106.84833527 85.25281525]
[114.95397186 93.61582184]
[115.38739014 105.25426483]
[107.92620850 114.19698334]
[116.07096100 127.76066589]
[108.71603394 140.71266174]
[109.16263580 155.70600891]
[109.60924530 170.69935608]
[110.39056396 185.67900085]
[111.50621796 200.63745117]
[112.62186432 215.59590149]
[113.73751068 230.55436707]
[128.74577332 230.86535645]
[143.65652466 232.60159302]
[158.33470154 235.74734497]
[172.64739990 240.27412415]
[186.46496582 246.14091492]
[199.66230774 253.29460144]
[212.11985779 261.67037964]
[223.72483826 271.19244385]
[234.37211609 281.77450562]
[243.96528625 293.32077026]
[252.41746521 305.72662354]
[259.65209961 318.87976074]
[265.60366821 332.66101074]
[270.21829224 346.94561768]
[273.45416260 361.60421753]
[275.28198242 376.50399780]
[275.68518066 391.51007080]
[274.66012573 406.48651123]
[272.21609497 421.29772949]
[268.37524414 435.80950928]
[263.17230225 449.89050293]
[256.65441895 463.41314697]
[248.88064575 476.25500488]
[239.92135620 488.29974365]
[229.85769653 499.43832397]
[218.78080750 509.56982422]
[206.79101562 518.60247803]
[193.99687195 526.45458984]
[180.51428223 533.05493164]
[166.46533203 538.34375000]
[151.97726440 542.27319336]
[137.18127441 544.80761719]
[122.21136475 545.92413330]
[107.20310974 545.61254883]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 176]
[31 175]
[32 174]
[33 173]
[37 172]
[38 171]
[39 170]
[41 168]
[43 165]
[44 164]
[46 162]
[47 161]
[48 160]
[49 159]
[50 158]
[51 157]
[52 156]
[53 155]
[54 136]
[55 135]
[57 133]
[58 132]
[59 131]
[60 130]
[61 129]
[62 128]
[63 127]
[64 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
