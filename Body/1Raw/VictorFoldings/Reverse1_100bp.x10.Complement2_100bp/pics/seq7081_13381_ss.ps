%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[55.50162125 570.53631592]
[40.71023941 567.84100342]
[26.56428146 562.74768066]
[13.44966221 555.39538574]
[1.72415781 545.98461914]
[-8.29235268 534.77215576]
[-16.32661057 522.06384277]
[-22.15943527 508.20645142]
[-25.63170433 493.57794189]
[-26.64869118 478.57742310]
[-25.18265152 463.61410522]
[-21.27357864 449.09622192]
[-15.02811813 435.41979980]
[-6.61664772 422.95797729]
[3.73135996 412.05072021]
[15.73360443 402.99554443]
[29.06265640 396.03952026]
[43.35488510 391.37240601]
[58.22039413 389.12152100]
[58.44372177 374.12316895]
[58.66704941 359.12484741]
[51.12009811 346.28378296]
[59.06200409 332.60034180]
[59.28533173 317.60202026]
[59.50865936 302.60366821]
[50.01829910 314.21972656]
[35.78767776 318.96203613]
[21.22631264 315.36111450]
[10.84619713 304.53277588]
[7.86372423 289.83227539]
[13.20304680 275.81472778]
[25.20971680 266.82360840]
[40.16333771 265.64495850]
[53.43036652 272.64395142]
[60.89992905 285.65213013]
[63.12504578 270.81811523]
[65.35016632 255.98405457]
[67.57527924 241.15000916]
[69.80039978 226.31596375]
[67.73243713 222.01101685]
[68.34686279 216.36128235]
[72.31895447 211.07601929]
[74.98474884 196.31480408]
[77.65054321 181.55358887]
[68.97335052 169.50195312]
[71.46656799 154.49400330]
[84.16626740 145.47427368]
[86.83206177 130.71305847]
[89.49786377 115.95184326]
[81.32261658 103.98892212]
[83.89768982 89.73005676]
[95.74092102 81.38236237]
[98.40671539 66.62113953]
[100.74220276 51.80407333]
[102.74621582 36.93854523]
[104.75022888 22.07301903]
[106.75424194 7.20749044]
[100.93002319 -7.50267649]
[110.29833221 -19.08214188]
[112.30235291 -33.94766998]
[114.30636597 -48.81319809]
[116.31037903 -63.67872620]
[104.78536987 -70.14213562]
[96.16358185 -80.11326599]
[91.45481873 -92.39110565]
[91.19927979 -105.50649261]
[95.40567017 -117.89795685]
[103.55278015 -128.09756470]
[114.65393066 -134.90483093]
[127.37644958 -137.52804565]
[129.82217407 -152.32731628]
[132.26791382 -167.12658691]
[134.71363831 -181.92585754]
[137.04911804 -196.74291992]
[139.27424622 -211.57696533]
[141.49935913 -226.41101074]
[126.91446686 -229.95886230]
[112.70632172 -234.79981995]
[98.98932648 -240.89491272]
[85.87390900 -248.19506836]
[73.46568298 -256.64147949]
[61.86455154 -266.16619873]
[51.16391754 -276.69247437]
[41.44993973 -288.13558960]
[32.80083084 -300.40341187]
[25.28623199 -313.39712524]
[18.96664429 -327.01217651]
[13.89295101 -341.13888550]
[10.10600471 -355.66351318]
[7.63629532 -370.46914673]
[6.50370789 -385.43655396]
[6.71736193 -400.44525146]
[8.27553654 -415.37435913]
[11.16568661 -430.10369873]
[15.36454201 -444.51464844]
[20.83829498 -458.49121094]
[27.54287148 -471.92083740]
[35.42429352 -484.69540405]
[44.41909790 -496.71203613]
[54.45486832 -507.87402344]
[65.45079803 -518.09143066]
[77.31835175 -527.28204346]
[89.96197510 -535.37188721]
[103.27986908 -542.29571533]
[117.16481018 -547.99792480]
[131.50498962 -552.43249512]
[146.18496704 -555.56372070]
[161.08651733 -557.36645508]
[176.08967590 -557.82617188]
[191.07365417 -556.93914795]
[205.91778564 -554.71252441]
[220.50256348 -551.16418457]
[234.71057129 -546.32281494]
[248.42738342 -540.22729492]
[261.54257202 -532.92675781]
[273.95053101 -524.47991943]
[285.55139160 -514.95489502]
[296.25167847 -504.42825317]
[305.96533203 -492.98486328]
[314.61404419 -480.71676636]
[322.12826538 -467.72280884]
[328.44741821 -454.10760498]
[333.52069092 -439.98074341]
[337.30718994 -425.45596313]
[339.77645874 -410.65026855]
[340.90856934 -395.68283081]
[340.69445801 -380.67413330]
[339.13583374 -365.74508667]
[336.24523926 -351.01583862]
[332.04592896 -336.60501099]
[326.57177734 -322.62860107]
[319.86679077 -309.19918823]
[311.98495483 -296.42486572]
[302.98980713 -284.40847778]
[292.95367432 -273.24682617]
[281.95742798 -263.02972412]
[270.08959961 -253.83947754]
[257.44573975 -245.75006104]
[244.12762451 -238.82659912]
[230.24252319 -233.12486267]
[215.90219116 -228.69073486]
[201.22213745 -225.55992126]
[186.32052612 -223.75764465]
[171.31735229 -223.29840088]
[156.33340454 -224.18588257]
[154.10827637 -209.35185242]
[151.88316345 -194.51780701]
[153.99966431 -187.43667603]
[149.51290894 -179.48011780]
[147.06718445 -164.68084717]
[144.62144470 -149.88157654]
[142.17572021 -135.08230591]
[156.27462769 -125.77204895]
[164.91381836 -111.18787384]
[166.31355286 -94.23930359]
[160.14399719 -78.33219147]
[147.60128784 -66.68437958]
[131.17590332 -61.67471313]
[129.17189026 -46.80918503]
[127.16787720 -31.94365501]
[125.16386414 -17.07812691]
[131.13142395 -3.43124223]
[121.61977386 9.21150398]
[119.61576080 24.07703209]
[117.61174774 38.94256210]
[115.60773468 53.80809021]
[117.44324493 56.81860733]
[117.91178131 60.86774826]
[116.54106140 65.30333710]
[113.16793823 69.28694153]
[110.50213623 84.04815674]
[118.67738342 96.01107788]
[116.10231018 110.26994324]
[104.25907898 118.61763763]
[101.59328461 133.37886047]
[98.92749023 148.14007568]
[107.67003632 161.03215027]
[104.75626373 175.96414185]
[92.41175842 184.21937561]
[89.74596405 198.98060608]
[87.08016968 213.74182129]
[84.63444519 228.54109192]
[82.40932465 243.37513733]
[80.18421173 258.20916748]
[77.95909119 273.04321289]
[75.73397064 287.87725830]
[74.50699615 302.82699585]
[74.28366852 317.82534790]
[74.06034088 332.82366943]
[81.59132385 346.73751831]
[73.66539001 359.34817505]
[73.44206238 374.34649658]
[73.21873474 389.34484863]
[88.01063538 392.03735352]
[102.15756989 397.12792969]
[115.27360535 404.47772217]
[127.00092316 413.88623047]
[137.01959229 425.09674072]
[145.05630493 437.80349731]
[150.89179993 451.65979004]
[154.36688232 466.28762817]
[155.38676453 481.28796387]
[153.92359924 496.25152588]
[150.01733398 510.77017212]
[143.77450562 524.44781494]
[135.36543274 536.91125488]
[125.01952362 547.82049561]
[113.01902771 556.87799072]
[99.69131470 563.83654785]
[85.39998627 568.50640869]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 193]
[20 192]
[21 191]
[23 189]
[24 188]
[25 187]
[35 186]
[36 185]
[37 184]
[38 183]
[39 182]
[42 181]
[43 180]
[44 179]
[47 176]
[48 175]
[49 174]
[52 171]
[53 170]
[54 166]
[55 165]
[56 164]
[57 163]
[59 161]
[60 160]
[61 159]
[62 158]
[70 152]
[71 151]
[72 150]
[73 149]
[74 147]
[75 146]
[76 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
