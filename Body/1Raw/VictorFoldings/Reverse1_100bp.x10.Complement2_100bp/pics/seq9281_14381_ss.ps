%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[195.82719421 375.60983276]
[201.18087769 361.58123779]
[208.04536438 348.22674561]
[216.33729553 335.70849609]
[225.95605469 324.17840576]
[236.78485107 313.77645874]
[227.64604187 301.88183594]
[218.50723267 289.98721313]
[204.61761475 284.60876465]
[202.34530640 268.95159912]
[193.20649719 257.05694580]
[188.69915771 271.36373901]
[174.75904846 276.90209961]
[161.66232300 269.58941650]
[159.06338501 254.81626892]
[168.87808228 243.47291565]
[183.86990356 243.92047119]
[175.64109802 231.37907410]
[167.41229248 218.83767700]
[153.96116638 212.44107056]
[152.85968018 196.65824890]
[144.63087463 184.11685181]
[138.33320618 180.24887085]
[136.37452698 171.32690430]
[123.02013397 164.73074341]
[122.15373993 148.93327332]
[114.11257172 136.27075195]
[106.07139587 123.60823059]
[98.03022766 110.94570160]
[93.71386719 125.31125641]
[80.56964874 132.53825378]
[66.12716675 128.48674011]
[58.65973663 115.47760010]
[62.44504166 100.96307373]
[75.31468201 93.25773621]
[89.89557648 96.77499390]
[83.01616669 83.44556427]
[76.13675690 70.11613464]
[69.25733948 56.78670502]
[62.37792969 43.45727539]
[55.49851608 30.12784576]
[51.76342773 27.91355515]
[49.18642044 24.92632103]
[47.86828232 21.62512207]
[47.75037766 18.45452118]
[48.63318253 15.79392147]
[42.55934906 2.07865453]
[28.08985138 -3.68948340]
[22.12549973 -17.68523788]
[27.71370888 -31.44414520]
[21.63987350 -45.15941238]
[15.56604004 -58.87467957]
[9.49220657 -72.58994293]
[3.41837263 -86.30521393]
[-2.65546131 -100.02047729]
[-8.72929573 -113.73574829]
[-21.39190102 -123.22093964]
[-19.47084808 -137.99114990]
[-24.57796669 -142.18981934]
[-26.50825500 -147.53500366]
[-25.51456833 -152.20637512]
[-31.17735672 -166.09638977]
[-36.84014130 -179.98641968]
[-42.50292969 -193.87644958]
[-48.16571426 -207.76647949]
[-50.34340286 -192.92539978]
[-57.96868134 -180.00814819]
[-69.91038513 -170.93093872]
[-84.39703369 -167.04032898]
[-99.27962494 -168.91343689]
[-112.35041046 -176.27241516]
[-121.67041016 -188.02561951]
[-125.85707092 -202.42950439]
[-124.28931427 -217.34735107]
[-117.19971466 -230.56617737]
[-105.63996887 -240.12506104]
[-91.32490540 -244.60600281]
[-76.37805939 -243.34426880]
[-63.01672745 -236.52702332]
[-53.22391891 -225.16725159]
[-55.88971329 -239.92846680]
[-58.55550766 -254.68968201]
[-61.22130203 -269.45089722]
[-63.88710022 -284.21212769]
[-66.55289459 -298.97332764]
[-70.52498627 -304.25860596]
[-71.13941193 -309.90832520]
[-69.07144928 -314.21328735]
[-71.29656219 -329.04733276]
[-86.29017639 -330.73672485]
[-100.33528900 -336.25009155]
[-112.47428894 -345.21151733]
[-121.87951660 -357.00997925]
[-127.90970612 -370.84109497]
[-130.15371704 -385.76177979]
[-128.45852661 -400.75473022]
[-122.93974304 -414.79769897]
[-113.97363281 -426.93325806]
[-102.17152405 -436.33392334]
[-88.33810425 -442.35876465]
[-73.41654968 -444.59701538]
[-58.42424774 -442.89602661]
[-44.38339615 -437.37182617]
[-32.25131989 -428.40103149]
[-22.85520744 -416.59530640]
[-16.83570099 -402.75955200]
[-14.60321808 -387.83712769]
[-16.30997658 -372.84548950]
[-21.83960533 -358.80676270]
[-30.81508255 -346.67816162]
[-42.62445068 -337.28662109]
[-56.46252060 -331.27243042]
[-54.23740387 -316.43841553]
[-51.79167557 -301.63912964]
[-49.12588120 -286.87789917]
[-46.46008682 -272.11669922]
[-43.79429245 -257.35546875]
[-41.12849426 -242.59426880]
[-38.46269989 -227.83303833]
[-34.27568817 -213.42926025]
[-28.61290169 -199.53923035]
[-22.95011520 -185.64921570]
[-17.28732872 -171.75918579]
[-11.62454224 -157.86915588]
[-5.75558138 -144.06497192]
[6.47258329 -135.56079102]
[4.98597145 -119.80957794]
[11.05980492 -106.09431458]
[17.13363838 -92.37904358]
[23.20747375 -78.66378021]
[29.28130722 -64.94850922]
[35.35514069 -51.23324585]
[41.42897415 -37.51797867]
[55.37290192 -32.40892029]
[61.72801208 -18.58621216]
[56.27461624 -3.99517965]
[62.34844971 9.72008705]
[68.82794189 23.24843216]
[75.70735931 36.57786179]
[82.58676910 49.90729141]
[89.46618652 63.23672104]
[96.34559631 76.56614685]
[103.22500610 89.89557648]
[110.69274902 102.90453339]
[118.73392487 115.56705475]
[126.77509308 128.22958374]
[134.81626892 140.89210510]
[148.74581909 148.39398193]
[149.03704834 163.28573608]
[157.17227173 175.88804626]
[165.40107727 188.42944336]
[179.44078064 195.72309875]
[179.95368958 210.60887146]
[188.18249512 223.15026855]
[196.41130066 235.69166565]
[205.10113525 247.91815186]
[214.23992920 259.81277466]
[228.78323364 266.04199219]
[230.40187073 280.84838867]
[239.54067993 292.74304199]
[248.67947388 304.63766479]
[261.52001953 296.85412598]
[275.13891602 290.53042603]
[289.37081909 285.74334717]
[304.04296875 282.55096436]
[318.97723389 280.99203491]
[333.99240112 281.08547974]
[348.90612793 282.83020020]
[363.53738403 286.20498657]
[377.70858765 291.16888428]
[391.24771118 297.66162109]
[403.99035645 305.60437012]
[415.78192139 314.90075684]
[426.47918701 325.43792725]
[435.95233154 337.08792114]
[444.08636475 349.70935059]
[450.78256226 363.14901733]
[455.95959473 377.24374390]
[459.55462646 391.82244873]
[461.52404785 406.70816040]
[461.84396362 421.72018433]
[460.51043701 436.67630005]
[457.53967285 451.39492798]
[452.96774292 465.69738770]
[446.85015869 479.41009521]
[439.26113892 492.36657715]
[430.29287720 504.40954590]
[420.05416870 515.39282227]
[408.66934204 525.18304443]
[396.27658081 533.66143799]
[383.02633667 540.72503662]
[369.07946777 546.28808594]
[354.60522461 550.28308105]
[339.77935791 552.66149902]
[324.78182983 553.39447021]
[309.79470825 552.47314453]
[294.99987793 549.90869141]
[280.57699585 545.73217773]
[266.70108032 539.99438477]
[253.54061890 532.76489258]
[241.25534058 524.13153076]
[229.99440002 514.19903564]
[219.89447021 503.08801270]
[211.07818604 490.93331909]
[203.65254211 477.88253784]
[197.70768738 464.09408569]
[193.31578064 449.73529053]
[190.53015137 434.98052979]
[189.38459778 420.00885010]
[189.89303589 405.00201416]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 161]
[7 160]
[8 159]
[10 157]
[11 156]
[17 155]
[18 154]
[19 153]
[21 151]
[22 150]
[24 149]
[26 147]
[27 146]
[28 145]
[29 144]
[36 143]
[37 142]
[38 141]
[39 140]
[40 139]
[41 138]
[46 137]
[47 136]
[50 133]
[51 132]
[52 131]
[53 130]
[54 129]
[55 128]
[56 127]
[58 125]
[61 124]
[62 123]
[63 122]
[64 121]
[65 120]
[80 119]
[81 118]
[82 117]
[83 116]
[84 115]
[85 114]
[88 113]
[89 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
