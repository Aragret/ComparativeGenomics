%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxCCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGA\
) } def
/len { sequence length } bind def

/coor [
[148.06045532 521.70922852]
[157.97099304 509.09332275]
[157.52438354 494.09997559]
[157.07778931 479.10659790]
[154.27766418 475.23770142]
[153.87823486 469.56872559]
[156.84780884 463.66168213]
[156.84780884 448.66168213]
[156.84780884 433.66168213]
[156.84780884 418.66168213]
[156.84780884 403.66168213]
[156.84780884 388.66168213]
[156.84780884 373.66168213]
[154.62268066 358.82763672]
[150.22169495 344.48776245]
[145.82069397 330.14791870]
[136.59382629 341.97439575]
[121.59708405 342.28692627]
[111.88549805 330.85516357]
[114.61810303 316.10617065]
[127.78050995 308.91235352]
[141.66877747 314.57550049]
[138.34651184 299.94802856]
[135.02424622 285.32058716]
[131.70199585 270.69311523]
[128.37973022 256.06564331]
[116.62325287 250.79170227]
[109.95137787 239.54145813]
[110.99263000 226.30792236]
[119.59024811 215.93992615]
[116.48613739 201.26461792]
[113.38202667 186.58930969]
[110.27791595 171.91401672]
[106.95565796 157.28654480]
[103.30757141 142.73693848]
[99.55126953 128.21487427]
[95.79496765 113.69281006]
[86.13245392 103.58700562]
[89.68296814 90.06348419]
[85.92666626 75.54142761]
[82.17036438 61.01936722]
[68.83498383 52.96918869]
[65.23243713 38.18824768]
[72.98923492 25.52461052]
[69.23293304 11.00255108]
[58.28632355 -0.42033511]
[62.58992767 -14.67965698]
[58.61783218 -29.14418030]
[54.43082047 -43.54796219]
[50.24380875 -57.95174408]
[46.05679703 -72.35552979]
[41.86978912 -86.75930786]
[37.68277740 -101.16309357]
[33.49576569 -115.56687164]
[29.30875397 -129.97065735]
[18.02689552 -141.06256104]
[21.90403938 -155.44369507]
[10.62218285 -166.53558350]
[14.49932671 -180.91671753]
[10.31231499 -195.32051086]
[6.12530375 -209.72428894]
[1.93829274 -224.12806702]
[-14.85809326 -225.71969604]
[-29.72233772 -233.62329102]
[-40.38740540 -246.60142517]
[-45.23901749 -262.64523315]
[-43.55993652 -279.28524780]
[-35.63584137 -293.97167969]
[-22.70721817 -304.46484375]
[-27.32122803 -318.73757935]
[-31.93523598 -333.01031494]
[-36.54924774 -347.28302002]
[-39.87331390 -350.07669067]
[-41.92877197 -353.44412231]
[-42.69101715 -356.91607666]
[-42.29038239 -360.06347656]
[-40.98558426 -362.54452515]
[-44.74188232 -377.06658936]
[-48.49818420 -391.58865356]
[-63.48268890 -390.33459473]
[-78.46357727 -391.63113403]
[-93.00981903 -395.44097900]
[-106.70288849 -401.65447998]
[-119.14881134 -410.09289551]
[-129.98948669 -420.51345825]
[-138.91302490 -432.61627197]
[-145.66265869 -446.05319214]
[-150.04420471 -460.43756104]
[-151.93156433 -475.35552979]
[-151.27047729 -490.37786865]
[-148.07994080 -505.07238770]
[-142.45175171 -519.01623535]
[-134.54785156 -531.80828857]
[-124.59564972 -543.08044434]
[-112.88148499 -552.50842285]
[-99.74240875 -559.82092285]
[-85.55644989 -564.80755615]
[-70.73176575 -567.32489014]
[-55.69490051 -567.30041504]
[-40.87848663 -564.73486328]
[-26.70882225 -559.70214844]
[-13.59360123 -552.34692383]
[-1.91017270 -542.88092041]
[8.00530815 -531.57641602]
[15.86755276 -518.75872803]
[21.45034790 -504.79663086]
[24.59306717 -490.09182739]
[25.20528793 -475.06741333]
[23.26939392 -460.15563965]
[18.84108734 -445.78561401]
[12.04777527 -432.37072754]
[3.08491850 -420.29699707]
[-7.78960514 -409.91177368]
[-20.26291466 -401.51388550]
[-33.97612381 -395.34494019]
[-30.21982384 -380.82287598]
[-26.46352386 -366.30081177]
[-22.27651215 -351.89703369]
[-17.66250420 -337.62429810]
[-13.04849434 -323.35156250]
[-8.43448544 -309.07885742]
[4.82252502 -308.86611938]
[17.39048576 -304.57144165]
[28.04179955 -296.59939575]
[35.73151016 -285.71459961]
[39.69982910 -272.96823120]
[39.54716492 -259.59646606]
[35.27434540 -246.90083313]
[27.28387451 -236.12123108]
[16.34207535 -228.31507874]
[20.52908516 -213.91130066]
[24.71609688 -199.50752258]
[28.90310860 -185.10372925]
[39.88548279 -175.04208374]
[36.30782318 -159.63070679]
[47.29019547 -149.56906128]
[43.71253586 -134.15766907]
[47.89954758 -119.75388336]
[52.08655930 -105.35010529]
[56.27357101 -90.94631958]
[60.46058273 -76.54254150]
[64.64759064 -62.13875580]
[68.83460236 -47.73497391]
[73.02161407 -33.33119202]
[76.70136261 -30.28676987]
[78.50769043 -24.89842987]
[77.11198425 -18.43595695]
[87.78992462 -8.05178642]
[83.75498962 7.24625063]
[87.51129150 21.76831055]
[100.43560028 29.08253670]
[104.45189667 43.75646210]
[96.69242859 57.26306915]
[100.44873047 71.78512573]
[104.20503235 86.30718994]
[113.86754608 96.41299438]
[110.31703186 109.93651581]
[114.07333374 124.45857239]
[117.82963562 138.98063660]
[123.00834656 146.50517273]
[121.53203583 153.74688721]
[125.81166840 158.78634644]
[126.76128387 164.38949585]
[124.95322418 168.80990601]
[128.05732727 183.48519897]
[131.16143799 198.16050720]
[134.26554871 212.83581543]
[149.09956360 222.10787964]
[152.56980896 238.90884399]
[143.00720215 252.74339294]
[146.32945251 267.37084961]
[149.65171814 281.99832153]
[152.97396851 296.62576294]
[156.29623413 311.25323486]
[160.16053772 325.74691772]
[164.56153870 340.08679199]
[168.96253967 354.42663574]
[171.57536316 339.65594482]
[178.19209290 326.19418335]
[188.29089355 315.10299683]
[201.07533264 307.25708008]
[215.53715515 303.27520752]
[230.53587341 303.47140503]
[244.88861084 307.83016968]
[257.46347046 316.00778198]
[267.26870728 327.35931396]
[273.53106689 340.98953247]
[275.75665283 355.82351685]
[273.76995850 370.69137573]
[267.72769165 384.42056274]
[258.10632324 395.92837524]
[245.66467285 404.30722046]
[231.38391113 408.89630127]
[216.39028931 409.33377075]
[201.86627197 405.58505249]
[188.95727539 397.94580078]
[178.68136597 387.01852417]
[171.84780884 373.66168213]
[171.84780884 388.66168213]
[171.84780884 403.66168213]
[171.84780884 418.66168213]
[171.84780884 433.66168213]
[171.84780884 448.66168213]
[171.84780884 463.66168213]
[172.07113647 478.66000366]
[172.51773071 493.65335083]
[172.96434021 508.64669800]
[183.60823059 520.65032959]
[180.71791077 536.43090820]
[166.51058960 543.88287354]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 207]
[3 206]
[4 205]
[7 204]
[8 203]
[9 202]
[10 201]
[11 200]
[12 199]
[13 198]
[14 177]
[15 176]
[16 175]
[22 174]
[23 173]
[24 172]
[25 171]
[26 170]
[30 167]
[31 166]
[32 165]
[33 164]
[34 161]
[35 159]
[36 158]
[37 157]
[39 155]
[40 154]
[41 153]
[44 150]
[45 149]
[47 147]
[48 144]
[49 143]
[50 142]
[51 141]
[52 140]
[53 139]
[54 138]
[55 137]
[57 135]
[59 133]
[60 132]
[61 131]
[62 130]
[69 121]
[70 120]
[71 119]
[72 118]
[77 117]
[78 116]
[79 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
