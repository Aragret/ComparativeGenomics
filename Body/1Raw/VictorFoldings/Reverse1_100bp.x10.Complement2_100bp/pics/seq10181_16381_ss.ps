%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCAUUUUCCUCCCGUUAAAGAUCUAGUUUAUUAUUCUUCCAUUAUCGAUGAUUCUUCUUAAAAUACCUCUUUCCCUGCGCCCGCCCCCUAUAUCCCAGxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[-89.65295410 426.16723633]
[-83.76427460 439.98577881]
[-79.69106293 454.44390869]
[-77.50021362 469.30419922]
[-77.22769165 484.32266235]
[-78.87798309 499.25265503]
[-82.42398834 513.84899902]
[-87.80747223 527.87207031]
[-94.94004059 541.09161377]
[-103.70455933 553.29040527]
[-113.95711517 564.26824951]
[-125.52935028 573.84490967]
[-138.23124695 581.86303711]
[-151.85420227 588.19097900]
[-166.17454529 592.72491455]
[-180.95710754 595.39025879]
[-195.95915222 596.14337158]
[-210.93431091 594.97180176]
[-225.63671875 591.89477539]
[-239.82490540 586.96289062]
[-253.26591492 580.25714111]
[-265.73904419 571.88757324]
[-277.03942871 561.99163818]
[-286.98153687 550.73187256]
[-295.40213013 538.29309082]
[-302.16290283 524.87963867]
[-307.15283203 510.71179199]
[-310.28997803 496.02209473]
[-311.52285767 481.05184937]
[-310.83123779 466.04687500]
[-308.22640991 451.25350952]
[-303.75119019 436.91473389]
[-297.47906494 423.26596069]
[-289.51300049 410.53134155]
[-279.98385620 398.92001343]
[-269.04806519 388.62258911]
[-256.88522339 379.80816650]
[-243.69505310 372.62155151]
[-229.69415283 367.18069458]
[-215.11241150 363.57495117]
[-200.18930054 361.86352539]
[-185.16984558 362.07455444]
[-170.30070496 364.20452881]
[-155.82601929 368.21850586]
[-141.98350525 374.05053711]
[-129.00042725 381.60491943]
[-119.86163330 369.71026611]
[-110.72283173 357.81564331]
[-101.58403015 345.92102051]
[-92.44522858 334.02636719]
[-83.30641937 322.13174438]
[-74.16761780 310.23712158]
[-79.98517609 296.52502441]
[-78.14590454 281.64303589]
[-69.04438782 269.60025024]
[-55.04507828 263.69125366]
[-39.86871719 265.59527588]
[-30.72991371 253.70065308]
[-21.59111023 241.80601501]
[-21.31231689 237.03826904]
[-18.03549767 232.39506531]
[-11.99885845 229.69866943]
[-9.94008923 214.94703674]
[4.78222275 209.15357971]
[14.27112103 197.53631592]
[23.76001930 185.91905212]
[33.24891663 174.30178833]
[42.73781586 162.68452454]
[52.22671509 151.06726074]
[61.71561432 139.44999695]
[70.85441589 127.55536652]
[79.63501740 115.39391327]
[88.41561890 103.23245239]
[97.01418304 90.94161987]
[105.42880249 78.52412415]
[113.84342194 66.10662842]
[122.16536713 53.62683105]
[130.39418030 41.08543015]
[137.47128296 27.85990334]
[143.34024048 14.05572701]
[149.20919800 0.25155053]
[155.07815552 -13.55262661]
[160.94712830 -27.35680389]
[166.81608582 -41.16098022]
[171.43009949 -55.43371201]
[174.75234985 -70.06117249]
[178.07461548 -84.68863678]
[173.58599854 -99.85975647]
[183.95001221 -110.55724335]
[187.27227783 -125.18470001]
[190.59452820 -139.81216431]
[193.91679382 -154.43962097]
[197.23905945 -169.06707764]
[188.79675293 -179.56195068]
[187.95263672 -192.80950928]
[194.79127502 -203.95918274]
[206.62496948 -209.05751038]
[210.16464233 -223.63388062]
[213.70431519 -238.21026611]
[217.24398804 -252.78663635]
[203.75973511 -259.50396729]
[192.10862732 -269.05380249]
[182.87507629 -280.95712280]
[176.52226257 -294.61691284]
[173.36880493 -309.34793091]
[173.57290649 -324.41134644]
[177.12432861 -339.05154419]
[183.84490967 -352.53417969]
[193.39756775 -364.18295288]
[205.30314636 -373.41363525]
[218.96446228 -379.76312256]
[233.69625854 -382.91302490]
[248.75961304 -382.70526123]
[263.39895630 -379.15029907]
[276.87994385 -372.42645264]
[288.52642822 -362.87097168]
[297.75421143 -350.96316528]
[304.10040283 -337.30029297]
[307.24670410 -322.56774902]
[307.03530884 -307.50442505]
[303.47680664 -292.86596680]
[296.74969482 -279.38659668]
[287.19137573 -267.74243164]
[275.28134155 -258.51754761]
[261.61694336 -252.17465210]
[246.88362122 -249.03192139]
[231.82037354 -249.24696350]
[228.28070068 -234.67059326]
[224.74102783 -220.09420776]
[221.20135498 -205.51783752]
[230.55693054 -191.54243469]
[226.83692932 -174.79501343]
[211.86651611 -165.74482727]
[208.54425049 -151.11737061]
[205.22200012 -136.48989868]
[201.89973450 -121.86244202]
[198.57746887 -107.23498535]
[203.30372620 -93.11011505]
[192.70207214 -81.36637115]
[189.37980652 -66.73891449]
[186.05755615 -52.11145401]
[196.77680969 -62.60418320]
[210.95921326 -67.48882294]
[225.86633301 -65.82221985]
[238.61987305 -57.92617798]
[246.75729370 -45.32529068]
[248.70739746 -30.45259476]
[244.09365845 -16.17977524]
[233.80690002 -5.26268959]
[219.83335876 0.19074370]
[204.87107849 -0.87244791]
[191.80906677 -8.24697876]
[183.16937256 -20.50894165]
[180.62025452 -35.29201889]
[174.75129700 -21.48784256]
[168.88233948 -7.68366575]
[163.01338196 6.12051153]
[157.14442444 19.92468834]
[151.27545166 33.72886658]
[163.68884277 25.30819130]
[178.51356506 23.02180099]
[192.88720703 27.31116104]
[204.03442383 37.34806442]
[209.80288696 51.19453812]
[209.07878113 66.17704773]
[202.00192261 79.40270996]
[189.93873596 88.31784821]
[175.21846008 91.20109558]
[160.68331909 87.49574280]
[149.13983154 77.91722107]
[142.81686401 64.31501770]
[142.93557739 49.31423950]
[134.70677185 61.85564041]
[133.66563416 69.17259216]
[126.26091766 74.52124786]
[117.84629822 86.93874359]
[109.43167877 99.35623169]
[109.22961426 104.59771729]
[106.10521698 109.35287476]
[100.57707977 112.01306152]
[91.79647064 124.17451477]
[83.01586914 136.33596802]
[82.72894287 140.66859436]
[81.22908020 144.31756592]
[78.88014984 146.98550415]
[76.10520935 148.52378845]
[73.33287811 148.93890381]
[63.84397888 160.55616760]
[54.35507965 172.17343140]
[44.86618042 183.79069519]
[35.37728119 195.40794373]
[25.88838387 207.02520752]
[16.39948654 218.64247131]
[13.66200733 234.22505188]
[-0.38159534 239.18756104]
[-9.69647789 250.94480896]
[-18.83528137 262.83944702]
[-27.97408295 274.73406982]
[-22.22459793 288.90768433]
[-24.32762337 303.95672607]
[-33.61919022 315.85348511]
[-47.52500534 321.46459961]
[-62.27298737 319.37591553]
[-71.41178894 331.27053833]
[-80.55059052 343.16519165]
[-89.68939209 355.05981445]
[-98.82819366 366.95443726]
[-107.96700287 378.84909058]
[-117.10580444 390.74371338]
[-106.46173096 401.34237671]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 209]
[47 208]
[48 207]
[49 206]
[50 205]
[51 204]
[52 203]
[57 198]
[58 197]
[59 196]
[62 195]
[64 193]
[65 192]
[66 191]
[67 190]
[68 189]
[69 188]
[70 187]
[71 182]
[72 181]
[73 180]
[74 177]
[75 176]
[76 175]
[77 173]
[78 172]
[79 159]
[80 158]
[81 157]
[82 156]
[83 155]
[84 154]
[85 141]
[86 140]
[87 139]
[89 137]
[90 136]
[91 135]
[92 134]
[93 133]
[97 130]
[98 129]
[99 128]
[100 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
