%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[63.47802734 645.81695557]
[50.74613953 653.77703857]
[37.21584320 660.28808594]
[23.05138206 665.27124023]
[8.42470264 668.66583252]
[-6.48664236 670.43078613]
[-21.50164223 670.54455566]
[-36.43803024 669.00592041]
[-51.11449051 665.83343506]
[-65.35286713 661.06561279]
[-78.98030853 654.76037598]
[-91.83140564 646.99426270]
[-103.75015259 637.86157227]
[-114.59186554 627.47308350]
[-124.22492981 615.95495605]
[-132.53240967 603.44696045]
[-139.41348267 590.10101318]
[-144.78459167 576.07910156]
[-148.58053589 561.55139160]
[-150.75526428 546.69433594]
[-151.28234863 531.68811035]
[-150.15539551 516.71502686]
[-147.38809204 501.95681763]
[-143.01403809 487.59259033]
[-137.08631897 473.79675293]
[-129.67689514 460.73675537]
[-120.87570953 448.57113647]
[-110.78959656 437.44757080]
[-99.54100037 427.50109863]
[-87.26646423 418.85247803]
[-74.11499023 411.60665894]
[-60.24622726 405.85159302]
[-45.82852554 401.65719604]
[-31.03690529 399.07434082]
[-16.05092239 398.13436890]
[-1.05249357 398.84875488]
[13.77631474 401.20874023]
[17.74841118 386.74423218]
[21.72050667 372.27969360]
[12.78517056 358.03195190]
[17.00215530 341.40270996]
[32.23539734 332.80224609]
[35.99169922 318.28018188]
[39.74799728 303.75814819]
[35.44439316 289.49880981]
[46.39100266 278.07592773]
[50.14730453 263.55386353]
[53.90360260 249.03181458]
[57.65990448 234.50975037]
[56.29157639 227.24687195]
[61.58174515 219.80026245]
[65.55384064 205.33573914]
[61.46301270 191.01391602]
[72.57847595 179.75527954]
[76.55057526 165.29075623]
[80.52267456 150.82623291]
[84.49476624 136.36170959]
[88.46686554 121.89718628]
[91.46163940 107.19918060]
[93.35492706 92.31914520]
[95.13739777 77.42543030]
[96.91986084 62.53171158]
[98.70233154 47.63799286]
[100.48479462 32.74427414]
[93.14093781 22.14094543]
[94.93217468 9.77262878]
[104.35846710 2.19162583]
[106.36248016 -12.67390251]
[108.36649323 -27.53943062]
[110.37050629 -42.40496063]
[104.54628754 -57.11512756]
[113.91459656 -68.69458771]
[115.91861725 -83.56011963]
[117.92263031 -98.42564392]
[103.20932007 -106.68218231]
[92.81851959 -119.92769623]
[88.32203674 -136.11279297]
[90.38245392 -152.74699402]
[98.65564728 -167.28193665]
[111.84790039 -177.50181580]
[127.91812134 -181.86117554]
[129.47863770 -196.77976990]
[123.21902466 -211.31001282]
[132.23841858 -223.16326904]
[130.01878357 -232.02392578]
[133.93484497 -238.29179382]
[135.71731567 -253.18550110]
[137.49978638 -268.07922363]
[139.06030273 -282.99783325]
[140.39854431 -297.93801880]
[125.84786987 -301.72323608]
[112.11873627 -307.85189819]
[99.58567810 -316.15686035]
[88.59061432 -326.41156006]
[79.43349457 -338.33618164]
[72.36413574 -351.60546875]
[67.57538605 -365.85742188]
[65.19789124 -380.70318604]
[65.29651642 -395.73782349]
[67.86856079 -410.55114746]
[72.84386444 -424.73904419]
[80.08669281 -437.91445923]
[89.39945984 -449.71792603]
[100.52809906 -459.82748413]
[113.16902924 -467.96731567]
[126.97737885 -473.91537476]
[141.57646179 -477.50936890]
[156.56797791 -478.65127563]
[171.54298401 -477.30990601]
[186.09292603 -473.52191162]
[199.82087708 -467.39056396]
[212.35234070 -459.08319092]
[223.34542847 -448.82638550]
[232.50024414 -436.89999390]
[239.56704712 -423.62933350]
[244.35305786 -409.37649536]
[246.72769165 -394.53024292]
[246.62615967 -379.49563599]
[244.05126953 -364.68280029]
[239.07322693 -350.49588013]
[231.82786560 -337.32186890]
[222.51283264 -325.52017212]
[211.38223267 -315.41275024]
[198.73974609 -307.27536011]
[184.93023682 -301.32998657]
[170.33047485 -297.73880005]
[155.33872986 -296.59979248]
[154.00048828 -281.65960693]
[156.32101440 -277.48538208]
[156.04396057 -271.80908203]
[152.39349365 -266.29675293]
[150.61103821 -251.40304565]
[148.82856750 -236.50932312]
[147.15702820 -221.60275269]
[153.52825928 -208.13958740]
[144.39724731 -195.21925354]
[142.83673096 -180.30064392]
[154.87214661 -174.73809814]
[164.62466431 -165.72218323]
[171.13565063 -154.11999512]
[173.75924683 -141.05374146]
[172.22639465 -127.79220581]
[166.67228699 -115.62755585]
[157.62467957 -105.74943542]
[145.95368958 -99.12862396]
[132.78816223 -96.42163086]
[130.78414917 -81.55610657]
[128.78012085 -66.69057465]
[134.74769592 -53.04368973]
[125.23603821 -40.40094376]
[123.23202515 -25.53541756]
[121.22801208 -10.66988850]
[119.22399902 4.19563961]
[126.75447083 20.04678726]
[115.37850952 34.52674103]
[113.59604645 49.42045975]
[111.81358337 64.31417847]
[110.03111267 79.20789337]
[108.24864960 94.10160828]
[110.49381256 101.84317017]
[106.32716370 109.20319366]
[117.13063049 98.79718018]
[131.82395935 95.77951813]
[145.85424805 101.08525848]
[154.87406921 113.07036591]
[156.08853149 128.02111816]
[149.12132263 141.30487061]
[136.13130188 148.80549622]
[121.14357758 148.19885254]
[108.80225372 139.67291260]
[102.93138885 125.86927795]
[98.95928955 140.33380127]
[94.98719788 154.79832458]
[91.01509857 169.26284790]
[87.04300690 183.72737122]
[90.84972382 199.08378601]
[80.01836395 209.30783081]
[76.04627228 223.77235413]
[72.18196106 238.26605225]
[68.42566681 252.78810120]
[64.66936493 267.31018066]
[60.91306305 281.83221436]
[64.94799042 297.13024902]
[54.27005768 307.51443481]
[50.51375580 322.03649902]
[46.75745773 336.55856323]
[54.88354492 347.30010986]
[55.33285522 360.56695557]
[48.16528320 371.50805664]
[36.18503189 376.25180054]
[32.21293640 390.71630859]
[28.24083900 405.18084717]
[42.19525528 410.72497559]
[55.45505905 417.77059937]
[67.85929871 426.23217773]
[79.25738525 436.00698853]
[89.51096344 446.97634888]
[98.49556732 459.00714111]
[106.10212708 471.95333862]
[112.23830414 485.65771484]
[116.82961273 499.95397949]
[119.82032776 514.66857910]
[121.17412567 529.62286377]
[120.87459564 544.63531494]
[118.92535400 559.52368164]
[115.35007477 574.10723877]
[110.19214630 588.20898438]
[103.51419830 601.65771484]
[95.39727783 614.29016113]
[85.93993378 625.95300293]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 192]
[38 191]
[39 190]
[42 186]
[43 185]
[44 184]
[46 182]
[47 181]
[48 180]
[49 179]
[51 178]
[52 177]
[54 175]
[55 174]
[56 173]
[57 172]
[58 171]
[59 161]
[60 159]
[61 158]
[62 157]
[63 156]
[64 155]
[67 153]
[68 152]
[69 151]
[70 150]
[72 148]
[73 147]
[74 146]
[81 137]
[82 136]
[84 134]
[86 133]
[87 132]
[88 131]
[89 128]
[90 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
