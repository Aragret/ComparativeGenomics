%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[4.95542383 419.94558716]
[4.98139524 435.00192261]
[1.87602615 449.73452759]
[-4.22493029 463.49942017]
[-13.05476570 475.69482422]
[-24.22747803 485.78759766]
[-37.25464630 493.33654785]
[-51.56677628 498.01165771]
[-66.53820038 499.60855103]
[-81.51443481 498.05743408]
[-95.84078979 493.42608643]
[-108.89096832 485.91699219]
[-120.09448242 475.85839844]
[-128.96154785 463.69006348]
[-135.10455322 449.94387817]
[-138.25492859 435.22082520]
[-138.27497864 420.16445923]
[-135.16381836 405.43307495]
[-129.05744934 391.67059326]
[-120.22280884 379.47866821]
[-109.04612732 369.39028931]
[-96.01599121 361.84646606]
[-81.70202637 357.17697144]
[-66.72997284 355.58596802]
[-51.75434875 357.14300537]
[-47.14033890 342.87026978]
[-42.52632904 328.59753418]
[-37.91231918 314.32479858]
[-33.29830933 300.05206299]
[-45.77915192 308.37243652]
[-60.77487183 308.73077393]
[-73.63887787 301.01602173]
[-80.38513184 287.61871338]
[-78.92321777 272.69012451]
[-69.70613098 260.85604858]
[-55.58988953 255.78338623]
[-40.94856262 259.04400635]
[-30.31892395 269.62750244]
[-26.99469757 284.25476074]
[-20.51520157 270.72644043]
[-14.03570461 257.19808960]
[-27.24861526 264.29870605]
[-42.24433517 263.94039917]
[-55.10301971 256.21676636]
[-62.46343613 243.14680481]
[-62.40159225 228.14692688]
[-54.93365479 215.13809204]
[-42.01172256 207.52076721]
[-27.01355934 207.28610229]
[-13.85964680 214.49543762]
[-5.98838806 227.26428223]
[-5.45711374 242.25401306]
[-4.72263050 227.37751770]
[9.42410755 220.29371643]
[17.83872604 207.87622070]
[26.25334549 195.45872498]
[26.98782921 180.58224487]
[41.13456726 173.49842834]
[38.08054352 158.96540833]
[46.43727112 146.25244141]
[61.70154190 143.14764404]
[70.11616516 130.73014832]
[78.53078461 118.31264496]
[86.94539642 105.89514923]
[88.14216614 91.96463013]
[100.63710785 85.69023132]
[109.05172729 73.27273560]
[117.46633911 60.85523987]
[125.88095856 48.43774414]
[134.29557800 36.02024841]
[142.71020508 23.60275269]
[151.12481689 11.18525791]
[159.53942871 -1.23223758]
[166.51788330 -14.51008415]
[171.97325134 -28.48288155]
[177.42860413 -42.45568085]
[174.23014832 -60.58993912]
[188.34846497 -71.01299286]
[193.59516907 -85.06546783]
[198.84188843 -99.11793518]
[204.08860779 -113.17041016]
[209.33532715 -127.22287750]
[206.91381836 -142.85768127]
[218.61413574 -152.07461548]
[223.86085510 -166.12709045]
[229.10757446 -180.17956543]
[224.47326660 -192.21643066]
[229.13256836 -203.81274414]
[240.08160400 -208.95526123]
[245.53695679 -222.92805481]
[250.99230957 -236.90084839]
[253.65811157 -251.66206360]
[245.71620178 -265.34552002]
[253.26315308 -278.18658447]
[253.03982544 -293.18490601]
[252.81649780 -308.18325806]
[238.41679382 -312.86590576]
[226.31925964 -321.97241211]
[217.83615112 -334.51495361]
[213.88764954 -349.13302612]
[214.90205383 -364.24096680]
[220.76933289 -378.19995117]
[230.85304260 -389.49588013]
[244.05938721 -396.90338135]
[258.95584106 -399.61898804]
[273.92654419 -397.34811401]
[287.34756470 -390.33706665]
[297.76315308 -379.34640503]
[304.04342651 -365.56829834]
[305.50720215 -350.49725342]
[301.99569702 -335.76809692]
[293.88977051 -322.97854614]
[282.06872559 -313.51589966]
[267.81484985 -308.40658569]
[268.03817749 -293.40823364]
[268.26150513 -278.40991211]
[276.18743896 -265.79922485]
[268.65643311 -251.88539124]
[275.08453369 -265.43823242]
[284.33117676 -277.24923706]
[295.94519043 -286.74212646]
[309.35992432 -293.45367432]
[323.92080688 -297.05645752]
[338.91744995 -297.37466431]
[353.61807251 -294.39276123]
[367.30541992 -288.25628662]
[379.31164551 -279.26458740]
[389.05096436 -267.85644531]
[396.04815674 -254.58847046]
[399.96179199 -240.10801697]
[400.60095215 -225.12164307]
[397.93444824 -210.36056519]
[392.09234619 -196.54498291]
[383.35974121 -184.34902954]
[372.16268921 -174.36773682]
[359.04754639 -167.08813477]
[344.65420532 -162.86540222]
[329.68493652 -161.90557861]
[314.87014771 -164.25549316]
[300.93267822 -169.80049133]
[288.55258179 -178.27003479]
[278.33389282 -189.25083923]
[270.77520752 -202.20716858]
[266.24533081 -216.50682068]
[264.96511841 -231.44549561]
[259.50976562 -217.47270203]
[254.05439758 -203.49989319]
[257.63168335 -186.31938171]
[243.16003418 -174.93284607]
[237.91331482 -160.88037109]
[232.66661072 -146.82791138]
[235.46339417 -132.19822693]
[223.38780212 -121.97615814]
[218.14108276 -107.92369080]
[212.89436340 -93.87121582]
[207.64764404 -79.81874847]
[202.40092468 -65.76627350]
[207.13533020 -54.63470078]
[202.87921143 -42.88441467]
[191.40139771 -37.00032425]
[185.94604492 -23.02752495]
[180.49069214 -9.05472660]
[192.14587402 -18.49700737]
[206.40246582 -23.16065598]
[221.38475037 -22.43209267]
[235.12158203 -16.40716934]
[245.80561829 -5.87856960]
[252.03118896 7.76848793]
[252.97923279 22.73849869]
[248.52499390 37.06190109]
[239.25453186 48.85420227]
[226.38751221 56.56392670]
[211.61682129 59.17672348]
[196.88580322 56.34883499]
[184.13255310 48.45232010]
[175.03501892 36.52610016]
[170.79010010 22.13927650]
[171.95692444 7.18238115]
[163.54231262 19.59987640]
[155.12770081 32.01737213]
[146.71307373 44.43486786]
[138.29846191 56.85236359]
[129.88383484 69.26985931]
[121.46921539 81.68735504]
[113.05460358 94.10485077]
[111.85783386 108.03536987]
[99.36289215 114.30976868]
[90.94827271 126.72726440]
[82.53366089 139.14476013]
[74.11904144 151.56225586]
[76.89250946 166.89019775]
[68.18199921 179.36343384]
[53.55206299 181.91305542]
[52.21570969 197.67771912]
[38.67084122 203.87333679]
[30.25622177 216.29083252]
[21.84160423 228.70832825]
[20.50525093 244.47300720]
[6.96038198 250.66862488]
[-0.50735939 263.67758179]
[-6.98685503 277.20593262]
[-13.46635151 290.73428345]
[-19.02557755 304.66607666]
[-23.63958549 318.93881226]
[-28.25359535 333.21154785]
[-32.86760330 347.48428345]
[-37.48161316 361.75698853]
[-24.42848206 369.26095581]
[-13.22101593 379.31512451]
[-4.34916019 391.48001099]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 207]
[26 206]
[27 205]
[28 204]
[29 203]
[39 202]
[40 201]
[41 200]
[52 199]
[54 197]
[55 196]
[56 195]
[58 193]
[61 190]
[62 189]
[63 188]
[64 187]
[66 185]
[67 184]
[68 183]
[69 182]
[70 181]
[71 180]
[72 179]
[73 178]
[74 162]
[75 161]
[76 160]
[78 157]
[79 156]
[80 155]
[81 154]
[82 153]
[84 151]
[85 150]
[86 149]
[89 147]
[90 146]
[91 145]
[92 118]
[94 116]
[95 115]
[96 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
