%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[80.21294403 380.58282471]
[75.03062439 394.68563843]
[67.93593597 407.92993164]
[59.06697845 420.05792236]
[48.59638977 430.83349609]
[36.72798538 440.04690552]
[23.69278336 447.51882935]
[9.74451923 453.10382080]
[-4.84529877 456.69314575]
[-19.79267693 458.21697998]
[-34.80665970 457.64559937]
[-49.59499741 454.99017334]
[-63.86982346 450.30239868]
[-77.35328674 443.67349243]
[-89.78291321 435.23248291]
[-100.91677094 425.14370728]
[-110.53812408 413.60354614]
[-118.45969391 400.83657837]
[-124.52729034 387.09140015]
[-128.62280273 372.63549805]
[-130.66650391 357.75030518]
[-130.61862183 342.72552490]
[-128.48008728 327.85363770]
[-124.29251862 313.42413330]
[-118.13743591 299.71789551]
[-110.13465118 287.00170898]
[-100.43993378 275.52310181]
[-89.24200439 265.50549316]
[-76.75882721 257.14389038]
[-63.23338699 250.60104370]
[-48.92896652 246.00433350]
[-34.12400818 243.44322205]
[-19.10668755 242.96757507]
[-4.16932583 244.58663940]
[10.39731884 248.26889038]
[16.06010437 234.37886047]
[21.72289085 220.48883057]
[27.38567924 206.59881592]
[14.87691021 214.87713623]
[-0.03656787 216.48591614]
[-14.02304840 211.06573486]
[-23.95791435 199.82746887]
[-27.62169266 185.28179932]
[-24.19588470 170.67823792]
[-14.44582558 159.27928162]
[-0.54970306 153.63146973]
[14.38805389 154.99653625]
[27.03031158 163.06953430]
[34.55275726 176.04693604]
[35.27485275 191.02957153]
[35.34433365 176.13511658]
[49.16065598 168.42669678]
[57.01240921 155.64585876]
[64.86416626 142.86500549]
[72.71591949 130.08416748]
[80.56767273 117.30332184]
[74.56932831 105.50466156]
[75.15152740 92.28159332]
[82.16362000 81.05577087]
[93.79113007 74.73203278]
[107.02526855 74.94673920]
[115.06643677 62.28421402]
[123.10761261 49.62168884]
[131.14878845 36.95916367]
[139.18995667 24.29664040]
[135.96134949 9.05807590]
[144.29661560 -3.66897535]
[158.84416199 -6.65305233]
[159.71054077 -22.45051956]
[173.06494141 -29.04668045]
[181.10610962 -41.70920563]
[189.14729309 -54.37173080]
[197.18846130 -67.03425598]
[205.22962952 -79.69677734]
[213.27081299 -92.35930634]
[221.31198120 -105.02182770]
[209.18638611 -113.86069489]
[197.65200806 -123.45829773]
[186.75625610 -133.77519226]
[176.54389954 -144.76898193]
[167.05690002 -156.39448547]
[158.33424377 -168.60395813]
[150.41178894 -181.34719849]
[143.32205200 -194.57185364]
[137.09420776 -208.22357178]
[131.75382996 -222.24626160]
[127.32286072 -236.58230591]
[123.81951904 -251.17279053]
[121.25818634 -265.95776367]
[119.64939880 -280.87646484]
[118.99976349 -295.86758423]
[119.31195068 -310.86950684]
[120.58467865 -325.82064819]
[122.81272125 -340.65948486]
[125.98690796 -355.32510376]
[130.09420776 -369.75720215]
[135.11775208 -383.89651489]
[141.03686523 -397.68490601]
[147.82725525 -411.06570435]
[155.46101379 -423.98397827]
[163.90676880 -436.38659668]
[173.12980652 -448.22259521]
[183.09222412 -459.44338989]
[193.75309753 -470.00280762]
[205.06861877 -479.85748291]
[216.99227905 -488.96691895]
[229.47509766 -497.29370117]
[242.46575928 -504.80355835]
[255.91088867 -511.46569824]
[269.75524902 -517.25268555]
[283.94192505 -522.14080811]
[298.41265869 -526.10992432]
[313.10794067 -529.14373779]
[327.96743774 -531.22979736]
[342.93002319 -532.35949707]
[357.93426514 -532.52825928]
[372.91848755 -531.73529053]
[387.82113647 -529.98394775]
[402.58093262 -527.28131104]
[417.13723755 -523.63861084]
[431.43026733 -519.07080078]
[445.40124512 -513.59655762]
[458.99279785 -507.23846436]
[472.14904785 -500.02261353]
[484.81597900 -491.97866821]
[496.94146729 -483.13967896]
[508.47573853 -473.54193115]
[519.37139893 -463.22494507]
[529.58361816 -452.23101807]
[539.07049561 -440.60540771]
[547.79296875 -428.39584351]
[555.71533203 -415.65252686]
[562.80487061 -402.42779541]
[569.03259277 -388.77600098]
[574.37280273 -374.75323486]
[578.80364990 -360.41714478]
[582.30682373 -345.82662964]
[584.86798096 -331.04162598]
[586.47662354 -316.12292480]
[587.12603760 -301.13177490]
[586.81372070 -286.12985229]
[585.54083252 -271.17874146]
[583.31262207 -256.33993530]
[580.13824463 -241.67434692]
[576.03082275 -227.24227905]
[571.00714111 -213.10304260]
[565.08782959 -199.31471252]
[558.29730225 -185.93397522]
[550.66339111 -173.01579285]
[542.21752930 -160.61326599]
[532.99432373 -148.77735901]
[523.03179932 -137.55670166]
[512.37078857 -126.99739075]
[501.05517578 -117.14284515]
[489.13140869 -108.03353119]
[476.64849854 -99.70690155]
[463.65774536 -92.19716644]
[450.21255493 -85.53517914]
[436.36813354 -79.74832153]
[422.18139648 -74.86037445]
[407.71063232 -70.89141846]
[393.01528931 -67.85776520]
[378.15579224 -65.77188110]
[363.19317627 -64.64234161]
[348.18893433 -64.47377777]
[333.20471191 -65.26689148]
[318.30212402 -67.01842499]
[303.54235840 -69.72116852]
[288.98605347 -73.36402893]
[274.69308472 -77.93203735]
[260.72216797 -83.40641022]
[247.13069153 -89.76465607]
[233.97450256 -96.98065948]
[225.93333435 -84.31813049]
[217.89216614 -71.65560913]
[209.85098267 -58.99308395]
[201.80981445 -46.33055878]
[193.76864624 -33.66803360]
[185.72746277 -21.00550842]
[185.43623352 -6.11374998]
[171.50668335 1.38812041]
[174.99205017 15.82376289]
[167.01754761 28.77991295]
[151.85247803 32.33781433]
[143.81130981 45.00033951]
[135.77014160 57.66286087]
[127.72896576 70.32538605]
[119.68778992 82.98791504]
[125.94223785 97.99484253]
[122.06816101 113.78464508]
[109.57810974 124.19255829]
[93.34851837 125.15508270]
[85.49676514 137.93592834]
[77.64500427 150.71676636]
[69.79325104 163.49760437]
[61.94149780 176.27844238]
[61.31040573 192.08706665]
[48.05569839 198.88131714]
[41.27570343 212.26159668]
[35.61291885 226.15162659]
[29.95013237 240.04165649]
[24.28734589 253.93167114]
[37.27640533 261.48352051]
[49.08799362 270.76968384]
[59.49219513 281.60934448]
[68.28648376 293.79159546]
[75.29969025 307.07922363]
[80.39528656 321.21359253]
[83.47409058 335.91961670]
[84.47617340 350.91101074]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 202]
[36 201]
[37 200]
[38 199]
[50 198]
[52 196]
[53 195]
[54 194]
[55 193]
[56 192]
[61 188]
[62 187]
[63 186]
[64 185]
[65 184]
[68 181]
[70 179]
[71 178]
[72 177]
[73 176]
[74 175]
[75 174]
[76 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
