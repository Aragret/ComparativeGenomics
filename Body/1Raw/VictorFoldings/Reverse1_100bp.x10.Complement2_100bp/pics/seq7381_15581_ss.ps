%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[-54.41703796 462.39712524]
[-46.48967361 475.17462158]
[-40.83590317 489.10815430]
[-37.61840057 503.79678345]
[-36.92973709 518.81787109]
[-38.78972626 533.73931885]
[-43.14485550 548.13165283]
[-49.86981964 561.58093262]
[-58.77112198 573.70013428]
[-69.59265900 584.14056396]
[-82.02307892 592.60180664]
[-95.70471954 598.84045410]
[-110.24394226 602.67700195]
[-125.22242737 604.00103760]
[-140.20921326 602.77447510]
[-154.77308655 599.03259277]
[-168.49502563 592.88311768]
[-180.98022461 584.50292969]
[-191.86946106 574.13311768]
[-200.84942627 562.07208252]
[-207.66175842 548.66687012]
[-212.11042786 534.30310059]
[-214.06745911 519.39416504]
[-213.47654724 504.36886597]
[-210.35467529 489.65960693]
[-204.79168701 475.68960571]
[-196.94761658 462.86077881]
[-187.04817200 451.54226685]
[-175.37817383 442.05969238]
[-162.27339172 434.68591309]
[-148.11088562 429.63305664]
[-133.29812622 427.04653931]
[-118.26129913 427.00076294]
[-103.43306732 429.49703979]
[-89.24005127 434.46356201]
[-81.96681976 421.34487915]
[-74.69359589 408.22616577]
[-67.42036438 395.10748291]
[-60.14713287 381.98880005]
[-52.87390518 368.87008667]
[-45.60067368 355.75140381]
[-38.32744598 342.63272095]
[-31.05421638 329.51400757]
[-34.08497238 317.80328369]
[-28.13288879 306.81436157]
[-15.90920830 302.69799805]
[-8.44146729 289.68905640]
[-0.97372586 276.68008423]
[6.49401522 263.67114258]
[6.12000227 248.78123474]
[19.70068741 240.66485596]
[18.71156502 223.14376831]
[34.71218491 214.02995300]
[41.98541260 200.91125488]
[49.25864410 187.79255676]
[56.53187180 174.67387390]
[63.80510330 161.55517578]
[70.48529816 148.12480164]
[68.56423950 133.35459900]
[81.22685242 123.86940002]
[87.30068207 110.15412903]
[83.76766205 99.05642700]
[88.56274414 88.44283295]
[99.22577667 83.75870514]
[105.50313568 70.13539124]
[111.78049469 56.51207352]
[118.05785370 42.88875580]
[124.33521271 29.26544189]
[122.22179413 10.97295666]
[136.93547058 1.40871871]
[142.90704346 -12.35138416]
[148.77600098 -26.15556145]
[154.64495850 -39.95973969]
[160.41099548 -53.80722427]
[166.07377625 -67.69725037]
[171.73655701 -81.58728027]
[161.86680603 -91.70333862]
[156.61407471 -104.77747345]
[156.74075317 -118.82344818]
[162.19473267 -131.72091675]
[172.12213135 -141.53549194]
[185.00093079 -146.80886841]
[198.87419128 -146.77540588]
[204.74314880 -160.57957458]
[210.61210632 -174.38375854]
[216.48106384 -188.18792725]
[222.35002136 -201.99211121]
[227.38694763 -216.12113953]
[231.57395935 -230.52491760]
[235.76097107 -244.92871094]
[234.51489258 -249.99766541]
[235.26298523 -254.57955933]
[237.48574829 -257.99633789]
[240.46992493 -259.87438965]
[245.29591370 -274.07684326]
[250.12191772 -288.27929688]
[254.94792175 -302.48175049]
[241.64628601 -309.48266602]
[229.60368347 -318.47836304]
[219.11665344 -329.24725342]
[210.44348145 -341.52413940]
[203.79771423 -355.00674438]
[199.34304810 -369.36300659]
[197.18914795 -384.23941040]
[197.38908386 -399.26959229]
[199.93791199 -414.08343506]
[204.77287292 -428.31613159]
[211.77490234 -441.61718750]
[220.77157593 -453.65905762]
[231.54132080 -464.14517212]
[243.81895447 -472.81735229]
[257.30209351 -479.46200562]
[271.65872192 -483.91549683]
[286.53530884 -486.06814575]
[301.56546021 -485.86697388]
[316.37911987 -483.31692505]
[330.61138916 -478.48077393]
[343.91186523 -471.47766113]
[355.95300293 -462.48001099]
[366.43823242 -451.70938110]
[375.10940552 -439.43103027]
[381.75292969 -425.94735718]
[386.20523071 -411.59036255]
[388.35665894 -396.71359253]
[388.15426636 -381.68344116]
[385.60299683 -366.87002563]
[380.76568604 -352.63812256]
[373.76144409 -339.33822632]
[364.76278687 -327.29785156]
[353.99130249 -316.81347656]
[341.71224976 -308.14334106]
[328.22802734 -301.50094604]
[313.87066650 -297.04980469]
[298.99371338 -294.89959717]
[283.96359253 -295.10324097]
[269.15036011 -297.65576172]
[264.32437134 -283.45327759]
[259.49838257 -269.25082397]
[254.67237854 -255.04838562]
[250.16474915 -240.74169922]
[245.97773743 -226.33790588]
[241.79072571 -211.93412781]
[254.42492676 -220.01974487]
[269.40515137 -219.25010681]
[281.14419556 -209.91227722]
[285.26364136 -195.48902893]
[280.22708130 -181.35987854]
[267.91296387 -172.79464722]
[252.91421509 -172.98796082]
[240.82496643 -181.86772156]
[236.15420532 -196.12315369]
[230.28524780 -182.31896973]
[224.41629028 -168.51480103]
[218.54731750 -154.71061707]
[212.67835999 -140.90644836]
[223.44319153 -129.09674072]
[227.99674988 -113.71887207]
[225.37876892 -97.83712769]
[216.06329346 -84.63932037]
[201.87382507 -76.79695129]
[185.62658691 -75.92449188]
[179.96380615 -62.03446579]
[174.30102539 -48.14443588]
[174.68675232 -40.76385498]
[168.44912720 -34.09077835]
[162.58016968 -20.28660011]
[156.71121216 -6.48242378]
[156.98701477 0.90308416]
[150.65074158 7.48255253]
[154.71418762 18.87618828]
[149.76622009 30.35231209]
[137.95852661 35.54280090]
[131.68116760 49.16611862]
[125.40380859 62.78943253]
[119.12644958 76.41275024]
[112.84909058 90.03606415]
[114.81768036 106.69442749]
[101.01595306 116.22796631]
[94.94211578 129.94323730]
[96.42872620 145.69444275]
[84.20056152 154.19863892]
[98.54720306 149.81982422]
[111.85232544 156.74612427]
[116.49415588 171.00984192]
[109.81363678 184.44006348]
[95.63768005 189.34333801]
[82.08691406 182.91087341]
[76.92379761 168.82839966]
[69.65056610 181.94709778]
[62.37733841 195.06579590]
[55.10410690 208.18447876]
[47.83087921 221.30317688]
[50.62834167 233.89433289]
[44.30037689 244.67118835]
[32.70964050 248.13259888]
[32.54951096 263.95300293]
[19.50296783 271.13888550]
[12.03522682 284.14782715]
[4.56748533 297.15679932]
[-2.90025592 310.16574097]
[-2.42723942 328.57382202]
[-17.93552208 336.78723145]
[-25.20875168 349.90594482]
[-32.48197937 363.02462769]
[-39.75521088 376.14331055]
[-47.02843857 389.26202393]
[-54.30167007 402.38070679]
[-61.57489777 415.49942017]
[-68.84812927 428.61810303]
[-76.12136078 441.73678589]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 210]
[36 209]
[37 208]
[38 207]
[39 206]
[40 205]
[41 204]
[42 203]
[43 202]
[46 200]
[47 199]
[48 198]
[49 197]
[51 195]
[53 192]
[54 191]
[55 190]
[56 189]
[57 188]
[58 181]
[60 179]
[61 178]
[64 176]
[65 175]
[66 174]
[67 173]
[68 172]
[70 169]
[71 167]
[72 166]
[73 165]
[74 163]
[75 162]
[76 161]
[83 155]
[84 154]
[85 153]
[86 152]
[87 151]
[88 142]
[89 141]
[90 140]
[94 139]
[95 138]
[96 137]
[97 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
