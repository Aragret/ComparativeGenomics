%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUUUAAUUCCGCUUCAAAUAAUGAGAAAAAACUUACAACAGUUUUGAUCAAUUAACCUUCAAUUGCCAUGAUAAAUAUGAUUUUCUCAUUCUGGGAGxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[60.96976852 590.61920166]
[50.72855759 579.57086182]
[43.20304871 566.52044678]
[38.77072144 552.12243652]
[37.65389252 537.09912109]
[39.90858841 522.20397949]
[45.42171097 508.18426514]
[53.91672516 495.74310303]
[64.96752930 485.50457764]
[78.01980591 477.98220825]
[92.41887665 473.55337524]
[91.30322266 458.59494019]
[90.18757629 443.63647461]
[86.55529022 437.19998169]
[89.16836548 428.44729614]
[80.33203125 420.18618774]
[79.46566772 407.71890259]
[87.57781982 397.69116211]
[86.90803528 382.70611572]
[86.23825073 367.72106934]
[85.56846619 352.73605347]
[73.67401123 361.87509155]
[59.07683945 358.42218018]
[52.53743744 344.92269897]
[58.87641144 331.32794189]
[73.42090607 327.65945435]
[85.44848633 336.62005615]
[85.89509583 321.62670898]
[86.34169769 306.63336182]
[75.97275543 296.00225830]
[76.21209717 280.79049683]
[87.43328857 269.98669434]
[80.07836151 257.03469849]
[88.22311401 243.47100830]
[88.66971588 228.47764587]
[89.11632538 213.48429871]
[89.56292725 198.49095154]
[90.00953674 183.49760437]
[90.45613861 168.50425720]
[75.49053192 164.67768860]
[61.74740601 157.62513733]
[49.91223907 147.69836426]
[40.57534790 135.39248657]
[34.20243835 121.32131958]
[31.11137390 106.18667603]
[31.45633507 90.74345398]
[35.22011185 75.76193237]
[42.21497726 61.98935699]
[52.09204102 50.11267471]
[64.35865784 40.72426987]
[78.40299225 34.29241562]
[93.52453613 31.13792038]
[93.74786377 16.13958359]
[93.97119141 1.14124537]
[94.19451904 -13.85709190]
[94.41784668 -28.85542870]
[94.64117432 -43.85376740]
[94.75283813 -58.85335159]
[94.75283813 -73.85334778]
[94.75283813 -88.85334778]
[86.20101929 -98.50887299]
[86.50982666 -111.00241089]
[94.96846771 -119.64983368]
[82.55113220 -111.23497009]
[68.18536377 -115.55059052]
[62.46105957 -129.41537476]
[69.59796906 -142.60873413]
[84.33502960 -145.40499878]
[95.80793762 -135.74436951]
[97.14617157 -150.68455505]
[98.48440552 -165.62474060]
[90.08420563 -153.19749451]
[77.98097229 -144.33680725]
[63.59659195 -140.08361816]
[48.62091827 -140.93760681]
[34.81328583 -146.79844666]
[23.79580116 -156.97758484]
[16.86278343 -170.27920532]
[14.82871723 -185.14065552]
[17.93256378 -199.81600952]
[25.80968857 -212.58123779]
[37.53469086 -221.93667603]
[51.73012924 -226.78327942]
[66.72834015 -226.55165100]
[80.76734924 -221.26901245]
[92.19786835 -211.55596924]
[99.67704773 -198.55358887]
[102.32624817 -183.78781128]
[107.15224457 -197.99026489]
[111.97824097 -212.19271851]
[116.80423737 -226.39517212]
[121.63024139 -240.59764099]
[126.45623779 -254.80009460]
[131.28222656 -269.00253296]
[128.39630127 -284.55831909]
[139.81698608 -294.11953735]
[144.64299011 -308.32199097]
[149.46899414 -322.52444458]
[136.22247314 -329.63638306]
[124.32730865 -338.83175659]
[114.10800171 -349.85971069]
[105.84333801 -362.41937256]
[99.75878143 -376.16812134]
[96.02033234 -390.73089600]
[94.72997284 -405.71035767]
[95.92290497 -420.69790649]
[99.56658936 -435.28466797]
[105.56161499 -449.07269287]
[113.74443817 -461.68582153]
[123.89182281 -472.77999878]
[135.72694397 -482.05252075]
[148.92694092 -489.25045776]
[163.13168335 -494.17742920]
[177.95367432 -496.69900513]
[192.98855591 -496.74642944]
[207.82615662 -494.31842041]
[222.06170654 -489.48117065]
[235.30685425 -482.36666870]
[247.20024109 -473.16900635]
[257.41741943 -462.13909912]
[265.67968750 -449.57785034]
[271.76156616 -435.82791138]
[275.49722290 -421.26443481]
[276.78469849 -406.28472900]
[275.58886719 -391.29739380]
[271.94238281 -376.71133423]
[265.94470215 -362.92446899]
[257.75946045 -350.31289673]
[247.60992432 -339.22070312]
[235.77301025 -329.95046997]
[222.57164001 -322.75506592]
[208.36595154 -317.83084106]
[193.54347229 -315.31210327]
[178.50857544 -315.26757812]
[163.67144775 -317.69845581]
[158.84544373 -303.49600220]
[154.01945496 -289.29354858]
[157.25057983 -274.75363159]
[145.48469543 -264.17654419]
[140.65869141 -249.97409058]
[135.83268738 -235.77163696]
[131.00669861 -221.56918335]
[126.18069458 -207.36672974]
[121.35469818 -193.16427612]
[116.52870178 -178.96180725]
[113.42459106 -164.28651428]
[112.08635712 -149.34632874]
[110.74812317 -134.40614319]
[109.96680450 -119.42650604]
[119.32752991 -104.58252716]
[109.75283813 -88.85334778]
[109.75283813 -73.85334778]
[109.75283813 -58.85335159]
[112.89633942 -52.16453934]
[109.63951111 -43.63043976]
[109.41618347 -28.63210106]
[109.19285583 -13.63376427]
[108.96952820 1.36457312]
[108.74620056 16.36291122]
[108.52287292 31.36124802]
[122.64025116 34.64453888]
[135.76341248 40.79784012]
[147.31605530 49.55093765]
[156.79087830 60.51945114]
[163.77178955 73.22171021]
[167.95222473 87.09990692]
[169.14862061 101.54459381]
[167.30842590 115.92145538]
[162.51246643 129.59913635]
[154.97132874 141.97702026]
[145.01620483 152.51152039]
[133.08422852 160.74003601]
[119.69940186 166.30122375]
[105.44949341 168.95085144]
[105.00288391 183.94421387]
[104.55628204 198.93756104]
[104.10967255 213.93090820]
[103.66307068 228.92425537]
[103.21646118 243.91760254]
[110.53945160 257.94201660]
[102.42664337 270.43328857]
[112.98488617 281.88586426]
[112.31838226 297.08486938]
[101.33505249 307.07998657]
[100.88844299 322.07333374]
[100.44183350 337.06668091]
[100.55350494 352.06625366]
[101.22328949 367.05130005]
[101.89307404 382.03634644]
[102.56285858 397.02136230]
[112.83033752 412.30734253]
[104.14176941 427.55447388]
[105.14602661 442.52081299]
[106.26168060 457.47927856]
[107.37732697 472.43774414]
[122.27406311 474.68161011]
[136.29780579 480.18453979]
[148.74514771 488.67050171]
[158.99171448 499.71386719]
[166.52354431 512.76068115]
[170.96284485 527.15649414]
[172.08695984 542.17932129]
[169.83947754 557.07550049]
[164.33314514 571.09790039]
[155.84416199 583.54315186]
[144.79832458 593.78704834]
[131.74969482 601.31573486]
[117.35277557 605.75152588]
[102.32971954 606.87200928]
[87.43406677 604.62091064]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 195]
[12 194]
[13 193]
[15 192]
[18 190]
[19 189]
[20 188]
[21 187]
[27 186]
[28 185]
[29 184]
[32 181]
[34 179]
[35 178]
[36 177]
[37 176]
[38 175]
[39 174]
[52 160]
[53 159]
[54 158]
[55 157]
[56 156]
[57 155]
[58 153]
[59 152]
[60 151]
[63 149]
[69 148]
[70 147]
[71 146]
[88 145]
[89 144]
[90 143]
[91 142]
[92 141]
[93 140]
[94 139]
[96 137]
[97 136]
[98 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
