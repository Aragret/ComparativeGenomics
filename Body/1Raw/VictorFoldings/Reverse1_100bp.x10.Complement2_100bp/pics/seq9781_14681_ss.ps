%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[107.87326050 551.07653809]
[106.30950928 536.02960205]
[109.47402954 521.23632812]
[117.05679321 508.14599609]
[128.31492615 498.04107666]
[142.14544678 491.91149902]
[140.58493042 476.99291992]
[139.02441406 462.07431030]
[137.46388245 447.15570068]
[135.90336609 432.23709106]
[134.34283447 417.31848145]
[123.28451538 403.69201660]
[130.92224121 386.93652344]
[129.13977051 372.04281616]
[127.35731506 357.14910889]
[113.70437622 347.32891846]
[111.33145142 330.33819580]
[122.19062805 316.62335205]
[120.18661499 301.75781250]
[118.18260193 286.89227295]
[116.17858887 272.02676392]
[114.17457581 257.16122437]
[112.05995178 242.31103516]
[109.83483124 227.47698975]
[100.29671478 220.03717041]
[98.32153320 207.69688416]
[105.50670624 196.98539734]
[103.50269318 182.11987305]
[101.49868011 167.25433350]
[99.49465942 152.38880920]
[97.49064636 137.52328491]
[81.36323547 132.66442871]
[68.97428894 121.25321198]
[62.80897903 105.57868195]
[64.10404968 88.78508759]
[72.59970856 74.24116516]
[86.59175873 64.86436462]
[84.14603424 50.06509399]
[81.70030212 35.26582336]
[79.25457764 20.46655273]
[76.80885315 5.66728210]
[74.36312103 -9.13198853]
[71.04968262 -13.16537285]
[69.74515533 -17.62087631]
[70.27391815 -21.66259003]
[72.15405273 -24.64544868]
[70.37158966 -39.53916550]
[68.58911896 -54.43288422]
[66.80665588 -69.32659912]
[64.47116852 -84.14366913]
[61.58589554 -98.86355591]
[58.70062256 -113.58345032]
[55.81534958 -128.30334473]
[51.09521484 -142.54133606]
[44.61571884 -156.06967163]
[38.13622284 -169.59802246]
[31.65672684 -183.12637329]
[25.17723083 -196.65470886]
[18.29781914 -209.98414612]
[11.02458954 -223.10282898]
[3.75136018 -236.22152710]
[-3.52186942 -249.34022522]
[-10.79509926 -262.45892334]
[-18.06832886 -275.57760620]
[-25.34155846 -288.69631958]
[-32.61478806 -301.81500244]
[-46.62326813 -296.38580322]
[-61.24057007 -292.91473389]
[-76.19437408 -291.46646118]
[-91.20610046 -292.06793213]
[-105.99609375 -294.70797729]
[-120.28881836 -299.33740234]
[-133.81802368 -305.86999512]
[-146.33164978 -314.18399048]
[-157.59660339 -324.12457275]
[-167.40298462 -335.50650024]
[-175.56814575 -348.11776733]
[-181.93995667 -361.72341919]
[-186.39971924 -376.06997681]
[-188.86433411 -390.89022827]
[-189.28791809 -405.90802002]
[-187.66255188 -420.84362793]
[-184.01852417 -435.41876221]
[-178.42372131 -449.36193848]
[-170.98239136 -462.41339111]
[-161.83312988 -474.32995605]
[-151.14639282 -484.88967896]
[-139.12126160 -493.89578247]
[-125.98178101 -501.18054199]
[-111.97270966 -506.60821533]
[-97.35504150 -510.07772827]
[-82.40107727 -511.52438354]
[-67.38941193 -510.92126465]
[-52.59970856 -508.27960205]
[-38.30747986 -503.64865112]
[-24.77898598 -497.11459351]
[-12.26625347 -488.79922485]
[-1.00238717 -478.85745239]
[8.80277348 -467.47445679]
[16.96656609 -454.86230469]
[23.33690071 -441.25598145]
[27.79510498 -426.90890503]
[30.25812340 -412.08840942]
[30.68007469 -397.07055664]
[29.05309296 -382.13513184]
[25.40749168 -367.56039429]
[19.81118584 -353.61782837]
[12.36843014 -340.56719971]
[3.21787930 -328.65161133]
[-7.46999836 -318.09304810]
[-19.49609375 -309.08822632]
[-12.22286415 -295.96954346]
[-4.94963408 -282.85083008]
[2.32359529 -269.73214722]
[9.59682465 -256.61346436]
[16.87005424 -243.49476624]
[24.14328384 -230.37606812]
[31.41651344 -217.25737000]
[34.07093811 -216.35617065]
[36.52832413 -214.34921265]
[38.36571503 -211.30628967]
[39.19320679 -207.44885254]
[38.70557785 -203.13421631]
[45.18507385 -189.60586548]
[51.66456985 -176.07751465]
[58.14406586 -162.54917908]
[64.62355804 -149.02082825]
[65.34176636 -164.00361633]
[70.82471466 -177.96562195]
[80.49377441 -189.43336487]
[93.32854462 -197.19665527]
[107.97454834 -200.43620300]
[122.88614655 -198.81013489]
[136.48970032 -192.49003601]
[147.34957886 -182.14291382]
[154.31971741 -168.86070251]
[156.66453552 -154.04510498]
[154.13659668 -139.25965881]
[147.00265503 -126.06469727]
[136.01559448 -115.85272217]
[122.33489227 -109.70142365]
[107.40431976 -108.25996399]
[92.79951477 -111.68046570]
[80.06177521 -119.60195160]
[70.53524017 -131.18861389]
[73.42051697 -116.46871948]
[76.30578613 -101.74883270]
[79.19105530 -87.02893829]
[89.59822083 -97.83129883]
[104.54609680 -96.58196259]
[113.01567841 -84.20188904]
[108.76350403 -69.81721497]
[94.92411041 -64.03177643]
[81.70037079 -71.10906219]
[83.48283386 -56.21534729]
[85.26530457 -41.32163239]
[87.04776764 -26.42791367]
[89.16239166 -11.57771587]
[91.60812378 3.22155476]
[94.05384827 18.02082634]
[96.49957275 32.82009506]
[98.94530487 47.61936569]
[101.39102936 62.41863632]
[114.06176758 65.12077332]
[125.06365204 71.96239471]
[133.09095764 82.13153839]
[137.19102478 94.42131805]
[136.87722778 107.37318420]
[132.18682861 119.44998932]
[123.67646790 129.21846008]
[112.35617828 135.51927185]
[114.36019135 150.38479614]
[116.36420441 165.25032043]
[118.36821747 180.11585999]
[120.37223053 194.98138428]
[131.96250916 209.29035950]
[124.66887665 225.25187683]
[126.89398956 240.08590698]
[131.26179504 248.10839844]
[129.04010010 255.15721130]
[131.04411316 270.02273560]
[133.04812622 284.88827515]
[135.05213928 299.75378418]
[137.05615234 314.61932373]
[148.63607788 321.49829102]
[154.06062317 333.61376953]
[151.55390930 346.45114136]
[142.25102234 355.36663818]
[144.03349304 370.26034546]
[145.81596375 385.15408325]
[155.45455933 393.72494507]
[156.63256836 406.16665649]
[149.26144409 415.75796509]
[150.82196045 430.67657471]
[152.38249207 445.59518433]
[153.94300842 460.51379395]
[155.50354004 475.43237305]
[157.06405640 490.35098267]
[171.86366272 493.48577881]
[184.96922302 501.04220581]
[195.09677124 512.27996826]
[201.25411987 526.09820557]
[202.83802795 541.14300537]
[199.69334412 555.94049072]
[192.12812805 569.04095459]
[180.88354492 579.16101074]
[167.06123352 585.30908203]
[152.01536560 586.88293457]
[137.21997070 583.72833252]
[124.12456512 576.15429688]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 198]
[7 197]
[8 196]
[9 195]
[10 194]
[11 193]
[13 190]
[14 189]
[15 188]
[18 184]
[19 183]
[20 182]
[21 181]
[22 180]
[23 178]
[24 177]
[27 175]
[28 174]
[29 173]
[30 172]
[31 171]
[37 163]
[38 162]
[39 161]
[40 160]
[41 159]
[42 158]
[46 157]
[47 156]
[48 155]
[49 154]
[50 148]
[51 147]
[52 146]
[53 145]
[54 127]
[55 126]
[56 125]
[57 124]
[58 123]
[59 118]
[60 117]
[61 116]
[62 115]
[63 114]
[64 113]
[65 112]
[66 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
