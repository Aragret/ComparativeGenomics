%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[111.50265503 606.78021240]
[123.74792480 597.39636230]
[122.40969086 582.45617676]
[121.07145691 567.51599121]
[119.73322296 552.57580566]
[118.39498901 537.63562012]
[117.05675507 522.69543457]
[115.71852112 507.75527954]
[114.38028717 492.81509399]
[103.52606201 479.02548218]
[111.41241455 462.38555908]
[109.74087524 447.47900391]
[107.95840454 432.58529663]
[96.77662659 442.58367920]
[81.96307373 440.22601318]
[74.43773651 427.25030518]
[79.74802399 413.22174072]
[93.97938538 408.48165894]
[106.64011383 416.52285767]
[98.34222412 404.15377808]
[105.45559692 390.02188110]
[104.78581238 375.03683472]
[104.11602783 360.05181885]
[95.81814575 347.68270874]
[102.93151855 333.55081177]
[94.63362885 321.18173218]
[101.74700165 307.04983521]
[93.44911957 294.68075562]
[100.56249237 280.54885864]
[99.89270782 265.56381226]
[99.22292328 250.57876587]
[98.55313110 235.59373474]
[97.88334656 220.60868835]
[97.21356201 205.62365723]
[88.91567993 193.25456238]
[96.02905273 179.12266541]
[84.89812469 169.29220581]
[84.00540161 154.10478210]
[94.39196777 142.49629211]
[93.72218323 127.51126099]
[93.05239868 112.52622223]
[85.69034576 100.63959503]
[91.96256256 88.14356232]
[91.29277802 73.15852356]
[90.62299347 58.17348862]
[89.95320892 43.18844986]
[89.17189026 28.20881081]
[80.62690735 14.89363861]
[87.59294891 1.72839892]
[86.70013428 -13.24500656]
[85.80731201 -28.21841240]
[84.91449738 -43.19181824]
[73.37660980 -53.65674973]
[72.68446350 -68.85462952]
[82.73228455 -79.78975677]
[81.83946991 -94.76316071]
[80.72381592 -109.72161865]
[79.38558197 -124.66180420]
[78.04734802 -139.60198975]
[64.21524811 -146.13040161]
[55.56514740 -158.62329102]
[54.33781433 -173.66856384]
[60.76306152 -187.21743774]
[73.02481079 -195.67410278]
[71.68657684 -210.61428833]
[70.34834290 -225.55447388]
[69.01010895 -240.49465942]
[67.33856964 -255.40122986]
[65.33455658 -270.26675415]
[63.33054352 -285.13229370]
[49.26545715 -287.86633301]
[36.75106812 -294.80014038]
[27.00448227 -305.24417114]
[20.96892548 -318.16833496]
[19.22248459 -332.30340576]
[21.92275810 -346.26577759]
[28.79273605 -358.69290161]
[39.14914703 -368.37619019]
[51.97040558 -374.37857056]
[50.18794250 -389.27227783]
[40.86557388 -402.05523682]
[47.03565598 -415.61178589]
[39.18229294 -402.83190918]
[25.71282196 -396.23089600]
[10.80090904 -397.85412598]
[-0.93282819 -407.19860840]
[-5.85256433 -421.36886597]
[-2.43386507 -435.97409058]
[8.26394844 -446.48867798]
[22.92604256 -449.65460205]
[37.00920868 -444.49084473]
[46.14971542 -432.59719849]
[46.37304306 -447.59555054]
[46.59637070 -462.59387207]
[46.81969833 -477.59222412]
[47.04302597 -492.59054565]
[32.66171265 -497.24557495]
[20.29236412 -505.93411255]
[11.03486061 -517.88360596]
[5.71237087 -532.03149414]
[4.79816628 -547.11975098]
[8.37353802 -561.80676270]
[16.12056732 -574.78649902]
[27.35039139 -584.90496826]
[41.06446457 -591.26226807]
[56.04333496 -593.29321289]
[70.95510101 -590.81719971]
[84.47380829 -584.05438232]
[95.39739227 -573.60607910]
[102.75453186 -560.40136719]
[105.89102936 -545.61444092]
[104.52799988 -530.56005859]
[98.78662872 -516.57696533]
[89.17745209 -504.90838623]
[76.55490112 -496.59201050]
[62.04136276 -492.36721802]
[61.81803513 -477.36889648]
[61.59470749 -462.37054443]
[61.37137985 -447.37222290]
[61.14805222 -432.37387085]
[61.92937469 -417.39422607]
[71.12424469 -405.67657471]
[65.08165741 -391.05474854]
[66.86412811 -376.16104126]
[82.23819733 -372.76589966]
[95.54292297 -364.29718018]
[105.15979767 -351.76330566]
[109.91149902 -336.66851807]
[109.20597839 -320.83239746]
[103.11017609 -306.17041016]
[92.34416199 -294.46237183]
[78.19606781 -287.13629150]
[80.20008087 -272.27078247]
[82.20410156 -257.40524292]
[84.77129364 -254.98825073]
[86.29533386 -251.20773315]
[86.14812469 -246.56750488]
[83.95029449 -241.83288574]
[85.28852844 -226.89270020]
[86.62676239 -211.95251465]
[87.96499634 -197.01232910]
[101.53446960 -190.86946106]
[110.26533508 -178.67814636]
[111.73138428 -163.65426636]
[105.43921661 -149.82293701]
[92.98753357 -140.94021606]
[94.32576752 -126.00003815]
[95.66400146 -111.05985260]
[98.68943787 -107.36447144]
[99.42557526 -101.72930908]
[96.81287384 -95.65597534]
[97.70568848 -80.68257141]
[108.98174286 -71.01892090]
[110.10048676 -55.84647751]
[99.88790131 -44.08463287]
[100.78072357 -29.11122894]
[101.67353821 -14.13782310]
[102.56635284 0.83558309]
[111.04747772 13.07975769]
[104.14529419 27.31599617]
[107.68134308 33.80584335]
[104.93824768 42.51866531]
[105.60803223 57.50370407]
[106.27781677 72.48873901]
[106.94760132 87.47377777]
[114.30965424 99.36040497]
[108.03743744 111.85643768]
[108.70722198 126.84147644]
[109.37700653 141.82650757]
[120.75781250 152.46206665]
[121.22360229 167.66856384]
[111.01409149 178.45288086]
[119.35988617 191.89379883]
[112.19860077 204.95387268]
[112.86838531 219.93890381]
[113.53816986 234.92395020]
[114.20796204 249.90898132]
[114.87774658 264.89401245]
[115.54753113 279.87905884]
[123.89331818 293.31997681]
[116.73204041 306.38003540]
[125.07783508 319.82095337]
[117.91655731 332.88104248]
[126.26234436 346.32196045]
[119.10106659 359.38201904]
[119.77085114 374.36706543]
[120.44063568 389.35211182]
[128.78642273 402.79302979]
[121.62515259 415.85308838]
[122.85212708 430.80282593]
[124.63459015 445.69653320]
[128.76159668 453.84548950]
[126.33101654 460.82504272]
[135.84094238 469.53848267]
[136.83358765 481.99636841]
[129.32048035 491.47683716]
[130.65870667 506.41702271]
[131.99694824 521.35723877]
[133.33517456 536.29742432]
[134.67341614 551.23760986]
[136.01164246 566.17779541]
[137.34988403 581.11798096]
[138.68811035 596.05816650]
[152.40615845 603.11639404]
[160.11073303 616.48211670]
[159.34333801 631.89038086]
[150.34886169 644.42449951]
[135.99740601 650.08477783]
[120.86844635 647.06512451]
[109.78960419 636.32910156]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 203]
[3 202]
[4 201]
[5 200]
[6 199]
[7 198]
[8 197]
[9 196]
[11 193]
[12 191]
[13 190]
[19 189]
[21 187]
[22 186]
[23 185]
[25 183]
[27 181]
[29 179]
[30 178]
[31 177]
[32 176]
[33 175]
[34 174]
[36 172]
[39 169]
[40 168]
[41 167]
[43 165]
[44 164]
[45 163]
[46 162]
[47 160]
[49 158]
[50 157]
[51 156]
[52 155]
[55 152]
[56 151]
[57 148]
[58 147]
[59 146]
[64 141]
[65 140]
[66 139]
[67 138]
[68 134]
[69 133]
[70 132]
[79 124]
[80 123]
[82 121]
[92 120]
[93 119]
[94 118]
[95 117]
[96 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
