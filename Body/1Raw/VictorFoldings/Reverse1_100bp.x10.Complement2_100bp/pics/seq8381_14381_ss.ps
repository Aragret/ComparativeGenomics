%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[227.16230774 412.61764526]
[237.78733826 401.97729492]
[250.05786133 393.28579712]
[243.57836914 379.75744629]
[237.09887695 366.22912598]
[230.61938477 352.70077515]
[224.13987732 339.17242432]
[216.86665344 326.05374146]
[208.82548523 313.39120483]
[200.78430176 300.72866821]
[192.74313354 288.06616211]
[176.18769836 285.10702515]
[166.70817566 270.80831909]
[170.57759094 253.74821472]
[162.34878540 241.20681763]
[148.89765930 234.81021118]
[147.79617310 219.02740479]
[139.56735229 206.48599243]
[131.33854675 193.94459534]
[123.01660919 181.46481323]
[114.60198975 169.04731750]
[116.56215668 183.91868591]
[114.65924835 198.79748535]
[109.01947784 212.69688416]
[100.01689911 224.69494629]
[88.24862671 233.99591064]
[74.49521637 239.98286438]
[59.66886902 242.25871277]
[44.75297165 240.67251587]
[30.73684120 235.32948303]
[18.55011559 226.58398438]
[9.00109482 215.01608276]
[2.72313428 201.39305115]
[0.13262700 186.61842346]
[1.40139222 171.67218018]
[6.44527721 157.54563904]
[14.92973995 145.17576599]
[26.29203606 135.38299561]
[39.77854538 128.81686401]
[54.49475479 125.91287994]
[69.46459198 126.86363983]
[83.69515991 131.60609436]
[96.24259949 139.82568359]
[106.27759552 150.98147583]
[102.30550385 136.51695251]
[98.33340454 122.05242157]
[94.36131287 107.58789825]
[90.50821686 104.02873993]
[88.92353058 98.56411743]
[90.49315643 92.63341522]
[86.95348358 78.05704498]
[83.41381073 63.48066711]
[79.87413788 48.90428925]
[76.33446503 34.32791519]
[62.41075897 31.90367126]
[50.49877548 24.37845612]
[42.37934113 12.91632938]
[39.25138474 -0.73308265]
[41.55496979 -14.50162792]
[48.90974808 -26.31599236]
[60.17726135 -34.40989685]
[56.85500336 -49.03735733]
[53.30736542 -52.86637115]
[51.73995209 -57.23632812]
[52.02721405 -61.30234909]
[53.72647095 -64.39182281]
[51.06067657 -79.15304565]
[48.39488220 -93.91426086]
[45.72908401 -108.67547607]
[36.30886078 -97.00245667]
[21.40896034 -95.27244568]
[9.56472206 -104.47647095]
[7.56106472 -119.34204102]
[16.54577446 -131.35350037]
[31.37199974 -133.63012695]
[43.54610443 -124.86856842]
[42.20787048 -139.80874634]
[32.82872391 -148.66281128]
[32.02167892 -161.13407898]
[39.67510605 -170.50166321]
[38.55945587 -185.46011353]
[37.44380951 -200.41857910]
[34.04312515 -206.08839417]
[34.01980209 -211.77139282]
[36.52440643 -215.83784485]
[35.85462189 -230.82287598]
[35.18483734 -245.80792236]
[34.51505280 -260.79296875]
[33.84526825 -275.77798462]
[20.31846809 -282.91754150]
[12.23483467 -295.78421021]
[11.68053341 -310.86929321]
[18.70436096 -324.11773682]
[31.33149147 -332.01846313]
[30.66170692 -347.00347900]
[29.99192047 -361.98852539]
[15.59903717 -366.80612183]
[3.92088938 -376.50073242]
[-3.46314764 -389.76123047]
[-5.55444431 -404.79421997]
[-2.07016897 -419.56661987]
[6.51845789 -432.08062744]
[19.04989624 -440.64376831]
[33.82936859 -444.09799194]
[48.85807800 -441.97610474]
[62.10351181 -434.56509399]
[71.77433014 -422.86724854]
[76.56264496 -408.46459961]
[75.82086182 -393.30496216]
[69.64931488 -379.43859863]
[58.88264465 -368.74078369]
[44.97695923 -362.65832520]
[45.64674377 -347.67327881]
[46.31653214 -332.68823242]
[59.59817505 -325.94558716]
[67.77596283 -313.37658691]
[68.56969452 -298.30221558]
[61.66620636 -284.76565552]
[48.83030701 -276.44778442]
[49.50009155 -261.46273804]
[50.16987610 -246.47770691]
[50.83966064 -231.49266052]
[51.50944519 -216.50762939]
[52.40226364 -201.53422546]
[53.51791000 -186.57575989]
[54.63356018 -171.61730957]
[65.28127289 -157.66764832]
[57.14805603 -141.14698792]
[58.48628998 -126.20680237]
[60.49030304 -111.34127045]
[63.15609741 -96.58005524]
[65.82189178 -81.81884003]
[68.48768616 -67.05762482]
[71.48246002 -52.35961914]
[74.80472565 -37.73215866]
[90.44554138 -34.45871735]
[103.13920593 -24.65644455]
[110.31339264 -10.24760628]
[110.48638916 5.90573263]
[103.57279968 20.57018089]
[90.91084290 30.78824234]
[94.45051575 45.36462021]
[97.99018860 59.94099426]
[101.52986145 74.51737213]
[105.06953430 89.09374237]
[108.82583618 103.61580658]
[112.79792786 118.08032990]
[116.77002716 132.54484558]
[120.74212646 147.00936890]
[127.01948547 160.63269043]
[135.43409729 173.05018616]
[142.83882141 178.39883423]
[143.87994385 185.71578979]
[152.10876465 198.25718689]
[160.33757019 210.79859924]
[174.37727356 218.09223938]
[174.89018250 232.97801208]
[183.11898804 245.51940918]
[196.53428650 246.72134399]
[206.66009521 255.30494690]
[209.94464111 267.96566772]
[205.40565491 280.02499390]
[213.44683838 292.68750000]
[221.48800659 305.35003662]
[229.52917480 318.01254272]
[231.81259155 303.18737793]
[242.29171753 292.45480347]
[257.05810547 289.81787109]
[270.60427856 296.26004028]
[277.87780762 309.37854004]
[276.16589355 324.28054810]
[266.10699463 335.40792847]
[251.45286560 338.61047363]
[237.66822815 332.69293213]
[244.14772034 346.22128296]
[250.62722778 359.74960327]
[257.10671997 373.27795410]
[263.58621216 386.80630493]
[278.04968262 382.69338989]
[293.00021362 381.08410645]
[308.00762939 382.02481079]
[322.64019775 385.48843384]
[336.47683716 391.37527466]
[349.11947632 399.51599121]
[360.20437622 409.67636108]
[369.41259766 421.56405640]
[376.47915649 434.83700562]
[381.20077515 449.11337280]
[383.44158936 463.98236084]
[383.13714600 479.01617432]
[380.29620361 493.78222656]
[375.00045776 507.85574341]
[367.40231323 520.83172607]
[357.72039795 532.33685303]
[346.23324585 542.04010010]
[333.27136230 549.66235352]
[319.20773315 554.98419189]
[304.44696045 557.85253906]
[289.41375732 558.18487549]
[274.54061890 555.97167969]
[260.25552368 551.27655029]
[246.96948242 544.23461914]
[235.06472778 535.04852295]
[224.88378906 523.98248291]
[216.71961975 511.35498047]
[210.80709839 497.52926636]
[207.31634521 482.90316772]
[206.34777832 467.89749146]
[207.92929077 452.94403076]
[212.01538086 438.47293091]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 178]
[4 177]
[5 176]
[6 175]
[7 174]
[8 165]
[9 164]
[10 163]
[11 162]
[14 158]
[15 157]
[17 155]
[18 154]
[19 153]
[20 151]
[21 150]
[44 149]
[45 148]
[46 147]
[47 146]
[50 145]
[51 144]
[52 143]
[53 142]
[54 141]
[61 135]
[62 134]
[66 133]
[67 132]
[68 131]
[69 130]
[76 129]
[77 128]
[80 126]
[81 125]
[82 124]
[85 123]
[86 122]
[87 121]
[88 120]
[89 119]
[94 114]
[95 113]
[96 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
