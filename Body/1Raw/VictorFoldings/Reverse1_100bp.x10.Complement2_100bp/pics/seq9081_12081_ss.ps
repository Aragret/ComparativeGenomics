%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[316.14532471 469.92340088]
[307.73068237 457.50588989]
[299.31607056 445.08840942]
[290.90145874 432.67089844]
[277.35659790 426.47528076]
[276.02023315 410.71060181]
[267.60562134 398.29312134]
[259.19100952 385.87561035]
[250.77638245 373.45812988]
[248.05213928 372.79733276]
[245.42550659 371.01760864]
[243.32395935 368.15075684]
[242.15562439 364.38253784]
[242.25637817 360.04156494]
[234.59577942 347.14526367]
[226.93518066 334.24893188]
[219.27458191 321.35260010]
[211.61398315 308.45626831]
[203.95338440 295.55993652]
[191.14463806 294.15798950]
[181.33566284 285.50549316]
[178.25579834 272.59329224]
[183.24736023 260.08334351]
[175.77961731 247.07437134]
[168.31187439 234.06542969]
[153.50788879 232.65829468]
[142.23783875 222.68582153]
[138.96267700 207.81550598]
[145.14306641 193.70489502]
[137.67532349 180.69595337]
[130.20758057 167.68699646]
[115.40359497 166.27986145]
[104.13355255 156.30740356]
[100.85838318 141.43707275]
[107.03877258 127.32646942]
[99.57102966 114.31752014]
[87.57736206 107.13116455]
[87.42002106 93.15022278]
[84.47690582 107.85865784]
[73.52899170 118.11259460]
[58.65958023 120.08756256]
[45.41458511 113.04695129]
[38.73407364 99.61673737]
[41.10970306 84.80605316]
[51.65542603 74.13891602]
[66.43795013 71.59391022]
[79.94460297 78.12106323]
[74.07563782 64.31688690]
[59.69362640 58.33396149]
[53.93830872 44.25095749]
[59.73074722 30.57677460]
[53.86178970 16.77259827]
[47.99282837 2.96842074]
[42.12386703 -10.83575630]
[36.25490570 -24.63993263]
[30.38594437 -38.44411087]
[24.51698303 -52.24828720]
[12.86906528 -57.78803635]
[8.26498222 -69.40638733]
[12.66586113 -80.67398834]
[7.00307465 -94.56401825]
[-5.37150812 -104.42201996]
[-3.01154232 -119.12847900]
[-8.67432880 -133.01850891]
[-14.33711529 -146.90853882]
[-19.99990273 -160.79855347]
[-25.66268921 -174.68858337]
[-26.73156357 -159.72671509]
[-31.17667961 -145.40048218]
[-38.76485825 -132.46141052]
[-49.09803772 -121.58826447]
[-61.63415909 -113.35141754]
[-75.71559906 -108.18296051]
[-90.60368347 -106.35401917]
[-105.51740265 -107.96054077]
[-119.67442322 -112.91825104]
[-132.33209229 -120.96707916]
[-142.82640076 -131.68478394]
[-150.60685730 -144.50917053]
[-155.26530457 -158.76745605]
[-156.55737305 -173.71170044]
[-154.41526794 -188.55796814]
[-148.95140076 -202.52743530]
[-140.45234680 -214.88729858]
[-129.36398315 -224.98918152]
[-116.26795959 -232.30316162]
[-101.85128784 -236.44557190]
[-86.87022400 -237.19909668]
[-72.11065674 -234.52420044]
[-58.34682846 -228.56123352]
[-46.30077362 -219.62297058]
[-36.60439682 -208.17829895]
[-29.76577377 -194.82604980]
[-29.98910141 -209.82438660]
[-30.21242905 -224.82272339]
[-30.43575668 -239.82106018]
[-30.65908432 -254.81939697]
[-30.88241196 -269.81774902]
[-44.90193558 -275.76525879]
[-55.28558350 -286.90524292]
[-60.23433304 -301.30767822]
[-58.89078140 -316.47720337]
[-51.48770523 -329.78564453]
[-39.30773544 -338.92721558]
[-24.46112251 -342.31805420]
[-9.52013302 -339.37075806]
[2.92661691 -330.59588623]
[10.72265148 -317.51376343]
[12.51726151 -302.39096069]
[7.99951982 -287.84756470]
[-2.04784822 -276.40335083]
[-15.88407516 -270.04107666]
[-15.66074753 -255.04272461]
[-15.43741894 -240.04438782]
[-15.21409130 -225.04605103]
[-14.99076366 -210.04771423]
[-14.76743603 -195.04937744]
[-11.77266216 -180.35137939]
[-6.10987520 -166.46134949]
[-0.44708866 -152.57131958]
[5.21569777 -138.68128967]
[10.87848473 -124.79126740]
[22.84802628 -115.92676544]
[20.89310074 -100.22680664]
[26.55588722 -86.33677673]
[40.97827911 -76.33869934]
[38.32115936 -58.11724854]
[44.19012070 -44.31307220]
[50.05908203 -30.50889397]
[55.92804337 -16.70471764]
[61.79700470 -2.90054011]
[67.66596222 10.90363693]
[73.53492737 24.70781326]
[87.40123749 30.02391243]
[93.54985046 43.93970490]
[87.87981415 58.44792557]
[93.74877930 72.25210571]
[100.42897034 85.68247986]
[112.42263794 92.86883545]
[112.57997894 106.84977722]
[120.04772186 119.85873413]
[135.34941101 121.63762665]
[146.53878784 131.96482849]
[149.46696472 146.72592163]
[143.21653748 160.21925354]
[150.68428040 173.22821045]
[158.15200806 186.23716736]
[173.45370483 188.01605225]
[184.64308167 198.34326172]
[187.57125854 213.10435486]
[181.32083130 226.59768677]
[188.78855896 239.60664368]
[196.25630188 252.61558533]
[213.22320557 256.87515259]
[221.69317627 271.79406738]
[216.84971619 287.89935303]
[224.51031494 300.79568481]
[232.17091370 313.69198608]
[239.83151245 326.58831787]
[247.49211121 339.48464966]
[255.15269470 352.38098145]
[263.19387817 365.04351807]
[271.60848999 377.46099854]
[280.02310181 389.87850952]
[288.43774414 402.29598999]
[302.58447266 409.37979126]
[303.31893921 424.25628662]
[311.73358154 436.67376709]
[320.14819336 449.09127808]
[328.56280518 461.50875854]
[342.09686279 454.97827148]
[356.43756104 450.48803711]
[371.27923584 448.13378906]
[386.30554199 447.96563721]
[401.19616699 449.98724365]
[415.63372803 454.15548706]
[429.31051636 460.38153076]
[441.93496704 468.53265381]
[453.23803711 478.43511963]
[462.97875977 489.87786865]
[470.94952393 502.61697388]
[476.98043823 516.38092041]
[480.94293213 530.87628174]
[482.75256348 545.79418945]
[482.37078857 560.81658936]
[479.80566406 575.62322998]
[475.11196899 589.89862061]
[468.38964844 603.33843994]
[459.78207397 615.65618896]
[449.47265625 626.58935547]
[437.68118286 635.90490723]
[424.65893555 643.40417480]
[410.68356323 648.92742920]
[396.05288696 652.35693359]
[381.07876587 653.61950684]
[366.08041382 652.68829346]
[351.37750244 649.58312988]
[337.28341675 644.37023926]
[324.09857178 637.16064453]
[312.10400391 628.10809326]
[301.55538940 617.40557861]
[292.67755127 605.28112793]
[285.65975952 591.99322510]
[280.65158081 577.82507324]
[277.75973511 563.07873535]
[277.04589844 548.06848145]
[278.52526855 533.11419678]
[282.16632080 518.53479004]
[287.89144897 504.64086914]
[295.57861328 491.72863770]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 170]
[2 169]
[3 168]
[4 167]
[6 165]
[7 164]
[8 163]
[9 162]
[14 161]
[15 160]
[16 159]
[17 158]
[18 157]
[19 156]
[23 153]
[24 152]
[25 151]
[29 147]
[30 146]
[31 145]
[35 141]
[36 140]
[38 138]
[47 137]
[48 136]
[51 133]
[52 132]
[53 131]
[54 130]
[55 129]
[56 128]
[57 127]
[60 125]
[61 124]
[63 122]
[64 121]
[65 120]
[66 119]
[67 118]
[93 117]
[94 116]
[95 115]
[96 114]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
