%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[42.88233948 542.13812256]
[34.91582870 554.86096191]
[25.79292870 566.78179932]
[15.59381580 577.79602051]
[4.40812159 587.80676270]
[-7.66585159 596.72601318]
[-20.52199364 604.47546387]
[-34.04732513 610.98699951]
[-48.12297821 616.20336914]
[-62.62525558 620.07873535]
[-77.42670441 622.57904053]
[-92.39725494 623.68231201]
[-107.40532684 623.37884521]
[-122.31904602 621.67132568]
[-137.00732422 618.57476807]
[-151.34109497 614.11633301]
[-165.19439697 608.33526611]
[-178.44544983 601.28234863]
[-190.97784424 593.01953125]
[-202.68141174 583.61950684]
[-213.45329285 573.16479492]
[-223.19885254 561.74731445]
[-231.83242798 549.46740723]
[-239.27813721 536.43298340]
[-245.47056580 522.75866699]
[-250.35527039 508.56448364]
[-253.88934326 493.97528076]
[-256.04171753 479.11923218]
[-256.79345703 464.12692261]
[-256.13800049 449.13009644]
[-254.08106995 434.26055908]
[-250.64076233 419.64895630]
[-245.84730530 405.42373657]
[-239.74282837 391.70986938]
[-232.38096619 378.62792969]
[-223.82643127 366.29284668]
[-214.15438843 354.81301880]
[-203.44985962 344.28936768]
[-191.80690002 334.81433105]
[-179.32783508 326.47125244]
[-166.12232971 319.33337402]
[-152.30644226 313.46343994]
[-138.00160217 308.91308594]
[-123.33350372 305.72225952]
[-108.43106079 303.91900635]
[-93.42523956 303.51916504]
[-78.44792175 304.52630615]
[-63.63071823 306.93148804]
[-49.10385513 310.71365356]
[-34.99499512 315.83950806]
[-21.42812729 322.26403809]
[-13.76753044 309.36773682]
[-6.10693264 296.47140503]
[1.55366457 283.57507324]
[9.21426201 270.67874146]
[16.87485886 257.78240967]
[16.14670944 240.24855042]
[32.28124619 231.37396240]
[39.74898529 218.36500549]
[47.21672821 205.35604858]
[54.09614182 192.02662659]
[60.37350082 178.40330505]
[66.65086365 164.77999878]
[72.92822266 151.15667725]
[78.89978790 137.39657593]
[84.14650726 123.34410095]
[88.97250366 109.14164734]
[86.43765259 95.39151001]
[96.82504272 86.03235626]
[101.65103912 71.82990265]
[106.47703552 57.62744522]
[111.30303955 43.42499161]
[116.12903595 29.22253418]
[118.35414886 14.38849068]
[117.90754700 -0.60485905]
[117.46093750 -15.59820938]
[117.01433563 -30.59155846]
[105.79313660 -41.39537811]
[105.55380249 -56.60712814]
[115.92273712 -67.23824310]
[115.47613525 -82.23159790]
[115.02952576 -97.22494507]
[114.13671112 -112.19834900]
[112.79847717 -127.13853455]
[111.46024323 -142.07872009]
[110.12200928 -157.01890564]
[107.11773682 -161.28756714]
[106.14820862 -165.82774353]
[106.97612000 -169.81893921]
[109.07289886 -172.65370178]
[108.40311432 -187.63873291]
[107.73332977 -202.62377930]
[107.06353760 -217.60881042]
[106.39375305 -232.59385681]
[105.72396851 -247.57888794]
[105.05418396 -262.56393433]
[104.38439941 -277.54898071]
[90.19401550 -283.07644653]
[79.48328400 -293.90234375]
[74.10791779 -308.15103149]
[74.99922180 -323.35385132]
[82.00276947 -336.87680054]
[93.90516663 -346.37695312]
[108.64424133 -350.20834351]
[123.66635895 -347.70718384]
[136.36885071 -339.30679321]
[144.55093384 -326.46258545]
[146.79501343 -311.39993286]
[142.71228027 -296.72848511]
[133.01010132 -284.99017334]
[119.36943817 -278.21875000]
[120.03922272 -263.23370361]
[120.70900726 -248.24867249]
[121.37879181 -233.26364136]
[122.04857635 -218.27859497]
[122.71836853 -203.29356384]
[123.38815308 -188.30851746]
[124.05793762 -173.32348633]
[125.06219482 -158.35713196]
[126.40042877 -143.41696167]
[127.73866272 -128.47677612]
[129.07690430 -113.53658295]
[131.13905334 -111.63773346]
[132.57330322 -108.80762482]
[133.02117920 -105.28131866]
[132.21583557 -101.41920471]
[130.02287292 -97.67154694]
[130.46948242 -82.67819977]
[130.91609192 -67.68485260]
[141.89942932 -57.68975067]
[142.56593323 -42.49072647]
[132.00767517 -31.03816414]
[132.45428467 -16.04481506]
[132.90089417 -1.05146503]
[133.34750366 13.94188499]
[139.59996033 0.30711928]
[148.89511108 -11.46572685]
[160.70730591 -20.71084213]
[174.36848450 -26.90537071]
[189.10604858 -29.69898224]
[204.08651733 -28.93368340]
[218.46266174 -24.65275574]
[231.42146301 -17.09830666]
[242.23001099 -6.69757700]
[250.27705383 5.96122122]
[255.10746765 20.16217232]
[256.44808960 35.10214233]
[254.22311401 49.93620682]
[248.55833435 63.82542038]
[239.77413940 75.98429108]
[228.36734009 85.72516632]
[214.98301697 92.49715424]
[200.37812805 95.91727448]
[185.37864685 95.79209137]
[170.83287048 92.12869263]
[157.56344604 85.13425446]
[146.32080078 75.20435333]
[137.74076843 62.90056610]
[132.30859375 48.91873932]
[130.33148193 34.04853058]
[125.50549316 48.25098801]
[120.67949677 62.45344543]
[115.85349274 76.65589905]
[111.02749634 90.85835266]
[113.56234741 104.60848999]
[103.17495728 113.96764374]
[98.34896088 128.17010498]
[99.34584808 132.39622498]
[98.98260498 136.32466125]
[97.51982117 139.56436157]
[95.31833649 141.84912109]
[92.78981018 143.05935669]
[93.50177765 148.23045349]
[92.28107452 152.70964050]
[89.71489716 155.87663269]
[86.55153656 157.43403625]
[80.27417755 171.05735779]
[73.99681854 184.68066406]
[67.71945953 198.30398560]
[82.12969971 194.13926697]
[95.33023071 201.26289368]
[99.75917816 215.59413147]
[92.87944794 228.92340088]
[78.63205719 233.61508179]
[65.17855835 226.98156738]
[60.22568130 212.82379150]
[52.75793839 225.83274841]
[45.29019928 238.84170532]
[47.89988708 251.47309875]
[41.41217041 262.15454102]
[29.77118683 265.44302368]
[22.11058807 278.33935547]
[14.44999123 291.23565674]
[6.78939390 304.13198853]
[-0.87120342 317.02832031]
[-8.53180122 329.92465210]
[3.59981537 338.76538086]
[14.85025597 348.70327759]
[25.12064934 359.65103149]
[34.32073975 371.51245117]
[42.36967087 384.18325806]
[49.19670868 397.55209351]
[54.74185181 411.50149536]
[58.95637512 425.90887451]
[61.80323792 440.64758301]
[63.25741959 455.58813477]
[63.30614090 470.59918213]
[61.94897079 485.54885864]
[59.19784546 500.30575562]
[55.07693100 514.74017334]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[51 196]
[52 195]
[53 194]
[54 193]
[55 192]
[56 191]
[58 188]
[59 187]
[60 186]
[61 179]
[62 178]
[63 177]
[64 176]
[65 172]
[66 167]
[67 166]
[69 164]
[70 163]
[71 162]
[72 161]
[73 160]
[74 135]
[75 134]
[76 133]
[77 132]
[80 129]
[81 128]
[82 127]
[83 122]
[84 121]
[85 120]
[86 119]
[90 118]
[91 117]
[92 116]
[93 115]
[94 114]
[95 113]
[96 112]
[97 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
