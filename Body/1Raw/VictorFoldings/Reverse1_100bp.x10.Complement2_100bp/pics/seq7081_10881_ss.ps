%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[17.38458061 506.37640381]
[15.37451839 491.42242432]
[17.30429077 476.45785522]
[23.04232025 462.50302124]
[32.19738007 450.50936890]
[44.14526749 441.29467773]
[58.07134628 435.48721313]
[56.06733322 420.62167358]
[54.06332016 405.75616455]
[52.05930328 390.89062500]
[50.05529022 376.02508545]
[48.05127716 361.15957642]
[36.08770370 352.36135864]
[33.84358597 337.31414795]
[43.15307617 324.82531738]
[41.14906311 309.95977783]
[39.14505005 295.09423828]
[34.34501648 309.30551147]
[26.32507515 321.98147583]
[15.53879642 332.40530396]
[2.59619427 339.98745728]
[-11.77076340 344.29913330]
[-26.74955750 345.09649658]
[-41.49306107 342.33441162]
[-55.16746140 336.16912842]
[-66.99940491 326.94927979]
[-76.31973267 315.19635010]
[-82.60134125 301.57501221]
[-85.48896790 286.85556030]
[-84.81930542 271.87051392]
[-80.63023376 257.46734619]
[-73.15866089 244.46058655]
[-62.82714081 233.58586121]
[-50.21996689 225.45819092]
[-36.05014038 220.53721619]
[-21.11903191 219.10124207]
[-6.27106810 221.23150635]
[7.65402555 226.80749512]
[19.86871910 235.51388550]
[29.68221092 246.85829163]
[36.53950119 260.19912720]
[40.05290222 274.78292847]
[43.37516022 260.15548706]
[46.69742203 245.52801514]
[45.31933212 243.08691406]
[44.82516098 239.95283508]
[45.48369598 236.45974731]
[47.43798065 233.03259277]
[50.67739868 230.14120483]
[54.86441040 215.73742676]
[50.98726654 201.35629272]
[62.26912308 190.26438904]
[60.79484558 185.72175598]
[62.15857315 180.20475769]
[66.80117035 175.49754333]
[71.41518402 161.22480774]
[76.02919006 146.95207214]
[80.64319611 132.67935181]
[79.30482483 128.09483337]
[80.83220673 122.62088013]
[85.61289978 118.05398560]
[90.64981842 103.92495728]
[90.17504120 95.87839508]
[95.86833191 89.62400818]
[101.11505127 75.57154083]
[106.36177063 61.51906967]
[111.60848999 47.46659851]
[116.85520935 33.41412735]
[114.43370056 17.77932930]
[126.13401031 8.56238270]
[131.38072205 -5.49008799]
[130.51512146 -10.63769054]
[131.60191345 -15.15124321]
[134.07266235 -18.39322853]
[137.18824768 -20.04412842]
[135.46728516 -35.77145767]
[147.56748962 -44.45676422]
[153.43644714 -58.26094055]
[159.30540466 -72.06511688]
[165.17436218 -85.86929321]
[170.52554321 -99.88231659]
[175.35154724 -114.08477020]
[172.46560669 -129.64054871]
[183.88630676 -139.20176697]
[188.71231079 -153.40422058]
[193.53829956 -167.60667419]
[198.36430359 -181.80912781]
[203.19029236 -196.01158142]
[208.01629639 -210.21403503]
[207.10511780 -216.76242065]
[209.30720520 -222.00149536]
[213.20320129 -224.76379395]
[218.44992065 -238.81626892]
[223.69664001 -252.86872864]
[210.42930603 -259.91381836]
[198.19508362 -268.63040161]
[187.20330811 -278.86932373]
[177.64205933 -290.45541382]
[169.67495728 -303.19042969]
[163.43832397 -316.85641479]
[159.03886414 -331.21954346]
[156.55186462 -346.03408813]
[156.01988220 -361.04647827]
[157.45202637 -375.99987793]
[160.82379150 -390.63839722]
[166.07746887 -404.71154785]
[173.12316895 -417.97854614]
[181.84033203 -430.21234131]
[192.07980347 -441.20364380]
[203.66635132 -450.76431274]
[216.40173340 -458.73083496]
[230.06802368 -464.96679688]
[244.43136597 -469.36560059]
[259.24600220 -471.85186768]
[274.25842285 -472.38314819]
[289.21176147 -470.95028687]
[303.85009766 -467.57781982]
[317.92303467 -462.32348633]
[331.18966675 -455.27713013]
[343.42306519 -446.55938721]
[354.41387939 -436.31939697]
[363.97399902 -424.73239136]
[371.93991089 -411.99664307]
[378.17523193 -398.33004761]
[382.57333374 -383.96649170]
[385.05892944 -369.15173340]
[385.58947754 -354.13931274]
[384.15591431 -339.18603516]
[380.78274536 -324.54785156]
[375.52774048 -310.47518921]
[368.48077393 -297.20886230]
[359.76242065 -284.97589111]
[349.52191162 -273.98556519]
[337.93444824 -264.42599487]
[325.19833374 -256.46069336]
[311.53143311 -250.22601318]
[297.16766357 -245.82859802]
[282.35281372 -243.34371948]
[267.34033203 -242.81388855]
[252.38714600 -244.24816895]
[237.74909973 -247.62200928]
[232.50238037 -233.56954956]
[227.25566101 -219.51707458]
[222.21875000 -205.38804626]
[217.39276123 -191.18559265]
[212.56675720 -176.98313904]
[207.74075317 -162.78067017]
[202.91476440 -148.57821655]
[198.08876038 -134.37576294]
[201.31988525 -119.83585358]
[189.55400085 -109.25877380]
[184.72801208 -95.05632019]
[199.13169861 -99.24361420]
[211.47348022 -90.71831512]
[212.65542603 -75.76495361]
[201.80625916 -65.40659332]
[186.92358398 -67.27902985]
[178.97854614 -80.00033569]
[173.10958862 -66.19615936]
[167.24061584 -52.39197922]
[161.37165833 -38.58780289]
[163.51240540 -23.84784317]
[150.99243164 -14.17516804]
[145.43319702 -0.24337001]
[140.18647766 13.80910110]
[142.98326111 28.43877220]
[130.90768433 38.66084290]
[125.66095734 52.71331406]
[120.41424561 66.76578522]
[115.16752625 80.81826019]
[109.92080688 94.87072754]
[104.77884674 108.96186829]
[99.74192810 123.09089661]
[94.91593170 137.29335022]
[90.30192566 151.56608582]
[85.68791199 165.83882141]
[81.07390594 180.11155701]
[76.67290497 194.45140076]
[80.25056458 209.86279297]
[69.26819611 219.92443848]
[65.08118439 234.32821655]
[61.32488251 248.85028076]
[58.00262070 263.47775269]
[54.68036270 278.10519409]
[54.01057816 293.09024048]
[56.01459122 307.95578003]
[58.01860428 322.82128906]
[70.30288696 332.39907837]
[72.12347412 347.50338745]
[62.91680527 359.15554810]
[64.92082214 374.02108765]
[66.92483521 388.88662720]
[68.92884827 403.75213623]
[70.93286133 418.61767578]
[72.93687439 433.48318481]
[87.90367126 435.39562988]
[101.86514282 441.11749268]
[113.86937714 450.25866699]
[123.09789276 462.19586182]
[128.92149353 476.11520386]
[130.94309998 491.06765747]
[129.02488708 506.03369141]
[123.29763031 519.99298096]
[114.15184021 531.99365234]
[102.21107483 541.21759033]
[88.28948212 547.03582764]
[73.33625793 549.05163574]
[58.37094498 547.12762451]
[44.41389465 541.39501953]
[32.41672516 532.24456787]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 195]
[8 194]
[9 193]
[10 192]
[11 191]
[12 190]
[15 187]
[16 186]
[17 185]
[42 184]
[43 183]
[44 182]
[49 181]
[50 180]
[52 178]
[55 177]
[56 176]
[57 175]
[58 174]
[61 173]
[62 172]
[64 171]
[65 170]
[66 169]
[67 168]
[68 167]
[70 165]
[71 164]
[75 163]
[77 161]
[78 160]
[79 159]
[80 158]
[81 152]
[82 151]
[84 149]
[85 148]
[86 147]
[87 146]
[88 145]
[89 144]
[92 143]
[93 142]
[94 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
