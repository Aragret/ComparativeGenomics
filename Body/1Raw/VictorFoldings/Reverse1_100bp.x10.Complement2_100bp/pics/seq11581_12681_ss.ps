%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCCCCCAAACCUACUCUUACCGACAAUGAUGCUCCCGAUACACCGACUAACUUCUCAUACGUUACUCGCUAAAAUCCAGACAAACAGCAUCCGUCUAxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[193.55392456 528.43615723]
[204.45707703 518.05273438]
[217.28099060 510.16345215]
[212.24407959 496.03442383]
[207.20716858 481.90539551]
[198.51757812 494.13204956]
[183.54975891 495.11392212]
[173.33740234 484.12719727]
[175.40869141 469.27090454]
[188.23675537 461.49652100]
[202.36404419 466.53387451]
[198.39195251 452.06936646]
[194.41984558 437.60482788]
[190.44775391 423.14031982]
[186.47566223 408.67578125]
[173.44389343 401.55480957]
[169.20956421 386.94229126]
[176.76707458 373.32165527]
[172.79498291 358.85714722]
[168.82287598 344.39260864]
[157.99153137 334.16857910]
[161.79824829 318.81216431]
[157.82615662 304.34762573]
[153.53202820 289.97540283]
[148.91801453 275.70269775]
[137.64094543 265.97247314]
[140.75816345 250.46141052]
[136.14414978 236.18867493]
[124.86707306 226.45848083]
[127.98429108 210.94740295]
[123.37028503 196.67466736]
[118.75627136 182.40193176]
[114.14226532 168.12919617]
[102.86518860 158.39900208]
[105.98240662 142.88792419]
[101.36839294 128.61518860]
[86.90892029 125.48186493]
[75.94104767 115.55211639]
[71.39007568 101.47438049]
[74.46982574 87.00340271]
[84.35887146 75.99881744]
[79.74485779 61.72608566]
[75.10226440 57.01887512]
[73.73853302 51.50187683]
[75.21281433 46.95923996]
[71.02580261 32.55545807]
[66.83879089 18.15167618]
[62.65177917 3.74789500]
[51.74468994 -3.13673544]
[48.55384827 -15.21987724]
[54.26248550 -25.88467979]
[50.29039001 -40.34920502]
[46.31829453 -54.81372833]
[42.13128281 -69.21750641]
[37.73028564 -83.55735779]
[33.32928467 -97.89720154]
[28.92828751 -112.23705292]
[24.52729034 -126.57689667]
[18.39959145 -112.88561249]
[5.45249701 -105.31113434]
[-9.48504543 -106.67855072]
[-20.84170151 -116.47785187]
[-24.38172150 -131.05413818]
[-18.78476334 -144.97082520]
[-6.13835478 -153.03732300]
[8.84070587 -152.24502563]
[20.56624794 -142.88847351]
[17.90045166 -157.64968872]
[15.23465633 -172.41090393]
[12.56886101 -187.17213440]
[0.35120875 -200.94929504]
[6.92485523 -217.22056580]
[4.03958273 -231.94046021]
[1.15430987 -246.66035461]
[-1.84046447 -261.35836792]
[-4.94457436 -276.03366089]
[-8.04868507 -290.70895386]
[-11.37094402 -305.33642578]
[-14.91061687 -319.91278076]
[-28.12466431 -328.16061401]
[-31.50675011 -342.99356079]
[-23.56226921 -355.54031372]
[-27.10194206 -370.11669922]
[-30.64161491 -384.69305420]
[-45.70486450 -384.47799683]
[-60.43819046 -387.62075806]
[-74.10257721 -393.96365356]
[-86.01262665 -403.18853760]
[-95.57093048 -414.83270264]
[-102.29804993 -428.31207275]
[-105.85655975 -442.95053101]
[-106.06795502 -458.01382446]
[-102.92164612 -472.74639893]
[-96.57544708 -486.40924072]
[-87.34767151 -498.31707764]
[-75.70119476 -507.87255859]
[-62.22018814 -514.59637451]
[-47.58086014 -518.15136719]
[-32.51750565 -518.35913086]
[-17.78570366 -515.20922852]
[-4.12439251 -508.85971069]
[7.78118277 -499.62905884]
[17.33384323 -487.98025513]
[24.05443001 -474.49765015]
[27.60584259 -459.85745239]
[27.80994415 -444.79403687]
[24.65649605 -430.06298828]
[18.30367470 -416.40322876]
[9.07013321 -404.49987793]
[-2.58097625 -394.95004272]
[-16.06523895 -388.23272705]
[-12.52556705 -373.65637207]
[-8.98589420 -359.07998657]
[3.82808018 -351.57415771]
[7.62545729 -336.84204102]
[-0.33424127 -323.45245361]
[3.20543122 -308.87609863]
[6.74556780 -305.67041016]
[8.30949116 -300.20678711]
[6.62661791 -293.81307983]
[9.73072815 -279.13775635]
[12.83483791 -264.46246338]
[17.29447937 -258.56896973]
[15.87420082 -249.54562378]
[18.75947380 -234.82572937]
[21.64474678 -220.10583496]
[31.50555420 -213.09933472]
[34.02978897 -200.85957336]
[27.33007812 -189.83792114]
[29.99587440 -175.07670593]
[32.66167068 -160.31549072]
[35.32746506 -145.55427551]
[38.86713791 -130.97789001]
[43.26813507 -116.63804626]
[47.66913223 -102.29820251]
[52.07013321 -87.95835114]
[56.47113037 -73.61850739]
[60.19579697 -70.62921143]
[62.08214569 -65.26835632]
[60.78281784 -58.78582382]
[64.75491333 -44.32130051]
[68.72701263 -29.85677528]
[81.85913086 -18.21570969]
[77.05556488 -0.43911633]
[81.24257660 13.96466541]
[85.42958832 28.36844826]
[89.61660004 42.77222824]
[94.01759338 57.11207581]
[98.63160706 71.38481140]
[113.09107971 74.51813507]
[124.05895233 84.44788361]
[128.60992432 98.52561951]
[125.53017426 112.99659729]
[115.64112854 124.00118256]
[120.25514221 138.27391052]
[131.86224365 149.02499390]
[128.41499329 163.51518250]
[133.02900696 177.78791809]
[137.64302063 192.06065369]
[142.25701904 206.33338928]
[153.86412048 217.08447266]
[150.41688538 231.57466125]
[155.03089905 245.84739685]
[166.63800049 256.59848022]
[163.19075012 271.08868408]
[167.80476379 285.36141968]
[171.67985535 288.85864258]
[173.63088989 293.07135010]
[173.70751953 297.14678955]
[172.29067993 300.37554932]
[176.26277161 314.84005737]
[187.37823486 326.09869385]
[183.28741455 340.42050171]
[187.25950623 354.88504028]
[191.23159790 369.34954834]
[204.68536377 377.20031738]
[208.50756836 391.92596436]
[200.94018555 404.70370483]
[204.91227722 419.16821289]
[208.88436890 433.63275146]
[212.85647583 448.09725952]
[216.82856750 462.56179810]
[221.33619690 476.86846924]
[226.37310791 490.99749756]
[231.41003418 505.12652588]
[246.33265686 503.12432861]
[261.34542847 504.26885986]
[275.79208374 508.51007080]
[289.04104614 515.66259766]
[300.51315308 525.41375732]
[309.70687866 537.33721924]
[316.22030640 550.91180420]
[319.76867676 565.54400635]
[320.19692993 580.59429932]
[317.48629761 595.40460205]
[311.75531006 609.32763672]
[303.25445557 621.75457764]
[292.35540771 632.14227295]
[279.53457642 640.03656006]
[265.35247803 645.09240723]
[250.42906189 647.08874512]
[235.41671753 645.93835449]
[220.97174072 641.69140625]
[207.72558594 634.53369141]
[196.25733948 624.77801514]
[187.06831360 612.85095215]
[180.56022644 599.27380371]
[177.01759338 584.64019775]
[176.59526062 569.58972168]
[179.31172180 554.78045654]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 185]
[4 184]
[5 183]
[11 182]
[12 181]
[13 180]
[14 179]
[15 178]
[18 175]
[19 174]
[20 173]
[22 171]
[23 170]
[24 166]
[25 165]
[27 163]
[28 162]
[30 160]
[31 159]
[32 158]
[33 157]
[35 155]
[36 154]
[41 149]
[42 148]
[45 147]
[46 146]
[47 145]
[48 144]
[51 142]
[52 141]
[53 140]
[54 137]
[55 136]
[56 135]
[57 134]
[58 133]
[67 132]
[68 131]
[69 130]
[70 129]
[72 126]
[73 125]
[74 124]
[75 122]
[76 121]
[77 120]
[78 117]
[79 116]
[82 113]
[83 112]
[84 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
