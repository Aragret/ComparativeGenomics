%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAGAAAUGAUAUUUUCGAUAACACAUUCGAUCAGUAUAAUUCAACAACCGAGUCCUCAAACUAUCAAGAACCCGUCACUCUCACUCAUCAUCUUACAAxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[54.17969131 498.11102295]
[60.80204773 511.67739868]
[63.51753235 526.52758789]
[62.12462616 541.55963135]
[56.72670364 555.65808105]
[47.72431946 567.77661133]
[35.78551102 577.01605225]
[21.79621887 582.69079590]
[6.79454184 584.37963867]
[-8.10629749 581.95733643]
[-21.80055618 575.60363770]
[-33.27203369 565.78997803]
[-41.66946411 553.24462891]
[-46.36970520 538.89849854]
[-47.02396774 523.81628418]
[-43.58370209 509.11703491]
[-36.30419922 495.89163208]
[-25.72564316 485.12145996]
[-12.63303661 477.60571289]
[2.00206375 473.90216064]
[17.09363556 474.28558350]
[21.49463463 459.94573975]
[25.89563179 445.60589600]
[30.29663086 431.26605225]
[34.48364258 416.86227417]
[38.45573807 402.39773560]
[42.42783356 387.93322754]
[38.33700562 373.61138916]
[49.45247269 362.35275269]
[53.42456818 347.88824463]
[57.39666367 333.42370605]
[60.93633652 318.84732056]
[64.04044342 304.17202759]
[67.14455414 289.49673462]
[70.24866486 274.82141113]
[73.35277557 260.14611816]
[76.45688629 245.47082520]
[78.79237366 230.65374756]
[80.35289764 215.73515320]
[81.91342163 200.81654358]
[83.47394562 185.89793396]
[85.03446960 170.97933960]
[73.85562897 161.17262268]
[70.55590057 146.49012756]
[76.60521698 132.51660156]
[89.87602234 124.69407654]
[91.43653870 109.77547455]
[92.55219269 94.81701660]
[93.22197723 79.83197784]
[93.89176178 64.84693909]
[94.56154633 49.86190414]
[82.59796906 40.15731430]
[78.68843842 25.44103432]
[84.12966919 11.41046238]
[96.63956451 3.37053227]
[97.30934906 -11.61450672]
[97.97913361 -26.59954453]
[97.86746979 -41.59912872]
[96.97465515 -56.57253647]
[96.08184052 -71.54594421]
[95.18902588 -86.51934814]
[94.29620361 -101.49275208]
[85.75122070 -114.80792236]
[92.71726227 -127.97316742]
[91.82444763 -142.94656372]
[90.93163300 -157.91998291]
[90.03881836 -172.89338684]
[89.14600372 -187.86679077]
[88.25318909 -202.84019470]
[87.36036682 -217.81359863]
[86.46755219 -232.78700256]
[85.57473755 -247.76040649]
[83.34962463 -262.59445190]
[79.80995178 -277.17083740]
[76.27027893 -291.74719238]
[72.46706390 -277.23736572]
[64.21350098 -264.71224976]
[52.38059998 -255.49365234]
[38.21711731 -250.55444336]
[23.21775627 -250.41587830]
[8.96543884 -255.09255981]
[-3.03575563 -264.09097290]
[-11.51931286 -276.46148682]
[-15.58994198 -290.89859009]
[-14.81805992 -305.87869263]
[-9.28512573 -319.82095337]
[0.42495710 -331.25399780]
[13.28746033 -338.97125244]
[27.94497490 -342.15829468]
[42.85065460 -340.47882080]
[56.43147278 -334.11004639]
[67.25420380 -323.72406006]
[74.17677307 -310.41677856]
[74.40010071 -325.41513062]
[74.62342834 -340.41345215]
[74.84675598 -355.41180420]
[75.07008362 -370.41012573]
[75.29341125 -385.40847778]
[61.21279526 -391.07421875]
[50.13238525 -401.44671631]
[43.55071640 -415.12319946]
[42.35791016 -430.25402832]
[46.71527481 -444.79284668]
[56.03351974 -456.77343750]
[69.05242920 -464.57553101]
[84.01129913 -467.14392090]
[98.88706207 -464.13128662]
[111.66790009 -455.94503784]
[120.62531281 -443.69232178]
[124.54787445 -429.03018188]
[122.90509033 -413.94158936]
[115.91914368 -400.46713257]
[104.53481293 -390.42913818]
[90.29174805 -385.18515015]
[90.06842041 -370.18679810]
[89.84509277 -355.18847656]
[89.62176514 -340.19012451]
[89.39843750 -325.19180298]
[89.17510986 -310.19345093]
[90.84664917 -295.28686523]
[94.38632202 -280.71051025]
[97.92599487 -266.13412476]
[102.85067749 -280.30267334]
[113.37364960 -290.99224854]
[127.46308899 -296.13888550]
[142.39854431 -294.74880981]
[155.29620361 -287.09048462]
[163.66575623 -274.64254761]
[165.89114380 -259.80856323]
[161.54269409 -245.45268250]
[151.46003723 -234.34684753]
[137.58995056 -228.63539124]
[122.61054230 -229.42111206]
[109.41410065 -236.55230713]
[100.54814148 -248.65322876]
[101.44096375 -233.67982483]
[102.33377838 -218.70642090]
[103.22659302 -203.73301697]
[104.11940765 -188.75959778]
[105.01222229 -173.78619385]
[105.90503693 -158.81278992]
[106.79785156 -143.83938599]
[107.69067383 -128.86598206]
[116.17179108 -116.62180328]
[109.26961517 -102.38556671]
[110.16242981 -87.41216278]
[111.05524445 -72.43875885]
[111.94805908 -57.46535110]
[112.84087372 -42.49194717]
[122.73153687 -53.76912689]
[137.53739929 -56.17457581]
[150.48944092 -48.60855484]
[155.66615295 -34.53013992]
[150.70080566 -20.37580109]
[137.86349487 -12.61670589]
[123.02327728 -14.80021095]
[112.96417236 -25.92975998]
[112.29438782 -10.94472122]
[111.62460327 4.04031754]
[123.36733246 13.16426468]
[127.53511810 27.62433052]
[122.32825470 41.93313599]
[109.54658508 50.53168869]
[108.87680054 65.51672363]
[108.20701599 80.50176239]
[107.53723145 95.48680115]
[109.39597321 97.90229034]
[110.41690063 101.04748535]
[110.32805634 104.61337280]
[108.97542572 108.19480133]
[106.35514832 111.33599854]
[104.79462433 126.25460052]
[116.15936279 136.65406799]
[119.18603516 151.57695007]
[112.91933441 165.25878906]
[99.95307159 172.53985596]
[98.39254761 187.45846558]
[96.83202362 202.37705994]
[95.27149963 217.29566956]
[93.71097565 232.21427917]
[105.30800629 222.70066833]
[120.30795288 222.74147034]
[131.85304260 232.31806946]
[134.66500854 247.05213928]
[127.45826721 260.20745850]
[113.52764130 265.76962280]
[99.24201965 261.19567871]
[91.13218689 248.57493591]
[88.02807617 263.25024414]
[84.92396545 277.92553711]
[81.81986237 292.60083008]
[78.71575165 307.27615356]
[75.61164093 321.95144653]
[77.10366058 326.02917480]
[77.20980835 329.97293091]
[76.14237213 333.36349487]
[74.22798157 335.89367676]
[71.86119080 337.39581299]
[67.88909149 351.86032104]
[63.91699600 366.32485962]
[67.72370911 381.68127441]
[56.89235687 391.90530396]
[52.92026138 406.36984253]
[48.94816589 420.83435059]
[50.24749374 427.31689453]
[48.36114502 432.67773438]
[44.63647842 435.66705322]
[40.23548126 450.00689697]
[35.83448029 464.34674072]
[31.43348312 478.68658447]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 210]
[22 209]
[23 208]
[24 207]
[25 204]
[26 203]
[27 202]
[29 200]
[30 199]
[31 198]
[32 193]
[33 192]
[34 191]
[35 190]
[36 189]
[37 188]
[38 180]
[39 179]
[40 178]
[41 177]
[42 176]
[46 172]
[47 171]
[48 166]
[49 165]
[50 164]
[51 163]
[55 159]
[56 158]
[57 157]
[58 149]
[59 148]
[60 147]
[61 146]
[62 145]
[64 143]
[65 142]
[66 141]
[67 140]
[68 139]
[69 138]
[70 137]
[71 136]
[72 135]
[73 122]
[74 121]
[75 120]
[93 119]
[94 118]
[95 117]
[96 116]
[97 115]
[98 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
