%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[163.49858093 581.63873291]
[154.56631470 594.47418213]
[139.45988464 598.51525879]
[125.31211090 591.85382080]
[118.80313110 577.63525391]
[123.00628662 562.57312012]
[135.93698120 553.77929688]
[137.27520752 538.83911133]
[138.61344910 523.89892578]
[139.95167542 508.95877075]
[141.28991699 494.01858521]
[142.62814331 479.07839966]
[143.63240051 464.11206055]
[144.30218506 449.12701416]
[144.97198486 434.14196777]
[145.64176941 419.15695190]
[138.48048401 406.09686279]
[146.82627869 392.65594482]
[146.82627869 377.65594482]
[146.15649414 362.67089844]
[145.48670959 347.68588257]
[144.81692505 332.70083618]
[142.81291199 317.83529663]
[139.49064636 303.20785522]
[136.16838074 288.58038330]
[123.46758270 280.88458252]
[119.88996887 266.09759521]
[128.04812622 252.82800293]
[124.72587585 238.20054626]
[121.40361786 223.57308960]
[118.08135223 208.94563293]
[114.75909424 194.31816101]
[111.43683624 179.69070435]
[108.00577545 165.08837891]
[104.46610260 150.51200867]
[93.94395447 139.97001648]
[98.20620728 124.73374176]
[94.66653442 110.15736389]
[88.92515564 124.01509094]
[77.08453369 133.22377014]
[62.23977661 135.37626648]
[48.27127075 129.90992737]
[38.83034897 118.25363922]
[36.38484573 103.45433044]
[41.57400894 89.38050842]
[53.04140472 79.71102142]
[67.78948212 76.97347260]
[81.96312714 81.88343048]
[91.85699463 93.15666199]
[90.51876068 78.21647644]
[89.18052673 63.27628708]
[86.17625427 59.00763321]
[85.20671844 54.46744537]
[86.03462982 50.47625351]
[88.13141632 47.64149475]
[87.46163177 32.65645599]
[86.68030548 17.67681885]
[85.78749084 2.70341325]
[84.89467621 -12.26999283]
[84.00186157 -27.24339867]
[70.73063660 -32.10356903]
[60.34565353 -41.62598419]
[54.39252090 -54.34863281]
[53.74012375 -68.33666229]
[58.45398331 -81.47663116]
[67.79132080 -91.79583740]
[80.31791687 -97.75843811]
[79.64813232 -112.74347687]
[78.97834778 -127.72851562]
[70.63256073 -141.16943359]
[77.79383850 -154.22950745]
[77.12405396 -169.21453857]
[76.45426941 -184.19958496]
[63.83543015 -187.30819702]
[52.46422577 -193.57266235]
[43.11339951 -202.55929565]
[36.41632462 -213.64968872]
[32.82411575 -226.08328247]
[32.57522964 -239.00949097]
[35.67966080 -251.54594421]
[41.91874313 -262.83865356]
[50.86051941 -272.12026978]
[61.88964462 -278.76211548]
[74.24974823 -282.31686401]
[74.24974823 -297.31686401]
[74.24974823 -312.31686401]
[74.24974823 -327.31686401]
[74.24974823 -342.31686401]
[74.24974823 -357.31686401]
[65.69792175 -366.97238159]
[66.00672913 -379.46594238]
[74.46537018 -388.11334229]
[74.68869781 -403.11169434]
[74.91202545 -418.11001587]
[65.57258606 -433.98001099]
[75.15327454 -448.68298340]
[75.15327454 -463.68298340]
[75.15327454 -478.68298340]
[61.09609222 -484.46777344]
[50.32621765 -495.19522095]
[44.48598862 -509.22949219]
[44.46599197 -524.43041992]
[50.26927948 -538.47998047]
[61.01089096 -549.23571777]
[75.05281067 -555.05749512]
[90.25374603 -555.05749512]
[104.29566193 -549.23571777]
[115.03727722 -538.47998047]
[120.84056854 -524.43041992]
[120.82057190 -509.22949219]
[114.98033905 -495.19522095]
[104.21046448 -484.46777344]
[90.15327454 -478.68298340]
[90.15327454 -463.68298340]
[90.15327454 -448.68298340]
[98.48223114 -439.91058350]
[98.60499573 -427.41381836]
[89.91036224 -417.88668823]
[89.68703461 -402.88836670]
[89.46370697 -387.89001465]
[98.82443237 -373.04605103]
[89.24974823 -357.31686401]
[89.24974823 -342.31686401]
[89.24974823 -327.31686401]
[89.24974823 -312.31686401]
[89.24974823 -297.31686401]
[89.24974823 -282.31686401]
[105.46405792 -276.88104248]
[118.86045074 -266.21176147]
[127.81243134 -251.58287048]
[131.22573853 -234.75019836]
[128.67210388 -217.74089050]
[120.44286346 -202.60925293]
[107.51586914 -191.18864441]
[91.43930817 -184.86936951]
[92.10909271 -169.88432312]
[92.77887726 -154.89929199]
[101.07675934 -142.53019714]
[93.96338654 -128.39830017]
[94.63317108 -113.41326141]
[95.30295563 -98.42822266]
[110.11303711 -92.42721558]
[120.86257935 -80.52506256]
[125.36182404 -65.07060242]
[122.66130066 -49.14366531]
[113.25160980 -35.94133759]
[98.97526550 -28.13621330]
[99.86808014 -13.16280842]
[100.76089478 1.81059730]
[101.65370941 16.78400230]
[105.18976593 23.27385139]
[102.44667053 31.98667145]
[103.11645508 46.97171021]
[104.12071228 61.93805313]
[105.45894623 76.87824249]
[106.79718018 91.81842804]
[109.24290466 106.61769867]
[112.78257751 121.19406891]
[123.55790710 132.77867126]
[119.04248047 146.97233582]
[122.58215332 161.54870605]
[127.64826202 169.14952087]
[126.06429291 176.36845398]
[129.38655090 190.99591064]
[132.70881653 205.62336731]
[136.03108215 220.25082397]
[139.35333252 234.87828064]
[142.67559814 249.50575256]
[155.76538086 257.94940186]
[158.92625427 272.83105469]
[150.79585266 285.25811768]
[154.11810303 299.88558960]
[157.44036865 314.51306152]
[162.57545471 300.41940308]
[173.25640869 289.88766479]
[187.42091370 284.95138550]
[202.33401489 286.56365967]
[215.11622620 294.41317749]
[223.29951477 306.98431396]
[225.30380249 321.84982300]
[220.74209595 336.13934326]
[210.49520874 347.09384155]
[196.54162598 352.59817505]
[181.57557678 351.58950806]
[168.48677063 344.26263428]
[159.80195618 332.03103638]
[160.47174072 347.01608276]
[161.14152527 362.00112915]
[161.81130981 376.98617554]
[172.70661926 366.67633057]
[187.70407104 366.95248413]
[198.21246338 377.65640259]
[198.21209717 392.65640259]
[187.70320129 403.35980225]
[172.70573425 403.63522339]
[161.81130981 393.32574463]
[168.92468262 407.45764160]
[160.62680054 419.82672119]
[159.95701599 434.81176758]
[159.28723145 449.79681396]
[158.61744690 464.78182983]
[161.02449036 469.41360474]
[161.37875366 474.04260254]
[160.02503967 477.88742065]
[157.56832886 480.41662598]
[156.23010254 495.35681152]
[154.89186096 510.29699707]
[153.55363464 525.23718262]
[152.21539307 540.17736816]
[150.87716675 555.11755371]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 210]
[8 209]
[9 208]
[10 207]
[11 206]
[12 205]
[13 201]
[14 200]
[15 199]
[16 198]
[18 196]
[19 189]
[20 188]
[21 187]
[22 186]
[23 173]
[24 172]
[25 171]
[28 168]
[29 167]
[30 166]
[31 165]
[32 164]
[33 163]
[34 161]
[35 160]
[37 158]
[38 157]
[49 156]
[50 155]
[51 154]
[55 153]
[56 152]
[57 150]
[58 149]
[59 148]
[60 147]
[67 141]
[68 140]
[69 139]
[71 137]
[72 136]
[73 135]
[84 127]
[85 126]
[86 125]
[87 124]
[88 123]
[89 122]
[92 120]
[93 119]
[94 118]
[96 115]
[97 114]
[98 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
