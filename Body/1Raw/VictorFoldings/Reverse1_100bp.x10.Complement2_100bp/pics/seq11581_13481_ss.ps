%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCCCCCAAACCUACUCUUACCGACAAUGAUGCUCCCGAUACACCGACUAACUUCUCAUACGUUACUCGCUAAAAUCCAGACAAACAGCAUCCGUCUAxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[248.77180481 559.57592773]
[261.48406982 551.49218750]
[256.44714355 537.36315918]
[251.41023254 523.23413086]
[246.37332153 509.10513306]
[241.33639526 494.97610474]
[230.54533386 489.50985718]
[226.23336792 477.77996826]
[231.22398376 465.88641357]
[226.39799500 451.68395996]
[221.57199097 437.48150635]
[216.74600220 423.27905273]
[211.91999817 409.07659912]
[206.98840332 394.91046143]
[201.84645081 380.81933594]
[196.59973145 366.76684570]
[191.35301208 352.71438599]
[186.10629272 338.66189575]
[175.23504639 333.35696411]
[170.74890137 321.69256592]
[175.56190491 309.72601318]
[170.52499390 295.59698486]
[165.48806763 281.46795654]
[160.13688660 267.45492554]
[154.47409058 253.56491089]
[142.50456238 244.70040894]
[144.45948792 229.00044250]
[138.79669189 215.11042786]
[133.13391113 201.22039795]
[121.16436768 192.35589600]
[123.11929321 176.65592957]
[111.14974976 167.79144287]
[113.10467529 152.09147644]
[107.44188690 138.20144653]
[101.77909851 124.31141663]
[96.11631012 110.42139435]
[89.31562805 123.79116058]
[75.09626770 128.56712341]
[61.60372925 122.01338959]
[56.56715012 107.88423920]
[62.87171555 94.27349091]
[76.90587616 88.97799683]
[90.62957764 95.03057861]
[86.22857666 80.69072723]
[81.82758331 66.35088348]
[77.42658234 52.01103210]
[73.02558136 37.67118835]
[68.51795959 23.36450005]
[63.90394592 9.09176636]
[59.26134872 4.38455629]
[57.89762115 -1.13244212]
[59.37189865 -5.67507887]
[55.18489075 -20.07886124]
[50.99787903 -34.48264313]
[46.49748993 -39.32599258]
[45.29862976 -44.88114929]
[46.90750504 -49.37787628]
[43.15120316 -63.89993668]
[39.39490509 -78.42199707]
[35.63860321 -92.94405365]
[31.88230133 -107.46611786]
[26.70358849 -114.99065399]
[28.17989731 -122.23236084]
[17.40457344 -133.81695557]
[21.92000008 -148.01063538]
[18.38032913 -162.58700562]
[14.40823174 -177.05152893]
[10.00723362 -191.39137268]
[5.60623598 -205.73121643]
[1.20523775 -220.07107544]
[-12.47630119 -227.51776123]
[-16.73526192 -242.12310791]
[-9.55166435 -255.12046814]
[-12.83377075 -257.96331787]
[-14.83886337 -261.36096191]
[-15.54933262 -264.84387207]
[-15.10188103 -267.98495483]
[-13.76028824 -270.44631958]
[-17.29996109 -285.02270508]
[-20.83963394 -299.59906006]
[-24.37930489 -314.17544556]
[-39.40139389 -313.36828613]
[-54.31598663 -315.33541870]
[-68.61509705 -320.00982666]
[-81.81169891 -327.23233032]
[-93.45632172 -336.75689697]
[-103.15235901 -348.25912476]
[-110.56956482 -361.34729004]
[-115.45531464 -375.57556152]
[-117.64319611 -390.45938110]
[-117.05869293 -405.49179077]
[-113.72171021 -420.16076660]
[-107.74591064 -433.96673584]
[-99.33482361 -446.43942261]
[-88.77493286 -457.15405273]
[-76.42589569 -465.74566650]
[-62.70832062 -471.92166138]
[-48.08942413 -475.47164917]
[-33.06711960 -476.27474976]
[-18.15305710 -474.30361938]
[-3.85521007 -469.62533569]
[9.33944511 -462.39929199]
[20.98150444 -452.87158203]
[30.67444038 -441.36672974]
[38.08811951 -428.27658081]
[42.97002792 -414.04699707]
[45.15390015 -399.16259766]
[44.56534195 -384.13034058]
[41.22441101 -369.46224976]
[35.24488831 -355.65789795]
[26.83044243 -343.18746948]
[16.26766014 -332.47570801]
[3.91630840 -323.88739014]
[-9.80292988 -317.71511841]
[-6.26325798 -303.13873291]
[-2.72358537 -288.56237793]
[0.81608701 -273.98599243]
[4.78818321 -259.52145386]
[18.02619553 -252.79162598]
[22.69370842 -238.31167603]
[15.54508495 -224.47206116]
[19.94608307 -210.13221741]
[24.34708023 -195.79237366]
[28.74807930 -181.45252991]
[31.15855026 -180.02153015]
[33.14741898 -177.54948425]
[34.31533432 -174.19218445]
[34.32665253 -170.24700928]
[32.95670319 -166.12667847]
[36.49637604 -151.55030823]
[47.01852036 -141.00830078]
[42.75627518 -125.77203369]
[46.40436172 -111.22241211]
[50.16066360 -96.70035553]
[53.91696167 -82.17829895]
[57.67326355 -67.65623474]
[61.42956543 -53.13417816]
[65.40165710 -38.66965485]
[69.58866882 -24.26587296]
[73.77568054 -9.86209011]
[78.17668152 4.47775698]
[82.79068756 18.75049019]
[87.83926392 24.14805603]
[87.36543274 33.27018738]
[91.76643372 47.61003494]
[96.16742706 61.94988251]
[100.56842804 76.28972626]
[104.96942139 90.62957764]
[110.00634003 104.75860596]
[115.66912842 118.64863586]
[121.33191681 132.53866577]
[126.99469757 146.42868042]
[139.36927795 156.28669739]
[137.00932312 170.99314880]
[149.38389587 180.85115051]
[147.02394104 195.55760193]
[152.68672180 209.44763184]
[158.34950256 223.33766174]
[170.72409058 233.19566345]
[168.36412048 247.90213013]
[174.02691650 261.79214478]
[178.15139771 264.99148560]
[180.41033936 269.04739380]
[180.78988647 273.10583496]
[179.61709595 276.43103027]
[184.65402222 290.56005859]
[189.69093323 304.68911743]
[203.99143982 316.28985596]
[200.15876770 333.41519165]
[205.40548706 347.46765137]
[210.65220642 361.52014160]
[215.89891052 375.57260132]
[221.83235168 382.51754761]
[221.11743164 389.87353516]
[226.94680786 396.90606689]
[226.12245178 404.25061035]
[230.94845581 418.45306396]
[235.77444458 432.65551758]
[240.60044861 446.85797119]
[245.42645264 461.06042480]
[259.55264282 472.87277222]
[255.46542358 489.93917847]
[260.50234985 504.06820679]
[265.53924561 518.19720459]
[270.57617188 532.32623291]
[275.61309814 546.45532227]
[290.57223511 544.67431641]
[305.55255127 546.26721191]
[319.80267334 551.15411377]
[332.60781860 559.08990479]
[343.32565308 569.67645264]
[351.41857910 582.38281250]
[356.48071289 596.57165527]
[358.25805664 611.53125000]
[356.66152954 626.51116943]
[351.77117920 640.76013184]
[343.83230591 653.56335449]
[333.24313354 664.27856445]
[320.53479004 672.36846924]
[306.34472656 677.42712402]
[291.38473511 679.20086670]
[276.40518188 677.60070801]
[262.15740967 672.70690918]
[249.35614014 664.76489258]
[238.64343262 654.17315674]
[230.55665588 641.46282959]
[225.50141907 627.27154541]
[223.73130798 612.31115723]
[225.33509827 597.33197021]
[230.23236084 583.08538818]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 186]
[3 185]
[4 184]
[5 183]
[6 182]
[9 180]
[10 179]
[11 178]
[12 177]
[13 176]
[14 174]
[15 172]
[16 171]
[17 170]
[18 169]
[21 167]
[22 166]
[23 165]
[24 161]
[25 160]
[27 158]
[28 157]
[29 156]
[31 154]
[33 152]
[34 151]
[35 150]
[36 149]
[43 148]
[44 147]
[45 146]
[46 145]
[47 144]
[48 142]
[49 141]
[52 140]
[53 139]
[54 138]
[57 137]
[58 136]
[59 135]
[60 134]
[61 133]
[63 132]
[65 130]
[66 129]
[67 124]
[68 123]
[69 122]
[70 121]
[73 118]
[78 117]
[79 116]
[80 115]
[81 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
