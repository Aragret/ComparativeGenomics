%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxCUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUA\
) } def
/len { sequence length } bind def

/coor [
[44.93837738 402.91613770]
[49.57534027 417.25473022]
[50.78000259 432.27624512]
[48.48740005 447.17056274]
[42.82116699 461.13446045]
[34.08688354 473.41488647]
[22.75556946 483.34957886]
[9.43831539 490.40277100]
[-5.14670038 494.19409180]
[-20.21292496 494.51907349]
[-34.94785309 491.36016846]
[-48.55685425 484.88778687]
[-60.30600739 475.45092773]
[-69.56169891 463.55856323]
[-75.82477570 449.85195923]
[-78.75748444 435.07034302]
[-78.20166779 420.01086426]
[-74.18729401 405.48568726]
[-66.93085480 392.27807617]
[-56.82368469 381.10034180]
[-44.41085052 372.55526733]
[-30.36175537 367.10369873]
[-15.43405437 365.03961182]
[-0.43277752 366.47430420]
[4.39321995 352.27185059]
[9.21921825 338.06939697]
[14.04521561 323.86694336]
[9.70435619 306.86331177]
[23.65312386 294.84194946]
[28.26713181 280.56921387]
[23.67359543 263.63208008]
[37.44183731 251.40435791]
[41.84283447 237.06451416]
[46.24383163 222.72465515]
[50.64482880 208.38481140]
[55.04582596 194.04496765]
[59.44682693 179.70512390]
[63.84782410 165.36526489]
[68.24882507 151.02542114]
[72.64981842 136.68557739]
[61.72920227 146.96858215]
[47.85896301 152.67967224]
[32.86397934 153.06745911]
[18.71709061 148.08091736]
[7.27956676 138.37611389]
[0.05621132 125.22989655]
[-2.00261974 110.37186432]
[1.37394810 95.75684357]
[9.74166965 83.30769348]
[21.99962616 74.66232300]
[36.53507614 70.95816803]
[51.43562317 72.68257904]
[64.74085236 79.60868073]
[74.70023346 90.82522583]
[80.00342560 104.85647583]
[79.95227814 119.85873413]
[87.42002106 106.84977722]
[87.57736206 92.86883545]
[99.57102966 85.68247986]
[107.03877258 72.67353058]
[114.50650787 59.66457367]
[121.97425079 46.65562439]
[129.24748230 33.53693008]
[136.32458496 20.31140137]
[143.40168762 7.08587360]
[150.47880554 -6.13965368]
[157.55590820 -19.36518097]
[164.63301086 -32.59070969]
[171.71011353 -45.81623459]
[178.78721619 -59.04176331]
[171.20629883 -74.16213989]
[174.10287476 -90.65792847]
[186.14028931 -102.06242371]
[202.43832397 -104.02487183]
[209.31773376 -117.35430145]
[216.19715881 -130.68373108]
[223.07656860 -144.01315308]
[228.73934937 -157.90318298]
[233.14035034 -172.24302673]
[237.54135132 -186.58288574]
[241.94235229 -200.92272949]
[228.04512024 -206.59486389]
[214.71228027 -213.48991394]
[202.05119324 -221.55236816]
[190.16380310 -230.71731567]
[179.14581299 -240.91094971]
[169.08593750 -252.05119324]
[160.06517029 -264.04837036]
[152.15614319 -276.80584717]
[145.42254639 -290.22094727]
[139.91859436 -304.18563843]
[135.68859863 -318.58749390]
[132.76661682 -333.31054688]
[131.17616272 -348.23626709]
[130.93006897 -363.24444580]
[132.03028870 -378.21426392]
[134.46798706 -393.02520752]
[138.22352600 -407.55801392]
[143.26666260 -421.69564819]
[149.55680847 -435.32431030]
[157.04328918 -448.33425903]
[165.66586304 -460.62072754]
[175.35507202 -472.08483887]
[186.03292847 -482.63421631]
[197.61344910 -492.18399048]
[210.00337219 -500.65722656]
[223.10298157 -507.98571777]
[236.80676270 -514.11041260]
[251.00440979 -518.98211670]
[265.58160400 -522.56146240]
[280.42095947 -524.81976318]
[295.40301514 -525.73870850]
[310.40710449 -525.31097412]
[325.31246948 -523.54003906]
[339.99908447 -520.44006348]
[354.34869385 -516.03607178]
[368.24575806 -510.36349487]
[381.57836914 -503.46804810]
[394.23919678 -495.40521240]
[406.12631226 -486.23989868]
[417.14401245 -476.04592896]
[427.20355225 -464.90539551]
[436.22393799 -452.90792847]
[444.13256836 -440.15020752]
[450.86575317 -426.73489380]
[456.36929321 -412.77001953]
[460.59884644 -398.36804199]
[463.52038574 -383.64489746]
[465.11038208 -368.71914673]
[465.35601807 -353.71096802]
[464.25534058 -338.74118042]
[461.81716919 -323.93029785]
[458.06121826 -309.39761353]
[453.01763916 -295.26013184]
[446.72708130 -281.63165283]
[439.24017334 -268.62194824]
[430.61724854 -256.33572388]
[420.92767334 -244.87193298]
[410.24951172 -234.32286072]
[398.66870117 -224.77345276]
[386.27850342 -216.30059814]
[373.17868042 -208.97251892]
[359.47470093 -202.84820557]
[345.27691650 -197.97695923]
[330.69961548 -194.39804077]
[315.86019897 -192.14022827]
[300.87811279 -191.22171021]
[285.87402344 -191.64988708]
[270.96871948 -193.42132568]
[256.28219604 -196.52172852]
[251.88119507 -182.18188477]
[247.48019409 -167.84204102]
[243.07919312 -153.50218201]
[254.54917908 -163.16859436]
[269.05560303 -166.98486328]
[283.79748535 -164.21414185]
[295.92840576 -155.39140320]
[303.10607910 -142.22018433]
[303.94461060 -127.24363708]
[298.28207397 -113.35350800]
[287.21185303 -103.23175049]
[272.87139893 -98.83272552]
[258.02963257 -101.00581360]
[245.55229187 -109.33142853]
[237.84852600 -122.20201874]
[236.40599060 -137.13374329]
[229.52658081 -123.80431366]
[222.64717102 -110.47488403]
[215.76776123 -97.14546204]
[222.84762573 -85.82655334]
[223.41459656 -72.37952423]
[217.21371460 -60.31226349]
[205.76954651 -52.82564163]
[192.01274109 -51.96465683]
[184.93563843 -38.73913193]
[177.85853577 -25.51360321]
[170.78143311 -12.28807545]
[163.70433044 0.93745160]
[156.62722778 14.16297913]
[149.55010986 27.38850594]
[142.47300720 40.61403275]
[142.97531128 45.36342621]
[140.49942017 50.47879028]
[134.98320007 54.12336349]
[127.51546478 67.13231659]
[120.04772186 80.14126587]
[112.57997894 93.15022278]
[112.42263794 107.13116455]
[100.42897034 114.31752014]
[92.96122742 127.32646942]
[86.98966980 141.08657837]
[82.58866882 155.42642212]
[78.18766785 169.76626587]
[73.78667450 184.10610962]
[69.38567352 198.44596863]
[64.98468018 212.78581238]
[60.58367920 227.12565613]
[56.18268204 241.46549988]
[51.78168106 255.80535889]
[57.12421036 267.54504395]
[53.16339493 279.39813232]
[42.53986740 285.18319702]
[37.92585754 299.45593262]
[43.09300613 311.27386475]
[38.95615387 323.06668091]
[28.24767113 328.69296265]
[23.42167282 342.89541626]
[18.59567642 357.09786987]
[13.76967812 371.30032349]
[26.53943062 379.30221558]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 209]
[25 208]
[26 207]
[27 206]
[29 203]
[30 202]
[32 199]
[33 198]
[34 197]
[35 196]
[36 195]
[37 194]
[38 193]
[39 192]
[40 191]
[56 190]
[57 189]
[59 187]
[60 186]
[61 185]
[62 184]
[63 181]
[64 180]
[65 179]
[66 178]
[67 177]
[68 176]
[69 175]
[70 174]
[74 169]
[75 168]
[76 167]
[77 166]
[78 153]
[79 152]
[80 151]
[81 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
