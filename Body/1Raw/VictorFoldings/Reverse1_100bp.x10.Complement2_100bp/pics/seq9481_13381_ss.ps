%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAUCGCCCCACUACGGACAACCCCCGGUCACGGGAGGAUUAACCCCCCAUCCCCGAUCCGACCUCACCAUUUUCCGAGUCUUUUUAGGACGCUUCUUUxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[67.38650513 233.87011719]
[75.31387329 246.64762878]
[80.96764374 260.58114624]
[84.18515015 275.26977539]
[84.87380981 290.29086304]
[83.01381683 305.21228027]
[78.65869141 319.60467529]
[71.93373108 333.05395508]
[63.03242493 345.17312622]
[52.21088409 355.61355591]
[39.78047180 364.07479858]
[26.09882736 370.31344604]
[11.55960274 374.14999390]
[-3.41887927 375.47402954]
[-18.40565872 374.24746704]
[-32.96953583 370.50561523]
[-46.69148254 364.35610962]
[-59.17668152 355.97592163]
[-70.06591797 345.60610962]
[-79.04588318 333.54510498]
[-85.85820770 320.13986206]
[-90.30688477 305.77612305]
[-92.26391602 290.86712646]
[-91.67299652 275.84185791]
[-88.55113220 261.13259888]
[-82.98813629 247.16259766]
[-75.14407349 234.33378601]
[-65.24462891 223.01525879]
[-53.57463074 213.53268433]
[-40.46984863 206.15888977]
[-26.30733681 201.10604858]
[-11.49457455 198.51953125]
[3.54224372 198.47375488]
[18.37047958 200.97003174]
[32.56349564 205.93655396]
[39.83672333 192.81787109]
[47.10995483 179.69917297]
[46.51429367 164.81648254]
[59.97263336 156.49880981]
[67.24586487 143.38011169]
[74.51908875 130.26141357]
[81.79232025 117.14272308]
[89.06555176 104.02403259]
[75.84347534 111.10758972]
[60.86133194 111.83928680]
[47.01193619 106.07784271]
[36.96939087 94.93569946]
[32.67275238 80.56423950]
[34.95163345 65.73835754]
[43.36602020 53.32070923]
[56.29122543 45.70893478]
[71.23159790 44.37275696]
[85.30237579 49.57017136]
[95.78672028 60.29763412]
[100.66027069 74.48384094]
[98.98159790 89.39086914]
[108.47049713 77.77360535]
[117.95939636 66.15634155]
[127.44829559 54.53907776]
[136.93719482 42.92181396]
[146.42608643 31.30455017]
[155.91499329 19.68728828]
[165.40388489 8.07002449]
[174.89279175 -3.54723907]
[170.36186218 -19.84345818]
[176.37733459 -35.47405243]
[190.38362122 -44.35016251]
[206.75480652 -43.14101028]
[216.06968689 -54.89826202]
[225.38456726 -66.65550995]
[234.69944763 -78.41276550]
[244.01434326 -90.17001343]
[245.35498047 -96.64413452]
[249.18844604 -100.83954620]
[253.78578186 -102.13320160]
[263.44659424 -113.60790253]
[273.10742188 -125.08260345]
[262.22763062 -135.41537476]
[251.98527527 -146.38031006]
[242.41700745 -157.93814087]
[233.55706787 -170.04753113]
[225.43719482 -182.66508484]
[218.08642578 -195.74568176]
[211.53109741 -209.24246216]
[205.79466248 -223.10711670]
[200.89765930 -237.29003906]
[196.85762024 -251.74041748]
[193.68901062 -266.40655518]
[191.40316772 -281.23593140]
[190.00828552 -296.17547607]
[189.50935364 -311.17169189]
[189.90814209 -326.17089844]
[191.20323181 -341.11941528]
[193.38999939 -355.96374512]
[196.46060181 -370.65069580]
[200.40405273 -385.12774658]
[205.20623779 -399.34301758]
[210.84996033 -413.24569702]
[217.31501770 -426.78594971]
[224.57827759 -439.91531372]
[232.61372375 -452.58682251]
[241.39259338 -464.75509644]
[250.88346863 -476.37658691]
[261.05236816 -487.40966797]
[271.86291504 -497.81484985]
[283.27636719 -507.55490112]
[295.25189209 -516.59490967]
[307.74661255 -524.90258789]
[320.71582031 -532.44818115]
[334.11303711 -539.20458984]
[347.89038086 -545.14776611]
[361.99847412 -550.25628662]
[376.38681030 -554.51202393]
[391.00390625 -557.89959717]
[405.79745483 -560.40692139]
[420.71444702 -562.02508545]
[435.70153809 -562.74822998]
[450.70504761 -562.57379150]
[465.67126465 -561.50244141]
[480.54660034 -559.53790283]
[495.27786255 -556.68725586]
[509.81225586 -552.96075439]
[524.09777832 -548.37170410]
[538.08325195 -542.93652344]
[551.71868896 -536.67468262]
[564.95526123 -529.60858154]
[577.74548340 -521.76354980]
[590.04370117 -513.16760254]
[601.80578613 -503.85162354]
[612.98974609 -493.84884644]
[623.55541992 -483.19512939]
[633.46508789 -471.92861938]
[642.68316650 -460.08963013]
[651.17681885 -447.72052002]
[658.91546631 -434.86563110]
[665.87152100 -421.57092285]
[672.02001953 -407.88403320]
[677.33898926 -393.85391235]
[681.80938721 -379.53082275]
[685.41516113 -364.96600342]
[688.14349365 -350.21163940]
[689.98455811 -335.32049561]
[690.93176270 -320.34588623]
[690.98168945 -305.34146118]
[690.13427734 -290.36090088]
[688.39239502 -275.45782471]
[685.76245117 -260.68560791]
[682.25372314 -246.09710693]
[677.87878418 -231.74455261]
[672.65338135 -217.67933655]
[666.59613037 -203.95178223]
[659.72882080 -190.61105347]
[652.07592773 -177.70491028]
[643.66485596 -165.27952576]
[634.52581787 -153.37940979]
[624.69140625 -142.04714966]
[614.19689941 -131.32330322]
[603.07983398 -121.24627686]
[591.38000488 -111.85213470]
[579.13934326 -103.17450714]
[566.40161133 -95.24445343]
[553.21240234 -88.09037018]
[539.61901855 -81.73785400]
[525.66998291 -76.20966339]
[511.41534424 -71.52557373]
[496.90609741 -67.70235443]
[482.19415283 -64.75369263]
[467.33221436 -62.69015121]
[452.37347412 -61.51911163]
[437.37145996 -61.24476242]
[422.37991333 -61.86809158]
[407.45245361 -63.38686752]
[392.64254761 -65.79564667]
[378.00320435 -69.08581543]
[363.58682251 -73.24559021]
[349.44503784 -78.26007843]
[335.62844849 -84.11132812]
[322.18649292 -90.77840424]
[309.16732788 -98.23742676]
[296.61758423 -106.46170807]
[284.58209229 -115.42179871]
[274.92129517 -103.94709778]
[265.26049805 -92.47239685]
[255.77159119 -80.85513306]
[246.45671082 -69.09787750]
[237.14181519 -57.34062958]
[227.82693481 -45.58337784]
[218.51205444 -33.82612610]
[223.28250122 -21.35676765]
[221.25233459 -8.05178547]
[212.84609985 2.59738135]
[200.17556763 7.74289417]
[186.51005554 5.94165897]
[177.02114868 17.55892181]
[167.53225708 29.17618561]
[158.04335022 40.79344940]
[148.55445862 52.41071320]
[139.06555176 64.02797699]
[129.57666016 75.64524078]
[120.08776093 87.26250458]
[110.59886169 98.87976837]
[102.18424225 111.29726410]
[94.91101837 124.41595459]
[87.63778687 137.53465271]
[80.36455536 150.65335083]
[73.09132385 163.77203369]
[73.16675568 179.59306335]
[60.22864914 186.97239685]
[52.95541763 200.09109497]
[45.68218994 213.20979309]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 210]
[36 209]
[37 208]
[39 206]
[40 205]
[41 204]
[42 203]
[43 202]
[56 201]
[57 200]
[58 199]
[59 198]
[60 197]
[61 196]
[62 195]
[63 194]
[64 193]
[68 188]
[69 187]
[70 186]
[71 185]
[72 184]
[75 183]
[76 182]
[77 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
