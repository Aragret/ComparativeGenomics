%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[99.24353790 404.10345459]
[85.59590912 397.26934814]
[76.27182007 385.18530273]
[73.12258148 370.25061035]
[76.77347565 355.43057251]
[86.49961090 343.66769409]
[100.36985779 337.29751587]
[100.59318542 322.29919434]
[100.81651306 307.30084229]
[101.03984070 292.30252075]
[93.49288940 279.46145630]
[101.43479919 265.77801514]
[101.65812683 250.77967834]
[94.11117554 237.93861389]
[102.05307770 224.25517273]
[102.27640533 209.25683594]
[101.71819305 194.26722717]
[92.87628174 182.28099060]
[99.35153198 167.84556580]
[88.49731445 154.05596924]
[96.38365936 137.41604614]
[94.82313538 122.49744415]
[93.26261139 107.57884216]
[89.35857391 100.52681732]
[91.79161835 92.42674255]
[90.45338440 77.48655701]
[86.05238342 63.14670944]
[78.77915192 50.02801514]
[71.50592041 36.90932465]
[64.23269653 23.79062843]
[56.95946503 10.67193508]
[50.06146240 4.68399811]
[49.67726517 -2.69666481]
[42.60015869 -15.92219257]
[35.52305603 -29.14772034]
[30.11779785 -32.95491409]
[27.79529953 -38.14172745]
[28.43879318 -42.87406158]
[21.75859833 -56.30443573]
[8.68508625 -65.21475983]
[9.94469929 -80.05600739]
[3.26450467 -93.48638153]
[-3.41568995 -106.91675568]
[-10.09588432 -120.34713745]
[-16.77607918 -133.77751160]
[-19.30560112 -118.99233246]
[-28.81257629 -107.38985443]
[-42.81190491 -102.00294495]
[-57.64419174 -104.23972321]
[-69.43231964 -113.51549530]
[-75.09489441 -127.40560913]
[-73.15174103 -142.27922058]
[-64.11078644 -154.24838257]
[-50.33531189 -160.18441772]
[-35.42620468 -158.53564453]
[-23.28122330 -149.73371887]
[-27.89523315 -164.00645447]
[-32.50924301 -178.27919006]
[-37.12325287 -192.55192566]
[-41.73725891 -206.82466125]
[-46.35126877 -221.09739685]
[-50.96527863 -235.37011719]
[-55.57928848 -249.64285278]
[-57.74806595 -234.80047607]
[-63.12240601 -220.79631042]
[-71.44008636 -208.31367493]
[-82.29525757 -197.96160889]
[-95.15827942 -190.24522400]
[-109.40154266 -185.54101562]
[-124.33007050 -184.07850647]
[-139.21548462 -185.92906189]
[-153.33148193 -191.00239563]
[-165.98930359 -199.05094910]
[-176.57136536 -209.68203735]
[-184.56134033 -222.37693787]
[-189.56938171 -236.51622009]
[-191.35112000 -251.41003418]
[-189.81962585 -266.33163452]
[-185.04963684 -280.55300903]
[-177.27388000 -293.38021851]
[-166.87176514 -304.18743896]
[-154.35081482 -312.44732666]
[-140.32196045 -317.75689697]
[-125.46971893 -319.85705566]
[-110.51873779 -318.64532471]
[-96.19852448 -314.18087769]
[-83.20778656 -306.68148804]
[-72.18038177 -296.51309204]
[-63.65434647 -284.17184448]
[-58.04747391 -270.26623535]
[-56.93182373 -285.22467041]
[-55.81617737 -300.18313599]
[-54.70052719 -315.14160156]
[-53.58488083 -330.10003662]
[-68.01334381 -334.41668701]
[-81.17630005 -341.73452759]
[-92.45810699 -351.71124268]
[-101.33107758 -363.88024902]
[-107.38021851 -377.67233276]
[-110.32259369 -392.44247437]
[-110.02058411 -407.49978638]
[-106.48831940 -422.14004517]
[-99.89100647 -435.67849731]
[-90.53721619 -447.48190308]
[-78.86443329 -456.99822998]
[-65.41863251 -463.78234863]
[-50.82868195 -467.51699829]
[-35.77698898 -468.02743530]
[-20.96754265 -465.28985596]
[-7.09301281 -459.43225098]
[5.19766665 -450.72860718]
[15.32963657 -439.58602905]
[22.82900810 -426.52563477]
[27.34502220 -412.15832520]
[28.66645432 -397.15606689]
[26.73150063 -382.22055054]
[21.63066101 -368.05029297]
[13.60251236 -355.30813599]
[3.02254581 -344.58999634]
[-9.61439514 -336.39721680]
[-23.71725845 -331.11294556]
[-38.62642670 -328.98440552]
[-39.74207306 -314.02593994]
[-40.85772324 -299.06747437]
[-41.97337341 -284.10903931]
[-43.08901978 -269.15057373]
[-41.30655670 -254.25686646]
[-36.69254684 -239.98413086]
[-32.07853699 -225.71139526]
[-27.46452713 -211.43865967]
[-22.85051727 -197.16593933]
[-18.23650932 -182.89320374]
[-13.62249947 -168.62046814]
[-9.00848961 -154.34773254]
[-3.34570336 -140.45770264]
[3.33449125 -127.02732849]
[10.01468563 -113.59695435]
[16.69488144 -100.16658020]
[23.37507439 -86.73619843]
[35.97077560 -78.78650665]
[35.18897629 -62.98463058]
[41.86916733 -49.55425644]
[48.74858093 -36.22482681]
[55.82568741 -22.99929810]
[62.90279388 -9.77377033]
[70.07815552 3.39870548]
[77.35138702 16.51739883]
[84.62461853 29.63609314]
[91.89785004 42.75478745]
[99.17107391 55.87348175]
[98.44836426 40.89090347]
[100.81404114 26.07862473]
[106.16751099 12.06647301]
[114.28114319 -0.54974759]
[124.80993652 -11.23358917]
[137.30621338 -19.53076935]
[151.23860168 -25.08848763]
[166.01472473 -27.67042732]
[181.00627136 -27.16680336]
[195.57579041 -23.59903145]
[209.10379028 -17.11881065]
[221.01504517 -8.00168800]
[230.80308533 3.36467457]
[238.05172729 16.49697304]
[242.45274353 30.83681488]
[243.81900024 45.77446365]
[242.09240723 60.67476273]
[237.34638977 74.90414429]
[229.78273010 87.85755920]
[219.72305298 98.98423767]
[207.59510803 107.81105804]
[193.91456604 113.96269989]
[179.26312256 117.17759705]
[164.26379395 117.31903839]
[149.55433655 114.38102722]
[135.76020813 108.48847961]
[123.46795654 99.89194489]
[113.20023346 88.95695496]
[105.39356232 76.14832306]
[106.73179626 91.08850861]
[108.18122101 106.01831818]
[109.74174500 120.93692017]
[111.30226135 135.85552979]
[120.81219482 144.56896973]
[121.80482483 157.02684021]
[114.29171753 166.50732422]
[123.22935486 179.56217957]
[116.65837860 192.92898560]
[126.20889282 181.36231995]
[140.93658447 178.51712036]
[154.10813904 185.69415283]
[159.70172119 199.61219788]
[155.16000366 213.90809631]
[142.55940247 222.04597473]
[127.66075134 220.30528259]
[117.27474213 209.48016357]
[117.05141449 224.47850037]
[124.58239746 238.39233398]
[116.65646362 251.00300598]
[116.43313599 266.00134277]
[123.96411133 279.91519165]
[116.03817749 292.52584839]
[115.81484985 307.52416992]
[115.59152222 322.52252197]
[115.36819458 337.52084351]
[129.04263306 344.30117798]
[138.41423035 356.34838867]
[141.62225342 371.27056885]
[138.02975464 386.10488892]
[128.35002136 397.90594482]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 205]
[8 204]
[9 203]
[10 202]
[12 200]
[13 199]
[15 197]
[16 196]
[17 188]
[19 186]
[21 183]
[22 182]
[23 181]
[25 180]
[26 179]
[27 150]
[28 149]
[29 148]
[30 147]
[31 146]
[33 145]
[34 144]
[35 143]
[38 142]
[39 141]
[41 139]
[42 138]
[43 137]
[44 136]
[45 135]
[56 134]
[57 133]
[58 132]
[59 131]
[60 130]
[61 129]
[62 128]
[63 127]
[90 126]
[91 125]
[92 124]
[93 123]
[94 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
