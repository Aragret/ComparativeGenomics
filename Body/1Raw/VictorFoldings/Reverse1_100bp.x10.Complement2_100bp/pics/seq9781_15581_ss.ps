%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[123.96782684 605.78137207]
[111.50929260 597.28222656]
[101.55644226 585.95123291]
[94.73492432 572.50067139]
[91.47353363 557.77606201]
[91.97728729 542.70300293]
[96.21453094 528.22900391]
[103.91889191 515.26391602]
[114.60607910 504.62271118]
[127.60427856 496.97433472]
[142.09642029 492.79956055]
[141.64981079 477.80621338]
[141.20320129 462.81286621]
[133.09039307 450.32159424]
[140.41339111 436.29718018]
[139.96678162 421.30383301]
[139.52017212 406.31048584]
[139.07356262 391.31713867]
[138.62696838 376.32376099]
[138.18035889 361.33041382]
[137.73374939 346.33706665]
[136.50677490 331.38732910]
[134.50276184 316.52182007]
[131.93556213 314.10482788]
[130.41151428 310.32431030]
[130.55873108 305.68408203]
[132.75656128 300.94946289]
[131.41833496 286.00927734]
[130.08009338 271.06909180]
[128.51957703 256.15048218]
[126.73710632 241.25675964]
[124.95463562 226.36305237]
[123.17217255 211.46932983]
[121.38970947 196.57560730]
[119.60723877 181.68190002]
[116.06756592 167.10551453]
[110.82085419 153.05305481]
[105.57413483 139.00057983]
[101.67814636 136.23828125]
[99.47605133 130.99920654]
[100.38722992 124.45082855]
[95.56123352 110.24837494]
[90.62963867 96.08223724]
[85.59272766 81.95320892]
[80.55580902 67.82418060]
[74.58424377 54.06407547]
[61.37952042 45.34938812]
[62.41802979 30.49102974]
[55.53861618 17.16160202]
[48.65920639 3.83217192]
[35.45447922 -4.88251734]
[36.49298859 -19.74087334]
[29.61357689 -33.07030487]
[22.73416328 -46.39973068]
[15.85475159 -59.72916031]
[9.13809109 -65.91982269]
[8.97381306 -73.30865479]
[2.29361868 -86.73902893]
[-2.99588680 -90.70547485]
[-5.16292429 -95.95913696]
[-4.37881708 -100.67021179]
[-10.65617752 -114.29352570]
[-23.45860100 -123.58914185]
[-21.75766754 -138.38630676]
[-33.56536102 -143.57679749]
[-38.51332474 -155.05291748]
[-34.44987488 -166.44656372]
[-40.52370834 -180.16181946]
[-46.59754181 -193.87709045]
[-61.03453445 -189.71931458]
[-75.90321350 -187.56617737]
[-90.92659760 -187.45777893]
[-105.82480621 -189.39614868]
[-120.32028198 -193.34516907]
[-134.14300537 -199.23127747]
[-147.03544617 -206.94480896]
[-158.75744629 -216.34208679]
[-169.09060669 -227.24801636]
[-177.84245300 -239.45944214]
[-184.84992981 -252.74888611]
[-189.98248291 -266.86874390]
[-193.14451599 -281.55599976]
[-194.27711487 -296.53701782]
[-193.35917664 -311.53271484]
[-190.40780640 -326.26373291]
[-185.47799683 -340.45565796]
[-178.66156006 -353.84408569]
[-170.08549500 -366.17959595]
[-159.90957642 -377.23242188]
[-148.32336426 -386.79656982]
[-135.54270935 -394.69396973]
[-121.80570221 -400.77743530]
[-107.36826324 -404.93362427]
[-92.49934387 -407.08517456]
[-77.47595215 -407.19192505]
[-62.57795715 -405.25195312]
[-48.08290482 -401.30136108]
[-34.26082230 -395.41375732]
[-21.36921501 -387.69882202]
[-9.64823914 -378.30029297]
[0.68374854 -367.39324951]
[9.43426895 -355.18087769]
[16.44030571 -341.89068604]
[21.57134056 -327.77026367]
[24.73178482 -313.08267212]
[25.86276245 -298.10153198]
[24.94320297 -283.10592651]
[21.99023819 -268.37521362]
[17.05887794 -254.18382263]
[10.24099445 -240.79612732]
[1.66359711 -228.46154785]
[-8.51352119 -217.40985107]
[-20.10076714 -207.84692383]
[-32.88227463 -199.95092773]
[-26.80844116 -186.23565674]
[-20.73460770 -172.52038574]
[-6.02093172 -162.95614624]
[-8.13435078 -144.66366577]
[4.21907330 -136.34248352]
[2.96713829 -120.57088470]
[9.24449921 -106.94757080]
[15.72399521 -93.41921997]
[22.40419006 -79.98884583]
[29.18418121 -66.60857391]
[36.06359482 -53.27914429]
[42.94300461 -39.94971466]
[49.82241821 -26.62028694]
[62.53508377 -18.85900688]
[61.98863220 -3.04724073]
[68.86804962 10.28218842]
[75.74745941 23.61161804]
[88.46012115 31.37289619]
[87.91367340 47.18466568]
[90.80080414 32.46513748]
[101.11051178 21.56973076]
[115.64823151 17.87450981]
[129.90928650 22.52447510]
[139.47474670 34.07878876]
[141.38063049 48.95721436]
[135.03639221 62.54951477]
[122.40785980 70.64396667]
[107.40811920 70.73241425]
[94.68483734 62.78726196]
[99.72175598 76.91629028]
[104.75866699 91.04531860]
[110.21657562 96.97692108]
[109.76368713 105.42237854]
[114.58969116 119.62483215]
[119.62660217 133.75386047]
[124.87332153 147.80633545]
[130.12004089 161.85881042]
[132.32794189 147.02218628]
[139.41619873 133.80264282]
[150.55209351 123.75316620]
[164.42739868 118.05438232]
[179.41203308 117.37577057]
[193.74563599 121.79705048]
[205.74430847 130.79881287]
[213.99845886 143.32356262]
[217.53839111 157.89987183]
[215.94824219 172.81533813]
[209.41482544 186.31773376]
[198.70567322 196.82077026]
[185.07888794 203.09059143]
[170.13533020 204.39062500]
[155.63055420 200.56811523]
[143.26856995 192.07215881]
[134.50096130 179.89942932]
[136.28343201 194.79315186]
[138.06588745 209.68685913]
[139.84835815 224.58058167]
[141.63082886 239.47430420]
[143.41328430 254.36801147]
[147.06375122 259.88034058]
[147.34080505 265.55664062]
[145.02027893 269.73086548]
[146.35852051 284.67105103]
[147.69674683 299.61123657]
[149.36828613 314.51779175]
[151.37229919 329.38333130]
[160.39680481 317.40173340]
[174.98275757 313.90176392]
[188.46165466 320.48348999]
[194.67112732 334.13787842]
[190.77229309 348.62231445]
[178.54763794 357.31472778]
[163.58612061 356.24102783]
[152.72709656 345.89047241]
[153.17370605 360.88381958]
[153.62031555 375.87716675]
[154.06690979 390.87051392]
[154.51351929 405.86386108]
[154.96012878 420.85720825]
[155.40673828 435.85055542]
[163.55148315 449.41424561]
[156.19654846 462.36624146]
[156.64315796 477.35958862]
[157.08976746 492.35296631]
[171.80470276 495.65774536]
[185.23509216 502.51889038]
[196.53671265 512.50506592]
[204.99909973 524.98864746]
[210.09033203 539.18475342]
[211.49037170 554.20111084]
[209.11119080 569.09375000]
[203.10235596 582.92645264]
[193.84158325 594.82977295]
[181.91101074 604.05541992]
[168.06062317 610.02343750]
[153.16104126 612.35870361]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 198]
[12 197]
[13 196]
[15 194]
[16 193]
[17 192]
[18 191]
[19 190]
[20 189]
[21 188]
[22 180]
[23 179]
[27 178]
[28 177]
[29 176]
[30 173]
[31 172]
[32 171]
[33 170]
[34 169]
[35 168]
[36 151]
[37 150]
[38 149]
[41 148]
[42 147]
[43 145]
[44 144]
[45 143]
[46 133]
[48 131]
[49 130]
[50 129]
[52 127]
[53 126]
[54 125]
[55 124]
[57 123]
[58 122]
[61 121]
[62 120]
[64 118]
[67 116]
[68 115]
[69 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
