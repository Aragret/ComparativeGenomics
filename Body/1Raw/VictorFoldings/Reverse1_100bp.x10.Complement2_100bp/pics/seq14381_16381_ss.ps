%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACAGAAACCUAUAUGAUGUCGCUACCGAUAACUCCUCAUAGGACUCCGUACCCCCAGUCCCCAACUCCAGAACCACUCACAAAAUCACCCCAAUCGCUxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[131.12635803 581.99584961]
[122.32176208 569.84106445]
[114.55097961 557.00073242]
[107.86709595 543.56250000]
[102.31576538 529.61828613]
[97.93491364 515.26318359]
[94.75446320 500.59542847]
[92.79613495 485.71508789]
[92.07332611 470.72384644]
[92.59095001 455.72412109]
[94.34548950 440.81838989]
[97.32495117 426.10842896]
[101.50898743 411.69479370]
[106.86900330 397.67587280]
[113.36840057 384.14749146]
[120.96276855 371.20202637]
[129.60023499 358.92791748]
[139.22178650 347.40899658]
[149.76171875 336.72399902]
[161.14801025 326.94586182]
[173.30288696 318.14141846]
[186.14332581 310.37078857]
[179.46313477 296.94039917]
[172.78294373 283.51004028]
[168.62071228 281.16802979]
[165.88552856 276.18649292]
[166.11050415 269.57885742]
[159.83314514 255.95553589]
[147.47972107 247.63435364]
[148.73165894 231.86274719]
[142.45429993 218.23944092]
[136.17694092 204.61611938]
[129.89958191 190.99279785]
[123.62221527 177.36949158]
[117.34485626 163.74617004]
[114.76480865 162.65003967]
[112.46350098 160.46586609]
[110.85752106 157.29470825]
[110.31922150 153.38641357]
[111.12641144 149.11999512]
[99.29017639 140.07826233]
[101.47863007 124.40914917]
[96.02327728 110.43635559]
[90.46405029 96.50455475]
[78.08946991 86.64654541]
[80.44943237 71.94009399]
[74.78664398 58.05006790]
[69.12385559 44.16003799]
[63.46107101 30.27001190]
[57.32350159 23.50480652]
[57.81907654 16.13078499]
[52.36371994 2.15798712]
[46.90836334 -11.81481075]
[41.45300674 -25.78760910]
[29.22656441 -35.82876205]
[31.80522537 -50.49845123]
[26.34986877 -64.47124481]
[20.89451218 -78.44404602]
[15.43915462 -92.41683960]
[9.98379803 -106.38964081]
[4.42457199 -120.32144165]
[-1.23821449 -134.21147156]
[-6.90100098 -148.10148621]
[-21.32002831 -143.91706848]
[-36.09746170 -141.26280212]
[-51.07139206 -140.16775513]
[-66.07775879 -140.64393616]
[-80.95213318 -142.68612671]
[-95.53156281 -146.27194214]
[-109.65628815 -151.36210632]
[-123.17156219 -157.90084839]
[-135.92930603 -165.81651306]
[-147.78971863 -175.02238464]
[-158.62287903 -185.41760254]
[-168.31007385 -196.88825989]
[-176.74517822 -209.30867004]
[-183.83576965 -222.54277039]
[-189.50413513 -236.44554138]
[-193.68820190 -250.86468506]
[-196.34211731 -265.64218140]
[-197.43679810 -280.61611938]
[-196.96025085 -295.62249756]
[-194.91770935 -310.49682617]
[-191.33152771 -325.07614136]
[-186.24102783 -339.20074463]
[-179.70196533 -352.71588135]
[-171.78598022 -365.47341919]
[-162.57981873 -377.33361816]
[-152.18434143 -388.16653442]
[-140.71345520 -397.85345459]
[-128.29283142 -406.28823853]
[-115.05856323 -413.37850952]
[-101.15564728 -419.04653931]
[-86.73641968 -423.23025513]
[-71.95885468 -425.88381958]
[-56.98487473 -426.97811890]
[-41.97853088 -426.50122070]
[-27.10425186 -424.45831299]
[-12.52500153 -420.87179565]
[1.59947908 -415.78094482]
[15.11443520 -409.24154663]
[27.87178802 -401.32525635]
[39.73176193 -392.11880493]
[50.56441498 -381.72305298]
[60.25105667 -370.25195312]
[68.68555450 -357.83111572]
[75.77549744 -344.59667969]
[81.44319916 -330.69360352]
[85.62656403 -316.27429199]
[88.27976227 -301.49664307]
[89.37371063 -286.52264404]
[88.89643860 -271.51632690]
[86.85316467 -256.64208984]
[83.26628876 -242.06292725]
[78.17509460 -227.93856812]
[71.63536835 -214.42376709]
[63.71876907 -201.66661072]
[54.51203156 -189.80685425]
[44.11603165 -178.97445679]
[32.64467239 -169.28810120]
[20.22364044 -160.85389709]
[6.98902559 -153.76428223]
[12.65181255 -139.87425232]
[18.31459808 -125.98422241]
[23.75064087 -120.97710419]
[23.95659637 -111.84500122]
[29.41195297 -97.87220001]
[34.86730957 -83.89939880]
[40.32266617 -69.92660522]
[45.77802277 -55.95380783]
[57.61426163 -46.91208267]
[55.42580414 -31.24296570]
[60.88116074 -17.27016830]
[66.33651733 -3.29736996]
[71.79187012 10.67542744]
[77.35109711 24.60722542]
[83.01388550 38.49725342]
[88.67667389 52.38727951]
[94.33946228 66.27730560]
[106.30899811 75.14180756]
[104.35408020 90.84176636]
[110.07139587 96.52373505]
[109.99607086 104.98099518]
[115.45143127 118.95379639]
[127.67787170 128.99494934]
[125.09921265 143.66464233]
[130.96817017 157.46881104]
[137.24552917 171.09213257]
[143.52288818 184.71543884]
[149.80024719 198.33876038]
[156.07760620 211.96208191]
[162.35498047 225.58538818]
[175.15739441 234.88101196]
[173.45646667 249.67817688]
[179.73382568 263.30148315]
[186.21331787 276.82983398]
[192.89350891 290.26022339]
[199.57371521 303.69058228]
[213.51776123 298.13876343]
[227.87266541 293.75738525]
[242.54034424 290.57641602]
[257.42062378 288.61755371]
[272.41183472 287.89422607]
[287.41156006 288.41131592]
[302.31738281 290.16531372]
[317.02740479 293.14425659]
[331.44122314 297.32775879]
[345.46032715 302.68728638]
[358.98895264 309.18618774]
[371.93469238 316.78009033]
[384.20910645 325.41711426]
[395.72833252 335.03826904]
[406.41372681 345.57781982]
[416.19226074 356.96377563]
[424.99716187 369.11831665]
[432.76824951 381.95849609]
[439.45245361 395.39654541]
[445.00411987 409.34066772]
[449.38531494 423.69561768]
[452.56610107 438.36334229]
[454.52478027 453.24362183]
[455.24795532 468.23483276]
[454.73068237 483.23455811]
[452.97650146 498.14035034]
[449.99740601 512.85034180]
[445.81369019 527.26409912]
[440.45401001 541.28314209]
[433.95495605 554.81170654]
[426.36090088 567.75732422]
[417.72372437 580.03167725]
[408.10241699 591.55078125]
[397.56274414 602.23608398]
[386.17669678 612.01446533]
[374.02203369 620.81921387]
[361.18176270 628.59014893]
[347.74365234 635.27416992]
[333.79946899 640.82568359]
[319.44445801 645.20672607]
[304.77670288 648.38732910]
[289.89639282 650.34582520]
[274.90515137 651.06884766]
[259.90542603 650.55139160]
[244.99966431 648.79699707]
[230.28968811 645.81774902]
[215.87599182 641.63385010]
[201.85702515 636.27398682]
[188.32855225 629.77478027]
[175.38299561 622.18054199]
[163.10877991 613.54327393]
[151.58976746 603.92181396]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 158]
[23 157]
[24 156]
[27 155]
[28 154]
[30 152]
[31 151]
[32 150]
[33 149]
[34 148]
[35 147]
[40 146]
[42 144]
[43 143]
[44 141]
[46 139]
[47 138]
[48 137]
[49 136]
[51 135]
[52 134]
[53 133]
[54 132]
[56 130]
[57 129]
[58 128]
[59 127]
[60 126]
[61 124]
[62 123]
[63 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
