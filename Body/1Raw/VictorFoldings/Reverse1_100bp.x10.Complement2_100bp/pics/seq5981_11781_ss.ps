%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[28.46872139 587.94519043]
[31.50038338 602.84075928]
[28.59608650 617.76165771]
[20.19871330 630.43261719]
[7.58880329 638.92132568]
[-7.31072330 641.93341064]
[-22.22779846 639.00946045]
[-34.88767624 630.59545898]
[-43.35981369 617.97436523]
[-46.35227585 603.07092285]
[-43.40873337 588.15771484]
[-34.97805405 575.50891113]
[-22.34585381 567.05334473]
[-7.43845463 564.08050537]
[-4.55318213 549.36059570]
[-1.66790950 534.64074707]
[-8.24155617 518.36944580]
[3.97609663 504.59228516]
[6.64189196 489.83105469]
[9.30768776 475.06985474]
[7.40296173 467.92886353]
[12.12462425 460.10940552]
[15.00989723 445.38952637]
[9.86519241 431.41162109]
[20.11249161 419.35745239]
[22.99776268 404.63754272]
[16.51172638 394.42687988]
[18.79502487 382.13989258]
[29.15985298 374.46307373]
[32.26396179 359.78778076]
[20.87254333 353.00329590]
[12.11092281 343.02172852]
[6.84229851 330.80511475]
[5.59227848 317.53683472]
[8.49648476 304.50671387]
[15.28599548 292.98590088]
[25.31217766 284.10266113]
[37.60863495 278.73196411]
[50.98434830 277.40933228]
[54.52402115 262.83294678]
[58.06369400 248.25657654]
[61.60336685 233.68020630]
[65.14303589 219.10382080]
[68.57409668 204.50151062]
[71.89636230 189.87403870]
[63.76595688 177.44697571]
[66.92682648 162.56532288]
[80.01660919 154.12165833]
[83.33887482 139.49420166]
[86.66113281 124.86674500]
[89.98339081 110.23928070]
[86.03180695 96.82747650]
[95.38915253 86.43845367]
[98.71141052 71.81099701]
[101.04689789 56.99392700]
[102.38513184 42.05374527]
[103.72336578 27.11355782]
[91.87955475 19.67131615]
[84.43328094 7.90827417]
[82.78952789 -5.84949970]
[87.21247864 -18.91038322]
[96.78497314 -28.74379539]
[109.59807587 -33.47048569]
[111.15859222 -48.38908768]
[112.71911621 -63.30769348]
[99.13182831 -69.98683167]
[88.66914368 -80.89115143]
[82.57990265 -94.69120789]
[81.58139801 -109.71362305]
[85.77487183 -124.14402008]
[94.63566589 -136.24610901]
[107.07876587 -144.57067871]
[121.59163666 -148.12902832]
[123.15216064 -163.04762268]
[124.71268463 -177.96623230]
[126.27320862 -192.88484192]
[124.14611816 -197.65165710]
[124.06800079 -202.29354858]
[125.64817047 -206.05096436]
[128.25106812 -208.42945862]
[130.47618103 -223.26350403]
[132.70129395 -238.09754944]
[134.92640686 -252.93159485]
[137.15153503 -267.76562500]
[139.37664795 -282.59967041]
[141.60176086 -297.43371582]
[143.38423157 -312.32745361]
[144.72245789 -327.26763916]
[142.37115479 -336.09423828]
[146.19346619 -342.41973877]
[147.75398254 -357.33831787]
[149.31451416 -372.25692749]
[150.20732117 -387.23034668]
[150.43064880 -402.22866821]
[150.65397644 -417.22702026]
[150.87730408 -432.22534180]
[136.49598694 -436.88037109]
[124.12664795 -445.56890869]
[114.86914062 -457.51840210]
[109.54665375 -471.66625977]
[108.63244629 -486.75451660]
[112.20781708 -501.44152832]
[119.95484924 -514.42132568]
[131.18467712 -524.53973389]
[144.89874268 -530.89709473]
[159.87762451 -532.92803955]
[174.78938293 -530.45202637]
[188.30809021 -523.68914795]
[199.23167419 -513.24090576]
[206.58882141 -500.03619385]
[209.72531128 -485.24923706]
[208.36227417 -470.19488525]
[202.62091064 -456.21176147]
[193.01173401 -444.54321289]
[180.38917542 -436.22680664]
[165.87564087 -432.00201416]
[165.65231323 -417.00369263]
[165.42898560 -402.00534058]
[165.20565796 -387.00701904]
[176.69529724 -396.65005493]
[191.64973450 -395.48175049]
[201.50238037 -384.17135620]
[200.60920715 -369.19796753]
[189.48185730 -359.13903809]
[174.49458313 -359.75677490]
[164.23310852 -370.69641113]
[162.67259216 -355.77780151]
[161.11207581 -340.85919189]
[159.66264343 -325.92938232]
[158.32441711 -310.98919678]
[160.01628113 -308.75408936]
[160.92474365 -305.71414185]
[160.73878479 -302.16436768]
[159.25988770 -298.50686646]
[156.43580627 -295.20861816]
[154.21069336 -280.37457275]
[151.98558044 -265.54052734]
[149.76045227 -250.70648193]
[147.53533936 -235.87243652]
[145.31022644 -221.03839111]
[143.08509827 -206.20434570]
[141.19181824 -191.32431030]
[139.63128662 -176.40570068]
[138.07077026 -161.48710632]
[136.51023865 -146.56849670]
[149.97259521 -140.08387756]
[160.42366028 -129.36453247]
[166.58822632 -115.69073486]
[167.70469666 -100.70491028]
[163.61904907 -86.21430969]
[154.80583191 -73.97309113]
[142.31307983 -65.46997070]
[127.63772583 -61.74716949]
[126.07720184 -46.82856369]
[124.51667786 -31.90996170]
[137.82238770 -22.74096489]
[144.72830200 -8.02823830]
[143.26379395 8.25279713]
[133.73428345 21.64996147]
[118.66355133 28.45179367]
[117.32531738 43.39197922]
[115.98708344 58.33216476]
[126.31511688 47.45412827]
[140.85903931 43.78338623]
[155.11225891 48.45735168]
[164.65824890 60.02774811]
[166.53907776 74.90936279]
[160.17196655 88.49096680]
[147.52983093 96.56414795]
[132.52995300 96.62734222]
[119.82024384 88.66098022]
[113.33886719 75.13325500]
[110.01660919 89.76071930]
[113.96819305 103.17252350]
[104.61084747 113.56154633]
[101.28858948 128.18901062]
[97.96633148 142.81646729]
[94.64407349 157.44392395]
[102.80223846 170.71351624]
[99.22462463 185.50051880]
[86.52381897 193.19630432]
[83.20156097 207.82376099]
[84.35254669 216.88539124]
[79.71941376 222.64349365]
[76.17974091 237.21987915]
[72.64006805 251.79624939]
[69.10039520 266.37261963]
[65.56072235 280.94900513]
[79.33522797 290.69143677]
[88.29164886 304.94607544]
[91.07991791 321.51113892]
[87.30014801 337.84072876]
[77.55970001 351.43609619]
[63.37580490 360.22805786]
[46.93926620 362.89190674]
[43.83515549 377.56719971]
[49.94757843 394.93728638]
[37.71765518 407.52282715]
[34.83238220 422.24270630]
[39.77071381 437.27346802]
[29.72978783 448.27478027]
[26.84451675 462.99468994]
[24.06890488 477.73565674]
[21.40310860 492.49685669]
[18.73731422 507.25808716]
[25.43702698 518.27972412]
[22.91278839 530.51947021]
[13.05198193 537.52600098]
[10.16670895 552.24591064]
[7.28143692 566.96575928]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 210]
[15 209]
[16 208]
[18 205]
[19 204]
[20 203]
[22 202]
[23 201]
[25 199]
[26 198]
[29 196]
[30 195]
[39 188]
[40 187]
[41 186]
[42 185]
[43 184]
[44 182]
[45 181]
[48 178]
[49 177]
[50 176]
[51 175]
[53 173]
[54 172]
[55 162]
[56 161]
[57 160]
[63 155]
[64 154]
[65 153]
[73 145]
[74 144]
[75 143]
[76 142]
[80 141]
[81 140]
[82 139]
[83 138]
[84 137]
[85 136]
[86 135]
[87 130]
[88 129]
[90 128]
[91 127]
[92 126]
[93 119]
[94 118]
[95 117]
[96 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
