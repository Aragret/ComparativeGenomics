%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUUCGAAUCCCUCUCGACCCAACAAACCCAACACCGAGUCACAGUCAAGCUCUAUUAUUGAAGAACCAGAUCCGUGUACUUAUAACAACACCCCUxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[62.18335342 601.31231689]
[48.62021255 608.12451172]
[33.51174927 609.57318115]
[18.90125465 605.46246338]
[6.76468086 596.34832764]
[-1.25660098 583.46331787]
[-4.07777786 568.55004883]
[-1.31730890 553.62542725]
[6.65147495 540.70788574]
[18.75086212 531.54437256]
[33.34450912 527.37426758]
[34.68274307 512.43408203]
[36.02097702 497.49389648]
[37.35921097 482.55371094]
[38.69744492 467.61352539]
[40.03567886 452.67333984]
[28.58157539 462.35858154]
[13.58268642 462.54107666]
[1.89629984 453.13745117]
[-1.13472557 438.44686890]
[5.87535429 425.18569946]
[19.72162628 419.41674805]
[34.07376099 423.77752686]
[42.37059402 436.27612305]
[45.25586700 421.55621338]
[48.14113998 406.83633423]
[51.02641296 392.11645508]
[53.80202484 377.37548828]
[56.46781921 362.61425781]
[59.13361740 347.85305786]
[61.79941177 333.09182739]
[64.13489532 318.27474976]
[54.92823029 306.62258911]
[56.74881744 291.51828003]
[69.03310394 281.94049072]
[71.03711700 267.07498169]
[73.04113007 252.20944214]
[67.07356262 238.56256104]
[76.58522034 225.91979980]
[78.58923340 211.05427551]
[76.36754608 204.00546265]
[80.73534393 195.98297119]
[82.96045685 181.14894104]
[85.18557739 166.31489563]
[87.07886505 151.43486023]
[88.63938904 136.51625061]
[90.19991302 121.59764862]
[91.76043701 106.67903900]
[92.76469421 91.71269989]
[93.21130371 76.71934509]
[93.65790558 61.72599792]
[94.10451508 46.73264694]
[94.55111694 31.73929787]
[91.67860413 23.06828308]
[95.11764526 16.52650833]
[95.78742981 1.54146934]
[88.67405701 -12.59042740]
[96.97193909 -24.95951653]
[97.64172363 -39.94455338]
[98.31150818 -54.92959213]
[90.19935608 -64.95734406]
[91.06571960 -77.42462921]
[99.90205383 -85.68572998]
[100.79486847 -100.65913391]
[101.68768311 -115.63253784]
[101.68768311 -130.63253784]
[100.79486847 -145.60594177]
[99.90205383 -160.57934570]
[98.34152985 -175.49795532]
[96.11640930 -190.33200073]
[93.89129639 -205.16604614]
[91.66617584 -220.00009155]
[89.44106293 -234.83413696]
[87.21594238 -249.66818237]
[74.79042816 -259.06201172]
[72.74515533 -274.13754272]
[81.77732086 -285.92547607]
[79.55220795 -300.75952148]
[72.59739685 -287.46929932]
[59.98243332 -279.35369873]
[45.00483704 -278.53417969]
[31.57971573 -285.22491455]
[23.21636391 -297.67700195]
[22.10094261 -312.63546753]
[28.52501678 -326.19021606]
[40.80935287 -334.79806519]
[55.74285126 -336.20895386]
[69.42193604 -330.05407715]
[78.27059937 -317.94311523]
[78.27059937 -332.94311523]
[78.27059937 -347.94311523]
[78.27059937 -362.94311523]
[70.53330231 -376.74328613]
[78.27059937 -389.47055054]
[78.27059937 -404.47055054]
[63.77307892 -408.71301270]
[51.05880356 -416.86923218]
[41.15845108 -428.27798462]
[34.87461090 -442.01443481]
[32.71667862 -456.96502686]
[34.85958862 -471.91778564]
[41.12963104 -485.66052246]
[51.01851273 -497.07922363]
[63.72459030 -505.24819946]
[78.21784210 -509.50524902]
[93.32335663 -509.50524902]
[107.81661224 -505.24819946]
[120.52268982 -497.07922363]
[130.41157532 -485.66052246]
[136.68161011 -471.91778564]
[138.82452393 -456.96502686]
[136.66659546 -442.01443481]
[130.38275146 -428.27798462]
[120.48239899 -416.86923218]
[107.76811981 -408.71301270]
[93.27059937 -404.47055054]
[93.27059937 -389.47055054]
[101.00789642 -376.74328613]
[93.27059937 -362.94311523]
[93.27059937 -347.94311523]
[93.27059937 -332.94311523]
[93.27059937 -317.94311523]
[94.38624573 -302.98464966]
[96.61136627 -288.15060425]
[108.70460510 -279.53149414]
[111.17250824 -264.51934814]
[102.04998779 -251.89329529]
[104.27510834 -237.05924988]
[106.50022125 -222.22520447]
[108.72534180 -207.39115906]
[110.95045471 -192.55711365]
[113.17557526 -177.72306824]
[122.93917084 -189.11044312]
[137.88397217 -190.39605713]
[149.44892883 -180.84347534]
[151.00909424 -165.92483521]
[141.67074585 -154.18621826]
[126.78330231 -152.35203552]
[114.87545776 -161.47216797]
[115.76827240 -146.49876404]
[116.66108704 -131.52536011]
[125.84658051 -143.38397217]
[140.21543884 -147.68931580]
[154.40843201 -142.83557129]
[163.13194275 -130.63310242]
[163.13229370 -115.63309479]
[154.40937805 -103.43020630]
[140.21659851 -98.57579803]
[125.84754181 -102.88044739]
[116.66108704 -114.73972321]
[115.76827240 -99.76631927]
[114.87545776 -84.79291534]
[123.56403351 -69.54576111]
[113.29654694 -54.25980759]
[112.62676239 -39.27476883]
[111.95697784 -24.28973007]
[119.11825562 -11.22966480]
[110.77246857 2.21125460]
[110.10268402 17.19629288]
[109.54447174 32.18590164]
[109.09786224 47.17925262]
[108.65126038 62.17260361]
[108.20465088 77.16595459]
[107.75804901 92.15930176]
[120.29928589 83.93024445]
[134.59921265 88.45927429]
[140.11645508 102.40775299]
[132.78390503 115.49338531]
[118.00685120 118.06992340]
[106.67903900 108.23956299]
[105.11851501 123.15817261]
[103.55799103 138.07676697]
[101.99747467 152.99537659]
[104.12456512 157.76219177]
[104.20267487 162.40409851]
[102.62251282 166.16149902]
[100.01961517 168.54000854]
[97.79450226 183.37405396]
[95.56938171 198.20809937]
[93.45475769 213.05828857]
[91.45074463 227.92382812]
[97.27497101 242.63398743]
[87.90665436 254.21345520]
[85.90264130 269.07897949]
[83.89862823 283.94451904]
[93.20812225 296.43334961]
[90.96399689 311.48056030]
[79.00042725 320.27877808]
[80.98464966 325.10681152]
[80.92452240 329.74896240]
[79.23318481 333.45767212]
[76.56063080 335.75762939]
[73.89483643 350.51882935]
[71.22903442 365.28005981]
[68.56324005 380.04125977]
[70.11770630 389.04248047]
[65.74630737 395.00170898]
[62.86103439 409.72161865]
[59.97576141 424.44149780]
[57.09048843 439.16137695]
[54.97586441 454.01159668]
[53.63763046 468.95178223]
[52.29939651 483.89196777]
[50.96116257 498.83215332]
[49.62292480 513.77233887]
[48.28469086 528.71252441]
[61.90491104 535.40985107]
[72.18315887 546.57775879]
[77.72938538 560.70587158]
[77.79351044 575.88348389]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 206]
[12 205]
[13 204]
[14 203]
[15 202]
[16 201]
[24 200]
[25 199]
[26 198]
[27 197]
[28 195]
[29 194]
[30 193]
[31 192]
[32 188]
[35 185]
[36 184]
[37 183]
[39 181]
[40 180]
[42 179]
[43 178]
[44 177]
[45 173]
[46 172]
[47 171]
[48 170]
[49 164]
[50 163]
[51 162]
[52 161]
[53 160]
[55 159]
[56 158]
[58 156]
[59 155]
[60 154]
[63 152]
[64 151]
[65 150]
[66 141]
[67 140]
[68 139]
[69 132]
[70 131]
[71 130]
[72 129]
[73 128]
[74 127]
[77 124]
[78 123]
[89 122]
[90 121]
[91 120]
[92 119]
[94 117]
[95 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
