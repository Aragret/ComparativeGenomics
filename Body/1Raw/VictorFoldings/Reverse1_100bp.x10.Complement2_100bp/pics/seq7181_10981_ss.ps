%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[173.92002869 571.42895508]
[168.33689880 557.49603271]
[164.00701904 543.12420654]
[160.96426392 528.42590332]
[159.23248291 513.51623535]
[158.82519531 498.51184082]
[159.74562073 483.53018188]
[161.98652649 468.68847656]
[165.53038025 454.10290527]
[170.34945679 439.88763428]
[176.40603638 426.15390015]
[183.65270996 413.00918579]
[192.03277588 400.55639648]
[201.48063660 388.89297485]
[211.92234802 378.11019897]
[223.27618408 368.29244995]
[235.45330811 359.51660156]
[227.79270935 346.62026978]
[220.13211060 333.72396851]
[212.47151184 320.82763672]
[204.81091309 307.93130493]
[197.15031433 295.03497314]
[192.82542419 293.00903320]
[189.72731018 288.24472046]
[189.46020508 281.63864136]
[182.18698120 268.51995850]
[169.24887085 261.14062500]
[169.32429504 245.31959534]
[162.05107117 232.20089722]
[154.77783203 219.08221436]
[147.50460815 205.96351624]
[135.96669006 202.32991028]
[129.79988098 191.46003723]
[132.78450012 178.91192627]
[125.70738983 165.68640137]
[118.63028717 152.46087646]
[107.14775085 148.65589905]
[101.14345551 137.69540405]
[104.31456757 125.19313812]
[97.43515015 111.86370850]
[97.16336060 126.86124420]
[92.09854126 140.98030090]
[82.77520752 152.73085022]
[70.17726898 160.87283325]
[55.63421631 164.54701233]
[40.68080902 163.36563110]
[26.89512062 157.45336914]
[15.73198509 147.43417358]
[8.36947632 134.36537170]
[5.58457613 119.62615967]
[7.67118168 104.77200317]
[14.40909004 91.37049103]
[25.08723068 80.83591461]
[38.57871628 74.28001404]
[53.45975876 72.39465332]
[68.15992737 75.37879944]
[81.12787628 82.91752625]
[90.99516296 94.21540833]
[87.67290497 79.58795166]
[84.35064697 64.96049500]
[81.02838135 50.33303070]
[77.70612335 35.70557022]
[74.38386536 21.07811165]
[71.06160736 6.45065069]
[67.73934937 -8.17680931]
[64.41708374 -22.80426979]
[60.21295929 -27.90690231]
[59.34687042 -33.52356720]
[61.22054672 -37.91655731]
[58.33527374 -52.63645172]
[55.45000076 -67.35633850]
[50.72833633 -75.17578888]
[52.63306427 -82.31678009]
[49.96726608 -97.07799530]
[42.25603485 -84.21188354]
[28.50059509 -78.22959137]
[13.83138466 -81.36236572]
[3.71965742 -92.44175720]
[1.93683720 -107.33543396]
[9.14787197 -120.48841095]
[22.66322517 -126.99497223]
[37.44200134 -124.42830658]
[47.97261429 -113.74469757]
[47.07979584 -128.71810913]
[46.18698120 -143.69151306]
[34.64908981 -154.15643311]
[33.95694733 -169.35432434]
[44.00476456 -180.28944397]
[43.11194992 -195.26284790]
[31.35488129 -185.94773865]
[16.70791626 -189.18292236]
[9.96825314 -202.58355713]
[16.10412025 -216.27117920]
[30.59238243 -220.15579224]
[42.75204086 -211.37525940]
[42.97536850 -226.37359619]
[43.19869614 -241.37193298]
[43.42202377 -256.37026978]
[43.64535141 -271.36859131]
[29.80912399 -277.73089600]
[19.76175690 -289.17510986]
[15.24401474 -303.71850586]
[17.03862572 -318.84130859]
[24.83465958 -331.92343140]
[37.28141022 -340.69827271]
[52.22240067 -343.64559937]
[67.06901550 -340.25473022]
[79.24898529 -331.11318970]
[86.65206146 -317.80474854]
[87.99561310 -302.63522339]
[83.04685974 -288.23278809]
[72.66320801 -277.09277344]
[58.64368820 -271.14526367]
[58.42036057 -256.14694214]
[58.19703293 -241.14860535]
[57.97370529 -226.15026855]
[57.75037766 -211.15193176]
[58.08535385 -196.15567017]
[58.97816849 -181.18226624]
[70.25422668 -171.51861572]
[71.37297058 -156.34616089]
[61.16038513 -144.58432007]
[62.05320358 -129.61091614]
[62.94601822 -114.63751221]
[64.72848511 -99.74379730]
[67.39427948 -84.98257446]
[70.16989136 -70.24161530]
[73.05516052 -55.52172470]
[75.94043732 -40.80183029]
[79.04454803 -26.12652969]
[82.36680603 -11.49906921]
[85.68906403 3.12839103]
[89.01132202 17.75585175]
[92.33358765 32.38331223]
[95.65584564 47.01077271]
[98.97810364 61.63823318]
[102.30036163 76.26569366]
[105.62261963 90.89315033]
[110.76457977 104.98429108]
[117.64399719 118.31372070]
[133.36616516 127.89990234]
[131.85581970 145.38377380]
[138.93292236 158.60929871]
[146.01002502 171.83482361]
[161.87318420 181.18586731]
[160.62330627 198.69029236]
[167.89653015 211.80897522]
[175.16976929 224.92767334]
[182.44299316 238.04637146]
[195.90133667 246.36404419]
[195.30567932 261.24673462]
[202.57890320 274.36541748]
[210.04664612 287.37438965]
[217.70724487 300.27069092]
[225.36784363 313.16702271]
[233.02842712 326.06335449]
[240.68902588 338.95968628]
[248.34962463 351.85601807]
[261.88128662 345.36050415]
[275.93408203 340.08633423]
[290.39801025 336.07479858]
[305.15988159 333.35733032]
[320.10415649 331.95513916]
[335.11389160 331.87924194]
[350.07159424 333.13018799]
[364.86019897 335.69824219]
[379.36395264 339.56326294]
[393.46936035 344.69500732]
[407.06604004 351.05334473]
[420.04754639 358.58847046]
[432.31228638 367.24142456]
[443.76428223 376.94448853]
[454.31390381 387.62170410]
[463.87857056 399.18954468]
[472.38342285 411.55746460]
[479.76190186 424.62863159]
[485.95629883 438.30075073]
[490.91806030 452.46685791]
[494.60842896 467.01605225]
[496.99847412 481.83447266]
[498.06948853 496.80612183]
[497.81311035 511.81384277]
[496.23132324 526.74017334]
[493.33654785 541.46832275]
[489.15139771 555.88299561]
[483.70864868 569.87133789]
[477.05090332 583.32391357]
[469.23025513 596.13543701]
[460.30792236 608.20562744]
[450.35369873 619.44000244]
[439.44555664 629.75067139]
[427.66882324 639.05694580]
[415.11569214 647.28588867]
[401.88436890 654.37322998]
[388.07846069 660.26342773]
[373.80599976 664.91040039]
[359.17868042 668.27777100]
[344.31100464 670.33917236]
[329.31930542 671.07855225]
[314.32092285 670.48999023]
[299.43325806 668.57818604]
[284.77282715 665.35809326]
[270.45434570 660.85485840]
[256.58990479 655.10375977]
[243.28799438 648.14984131]
[230.65274048 640.04754639]
[218.78302002 630.86016846]
[207.77174377 620.65972900]
[197.70507812 609.52600098]
[188.66180420 597.54614258]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 158]
[18 157]
[19 156]
[20 155]
[21 154]
[22 153]
[25 152]
[26 151]
[28 149]
[29 148]
[30 147]
[31 146]
[34 144]
[35 143]
[36 142]
[39 140]
[40 139]
[58 138]
[59 137]
[60 136]
[61 135]
[62 134]
[63 133]
[64 132]
[65 131]
[66 130]
[69 129]
[70 128]
[71 127]
[73 126]
[74 125]
[83 124]
[84 123]
[85 122]
[88 119]
[89 118]
[95 117]
[96 116]
[97 115]
[98 114]
[99 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
