%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[130.08399963 275.38891602]
[127.71231842 290.21902466]
[123.57032776 304.65515137]
[117.71841431 318.48672485]
[110.24191284 331.51205444]
[101.24986267 343.54119873]
[90.87339020 354.39874268]
[79.26380920 363.92633057]
[66.59043121 371.98504639]
[53.03807068 378.45736694]
[38.80435562 383.24887085]
[24.09685516 386.28973389]
[9.13005257 387.53558350]
[-5.87779570 386.96826172]
[-20.70783043 384.59603882]
[-35.14378357 380.45349121]
[-48.97513962 374.60107422]
[-62.00019455 367.12408447]
[-74.02900696 358.13159180]
[-84.88615417 347.75469971]
[-94.41331482 336.14477539]
[-102.47155762 323.47109985]
[-108.94335938 309.91848755]
[-113.73435211 295.68460083]
[-116.77465820 280.97698975]
[-118.01995087 266.01013184]
[-117.45207214 251.00230408]
[-115.07928467 236.17236328]
[-110.93621063 221.73655701]
[-105.08326721 207.90542603]
[-97.60578918 194.88064575]
[-88.61283875 182.85217285]
[-78.23555756 171.99540710]
[-66.62526703 162.46868896]
[-53.95128632 154.41091919]
[-40.39844131 147.93962097]
[-26.16436577 143.14916992]
[-11.45663929 140.10940552]
[3.51025796 138.86466980]
[18.51806259 139.43312073]
[33.34791946 141.80645752]
[47.78356552 145.95007324]
[61.61448288 151.80352783]
[69.08222198 138.79458618]
[68.70820618 123.90467072]
[82.28889465 115.78829956]
[89.75663757 102.77934265]
[96.43682861 89.34896851]
[102.30579376 75.54479218]
[108.17475128 61.74061584]
[114.04371643 47.93643951]
[119.91267395 34.13225937]
[118.19171143 18.40493202]
[130.29191589 9.71962547]
[136.16087341 -4.08455133]
[142.02983093 -17.88872719]
[147.89878845 -31.69290543]
[134.40403748 -38.24935532]
[121.25574493 -45.47555923]
[108.48714447 -53.35326385]
[96.13047791 -61.86257172]
[84.21696472 -70.98197937]
[72.77669525 -80.68846130]
[61.83857727 -90.95749664]
[51.43023300 -101.76313019]
[41.57795715 -113.07808685]
[32.30663681 -124.87377167]
[23.63969612 -137.12039185]
[15.59902573 -149.78700256]
[8.20493698 -162.84161377]
[1.47610903 -176.25125122]
[-4.57046080 -189.98204041]
[-9.91949844 -203.99928284]
[-14.55749226 -218.26759338]
[-18.47272491 -232.75090027]
[-21.65530777 -247.41264343]
[-24.09719849 -262.21578979]
[-25.79223251 -277.12289429]
[-26.73612595 -292.09637451]
[-26.92649269 -307.09832764]
[-26.36285591 -322.09094238]
[-25.04663658 -337.03625488]
[-22.98115921 -351.89657593]
[-20.17164421 -366.63436890]
[-16.62518501 -381.21237183]
[-12.35074329 -395.59378052]
[-7.35911560 -409.74224854]
[-1.66291094 -423.62203979]
[4.72348118 -437.19808960]
[11.78392792 -450.43612671]
[19.50059509 -463.30270386]
[27.85398674 -475.76528931]
[36.82300568 -487.79244995]
[46.38499069 -499.35375977]
[56.51579285 -510.42001343]
[67.18981171 -520.96331787]
[78.38009644 -530.95697021]
[90.05837250 -540.37573242]
[102.19512939 -549.19586182]
[114.75972748 -557.39501953]
[127.72042084 -564.95251465]
[141.04446411 -571.84930420]
[154.69819641 -578.06787109]
[168.64714050 -583.59259033]
[182.85604858 -588.40948486]
[197.28903198 -592.50640869]
[211.90963745 -595.87292480]
[226.68090820 -598.50061035]
[241.56556702 -600.38275146]
[256.52600098 -601.51470947]
[271.52438354 -601.89355469]
[286.52288818 -601.51831055]
[301.48358154 -600.38995361]
[316.36868286 -598.51135254]
[331.14059448 -595.88720703]
[345.76199341 -592.52416992]
[360.19595337 -588.43072510]
[374.40600586 -583.61724854]
[388.35629272 -578.09588623]
[402.01150513 -571.88055420]
[415.33718872 -564.98699951]
[428.29971313 -557.43255615]
[440.86627197 -549.23638916]
[453.00512695 -540.41918945]
[464.68566895 -531.00323486]
[475.87832642 -521.01226807]
[486.55490112 -510.47152710]
[496.68835449 -499.40768433]
[506.25308228 -487.84866333]
[515.22497559 -475.82366943]
[523.58135986 -463.36306763]
[531.30114746 -450.49835205]
[538.36474609 -437.26202393]
[544.75439453 -423.68750000]
[550.45391846 -409.80905151]
[555.44891357 -395.66177368]
[559.72680664 -381.28140259]
[563.27679443 -366.70425415]
[566.08984375 -351.96716309]
[568.15887451 -337.10733032]
[569.47863770 -322.16229248]
[570.04589844 -307.16986084]
[569.85913086 -292.16781616]
[568.91882324 -277.19415283]
[567.22735596 -262.28662109]
[564.78900146 -247.48289490]
[561.60992432 -232.82038879]
[557.69818115 -218.33613586]
[553.06359863 -204.06672668]
[547.71789551 -190.04820251]
[541.67462158 -176.31596375]
[534.94903564 -162.90470886]
[527.55804443 -149.84832764]
[519.52044678 -137.17979431]
[510.85641479 -124.93109894]
[501.58792114 -113.13319397]
[491.73837280 -101.81587982]
[481.33261108 -91.00774384]
[470.39694214 -80.73609924]
[458.95901489 -71.02687073]
[447.04766846 -61.90460968]
[434.69305420 -53.39234161]
[421.92633057 -45.51157761]
[408.77978516 -38.28222275]
[395.28659058 -31.72253990]
[381.48086548 -25.84910011]
[367.39746094 -20.67673874]
[353.07196045 -16.21852303]
[338.54055786 -12.48571396]
[323.83996582 -9.48774052]
[309.00729370 -7.23217726]
[294.08004761 -5.72472095]
[279.09588623 -4.96918011]
[264.09271240 -4.96746254]
[249.10839844 -5.71957350]
[234.18078613 -7.22361231]
[219.34761047 -9.47578049]
[204.64631653 -12.47038841]
[190.11407471 -16.19987106]
[175.78755188 -20.65480804]
[161.70297241 -25.82394409]
[155.83401489 -12.01976681]
[149.96504211 1.78440964]
[144.09608459 15.58858681]
[146.23683167 30.32854843]
[133.71685791 40.00122070]
[127.84789276 53.80539703]
[121.97892761 67.60957336]
[116.10997009 81.41374969]
[110.24100494 95.21792603]
[123.74650574 88.69094086]
[138.52914429 91.23523712]
[149.07537842 101.90187073]
[151.45170593 116.71244049]
[144.77183533 130.14297485]
[131.52717590 137.18421936]
[116.65766907 135.20996094]
[105.70926666 124.95654297]
[102.76558685 110.24708557]
[95.29785156 123.25603485]
[95.13771820 139.07643127]
[82.09117889 146.26232910]
[74.62343597 159.27127075]
[86.65291595 168.26287842]
[97.51084137 178.63894653]
[107.03887177 190.24816895]
[115.09806061 202.92123413]
[121.57087708 216.47335815]
[126.36293793 230.70689392]
[129.40434265 245.41427612]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 203]
[44 202]
[46 200]
[47 199]
[48 190]
[49 189]
[50 188]
[51 187]
[52 186]
[54 184]
[55 183]
[56 182]
[57 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
