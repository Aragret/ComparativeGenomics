%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[115.98215485 581.53631592]
[114.86650085 566.57788086]
[106.20402527 554.46130371]
[112.89348602 540.12390137]
[111.77783203 525.16540527]
[103.11535645 513.04888916]
[109.80481720 498.71145630]
[106.17253113 492.27499390]
[108.78559875 483.52227783]
[107.89278412 468.54888916]
[106.99996948 453.57546997]
[106.10715485 438.60208130]
[105.21434021 423.62866211]
[104.32152557 408.65524292]
[92.56445312 417.97036743]
[77.91748810 414.73516846]
[71.17782593 401.33456421]
[77.31369019 387.64691162]
[91.80195618 383.76229858]
[103.96161652 392.54284668]
[104.18494415 377.54452515]
[104.40827179 362.54617310]
[104.63159943 347.54785156]
[91.77483368 340.02658081]
[84.35966492 326.99313354]
[84.46457672 311.89825439]
[92.16153717 298.79660034]
[105.46977234 291.25747681]
[97.92282104 278.41641235]
[105.86472321 264.73297119]
[106.08805084 249.73463440]
[105.64144897 234.74128723]
[104.52579498 219.78282166]
[103.41014862 204.82437134]
[102.29450226 189.86592102]
[101.17885590 174.90747070]
[100.06320190 159.94902039]
[98.50267792 145.03041077]
[96.49866486 130.16488647]
[94.49465179 115.29935455]
[85.67522430 107.69284821]
[84.20520782 96.13948059]
[90.83880615 86.56677246]
[89.05633545 71.67305756]
[87.27387238 56.77933884]
[85.49140930 41.88562393]
[70.89893341 37.72204208]
[59.04420090 28.31415558]
[51.71432114 15.11996841]
[49.99903870 0.16518977]
[54.12879181 -14.26775837]
[63.44433212 -25.98808670]
[76.50173950 -33.22917557]
[74.71926880 -48.12289429]
[72.93680573 -63.01661301]
[71.15434265 -77.91033173]
[69.37187195 -92.80404663]
[59.73326874 -101.37493134]
[58.55526733 -113.81664276]
[65.92639160 -123.40794373]
[64.36586761 -138.32655334]
[53.03646851 -128.49574280]
[38.25965500 -131.07368469]
[30.92834473 -144.16000366]
[36.44690704 -158.10795593]
[50.74726105 -162.63563538]
[63.28686142 -154.40681458]
[62.84025574 -169.40016174]
[62.39365005 -184.39350891]
[61.94704437 -199.38685608]
[61.50043869 -214.38020325]
[61.05383301 -229.37355042]
[50.00624466 -219.22709656]
[35.01456070 -219.72648621]
[24.66669846 -230.58566284]
[24.89038467 -245.58399963]
[35.55748367 -256.12976074]
[50.55739212 -256.18185425]
[61.29710388 -245.71131897]
[62.18992233 -260.68472290]
[63.08273697 -275.65814209]
[60.47003174 -281.73144531]
[61.20617294 -287.36663818]
[64.23160553 -291.06201172]
[65.56983948 -306.00219727]
[66.79681396 -320.95190430]
[67.91246796 -335.91036987]
[69.02811432 -350.86883545]
[70.14376068 -365.82727051]
[71.25941467 -380.78573608]
[72.37506104 -395.74417114]
[73.49070740 -410.70263672]
[71.00823975 -419.49325562]
[74.73595428 -425.87496948]
[76.07418823 -440.81515503]
[69.59893036 -455.25057983]
[78.44084930 -467.23681641]
[64.26934052 -472.41665649]
[51.92191696 -481.08865356]
[42.24044418 -492.66152954]
[35.88502121 -506.34622192]
[33.28897095 -521.20971680]
[34.62929535 -536.23852539]
[39.81460953 -550.40802002]
[48.49137497 -562.75213623]
[60.06798935 -572.42913818]
[73.75514221 -578.77923584]
[88.61962128 -581.36956787]
[103.64794159 -580.02343750]
[117.81543732 -574.83264160]
[130.15615845 -566.15112305]
[139.82870483 -554.57080078]
[146.17355347 -540.88116455]
[148.75811768 -526.01568604]
[147.40618896 -510.98791504]
[142.20993042 -496.82238770]
[133.52363586 -484.48504639]
[121.93955994 -474.81695557]
[108.24750519 -468.47741699]
[93.38103485 -465.89855957]
[99.95201111 -452.53176880]
[91.01437378 -439.47689819]
[89.67613983 -424.53671265]
[88.44916534 -409.58697510]
[87.33351135 -394.62854004]
[86.21786499 -379.67007446]
[85.10221863 -364.71163940]
[83.98656464 -349.75317383]
[82.87091827 -334.79470825]
[81.75527191 -319.83627319]
[84.39257050 -312.93218994]
[80.51002502 -304.66394043]
[79.17179108 -289.72375488]
[78.05614471 -274.76531982]
[77.16333008 -259.79190063]
[76.27050781 -244.81849670]
[76.04718018 -229.82015991]
[76.49378967 -214.82681274]
[76.94039917 -199.83346558]
[77.38700104 -184.84011841]
[77.83361053 -169.84675598]
[78.28021240 -154.85340881]
[79.28446960 -139.88706970]
[80.84499359 -124.96846771]
[91.90332031 -111.34201050]
[84.26559448 -94.58650970]
[86.04805756 -79.69279480]
[87.83052063 -64.79907990]
[89.61299133 -49.90536118]
[91.39545441 -35.01164246]
[105.79283905 -31.05631638]
[117.61103821 -21.86525345]
[125.03001404 -8.81444645]
[126.89217377 6.12275410]
[122.88285065 20.67400551]
[113.58296967 32.61365509]
[100.38512421 40.10315704]
[102.16758728 54.99687576]
[103.95005798 69.89059448]
[105.73252106 84.78430939]
[116.12969971 97.94770813]
[109.36018372 113.29534149]
[111.36419678 128.16087341]
[113.36820984 143.02639771]
[116.14287567 146.36633301]
[117.56715393 150.04545593]
[117.70023346 153.59759521]
[116.74662018 156.62368774]
[115.02165985 158.83335876]
[116.13730621 173.79182434]
[117.25295258 188.75027466]
[118.36860657 203.70872498]
[119.48425293 218.66717529]
[120.59989929 233.62562561]
[131.18341064 222.99598694]
[146.18243408 222.82546997]
[157.00486755 233.21176147]
[157.45111084 248.20512390]
[147.26554871 259.21667480]
[132.28292847 259.93850708]
[121.08638763 249.95796204]
[120.86306000 264.95629883]
[128.39404297 278.87014771]
[120.46810913 291.48080444]
[133.54597473 299.41281128]
[140.84944153 312.73782349]
[140.50486755 327.82913208]
[132.70494080 340.63604736]
[119.62993622 347.77117920]
[119.40660858 362.76950073]
[119.18328094 377.76785278]
[118.95995331 392.76617432]
[119.29492950 407.76245117]
[120.18774414 422.73583984]
[121.08055878 437.70925903]
[121.97337341 452.68264771]
[122.86619568 467.65606689]
[123.75901031 482.62945557]
[124.76326752 497.59582520]
[133.50555420 510.78228760]
[126.73628998 524.04980469]
[127.85193634 539.00823975]
[136.59422302 552.19470215]
[129.82495117 565.46221924]
[130.94061279 580.42065430]
[143.07820129 590.54260254]
[144.42022705 606.28985596]
[134.17050171 618.31976318]
[118.40998840 619.49517822]
[106.48912048 609.11883545]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 205]
[2 204]
[4 202]
[5 201]
[7 199]
[9 198]
[10 197]
[11 196]
[12 195]
[13 194]
[14 193]
[20 192]
[21 191]
[22 190]
[23 189]
[28 184]
[30 182]
[31 181]
[32 174]
[33 173]
[34 172]
[35 171]
[36 170]
[37 169]
[38 164]
[39 163]
[40 162]
[43 160]
[44 159]
[45 158]
[46 157]
[53 150]
[54 149]
[55 148]
[56 147]
[57 146]
[60 144]
[61 143]
[67 142]
[68 141]
[69 140]
[70 139]
[71 138]
[72 137]
[79 136]
[80 135]
[81 134]
[84 133]
[85 132]
[86 130]
[87 129]
[88 128]
[89 127]
[90 126]
[91 125]
[92 124]
[94 123]
[95 122]
[97 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
