%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxAUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[45.68079758 481.56195068]
[38.48554993 494.76135254]
[29.26603508 506.63555908]
[18.26106071 516.87695312]
[5.75568295 525.22033691]
[-7.92618036 531.44952393]
[-22.43013573 535.40319824]
[-37.38049316 536.97894287]
[-52.39000702 536.13592529]
[-67.06989288 532.89599609]
[-81.03990173 527.34307861]
[-93.93818665 519.62097168]
[-105.43064117 509.92977905]
[-115.21958923 498.52044678]
[-123.05147552 485.68853760]
[-128.72341919 471.76641846]
[-132.08853149 457.11474609]
[-133.05961609 442.11294556]
[-131.61154175 427.14968872]
[-127.78182220 412.61251831]
[-121.66963196 398.87799072]
[-113.43330383 386.30184937]
[-103.28618622 375.20986938]
[-91.49110413 365.88934326]
[-78.35357666 358.58172607]
[-64.21390533 353.47622681]
[-49.43833923 350.70516968]
[-34.40959549 350.34030151]
[-19.51696396 352.39108276]
[-15.11596584 338.05123901]
[-10.71496773 323.71139526]
[-12.12144947 319.14730835]
[-10.67573261 313.65121460]
[-5.96356726 309.01364136]
[-1.13756955 294.81118774]
[3.68842816 280.60873413]
[-8.91490841 288.74237061]
[-23.91430092 288.87738037]
[-36.66202545 280.97198486]
[-43.20805740 267.47570801]
[-41.52404022 252.57054138]
[-32.13178635 240.87500000]
[-17.94158554 236.01309204]
[-3.35042667 239.49131775]
[7.12046146 250.23191833]
[10.22654152 264.90704346]
[16.90673637 251.47668457]
[23.58693123 238.04629517]
[30.16695786 224.56657410]
[36.64645386 211.03822327]
[32.92403793 199.52865601]
[38.21149445 188.20494080]
[50.16849136 183.36830139]
[56.84868622 169.93792725]
[63.52888107 156.50755310]
[70.20907593 143.07717896]
[76.88927460 129.64680481]
[83.56946564 116.21643066]
[90.24966431 102.78604889]
[90.73443604 94.74008942]
[97.13059998 89.20655823]
[104.01000977 75.87712860]
[110.48950958 62.34878540]
[116.56333923 48.63351822]
[122.63717651 34.91825104]
[128.71101379 21.20298576]
[134.27023315 7.27118683]
[139.30714417 -6.85784245]
[144.34407043 -20.98687172]
[149.38098145 -35.11590195]
[154.41790771 -49.24493027]
[147.32916260 -58.78885651]
[145.74389648 -70.45023346]
[149.94128418 -81.31650543]
[158.77067566 -88.72984314]
[169.96417236 -90.93711853]
[175.41952515 -104.90991211]
[180.87487793 -118.88271332]
[186.33023071 -132.85551453]
[191.78559875 -146.82830811]
[195.86526489 -161.26286316]
[198.53105164 -176.02407837]
[196.97659302 -185.02526855]
[201.34799194 -190.98451233]
[204.23326111 -205.70440674]
[207.11853027 -220.42430115]
[210.00381470 -235.14419556]
[212.88908386 -249.86408997]
[198.63873291 -254.61340332]
[185.11274719 -261.14608765]
[172.53320312 -269.35482788]
[161.10668945 -279.10485840]
[151.02084351 -290.23605347]
[142.44126892 -302.56567383]
[135.50885010 -315.89120483]
[130.33743286 -329.99386597]
[127.01193237 -344.64205933]
[125.58695984 -359.59524536]
[126.08590698 -374.60787964]
[128.50059509 -389.43344116]
[132.79135132 -403.82849121]
[138.88774109 -417.55667114]
[146.68963623 -430.39251709]
[156.06893921 -442.12524414]
[166.87162781 -452.56222534]
[178.92030334 -461.53204346]
[192.01712036 -468.88742065]
[205.94702148 -474.50756836]
[220.48126221 -478.30023193]
[235.38117981 -480.20309448]
[250.40208435 -480.18490601]
[265.29736328 -478.24600220]
[279.82238770 -474.41818237]
[293.73864746 -468.76434326]
[306.81762695 -461.37728882]
[318.84454346 -452.37832642]
[329.62194824 -441.91525269]
[338.97280884 -430.15985107]
[346.74365234 -417.30517578]
[352.80679321 -403.56228638]
[357.06271362 -389.15689087]
[359.44149780 -374.32553101]
[359.90411377 -359.31170654]
[358.44296265 -344.36203003]
[355.08203125 -329.72192383]
[349.87649536 -315.63183594]
[342.91186523 -302.32312012]
[334.30245972 -290.01431274]
[324.18972778 -278.90753174]
[312.73962402 -269.18518066]
[300.14025879 -261.00689697]
[286.59851074 -254.50697327]
[272.33670044 -249.79216003]
[257.58908081 -246.93984985]
[242.59777832 -245.99691772]
[227.60897827 -246.97880554]
[224.72370911 -232.25892639]
[221.83842468 -217.53903198]
[218.95315552 -202.81913757]
[216.06788635 -188.09924316]
[213.29226685 -173.35827637]
[210.62648010 -158.59706116]
[220.62515259 -169.77857971]
[234.27374268 -176.00080872]
[249.27221680 -176.21517944]
[263.09304810 -170.38557434]
[273.40722656 -159.49438477]
[278.47659302 -145.37696838]
[277.44686890 -130.41235352]
[270.49160767 -117.12233734]
[258.78289795 -107.74653625]
[244.29382324 -103.86492157]
[229.46607971 -106.13162231]
[216.79838562 -114.16465759]
[208.42547607 -126.61032104]
[205.75839233 -141.37295532]
[200.30303955 -127.40015411]
[194.84767151 -113.42735291]
[189.39231873 -99.45455933]
[183.93696594 -85.48175812]
[192.28302002 -69.18884277]
[185.96093750 -51.66901779]
[168.54693604 -44.20801544]
[163.51000977 -30.07898521]
[158.47309875 -15.94995594]
[153.43618774 -1.82092643]
[148.39926147 12.30810356]
[162.86370850 8.33572197]
[175.07717896 17.04382706]
[176.03636169 32.01312637]
[165.03417969 42.20881271]
[150.18103027 40.11500168]
[142.42626953 27.27681923]
[136.35244751 40.99208450]
[130.27861023 54.70735168]
[124.20477295 68.42262268]
[125.08757782 71.08322144]
[124.96967316 74.25382233]
[123.65153503 77.55502319]
[121.07453156 80.54225159]
[117.33943939 82.75654602]
[110.46002960 96.08597565]
[103.68003845 109.46624756]
[96.99983978 122.89662170]
[90.31964874 136.32699585]
[83.63945007 149.75737000]
[76.95925903 163.18774414]
[70.27906036 176.61813354]
[63.59886932 190.04850769]
[65.16671753 208.39579773]
[50.17480087 217.51771545]
[43.69530487 231.04606628]
[42.81070328 240.13755798]
[37.01730728 244.72650146]
[30.33711243 258.15686035]
[23.65691757 271.58724976]
[17.89088440 285.43472290]
[13.06488609 299.63717651]
[8.23888874 313.83966064]
[3.62487912 328.11236572]
[-0.77611881 342.45223999]
[-5.17711687 356.79208374]
[8.30192566 363.44876099]
[20.53853035 372.18154907]
[31.21573830 382.76425171]
[40.05698395 394.92272949]
[46.83325958 408.34204102]
[51.36904144 422.67462158]
[53.54684448 437.54922485]
[53.31025696 452.58053589]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 202]
[30 201]
[31 200]
[34 199]
[35 198]
[36 197]
[46 196]
[47 195]
[48 194]
[49 192]
[50 191]
[53 189]
[54 188]
[55 187]
[56 186]
[57 185]
[58 184]
[59 183]
[61 182]
[62 181]
[63 176]
[64 175]
[65 174]
[66 173]
[67 167]
[68 166]
[69 165]
[70 164]
[71 163]
[76 160]
[77 159]
[78 158]
[79 157]
[80 156]
[81 142]
[82 141]
[84 140]
[85 139]
[86 138]
[87 137]
[88 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
