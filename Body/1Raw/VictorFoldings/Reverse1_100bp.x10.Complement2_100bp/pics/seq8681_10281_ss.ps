%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[115.64082336 714.30786133]
[105.56526184 703.16046143]
[97.17875671 690.69262695]
[90.65205383 677.15814209]
[86.11801910 662.83251953]
[83.66896820 648.00744629]
[83.35475922 632.98474121]
[85.18179321 618.07019043]
[89.11286163 603.56750488]
[95.06793976 589.77197266]
[102.92579651 576.96435547]
[112.52644348 565.40545654]
[123.67443085 555.33056641]
[136.14280701 546.94482422]
[149.67771912 540.41894531]
[164.00361633 535.88580322]
[161.55789185 521.08654785]
[159.11215210 506.28729248]
[144.41322327 503.59906006]
[131.49668884 496.02990723]
[121.93127441 484.47665405]
[116.88632965 470.32144165]
[116.98891449 455.26623535]
[122.24595642 441.12820435]
[132.04106140 429.62048340]
[145.20671082 422.14443970]
[142.76098633 407.34518433]
[140.31526184 392.54589844]
[137.86953735 377.74664307]
[135.42379761 362.94735718]
[132.97807312 348.14810181]
[130.53234863 333.34881592]
[128.08662415 318.54956055]
[121.76174164 332.15087891]
[109.89673615 341.32809448]
[95.14227295 344.03103638]
[80.79454041 339.65582275]
[70.05885315 329.17987061]
[65.33359528 314.94360352]
[67.67440033 300.12734985]
[76.55833435 288.04116821]
[90.00068665 281.38513184]
[104.99841309 281.64617920]
[118.20098877 288.76602173]
[126.65891266 301.15408325]
[126.65891266 286.15408325]
[126.65891266 271.15408325]
[126.65891266 256.15408325]
[126.65891266 241.15408325]
[126.65891266 226.15408325]
[124.54428864 211.30389404]
[113.56192017 201.24224854]
[117.13957977 185.83085632]
[112.95256805 171.42706299]
[108.76555634 157.02328491]
[104.57854462 142.61950684]
[100.39153290 128.21572876]
[96.20452118 113.81194305]
[86.24539948 103.99829865]
[89.39169312 90.37506866]
[85.20468140 75.97129059]
[78.05738831 89.15901184]
[64.15200043 94.78398132]
[49.84588623 90.27453613]
[41.67960739 77.69233704]
[43.38667297 62.78978729]
[54.18663788 52.38013840]
[69.14189911 51.22254181]
[81.41619110 59.84774780]
[78.75039673 45.08653259]
[76.08459473 30.32531548]
[73.41880035 15.56409740]
[68.81407928 7.67522049]
[70.82491302 0.56337565]
[68.37918854 -14.23589516]
[65.93346405 -29.03516579]
[63.48773575 -43.83443832]
[53.60387802 -56.18838120]
[59.16247559 -70.00688934]
[56.71674728 -84.80615997]
[47.52313995 -90.61875916]
[43.13652802 -100.33152771]
[44.78516006 -110.63833618]
[51.68627167 -118.17409515]
[49.68225861 -133.03962708]
[47.67824554 -147.90515137]
[45.67423248 -162.77067566]
[38.01201248 -149.87532043]
[24.64231300 -143.07449341]
[9.70788574 -144.47552490]
[-2.16367674 -153.64427185]
[-7.29384184 -167.73971558]
[-4.09297132 -182.39421082]
[6.44710970 -193.06692505]
[21.06044197 -196.45077515]
[35.21892548 -191.49726868]
[44.53549957 -179.74104309]
[44.53549957 -194.74104309]
[44.53549957 -209.74104309]
[30.76163101 -216.31700134]
[21.21170616 -228.22337341]
[17.78186607 -243.09613037]
[21.15311050 -257.98226929]
[30.65607643 -269.92617798]
[44.40394211 -276.55633545]
[59.66706085 -276.55633545]
[73.41492462 -269.92617798]
[82.91789246 -257.98226929]
[86.28913879 -243.09613037]
[82.85929871 -228.22337341]
[73.30937195 -216.31700134]
[59.53549957 -209.74104309]
[59.53549957 -194.74104309]
[59.53549957 -179.74104309]
[60.53976059 -164.77468872]
[62.54377365 -149.90916443]
[64.54779053 -135.04364014]
[66.55180359 -120.17810822]
[79.45822906 -105.77980804]
[71.51601410 -87.25189209]
[73.96174622 -72.45262146]
[83.67066956 -61.15721893]
[78.28700256 -46.28016281]
[80.73273468 -31.48089409]
[83.17845917 -16.68162346]
[85.62418365 -1.88235176]
[88.18002319 12.89830208]
[90.84581757 27.65951920]
[93.51161194 42.42073822]
[96.17740631 57.18195343]
[99.60846710 71.78427887]
[103.79547882 86.18805695]
[113.75460052 96.00170135]
[110.60830688 109.62493134]
[114.79531860 124.02870941]
[118.98232269 138.43249512]
[123.16933441 152.83627319]
[127.35634613 167.24005127]
[131.54336548 181.64384460]
[142.82521057 192.73574829]
[138.94807434 207.11688232]
[141.86656189 192.40353394]
[148.93931580 179.17568970]
[159.55450439 168.57766724]
[172.79377747 161.52632141]
[187.51182556 158.63165283]
[202.43537903 160.14408875]
[216.27340698 165.93278503]
[227.82878113 175.49694824]
[236.10185242 188.00920105]
[240.37690735 202.38710022]
[240.28410339 217.38681030]
[235.83148193 231.71072388]
[227.40423584 244.11964417]
[215.73141479 253.54011536]
[201.82281494 259.15713501]
[186.88169861 260.48480225]
[172.20059204 257.40826416]
[159.04957581 250.19364929]
[148.56632996 239.46510315]
[141.65892029 226.15408325]
[141.65892029 241.15408325]
[141.65892029 256.15408325]
[141.65892029 271.15408325]
[141.65892029 286.15408325]
[141.65892029 301.15408325]
[142.88589478 316.10382080]
[145.33161926 330.90307617]
[147.77734375 345.70236206]
[150.22306824 360.50161743]
[152.66880798 375.30090332]
[155.11453247 390.10015869]
[157.56025696 404.89944458]
[160.00598145 419.69869995]
[174.87690735 422.54141235]
[187.85362244 430.28588867]
[197.37982178 441.98083496]
[202.32072449 456.20254517]
[202.09820557 471.22827148]
[196.75845337 485.24475098]
[186.96394348 496.56713867]
[173.91142273 503.84155273]
[176.35716248 518.64080811]
[178.80288696 533.44012451]
[193.82554626 533.12310791]
[208.74040222 534.94738770]
[223.24378967 538.87573242]
[237.04046631 544.82824707]
[249.84954834 552.68371582]
[261.41021729 562.28222656]
[271.48718262 573.42834473]
[279.87521362 585.89514160]
[286.40359497 599.42889404]
[290.93939209 613.75390625]
[293.39028931 628.57867432]
[293.70635986 643.60137939]
[291.88116455 658.51611328]
[287.95190430 673.01928711]
[281.99853516 686.81555176]
[274.14227295 699.62414551]
[264.54302979 711.18426514]
[253.39630127 721.26049805]
[240.92897034 729.64776611]
[227.39486694 736.17535400]
[213.06951904 740.71026611]
[198.24459839 743.16021729]
[183.22190857 743.47534180]
[168.30728149 741.64923096]
[153.80436707 737.71905518]
[140.00842285 731.76483154]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 184]
[17 183]
[18 182]
[26 174]
[27 173]
[28 172]
[29 171]
[30 170]
[31 169]
[32 168]
[33 167]
[45 166]
[46 165]
[47 164]
[48 163]
[49 162]
[50 161]
[51 141]
[53 139]
[54 138]
[55 137]
[56 136]
[57 135]
[58 134]
[60 132]
[61 131]
[69 130]
[70 129]
[71 128]
[72 127]
[74 126]
[75 125]
[76 124]
[77 123]
[79 121]
[80 120]
[84 118]
[85 117]
[86 116]
[87 115]
[97 114]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
