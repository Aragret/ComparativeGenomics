%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[83.86207581 461.02273560]
[73.39208221 471.86904907]
[60.63026047 479.89395142]
[46.31856155 484.63092041]
[31.28905487 485.80450439]
[16.41553116 483.34652710]
[2.56272125 477.39984131]
[-9.46399307 468.31018066]
[-18.96539307 456.60604858]
[-25.38908005 442.96786499]
[-28.36158943 428.18856812]
[-27.71010399 413.12741089]
[-23.47249794 398.66000366]
[-15.89514351 385.62744141]
[-5.41857576 374.78747559]
[7.34811068 366.77029419]
[21.66267776 362.04202271]
[36.69289398 360.87753296]
[39.13862228 346.07827759]
[41.58435059 331.27899170]
[44.03007507 316.47973633]
[37.24290466 306.46667480]
[39.15936279 294.11715698]
[49.29102707 286.13516235]
[51.95682144 271.37396240]
[54.62261963 256.61273193]
[53.13690186 254.23559570]
[52.50328064 251.12670898]
[53.00518417 247.60769653]
[54.80449295 244.09671021]
[57.91157150 241.06355286]
[61.45124054 226.48718262]
[64.99091339 211.91079712]
[60.47548676 197.71713257]
[71.25080872 186.13253784]
[74.79048157 171.55616760]
[66.84600830 159.00941467]
[70.22808838 144.17646790]
[83.44213867 135.92864990]
[86.98181152 121.35226440]
[90.52148438 106.77589417]
[79.64718628 117.10786438]
[65.39363861 121.78080750]
[50.51297760 119.89244843]
[37.87842560 111.80739594]
[29.92951202 99.08675385]
[28.20105362 84.18666840]
[33.02678680 69.98412323]
[43.47493744 59.22140503]
[57.52812958 53.97661972]
[72.47291565 55.26245880]
[85.42369080 62.83064651]
[93.87985992 75.21988678]
[96.20858765 90.03927612]
[102.28242493 76.32400513]
[108.35625458 62.60874176]
[114.43009186 48.89347458]
[105.48442078 40.26473999]
[99.62880707 29.32925034]
[97.41474915 17.14871597]
[99.04103088 4.90052509]
[104.33593750 -6.23606443]
[112.77528381 -15.19346142]
[123.53425598 -21.11808586]
[135.56800842 -23.45169067]
[147.71313477 -21.98394203]
[154.39332581 -35.41431808]
[161.07351685 -48.84469223]
[167.75370789 -62.27507019]
[174.43391418 -75.70544434]
[181.11410522 -89.13581848]
[187.39146423 -102.75914001]
[193.26042175 -116.56331635]
[181.07440186 -125.41243744]
[171.16799927 -136.74607849]
[164.03561401 -149.99371338]
[160.03213501 -164.48942566]
[159.35522461 -179.50535583]
[162.03562927 -194.28826904]
[167.93577576 -208.09733582]
[176.75675964 -220.24127197]
[188.05361938 -230.11291504]
[201.25765991 -237.21958923]
[215.70515442 -241.20770264]
[230.67063904 -241.88037109]
[245.40342712 -239.20704651]
[251.27238464 -253.01123047]
[249.55143738 -268.73855591]
[261.65164185 -277.42385864]
[267.52059937 -291.22802734]
[273.38955688 -305.03222656]
[279.25851440 -318.83639526]
[266.19845581 -326.24804688]
[254.06840515 -335.10015869]
[243.02651978 -345.27731323]
[233.21673584 -356.64682007]
[224.76695251 -369.06048584]
[217.78732300 -382.35644531]
[212.36885071 -396.36135864]
[208.58216858 -410.89266968]
[206.47665405 -425.76089478]
[206.07974243 -440.77224731]
[207.39662170 -455.73098755]
[210.41011047 -470.44207764]
[215.08093262 -484.71377563]
[221.34819031 -498.35998535]
[229.13017273 -511.20281982]
[238.32543945 -523.07482910]
[248.81410217 -533.82128906]
[260.45941162 -543.30200195]
[273.10955811 -551.39349365]
[286.59960938 -557.99011230]
[300.75372314 -563.00604248]
[315.38735962 -566.37573242]
[330.30969238 -568.05529785]
[345.32626343 -568.02294922]
[360.24121094 -566.27893066]
[374.86016846 -562.84613037]
[388.99249268 -557.76922607]
[402.45394897 -551.11437988]
[415.06906128 -542.96844482]
[426.67337036 -533.43750000]
[437.11557007 -522.64593506]
[446.25949097 -510.73434448]
[453.98599243 -497.85803223]
[460.19430542 -484.18490601]
[464.80349731 -469.89318848]
[467.75347900 -455.16921997]
[469.00579834 -440.20495605]
[468.54412842 -425.19546509]
[466.37445068 -410.33645630]
[462.52511597 -395.82162476]
[457.04623413 -381.84020996]
[450.00930786 -368.57449341]
[441.50604248 -356.19741821]
[431.64727783 -344.87033081]
[420.56158447 -334.74090576]
[408.39343262 -325.94125366]
[395.30151367 -318.58599854]
[381.45648193 -312.77111816]
[367.03884888 -308.57238770]
[352.23657227 -306.04455566]
[337.24261475 -305.22055054]
[322.25244141 -306.11114502]
[307.46154785 -308.70471191]
[293.06268311 -312.96743774]
[287.19372559 -299.16326904]
[281.32476807 -285.35906982]
[275.45581055 -271.55490112]
[277.59655762 -256.81494141]
[265.07656860 -247.14227295]
[259.20761108 -233.33808899]
[271.35476685 -224.58317566]
[281.25378418 -213.33915710]
[288.40576172 -200.16784668]
[292.44924927 -185.72824097]
[293.17828369 -170.74369812]
[290.55313110 -155.96554565]
[284.70227051 -142.13552856]
[275.91619873 -129.94848633]
[264.63290405 -120.01753235]
[251.41619873 -112.84313965]
[236.92736816 -108.78794098]
[221.89219666 -108.05841064]
[207.06460571 -110.69435120]
[201.19564819 -96.89017487]
[202.11796570 -94.24301147]
[202.04727173 -91.07100677]
[200.77842712 -87.75054932]
[198.24618530 -84.72528076]
[194.54447937 -82.45562744]
[187.86428833 -69.02525330]
[181.18409729 -55.59487534]
[174.50389099 -42.16450119]
[167.82369995 -28.73412323]
[161.14350891 -15.30374718]
[172.51023865 -1.74228585]
[176.81089783 15.47684765]
[173.13360596 32.89395905]
[162.17420959 46.98862457]
[146.10525513 54.89126968]
[128.14535522 54.96730804]
[122.07152557 68.68257904]
[115.99768829 82.39784241]
[109.92385864 96.11310577]
[105.09785461 110.31556702]
[101.55818176 124.89193726]
[98.01851654 139.46832275]
[105.97821045 152.85789490]
[102.18083191 167.58999634]
[89.36685944 175.09584045]
[85.82718658 189.67221069]
[90.08943176 204.90847778]
[79.56729126 215.45046997]
[76.02761841 230.02685547]
[72.48794556 244.60322571]
[69.38383484 259.27853394]
[66.71804047 274.03973389]
[64.05224609 288.80096436]
[70.67913055 305.98135376]
[58.82934570 318.92544556]
[56.38362122 333.72473145]
[53.93789291 348.52398682]
[51.49216461 363.32327271]
[65.34857941 369.26153564]
[77.38079834 378.34390259]
[86.88929749 390.04226685]
[93.32125092 403.67654419]
[96.30271912 418.45404053]
[95.66036224 433.51559448]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 204]
[19 203]
[20 202]
[21 201]
[24 199]
[25 198]
[26 197]
[31 196]
[32 195]
[33 194]
[35 192]
[36 191]
[39 188]
[40 187]
[41 186]
[54 185]
[55 184]
[56 183]
[57 182]
[66 176]
[67 175]
[68 174]
[69 173]
[70 172]
[71 171]
[72 166]
[73 165]
[86 152]
[87 151]
[89 149]
[90 148]
[91 147]
[92 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
