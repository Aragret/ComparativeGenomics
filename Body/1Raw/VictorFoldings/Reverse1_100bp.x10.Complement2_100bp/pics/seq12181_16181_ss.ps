%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUAGGAAAUUUUCAACUCUUUCGGUACAACAAUCUGUACCCCCGUACUCAAUCGUCAAGAACACUCGAAAGAGCCAUUUAUUCCCCAGCAUUCGGAGAxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[26.27113914 503.18041992]
[28.65466690 487.72555542]
[40.44875717 477.45748901]
[40.00215149 462.46414185]
[39.55554581 447.47079468]
[39.10894012 432.47744751]
[38.66233444 417.48410034]
[38.21572876 402.49075317]
[26.18652725 411.45166016]
[11.64238167 407.78182983]
[5.30469275 394.18646240]
[11.84537029 380.68759155]
[26.44286919 377.23608398]
[38.33570862 386.37475586]
[39.00549316 371.38970947]
[39.67527771 356.40469360]
[40.01025391 341.40841675]
[40.01025391 326.40841675]
[40.01025391 311.40841675]
[40.01025391 296.40841675]
[33.17869186 309.76245117]
[22.90349197 320.69039917]
[9.99499416 328.33047485]
[-4.52878189 332.08013916]
[-19.52243042 331.64364624]
[-33.80348969 327.05548096]
[-46.24569702 318.67745972]
[-55.86780548 307.17028809]
[-61.91097641 293.44146729]
[-63.89862442 278.57376099]
[-61.67398834 263.73962402]
[-55.41251373 250.10900879]
[-45.60801315 238.75683594]
[-33.03370285 230.57839966]
[-18.68124771 226.21870422]
[-3.68254423 226.02153015]
[10.77954960 230.00247192]
[23.56449127 237.84754944]
[33.66400909 248.93807983]
[40.28160858 262.39941406]
[42.89552307 277.17337036]
[47.29652023 262.83352661]
[51.69752121 248.49368286]
[55.99164200 234.12147522]
[60.17865372 219.71769714]
[64.36566925 205.31391907]
[54.59931564 189.83056641]
[59.33313751 171.81657410]
[76.01206970 162.83172607]
[79.76836395 148.30966187]
[83.52466583 133.78759766]
[87.28096771 119.26554108]
[91.03726959 104.74348450]
[89.84651184 96.77136993]
[94.95910645 90.03399658]
[98.93120575 75.56947327]
[102.90330505 61.10494995]
[106.87539673 46.64042282]
[110.84749603 32.17589951]
[114.81958771 17.71137619]
[104.82766724 1.61554575]
[109.69045258 -16.36406136]
[125.86882782 -24.93003082]
[129.40849304 -39.50640488]
[132.94816589 -54.08278275]
[136.48783875 -68.65915680]
[140.02751160 -83.23553467]
[140.80883789 -98.21517181]
[138.80482483 -113.08069611]
[136.80081177 -127.94622803]
[134.79679871 -142.81175232]
[123.76512146 -132.64799500]
[108.91810608 -134.78482056]
[101.20041656 -147.64706421]
[106.30124664 -161.75314331]
[120.46045685 -166.70458984]
[133.23950195 -158.85275269]
[132.34667969 -173.82617188]
[131.45387268 -188.79957581]
[130.56105042 -203.77297974]
[129.44540405 -218.73143005]
[128.10717773 -233.67161560]
[126.76893616 -248.61180115]
[125.09739685 -263.51837158]
[123.09338379 -278.38391113]
[121.08937073 -293.24942017]
[119.08535767 -308.11495972]
[117.08134460 -322.98049927]
[102.08422852 -324.45806885]
[87.83231354 -329.35498047]
[75.09419250 -337.40713501]
[64.55680847 -348.18026733]
[56.78843307 -361.09338379]
[52.20800400 -375.45013428]
[51.06253815 -390.47628784]
[53.41381073 -405.36145020]
[59.13501740 -419.30291748]
[67.91762543 -431.54882812]
[79.28799438 -441.43878174]
[92.63293457 -448.43945312]
[107.23278046 -452.17327881]
[122.30016327 -452.43887329]
[137.02253723 -449.22195435]
[150.60592651 -442.69598389]
[162.31781006 -433.21292114]
[171.52656555 -421.28414917]
[177.73559570 -407.55300903]
[180.61003113 -392.75994873]
[179.99487305 -377.70278931]
[175.92330933 -363.19351196]
[168.61488342 -350.01458740]
[158.46374512 -338.87677002]
[146.01733398 -330.38067627]
[131.94686890 -324.98449707]
[133.95088196 -310.11898804]
[135.95489502 -295.25344849]
[137.95890808 -280.38790894]
[139.96292114 -265.52239990]
[142.53012085 -263.10540771]
[144.05416870 -259.32489014]
[143.90695190 -254.68466187]
[141.70912170 -249.95004272]
[143.04736328 -235.00985718]
[144.38558960 -220.06967163]
[147.41102600 -216.37428284]
[148.14717102 -210.73912048]
[145.53445435 -204.66578674]
[146.42727661 -189.69238281]
[147.32009888 -174.71897888]
[148.21290588 -159.74557495]
[149.66232300 -144.81576538]
[151.66633606 -129.95024109]
[153.67034912 -115.08470917]
[155.67436218 -100.21918488]
[160.45593262 -114.43666077]
[168.34700012 -127.19326782]
[178.93359375 -137.81983948]
[191.66038513 -145.75891113]
[205.85974121 -150.59400940]
[220.78680420 -152.07150269]
[235.65850830 -150.11389160]
[249.69473267 -144.82386780]
[262.15914917 -136.47892761]
[272.39791870 -125.51682281]
[279.87393188 -112.51261902]
[284.19500732 -98.14848328]
[285.13446045 -83.17793274]
[282.64300537 -68.38629150]
[276.85137939 -54.54949188]
[268.06335449 -42.39339828]
[256.73995972 -32.55568314]
[243.47517395 -25.55242157]
[228.96485901 -21.75098610]
[213.97019958 -21.35079384]
[199.27778625 -24.37283897]
[185.65834045 -30.65858841]
[173.82630920 -39.87830734]
[164.40238953 -51.54834366]
[157.88095093 -65.05651855]
[154.60389709 -79.69586182]
[151.06422424 -65.11948395]
[147.52455139 -50.54310989]
[143.98487854 -35.96673203]
[140.44520569 -21.39035797]
[148.35173035 -13.16521454]
[151.33683777 -2.02946758]
[148.54718018 9.28033924]
[140.56347656 17.92681313]
[129.28411865 21.68347359]
[125.31201935 36.14799881]
[121.33992004 50.61252213]
[117.36782837 65.07704163]
[113.39572906 79.54156494]
[109.42363739 94.00609589]
[105.55932617 108.49978638]
[101.80302429 123.02184296]
[98.04673004 137.54389954]
[94.29042816 152.06596375]
[90.53412628 166.58802795]
[98.44606018 175.46145630]
[101.06538391 186.93490601]
[97.85417175 198.13232422]
[89.72137451 206.30381775]
[78.76944733 209.50093079]
[74.58243561 223.90470886]
[70.39542389 238.30848694]
[71.00502014 247.42256165]
[66.03736877 252.89468384]
[61.63636780 267.23452759]
[57.23537064 281.57437134]
[55.01025391 296.40841675]
[55.01025391 311.40841675]
[55.01025391 326.40841675]
[55.01025391 341.40841675]
[57.62171936 345.92810059]
[58.18232727 350.53668213]
[57.00164032 354.43807983]
[54.66031647 357.07446289]
[53.99053192 372.05950928]
[53.32074738 387.04455566]
[53.20907974 402.04412842]
[53.65568542 417.03747559]
[54.10229111 432.03082275]
[54.54889679 447.02416992]
[54.99550247 462.01754761]
[55.44210815 477.01089478]
[67.82645416 486.55874634]
[71.12564850 501.84436035]
[63.78190613 515.65026855]
[49.26271820 521.45776367]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 206]
[4 205]
[5 204]
[6 203]
[7 202]
[8 201]
[14 200]
[15 199]
[16 198]
[17 194]
[18 193]
[19 192]
[20 191]
[41 190]
[42 189]
[43 188]
[44 186]
[45 185]
[46 184]
[49 179]
[50 178]
[51 177]
[52 176]
[53 175]
[55 174]
[56 173]
[57 172]
[58 171]
[59 170]
[60 169]
[63 164]
[64 163]
[65 162]
[66 161]
[67 160]
[68 134]
[69 133]
[70 132]
[71 131]
[77 130]
[78 129]
[79 128]
[80 127]
[81 124]
[82 123]
[83 122]
[84 118]
[85 117]
[86 116]
[87 115]
[88 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
