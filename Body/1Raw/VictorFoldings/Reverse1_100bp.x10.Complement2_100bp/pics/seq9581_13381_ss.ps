%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[62.26454926 666.11413574]
[49.32240295 673.77386475]
[35.24670410 679.06970215]
[20.46520042 681.84069824]
[5.42708492 682.00256348]
[-9.41065121 679.55047607]
[-23.59710503 674.55895996]
[-36.70116806 667.17962646]
[-48.32462311 657.63671875]
[-58.11424255 646.22033691]
[-65.77253723 633.27728271]
[-71.06677246 619.20098877]
[-73.83606720 604.41918945]
[-73.99626160 589.38104248]
[-71.54249573 574.54357910]
[-66.54933167 560.35772705]
[-59.16850662 547.25445557]
[-49.62431335 535.63208008]
[-38.20679092 525.84381104]
[-25.26290512 518.18695068]
[-11.18600750 512.89434814]
[3.59612417 510.12670898]
[18.63427544 509.96820068]
[21.08000374 495.16894531]
[23.52573013 480.36965942]
[25.97145844 465.57040405]
[28.41718483 450.77111816]
[30.86291313 435.97186279]
[32.86692810 421.10632324]
[34.42744827 406.18771362]
[35.98797226 391.26910400]
[37.54849625 376.35052490]
[39.10902023 361.43191528]
[40.66954041 346.51330566]
[42.23006439 331.59469604]
[43.79058838 316.67608643]
[34.35599518 307.90011597]
[31.65844154 295.10147095]
[36.90200043 282.90655518]
[48.37821579 275.85595703]
[50.16068268 260.96224976]
[51.94314957 246.06852722]
[53.72561646 231.17480469]
[44.15612793 242.72576904]
[30.55886650 249.05937195]
[15.55924511 248.95268250]
[2.05345893 242.42628479]
[-7.35073805 230.74035645]
[-10.83754158 216.15124512]
[-7.73370600 201.47587585]
[1.36146784 189.54785156]
[14.69184399 182.67027283]
[29.68353653 182.17109680]
[43.44188309 188.14671326]
[53.31036377 199.44331360]
[57.38359451 213.88096619]
[61.78459549 199.54112244]
[66.18559265 185.20127869]
[62.52299118 170.76400757]
[73.96874237 159.84130859]
[78.36973572 145.50146484]
[82.77073669 131.16162109]
[87.17173767 116.82176971]
[91.57273102 102.48191833]
[90.37809753 99.67793274]
[90.17732239 96.37728882]
[91.15630341 92.94727325]
[93.36269379 89.81867981]
[96.68610382 87.43374634]
[94.26460266 71.79895020]
[105.96490479 62.58200073]
[103.54340363 46.94720459]
[115.24370575 37.73025894]
[120.49042511 23.67778587]
[125.73714447 9.62531567]
[125.80711365 0.49115309]
[131.16799927 -4.59634638]
[136.62336731 -18.56914330]
[142.07872009 -32.54194260]
[147.53407288 -46.51473999]
[143.07949829 -58.61926651]
[147.91093445 -70.14493561]
[158.93531799 -75.12385559]
[164.59811401 -89.01387787]
[170.26089478 -102.90390778]
[175.92367554 -116.79393768]
[162.62440491 -123.75627136]
[150.04718018 -131.95126343]
[138.30589294 -141.30471802]
[127.50688171 -151.73190308]
[117.74794769 -163.13838196]
[109.11747742 -175.42088318]
[101.69362640 -188.46815491]
[95.54363251 -202.16203308]
[90.72317505 -216.37849426]
[87.27593231 -230.98881531]
[85.23311615 -245.86065674]
[84.61322021 -260.85934448]
[85.42185974 -275.84902954]
[87.65171814 -290.69396973]
[91.28260040 -305.25973511]
[96.28161621 -319.41439819]
[102.60350037 -333.02978516]
[110.19099426 -345.98257446]
[118.97538757 -358.15545654]
[128.87712097 -369.43820190]
[139.80653381 -379.72863770]
[151.66462708 -388.93353271]
[164.34400940 -396.96957397]
[177.72987366 -403.76394653]
[191.70097351 -409.25512695]
[206.13078308 -413.39340210]
[220.88862610 -416.14129639]
[235.84085083 -417.47387695]
[250.85203552 -417.37911987]
[265.78625488 -415.85787964]
[280.50820923 -412.92391968]
[294.88464355 -408.60382080]
[308.78530884 -402.93670654]
[322.08432007 -395.97387695]
[334.66125488 -387.77841187]
[346.40219116 -378.42456055]
[357.20083618 -367.99697876]
[366.95935059 -356.59011841]
[375.58935547 -344.30731201]
[383.01275635 -331.25976562]
[389.16223145 -317.56567383]
[393.98217773 -303.34902954]
[397.42889404 -288.73858643]
[399.47116089 -273.86666870]
[400.09051514 -258.86798096]
[399.28134155 -243.87831116]
[397.05093384 -229.03343201]
[393.41952515 -214.46780396]
[388.41998291 -200.31332397]
[382.09759521 -186.69818115]
[374.50964355 -173.74566650]
[365.72479248 -161.57310486]
[355.82266235 -150.29071045]
[344.89288330 -140.00068665]
[333.03445435 -130.79620361]
[320.35476685 -122.76063538]
[306.96865845 -115.96674347]
[292.99734497 -110.47606659]
[278.56738281 -106.33831787]
[263.80944824 -103.59098053]
[248.85717773 -102.25893402]
[233.84599304 -102.35423279]
[218.91183472 -103.87602234]
[204.18997192 -106.81051636]
[189.81370544 -111.13114929]
[184.15092468 -97.24111938]
[178.48812866 -83.35109711]
[172.82534790 -69.46106720]
[176.14643860 -52.22919846]
[161.50688171 -41.05938339]
[156.05151367 -27.08658409]
[150.59616089 -13.11378670]
[145.14080811 0.85901070]
[139.78961182 14.87203312]
[134.54289246 28.92450523]
[129.29617310 42.97697449]
[132.09297180 57.60664749]
[120.01737976 67.82872009]
[122.81416321 82.45838928]
[110.73857880 92.68046570]
[105.91258240 106.88291931]
[101.51158142 121.22276306]
[97.11058044 135.56260681]
[92.70958710 149.90246582]
[88.30858612 164.24230957]
[91.65640259 179.70526123]
[80.52543640 189.60227966]
[76.12444305 203.94212341]
[71.72344208 218.28196716]
[68.61933136 232.95727539]
[66.83686829 247.85098267]
[65.05439758 262.74468994]
[63.27193451 277.63842773]
[74.33409882 291.19009399]
[72.21440887 308.21423340]
[58.70919418 318.23660278]
[57.14867020 333.15521240]
[55.58814621 348.07382202]
[54.02762222 362.99243164]
[52.46710205 377.91104126]
[50.90657806 392.82965088]
[49.34605408 407.74822998]
[47.78553009 422.66683960]
[49.69368362 426.56723022]
[50.20954132 430.47854614]
[49.50063705 433.96176147]
[47.85986328 436.67736816]
[45.66218185 438.41757202]
[43.21645737 453.21685791]
[40.77072906 468.01611328]
[38.32500076 482.81539917]
[35.87927246 497.61465454]
[33.43354797 512.41394043]
[47.62113190 517.40228271]
[60.72686768 524.77862549]
[72.35248566 534.31890869]
[82.14469910 545.73309326]
[89.80592346 558.67437744]
[95.10335541 572.74945068]
[97.87599945 587.53063965]
[98.03961182 602.56872559]
[95.58921051 617.40673828]
[90.59925842 631.59375000]
[83.22140503 644.69866943]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 199]
[24 198]
[25 197]
[26 196]
[27 195]
[28 194]
[29 189]
[30 188]
[31 187]
[32 186]
[33 185]
[34 184]
[35 183]
[36 182]
[40 179]
[41 178]
[42 177]
[43 176]
[56 175]
[57 174]
[58 173]
[60 171]
[61 170]
[62 169]
[63 168]
[64 167]
[69 166]
[71 164]
[73 162]
[74 161]
[75 160]
[77 159]
[78 158]
[79 157]
[80 156]
[83 154]
[84 153]
[85 152]
[86 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
