%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUAAUCAGUAACAACCCACCACUAAUCAGCCAACAACUACUCUAUAAACCUCCACCCCUAGUUAUCUCCCCCUUUAUCUUACUAGUCAUGACGCCxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[108.44772339 337.73052979]
[115.00260925 324.17593384]
[124.23271942 312.28060913]
[135.73457336 302.56457520]
[149.00534058 295.45257568]
[144.81832886 281.04879761]
[140.63131714 266.64501953]
[136.44430542 252.24124146]
[132.25729370 237.83746338]
[121.27491760 227.77581787]
[124.85257721 212.36442566]
[120.66556549 197.96064758]
[116.47855377 183.55685425]
[105.49617767 173.49520874]
[109.07384491 158.08383179]
[104.88683319 143.68003845]
[100.69982147 129.27626038]
[82.96469116 123.81990051]
[72.06893921 108.80027771]
[72.38699341 90.24750519]
[83.79116821 75.61018372]
[78.96517181 61.40773010]
[74.13917542 47.20527267]
[66.96380615 34.03279877]
[57.64892578 22.27554703]
[48.33404160 10.51829529]
[39.01916122 -1.23895597]
[29.61700821 -12.92653751]
[20.12811089 -24.54380035]
[10.63921165 -36.16106415]
[1.15031362 -47.77832794]
[-8.33858490 -59.39559174]
[-17.82748222 -71.01285553]
[-30.02159500 -62.26910782]
[-42.74066925 -54.30828857]
[-55.93451309 -47.16182327]
[-69.55104828 -40.85790634]
[-83.53654480 -35.42142487]
[-97.83580780 -30.87382698]
[-112.39240265 -27.23306656]
[-127.14887238 -24.51350975]
[-142.04698181 -22.72588730]
[-157.02795410 -21.87725639]
[-172.03263855 -21.97096634]
[-187.00183105 -23.00664520]
[-201.87646484 -24.98020935]
[-216.59782410 -27.88386536]
[-231.10780334 -31.70615768]
[-245.34915161 -36.43199921]
[-259.26565552 -42.04273987]
[-272.80239868 -48.51623917]
[-285.90594482 -55.82694244]
[-298.52459717 -63.94600296]
[-310.60855103 -72.84137726]
[-322.11010742 -82.47795105]
[-332.98385620 -92.81771088]
[-343.18695068 -103.81983185]
[-352.67904663 -115.44090271]
[-361.42272949 -127.63506317]
[-369.38348389 -140.35417175]
[-376.52987671 -153.54806519]
[-382.83374023 -167.16462708]
[-388.27014160 -181.15016174]
[-392.81765747 -195.44943237]
[-396.45834351 -210.00604248]
[-399.17782593 -224.76254272]
[-400.96536255 -239.66065979]
[-401.81393433 -254.64163208]
[-401.72012329 -269.64633179]
[-400.68438721 -284.61550903]
[-398.71075439 -299.49011230]
[-395.80700684 -314.21145630]
[-391.98464966 -328.72143555]
[-387.25872803 -342.96273804]
[-381.64791870 -356.87921143]
[-375.17434692 -370.41592407]
[-367.86355591 -383.51943970]
[-359.74444580 -396.13806152]
[-350.84899902 -408.22195435]
[-341.21237183 -419.72344971]
[-330.87255859 -430.59716797]
[-319.87039185 -440.80020142]
[-308.24926758 -450.29223633]
[-296.05505371 -459.03585815]
[-283.33590698 -466.99655151]
[-270.14196777 -474.14288330]
[-256.52536011 -480.44665527]
[-242.53982544 -485.88299561]
[-228.24050903 -490.43045044]
[-213.68388367 -494.07104492]
[-198.92738342 -496.79043579]
[-184.02925110 -498.57791138]
[-169.04827881 -499.42639160]
[-154.04357910 -499.33251953]
[-139.07440186 -498.29669189]
[-124.19979858 -496.32296753]
[-109.47846985 -493.41915894]
[-94.96852875 -489.59671021]
[-80.72723389 -484.87072754]
[-66.81079102 -479.25982666]
[-53.27411652 -472.78619385]
[-40.17064285 -465.47537231]
[-27.55207634 -457.35617065]
[-15.46821976 -448.46066284]
[-3.96676397 -438.82397461]
[6.90690136 -428.48410034]
[17.10986137 -417.48187256]
[26.60185051 -405.86068726]
[35.34540939 -393.66644287]
[43.30602646 -380.94726562]
[50.45228577 -367.75329590]
[56.75598907 -354.13665771]
[62.19225311 -340.15109253]
[66.73962402 -325.85174561]
[70.38015747 -311.29510498]
[73.09948730 -296.53857422]
[74.88687134 -281.64044189]
[75.73526764 -266.65945435]
[75.64132690 -251.65476990]
[74.60540771 -236.68559265]
[72.63161469 -221.81100464]
[69.72772980 -207.08969116]
[65.90521240 -192.57977295]
[61.17914581 -178.33850098]
[55.56818390 -164.42208862]
[49.09447861 -150.88543701]
[41.78356934 -137.78201294]
[33.66431046 -125.16348267]
[24.76874924 -113.07967377]
[15.13198853 -101.57826996]
[4.79206371 -90.70465851]
[-6.21021986 -80.50175476]
[3.27867866 -68.88449097]
[12.76757717 -57.26722717]
[22.25647545 -45.64996338]
[31.74537277 -34.03269958]
[41.23427200 -22.41543579]
[47.90016174 -19.22361374]
[50.77641296 -10.55383873]
[60.09129333 1.20341241]
[69.40617371 12.96066380]
[78.72106171 24.71791458]
[75.61944580 10.04208469]
[76.21394348 -4.94612980]
[80.46820831 -19.33019257]
[88.12207794 -32.23051453]
[98.70751953 -42.85823441]
[111.57722473 -50.56346130]
[125.94422150 -54.87502289]
[140.92994690 -55.52926254]
[155.61802673 -52.48617172]
[169.11026001 -45.93183899]
[180.58163452 -36.26706314]
[189.33062744 -24.08284760]
[194.82225037 -10.12426472]
[196.72068787 4.75511456]
[194.90986633 19.64541054]
[189.50048828 33.63607407]
[180.82336426 45.87157059]
[169.40908813 55.60369873]
[155.95564270 62.23733139]
[141.28573608 65.36682129]
[126.29641724 64.80079651]
[111.90429688 60.57387543]
[98.98945618 52.94453049]
[88.34162903 42.37927628]
[93.16762543 56.58172989]
[97.99362183 70.78418732]
[109.00643921 72.13472748]
[118.72638702 77.48529816]
[125.75817871 86.06783295]
[129.09242249 96.65030670]
[128.25047302 107.71363068]
[123.35319519 117.66967010]
[115.10359955 125.08924866]
[119.29061127 139.49302673]
[123.47762299 153.89682007]
[134.75947571 164.98870850]
[130.88233948 179.36984253]
[135.06935120 193.77363586]
[139.25636292 208.17741394]
[150.53822327 219.26931763]
[146.66107178 233.65045166]
[150.84808350 248.05422974]
[155.03509521 262.45800781]
[159.22210693 276.86178589]
[163.40911865 291.26556396]
[178.42446899 290.15512085]
[193.34251404 292.19119263]
[207.51110840 297.28479004]
[220.31085205 305.21322632]
[231.18220520 315.62991333]
[239.64993286 328.07946777]
[245.34382629 342.01763916]
[248.01501465 356.83514404]
[247.54669189 371.88421631]
[243.95933533 386.50695801]
[237.40979004 400.06414795]
[228.18435669 411.96310425]
[216.68632507 421.68365479]
[203.41836548 428.80087280]
[188.96046448 433.00360107]
[173.94468689 434.10815430]
[159.02745056 432.06619263]
[144.86085510 426.96704102]
[132.06422424 419.03356934]
[121.19696045 408.61260986]
[112.73414612 396.15972900]
[107.04572296 382.21929932]
[104.38037872 367.40072632]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 187]
[6 186]
[7 185]
[8 184]
[9 183]
[11 181]
[12 180]
[13 179]
[15 177]
[16 176]
[17 175]
[21 168]
[22 167]
[23 166]
[24 142]
[25 141]
[26 140]
[27 139]
[28 137]
[29 136]
[30 135]
[31 134]
[32 133]
[33 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
