%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[206.53680420 554.30670166]
[209.41812134 539.56378174]
[214.19917297 525.32312012]
[220.79817200 511.82836914]
[229.10217285 499.31045532]
[238.96908569 487.98355103]
[250.23010254 478.04147339]
[262.69250488 469.65435791]
[256.01229858 456.22399902]
[249.23231506 442.84371948]
[242.35290527 429.51428223]
[235.47349548 416.18484497]
[228.59407043 402.85543823]
[221.71466064 389.52600098]
[214.83525085 376.19656372]
[212.52613831 391.01776123]
[203.19296265 402.76049805]
[189.27539062 408.35525513]
[174.41143799 406.33953857]
[162.48652649 397.24029541]
[156.61776733 383.43603516]
[158.33926392 368.53515625]
[167.20101929 356.43270874]
[180.88658142 350.29223633]
[195.81858826 351.71887207]
[208.09326172 360.33898926]
[203.26727295 346.13653564]
[198.44126892 331.93408203]
[193.50967407 317.76794434]
[188.47276306 303.63891602]
[182.70672607 289.79141235]
[176.22723389 276.26306152]
[169.74774170 262.73474121]
[163.26823425 249.20637512]
[156.78874207 235.67803955]
[150.30924988 222.14968872]
[143.82975769 208.62133789]
[129.73989868 203.92971802]
[122.97604370 190.30235291]
[127.99259186 175.55541992]
[121.51309967 162.02706909]
[115.03359985 148.49871826]
[108.55410767 134.97038269]
[102.07460785 121.44203186]
[95.59511566 107.91368866]
[92.17609406 106.12968445]
[89.56003571 102.84729767]
[88.39849854 98.45891571]
[89.14351654 93.63348389]
[83.27455139 79.82930756]
[77.40559387 66.02513123]
[69.45915985 78.74732208]
[54.57630920 80.61835480]
[43.72812653 70.25896454]
[44.91148376 55.30571747]
[57.25405884 46.78158188]
[71.65612793 50.96914291]
[66.83013153 36.76668930]
[55.62650299 30.37595177]
[51.89930344 18.44734001]
[57.12604141 7.53827095]
[52.51203156 -6.73446226]
[47.89802170 -21.00719643]
[40.12177277 -8.18027210]
[25.58657837 -4.47512770]
[12.61885548 -12.01423645]
[8.64710617 -26.47885513]
[15.94652843 -39.58299255]
[30.33568192 -43.82000732]
[43.57119751 -36.76346970]
[40.24893951 -51.39093018]
[35.29655457 -59.06632614]
[36.98782349 -66.26086426]
[33.88371277 -80.93617249]
[30.77960205 -95.61147308]
[27.67549324 -110.28677368]
[24.57138252 -124.96207428]
[21.35810852 -139.61386108]
[18.03584862 -154.24131775]
[3.03193617 -153.30389404]
[-11.92804050 -154.78553772]
[-26.45658112 -158.64788818]
[-40.17736053 -164.79087830]
[-52.73498154 -173.05540466]
[-63.80416489 -183.22738647]
[-73.09819794 -195.04336548]
[-80.37634277 -208.19725037]
[-85.45007324 -222.34834290]
[-88.18796539 -237.13009644]
[-88.51911163 -252.15960693]
[-86.43492889 -267.04760742]
[-81.98940277 -281.40844727]
[-75.29768372 -294.87011719]
[-66.53310394 -307.08398438]
[-55.92267990 -317.73364258]
[-43.74125671 -326.54324341]
[-30.30435753 -333.28460693]
[-15.96003151 -337.78308105]
[-1.07983184 -339.92221069]
[13.95080948 -339.64654541]
[28.74256134 -336.96322632]
[42.91228485 -331.94174194]
[56.09294510 -324.71218872]
[67.94313812 -315.46185303]
[78.15590668 -304.43026733]
[86.46672058 -291.90322876]
[92.66031647 -278.20523071]
[96.57624817 -263.69104004]
[98.11310577 -248.73663330]
[97.23105621 -233.72937012]
[93.95296478 -219.05795288]
[88.36373901 -205.10243225]
[80.60814667 -192.22427368]
[70.88708496 -180.75704956]
[59.45234680 -170.99780273]
[46.60012054 -163.19931030]
[32.66331100 -157.56358337]
[35.98556900 -142.93612671]
[40.53246307 -137.10966492]
[39.24668503 -128.06619263]
[42.35079575 -113.39088440]
[45.45490646 -98.71558380]
[48.55901337 -84.04027557]
[51.66312408 -69.36497498]
[54.87639999 -54.71318817]
[58.19865799 -40.08572769]
[62.17075348 -25.62120438]
[66.78476715 -11.34847164]
[71.39877319 2.92426181]
[85.03759766 13.96733665]
[81.03258514 31.94069099]
[85.85858154 46.14314651]
[91.20977020 60.15616989]
[97.07872772 73.96034241]
[102.94769287 87.76451874]
[109.12345886 101.43418884]
[115.60295868 114.96253967]
[122.08245087 128.49089050]
[128.56195068 142.01922607]
[135.04144287 155.54757690]
[141.52093506 169.07592773]
[156.15576172 174.41069031]
[162.53417969 188.22265625]
[157.35809326 202.14184570]
[163.83760071 215.67019653]
[170.31709290 229.19853210]
[176.79658508 242.72688293]
[183.27607727 256.25521851]
[189.75556946 269.78356934]
[196.23507690 283.31192017]
[201.13648987 269.13531494]
[213.93864441 261.31835938]
[228.78857422 263.43487549]
[238.89709473 274.51721191]
[239.64270020 289.49865723]
[230.68453979 301.52993774]
[216.11814880 305.11047363]
[202.60179138 298.60198975]
[207.63870239 312.73101807]
[213.46807861 319.76351929]
[212.64372253 327.10806274]
[217.46972656 341.31051636]
[222.29571533 355.51296997]
[228.16468811 369.31716919]
[235.04409790 382.64657593]
[241.92350769 395.97601318]
[248.80291748 409.30545044]
[255.68232727 422.63488770]
[262.56173706 435.96429443]
[269.27841187 442.15496826]
[269.44268799 449.54379272]
[276.12286377 462.97418213]
[290.33047485 458.09576416]
[305.05331421 455.11361694]
[320.03945923 454.07876587]
[335.03244019 455.00888062]
[349.77575684 457.88809204]
[364.01708984 462.66711426]
[377.51278687 469.26419067]
[390.03192139 477.56640625]
[401.36022949 487.43170166]
[411.30389404 498.69128418]
[419.69277954 511.15249634]
[426.38333130 524.60211182]
[431.26107788 538.80993652]
[434.24252319 553.53289795]
[435.27667236 568.51910400]
[434.34582520 583.51202393]
[431.46591187 598.25518799]
[426.68621826 612.49633789]
[420.08850098 625.99169922]
[411.78570557 638.51043701]
[401.91986084 649.83825684]
[390.65979004 659.78143311]
[378.19818115 668.16967773]
[364.74826050 674.85961914]
[350.54019165 679.73669434]
[335.81707764 682.71740723]
[320.83084106 683.75085449]
[305.83795166 682.81927490]
[291.09490967 679.93865967]
[276.85403442 675.15832520]
[263.35894775 668.55993652]
[250.84063721 660.25653076]
[239.51325989 650.39013672]
[229.57064819 639.12963867]
[221.18295288 626.66760254]
[214.49368286 613.21740723]
[209.61729431 599.00909424]
[206.63725281 584.28582764]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 172]
[9 171]
[10 169]
[11 168]
[12 167]
[13 166]
[14 165]
[15 164]
[26 163]
[27 162]
[28 161]
[29 159]
[30 158]
[31 150]
[32 149]
[33 148]
[34 147]
[35 146]
[36 145]
[37 144]
[40 141]
[41 140]
[42 139]
[43 138]
[44 137]
[45 136]
[49 135]
[50 134]
[51 133]
[57 132]
[58 131]
[61 129]
[62 128]
[63 127]
[70 126]
[71 125]
[73 124]
[74 123]
[75 122]
[76 121]
[77 120]
[78 118]
[79 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
