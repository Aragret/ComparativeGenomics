%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxGGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAU\
) } def
/len { sequence length } bind def

/coor [
[107.00736237 653.14758301]
[93.12344360 647.42449951]
[79.99782562 640.12829590]
[67.80802917 631.35760498]
[56.71888733 621.23101807]
[46.88038254 609.88549805]
[38.42556381 597.47454834]
[31.46877289 584.16589355]
[26.10409355 570.13958740]
[22.40407753 555.58538818]
[20.41876221 540.69995117]
[20.17499733 525.68475342]
[21.67608070 510.74273682]
[24.90170860 496.07604980]
[29.80825996 481.88299561]
[36.32938004 468.35556030]
[44.37687683 455.67666626]
[53.84191895 444.01779175]
[64.59650421 433.53659058]
[76.49517822 424.37484741]
[89.37703705 416.65640259]
[103.06786346 410.48568726]
[117.38250732 405.94613647]
[132.12738037 403.09915161]
[131.01173401 388.14068604]
[129.89608765 373.18222046]
[128.78042603 358.22378540]
[127.66477966 343.26531982]
[126.54913330 328.30688477]
[118.62510681 341.04302979]
[105.44147491 348.19787598]
[90.44441223 347.90115356]
[77.55410767 340.23043823]
[70.14006042 327.19079590]
[70.14028931 312.19079590]
[77.55472565 299.15139771]
[90.44525909 291.48104858]
[105.44233704 291.18478394]
[118.62574768 298.34002686]
[126.54913330 311.07556152]
[127.66477966 296.11712646]
[128.78042603 281.15866089]
[129.89608765 266.20022583]
[131.01173401 251.24176025]
[129.89608765 236.28330994]
[126.57382202 221.65585327]
[123.25156403 207.02838135]
[119.92929840 192.40092468]
[116.06499481 177.90724182]
[111.66400146 163.56738281]
[107.26300049 149.22753906]
[96.13204193 139.33052063]
[99.47985077 123.86757660]
[85.60165405 119.04256439]
[77.17742157 107.00440216]
[77.39817810 92.31304169]
[86.18029785 80.53342438]
[81.77930450 66.19357300]
[77.37830353 51.85372925]
[62.34035110 49.48279572]
[49.87386322 40.85298157]
[42.42100906 27.72000313]
[41.41342926 12.71514416]
[46.99753952 -1.18187618]
[58.01605225 -11.23462772]
[53.61505508 -25.57447433]
[49.21405792 -39.91432190]
[44.81306076 -54.25416946]
[40.41205978 -68.59401703]
[34.95494461 -54.62190628]
[22.87302399 -45.73218155]
[7.91001177 -44.67942429]
[-5.29763699 -51.78984070]
[-12.65739059 -64.86019135]
[-11.88874817 -79.84048462]
[-3.22988343 -92.08891296]
[10.63616180 -97.81017303]
[25.41284180 -95.23146057]
[36.52157593 -85.15161133]
[34.07584763 -99.95088196]
[29.58909416 -107.90744019]
[31.70558929 -114.98855591]
[29.48047066 -129.82260132]
[27.25535393 -144.65664673]
[24.00233078 -148.73892212]
[22.76428223 -153.21334839]
[23.35316658 -157.24673462]
[25.27750206 -160.20127869]
[23.71697807 -175.11987305]
[22.15645599 -190.03848267]
[20.59593201 -204.95709229]
[19.03540993 -219.87570190]
[4.20283222 -222.78878784]
[-9.11133862 -229.94589233]
[-19.72321701 -240.71063232]
[-26.68920326 -254.12577820]
[-29.38988304 -268.99850464]
[-27.58511734 -284.00631714]
[-21.43538284 -297.81472778]
[-11.48751068 -309.19589233]
[1.37394202 -317.13784790]
[16.00534248 -320.93435669]
[31.10567856 -320.24786377]
[45.33223724 -315.13937378]
[57.42000198 -306.06317139]
[66.29413605 -293.82629395]
[71.16555786 -279.51684570]
[71.60111237 -264.40719604]
[67.56205750 -249.84088135]
[59.40755081 -237.11314392]
[47.86268234 -227.35571289]
[33.95401382 -221.43621826]
[35.51453781 -206.51760864]
[37.07505798 -191.59901428]
[38.63558197 -176.68040466]
[40.19610596 -161.76179504]
[42.08939743 -146.88175964]
[44.31451416 -132.04771423]
[46.53963089 -117.21367645]
[48.87511826 -102.39660645]
[51.32084656 -87.59733582]
[54.75190735 -72.99501801]
[59.15290451 -58.65516663]
[63.55390549 -44.31531906]
[67.95490265 -29.97547340]
[72.35590363 -15.63562584]
[87.11672974 -13.49473286]
[99.53530884 -5.12286234]
[107.11855316 7.86388111]
[108.31610107 22.91665649]
[102.83703613 37.05408478]
[91.71815491 47.45273209]
[96.11914825 61.79257965]
[100.52014923 76.13242340]
[114.39834595 80.95743561]
[122.82257843 92.99559784]
[122.60182190 107.68695831]
[113.81970215 119.46657562]
[125.26544952 130.38928223]
[121.60284424 144.82653809]
[126.00384521 159.16639709]
[130.40484619 173.50624084]
[139.63171387 161.67977905]
[154.62844849 161.36724854]
[164.34002686 172.79901123]
[161.60743713 187.54800415]
[148.44502258 194.74182129]
[134.55676270 189.07867432]
[137.87902832 203.70613098]
[141.20127869 218.33358765]
[144.52354431 232.96104431]
[148.22773743 218.42561340]
[155.82737732 205.49327087]
[166.72311401 195.18391418]
[180.05569458 188.31060791]
[194.77363586 185.41537476]
[209.71621704 186.72657776]
[223.70500183 192.14079285]
[235.63679504 201.23103333]
[244.57058716 213.28039551]
[249.80183411 227.33863831]
[250.91796875 242.29705811]
[247.83096313 256.97595215]
[240.78430176 270.21774292]
[230.33367920 280.97805786]
[217.30328369 288.40832520]
[202.72074890 291.92254639]
[187.73612976 291.24362183]
[173.53115845 286.42504883]
[161.22608948 277.84683228]
[151.79138184 266.18551636]
[145.97018433 252.35740662]
[144.85453796 267.31585693]
[143.73889160 282.27432251]
[142.62322998 297.23275757]
[141.50758362 312.19122314]
[141.50758362 327.19122314]
[142.62322998 342.14968872]
[143.73889160 357.10812378]
[144.85453796 372.06658936]
[145.97018433 387.02502441]
[147.08583069 401.98348999]
[162.08988953 402.61172485]
[176.91957092 404.97760010]
[191.37429810 409.04913330]
[205.25859070 414.77124023]
[218.38468933 422.06658936]
[230.57507324 430.83648682]
[241.66488647 440.96231079]
[251.50415039 452.30715942]
[259.95980835 464.71759033]
[266.91748047 478.02575684]
[272.28311157 492.05166626]
[275.98406982 506.60568237]
[277.97039795 521.49096680]
[278.21514893 536.50616455]
[276.71508789 551.44824219]
[273.49041748 566.11517334]
[268.58480835 580.30853271]
[262.06460571 593.83642578]
[254.01795959 606.51580811]
[244.55369568 618.17535400]
[233.79980469 628.65722656]
[221.90173340 637.81982422]
[209.02040100 645.53912354]
[195.32998657 651.71075439]
[181.01564026 656.25122070]
[166.27096558 659.09924316]
[151.29534912 660.21612549]
[136.29133606 659.58691406]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 182]
[25 181]
[26 180]
[27 179]
[28 178]
[29 177]
[40 176]
[41 175]
[42 174]
[43 173]
[44 172]
[45 151]
[46 150]
[47 149]
[48 148]
[49 142]
[50 141]
[51 140]
[53 138]
[57 134]
[58 133]
[59 132]
[65 126]
[66 125]
[67 124]
[68 123]
[69 122]
[79 121]
[80 120]
[82 119]
[83 118]
[84 117]
[88 116]
[89 115]
[90 114]
[91 113]
[92 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
