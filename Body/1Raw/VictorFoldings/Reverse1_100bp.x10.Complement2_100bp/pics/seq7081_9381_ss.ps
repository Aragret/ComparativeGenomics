%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxCGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAA\
) } def
/len { sequence length } bind def

/coor [
[83.03217316 788.76617432]
[68.13727570 786.94445801]
[53.40142441 784.11047363]
[38.89332199 780.27746582]
[24.68061447 775.46337891]
[10.82956982 769.69055176]
[-2.59523392 762.98596191]
[-15.53120232 755.38092041]
[-27.91802025 746.91076660]
[-39.69793701 737.61505127]
[-50.81602478 727.53710938]
[-61.22045135 716.72393799]
[-70.86270142 705.22595215]
[-79.69781494 693.09674072]
[-87.68460846 680.39288330]
[-94.78583527 667.17358398]
[-100.96838379 653.50054932]
[-106.20343781 639.43743896]
[-110.46657562 625.04986572]
[-113.73793793 610.40490723]
[-116.00225830 595.57080078]
[-117.24897766 580.61682129]
[-117.47229004 565.61254883]
[-116.67115784 550.62811279]
[-114.84931183 535.73321533]
[-112.01523590 520.99737549]
[-108.18216705 506.48928833]
[-103.36795044 492.27661133]
[-97.59505463 478.42559814]
[-90.89038849 465.00085449]
[-83.28520203 452.06494141]
[-74.81497192 439.67816162]
[-65.51917267 427.89831543]
[-55.44116211 416.78030396]
[-44.62791824 406.37594604]
[-33.12986374 396.73376465]
[-21.00060844 387.89874268]
[-8.29669952 379.91201782]
[4.92262697 372.81088257]
[18.59573746 366.62841797]
[32.65887833 361.39346313]
[47.04648590 357.13043213]
[61.69147110 353.85916138]
[76.52555084 351.59494019]
[91.47957611 350.34832764]
[91.25624847 335.34997559]
[91.03292084 320.35165405]
[90.80959320 305.35330200]
[90.58625793 290.35498047]
[90.36293030 275.35662842]
[79.95233154 267.76394653]
[75.75301361 255.37655640]
[79.51028442 242.64495850]
[90.06735992 234.28057861]
[90.06735992 219.28057861]
[90.06735992 204.28057861]
[90.06735992 189.28057861]
[87.38367462 185.33003235]
[87.15321350 179.65165710]
[90.29733276 173.83564758]
[90.74394226 158.84228516]
[91.19055176 143.84893799]
[83.83561707 130.89694214]
[91.98036957 117.33325958]
[82.12097931 106.71541595]
[82.55238342 92.23231506]
[93.02628326 82.22013855]
[93.47288513 67.22679138]
[93.91949463 52.23343658]
[94.36609650 37.24008942]
[91.57373047 31.24724197]
[92.14176178 25.59265518]
[95.05583191 21.80883980]
[95.94864655 6.83543348]
[96.84146118 -8.13797283]
[97.73427582 -23.11137772]
[83.18295288 -26.93901253]
[69.66234589 -33.52996445]
[57.69128418 -42.62923813]
[47.72872925 -53.88562393]
[40.15617371 -66.86525726]
[35.26304245 -81.06833649]
[33.23562241 -95.94837952]
[34.14998245 -110.93322754]
[37.96910858 -125.44708252]
[44.54440689 -138.93260193]
[53.62148285 -150.87229919]
[64.84997559 -160.80842590]
[77.79709625 -168.36050415]
[91.96429443 -173.23989868]
[106.80645752 -175.26084900]
[107.69927216 -190.23425293]
[105.08620453 -198.98693848]
[108.71848297 -205.42343140]
[109.83413696 -220.38188171]
[110.94978333 -235.34033203]
[96.65850830 -240.15805054]
[84.01479340 -248.37919617]
[73.81342316 -259.48696899]
[66.69566345 -272.78314209]
[63.10895157 -287.43191528]
[63.27874374 -302.51242065]
[67.19436646 -317.07672119]
[74.60968781 -330.20928955]
[85.05856323 -341.08456421]
[97.88417816 -349.01895142]
[112.28029633 -353.51367188]
[127.34197235 -354.28619385]
[142.12240601 -351.28796387]
[155.69250488 -344.70742798]
[167.19921875 -334.95825195]
[175.91925049 -322.65328979]
[181.30442810 -308.56604004]
[183.01625061 -293.58203125]
[180.94709778 -278.64318848]
[175.22705078 -264.68853760]
[166.21566772 -252.59532166]
[154.47943115 -243.12371826]
[140.75605774 -236.86911011]
[125.90823364 -234.22468567]
[124.79258728 -219.26623535]
[123.67694092 -204.30778503]
[122.67267609 -189.34143066]
[121.77986145 -174.36802673]
[136.27671814 -170.59768677]
[149.76370239 -164.06936646]
[161.72166443 -155.03228760]
[171.68988037 -143.83226013]
[179.28382874 -130.89852905]
[184.21003723 -116.72721100]
[186.27740479 -101.86235809]
[185.40463257 -86.87503052]
[181.62336731 -72.34133911]
[175.07713318 -58.82035446]
[166.01585388 -46.83254623]
[154.78627014 -36.83977890]
[141.81875610 -29.22751045]
[127.61074829 -24.28992462]
[112.70767975 -22.21856308]
[111.81486511 -7.24515676]
[110.92205048 7.72824907]
[110.02923584 22.70165443]
[109.35945129 37.68669510]
[108.91284180 52.68004227]
[108.46623993 67.67339325]
[108.01963043 82.66674042]
[117.87902069 93.28458405]
[117.44761658 107.76768494]
[106.97371674 117.77986145]
[114.29670715 131.80429077]
[106.18389893 144.29554749]
[105.73728943 159.28889465]
[105.29068756 174.28224182]
[105.06735992 189.28057861]
[105.06735992 204.28057861]
[105.06735992 219.28057861]
[105.06735992 234.28057861]
[117.66150665 246.42170715]
[117.57982635 263.57711792]
[105.36127472 275.13330078]
[105.58460236 290.13165283]
[105.80792999 305.12997437]
[106.03125763 320.12832642]
[106.25458527 335.12664795]
[106.47791290 350.12500000]
[121.46241760 350.92584229]
[136.35733032 352.74737549]
[151.09323120 355.58114624]
[165.60137939 359.41394043]
[179.81414795 364.22787476]
[193.66528320 370.00048828]
[207.09016418 376.70489502]
[220.02624512 384.30981445]
[232.41317749 392.77978516]
[244.19320679 402.07534790]
[255.31143188 412.15313721]
[265.71600342 422.96615601]
[275.35839844 434.46401978]
[284.19369507 446.59310913]
[292.18066406 459.29684448]
[299.28204346 472.51605225]
[305.46478271 486.18902588]
[310.70004272 500.25207520]
[314.96337891 514.63958740]
[318.23492432 529.28448486]
[320.49945068 544.11853027]
[321.74636841 559.07250977]
[321.96987915 574.07678223]
[321.16894531 589.06127930]
[319.34729004 603.95617676]
[316.51342773 618.69201660]
[312.68054199 633.20019531]
[307.86651611 647.41290283]
[302.09381104 661.26397705]
[295.38931274 674.68884277]
[287.78430176 687.62487793]
[279.31423950 700.01171875]
[270.01861572 711.79168701]
[259.94073486 722.90985107]
[249.12763977 733.31439209]
[237.62971497 742.95666504]
[225.50057983 751.79187012]
[212.79676819 759.77874756]
[199.57754517 766.88006592]
[185.90451050 773.06274414]
[171.84144592 778.29785156]
[157.45388794 782.56109619]
[142.80894470 785.83258057]
[127.97489929 788.09698486]
[113.02089691 789.34381104]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 165]
[46 164]
[47 163]
[48 162]
[49 161]
[50 160]
[54 157]
[55 156]
[56 155]
[57 154]
[60 153]
[61 152]
[62 151]
[64 149]
[67 146]
[68 145]
[69 144]
[70 143]
[73 142]
[74 141]
[75 140]
[76 139]
[91 124]
[92 123]
[94 122]
[95 121]
[96 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
