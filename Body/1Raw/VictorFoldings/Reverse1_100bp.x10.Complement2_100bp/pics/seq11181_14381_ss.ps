%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCACUCGGAUCCCACAACACUCACAUUUAAUCACGCUACUCAUCCCCUUCCCUCGGAUGAUCCCACAUCUUAUCCUUCAUACACGGACGCAAGUCCGCAxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[109.09483337 779.01086426]
[113.59602356 793.48547363]
[112.87204742 808.62652588]
[107.01031494 822.60565186]
[96.71867371 833.73480225]
[83.23988342 840.67010498]
[68.20156860 842.57403564]
[53.41968155 839.21667480]
[40.67921066 831.00347900]
[31.51862717 818.92626953]
[27.04411697 804.44335938]
[27.79599762 789.30364990]
[33.68347549 775.33538818]
[43.99561310 764.22521973]
[57.48716354 757.31481934]
[72.52896118 755.43859863]
[75.85121918 740.81109619]
[79.17347717 726.18365479]
[82.49574280 711.55621338]
[85.81800079 696.92877197]
[71.36645508 690.60968018]
[58.41053391 681.60614014]
[47.44287491 670.25836182]
[38.88092804 656.99572754]
[33.05107117 642.32061768]
[30.17615509 626.78924561]
[30.36699104 610.99072266]
[33.61808395 595.52453613]
[39.80777359 580.97790527]
[48.70277405 567.90368652]
[59.96699142 556.79882812]
[73.17419434 548.08605957]
[87.82416534 542.09747314]
[103.36163330 539.06195068]
[119.19731140 539.09631348]
[122.08258820 524.37640381]
[124.96785736 509.65652466]
[127.85312653 494.93664551]
[130.73840332 480.21673584]
[133.62367249 465.49685669]
[135.40614319 450.60311890]
[136.07592773 435.61810303]
[136.74571228 420.63305664]
[137.41549683 405.64801025]
[136.74571228 390.66296387]
[134.74169922 375.79745483]
[132.73768616 360.93191528]
[130.73367310 346.06640625]
[119.27453613 332.77523804]
[126.41000366 315.79974365]
[124.18489075 300.96569824]
[121.95977020 286.13168335]
[119.73465729 271.29763794]
[104.27973938 269.66494751]
[89.76137543 264.08969116]
[77.16801453 254.94529724]
[67.35862732 242.84837341]
[61.00415802 228.61715698]
[58.54158401 213.21618652]
[60.14389801 197.69091797]
[65.70796204 183.09672546]
[74.86112976 170.42720032]
[86.98619843 160.54649353]
[101.26301575 154.13035583]
[98.81729126 139.33108521]
[96.37155914 124.53182220]
[93.92583466 109.73255157]
[87.16967010 123.12487030]
[74.67693329 131.42736816]
[59.71319962 132.46980286]
[46.18994904 125.97967529]
[37.64213181 113.65348816]
[36.30412292 98.71328735]
[42.52567673 85.06439209]
[54.68049240 76.27460480]
[69.59133148 74.64154053]
[83.36053467 80.59208679]
[92.38853455 92.56996155]
[92.16520691 77.57162476]
[91.94187927 62.57328796]
[91.71855164 47.57495117]
[91.49522400 32.57661438]
[90.82543945 17.59157562]
[89.70979309 2.63312244]
[88.59413910 -12.32533073]
[85.65375519 -16.63824272]
[84.75193024 -21.19236183]
[85.63916779 -25.17078400]
[87.77792358 -27.97401047]
[79.63317108 -41.53769684]
[86.98809814 -54.48969650]
[86.54149628 -69.48304749]
[86.09488678 -84.47639465]
[82.71135712 -92.96105957]
[85.75492859 -99.69593048]
[85.53160095 -114.69426727]
[82.27476501 -123.22837067]
[85.41826630 -129.91717529]
[85.41826630 -144.91717529]
[71.64440155 -151.49314880]
[62.09447479 -163.39952087]
[58.66463470 -178.27227783]
[62.03587723 -193.15843201]
[71.53884125 -205.10231018]
[85.28671265 -211.73246765]
[100.54982758 -211.73246765]
[114.29769135 -205.10231018]
[123.80065918 -193.15843201]
[127.17190552 -178.27227783]
[123.74206543 -163.39952087]
[114.19213867 -151.49314880]
[100.41826630 -144.91717529]
[100.41826630 -129.91717529]
[100.52993774 -114.91759491]
[100.75326538 -99.91925812]
[101.08824158 -84.92300415]
[101.53484344 -69.92964935]
[101.98145294 -54.93630219]
[110.09426117 -42.44503784]
[102.77127075 -28.42061615]
[103.55259705 -13.44097996]
[104.66824341 1.51747382]
[105.78388977 16.47592735]
[107.81755066 18.40526962]
[109.20951080 21.25642204]
[109.60482788 24.78900337]
[108.74207306 28.63870239]
[106.49356079 32.35328674]
[106.71688843 47.35162354]
[106.94021606 62.34996033]
[107.16354370 77.34829712]
[107.38687134 92.34663391]
[108.72510529 107.28681946]
[111.17082977 122.08609009]
[113.61656189 136.88536072]
[116.06228638 151.68463135]
[130.51260376 152.91770935]
[144.23693848 157.57609558]
[156.43627930 165.38375854]
[166.40155029 175.88153076]
[173.55480957 188.45401001]
[177.48278809 202.36563110]
[177.96076965 216.80380249]
[174.96537781 230.92623901]
[168.67578125 243.91021729]
[159.46287537 255.00042725]
[147.86752319 263.55291748]
[134.56869507 269.07250977]
[136.79382324 283.90655518]
[139.01893616 298.74060059]
[141.24404907 313.57464600]
[151.13357544 321.85473633]
[152.68148804 334.25585938]
[145.59919739 344.06237793]
[147.60321045 358.92791748]
[149.60722351 373.79342651]
[151.61123657 388.65896606]
[157.98321533 375.07965088]
[169.56117249 365.54281616]
[184.10958862 361.88992310]
[198.81938171 364.82623291]
[210.85032654 373.78482056]
[217.87944031 387.03591919]
[218.54949951 402.02096558]
[212.73114014 415.84652710]
[201.54779053 425.84317017]
[187.15878296 430.08065796]
[172.34240723 427.74081421]
[159.95945740 419.27542114]
[152.40052795 406.31781006]
[151.73074341 421.30285645]
[151.06095886 436.28787231]
[150.39117432 451.27291870]
[159.77252197 439.56863403]
[173.71295166 434.03109741]
[188.56849670 436.10781860]
[200.45594788 445.25598145]
[206.26794434 459.08422852]
[204.48524475 473.97793579]
[195.57385254 486.04388428]
[181.86318970 492.12808228]
[166.93716431 490.64013672]
[154.69743347 481.96899414]
[148.34356689 468.38211060]
[145.45829773 483.10202026]
[142.57302856 497.82189941]
[139.68774414 512.54180908]
[136.80247498 527.26171875]
[133.91720581 541.98156738]
[147.18669128 547.20770264]
[159.33561707 554.67053223]
[169.99073792 564.13922119]
[178.82493591 575.32153320]
[185.56729126 587.87237549]
[190.01141357 601.40502930]
[192.02171326 615.50250244]
[191.53753662 629.73077393]
[188.57505798 643.65197754]
[183.22666931 656.83795166]
[175.65812683 668.88323975]
[166.10343933 679.41790771]
[154.85758972 688.11853027]
[142.26747131 694.71826172]
[128.72116089 699.01513672]
[114.63592529 700.87805176]
[100.44545746 700.25097656]
[97.12319946 714.87847900]
[93.80094147 729.50592041]
[90.47868347 744.13336182]
[87.15641785 758.76086426]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 210]
[17 209]
[18 208]
[19 207]
[20 206]
[35 189]
[36 188]
[37 187]
[38 186]
[39 185]
[40 184]
[41 173]
[42 172]
[43 171]
[44 170]
[45 157]
[46 156]
[47 155]
[48 154]
[50 151]
[51 150]
[52 149]
[53 148]
[64 136]
[65 135]
[66 134]
[67 133]
[78 132]
[79 131]
[80 130]
[81 129]
[82 128]
[83 123]
[84 122]
[85 121]
[89 120]
[91 118]
[92 117]
[93 116]
[95 115]
[96 114]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
