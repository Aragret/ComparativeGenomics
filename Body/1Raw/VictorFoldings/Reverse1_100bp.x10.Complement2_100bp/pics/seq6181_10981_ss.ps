%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[33.25495911 594.90380859]
[29.73396492 609.51879883]
[23.91402435 623.37969971]
[15.94589043 636.12744141]
[6.03595638 647.43182373]
[-5.55908680 657.00006104]
[-18.53890038 664.58428955]
[-32.56727219 669.98809814]
[-47.28083801 673.07147217]
[-62.29848099 673.75451660]
[-77.23120880 672.01965332]
[-91.69222260 667.91168213]
[-105.30694580 661.53710938]
[-117.72274017 653.06097412]
[-128.61798096 642.70294189]
[-137.71047974 630.73120117]
[-144.76470947 617.45587158]
[-149.59794617 603.22082520]
[-152.08500671 588.39483643]
[-152.16145325 573.36181641]
[-149.82531738 558.51129150]
[-145.13711548 544.22784424]
[-138.21826172 530.88146973]
[-129.24800110 518.81787109]
[-118.45865631 508.34951782]
[-106.12972260 499.74758911]
[-92.58052826 493.23486328]
[-78.16204071 488.98004150]
[-63.24773788 487.09335327]
[-48.22392273 487.62365723]
[-33.47975922 490.55722046]
[-28.23303986 476.50473022]
[-31.02982521 461.87506104]
[-18.95423889 451.65298462]
[-13.70752048 437.60052490]
[-8.46080208 423.54803467]
[-3.21408415 409.49557495]
[1.50605011 395.25759888]
[-2.37109375 380.87646484]
[8.91076374 369.78454590]
[13.09777546 355.38076782]
[17.28478622 340.97698975]
[8.15991974 331.23126221]
[5.01698208 318.14440918]
[8.78090954 305.10974121]
[18.57130814 295.56161499]
[31.90560341 292.07058716]
[36.30660248 277.73074341]
[40.70759964 263.39089966]
[45.10859680 249.05104065]
[39.72002029 238.22099304]
[43.26920700 226.23822021]
[54.37644577 219.68138123]
[58.99045563 205.40864563]
[63.60446548 191.13591003]
[68.21847534 176.86318970]
[72.83248138 162.59045410]
[77.44649506 148.31771851]
[82.06050110 134.04498291]
[86.46150208 119.70513153]
[90.64850616 105.30135345]
[92.09793091 90.37154388]
[90.75969696 75.43135834]
[89.31027222 60.50154877]
[87.74975586 45.58294678]
[86.18923187 30.66434097]
[84.62870789 15.74573612]
[75.49769592 2.82539749]
[81.86892700 -10.63776112]
[72.73791504 -23.55809975]
[79.10914612 -37.02125931]
[77.54862213 -51.93986130]
[65.55495453 -61.87916183]
[64.18488312 -77.03097534]
[73.73439789 -88.40385437]
[72.17388153 -103.32246399]
[70.61335754 -118.24106598]
[69.05283356 -133.15966797]
[67.49230957 -148.07827759]
[65.59901428 -162.95831299]
[63.37390137 -177.79235840]
[61.14878464 -192.62640381]
[58.81329727 -207.44346619]
[56.36756897 -222.24273682]
[53.92184067 -237.04200745]
[51.47611237 -251.84127808]
[36.43649673 -252.63122559]
[21.91843414 -256.63619995]
[8.60095978 -263.66891479]
[-2.89304209 -273.40042114]
[-12.02597713 -285.37551880]
[-18.37068176 -299.03417969]
[-21.63040161 -313.73751831]
[-21.65267563 -328.79785156]
[-18.43645859 -343.51077271]
[-12.13218212 -357.18814087]
[-3.03470755 -369.19021606]
[8.43045998 -378.95565796]
[21.72707367 -386.02774048]
[36.23322678 -390.07565308]
[51.27044296 -390.91006470]
[66.13539886 -388.49200439]
[80.13283539 -382.93447876]
[92.60807037 -374.49752808]
[102.97761536 -363.57568359]
[110.75645447 -350.67977905]
[115.58078003 -336.41305542]
[117.22492981 -321.44271851]
[115.61201477 -306.46899414]
[110.81746674 -292.19219971]
[103.06553650 -279.28012085]
[92.71880341 -268.33666992]
[80.26119995 -259.87368774]
[66.27538300 -254.28700256]
[68.72111511 -239.48773193]
[71.16683960 -224.68846130]
[73.61256409 -209.88919067]
[77.80460358 -203.80242920]
[75.98282623 -194.85151672]
[78.20794678 -180.01747131]
[80.43305969 -165.18342590]
[83.03595734 -162.80491638]
[84.61611938 -159.04751587]
[84.53800201 -154.40562439]
[82.41091156 -149.63879395]
[83.97143555 -134.72019958]
[85.53195953 -119.80158997]
[87.09248352 -104.88298035]
[88.65300751 -89.96437836]
[100.34931946 -80.81386566]
[102.14443207 -65.70651245]
[92.46723175 -53.50038528]
[94.02775574 -38.58177948]
[103.04714966 -26.72852135]
[96.78752899 -12.19828415]
[105.80693054 -0.34502345]
[99.54730988 14.18521309]
[101.10783386 29.10381889]
[102.66835785 44.02242279]
[104.22888184 58.94102859]
[108.05119324 65.26651001]
[105.69988251 74.09312439]
[107.03811646 89.03330994]
[112.44976044 75.04352570]
[120.90255737 62.65198898]
[131.95309448 52.50873947]
[145.02169800 45.14587021]
[159.42279053 40.94962311]
[174.40092468 40.14012527]
[189.17039490 42.75984192]
[202.95640564 48.67134476]
[215.03578186 57.56453323]
[224.77485657 68.97288513]
[231.66273499 82.29793549]
[235.33810425 96.84069061]
[235.60813904 111.83825684]
[232.45870972 126.50389862]
[226.05499268 140.06828308]
[216.73294067 151.81985474]
[204.98156738 161.14213562]
[191.41729736 167.54611206]
[176.75172424 170.69583130]
[161.75415039 170.42608643]
[147.21131897 166.75099182]
[133.88613892 159.86337280]
[122.47759247 150.12452698]
[113.58416748 138.04533386]
[107.67239380 124.25942993]
[105.05229187 109.48836517]
[100.86528015 123.89214325]
[102.06794739 130.39331055]
[100.10199738 135.72547913]
[96.33323669 138.65899658]
[91.71922302 152.93173218]
[87.10521698 167.20445251]
[82.49120331 181.47718811]
[77.87719727 195.74992371]
[73.26319122 210.02265930]
[68.64917755 224.29539490]
[72.92134094 242.20712280]
[59.44844437 253.45204163]
[55.04744720 267.79187012]
[50.64645004 282.13174438]
[46.24544907 296.47158813]
[56.59323120 309.85140991]
[56.92374420 326.59631348]
[47.30478668 340.10324097]
[31.68856812 345.16400146]
[27.50155640 359.56777954]
[23.31454659 373.97155762]
[26.89220619 389.38296509]
[15.90983200 399.44461060]
[30.11219215 394.61831665]
[42.82232666 402.58404541]
[44.67079544 417.46969604]
[34.29497910 428.30218506]
[19.34354019 427.09616089]
[10.83838749 414.74230957]
[5.59166908 428.79476929]
[0.34495077 442.84722900]
[-4.90176725 456.89971924]
[-2.48026252 472.53451538]
[-14.18056870 481.75146484]
[-19.42728806 495.80392456]
[-6.36835575 503.25109863]
[5.32676840 512.69677734]
[15.35515308 523.89617920]
[23.45703888 536.55938721]
[29.42256927 550.35821533]
[33.09721756 564.93536377]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 204]
[32 203]
[34 201]
[35 200]
[36 199]
[37 198]
[38 192]
[40 190]
[41 189]
[42 188]
[47 184]
[48 183]
[49 182]
[50 181]
[53 179]
[54 178]
[55 177]
[56 176]
[57 175]
[58 174]
[59 173]
[60 170]
[61 169]
[62 143]
[63 142]
[64 140]
[65 139]
[66 138]
[67 137]
[69 135]
[71 133]
[72 132]
[75 129]
[76 128]
[77 127]
[78 126]
[79 125]
[80 121]
[81 120]
[82 119]
[83 117]
[84 116]
[85 115]
[86 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
