%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUACCAACUAUAACGAUCCCACCGCGAAGGUUAAUCCACGUACUCAUCCACCGGACGUCAUUACAAUCGCCAAUCCGCAUGCCGGUCCCGAUAACCAxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[52.98804855 654.61224365]
[44.52582932 667.02880859]
[34.38261795 678.11468506]
[22.76491356 687.64410400]
[9.90923977 695.42303467]
[-3.92267752 701.29321289]
[-18.44923973 705.13507080]
[-33.37470245 706.87036133]
[-48.39520264 706.46380615]
[-63.20494843 703.92370605]
[-77.50241852 699.30169678]
[-90.99655151 692.69189453]
[-103.41261292 684.22894287]
[-114.49783325 674.08502197]
[-124.02652740 662.46673584]
[-131.80470276 649.61059570]
[-137.67401123 635.77832031]
[-141.51495361 621.25146484]
[-143.24934387 606.32592773]
[-142.84187317 591.30541992]
[-140.30081177 576.49584961]
[-135.67791748 562.19866943]
[-129.06730652 548.70495605]
[-120.60354614 536.28942871]
[-110.45896149 525.20483398]
[-98.84008026 515.67681885]
[-85.98344421 507.89947510]
[-72.15080261 502.03100586]
[-57.62376404 498.19097900]
[-42.69808578 496.45748901]
[-27.67763519 496.86590576]
[-12.86820698 499.40786743]
[-8.25419807 485.13513184]
[-3.64018846 470.86242676]
[0.97382069 456.58969116]
[5.26794434 442.21746826]
[9.24004078 427.75292969]
[13.21213722 413.28842163]
[17.07644272 398.79473877]
[20.83274269 384.27267456]
[19.46441460 377.00979614]
[24.75458336 369.56317139]
[28.72668076 355.09866333]
[19.79134369 340.85089111]
[24.00832939 324.22164917]
[39.24156952 315.62121582]
[42.99787140 301.09915161]
[46.75417328 286.57708740]
[41.16066360 269.94338989]
[54.17668533 256.91784668]
[57.71635818 242.34147644]
[61.25603104 227.76510620]
[49.15160751 219.02369690]
[41.29481125 206.27943420]
[38.90940475 191.45800781]
[42.38962555 176.81303406]
[51.23544693 164.58334351]
[64.12413025 156.65083313]
[79.10797119 154.25079346]
[82.64764404 139.67440796]
[86.18731689 125.09803772]
[75.50717926 114.85945129]
[71.35965729 100.65761566]
[74.85097504 86.28038025]
[85.04992676 75.56238556]
[99.23630524 71.36228943]
[102.77597809 56.78591537]
[106.31565094 42.20954132]
[104.82389069 35.76856232]
[106.54978943 30.35392761]
[110.18379974 27.25505829]
[114.15589905 12.79053402]
[118.12799835 -1.67399025]
[122.10009003 -16.13851357]
[125.63976288 -30.71488953]
[128.74388123 -45.39019012]
[130.74789429 -60.25572205]
[131.64070129 -75.22912598]
[132.53352356 -90.20252991]
[119.82288361 -98.71058655]
[113.12169647 -112.34843445]
[114.13977814 -127.40930176]
[122.50379181 -139.85516357]
[135.88435364 -146.39932251]
[136.77717590 -161.37272644]
[137.66998291 -176.34614563]
[138.45130920 -191.32577515]
[131.33793640 -205.45767212]
[139.63581848 -217.82676697]
[140.30560303 -232.81179810]
[140.97538757 -247.79684448]
[141.64517212 -262.78189087]
[141.86849976 -277.78021240]
[141.64517212 -292.77856445]
[141.42184448 -307.77688599]
[141.19851685 -322.77523804]
[126.79881287 -327.45788574]
[114.70128632 -336.56439209]
[106.21817017 -349.10693359]
[102.26966858 -363.72500610]
[103.28406525 -378.83294678]
[109.15134430 -392.79193115]
[119.23506165 -404.08786011]
[132.44140625 -411.49536133]
[147.33786011 -414.21096802]
[162.30856323 -411.94009399]
[175.72959900 -404.92904663]
[186.14515686 -393.93838501]
[192.42544556 -380.16027832]
[193.88922119 -365.08923340]
[190.37770081 -350.36007690]
[182.27178955 -337.57052612]
[170.45075989 -328.10787964]
[156.19685364 -322.99856567]
[156.42018127 -308.00021362]
[156.64350891 -293.00189209]
[156.86683655 -278.00354004]
[158.78205872 -275.95657349]
[160.00184631 -273.02761841]
[160.18620300 -269.47778320]
[159.09584045 -265.68624878]
[156.63021851 -262.11209106]
[155.96043396 -247.12705994]
[155.29064941 -232.14201355]
[154.62086487 -217.15698242]
[161.78213501 -204.09690857]
[153.43634033 -190.65599060]
[156.27804565 -183.83348083]
[152.64338684 -175.45332336]
[151.75057983 -160.47991943]
[150.85775757 -145.50651550]
[163.36585999 -137.41868591]
[170.19166565 -124.06711578]
[169.41282654 -108.99197388]
[161.13851929 -96.24706268]
[147.50692749 -89.30971527]
[146.61410522 -74.33631134]
[145.72129822 -59.36290359]
[155.27584839 -70.92623138]
[169.29718018 -76.25559235]
[184.12016296 -73.95790863]
[195.87008667 -64.63378143]
[201.47555542 -50.72052765]
[199.47132874 -35.85503006]
[190.38127136 -23.92309570]
[176.58154297 -18.04370308]
[161.67932129 -19.75371361]
[149.57005310 -28.60613060]
[143.41917419 -42.28608322]
[140.31506348 -27.61077881]
[141.72935486 -25.19046021]
[142.27012634 -22.06409264]
[141.66366577 -18.56157684]
[139.76062012 -15.10571861]
[136.56462097 -12.16641808]
[132.59251404 2.29810596]
[128.62042236 16.76263046]
[124.64832306 31.22715378]
[120.89202881 45.74921417]
[117.35235596 60.32558823]
[113.81268311 74.90196228]
[124.49282074 85.14054871]
[128.64033508 99.34238434]
[125.14902496 113.71961975]
[114.95007324 124.43761444]
[100.76369476 128.63771057]
[97.22402191 143.21408081]
[93.68434906 157.79046631]
[105.89869690 166.79521179]
[113.71388245 179.75537109]
[115.96566010 194.67996216]
[112.34169006 209.29003906]
[103.42443848 221.36676025]
[90.59779358 229.08833313]
[75.83240509 231.30477905]
[72.29273224 245.88114929]
[68.75305939 260.45751953]
[74.78487396 271.85839844]
[71.53659058 283.92623901]
[61.27622986 290.33337402]
[57.51993179 304.85543823]
[53.76362991 319.37750244]
[61.88971710 330.11907959]
[62.33902740 343.38589478]
[55.17145538 354.32702637]
[43.19120407 359.07073975]
[39.21910858 373.53527832]
[35.35480118 388.02896118]
[31.59850121 402.55102539]
[32.47918320 411.64291382]
[27.67666054 417.26052856]
[23.70456505 431.72503662]
[19.73246765 446.18957520]
[21.05387115 451.23941040]
[20.37408638 455.83193970]
[18.20242882 459.28140259]
[15.24655437 461.20367432]
[10.63254452 475.47640991]
[6.01853561 489.74914551]
[1.40452623 504.02188110]
[14.89947510 510.63000488]
[27.31658363 519.09143066]
[38.40305710 529.23394775]
[47.93318939 540.85107422]
[55.71295929 553.70629883]
[61.58398056 567.53784180]
[65.42672729 582.06414795]
[67.16295624 596.98950195]
[66.75733948 612.01007080]
[64.21811676 626.81994629]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 200]
[33 199]
[34 198]
[35 197]
[36 193]
[37 192]
[38 191]
[39 189]
[40 188]
[42 187]
[43 186]
[46 182]
[47 181]
[48 180]
[50 177]
[51 176]
[52 175]
[59 168]
[60 167]
[61 166]
[66 161]
[67 160]
[68 159]
[71 158]
[72 157]
[73 156]
[74 155]
[75 150]
[76 149]
[77 138]
[78 137]
[79 136]
[84 131]
[85 130]
[86 129]
[87 127]
[89 125]
[90 124]
[91 123]
[92 122]
[93 117]
[94 116]
[95 115]
[96 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
