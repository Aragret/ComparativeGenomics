%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[54.35958099 530.71301270]
[46.73128510 543.86132812]
[34.64899063 553.08551025]
[19.95516014 556.97912598]
[4.89049864 554.94824219]
[-8.24774456 547.30267334]
[-17.45608330 535.20825195]
[-21.33031082 520.50927734]
[-19.27963638 505.44732666]
[-11.61677361 492.31915283]
[0.48974732 483.12673950]
[15.19376945 479.27185059]
[17.19778252 464.40631104]
[19.20179749 449.54077148]
[21.20581055 434.67526245]
[10.40234375 445.08126831]
[-4.29097843 448.09893799]
[-18.32126999 442.79318237]
[-27.34109306 430.80807495]
[-28.55555534 415.85733032]
[-21.58834457 402.57357788]
[-8.59832668 395.07293701]
[6.38940048 395.67959595]
[18.73072815 404.20553589]
[24.60158920 418.00915527]
[28.57368469 403.54464722]
[32.54578018 389.08010864]
[28.45495415 374.75830078]
[39.57041931 363.49966431]
[43.54251480 349.03512573]
[47.51461029 334.57061768]
[51.48670959 320.10607910]
[55.45880508 305.64157104]
[47.89141083 292.86383057]
[51.71362686 278.13818359]
[65.16738892 270.28744507]
[69.13948059 255.82290649]
[73.11157990 241.35838318]
[77.08367157 226.89385986]
[81.05577087 212.42933655]
[83.72156525 197.66812134]
[85.05979919 182.72793579]
[86.39803314 167.78775024]
[87.73626709 152.84756470]
[81.16529083 139.48075867]
[90.10292816 126.42590332]
[91.44116211 111.48571777]
[85.73317719 98.72208405]
[93.61865234 87.17604828]
[87.14339447 72.74061584]
[95.98531342 60.75438690]
[97.32354736 45.81420135]
[90.84828949 31.37877083]
[99.69020844 19.39253807]
[91.80079651 32.15017319]
[80.91479492 42.46980667]
[67.75421906 49.66697693]
[53.19197083 53.26432419]
[38.19390869 53.02324295]
[23.75479889 48.95972824]
[10.83233929 41.34329605]
[0.28362933 30.67911530]
[-7.19167376 17.67450714]
[-11.09776020 3.19201827]
[-11.17555237 -11.80778027]
[-7.41989183 -26.33000565]
[-0.07987706 -39.41144943]
[10.35765457 -50.18446732]
[23.20042038 -57.93452454]
[37.59660339 -62.14758682]
[52.59135818 -62.54421616]
[67.19013977 -59.09811020]
[80.42465210 -52.03783035]
[91.41711426 -41.83166122]
[99.43842316 -29.15654373]
[103.95655823 -14.85317135]
[104.67142487 0.13487943]
[110.74526215 -13.58038712]
[116.81909180 -27.29565430]
[122.89292908 -41.01092148]
[128.96676636 -54.72618866]
[135.04060364 -68.44145203]
[135.65411377 -77.55525970]
[141.30831909 -82.31465149]
[147.58567810 -95.93796539]
[133.89183044 -89.81597900]
[119.19149780 -92.79928589]
[108.96752930 -103.77519226]
[107.03321838 -118.64994812]
[114.11000824 -131.87564087]
[127.55843353 -138.51942444]
[142.36256409 -136.10331726]
[153.00083923 -125.52847290]
[155.50524902 -110.73789215]
[163.35700989 -123.51873016]
[171.20877075 -136.29957581]
[179.06051636 -149.08041382]
[186.91227722 -161.86126709]
[194.76403809 -174.64210510]
[202.61578369 -187.42294312]
[190.92684937 -196.85676575]
[180.54026794 -207.70790100]
[171.62663269 -219.79820251]
[164.33229065 -232.92912292]
[158.77703857 -246.88504028]
[155.05207825 -261.43676758]
[153.21859741 -276.34539795]
[153.30670166 -291.36605835]
[155.31492615 -306.25213623]
[159.21031189 -320.75918579]
[164.92887878 -334.64895630]
[172.37673950 -347.69342041]
[181.43157959 -359.67834473]
[191.94471741 -370.40689087]
[203.74353027 -379.70297241]
[216.63423157 -387.41384888]
[230.40518188 -393.41296387]
[244.83023071 -397.60177612]
[259.67251587 -399.91149902]
[274.68832397 -400.30422974]
[289.63104248 -398.77349854]
[304.25534058 -395.34445190]
[318.32104492 -390.07339478]
[331.59719849 -383.04687500]
[343.86581421 -374.38027954]
[354.92538452 -364.21591187]
[364.59432983 -352.72073364]
[372.71386719 -340.08343506]
[379.15069580 -326.51153564]
[383.79907227 -312.22796631]
[386.58270264 -297.46719360]
[387.45584106 -282.47167969]
[386.40417480 -267.48760986]
[383.44497681 -252.76104736]
[378.62683105 -238.53382874]
[372.02883911 -225.03956604]
[363.75939941 -212.49986267]
[353.95422363 -201.12060547]
[342.77438354 -191.08868408]
[330.40347290 -182.56880188]
[317.04455566 -175.70088196]
[302.91708374 -170.59770203]
[288.25299072 -167.34304810]
[273.29309082 -165.99037170]
[258.28305054 -166.56188965]
[243.46931458 -169.04821777]
[229.09516907 -173.40850830]
[215.39663696 -179.57118225]
[207.54487610 -166.79034424]
[199.69311523 -154.00950623]
[191.84136963 -141.22866821]
[183.98960876 -128.44781494]
[176.13784790 -115.66697693]
[168.28610229 -102.88613129]
[161.20899963 -89.66060638]
[154.93162537 -76.03729248]
[148.75585938 -62.36761856]
[142.68203735 -48.65235519]
[136.60820007 -34.93708801]
[130.53436279 -21.22182083]
[124.46052551 -7.50655317]
[118.38669586 6.20871353]
[114.63039398 20.73077202]
[121.20137024 34.09757996]
[112.26373291 47.15243530]
[110.92549896 62.09262085]
[117.49647522 75.45942688]
[108.55883789 88.51428223]
[114.26682281 101.27791595]
[106.38134766 112.82395172]
[105.04311371 127.76413727]
[111.51837158 142.19956970]
[102.67645264 154.18580627]
[101.33821869 169.12599182]
[99.99998474 184.06617737]
[98.66175079 199.00634766]
[107.88307953 187.17558289]
[121.28573608 180.43995667]
[136.28189087 180.10000610]
[149.97599792 186.22138977]
[159.72396851 197.62214661]
[163.64358521 212.10096741]
[160.97807312 226.86224365]
[152.24208069 239.05577087]
[139.12237549 246.32719421]
[124.15219116 247.27250671]
[110.22203064 241.70918274]
[100.02158356 230.71142578]
[95.52029419 216.40142822]
[91.54819489 230.86595154]
[87.57610321 245.33047485]
[83.60400391 259.79501343]
[79.63191223 274.25952148]
[87.18942261 287.88015747]
[82.95510101 302.49267578]
[69.92332458 309.61364746]
[65.95123291 324.07818604]
[61.97913742 338.54269409]
[58.00703812 353.00723267]
[54.03494263 367.47177124]
[57.84165955 382.82818604]
[47.01030731 393.05221558]
[43.03820801 407.51672363]
[39.06611252 421.98126221]
[36.07133865 436.67926025]
[34.06732559 451.54479980]
[32.06331253 466.41030884]
[30.05929756 481.27584839]
[43.21760941 488.88684082]
[52.45773697 500.95700073]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 208]
[13 207]
[14 206]
[15 205]
[25 204]
[26 203]
[27 202]
[29 200]
[30 199]
[31 198]
[32 197]
[33 196]
[36 193]
[37 192]
[38 191]
[39 190]
[40 189]
[41 176]
[42 175]
[43 174]
[44 173]
[46 171]
[47 170]
[49 168]
[51 166]
[52 165]
[54 163]
[77 162]
[78 161]
[79 160]
[80 159]
[81 158]
[82 157]
[84 156]
[85 155]
[94 154]
[95 153]
[96 152]
[97 151]
[98 150]
[99 149]
[100 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
