%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[43.60567856 492.68511963]
[35.07162094 505.04736328]
[24.99693680 516.18988037]
[13.55401421 525.92199707]
[0.93865472 534.07720947]
[-12.63327503 540.51599121]
[-26.92954063 545.12811279]
[-41.70551682 547.83471680]
[-56.70836258 548.58941650]
[-71.68136597 547.37939453]
[-86.36830902 544.22521973]
[-100.51789093 539.18096924]
[-113.88798523 532.33294678]
[-126.24981689 523.79833984]
[-137.39186096 513.72308350]
[-147.12345886 502.27972412]
[-155.27807617 489.66397095]
[-161.71620178 476.09173584]
[-166.32765198 461.79525757]
[-169.03353882 447.01913452]
[-169.78753662 432.01626587]
[-168.57676697 417.04330444]
[-165.42192078 402.35650635]
[-160.37701416 388.20718384]
[-153.52833557 374.83740234]
[-144.99310303 362.47598267]
[-134.91735840 351.33441162]
[-123.47351074 341.60336304]
[-110.85737610 333.44934082]
[-97.28483582 327.01187134]
[-82.98812866 322.40109253]
[-68.21189880 319.69592285]
[-53.20897675 318.94262695]
[-38.23609161 320.15411377]
[-23.54944420 323.30966187]
[-18.51252937 309.18063354]
[-13.47561264 295.05160522]
[-8.43869591 280.92257690]
[-3.40177989 266.79354858]
[-6.41606951 252.20713806]
[5.50598764 241.80639648]
[10.54290390 227.67736816]
[15.57981968 213.54833984]
[20.61673546 199.41931152]
[9.47698307 209.46450806]
[-4.29488897 215.40887451]
[-19.24550056 216.62510681]
[-33.79707718 212.98483276]
[-46.41395950 204.87223816]
[-55.76465607 193.14344788]
[-60.86236572 179.03623962]
[-61.16911316 164.03936768]
[-56.65253067 149.73550415]
[-47.78925705 137.63417053]
[-35.51466370 129.01243591]
[-21.12411118 124.78017426]
[-6.13627005 125.38404083]
[7.86715508 130.76028442]
[19.40835190 140.34156799]
[27.26934814 153.11672974]
[30.62055397 167.73757935]
[29.10826111 182.66134644]
[37.52288055 170.24385071]
[45.93750000 157.82635498]
[54.35211563 145.40885925]
[62.76673508 132.99136353]
[48.25796509 136.79866028]
[34.24077225 131.45840454]
[25.94322395 118.96237946]
[26.46010017 103.97129059]
[35.59862137 92.07643890]
[49.95034027 87.71431732]
[64.16242218 92.51187897]
[72.93412018 104.67976379]
[72.99343872 119.68076324]
[82.82402039 108.35116577]
[81.90485382 93.89083099]
[91.40087891 82.94680786]
[105.84638214 81.81825256]
[115.67696381 70.48865509]
[125.50754547 59.15906525]
[135.16835022 47.68436432]
[144.65725708 36.06710052]
[154.14614868 24.44983673]
[163.63505554 12.83257389]
[164.17935181 8.52470875]
[165.89375305 4.97148705]
[168.39730835 2.44808269]
[171.25889587 1.07769597]
[174.05102539 0.82833183]
[177.71113586 -14.56368256]
[192.02520752 -18.68150139]
[202.18876648 -29.71337891]
[212.35231018 -40.74525833]
[222.51585388 -51.77713394]
[232.00474548 -63.39439774]
[240.78535461 -75.55585480]
[249.56596375 -87.71730804]
[258.34655762 -99.87876129]
[247.23226929 -109.97592163]
[237.31842041 -121.25401306]
[228.72966003 -133.57121277]
[221.57403564 -146.77261353]
[215.94151306 -160.69219971]
[211.90293884 -175.15490723]
[209.50910950 -189.97885132]
[208.79011536 -204.97763062]
[209.75498962 -219.96258545]
[212.39163208 -234.74528503]
[216.66685486 -249.13981628]
[222.52690125 -262.96514893]
[229.89807129 -276.04742432]
[238.68766785 -288.22210693]
[248.78515625 -299.33609009]
[260.06353760 -309.24960327]
[272.38101196 -317.83798218]
[285.58261108 -324.99322510]
[299.50238037 -330.62533569]
[313.96520996 -334.66348267]
[328.78921509 -337.05685425]
[343.78802490 -337.77542114]
[358.77294922 -336.81008911]
[373.55557251 -334.17300415]
[387.94995117 -329.89736938]
[401.77511597 -324.03689575]
[414.85717773 -316.66534424]
[427.03158569 -307.87536621]
[438.14529419 -297.77755737]
[448.05847168 -286.49887085]
[456.64648438 -274.18115234]
[463.80133057 -260.97930908]
[469.43301392 -247.05940247]
[473.47070312 -232.59645081]
[475.86364746 -217.77235413]
[476.58175659 -202.77354431]
[475.61596680 -187.78863525]
[472.97845459 -173.00610352]
[468.70239258 -158.61183167]
[462.84152222 -144.78683472]
[455.46954346 -131.70501709]
[446.67922974 -119.53085327]
[436.58108521 -108.41746521]
[425.30209351 -98.50462341]
[412.98413086 -89.91697693]
[399.78207397 -82.76253510]
[385.86199951 -77.13126373]
[371.39892578 -73.09398651]
[356.57473755 -70.70147705]
[341.57592773 -69.98382568]
[326.59103394 -70.95005798]
[311.80859375 -73.58801270]
[297.41442871 -77.86453247]
[283.58963013 -83.72581482]
[270.50802612 -91.09815979]
[261.72741699 -78.93670654]
[252.94680786 -66.77525330]
[244.16621399 -54.61379242]
[258.78189087 -57.98743057]
[272.63388062 -52.23220062]
[280.55569458 -39.49466324]
[279.59271240 -24.52560616]
[270.10409546 -12.90811825]
[255.62886047 -8.97523212]
[241.56591797 -14.19382000]
[233.16040039 -26.61747551]
[233.54772949 -41.61358643]
[223.38418579 -30.58170891]
[213.22064209 -19.54983330]
[203.05709839 -8.51795483]
[200.12394714 6.08498573]
[185.08290100 10.99187851]
[175.25231934 22.32147217]
[165.76341248 33.93873596]
[156.27452087 45.55599976]
[146.78561401 57.17326355]
[146.36499023 61.93058395]
[142.95138550 66.47418213]
[136.83714294 68.98964691]
[127.00656128 80.31923676]
[117.17597961 91.64883423]
[118.09514618 106.10916901]
[108.59912109 117.05319214]
[94.15361786 118.18174744]
[84.32303619 129.51133728]
[75.18423462 141.40597534]
[66.76961517 153.82347107]
[58.35499573 166.24096680]
[49.94037628 178.65846252]
[41.52575684 191.07595825]
[34.74576569 204.45623779]
[29.70884895 218.58526611]
[24.67193413 232.71429443]
[19.63501740 246.84332275]
[22.28903198 262.44033813]
[10.72724915 271.83044434]
[5.69033337 285.95947266]
[0.65341711 300.08850098]
[-4.38349915 314.21755981]
[-9.42041492 328.34658813]
[3.95033264 335.19332886]
[16.31297684 343.72680664]
[27.45597649 353.80096436]
[37.18865967 365.24340820]
[45.34448624 377.85839844]
[51.78390121 391.43002319]
[56.39671707 405.72604370]
[59.10400391 420.50189209]
[59.85943222 435.50469971]
[58.65008163 450.47778320]
[55.49664307 465.16485596]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 199]
[36 198]
[37 197]
[38 196]
[39 195]
[41 193]
[42 192]
[43 191]
[44 190]
[62 189]
[63 188]
[64 187]
[65 186]
[66 185]
[75 184]
[76 183]
[79 180]
[80 179]
[81 178]
[82 175]
[83 174]
[84 173]
[85 172]
[90 171]
[92 169]
[93 168]
[94 167]
[95 166]
[96 157]
[97 156]
[98 155]
[99 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
