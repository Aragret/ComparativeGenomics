%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCAUUUUCCUCCCGUUAAAGAUCUAGUUUAUUAUUCUUCCAUUAUCGAUGAUUCUUCUUAAAAUACCUCUUUCCCUGCGCCCGCCCCCUAUAUCCCAGxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[89.76867676 662.48773193]
[74.67822266 661.81323242]
[60.38951492 656.91326904]
[48.06087112 648.18505859]
[38.69172668 636.33624268]
[33.04158783 622.32720947]
[31.56848717 607.29370117]
[34.39184570 592.45434570]
[41.28278351 579.01220703]
[51.68268585 568.05688477]
[64.74847412 560.47656250]
[79.42097473 556.88562012]
[80.09075928 541.90057373]
[80.76054382 526.91558838]
[81.43032837 511.93051147]
[82.10011292 496.94549561]
[68.91526794 489.97229004]
[60.02899170 477.91644287]
[57.24694824 463.13735962]
[61.17357635 448.55648804]
[71.08177185 437.07980347]
[85.04684448 431.01858521]
[85.71662903 416.03356934]
[86.38641357 401.04852295]
[87.05619812 386.06347656]
[70.21224976 380.78591919]
[55.49940109 371.01098633]
[44.09029007 357.50930786]
[36.89658737 341.34887695]
[34.49615479 323.81051636]
[37.08665848 306.28649902]
[44.46927643 290.16983032]
[56.06396866 276.74374390]
[70.95503235 267.07931519]
[87.96340179 261.95016479]
[87.51679993 246.95680237]
[87.07019043 231.96345520]
[86.62358093 216.97010803]
[78.51077271 204.47885132]
[85.83376312 190.45442200]
[85.38716125 175.46107483]
[84.94055176 160.46772766]
[77.19042206 173.31044006]
[64.68312836 181.59100342]
[49.83363342 183.71054077]
[35.50914001 179.25982666]
[24.47548485 169.09822083]
[18.86309242 155.18774414]
[19.75562859 140.21432495]
[26.98075867 127.06908417]
[39.14342499 118.29015350]
[53.89520264 115.57261658]
[68.38775635 119.44118500]
[79.82280731 129.14889526]
[85.99267578 142.82260132]
[88.21778870 127.98854828]
[90.44290924 113.15451050]
[83.90264893 97.70778656]
[94.49465179 84.70064545]
[96.49866486 69.83512115]
[98.39196014 54.95508194]
[100.17442322 40.06136703]
[101.95689392 25.16764832]
[103.73935699 10.27393150]
[97.69676971 -4.34789133]
[106.89163971 -16.06555176]
[108.67411041 -30.95927048]
[110.23462677 -45.87787628]
[111.57286072 -60.81805801]
[112.91110229 -75.75824738]
[114.24933624 -90.69843292]
[115.58757019 -105.63861847]
[102.57875824 -98.17061615]
[88.57376099 -103.54276276]
[83.89653015 -117.79489899]
[91.99494934 -130.42088318]
[106.89916229 -132.11332703]
[117.62177277 -121.62614441]
[120.06749725 -136.42541504]
[122.51322937 -151.22468567]
[124.95895386 -166.02395630]
[127.40468597 -180.82322693]
[129.85040283 -195.62249756]
[115.39493561 -199.68481445]
[101.47409058 -205.31271362]
[88.25686646 -212.43789673]
[75.90370941 -220.97384644]
[64.56456757 -230.81698608]
[54.37709808 -241.84777832]
[45.46496201 -253.93235779]
[37.93634415 -266.92401123]
[31.88263702 -280.66503906]
[27.37732697 -294.98864746]
[24.47510147 -309.72091675]
[23.21119499 -324.68307495]
[23.60094833 -339.69345093]
[25.63962936 -354.56982422]
[29.30249023 -369.13165283]
[34.54507065 -383.20214844]
[41.30372620 -396.61047363]
[49.49641418 -409.19393921]
[59.02368546 -420.79971313]
[69.76988220 -431.28695679]
[81.60456085 -440.52838135]
[94.38405609 -448.41174316]
[107.95323944 -454.84140015]
[122.14739227 -459.73928833]
[136.79420471 -463.04592896]
[151.71589661 -464.72122192]
[166.73130798 -464.74481201]
[181.65817261 -463.11639404]
[196.31530762 -459.85574341]
[210.52476501 -455.00247192]
[224.11407471 -448.61544800]
[236.91827393 -440.77224731]
[248.78190613 -431.56805420]
[259.56100464 -421.11462402]
[269.12466431 -409.53878784]
[277.35684204 -396.98114014]
[284.15756226 -383.59408569]
[289.44430542 -369.54013062]
[293.15286255 -354.98989868]
[295.23828125 -340.11999512]
[295.67517090 -325.11090088]
[294.45825195 -310.14486694]
[291.60229492 -295.40353394]
[287.14199829 -281.06585693]
[281.13146973 -267.30590820]
[273.64370728 -254.29066467]
[264.76956177 -242.17814636]
[254.61677551 -231.11540222]
[243.30860901 -221.23672485]
[230.98231506 -212.66200256]
[217.78753662 -205.49534607]
[203.88442993 -199.82376099]
[189.44178772 -195.71606445]
[174.63490295 -193.22215271]
[159.64353943 -192.37228394]
[144.64968872 -193.17677307]
[142.20394897 -178.37750244]
[139.75822449 -163.57823181]
[137.31250000 -148.77896118]
[134.86677551 -133.97969055]
[132.42105103 -119.18041229]
[130.52775574 -104.30037689]
[129.18951416 -89.36019897]
[127.85128021 -74.42001343]
[126.51304626 -59.47982407]
[125.17481232 -44.53963852]
[127.49534607 -40.36541367]
[127.21828461 -34.68912125]
[123.56782532 -29.17680359]
[121.78536224 -14.28308678]
[127.95544434 -0.72656226]
[118.63307190 12.05639744]
[116.85060883 26.95011520]
[115.06814575 41.84383011]
[113.28567505 56.73754883]
[115.61206818 63.75251389]
[111.36419678 71.83913422]
[109.36018372 86.70465851]
[115.85051727 96.37506866]
[114.20864868 107.90526581]
[105.27695465 115.37962341]
[103.05183411 130.21366882]
[100.82672119 145.04771423]
[99.93389893 160.02111816]
[100.38050842 175.01446533]
[100.82711029 190.00781250]
[108.97186279 203.57150269]
[101.61693573 216.52349854]
[102.06353760 231.51684570]
[102.51014709 246.51020813]
[102.95674896 261.50354004]
[115.21896362 263.87521362]
[126.76747131 268.61553955]
[137.14984131 275.53634644]
[145.95983887 284.36401367]
[152.85328674 294.75039673]
[157.56152344 306.28649902]
[159.90193176 318.51858521]
[159.78489685 330.96609497]
[157.21736145 343.14047241]
[152.30238342 354.56427002]
[145.23503113 364.79000854]
[136.29464722 373.41760254]
[125.83378601 380.11013794]
[114.26432037 384.60678101]
[102.04123688 386.73327637]
[101.37145233 401.71829224]
[100.70166779 416.70333862]
[100.03188324 431.68838501]
[113.40051270 438.97131348]
[122.24529266 451.28622437]
[124.85542297 466.15927124]
[120.76594543 480.63119507]
[110.83953857 491.84619141]
[97.08515167 497.61526489]
[96.41536713 512.60028076]
[95.74558258 527.58532715]
[95.07579803 542.57037354]
[94.40601349 557.55541992]
[108.69963837 562.44104004]
[121.03704071 571.15679932]
[130.41809082 582.99627686]
[136.08229065 596.99963379]
[137.57049561 612.03161621]
[134.76203918 626.87377930]
[127.88461304 640.32287598]
[117.49571991 651.28863525]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 202]
[13 201]
[14 200]
[15 199]
[16 198]
[22 192]
[23 191]
[24 190]
[25 189]
[35 174]
[36 173]
[37 172]
[38 171]
[40 169]
[41 168]
[42 167]
[55 166]
[56 165]
[57 164]
[59 161]
[60 160]
[61 158]
[62 157]
[63 156]
[64 155]
[66 153]
[67 152]
[68 149]
[69 148]
[70 147]
[71 146]
[72 145]
[78 144]
[79 143]
[80 142]
[81 141]
[82 140]
[83 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
