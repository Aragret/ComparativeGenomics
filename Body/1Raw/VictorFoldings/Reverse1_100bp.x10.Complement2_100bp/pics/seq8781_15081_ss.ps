%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[51.78031158 502.39596558]
[53.83708191 517.37133789]
[51.38677597 532.28735352]
[44.64726639 545.81768799]
[34.21782684 556.75927734]
[21.02583694 564.13916016]
[6.24432087 567.30114746]
[-8.81235981 565.96405029]
[-22.80537605 560.24682617]
[-34.49047852 550.65777588]
[-42.82863235 538.04962158]
[-47.07842255 523.54333496]
[-46.86194992 508.42898560]
[-42.19847107 494.05041504]
[-33.50265884 481.68618774]
[-21.54773521 472.43569946]
[-7.39672613 467.12155151]
[7.69207048 466.21621704]
[11.23174286 451.63983154]
[14.77141571 437.06344604]
[18.31108856 422.48709106]
[21.85075951 407.91070557]
[25.39043236 393.33432007]
[28.82149315 378.73202515]
[32.14375305 364.10455322]
[35.46601105 349.47708130]
[33.88204956 342.25817871]
[38.94815826 334.65734863]
[42.48783112 320.08099365]
[46.02750397 305.50460815]
[49.56717682 290.92822266]
[45.05174637 276.73455811]
[55.82707214 265.14996338]
[59.36674500 250.57359314]
[45.99936295 240.24047852]
[38.46882248 225.05415344]
[38.33353424 208.04841614]
[45.66911316 192.64424133]
[59.04341888 181.96156311]
[75.79590607 178.18743896]
[78.90001678 163.51214600]
[82.00412750 148.83683777]
[85.10823059 134.16152954]
[88.21234131 119.48622894]
[77.74156189 104.81911469]
[81.20795441 87.13449860]
[96.44103241 77.50564575]
[99.10682678 62.74443054]
[92.40711975 51.72278595]
[94.93135834 39.48301697]
[104.79216003 32.47651672]
[107.67743683 17.75662422]
[110.56270599 3.03673315]
[101.81167603 -7.20211697]
[100.57350922 -20.41867447]
[107.07714844 -31.76701355]
[118.75380707 -37.21541977]
[121.85791779 -51.89072037]
[124.96202850 -66.56602478]
[128.06613159 -81.24132538]
[129.18177795 -96.19977570]
[128.28897095 -111.17318726]
[127.39614868 -126.14659119]
[126.50333405 -141.11999512]
[125.61051941 -156.09339905]
[124.71770477 -171.06680298]
[123.82489014 -186.04020691]
[118.01303101 -172.21189880]
[109.00431061 -160.21844482]
[97.34272003 -150.78407288]
[83.73245239 -144.47846985]
[68.99535370 -141.68240356]
[54.02132797 -142.56472778]
[39.71457291 -147.07214355]
[26.93900681 -154.93247986]
[16.46607780 -165.67109680]
[8.92819309 -178.63952637]
[4.78052664 -193.05468750]
[4.27353525 -208.04611206]
[7.43783379 -222.70855713]
[14.08234596 -236.15661621]
[23.80584335 -247.57824707]
[36.02117538 -256.28375244]
[49.99071884 -261.74743652]
[64.87092590 -263.63937378]
[79.76325226 -261.84533691]
[93.76843262 -256.47366333]
[106.04076385 -247.84870911]
[115.83917999 -236.49128723]
[122.57200623 -223.08721924]
[125.83223724 -208.45048523]
[129.37191772 -223.02687073]
[132.91159058 -237.60324097]
[136.45126343 -252.17961121]
[139.99093628 -266.75598145]
[143.53060913 -281.33236694]
[147.07028198 -295.90875244]
[133.35102844 -302.08102417]
[120.99968719 -310.66931152]
[110.43690491 -321.38110352]
[102.02245331 -333.85153198]
[96.04293060 -347.65588379]
[92.70200348 -362.32397461]
[92.11344910 -377.35620117]
[94.29731750 -392.24060059]
[99.17922211 -406.47021484]
[106.59290314 -419.56036377]
[116.28584290 -431.06521606]
[127.92790222 -440.59292603]
[141.12255859 -447.81896973]
[155.42039490 -452.49722290]
[170.33445740 -454.46838379]
[185.35676575 -453.66528320]
[199.97566223 -450.11529541]
[213.69323730 -443.93930054]
[226.04228210 -435.34768677]
[236.60217285 -424.63305664]
[245.01325989 -412.16033936]
[250.98905945 -398.35440063]
[254.32603455 -383.68539429]
[254.91053772 -368.65301514]
[252.72265625 -353.76919556]
[247.83691406 -339.54092407]
[240.41970825 -326.45275879]
[230.72366333 -314.95053101]
[219.07904053 -305.42596436]
[205.88243103 -298.20346069]
[191.58332825 -293.52905273]
[176.66873169 -291.56192017]
[161.64665222 -292.36907959]
[158.10697937 -277.79269409]
[154.56730652 -263.21630859]
[151.02763367 -248.63993835]
[147.48796082 -234.06356812]
[143.94828796 -219.48719788]
[140.40861511 -204.91081238]
[142.58428955 -201.20938110]
[143.26387024 -196.52929688]
[142.04411316 -191.50741577]
[138.79829407 -186.93302917]
[139.69111633 -171.95962524]
[140.58392334 -156.98622131]
[141.47674561 -142.01281738]
[142.36955261 -127.03940582]
[143.26237488 -112.06600189]
[144.15519714 -97.09259796]
[150.35789490 -110.75006104]
[160.43092346 -121.86465454]
[173.41416931 -129.37699890]
[188.07015991 -132.57107544]
[203.00196838 -131.14242554]
[216.78639221 -125.22723389]
[228.10960388 -115.38929749]
[235.89233398 -102.56629944]
[239.39277649 -87.98046112]
[238.27729797 -73.02198792]
[232.65222168 -59.11664963]
[223.05369568 -47.58980179]
[210.39659119 -39.54011154]
[195.88728333 -35.73482513]
[180.90873718 -36.53663635]
[166.88858032 -41.86912537]
[155.16314697 -51.22402954]
[146.85003662 -63.70970535]
[142.74143982 -78.13721466]
[139.63732910 -63.46191406]
[136.53321838 -48.78660965]
[133.42910767 -34.11130905]
[143.19664001 -20.42065430]
[139.97692871 -3.56988978]
[125.28260040 5.92200565]
[122.39732361 20.64189720]
[119.51205444 35.36178970]
[126.08570099 51.63305283]
[113.86804962 65.41022491]
[111.20225525 80.17144775]
[119.33770752 87.97023773]
[122.73786163 98.71479797]
[120.57011414 109.77407837]
[113.36528015 118.43993378]
[102.88764954 122.59033966]
[99.78353882 137.26564026]
[96.67942810 151.94094849]
[93.57531738 166.61625671]
[90.47120667 181.29154968]
[101.48356628 188.59425354]
[109.33985138 199.17901611]
[113.12239075 211.77307129]
[112.40174866 224.87113953]
[107.28536987 236.91542053]
[98.40221405 246.48081970]
[86.82550812 252.44357300]
[73.94312286 254.11326599]
[70.40345001 268.68963623]
[74.66569519 283.92590332]
[64.14355469 294.46789551]
[60.60387802 309.04428101]
[57.06420517 323.62066650]
[53.52453232 338.19702148]
[50.09347153 352.79934692]
[46.77121353 367.42681885]
[43.44895554 382.05426025]
[44.59994507 391.11590576]
[39.96680832 396.87399292]
[36.42713547 411.45037842]
[32.88746262 426.02676392]
[29.34779167 440.60311890]
[25.80811882 455.17950439]
[22.26844597 469.75588989]
[35.26157379 477.48052979]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 209]
[19 208]
[20 207]
[21 206]
[22 205]
[23 204]
[24 202]
[25 201]
[26 200]
[28 199]
[29 198]
[30 197]
[31 196]
[33 194]
[34 193]
[40 185]
[41 184]
[42 183]
[43 182]
[44 181]
[47 176]
[48 175]
[51 173]
[52 172]
[53 171]
[57 168]
[58 167]
[59 166]
[60 165]
[61 146]
[62 145]
[63 144]
[64 143]
[65 142]
[66 141]
[67 140]
[91 136]
[92 135]
[93 134]
[94 133]
[95 132]
[96 131]
[97 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
