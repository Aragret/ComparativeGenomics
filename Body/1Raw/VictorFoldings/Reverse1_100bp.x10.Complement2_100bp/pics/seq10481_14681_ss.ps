%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAAUAAGGAAGAUCCGUAUCAUCCCUCCUAUACUCCACACUCGCUAUAUGAUCAUAAGGAUCUUCACUCUACCAUUUACGAUCAUAUUAUAAAUACAUxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[77.54454041 432.31939697]
[72.27370453 446.42300415]
[64.18540192 459.12234497]
[53.63323212 469.86224365]
[41.07848358 478.17318726]
[27.06999588 483.69186401]
[12.22016239 486.17706299]
[-2.82184768 485.52008057]
[-17.39846230 481.74966431]
[-30.87245369 475.03063965]
[-42.65479660 465.65673828]
[-52.23041916 454.03775024]
[-59.18071365 440.68157959]
[-63.20184708 426.17211914]
[-64.11802673 411.14367676]
[-61.88920593 396.25320435]
[-56.61281967 382.15167236]
[-48.51952744 369.45550537]
[-37.96313095 358.71978760]
[-25.40511322 350.41375732]
[-11.39445686 344.90057373]
[3.45635414 342.42123413]
[18.49810410 343.08413696]
[22.25440598 328.56207275]
[26.01070595 314.04000854]
[29.76700592 299.51794434]
[33.52330780 284.99591064]
[32.15497971 277.73300171]
[37.44514847 270.28640747]
[41.41724396 255.82188416]
[37.32641602 241.50007629]
[48.44188309 230.24142456]
[52.41397858 215.77690125]
[51.14626312 213.27670288]
[50.79253387 210.12368774]
[51.60638428 206.66348267]
[53.71175003 203.32701111]
[57.07704544 200.58316040]
[61.90304184 186.38070679]
[58.67191696 171.84078979]
[70.43779755 161.26371765]
[65.37406158 150.27803040]
[69.27845001 138.40623474]
[80.57598114 132.18301392]
[85.61289978 118.05398560]
[90.64981842 103.92495728]
[90.17504120 95.87839508]
[95.86833191 89.62400818]
[101.11505127 75.57154083]
[106.36177063 61.51906967]
[110.86940002 47.21238327]
[114.62570190 32.69032288]
[118.38200378 18.16826439]
[122.13829803 3.64620423]
[125.89459991 -10.87585545]
[129.65090942 -25.39791489]
[133.40719604 -39.91997528]
[137.16349792 -54.44203186]
[140.91979980 -68.96408844]
[144.67610168 -83.48615265]
[148.43240356 -98.00820923]
[152.18870544 -112.53027344]
[151.30802917 -121.62214661]
[156.11054993 -127.23976135]
[152.30383301 -142.59617615]
[163.13517761 -152.82022095]
[167.10728455 -167.28474426]
[171.07937622 -181.74926758]
[174.94367981 -196.24295044]
[178.69998169 -210.76501465]
[181.58525085 -225.48490906]
[183.58926392 -240.35043335]
[185.59327698 -255.21595764]
[187.59729004 -270.08148193]
[189.60131836 -284.94702148]
[191.60533142 -299.81256104]
[176.97328186 -303.16195679]
[162.70643616 -307.82803345]
[148.92301941 -313.77215576]
[135.73724365 -320.94506836]
[123.25837708 -329.28732300]
[111.58982086 -338.72979736]
[100.82826996 -349.19421387]
[91.06288910 -360.59390259]
[82.37461853 -372.83435059]
[74.83543396 -385.81417847]
[68.50782013 -399.42581177]
[63.44420624 -413.55645752]
[59.68655396 -428.08901978]
[57.26600266 -442.90307617]
[56.20260239 -457.87585449]
[56.50517654 -472.88333130]
[58.17120743 -487.80108643]
[61.18689346 -502.50552368]
[65.52725220 -516.87481689]
[71.15630341 -530.78991699]
[78.02741241 -544.13543701]
[86.08363342 -556.80084229]
[95.25822449 -568.68115234]
[105.47514343 -579.67797852]
[116.64973450 -589.70013428]
[128.68939209 -598.66461182]
[141.49436951 -606.49707031]
[154.95854187 -613.13269043]
[168.97035217 -618.51641846]
[183.41366577 -622.60369873]
[198.16882324 -625.36059570]
[213.11355591 -626.76428223]
[228.12400818 -626.80322266]
[243.07580566 -625.47692871]
[257.84506226 -622.79650879]
[272.30935669 -618.78417969]
[286.34887695 -613.47308350]
[299.84722900 -606.90734863]
[312.69262695 -599.14129639]
[324.77859497 -590.23931885]
[336.00494385 -580.27520752]
[346.27871704 -569.33148193]
[355.51473999 -557.49884033]
[363.63647461 -544.87536621]
[370.57666016 -531.56561279]
[376.27774048 -517.67993164]
[380.69247437 -503.33331299]
[383.78433228 -488.64468384]
[385.52761841 -473.73574829]
[385.90795898 -458.73007202]
[384.92214966 -443.75195312]
[382.57839966 -428.92556763]
[378.89608765 -414.37374878]
[373.90576172 -400.21704102]
[367.64877319 -386.57281494]
[360.17694092 -373.55407715]
[351.55221558 -361.26876831]
[341.84603882 -349.81863403]
[331.13885498 -339.29858398]
[319.51937866 -329.79580688]
[307.08389282 -321.38900757]
[293.93545532 -314.14785767]
[280.18304443 -308.13238525]
[265.94055176 -303.39242554]
[251.32606506 -299.96728516]
[236.46064758 -297.88528442]
[221.46749878 -297.16369629]
[206.47085571 -297.80853271]
[204.46684265 -282.94299316]
[202.46282959 -268.07748413]
[200.45881653 -253.21194458]
[198.45480347 -238.34642029]
[196.45079041 -223.48089600]
[207.74577332 -233.35122681]
[222.67443848 -234.81228638]
[235.66877747 -227.31915283]
[241.88221741 -213.66656494]
[238.99729919 -198.94659424]
[228.09001160 -188.64944458]
[213.22853088 -186.61569214]
[199.95579529 -193.60386658]
[193.22204590 -207.00871277]
[189.46574402 -192.48664856]
[190.83407593 -185.22377014]
[185.54389954 -177.77716064]
[181.57180786 -163.31263733]
[177.59971619 -148.84811401]
[181.69053650 -134.52630615]
[170.57507324 -123.26766205]
[166.71076965 -108.77397156]
[162.95446777 -94.25190735]
[159.19816589 -79.72985077]
[155.44186401 -65.20779419]
[151.68556213 -50.68573380]
[147.92926025 -36.16367340]
[144.17295837 -21.64161301]
[140.41665649 -7.11955452]
[136.66035461 7.40250492]
[132.90405273 21.92456436]
[129.14776611 36.44662476]
[125.39145660 50.96868134]
[138.27143860 43.28063965]
[153.09938049 45.54611206]
[163.09613037 56.72935867]
[163.69131470 71.71754456]
[154.61283875 83.65827942]
[140.01123047 87.09241486]
[126.56217194 80.44991302]
[120.41424561 66.76578522]
[115.16752625 80.81826019]
[109.92080688 94.87072754]
[104.77884674 108.96186829]
[99.74192810 123.09089661]
[94.70501709 137.21992493]
[98.44197845 155.25091553]
[84.64025879 166.08970642]
[87.52619171 181.64547729]
[76.10549927 191.20669556]
[71.27950287 205.40914917]
[66.87850189 219.74900818]
[62.90640640 234.21353149]
[66.71311951 249.56994629]
[55.88176727 259.79397583]
[51.90967178 274.25851440]
[48.04536819 288.75219727]
[44.28906631 303.27426147]
[40.53276443 317.79632568]
[36.77646637 332.31838989]
[33.02016449 346.84042358]
[46.49679565 353.55416870]
[58.28282928 362.92343140]
[67.86302185 374.53866577]
[74.81856537 387.89208984]
[78.84540558 402.39996338]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 205]
[24 204]
[25 203]
[26 202]
[27 201]
[29 200]
[30 199]
[32 197]
[33 196]
[38 195]
[39 194]
[41 192]
[44 190]
[45 189]
[46 188]
[48 187]
[49 186]
[50 185]
[51 177]
[52 176]
[53 175]
[54 174]
[55 173]
[56 172]
[57 171]
[58 170]
[59 169]
[60 168]
[61 167]
[62 166]
[64 165]
[66 163]
[67 162]
[68 161]
[69 159]
[70 158]
[71 149]
[72 148]
[73 147]
[74 146]
[75 145]
[76 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
