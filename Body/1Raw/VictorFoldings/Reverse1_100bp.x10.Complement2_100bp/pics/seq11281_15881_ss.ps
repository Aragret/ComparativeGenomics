%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAGAAAUGAUAUUUUCGAUAACACAUUCGAUCAGUAUAAUUCAACAACCGAGUCCUCAAACUAUCAAGAACCCGUCACUCUCACUCAUCAUCUUACAAxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[45.58074570 287.62969971]
[48.24768066 302.40438843]
[49.38130951 317.37500000]
[48.96961212 332.38281250]
[47.01695633 347.26873779]
[43.54404068 361.87500000]
[38.58768082 376.04675293]
[32.20041656 389.63375854]
[24.44995499 402.49200439]
[15.41845608 414.48516846]
[5.20166016 425.48614502]
[-6.09213066 435.37826538]
[-18.34319496 444.05670166]
[-31.42166519 451.42947388]
[-45.18889999 457.41839600]
[-59.49896622 461.95999146]
[-74.20015717 465.00613403]
[-89.13664246 466.52450562]
[-104.15008545 466.49902344]
[-119.08132935 464.92996216]
[-133.77209473 461.83395386]
[-148.06666565 457.24380493]
[-161.81349182 451.20819092]
[-174.86685181 443.79104614]
[-187.08839417 435.07107544]
[-198.34854126 425.14065552]
[-208.52793884 414.10510254]
[-217.51867676 402.08132935]
[-225.22544861 389.19686890]
[-231.56655884 375.58825684]
[-236.47477722 361.39974976]
[-239.89808655 346.78176880]
[-241.80020142 331.88931274]
[-242.16096497 316.88018799]
[-240.97651672 301.91351318]
[-238.25944519 287.14794922]
[-234.03855896 272.74005127]
[-228.35856628 258.84249878]
[-221.27970886 245.60263062]
[-212.87701416 233.16082764]
[-203.23954773 221.64894104]
[-192.46949768 211.18902588]
[-180.68101501 201.89195251]
[-167.99905396 193.85627747]
[-154.55807495 187.16717529]
[-140.50053406 181.89556885]
[-125.97547913 178.09733582]
[-111.13685608 175.81274414]
[-96.14197540 175.06599426]
[-81.14979553 175.86502075]
[-66.31922913 178.20135498]
[-51.80749893 182.05020142]
[-37.76843262 187.37078857]
[-24.35085297 194.10671997]
[-11.69699574 202.18655396]
[0.05900247 211.52468872]
[10.54650402 200.80030823]
[21.03400421 190.07592773]
[31.52150536 179.35154724]
[42.00900650 168.62716675]
[52.49650955 157.90278625]
[61.81138992 146.14553833]
[69.85256195 133.48300171]
[77.89373779 120.82048035]
[85.93490601 108.15795898]
[86.20953369 91.38593292]
[101.16123199 83.78178406]
[109.01298523 71.00093842]
[109.64407349 55.19232559]
[122.89878845 48.39806747]
[130.75053406 35.61722565]
[138.60229492 22.83638191]
[146.45405579 10.05553913]
[154.30580139 -2.72530365]
[142.03375244 -11.35913849]
[130.32218933 -20.73922539]
[119.21645355 -30.82927132]
[108.75949097 -41.59024048]
[98.99176788 -52.98050308]
[89.95106506 -64.95598602]
[81.67237091 -77.47036743]
[74.18770599 -90.47522736]
[67.52602386 -103.92024231]
[61.71310806 -117.75341034]
[56.77144241 -131.92120361]
[52.72014236 -146.36882019]
[49.57489014 -161.04035950]
[47.34784698 -175.87904358]
[46.04763031 -190.82748413]
[45.67926788 -205.82785034]
[46.24419403 -220.82209778]
[47.74021149 -235.75221252]
[50.16154099 -250.56044006]
[53.49881363 -265.18948364]
[57.73911285 -279.58276367]
[62.86603928 -293.68457031]
[68.85975647 -307.44036865]
[75.69707489 -320.79693604]
[83.35153961 -333.70257568]
[91.79354095 -346.10739136]
[100.99040985 -357.96334839]
[110.90657806 -369.22460938]
[121.50367737 -379.84762573]
[132.74070740 -389.79122925]
[144.57418823 -399.01702881]
[156.95834351 -407.48928833]
[169.84527588 -415.17523193]
[183.18510437 -422.04513550]
[196.92622375 -428.07241821]
[211.01547241 -433.23373413]
[225.39836121 -437.50915527]
[240.01922607 -440.88214111]
[254.82150269 -443.33959961]
[269.74792480 -444.87207031]
[284.74075317 -445.47357178]
[299.74194336 -445.14184570]
[314.69354248 -443.87811279]
[329.53762817 -441.68728638]
[344.21676636 -438.57788086]
[358.67422485 -434.56185913]
[372.85406494 -429.65478516]
[386.70138550 -423.87564087]
[400.16262817 -417.24679565]
[413.18569946 -409.79391479]
[425.72024536 -401.54577637]
[437.71777344 -392.53433228]
[449.13183594 -382.79446411]
[459.91830444 -372.36380005]
[470.03543091 -361.28271484]
[479.44406128 -349.59408569]
[488.10784912 -337.34313965]
[495.99319458 -324.57727051]
[503.06967163 -311.34585571]
[509.30984497 -297.70010376]
[514.68957520 -283.69277954]
[519.18811035 -269.37811279]
[522.78796387 -254.81146240]
[525.47528076 -240.04917908]
[527.23962402 -225.14839172]
[528.07415771 -210.16673279]
[527.97564697 -195.16217041]
[526.94458008 -180.19274902]
[524.98480225 -165.31640625]
[522.10394287 -150.59066772]
[518.31317139 -136.07252502]
[513.62713623 -121.81813049]
[508.06399536 -107.88264465]
[501.64523315 -94.31996918]
[494.39569092 -81.18258667]
[486.34344482 -68.52132416]
[477.51962280 -56.38515472]
[467.95834351 -44.82103729]
[457.69665527 -33.87371445]
[446.77420044 -23.58553696]
[435.23324585 -13.99630833]
[423.11849976 -5.14312649]
[410.47674561 2.93975592]
[397.35696411 10.22106743]
[383.80987549 16.67263985]
[369.88787842 22.26951027]
[355.64486694 26.99002647]
[341.13595581 30.81592751]
[326.41723633 33.73240662]
[311.54565430 35.72818756]
[296.57879639 36.79554367]
[281.57452393 36.93034744]
[266.59088135 36.13207626]
[251.68586731 34.40382004]
[236.91711426 31.75226212]
[222.34179688 28.18766594]
[208.01626587 23.72381783]
[193.99597168 18.37798882]
[180.33514404 12.17086220]
[167.08665466 5.12645197]
[159.23489380 17.90729523]
[151.38313293 30.68813705]
[143.53138733 43.46897888]
[135.67962646 56.24982071]
[135.61015320 71.14426422]
[121.79382324 78.85269165]
[113.94207001 91.63353729]
[115.96075439 103.10376740]
[109.79067993 112.98159027]
[98.59743500 116.19913483]
[90.55625916 128.86166382]
[82.51509094 141.52418518]
[74.47391510 154.18670654]
[87.83245087 147.36398315]
[102.77877045 146.09609985]
[117.09568024 150.57115173]
[128.65934753 160.12527466]
[135.75437927 173.34120178]
[137.32826233 188.25840759]
[133.14753723 202.66400146]
[123.83235931 214.42102051]
[110.76460266 221.78538513]
[95.88278961 223.66461182]
[81.39453888 219.77995300]
[69.44910431 210.70765686]
[61.81851578 197.79354858]
[59.63472748 182.95336914]
[63.22088623 168.39028931]
[52.73338699 179.11466980]
[42.24588394 189.83905029]
[31.75838470 200.56343079]
[21.27088356 211.28781128]
[10.78338242 222.01219177]
[20.38170815 233.55671692]
[28.74212265 246.02697754]
[35.77600098 259.29080200]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[56 207]
[57 206]
[58 205]
[59 204]
[60 203]
[61 202]
[62 187]
[63 186]
[64 185]
[65 184]
[67 181]
[68 180]
[70 178]
[71 177]
[72 176]
[73 175]
[74 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
