%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[106.05313873 557.81677246]
[91.39020538 553.02069092]
[81.66563416 541.04425049]
[79.98249817 525.70898438]
[86.87786865 511.90832520]
[100.15147400 504.04608154]
[100.59808350 489.05273438]
[101.04468536 474.05938721]
[101.49129486 459.06600952]
[101.60295868 444.06643677]
[101.37963104 429.06811523]
[101.15630341 414.06976318]
[100.26348877 399.09634399]
[98.70296478 384.17776489]
[97.14244080 369.25915527]
[95.58191681 354.34054565]
[93.68862915 339.46051025]
[91.46350861 324.62646484]
[89.23838806 309.79241943]
[83.06929016 323.46508789]
[71.63460541 333.17324829]
[57.14219666 337.04235840]
[42.39031601 334.32537842]
[30.22732162 325.54687500]
[23.00169945 312.40191650]
[22.10860443 297.42852783]
[27.72047806 283.51785278]
[38.75375366 273.35583496]
[53.07808304 268.90457153]
[67.92765808 271.02355957]
[80.43525696 279.30364990]
[88.18627167 292.14727783]
[88.63287354 277.15393066]
[89.07948303 262.16058350]
[89.52608490 247.16723633]
[89.97269440 232.17388916]
[90.41929626 217.18054199]
[90.86590576 202.18719482]
[91.20088196 187.19093323]
[91.42420959 172.19259644]
[91.64753723 157.19425964]
[91.87086487 142.19592285]
[77.93753815 136.87582397]
[66.66188049 127.11362457]
[59.40217590 114.08528137]
[57.03292847 99.36021423]
[59.83954620 84.71221161]
[67.48394012 71.90579987]
[79.04524994 62.48364258]
[93.13079834 57.58075333]
[93.35412598 42.58241272]
[93.57745361 27.58407593]
[93.80078125 12.58573914]
[79.51945496 4.25293493]
[71.43543243 -10.06293201]
[71.67266846 -26.40797997]
[80.07173920 -40.32241440]
[94.25914001 -48.05739975]
[94.25914001 -63.05739975]
[94.25914001 -78.05739594]
[94.25914001 -93.05739594]
[93.03216553 -108.00713348]
[90.58644104 -122.80640411]
[88.14070892 -137.60568237]
[85.69498444 -152.40495300]
[73.91539001 -158.93608093]
[68.13253021 -170.88467407]
[70.25590515 -183.79100037]
[79.28921509 -192.97952271]
[77.06409454 -207.81356812]
[74.17882538 -222.53344727]
[70.63915253 -237.10983276]
[67.09947968 -251.68620300]
[63.55980682 -266.26257324]
[60.02013397 -280.83895874]
[56.48046494 -295.41534424]
[45.89166260 -302.78012085]
[43.24354553 -314.99368286]
[49.42269897 -325.39294434]
[46.10044098 -340.02041626]
[42.77817917 -354.64785767]
[27.75150108 -353.98553467]
[12.84807110 -356.01715088]
[-1.45302904 -360.67745972]
[-14.69207573 -367.81658936]
[-26.44348907 -377.20510864]
[-36.32950974 -388.54116821]
[-44.03234482 -401.46038818]
[-49.30437851 -415.54745483]
[-51.97613525 -430.34951782]
[-51.96173096 -445.39077759]
[-49.26162720 -460.18771362]
[-43.96262360 -474.26467896]
[-36.23505783 -487.16909790]
[-26.32734299 -498.48620605]
[-14.55796909 -507.85220337]
[-1.30527210 -514.96594238]
[13.00472736 -519.59887695]
[27.91202164 -521.60192871]
[42.93740463 -520.91082764]
[57.59787369 -517.54772949]
[71.42214966 -511.62072754]
[83.96584320 -503.32040405]
[94.82572937 -492.91354370]
[103.65270233 -480.73468018]
[110.16300964 -467.17535400]
[114.14737701 -452.67141724]
[115.47772980 -437.68908691]
[114.11128998 -422.71002197]
[110.09198761 -408.21569824]
[103.54902649 -394.67208862]
[94.69274139 -382.51455688]
[83.80781555 -372.13388062]
[71.24415588 -363.86380005]
[57.40563965 -357.97012329]
[60.72790146 -343.34268188]
[64.05016327 -328.71520996]
[76.64937592 -316.49938965]
[71.05683899 -298.95501709]
[74.59651184 -284.37863159]
[78.13618469 -269.80224609]
[81.67585754 -255.22587585]
[85.21553040 -240.64950562]
[88.75520325 -226.07312012]
[97.46393585 -238.28614807]
[112.23444366 -240.89994812]
[124.60551453 -232.41723633]
[127.49044037 -217.69726562]
[119.23659515 -205.17233276]
[104.57215881 -202.01727295]
[91.89813995 -210.03868103]
[94.12326050 -195.20463562]
[108.06253052 -185.79530334]
[110.94027710 -168.88278198]
[100.49425507 -154.85067749]
[102.93997955 -140.05140686]
[105.38571167 -125.25212860]
[107.83143616 -110.45285797]
[114.15631866 -124.05418396]
[126.02132416 -133.23141479]
[140.77578735 -135.93434143]
[155.12351990 -131.55912781]
[165.85920715 -121.08319855]
[170.58445740 -106.84690857]
[168.24365234 -92.03067780]
[159.35972595 -79.94449615]
[145.91737366 -73.28844452]
[130.91964722 -73.54949188]
[117.71707153 -80.66934204]
[109.25914001 -93.05739594]
[109.25914001 -78.05739594]
[109.25914001 -63.05739975]
[109.25914001 -48.05739975]
[121.51097107 -42.02334976]
[130.00851440 -31.24742317]
[133.04866028 -17.79727364]
[129.98254395 -4.28516150]
[121.35291290 6.63937855]
[108.79911804 12.80906677]
[108.57579041 27.80740356]
[108.35246277 42.80574036]
[108.12913513 57.80408096]
[122.06246185 63.12417603]
[133.33811951 72.88637543]
[140.59782410 85.91471863]
[142.96707153 100.63978577]
[140.16046143 115.28778839]
[132.51606750 128.09420776]
[120.95475006 137.51635742]
[106.86920166 142.41925049]
[106.64587402 157.41758728]
[106.42254639 172.41592407]
[106.19921875 187.41426086]
[109.20051575 196.04154968]
[105.85925293 202.63380432]
[105.41265106 217.62715149]
[104.96604156 232.62049866]
[104.51943970 247.61384583]
[104.07283020 262.60720825]
[103.62622833 277.60055542]
[103.17961884 292.59390259]
[104.07243347 307.56729126]
[106.29755402 322.40133667]
[108.52266693 337.23538208]
[111.77569580 341.31765747]
[113.01374054 345.79208374]
[112.42485809 349.82550049]
[110.50052643 352.78002930]
[112.06104279 367.69863892]
[113.62156677 382.61721802]
[115.18209076 397.53582764]
[125.44441986 386.59579468]
[140.43173218 385.97875977]
[151.55859375 396.03823853]
[152.45104980 411.01165771]
[142.59785461 422.32159424]
[127.64337158 423.48919678]
[116.15464020 413.84643555]
[116.37796783 428.84478760]
[116.60129547 443.84310913]
[119.27976227 448.32339478]
[119.90892029 452.92312622]
[118.78645325 456.84167480]
[116.48464203 459.51263428]
[116.03803253 474.50598145]
[115.59143066 489.49932861]
[115.14482117 504.49267578]
[127.92692566 513.13104248]
[133.98864746 527.31762695]
[131.39572144 542.52551270]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 207]
[7 206]
[8 205]
[9 204]
[10 200]
[11 199]
[12 198]
[13 191]
[14 190]
[15 189]
[16 188]
[17 184]
[18 183]
[19 182]
[32 181]
[33 180]
[34 179]
[35 178]
[36 177]
[37 176]
[38 175]
[39 173]
[40 172]
[41 171]
[42 170]
[50 162]
[51 161]
[52 160]
[53 159]
[58 153]
[59 152]
[60 151]
[61 150]
[62 138]
[63 137]
[64 136]
[65 135]
[69 132]
[70 131]
[71 124]
[72 123]
[73 122]
[74 121]
[75 120]
[76 119]
[79 117]
[80 116]
[81 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
