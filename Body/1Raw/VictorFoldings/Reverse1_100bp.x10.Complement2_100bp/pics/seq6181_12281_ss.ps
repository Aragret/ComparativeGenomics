%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[-55.93126297 292.35638428]
[-51.02265549 306.54522705]
[-47.62409973 321.16943359]
[-45.77283096 336.06878662]
[-45.48913574 351.08001709]
[-46.77611542 366.03869629]
[-49.61967850 380.78085327]
[-53.98866272 395.14505005]
[-59.83520508 408.97384644]
[-67.09523773 422.11575317]
[-75.68922424 434.42675781]
[-85.52300262 445.77200317]
[-96.48883057 456.02716064]
[-108.46655273 465.07989502]
[-121.32494354 472.83099365]
[-134.92311096 479.19552612]
[-149.11207581 484.10379028]
[-163.73637390 487.50201416]
[-178.63575745 489.35290527]
[-193.64700317 489.63623047]
[-208.60563660 488.34890747]
[-223.34774780 485.50497437]
[-237.71180725 481.13565063]
[-251.54046631 475.28875732]
[-264.68218994 468.02841187]
[-276.99301147 459.43411255]
[-288.33801270 449.60006714]
[-298.59289551 438.63400269]
[-307.64532471 426.65606689]
[-315.39611816 413.79748535]
[-321.76034546 400.19915771]
[-326.66827393 386.01007080]
[-330.06610107 371.38568115]
[-331.91665649 356.48626709]
[-332.19961548 341.47500610]
[-330.91189575 326.51641846]
[-328.06762695 311.77438354]
[-323.69793701 297.41040039]
[-317.85073853 283.58187866]
[-310.59005737 270.44033813]
[-301.99548340 258.12973022]
[-292.16116333 246.78497314]
[-281.19482422 236.53034973]
[-269.21667480 227.47821045]
[-256.35787964 219.72773743]
[-242.75941467 213.36384583]
[-228.57022095 208.45626831]
[-213.94575500 205.05877686]
[-199.04627991 203.20860291]
[-184.03501892 202.92599487]
[-169.07646179 204.21406555]
[-154.33448792 207.05870056]
[-139.97062683 211.42872620]
[-126.14225006 217.27627563]
[-113.00087738 224.53727722]
[-100.69048309 233.13215637]
[-89.34596252 242.96676636]
[-78.39005280 232.72137451]
[-67.43414307 222.47598267]
[-56.47823334 212.23059082]
[-45.52232361 201.98519897]
[-60.43849564 200.40159607]
[-69.97290039 188.82165527]
[-68.66380310 173.87887573]
[-57.26110458 164.13319397]
[-42.29679489 165.16734314]
[-32.34310913 176.38894653]
[-33.10156631 191.36886597]
[-21.27529716 182.14176941]
[-9.44902802 172.91467285]
[2.37724185 163.68757629]
[14.20351124 154.46047974]
[26.02978134 145.23338318]
[27.49362946 140.68737793]
[31.82879448 137.01268005]
[38.34832001 135.91389465]
[44.03559875 122.14785004]
[59.73961258 120.22575378]
[71.83536530 111.35485840]
[83.93111420 102.48396301]
[90.28676605 86.96036530]
[106.98011780 85.31473541]
[118.94245911 76.26473236]
[125.27976990 61.76821899]
[140.09780884 60.25984573]
[152.06013489 51.20984268]
[164.02247620 42.15984344]
[175.49717712 32.49903488]
[186.45309448 22.25364304]
[197.40899658 12.00825024]
[208.36489868 1.76285911]
[219.32081604 -8.48253250]
[220.01112366 -24.04406357]
[231.26791382 -34.27827454]
[246.09919739 -33.52427673]
[257.05511475 -43.76966858]
[247.75663757 -55.55121613]
[239.47662354 -68.06952667]
[232.27317810 -81.23678589]
[226.19680786 -94.96063995]
[221.29013062 -109.14482880]
[217.58758545 -123.68984985]
[215.11512756 -138.49368286]
[213.89010620 -153.45248413]
[213.92109680 -168.46133423]
[215.20791626 -183.41496277]
[217.74151611 -198.20845032]
[221.50411987 -212.73805237]
[226.46934509 -226.90184021]
[232.60235596 -240.60047913]
[239.86015320 -253.73786926]
[248.19180298 -266.22186279]
[257.53887939 -277.96490479]
[267.83581543 -288.88458252]
[279.01037598 -298.90435791]
[290.98416138 -307.95391846]
[303.67324829 -315.96978760]
[316.98855591 -322.89575195]
[330.83673096 -328.68319702]
[345.12063599 -333.29156494]
[359.74005127 -336.68850708]
[374.59243774 -338.85021973]
[389.57360840 -339.76150513]
[404.57852173 -339.41598511]
[419.50189209 -337.81610107]
[434.23904419 -334.97308350]
[448.68661499 -330.90682983]
[462.74325562 -325.64587402]
[476.31036377 -319.22717285]
[489.29278564 -311.69567871]
[501.59945679 -303.10424805]
[513.14404297 -293.51315308]
[523.84558105 -282.98965454]
[533.62896729 -271.60760498]
[542.42559814 -259.44677734]
[550.17382812 -246.59252930]
[556.81921387 -233.13499451]
[562.31524658 -219.16859436]
[566.62329102 -204.79127502]
[569.71313477 -190.10388184]
[571.56311035 -175.20944214]
[572.16027832 -160.21244812]
[571.50042725 -145.21807861]
[569.58819580 -130.33151245]
[566.43695068 -115.65717316]
[562.06884766 -101.29798889]
[556.51452637 -87.35468292]
[549.81286621 -73.92504883]
[542.01098633 -61.10330582]
[533.16357422 -48.97937775]
[523.33264160 -37.63830566]
[512.58721924 -27.15964890]
[501.00265503 -17.61690521]
[488.66018677 -9.07700729]
[475.64639282 -1.59986198]
[462.05255127 4.76208496]
[447.97406006 9.96420860]
[433.50961304 13.97001839]
[418.76071167 16.75141525]
[403.83078003 18.28889275]
[388.82455444 18.57166290]
[373.84729004 17.59774208]
[359.00408936 15.37396431]
[344.39898682 11.91592693]
[330.13449097 7.24788618]
[316.31063843 1.40258479]
[303.02438354 -5.57897520]
[290.36895752 -13.64782333]
[278.43307495 -22.74736023]
[267.30050659 -32.81375885]
[256.34460449 -22.56836891]
[256.10394287 -7.71987724]
[245.13903809 2.82647777]
[229.56620789 2.47337675]
[218.61029053 12.71876812]
[207.65438843 22.96416092]
[196.69848633 33.20955276]
[185.74256897 43.45494461]
[200.73683167 43.86962128]
[212.03964233 53.73099518]
[214.48348999 68.53057861]
[206.95108032 81.50219727]
[192.88615417 86.71540833]
[178.71897888 81.78679657]
[170.92660522 68.96965790]
[173.07247925 54.12218094]
[161.11013794 63.17218018]
[149.14779663 72.22218323]
[143.66610718 86.07138062]
[127.99245453 88.22707367]
[116.03012085 97.27706909]
[113.73895264 108.69599152]
[104.39892578 115.65338898]
[92.80200958 114.57971191]
[80.70626068 123.45060730]
[68.61051178 132.32150269]
[62.05806351 146.72206116]
[47.21921539 148.00964355]
[35.25687790 157.05964661]
[23.43061066 166.28674316]
[11.60434055 175.51383972]
[-0.22192971 184.74095154]
[-12.04819965 193.96804810]
[-23.87446976 203.19514465]
[-35.27693176 212.94110107]
[-46.23284149 223.18649292]
[-57.18875122 233.43188477]
[-68.14466095 243.67727661]
[-79.10057068 253.92266846]
[-70.04755402 265.90017700]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[57 209]
[58 208]
[59 207]
[60 206]
[61 205]
[68 204]
[69 203]
[70 202]
[71 201]
[72 200]
[73 199]
[76 198]
[78 196]
[79 195]
[80 194]
[82 191]
[83 190]
[85 188]
[86 187]
[87 186]
[88 178]
[89 177]
[90 176]
[91 175]
[92 174]
[95 171]
[96 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
