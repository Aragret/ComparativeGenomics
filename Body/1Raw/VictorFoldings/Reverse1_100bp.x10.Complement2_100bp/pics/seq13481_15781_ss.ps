%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUACUCUCAUUAUCUAUCCCGAGUCCGCAAACACAUACUAUACAAACGCCAAAGCUACUACACCAGAAACCUCAUCUUUGGACACUCCUUUCCAUAAxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[-34.99477005 458.52154541]
[-29.05113792 472.33865356]
[-25.67037201 486.99505615]
[-24.96115112 502.01962280]
[-26.94627190 516.92932129]
[-31.56192398 531.24487305]
[-38.65972900 544.50610352]
[-48.01152802 556.28680420]
[-59.31669235 566.20812988]
[-72.21181488 573.95123291]
[-86.28236389 579.26721191]
[-101.07603455 581.98510742]
[-116.11726379 582.01763916]
[-130.92254639 579.36370850]
[-145.01596069 574.10864258]
[-157.94444275 566.42138672]
[-169.29240417 556.54901123]
[-178.69506836 544.80889893]
[-185.85015869 531.57849121]
[-190.52766418 517.28302002]
[-192.57725525 502.38204956]
[-191.93301392 487.35458374]
[-188.61566162 472.68368530]
[-182.73184204 458.84097290]
[-174.47067261 446.27145386]
[-164.09774780 435.37915039]
[-151.94650269 426.51422119]
[-138.40754700 419.96163940]
[-123.91609955 415.93203735]
[-108.93799591 414.55496216]
[-93.95473480 415.87466431]
[-79.44795990 419.84872437]
[-72.96846008 406.32037354]
[-66.48896790 392.79202271]
[-60.00947189 379.26367188]
[-61.48991013 364.44284058]
[-48.55050659 355.33886719]
[-42.07101059 341.81051636]
[-35.59151459 328.28216553]
[-29.11201859 314.75381470]
[-43.58267212 318.70352173]
[-56.67567444 311.38415527]
[-60.89076233 296.98855591]
[-53.81333923 283.76321411]
[-39.49767685 279.28414917]
[-26.14443398 286.11724854]
[-21.40289497 300.34719849]
[-13.74229717 287.45086670]
[-6.08169985 274.55453491]
[1.57889771 261.65820312]
[9.23949528 248.76188660]
[8.94975853 243.99479675]
[11.65160179 238.99508667]
[17.32505226 235.60046387]
[25.36622620 222.93794250]
[33.40739822 210.27540588]
[41.44857025 197.61288452]
[48.81925964 184.54870605]
[55.49945450 171.11833191]
[55.66373444 163.72949219]
[62.38039398 157.53883362]
[69.25980377 144.20941162]
[76.13922119 130.87997437]
[82.91921234 117.49970245]
[89.59940338 104.06932831]
[96.17943573 90.58959198]
[102.65892792 77.06124878]
[109.13842773 63.53290176]
[108.12144470 47.74441528]
[120.59738922 39.60807419]
[127.07688141 26.07972717]
[126.05990601 10.29124069]
[138.53584290 2.15489888]
[145.01535034 -11.37344646]
[151.49484253 -24.90179253]
[150.47785950 -40.69028091]
[162.95381165 -48.82662201]
[169.43330383 -62.35496521]
[175.91279602 -75.88330841]
[182.39228821 -89.41165924]
[172.90888977 -102.95629120]
[171.55786133 -119.34135437]
[178.61358643 -134.08699036]
[192.06484985 -143.20944214]
[208.18717957 -144.29721069]
[214.46453857 -157.92053223]
[220.74189758 -171.54385376]
[227.01925659 -185.16716003]
[233.29661560 -198.79048157]
[238.54333496 -212.84295654]
[242.73034668 -227.24673462]
[246.91735840 -241.65051270]
[248.58889771 -256.55709839]
[247.69609070 -271.53048706]
[246.80326843 -286.50390625]
[245.91044617 -301.47729492]
[231.53387451 -306.41516113]
[220.14457703 -316.48254395]
[213.47937012 -330.14431763]
[212.55464172 -345.31707764]
[217.51138306 -359.68716431]
[227.59376526 -371.06320190]
[241.26426697 -377.71041870]
[256.43826294 -378.61520386]
[270.80178833 -373.63955688]
[282.16455078 -363.54220581]
[288.79379272 -349.86297607]
[289.67861938 -334.68780518]
[284.68408203 -320.33084106]
[274.57180786 -308.98135376]
[260.88385010 -302.37011719]
[261.77667236 -287.39672852]
[262.66949463 -272.42330933]
[263.56231689 -257.44989014]
[269.43362427 -271.25308228]
[278.51254272 -283.19348145]
[290.24392700 -292.54092407]
[303.91036987 -298.72381592]
[318.67617798 -301.36407471]
[333.63839722 -300.30026245]
[347.88211060 -295.59741211]
[360.53628540 -287.54309082]
[370.82711792 -276.62988281]
[378.12533569 -263.52505493]
[381.98464966 -249.03002930]
[382.16900635 -234.03115845]
[378.66720581 -219.44564819]
[371.69335938 -206.16537476]
[361.67388916 -195.00247192]
[349.22155762 -186.63952637]
[335.09774780 -181.58795166]
[320.16619873 -180.15664673]
[305.33996582 -182.43313599]
[291.52563477 -188.27819824]
[279.56802368 -197.33444214]
[270.19830322 -209.04803467]
[263.98947144 -222.70271301]
[261.32113647 -237.46350098]
[257.13412476 -223.05972290]
[252.94711304 -208.65594482]
[264.82546997 -217.81590271]
[279.67892456 -219.90739441]
[293.62487793 -214.38372803]
[303.01782227 -202.68875122]
[305.40252686 -187.87953186]
[300.15560913 -173.82713318]
[288.64859009 -164.20484924]
[273.88937378 -161.52789307]
[259.73602295 -166.49603271]
[249.88815308 -177.81060791]
[246.91993713 -192.51312256]
[240.64257812 -178.88980103]
[234.36521912 -165.26647949]
[228.08784485 -151.64317322]
[221.81048584 -138.01985168]
[230.41267395 -127.41232300]
[233.62068176 -114.06925964]
[230.75305176 -100.58127594]
[222.31364441 -89.59243011]
[209.90422058 -83.28195953]
[195.92063904 -82.93215942]
[189.44114685 -69.40381622]
[182.96163940 -55.87546921]
[176.48214722 -42.34712601]
[177.96258545 -27.52627563]
[165.02319336 -18.42229652]
[158.54368591 -4.89395094]
[152.06419373 8.63439465]
[153.54463196 23.45524406]
[140.60522461 32.55922318]
[134.12573242 46.08757019]
[135.60617065 60.90841675]
[122.66677094 70.01239777]
[116.18727112 83.54074097]
[109.70777893 97.06909180]
[109.34284973 105.12137604]
[103.02977753 110.74951935]
[96.34958649 124.17990112]
[95.32972717 133.25721741]
[89.46865082 137.75938416]
[82.58923340 151.08882141]
[75.70982361 164.41824341]
[68.92983246 177.79852295]
[62.24963760 191.22889709]
[76.44178009 186.37266541]
[90.47992706 191.65760803]
[97.94601440 204.66751099]
[95.42665863 219.45442200]
[84.07366180 229.25796509]
[69.07747650 229.59609985]
[57.29414368 220.31422424]
[54.11109543 205.65406799]
[46.06992340 218.31658936]
[38.02875137 230.97911072]
[29.98757744 243.64163208]
[22.13582230 256.42248535]
[14.47522449 269.31881714]
[6.81462717 282.21511841]
[-0.84597021 295.11145020]
[-8.50656796 308.00778198]
[-15.58367348 321.23330688]
[-22.06316948 334.76165771]
[-28.54266548 348.29000854]
[-35.02215958 361.81835938]
[-34.00518036 377.60684204]
[-46.48112488 385.74316406]
[-52.96062088 399.27151489]
[-59.44011688 412.79986572]
[-65.91960907 426.32821655]
[-53.73014069 435.14050293]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 209]
[33 208]
[34 207]
[35 206]
[37 204]
[38 203]
[39 202]
[40 201]
[47 200]
[48 199]
[49 198]
[50 197]
[51 196]
[54 195]
[55 194]
[56 193]
[57 192]
[58 184]
[59 183]
[61 182]
[62 181]
[63 180]
[64 178]
[65 177]
[66 175]
[67 174]
[68 173]
[70 171]
[71 170]
[73 168]
[74 167]
[75 166]
[77 164]
[78 163]
[79 162]
[80 161]
[85 155]
[86 154]
[87 153]
[88 152]
[89 151]
[90 140]
[91 139]
[92 138]
[93 114]
[94 113]
[95 112]
[96 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
