%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAGACUCCAUUAUUUAUCCUAAUAGGGCAUAGCUUCCGGAAAAACCUGUCCACCACACACCACCGGAACCAUACACGAAAGAGCACAAUGUAGCGxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[31.71921158 405.81060791]
[21.02523232 416.70104980]
[6.66219902 421.86495972]
[-8.51809502 420.27706909]
[-21.50159264 412.25262451]
[-29.71041298 399.38491821]
[-31.51468468 384.22882080]
[-26.55617142 369.79357910]
[-15.81938839 358.94534302]
[-1.43613160 353.83801270]
[0.12439138 338.91943359]
[1.68491435 324.00082397]
[3.24543738 309.08221436]
[4.80596018 294.16360474]
[-6.79107046 303.67721558]
[-21.79101562 303.63641357]
[-33.33610153 294.05981445]
[-36.14806747 279.32574463]
[-28.94132614 266.17041016]
[-15.01069927 260.60824585]
[-0.72508168 265.18222046]
[7.38474989 277.80294800]
[10.48886013 263.12765503]
[13.59296989 248.45234680]
[16.69708061 233.77703857]
[19.80118942 219.10174561]
[22.90530014 204.42643738]
[13.63658047 216.22012329]
[2.07754588 225.77986145]
[-11.24594498 232.67077637]
[-25.72776031 236.57934570]
[-40.70907593 237.32778931]
[-55.50834274 234.88203430]
[-69.45229340 229.35334778]
[-81.90657043 220.99327087]
[-92.30458069 210.18209839]
[-100.17329407 197.41168213]
[-105.15473175 183.26300049]
[-107.02227020 168.37971497]
[-105.69095612 153.43891907]
[-101.22134399 139.12030029]
[-93.81678009 126.07528687]
[-83.81412506 114.89732361]
[-71.66841888 106.09494019]
[-57.93222427 100.06858826]
[-43.23044205 97.09241486]
[-28.23190498 97.30183411]
[-13.61894512 100.68730164]
[-0.05635497 107.09481049]
[11.83885670 116.23285675]
[21.52553940 127.68572235]
[28.56301117 140.93238831]
[32.63111496 155.37020874]
[33.54478073 170.34234619]
[31.26132774 185.17189026]
[39.85988998 172.88104248]
[48.45845413 160.59020996]
[57.05701828 148.29936218]
[58.01290894 133.43547058]
[72.26354980 126.56306458]
[80.86211395 114.27223206]
[89.46067810 101.98139191]
[96.14086914 88.55101776]
[100.75488281 74.27828217]
[105.36888885 60.00555038]
[109.98289490 45.73281479]
[114.59690857 31.46008301]
[119.21091461 17.18734932]
[123.82492828 2.91461539]
[128.43893433 -11.35811806]
[133.05294800 -25.63085175]
[129.93572998 -41.14192963]
[141.21279907 -50.87212753]
[145.82681274 -65.14485931]
[150.44082642 -79.41759491]
[155.05482483 -93.69033051]
[159.66883850 -107.96305847]
[152.29908752 -117.29169464]
[150.36732483 -128.90071106]
[154.23931885 -139.88713074]
[162.84407043 -147.56007385]
[173.96688843 -150.09963989]
[179.00379944 -164.22866821]
[184.04071045 -178.35769653]
[189.07763672 -192.48672485]
[185.34066772 -210.51771545]
[199.14237976 -221.35650635]
[196.25645447 -236.91227722]
[207.67713928 -246.47349548]
[212.50314331 -260.67593384]
[217.32914734 -274.87841797]
[222.15513611 -289.08087158]
[208.65093994 -295.65655518]
[196.07739258 -303.87295532]
[184.63282776 -313.60049438]
[174.49771118 -324.68576050]
[165.83192444 -336.95388794]
[158.77210999 -350.21142578]
[153.42962646 -364.24926758]
[149.88871765 -378.84600830]
[148.20524597 -393.77148438]
[148.40574646 -408.79022217]
[150.48707581 -423.66543579]
[154.41639709 -438.16244507]
[160.13172913 -452.05267334]
[167.54295349 -465.11700439]
[176.53317261 -477.14941406]
[186.96060181 -487.96017456]
[198.66078186 -497.37869263]
[211.44918823 -505.25653076]
[225.12413025 -511.46936035]
[239.46992493 -515.91925049]
[254.26031494 -518.53594971]
[269.26205444 -519.27825928]
[284.23855591 -518.13446045]
[298.95355225 -515.12261963]
[313.17504883 -510.29013062]
[326.67868042 -503.71331787]
[339.25152588 -495.49584961]
[350.69528198 -485.76733398]
[360.82946777 -474.68124390]
[369.49423218 -462.41235352]
[376.55291748 -449.15423584]
[381.89422607 -435.11593628]
[385.43389893 -420.51889038]
[387.11611938 -405.59329224]
[386.91436768 -390.57455444]
[384.83178711 -375.69952393]
[380.90124512 -361.20285034]
[375.18472290 -347.31311035]
[367.77239990 -334.24938965]
[358.78118896 -322.21771240]
[348.35284424 -311.40786743]
[336.65185547 -301.99029541]
[323.86279297 -294.11355591]
[310.18734741 -287.90188599]
[295.84115601 -283.45321655]
[281.05053711 -280.83773804]
[266.04873657 -280.09667969]
[251.07235718 -281.24172974]
[236.35758972 -284.25485229]
[231.53160095 -270.05239868]
[226.70559692 -255.84994507]
[221.87960815 -241.64749146]
[225.11073303 -227.10757446]
[213.34484863 -216.53050232]
[218.40858459 -205.54483032]
[214.50419617 -193.67303467]
[203.20666504 -187.44981384]
[198.16973877 -173.32077026]
[193.13282776 -159.19174194]
[188.09591675 -145.06271362]
[196.92335510 -129.02551270]
[191.12571716 -111.32522583]
[173.94157410 -103.34905243]
[169.32756042 -89.07631683]
[164.71356201 -74.80358124]
[160.09954834 -60.53085327]
[155.48553467 -46.25811768]
[158.93278503 -31.76792336]
[147.32568359 -21.01684189]
[142.71166992 -6.74410868]
[138.09765625 7.52862453]
[133.48365784 21.80135727]
[128.86964417 36.07409286]
[124.25563049 50.34682465]
[119.64162445 64.61956024]
[115.02761078 78.89228821]
[110.41360474 93.16502380]
[121.02164459 82.55986023]
[134.16011047 75.32240295]
[148.79283142 72.02341461]
[163.76582336 72.92308044]
[177.89825439 77.95043945]
[190.07557678 86.70902252]
[199.33744812 98.50808716]
[204.95341492 112.41710663]
[206.48060608 127.33916473]
[203.79855347 142.09742737]
[197.11880493 155.52803040]
[186.96812439 166.57174683]
[174.14704895 174.35763550]
[159.66670227 178.27168274]
[144.66908264 178.00518799]
[130.33692932 173.57917786]
[117.80056000 165.34271240]
[108.04863739 153.94534302]
[101.85024261 140.28591919]
[99.69420624 125.44167328]
[101.75151062 110.57995605]
[93.15294647 122.87079620]
[84.55438232 135.16163635]
[82.98346710 150.90464783]
[69.34785461 156.89793396]
[60.74929428 169.18876648]
[52.15073013 181.47961426]
[43.55216599 193.77044678]
[37.58060455 207.53054810]
[34.47649384 222.20585632]
[31.37238312 236.88114929]
[28.26827240 251.55645752]
[25.16416168 266.23175049]
[22.06005287 280.90707397]
[19.72456551 295.72412109]
[18.16404152 310.64273071]
[16.60351944 325.56134033]
[15.04299641 340.47994995]
[13.48247337 355.39855957]
[26.49747086 363.37179565]
[34.75689697 376.20709229]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 208]
[11 207]
[12 206]
[13 205]
[14 204]
[22 203]
[23 202]
[24 201]
[25 200]
[26 199]
[27 198]
[55 197]
[56 196]
[57 195]
[58 194]
[60 192]
[61 191]
[62 190]
[63 169]
[64 168]
[65 167]
[66 166]
[67 165]
[68 164]
[69 163]
[70 162]
[71 161]
[73 159]
[74 158]
[75 157]
[76 156]
[77 155]
[82 152]
[83 151]
[84 150]
[85 149]
[87 146]
[89 144]
[90 143]
[91 142]
[92 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
