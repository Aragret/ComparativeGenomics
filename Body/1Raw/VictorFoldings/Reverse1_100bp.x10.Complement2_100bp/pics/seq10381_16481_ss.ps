%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUACUCCCCGUAAACCAUUUAUACUAAUAGUAUUAAAUUACUCAGCUUUAGUAAGCAAAACAAAUUUGAUAUAUGGUUAAGCCAAGUCAGAUUAGGAAAAxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[62.99535370 660.94543457]
[48.05504227 662.42126465]
[33.04207611 662.37805176]
[18.11051559 660.81616211]
[3.41357923 657.75164795]
[-10.89791584 653.21600342]
[-24.67711067 647.25573730]
[-37.78260803 639.93200684]
[-50.07992554 631.32000732]
[-61.44287109 621.50805664]
[-71.75484467 610.59686279]
[-80.91001892 598.69836426]
[-88.81446075 585.93469238]
[-95.38704681 572.43688965]
[-100.56034088 558.34332275]
[-104.28125000 543.79870605]
[-106.51158905 528.95227051]
[-107.22847748 513.95635986]
[-106.42455292 498.96487427]
[-104.10807037 484.13165283]
[-100.30280304 469.60885620]
[-95.04779053 455.54559326]
[-88.39696503 442.08612061]
[-80.41857147 429.36856079]
[-71.19447327 417.52343750]
[-60.81934357 406.67227173]
[-49.39963531 396.92642212]
[-37.05253601 388.38592529]
[-23.90474701 381.13839722]
[-10.09118557 375.25820923]
[4.24639606 370.80572510]
[18.96087265 367.82659912]
[33.90124893 366.35140991]
[48.91421509 366.39532471]
[50.47473526 351.47671509]
[52.03525925 336.55810547]
[53.59578323 321.63949585]
[55.15630722 306.72091675]
[56.71682739 291.80230713]
[50.34559250 278.33914185]
[59.47660828 265.41879272]
[61.03713226 250.50019836]
[59.11279678 247.54566956]
[58.52391052 243.51226807]
[59.76195908 239.03784180]
[63.01498413 234.95556641]
[65.24010468 220.12152100]
[67.46521759 205.28747559]
[54.79026794 213.30905151]
[40.12598419 210.15328979]
[31.87273979 197.62796021]
[34.75836563 182.90812683]
[47.12984467 174.42601013]
[61.90023041 177.04051208]
[70.60816193 189.25303650]
[74.14783478 174.67665100]
[77.68750763 160.10028076]
[73.17207336 145.90661621]
[83.94740295 134.32202148]
[79.43197632 120.12834930]
[90.20729828 108.54375458]
[93.31140900 93.86844635]
[95.97720337 79.10723114]
[98.64299774 64.34601593]
[101.30879211 49.58479691]
[103.97459412 34.82358170]
[106.64038849 20.06236267]
[109.30618286 5.30114555]
[111.97197723 -9.46007156]
[106.81040955 -24.41563225]
[116.68642426 -35.56523132]
[119.35222626 -50.32644653]
[122.01802063 -65.08766174]
[123.02227783 -80.05400848]
[122.35249329 -95.03904724]
[121.68270874 -110.02408600]
[121.01292419 -125.00912476]
[120.23159790 -139.98876953]
[119.33878326 -154.96217346]
[118.33452606 -169.92851257]
[117.21887970 -184.88696289]
[116.10322571 -199.84541321]
[114.98757935 -214.80387878]
[101.52529907 -225.97465515]
[100.33078766 -243.08862305]
[111.65599060 -255.52159119]
[110.31775665 -270.46176147]
[108.97952271 -285.40194702]
[107.64128876 -300.34213257]
[92.71279907 -302.36398315]
[78.60867310 -307.65750122]
[66.03637695 -315.95721436]
[55.62652969 -326.84677124]
[47.90128708 -339.77999878]
[43.24813843 -354.10815430]
[41.90048981 -369.11254883]
[43.92593384 -384.04055786]
[49.22287750 -398.14340210]
[57.52563095 -410.71368408]
[68.41772461 -421.12088013]
[81.35282135 -428.84298706]
[95.68210602 -433.49267578]
[110.68681335 -434.83666992]
[125.61432648 -432.80761719]
[139.71588135 -427.50726318]
[152.28416443 -419.20144653]
[162.68872070 -408.30685425]
[170.40769958 -395.36987305]
[175.05390930 -381.03945923]
[176.39428711 -366.03442383]
[174.36160278 -351.10742188]
[169.05783081 -337.00714111]
[160.74897766 -324.44088745]
[149.85185242 -314.03894043]
[136.91300964 -306.32312012]
[122.58147430 -301.68038940]
[123.91970825 -286.74020386]
[125.25794220 -271.80001831]
[126.59617615 -256.85983276]
[137.54266357 -250.06246948]
[142.65168762 -238.02171326]
[139.85174561 -225.04592896]
[129.94602966 -215.91952515]
[131.06167603 -200.96107483]
[132.17732239 -186.00260925]
[133.29298401 -171.04415894]
[136.92526245 -164.60768127]
[134.31219482 -155.85498047]
[135.20500183 -140.88157654]
[138.74105835 -134.39172363]
[135.99795532 -125.67890930]
[136.66773987 -110.69387054]
[137.33752441 -95.70883179]
[138.00732422 -80.72379303]
[144.84086609 -94.07679749]
[155.98797607 -104.11382294]
[169.98207092 -109.51432037]
[184.98196411 -109.56777191]
[199.01419067 -104.26714325]
[210.23255920 -94.30981445]
[217.16108704 -81.00585175]
[218.88821411 -66.10561371]
[215.18672180 -51.56948853]
[206.54357910 -39.30995178]
[194.09596252 -30.93995667]
[179.48156738 -27.56071854]
[164.62315369 -29.61683655]
[151.47561646 -36.83779144]
[141.76872253 -48.27354050]
[136.77923584 -62.42186737]
[134.11343384 -47.66065216]
[131.44764709 -32.89943314]
[136.79989624 -18.99969482]
[126.73319244 -6.79427624]
[124.06739807 7.96694136]
[121.40160370 22.72815895]
[118.73580933 37.48937607]
[116.07001495 52.25059128]
[113.40422058 67.01181030]
[110.73841858 81.77302551]
[108.07262421 96.53424835]
[109.59199524 99.17640686]
[110.18357086 102.42980194]
[109.61911774 105.95185089]
[107.80013275 109.32046509]
[104.78367615 112.08342743]
[109.04592133 127.31968689]
[98.52378082 137.86169434]
[102.78602600 153.09796143]
[92.26387787 163.63995361]
[88.72420502 178.21632385]
[85.18453217 192.79270935]
[82.29926300 207.51260376]
[80.07414246 222.34663391]
[77.84902954 237.18067932]
[75.95573425 252.06071472]
[74.39521027 266.97933960]
[80.65483093 281.50955200]
[71.63543701 293.36282349]
[70.07491302 308.28143311]
[68.51438904 323.20004272]
[66.95386505 338.11862183]
[65.39334106 353.03723145]
[63.83281708 367.95584106]
[78.52989197 371.01968384]
[92.84158325 375.55471802]
[106.62104034 381.51437378]
[119.72686005 388.83752441]
[132.02455139 397.44900513]
[143.38793945 407.26046753]
[153.70039368 418.17120361]
[162.85609436 430.06927490]
[170.76109314 442.83258057]
[177.33427429 456.33013916]
[182.50817871 470.42346191]
[186.22973633 484.96792603]
[188.46072388 499.81423950]
[189.17826843 514.81011963]
[188.37501526 529.80163574]
[186.05918884 544.63500977]
[182.25454712 559.15789795]
[177.00015259 573.22143555]
[170.34992981 586.68121338]
[162.37208557 599.39910889]
[153.14851379 611.24462891]
[142.77386475 622.09625244]
[131.35458374 631.84259033]
[119.00785828 640.38366699]
[105.86038971 647.63177490]
[92.04708862 653.51251221]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 184]
[35 183]
[36 182]
[37 181]
[38 180]
[39 179]
[41 177]
[42 176]
[46 175]
[47 174]
[48 173]
[55 172]
[56 171]
[57 170]
[59 168]
[61 166]
[62 161]
[63 160]
[64 159]
[65 158]
[66 157]
[67 156]
[68 155]
[69 154]
[71 152]
[72 151]
[73 150]
[74 134]
[75 133]
[76 132]
[77 131]
[78 129]
[79 128]
[80 126]
[81 125]
[82 124]
[83 123]
[86 119]
[87 118]
[88 117]
[89 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
