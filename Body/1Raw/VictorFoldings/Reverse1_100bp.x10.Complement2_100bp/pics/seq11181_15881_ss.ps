%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCACUCGGAUCCCACAACACUCACAUUUAAUCACGCUACUCAUCCCCUUCCCUCGGAUGAUCCCACAUCUUAUCCUUCAUACACGGACGCAAGUCCGCAxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[105.77562714 822.90069580]
[90.93018341 820.73126221]
[76.21132660 817.82446289]
[61.65565491 814.18768311]
[47.29935837 809.82983398]
[33.17813110 804.76177979]
[19.32707787 798.99621582]
[5.78063393 792.54730225]
[-7.42752028 785.43127441]
[-20.26454735 777.66564941]
[-32.69853210 769.26977539]
[-44.69856262 760.26464844]
[-56.23480225 750.67248535]
[-67.27857208 740.51721191]
[-77.80242157 729.82409668]
[-87.78017426 718.61975098]
[-97.18703461 706.93194580]
[-105.99960327 694.78973389]
[-114.19598389 682.22338867]
[-121.75579834 669.26409912]
[-128.66023254 655.94409180]
[-134.89215088 642.29644775]
[-140.43603516 628.35516357]
[-145.27812195 614.15490723]
[-149.40634155 599.73089600]
[-152.81047058 585.11907959]
[-155.48202515 570.35571289]
[-157.41435242 555.47753906]
[-158.60266113 540.52154541]
[-159.04400635 525.52490234]
[-158.73728943 510.52490234]
[-157.68324280 495.55883789]
[-155.88452148 480.66390991]
[-153.34558105 465.87716675]
[-150.07273865 451.23538208]
[-146.07412720 436.77490234]
[-141.35969543 422.53173828]
[-135.94114685 408.54125977]
[-129.83198547 394.83825684]
[-123.04736328 381.45681763]
[-115.60417175 368.43020630]
[-107.52090454 355.79077148]
[-98.81765747 343.57000732]
[-89.51608276 331.79821777]
[-79.63928986 320.50473022]
[-69.21183777 309.71762085]
[-58.25965500 299.46365356]
[-46.80996704 289.76837158]
[-34.89124298 280.65585327]
[-22.53311157 272.14874268]
[-9.76629925 264.26824951]
[3.37745595 257.03390503]
[16.86547470 250.46371460]
[30.66422462 244.57402039]
[44.73939896 239.37945557]
[59.05600357 234.89294434]
[73.57844543 231.12564087]
[88.27062225 228.08689880]
[103.09600067 225.78428650]
[101.53547668 210.86567688]
[99.97495270 195.94706726]
[96.89483643 192.29714966]
[96.07488251 186.67356873]
[98.59687042 180.56201172]
[97.48122406 165.60356140]
[96.36557770 150.64509583]
[95.24992371 135.68664551]
[94.13427734 120.72819519]
[93.01863098 105.76974487]
[90.48256683 102.86444092]
[89.23942566 98.85539246]
[89.75344849 94.34509277]
[92.20240784 90.12106323]
[90.19839478 75.25553131]
[86.65872192 60.67916107]
[83.11904907 46.10278320]
[79.57937622 31.52640915]
[75.62406921 45.99553299]
[67.01513672 58.27910995]
[54.76395798 66.93408203]
[40.30978394 70.94367218]
[25.35067558 69.83683777]
[11.64401627 63.74360657]
[0.80004984 53.37980652]
[-5.90728521 39.96296310]
[-7.69001818 25.06927872]
[-4.33871460 10.44844437]
[3.75291729 -2.18189549]
[15.63428020 -11.33794308]
[29.90956497 -15.94405460]
[44.90172195 -15.45910835]
[58.84949493 -9.94007587]
[70.11430359 -0.03532739]
[77.37329102 13.09301853]
[77.37329102 -1.90698099]
[77.37329102 -16.90698051]
[77.37329102 -31.90698051]
[77.37329102 -46.90698242]
[63.31610107 -52.69178391]
[52.54623032 -63.41923523]
[46.70599747 -77.45348358]
[46.68600082 -92.65441132]
[52.48928833 -106.70397186]
[63.23089981 -117.45972443]
[77.27281952 -123.28148651]
[92.47375488 -123.28148651]
[106.51567841 -117.45972443]
[117.25728607 -106.70397186]
[123.06057739 -92.65441132]
[123.04058075 -77.45348358]
[117.20034790 -63.41923523]
[106.43047333 -52.69178391]
[92.37329102 -46.90698242]
[92.37329102 -31.90698051]
[92.37329102 -16.90698051]
[92.37329102 -1.90698099]
[92.37329102 13.09301853]
[94.15575409 27.98673630]
[97.69542694 42.56311035]
[101.23509979 57.13948822]
[104.77477264 71.71586609]
[109.12990570 57.36201859]
[118.58698273 45.71883392]
[131.74308777 38.51350021]
[146.64660645 36.81489182]
[161.08666992 40.87498093]
[172.92120361 50.09148026]
[180.39460754 63.09717941]
[182.39825439 77.96275330]
[178.63491821 92.48299408]
[169.66285706 104.50389862]
[156.81303406 112.24224091]
[141.99163818 114.55008698]
[127.39733124 111.08508301]
[115.19509888 102.36122894]
[107.19576263 89.67445374]
[107.97708130 104.65409088]
[109.09272766 119.61254883]
[110.20838165 134.57099915]
[111.32402802 149.52944946]
[112.43967438 164.48791504]
[113.55532837 179.44636536]
[114.89356232 194.38655090]
[116.45408630 209.30514526]
[118.01460266 224.22375488]
[132.99557495 223.40855408]
[147.99855042 223.34111023]
[162.98625183 224.02159119]
[177.92138672 225.44830322]
[192.76684570 227.61769104]
[207.48571777 230.52436829]
[222.04141235 234.16111755]
[236.39773560 238.51887512]
[250.51898193 243.58682251]
[264.37005615 249.35237122]
[277.91653442 255.80116272]
[291.12472534 262.91717529]
[303.96179199 270.68270874]
[316.39584351 279.07849121]
[328.39590454 288.08358765]
[339.93218994 297.67568970]
[350.97601318 307.83087158]
[361.49993896 318.52392578]
[371.47772217 329.72827148]
[380.88464355 341.41604614]
[389.69729614 353.55816650]
[397.89373779 366.12448120]
[405.45361328 379.08374023]
[412.35812378 392.40371704]
[418.59011841 406.05130005]
[424.13406372 419.99252319]
[428.97622681 434.19281006]
[433.10452271 448.61679077]
[436.50872803 463.22860718]
[439.18035889 477.99194336]
[441.11276245 492.87011719]
[442.30114746 507.82611084]
[442.74258423 522.82275391]
[442.43591309 537.82275391]
[441.38195801 552.78881836]
[439.58331299 567.68371582]
[437.04446411 582.47045898]
[433.77169800 597.11230469]
[429.77316284 611.57281494]
[425.05880737 625.81597900]
[419.64031982 639.80651855]
[413.53121948 653.50952148]
[406.74667358 666.89099121]
[399.30355835 679.91766357]
[391.22036743 692.55712891]
[382.51718140 704.77795410]
[373.21566772 716.54974365]
[363.33892822 727.84332275]
[352.91152954 738.63049316]
[341.95941162 748.88452148]
[330.50976562 758.57983398]
[318.59109497 767.69244385]
[306.23300171 776.19958496]
[293.46621704 784.08013916]
[280.32250977 791.31457520]
[266.83453369 797.88482666]
[253.03581238 803.77459717]
[238.96066284 808.96923828]
[224.64407349 813.45581055]
[210.12165833 817.22320557]
[195.42948914 820.26202393]
[180.60412598 822.56469727]
[165.68240356 824.12554932]
[150.70143127 824.94067383]
[135.69845581 825.00805664]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[59 145]
[60 144]
[61 143]
[64 142]
[65 141]
[66 140]
[67 139]
[68 138]
[69 137]
[73 136]
[74 121]
[75 120]
[76 119]
[77 118]
[94 117]
[95 116]
[96 115]
[97 114]
[98 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
