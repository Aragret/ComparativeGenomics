%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAUCGCCCCACUACGGACAACCCCCGGUCACGGGAGGAUUAACCCCCCAUCCCCGAUCCGACCUCACCAUUUUCCGAGUCUUUUUAGGACGCUUCUUUxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[115.52483368 583.65075684]
[114.88712311 568.30511475]
[122.02188873 554.70397949]
[135.00990295 546.50598145]
[134.34011841 531.52093506]
[133.67033386 516.53588867]
[133.00054932 501.55087280]
[132.33076477 486.56582642]
[131.66098022 471.58081055]
[130.99119568 456.59576416]
[130.32141113 441.61071777]
[129.65162659 426.62567139]
[128.98184204 411.64065552]
[128.31205750 396.65560913]
[120.01417542 384.28652954]
[127.12754822 370.15463257]
[126.45775604 355.16958618]
[124.11643982 352.53320312]
[122.93575287 348.63177490]
[123.49636078 344.02319336]
[126.10782623 339.50354004]
[126.10782623 324.50354004]
[126.10782623 309.50354004]
[126.10782623 294.50354004]
[124.54730225 279.58493042]
[121.44319153 264.90963745]
[118.33908081 250.23432922]
[115.23497009 235.55902100]
[112.13085938 220.88372803]
[109.02674866 206.20841980]
[96.61080170 193.80635071]
[102.46393585 176.34718323]
[99.14167023 161.71972656]
[92.66047668 175.24725342]
[79.95082855 183.21374512]
[64.95095825 183.15069580]
[52.30874252 175.07763672]
[45.94150162 161.49609375]
[47.82219696 146.61445618]
[57.36807632 135.04397583]
[71.62124634 130.36987305]
[86.16519928 134.04046631]
[96.49346161 144.91864014]
[95.15522766 129.97845459]
[93.81699371 115.03826904]
[85.34600830 107.04553986]
[84.39334106 95.43805695]
[91.44776917 86.17110443]
[90.33211517 71.21265411]
[89.21646881 56.25419617]
[88.10082245 41.29574585]
[74.83932495 38.19306564]
[63.00308609 31.48936081]
[53.54565811 21.73557854]
[47.22589111 9.72794533]
[44.54703522 -3.55702710]
[45.71667862 -17.04195595]
[50.63069916 -29.63596344]
[58.88244629 -40.32291794]
[69.79639435 -48.24342346]
[82.48342133 -52.76392365]
[81.81363678 -67.74896240]
[81.14385223 -82.73400116]
[80.47406769 -97.71903992]
[79.80428314 -112.70407867]
[79.13449860 -127.68911743]
[78.46471405 -142.67416382]
[77.79492950 -157.65919495]
[77.12513733 -172.64424133]
[73.61566162 -181.07759094]
[76.55861664 -187.85702515]
[76.11201477 -202.85037231]
[66.57752228 -191.27049255]
[52.08684921 -187.39488220]
[38.04465485 -192.66905212]
[29.68832970 -205.12585449]
[30.13457870 -220.11920166]
[39.21696091 -232.05697632]
[53.54797363 -236.48666382]
[67.78250122 -231.75610352]
[76.61178589 -219.62857056]
[77.95001984 -234.56875610]
[79.28825378 -249.50892639]
[72.81299591 -263.94436646]
[81.65491486 -275.93060303]
[82.99314880 -290.87078857]
[84.33138275 -305.81097412]
[85.66961670 -320.75115967]
[87.00785065 -335.69134521]
[80.53259277 -350.12677002]
[89.37451172 -362.11300659]
[90.71274567 -377.05319214]
[92.05097961 -391.99337769]
[85.57572174 -406.42880249]
[94.41764069 -418.41503906]
[95.75587463 -433.35522461]
[97.09410858 -448.29541016]
[82.92260742 -453.47525024]
[70.57518005 -462.14724731]
[60.89370728 -473.72012329]
[54.53828430 -487.40481567]
[51.94223404 -502.26828003]
[53.28255844 -517.29711914]
[58.46787643 -531.46661377]
[67.14463806 -543.81072998]
[78.72125244 -553.48773193]
[92.40840149 -559.83782959]
[107.27288055 -562.42816162]
[122.30120087 -561.08203125]
[136.46870422 -555.89123535]
[148.80943298 -547.20971680]
[158.48196411 -535.62939453]
[164.82681274 -521.93975830]
[167.41139221 -507.07427979]
[166.05946350 -492.04650879]
[160.86320496 -477.88101196]
[152.17691040 -465.54364014]
[140.59281921 -455.87557983]
[126.90077209 -449.53601074]
[112.03429413 -446.95715332]
[110.69606018 -432.01696777]
[109.35782623 -417.07678223]
[115.92880249 -403.70999146]
[106.99116516 -390.65512085]
[105.65293121 -375.71493530]
[104.31469727 -360.77474976]
[110.88567352 -347.40795898]
[101.94803619 -334.35308838]
[100.60980225 -319.41290283]
[99.27156830 -304.47271729]
[97.93333435 -289.53253174]
[96.59510040 -274.59237671]
[103.16607666 -261.22555542]
[94.22843933 -248.17070007]
[92.89020538 -233.23051453]
[91.55197144 -218.29032898]
[91.10536194 -203.29698181]
[91.55197144 -188.30363464]
[92.11017609 -173.31402588]
[92.77996826 -158.32897949]
[93.44975281 -143.34394836]
[94.11953735 -128.35890198]
[94.78932190 -113.37386322]
[95.45910645 -98.38882446]
[96.12889099 -83.40378571]
[96.79867554 -68.41874695]
[97.46846008 -53.43370819]
[113.26416016 -48.80874634]
[126.54257202 -39.04023743]
[135.68843079 -25.29467392]
[139.58169556 -9.22363758]
[137.73474121 7.23462105]
[130.35333252 22.08895493]
[118.31383514 33.53620911]
[103.05927277 40.18009567]
[104.17491913 55.13854980]
[105.29057312 70.09700012]
[106.40621948 85.05545807]
[116.20524597 98.66998291]
[108.75717926 113.70003510]
[110.09541321 128.64021301]
[111.43364716 143.58039856]
[113.76913452 158.39747620]
[117.09139252 173.02493286]
[127.56936646 180.54655457]
[130.03535461 192.79820251]
[123.70204926 203.10430908]
[126.80615997 217.77961731]
[129.91027832 232.45491028]
[133.01438904 247.13021851]
[136.11848450 261.80551147]
[139.22259521 276.48083496]
[144.00317383 262.26300049]
[153.80271912 250.90655518]
[167.16752625 244.09613037]
[182.11500549 242.84199524]
[196.42778015 247.33023071]
[207.98266602 256.89498901]
[215.06552124 270.11743164]
[216.62568665 285.03607178]
[212.43168640 299.43783569]
[203.10569763 311.18627930]
[190.03117371 318.53860474]
[175.14762878 320.40414429]
[160.66296387 316.50613403]
[148.72589111 307.42285156]
[141.10781860 294.50354004]
[141.10781860 309.50354004]
[141.10781860 324.50354004]
[141.10781860 339.50354004]
[141.44279480 354.49978638]
[142.11257935 369.48483276]
[150.45837402 382.92575073]
[143.29710388 395.98580933]
[143.96688843 410.97085571]
[144.63667297 425.95590210]
[145.30645752 440.94094849]
[145.97624207 455.92596436]
[146.64602661 470.91101074]
[147.31581116 485.89605713]
[147.98559570 500.88110352]
[148.65538025 515.86614990]
[149.32516479 530.85119629]
[149.99494934 545.83618164]
[163.66256714 552.84277344]
[171.98231506 565.75311279]
[172.71621704 581.09448242]
[165.66685486 594.74005127]
[152.73048401 603.01928711]
[137.38690186 603.70507812]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 204]
[5 203]
[6 202]
[7 201]
[8 200]
[9 199]
[10 198]
[11 197]
[12 196]
[13 195]
[14 194]
[16 192]
[17 191]
[21 190]
[22 189]
[23 188]
[24 187]
[25 172]
[26 171]
[27 170]
[28 169]
[29 168]
[30 167]
[32 164]
[33 163]
[43 162]
[44 161]
[45 160]
[48 158]
[49 157]
[50 156]
[51 155]
[61 147]
[62 146]
[63 145]
[64 144]
[65 143]
[66 142]
[67 141]
[68 140]
[69 139]
[71 138]
[72 137]
[81 136]
[82 135]
[83 134]
[85 132]
[86 131]
[87 130]
[88 129]
[89 128]
[91 126]
[92 125]
[93 124]
[95 122]
[96 121]
[97 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
