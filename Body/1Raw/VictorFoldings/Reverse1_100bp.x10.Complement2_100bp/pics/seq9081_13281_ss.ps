%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[116.50449371 641.97924805]
[104.84587860 632.51171875]
[94.41349792 621.70788574]
[85.35946655 609.72534180]
[77.81581879 596.73876953]
[71.89257812 582.93762207]
[67.67610931 568.52307129]
[65.22791290 553.70538330]
[64.58367920 538.70062256]
[65.75280762 523.72766113]
[68.71824646 509.00476074]
[73.43675995 494.74667358]
[79.83952332 481.16131592]
[87.83318329 468.44680786]
[97.30115509 456.78854370]
[108.10536957 446.35656738]
[120.08827209 437.30297852]
[133.07511902 429.75982666]
[146.87652588 423.83709717]
[161.29121399 419.62118530]
[158.84548950 404.82189941]
[156.39974976 390.02264404]
[153.84391785 375.24197388]
[151.17813110 360.48074341]
[148.51232910 345.71954346]
[145.84654236 330.95831299]
[143.18074036 316.19711304]
[133.30471802 305.04751587]
[138.46629333 290.09194946]
[135.80049133 275.33071899]
[123.45599365 267.07550049]
[120.54222107 252.14349365]
[129.28477478 239.25141907]
[126.61897278 224.49020386]
[123.95317841 209.72898865]
[121.28738403 194.96777344]
[118.62158966 180.20655823]
[115.95579529 165.44534302]
[111.87612152 151.01078796]
[106.42076874 137.03799438]
[100.96540833 123.06518555]
[95.51005554 109.09239197]
[89.87796021 103.32592773]
[90.07919312 94.87072754]
[84.83247375 80.81826019]
[72.75688934 70.59618378]
[75.55367279 55.96651459]
[63.47808838 45.74444199]
[66.27487183 31.11477089]
[61.02815628 17.06229973]
[55.78143692 3.00982928]
[50.53471756 -11.04264164]
[45.28800201 -25.09511375]
[43.55896378 -10.19509888]
[37.75522614 3.63662672]
[28.33449364 15.30923557]
[16.03972435 23.90217590]
[1.84053433 28.73777580]
[-13.14326763 29.43467522]
[-27.72999763 25.93791771]
[-40.76928329 18.52326965]
[-51.23279572 7.77548313]
[-58.29533386 -5.45782852]
[-61.39992142 -20.13302994]
[-60.30171585 -35.09277344]
[-55.08732605 -49.15727234]
[-46.16797638 -61.21734238]
[-34.24708939 -70.32186890]
[-20.26479721 -75.75284576]
[-5.32379723 -77.08194733]
[9.39759922 -74.20436096]
[22.73840141 -67.34703064]
[33.64649963 -57.05075073]
[41.26295471 -44.12431717]
[40.37014008 -59.09772491]
[39.47732544 -74.07112885]
[38.58450699 -89.04453278]
[37.69169235 -104.01794434]
[36.57604218 -118.97639465]
[35.23780823 -133.91658020]
[26.30017281 -146.97143555]
[32.87114716 -160.33824158]
[31.53291321 -175.27842712]
[30.19467926 -190.21861267]
[28.85644531 -205.15879822]
[13.87173367 -206.43533325]
[-0.66360873 -210.29473877]
[-14.30786896 -216.61970520]
[-26.64641380 -225.21804810]
[-37.30429077 -235.82846069]
[-45.95761490 -248.12849426]
[-52.34342575 -261.74438477]
[-56.26766205 -276.26235962]
[-57.61107254 -291.24124146]
[-56.33283234 -306.22579956]
[-52.47178650 -320.76071167]
[-46.14526749 -334.40423584]
[-37.54553223 -346.74182129]
[-26.93391228 -357.39849854]
[-14.63288689 -366.05041504]
[-1.01626921 -372.43469238]
[13.50214672 -376.35726929]
[28.48116302 -377.69897461]
[43.46558380 -376.41903687]
[58.00004959 -372.55633545]
[71.64287567 -366.22827148]
[83.97946930 -357.62713623]
[94.63494110 -347.01431274]
[103.28547668 -334.71231079]
[109.66819763 -321.09497070]
[113.58914185 -306.57611084]
[114.92915344 -291.59695435]
[113.64751434 -276.61267090]
[109.78317261 -262.07864380]
[103.45355988 -248.43652344]
[94.85102081 -236.10090637]
[84.23698425 -225.44664001]
[71.93399811 -216.79750061]
[58.31593323 -210.41632080]
[43.79663086 -206.49702454]
[45.13486481 -191.55683899]
[46.47309875 -176.61665344]
[47.81133270 -161.67646790]
[56.65325165 -149.69024658]
[50.17799377 -135.25480652]
[51.51622772 -120.31462860]
[54.54166031 -116.61925507]
[55.27780151 -110.98408508]
[52.66509628 -104.91075897]
[53.55791473 -89.93734741]
[54.45072937 -74.96394348]
[55.34354401 -59.99053955]
[56.23636246 -45.01713562]
[59.34047318 -30.34183121]
[64.58718872 -16.28936005]
[69.83390808 -2.23688889]
[75.08062744 11.81558228]
[80.32734680 25.86805344]
[92.02764893 35.08499908]
[89.60614777 50.71979523]
[101.30644989 59.93674088]
[98.88494873 75.57154083]
[104.13166809 89.62400818]
[109.48284912 103.63703156]
[114.93820953 117.60983276]
[120.39356232 131.58262634]
[125.84892273 145.55543518]
[128.51539612 130.79432678]
[136.88772583 118.34828949]
[149.55505371 110.31468201]
[164.38269043 108.04730988]
[178.87194824 111.92826080]
[190.58110046 121.30353546]
[197.53695679 134.59323120]
[198.56735229 149.55780029]
[193.49862671 163.67544556]
[183.18495178 174.56710815]
[169.36437988 180.39733887]
[154.36589050 180.18365479]
[140.71702576 173.96205139]
[130.71701050 162.77954102]
[133.38279724 177.54075623]
[136.04859924 192.30197144]
[138.71440125 207.06318665]
[141.38018799 221.82441711]
[144.04598999 236.58563232]
[156.74568176 245.60534668]
[159.23890686 260.61331177]
[150.56170654 272.66494751]
[153.22750854 287.42614746]
[163.29420471 299.63156128]
[157.94195557 313.53131104]
[160.60775757 328.29254150]
[163.27354431 343.05374146]
[165.93934631 357.81497192]
[168.60513306 372.57617188]
[173.20985413 380.46505737]
[171.19902039 387.57690430]
[173.64476013 402.37615967]
[176.09048462 417.17544556]
[191.09515381 416.52954102]
[206.06826782 417.69699097]
[220.79150391 420.66076660]
[235.05010986 425.37768555]
[248.63618469 431.77893066]
[261.35159302 439.77114868]
[273.01092529 449.23782349]
[283.44412231 460.04086304]
[292.49902344 472.02273560]
[300.04364014 485.00875854]
[305.96792603 498.80947876]
[310.18545532 513.22369385]
[312.63476562 528.04119873]
[313.28012085 543.04589844]
[312.11212158 558.01898193]
[309.14779663 572.74206543]
[304.43032837 587.00054932]
[298.02859497 600.58636475]
[290.03588867 613.30145264]
[280.56878662 624.96044922]
[269.76535034 635.39324951]
[257.78311157 644.44769287]
[244.79684448 651.99182129]
[230.99588013 657.91558838]
[216.58151245 662.13256836]
[201.76391602 664.58135986]
[186.75920105 665.22613525]
[171.78616333 664.05755615]
[157.06315613 661.09271240]
[142.80490112 656.37469482]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 180]
[21 179]
[22 178]
[23 176]
[24 175]
[25 174]
[26 173]
[27 172]
[29 170]
[30 169]
[33 166]
[34 165]
[35 164]
[36 163]
[37 162]
[38 161]
[39 147]
[40 146]
[41 145]
[42 144]
[44 143]
[45 142]
[47 140]
[49 138]
[50 137]
[51 136]
[52 135]
[53 134]
[74 133]
[75 132]
[76 131]
[77 130]
[78 129]
[79 126]
[80 125]
[82 123]
[83 122]
[84 121]
[85 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
