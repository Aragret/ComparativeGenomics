%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxGUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUA\
) } def
/len { sequence length } bind def

/coor [
[122.86733246 879.06964111]
[108.02255249 876.88720703]
[93.33143616 873.83740234]
[78.84462738 869.93060303]
[64.61206818 865.18035889]
[50.68282700 859.60302734]
[37.10491180 853.21783447]
[23.92513657 846.04681396]
[11.18892765 838.11462402]
[-1.05980635 829.44866943]
[-12.77884197 820.07873535]
[-23.92778015 810.03723145]
[-34.46818924 799.35876465]
[-44.36373520 788.08007812]
[-53.58030319 776.24011230]
[-62.08612061 763.87963867]
[-69.85186768 751.04125977]
[-76.85077667 737.76922607]
[-83.05872345 724.10937500]
[-88.45429993 710.10876465]
[-93.01890564 695.81555176]
[-96.73680878 681.27911377]
[-99.59519958 666.54956055]
[-101.58421326 651.67761230]
[-102.69699860 636.71459961]
[-102.92971802 621.71209717]
[-102.28157043 606.72174072]
[-100.75479126 591.79528809]
[-98.35464478 576.98413086]
[-95.08940125 562.33935547]
[-90.97031403 547.91149902]
[-86.01159668 533.75024414]
[-80.23032379 519.90435791]
[-73.64643860 506.42169189]
[-66.28262329 493.34863281]
[-58.16428375 480.73028564]
[-49.31938553 468.61010742]
[-39.77843094 457.02993774]
[-29.57430649 446.02966309]
[-18.74218559 435.64718628]
[-7.31941271 425.91833496]
[4.65463781 416.87661743]
[17.13868713 408.55322266]
[30.08970070 400.97680664]
[43.46303558 394.17355347]
[57.21258545 388.16687012]
[71.29095459 382.97744751]
[85.64962006 378.62322998]
[100.23906708 375.11917114]
[115.00901794 372.47738647]
[129.90855408 370.70697021]
[129.01573181 355.73355103]
[128.12292480 340.76016235]
[127.23010254 325.78674316]
[126.33728790 310.81335449]
[125.44447327 295.83993530]
[123.77293396 280.93334961]
[121.32720947 266.13409424]
[118.88147736 251.33482361]
[116.43575287 236.53555298]
[100.94874573 233.17718506]
[87.90457916 224.11082458]
[79.31753540 210.70046997]
[76.52740479 194.98362732]
[79.99054718 179.36178589]
[89.20555115 166.23339844]
[102.78558350 157.62577820]
[100.11978149 142.86456299]
[97.45398712 128.10334778]
[94.78819275 113.34213257]
[85.90407562 102.54564667]
[90.45059204 89.32366180]
[87.78479004 74.56244659]
[85.11899567 59.80123138]
[80.51428223 51.91235352]
[82.52511597 44.80050659]
[78.03836060 36.84394836]
[80.15485382 29.76282883]
[77.92973328 14.92878628]
[75.70462036 0.09474229]
[60.67605972 0.08612554]
[45.81665802 -2.16238618]
[31.45837402 -6.60056067]
[17.92198181 -13.12924671]
[5.50988770 -21.60259247]
[-5.50061798 -31.83129692]
[-14.86355591 -43.58685303]
[-22.36975479 -56.60662842]
[-27.85152435 -70.59976959]
[-31.18639755 -85.25364685]
[-32.29987335 -100.24090576]
[-31.16707802 -115.22671509]
[-27.81331635 -129.87628174]
[-22.31351280 -143.86233521]
[-14.79053497 -156.87243652]
[-5.41245031 -168.61590576]
[5.61123228 -178.83041382]
[18.03423882 -187.28775024]
[31.57903671 -193.79898071]
[45.94302750 -198.21864319]
[60.80531693 -200.44799805]
[75.83387756 -200.43724060]
[90.69295502 -198.18659973]
[105.05060577 -193.74638367]
[118.58606720 -187.21577454]
[130.99696350 -178.74066162]
[142.00601196 -168.51039124]
[151.36726379 -156.75349426]
[158.87161255 -143.73265076]
[164.35139465 -129.73873901]
[167.68417358 -115.08438110]
[168.79551697 -100.09696198]
[167.66058350 -85.11132050]
[164.30473328 -70.46222687]
[158.80294800 -56.47694778]
[151.27810669 -43.46792984]
[141.89836121 -31.72579193]
[130.87321472 -21.51285744]
[118.44900513 -13.05729103]
[104.90328217 -6.54798985]
[90.53865814 -2.13037491]
[92.76377869 12.70366859]
[94.98889923 27.53771210]
[97.32438660 42.35478210]
[99.88021851 57.13543320]
[102.54601288 71.89665222]
[105.21180725 86.65786743]
[114.09592438 97.45435333]
[109.54940796 110.67633820]
[112.21520996 125.43755341]
[114.88100433 140.19877625]
[117.54679871 154.95999146]
[131.54689026 157.57698059]
[143.78710938 164.80043030]
[152.80752563 175.74505615]
[157.54034424 189.08325195]
[157.43626404 203.20597839]
[152.52816772 216.41696167]
[143.42472839 227.13638306]
[131.23501587 234.08982849]
[133.68075562 248.88909912]
[136.12648010 263.68835449]
[138.57220459 278.48764038]
[147.23597717 266.24267578]
[161.71125793 262.30993652]
[175.38014221 268.48745728]
[181.99339294 281.95092773]
[178.52754211 296.54501343]
[166.56710815 305.59753418]
[151.58026123 304.96978760]
[140.41787720 294.94711304]
[141.31069946 309.92053223]
[142.20350647 324.89392090]
[143.09632874 339.86734009]
[143.98913574 354.84072876]
[144.88195801 369.81414795]
[159.88630676 369.80148315]
[174.86552429 370.66943359]
[189.76799011 372.41497803]
[204.54232788 375.03210449]
[219.13761902 378.51177979]
[233.50352478 382.84204102]
[247.59054565 388.00793457]
[261.35009766 393.99166870]
[274.73477173 400.77261353]
[287.69842529 408.32736206]
[300.19635010 416.62991333]
[312.18548584 425.65161133]
[323.62448120 435.36138916]
[334.47390747 445.72576904]
[344.69638062 456.70901489]
[354.25665283 468.27325439]
[363.12179565 480.37863159]
[371.26116943 492.98339844]
[378.64682007 506.04415894]
[385.25320435 519.51580811]
[391.05755615 533.35198975]
[396.03991699 547.50494385]
[400.18310547 561.92596436]
[403.47277832 576.56524658]
[405.89764404 591.37231445]
[407.44934082 606.29626465]
[408.12252808 621.28546143]
[407.91485596 636.28839111]
[406.82705688 651.25323486]
[404.86285400 666.12847900]
[402.02908325 680.86279297]
[398.33544922 695.40539551]
[393.79470825 709.70617676]
[388.42251587 723.71582031]
[382.23736572 737.38604736]
[375.26062012 750.66967773]
[367.51632690 763.52099609]
[359.03115845 775.89569092]
[349.83438110 787.75103760]
[339.95767212 799.04620361]
[329.43508911 809.74230957]
[318.30294800 819.80236816]
[306.59957886 829.19183350]
[294.36532593 837.87823486]
[281.64236450 845.83166504]
[268.47457886 853.02471924]
[254.90734863 859.43255615]
[240.98742676 865.03314209]
[226.76283264 869.80712891]
[212.28256226 873.73809814]
[197.59655762 876.81243896]
[182.75543213 879.01965332]
[167.81036377 880.35205078]
[152.81285095 880.80505371]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[51 156]
[52 155]
[53 154]
[54 153]
[55 152]
[56 151]
[57 143]
[58 142]
[59 141]
[60 140]
[67 132]
[68 131]
[69 130]
[70 129]
[72 127]
[73 126]
[74 125]
[76 124]
[78 123]
[79 122]
[80 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
