%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[124.24660492 845.65997314]
[110.31347656 840.03430176]
[97.32283783 832.48284912]
[85.53915405 823.15948486]
[75.20233154 812.25390625]
[66.52281189 799.98822021]
[59.67729568 786.61218262]
[54.80515671 772.39794922]
[52.00557709 757.63507080]
[51.33555984 742.62402344]
[52.80874252 727.67041016]
[56.39513397 713.07867432]
[62.02172089 699.14587402]
[69.57395172 686.15570068]
[78.89806366 674.37261963]
[89.80424500 664.03649902]
[102.07045746 655.35772705]
[115.44696808 648.51300049]
[129.66145325 643.64178467]
[144.42451477 640.84307861]
[143.75473022 625.85809326]
[143.08494568 610.87304688]
[142.41516113 595.88800049]
[141.74537659 580.90295410]
[141.07559204 565.91790771]
[139.62617493 550.98809814]
[137.40106201 536.15405273]
[135.17594910 521.32000732]
[132.95082092 506.48596191]
[120.85758972 497.86685181]
[118.38968658 482.85470581]
[127.51219940 470.22866821]
[125.28708649 455.39462280]
[123.06196594 440.56057739]
[120.83685303 425.72653198]
[118.61173248 410.89248657]
[116.38661957 396.05844116]
[114.21508789 394.28570557]
[112.61492920 391.54595947]
[111.95796204 388.05258179]
[112.53199768 384.14938354]
[114.49800873 380.27783203]
[113.15977478 365.33764648]
[111.82154083 350.39746094]
[98.03567505 347.17825317]
[85.89958191 339.84774780]
[76.60663605 329.11129761]
[71.07543182 316.00994873]
[69.85894775 301.81945801]
[73.08932495 287.92605591]
[80.46363068 275.69113159]
[91.27223969 266.31768799]
[104.46707916 260.73217773]
[103.35143280 245.77372742]
[102.23578644 230.81527710]
[101.12014008 215.85682678]
[92.45765686 203.74028015]
[99.14711761 189.40284729]
[90.48463440 177.28630066]
[97.17409515 162.94888306]
[96.05844879 147.99043274]
[94.94279480 133.03196716]
[93.82714844 118.07352448]
[82.91663361 108.53901672]
[81.83895111 94.08962250]
[91.21439362 83.04212952]
[89.98741913 68.09239197]
[81.04978180 55.03754044]
[87.62075806 41.67073059]
[86.28252411 26.73054695]
[84.94429016 11.79036236]
[81.06174469 3.52213073]
[83.69905090 -3.38195705]
[81.12809753 -6.88112688]
[79.92533112 -10.63850307]
[80.00391388 -14.19226646]
[81.13595581 -17.15623283]
[82.98937988 -19.25931740]
[82.76605225 -34.25765228]
[82.54272461 -49.25599289]
[82.31939697 -64.25432587]
[73.62476349 -73.78145599]
[73.74752045 -86.27820587]
[82.07647705 -95.05060577]
[82.07647705 -110.05060577]
[71.08282471 -116.00101471]
[63.70507812 -126.00287628]
[61.29395676 -138.12170410]
[64.24682617 -150.04570007]
[71.94375610 -159.52674866]
[82.87641907 -164.80426025]
[83.32302094 -179.79762268]
[83.76963043 -194.79096985]
[84.21623230 -209.78431702]
[84.66284180 -224.77766418]
[85.10944366 -239.77101135]
[85.55605316 -254.76437378]
[86.00265503 -269.75772095]
[86.44926453 -284.75106812]
[72.57054138 -290.95184326]
[62.12483978 -301.99520874]
[56.70505142 -316.19711304]
[57.13765335 -331.39187622]
[63.35667419 -345.26245117]
[74.41376495 -355.69360352]
[88.62279510 -361.09469604]
[103.81698608 -360.64212036]
[117.67935181 -354.40484619]
[128.09596252 -343.33404541]
[133.47836304 -329.11791992]
[133.00579834 -313.92434692]
[126.75029755 -300.07019043]
[115.66580200 -289.66815186]
[101.44261169 -284.30447388]
[100.99600983 -269.31109619]
[100.54940033 -254.31776428]
[100.10279846 -239.32441711]
[99.65618896 -224.33105469]
[99.20957947 -209.33770752]
[98.76297760 -194.34436035]
[98.31636810 -179.35101318]
[97.86976624 -164.35766602]
[112.32859039 -154.21794128]
[117.85493469 -137.27951050]
[112.05656433 -120.26602936]
[97.07647705 -110.05060577]
[97.07647705 -95.05060577]
[106.65717316 -80.34764099]
[97.31773376 -64.47765350]
[97.54106140 -49.47932053]
[97.76438904 -34.48098373]
[97.98771667 -19.48264503]
[98.65750122 -4.49760580]
[99.88447571 10.45212746]
[101.22270966 25.39231300]
[102.56094360 40.33249664]
[111.40286255 52.31872940]
[104.92760468 66.75415802]
[108.65531921 73.13584900]
[106.17285156 81.92647552]
[117.08336639 91.46098328]
[118.16104889 105.91037750]
[108.78560638 116.95787048]
[109.90125275 131.91632080]
[111.01689911 146.87478638]
[112.13254547 161.83323669]
[120.87482452 175.01971436]
[114.10556793 188.28720093]
[122.84784698 201.47367859]
[116.07859039 214.74116516]
[117.19423676 229.69963074]
[118.30989075 244.65808105]
[119.42553711 259.61654663]
[134.78343201 263.85620117]
[147.73927307 273.08288574]
[156.73727417 286.16601562]
[160.70466614 301.51333618]
[159.17955017 317.26467896]
[152.36460876 331.51736450]
[141.10040283 342.55606079]
[126.76172638 349.05923462]
[128.09996033 363.99942017]
[129.43820190 378.93960571]
[131.22065735 393.83331299]
[133.44578552 408.66735840]
[135.67089844 423.50140381]
[137.89601135 438.33544922]
[140.12112427 453.16949463]
[142.34625244 468.00354004]
[154.77175903 477.39736938]
[156.81703186 492.47290039]
[147.78486633 504.26086426]
[150.00997925 519.09490967]
[152.23510742 533.92895508]
[154.46022034 548.76300049]
[163.30534363 536.64837646]
[177.83757019 532.93157959]
[191.41296387 539.31195068]
[197.82504272 552.87237549]
[194.14228821 567.41326904]
[182.04840088 576.28668213]
[167.07255554 575.43585205]
[156.06063843 565.24810791]
[156.73042297 580.23315430]
[157.40020752 595.21820068]
[158.06999207 610.20324707]
[158.73977661 625.18829346]
[159.40956116 640.17333984]
[174.36344910 641.64373779]
[188.95584106 645.22741699]
[202.88966370 650.85137939]
[215.88124084 658.40124512]
[227.66607666 667.72314453]
[238.00424194 678.62744141]
[246.68528748 690.89202881]
[253.53245544 704.26727295]
[258.40634155 718.48083496]
[261.20776367 733.24340820]
[261.87963867 748.25433350]
[260.40829468 763.20812988]
[256.82373047 777.80029297]
[251.19885254 791.73382568]
[243.64823914 804.72491455]
[234.32557678 816.50915527]
[223.42066956 826.84667969]
[211.15554810 835.52691650]
[197.77987671 842.37329102]
[183.56599426 847.24627686]
[168.80326843 850.04681396]
[153.79225159 850.71771240]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 188]
[21 187]
[22 186]
[23 185]
[24 184]
[25 183]
[26 175]
[27 174]
[28 173]
[29 172]
[32 169]
[33 168]
[34 167]
[35 166]
[36 165]
[37 164]
[42 163]
[43 162]
[44 161]
[53 153]
[54 152]
[55 151]
[56 150]
[58 148]
[60 146]
[61 145]
[62 144]
[63 143]
[66 140]
[67 138]
[69 136]
[70 135]
[71 134]
[73 133]
[78 132]
[79 131]
[80 130]
[81 129]
[84 127]
[85 126]
[91 122]
[92 121]
[93 120]
[94 119]
[95 118]
[96 117]
[97 116]
[98 115]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
