%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCACUCGGAUCCCACAACACUCACAUUUAAUCACGCUACUCAUCCCCUUCCCUCGGAUGAUCCCACAUCUUAUCCUUCAUACACGGACGCAAGUCCGCAxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[44.38217926 583.68719482]
[29.32756042 585.04724121]
[14.54122925 581.90783691]
[1.33797848 574.54815674]
[-9.10816860 563.62249756]
[-15.86834621 550.10247803]
[-18.34144592 535.19018555]
[-16.30755997 520.21173096]
[-9.94754124 506.49890137]
[0.17308216 495.27108765]
[13.15439224 487.52658081]
[27.84209824 483.95410156]
[28.73491478 468.98068237]
[29.62772942 454.00729370]
[30.52054596 439.03387451]
[28.76287842 436.85012817]
[27.76431656 433.83859253]
[27.84449577 430.28485107]
[29.21383858 426.58493042]
[31.93846893 423.20404053]
[33.72093582 408.31033325]
[35.50339890 393.41662598]
[37.28586578 378.52288818]
[27.41579628 389.81811523]
[13.46071911 395.31863403]
[-1.46176493 393.79565430]
[-14.01793480 385.58941650]
[-21.40270996 372.53317261]
[-21.96631432 357.54376221]
[-15.58283520 343.96984863]
[-3.67835879 334.84387207]
[11.08762455 332.20458984]
[25.41635513 336.64166260]
[36.10675812 347.16378784]
[40.77057648 361.42034912]
[44.95758820 347.01657104]
[49.14459991 332.61279297]
[53.33160782 318.20901489]
[57.51861954 303.80520630]
[61.70563126 289.40142822]
[65.89264679 274.99765015]
[69.97231293 260.56311035]
[65.88148499 246.24128723]
[76.99694824 234.98265076]
[80.96903992 220.51812744]
[84.94113922 206.05360413]
[88.80544281 191.55990601]
[92.56174469 177.03784180]
[96.31804657 162.51579285]
[97.43369293 147.55732727]
[95.87316895 132.63873291]
[94.31265259 117.72012329]
[81.53839111 102.34899902]
[90.05638885 84.26871490]
[87.83127594 69.43466949]
[85.60615540 54.60062790]
[83.38103485 39.76658249]
[81.15592194 24.93253899]
[69.35388184 10.79770947]
[76.40907288 -5.27062130]
[73.96334076 -20.06989288]
[71.51761627 -34.86916351]
[69.07189178 -49.66843414]
[66.29627991 -64.40939331]
[63.19216919 -79.08470154]
[60.08805847 -93.76000214]
[55.25049973 -101.50827789]
[57.04869461 -108.67684174]
[54.16342163 -123.39673615]
[51.27814865 -138.11662292]
[48.39287567 -152.83651733]
[35.97145462 -166.43026733]
[42.30212021 -182.79759216]
[39.19800949 -197.47290039]
[36.09389877 -212.14819336]
[32.98978806 -226.82350159]
[29.88567924 -241.49880981]
[26.56341934 -256.12625122]
[23.02374649 -270.70263672]
[19.48407364 -285.27902222]
[15.94440174 -299.85537720]
[5.16907597 -311.44000244]
[9.68450451 -325.63366699]
[-5.36544847 -325.19479370]
[-20.17770004 -327.89495850]
[-34.10472107 -333.61611938]
[-46.53768158 -342.10818481]
[-56.93306732 -352.99990845]
[-64.83644104 -365.81515503]
[-69.90229034 -379.99368286]
[-71.90916443 -394.91567993]
[-70.76933289 -409.92883301]
[-66.53262329 -424.37680054]
[-59.38424301 -437.62802124]
[-49.63669586 -449.10314941]
[-37.71609497 -458.30059814]
[-24.14356041 -464.81826782]
[-9.51242542 -468.37124634]
[5.53769922 -468.80419922]
[20.34888649 -466.09820557]
[34.27365494 -460.37155151]
[46.70327377 -451.87460327]
[57.09437561 -440.97879028]
[64.99270630 -428.16043091]
[70.05297852 -413.97988892]
[72.05397797 -399.05709839]
[70.90824127 -384.04440308]
[66.66584778 -369.59811401]
[59.51226044 -356.34973145]
[49.76019669 -344.87841797]
[37.83597565 -335.68566895]
[24.26087952 -329.17333984]
[34.78302383 -318.63131714]
[30.52077675 -303.39505005]
[34.06044769 -288.81869507]
[37.60012054 -274.24230957]
[41.13979340 -259.66592407]
[44.67993164 -256.46023560]
[46.24385452 -250.99661255]
[44.56098175 -244.60292053]
[47.66509247 -229.92761230]
[50.76919937 -215.25230408]
[53.87331009 -200.57701111]
[56.97742081 -185.90170288]
[66.94145203 -179.04280090]
[69.64764404 -166.84196472]
[63.11276627 -155.72178650]
[65.99803925 -141.00189209]
[68.88331604 -126.28200531]
[71.76858521 -111.56211853]
[74.76335907 -96.86411285]
[77.86746979 -82.18881226]
[80.97158051 -67.51350403]
[83.71143341 -65.29414368]
[85.51243591 -61.63745117]
[85.71075439 -56.99913788]
[83.87116241 -52.11416245]
[86.31688690 -37.31489182]
[88.76261139 -22.51561928]
[91.20834351 -7.71634865]
[100.85617065 -0.41936219]
[103.01486206 11.89013863]
[95.98996735 22.70742226]
[98.21508026 37.54146576]
[100.44020081 52.37551117]
[102.66531372 67.20955658]
[104.89043427 82.04359436]
[112.51077271 86.22214508]
[117.40283203 93.40528870]
[118.49977875 102.02657318]
[115.56239319 110.20590973]
[109.23125458 116.15959930]
[110.79177856 131.07820129]
[112.35230255 145.99681091]
[117.57332611 131.93476868]
[125.96712494 119.50319672]
[137.05897522 109.40513611]
[150.22158813 102.21169281]
[164.71055603 98.32968903]
[179.70645142 97.97867584]
[194.36117554 101.17849731]
[207.84594727 107.74819183]
[219.39813232 117.31620789]
[228.36441040 129.34143066]
[234.23767090 143.14378357]
[236.68576050 157.94265747]
[235.57023621 172.90112305]
[230.95419312 187.17318726]
[223.09866333 199.95172119]
[212.44795227 210.51402283]
[199.60437012 218.26272583]
[185.29431152 222.75964355]
[170.32707214 223.75041199]
[155.54911804 221.17901611]
[141.79620361 215.19090271]
[129.84616089 206.12467957]
[120.37477875 194.49313354]
[113.91773224 180.95405579]
[110.84010315 166.27209473]
[107.08380890 180.79414368]
[103.32750702 195.31620789]
[104.20818329 204.40808105]
[99.40566254 210.02569580]
[95.43357086 224.49021912]
[91.46147156 238.95474243]
[95.26818848 254.31115723]
[84.43683624 264.53518677]
[85.18205261 273.63919067]
[80.29642487 279.18466187]
[76.10941315 293.58843994]
[71.92240143 307.99221802]
[67.73538971 322.39602661]
[63.54838181 336.79980469]
[59.36137009 351.20358276]
[55.17435837 365.60736084]
[52.17958450 380.30535889]
[50.39711761 395.19906616]
[48.61465073 410.09280396]
[46.83218384 424.98651123]
[45.49394989 439.92669678]
[44.60113525 454.90011597]
[43.70832062 469.87350464]
[42.81550217 484.84692383]
[56.97461700 490.13946533]
[68.94366455 499.37164307]
[77.65836334 511.72256470]
[82.34380341 526.09399414]
[82.58337402 541.20800781]
[78.35575867 555.72076416]
[70.03688049 568.34167480]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 203]
[13 202]
[14 201]
[15 200]
[20 199]
[21 198]
[22 197]
[23 196]
[35 195]
[36 194]
[37 193]
[38 192]
[39 191]
[40 190]
[41 189]
[42 187]
[44 185]
[45 184]
[46 183]
[47 181]
[48 180]
[49 179]
[50 154]
[51 153]
[52 152]
[54 147]
[55 146]
[56 145]
[57 144]
[58 143]
[60 140]
[61 139]
[62 138]
[63 137]
[64 133]
[65 132]
[66 131]
[68 130]
[69 129]
[70 128]
[71 127]
[73 124]
[74 123]
[75 122]
[76 121]
[77 120]
[78 117]
[79 116]
[80 115]
[81 114]
[83 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
