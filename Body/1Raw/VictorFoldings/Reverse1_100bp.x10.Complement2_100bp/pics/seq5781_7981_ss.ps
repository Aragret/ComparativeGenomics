%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxGACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGG\
) } def
/len { sequence length } bind def

/coor [
[169.64083862 588.63171387]
[182.41267395 580.27447510]
[180.40866089 565.40899658]
[178.40464783 550.54345703]
[176.40063477 535.67791748]
[174.39662170 520.81237793]
[172.39260864 505.94686890]
[170.27798462 491.09664917]
[168.05287170 476.26260376]
[165.82775879 461.42855835]
[163.49226379 446.61151123]
[161.04653931 431.81222534]
[158.38073730 417.05102539]
[155.49546814 402.33111572]
[152.61019897 387.61123657]
[149.61541748 372.91323853]
[146.51130676 358.23791504]
[142.05166626 352.34442139]
[143.47195435 343.32107544]
[140.58666992 328.60119629]
[137.70140076 313.88128662]
[134.81613159 299.16140747]
[131.93086243 284.44152832]
[115.96350098 283.84323120]
[100.59037018 279.45568848]
[86.69791412 271.52774048]
[75.08818817 260.51242065]
[66.43257904 247.04125977]
[61.23292923 231.88784790]
[59.79249954 215.92359924]
[62.19823456 200.06755066]
[68.31555939 185.23344421]
[77.79587555 172.27711487]
[90.09645844 161.94711304]
[104.51148224 154.84141541]
[101.18922424 140.21394348]
[97.86695862 125.58649445]
[94.54470062 110.95903015]
[90.65182495 125.44507599]
[82.52581787 138.05332947]
[70.94118500 147.58204651]
[57.00211716 153.12300110]
[42.03718185 154.14808655]
[27.47275162 150.55958557]
[14.69701195 142.69952393]
[4.92766333 131.31709290]
[-0.90414017 117.49717712]
[-2.24254894 102.55700684]
[1.04000592 87.92058563]
[8.63065147 74.98296356]
[19.80589676 64.97727203]
[33.50058746 58.85718536]
[48.40943527 57.20603943]
[63.11141968 60.18120193]
[76.20524597 67.49910736]
[86.44289398 78.46225739]
[92.84889221 92.02680206]
[93.51867676 77.04176331]
[94.18846130 62.05672455]
[94.41178894 47.05838394]
[94.18846130 32.06004715]
[93.96513367 17.06171036]
[93.74180603 2.06337357]
[93.51847839 -12.93496418]
[93.18350220 -27.93122292]
[92.73689270 -42.92457199]
[78.86360931 -49.19301605]
[69.12738800 -60.81596375]
[65.41828156 -75.45368195]
[68.42005920 -90.18970490]
[77.48484039 -102.11191559]
[90.77204895 -108.88802338]
[90.32543945 -123.88137817]
[89.87882996 -138.87472534]
[78.83124542 -128.72825623]
[63.83955765 -129.22766113]
[53.49169922 -140.08683777]
[53.71538544 -155.08515930]
[64.38248444 -165.63092041]
[79.38239288 -165.68302917]
[90.12210846 -155.21247864]
[91.01492310 -170.18588257]
[91.90773773 -185.15930176]
[92.80055237 -200.13270569]
[93.58187866 -215.11233521]
[94.25166321 -230.09738159]
[94.92144775 -245.08241272]
[84.53488159 -256.69091797]
[85.42760468 -271.87832642]
[96.55853271 -281.70880127]
[97.22831726 -296.69381714]
[94.48522186 -305.40664673]
[98.02127075 -311.89648438]
[98.91408539 -326.86990356]
[99.80690002 -341.84329224]
[100.69972229 -356.81671143]
[101.59253693 -371.79013062]
[102.48535156 -386.76351929]
[88.39491272 -392.26940918]
[76.69680786 -401.86157227]
[68.53708649 -414.60025024]
[64.71517181 -429.23745728]
[65.60548401 -444.33920288]
[71.12080383 -458.42596436]
[80.72079468 -470.11764526]
[93.46495056 -478.26879883]
[108.10472870 -482.08093262]
[123.20586395 -481.18048096]
[137.28890991 -475.65573120]
[148.97415161 -466.04791260]
[157.11679077 -453.29827881]
[160.91909790 -438.65597534]
[160.00854492 -423.55541992]
[154.47434998 -409.47607422]
[144.85868835 -397.79727173]
[132.10362244 -389.66320801]
[117.45875549 -385.87069702]
[116.56594086 -370.89730835]
[115.67312622 -355.92388916]
[114.78031158 -340.95050049]
[113.88749695 -325.97708130]
[112.99467468 -311.00369263]
[112.21335602 -296.02404785]
[111.54357147 -281.03900146]
[121.75308228 -270.25469971]
[121.28729248 -255.04818726]
[109.90648651 -244.41262817]
[109.23670197 -229.42759705]
[108.56691742 -214.44255066]
[111.40860748 -207.62005615]
[107.77395630 -199.23988342]
[106.88114166 -184.26647949]
[105.98832703 -169.29307556]
[105.09551239 -154.31967163]
[104.87218475 -139.32133484]
[105.31878662 -124.32798004]
[105.76539612 -109.33463287]
[119.43236542 -103.36140442]
[129.19070435 -91.99987030]
[133.06425476 -77.46864319]
[130.23298645 -62.63611221]
[121.20582581 -50.45426178]
[107.73024750 -43.37117767]
[108.17684937 -28.37782860]
[111.51810455 -21.78557587]
[108.51681519 -13.15829182]
[108.74014282 1.84004593]
[108.96347046 16.83838272]
[109.18679810 31.83672142]
[109.41012573 46.83505630]
[111.32534027 48.88202667]
[112.54512787 51.81097412]
[112.72948456 55.36082077]
[111.63912201 59.15234375]
[109.17350006 62.72650909]
[108.50371552 77.71154785]
[107.83393097 92.69658661]
[109.17216492 107.63677216]
[112.49442291 122.26422882]
[115.81668091 136.89169312]
[119.13893890 151.51914978]
[133.20686340 151.46586609]
[146.96934509 154.35122681]
[159.81967163 160.04531860]
[171.19187927 168.29449463]
[180.58572388 178.73260498]
[187.58866882 190.89730835]
[191.89398193 204.25050354]
[193.31419373 218.20219421]
[191.78929138 232.13645935]
[187.38917542 245.43875122]
[180.31050110 257.52291870]
[170.86788940 267.85711670]
[159.47996521 275.98709106]
[146.65075684 281.55624390]
[149.53602600 296.27612305]
[152.42129517 310.99603271]
[155.30656433 325.71591187]
[158.19183350 340.43582153]
[161.18661499 355.13381958]
[164.29072571 369.80911255]
[169.12828064 377.55740356]
[167.33009338 384.72595215]
[170.21536255 399.44586182]
[173.10063171 414.16574097]
[177.15097046 419.39129639]
[177.84944153 425.03125000]
[175.84580994 429.36651611]
[178.29153442 444.16577148]
[182.77828979 452.12234497]
[180.66178894 459.20346069]
[182.88691711 474.03750610]
[185.11203003 488.87155151]
[189.47982788 496.89401245]
[187.25813293 503.94284058]
[189.26214600 518.80834961]
[191.26615906 533.67388916]
[193.27018738 548.53942871]
[195.27420044 563.40496826]
[197.27821350 578.27050781]
[211.80714417 582.94726562]
[222.86216736 593.47106934]
[228.24827576 607.75225830]
[226.89605713 622.95532227]
[219.07398987 636.06176758]
[206.33517456 644.46917725]
[191.20887756 646.50836182]
[176.69847107 641.77435303]
[165.68498230 631.20715332]
[160.35514832 616.90490723]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 200]
[3 199]
[4 198]
[5 197]
[6 196]
[7 195]
[8 193]
[9 192]
[10 191]
[11 189]
[12 188]
[13 185]
[14 184]
[15 183]
[16 181]
[17 180]
[19 179]
[20 178]
[21 177]
[22 176]
[23 175]
[35 161]
[36 160]
[37 159]
[38 158]
[57 157]
[58 156]
[59 155]
[60 150]
[61 149]
[62 148]
[63 147]
[64 146]
[65 144]
[66 143]
[72 137]
[73 136]
[74 135]
[81 134]
[82 133]
[83 132]
[84 131]
[85 129]
[86 128]
[87 127]
[90 124]
[91 123]
[93 122]
[94 121]
[95 120]
[96 119]
[97 118]
[98 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
