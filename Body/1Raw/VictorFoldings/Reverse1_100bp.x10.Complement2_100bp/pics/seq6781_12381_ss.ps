%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[170.88768005 683.08062744]
[158.51080322 674.59832764]
[146.66336060 665.39111328]
[135.38774109 655.49182129]
[124.72434235 644.93591309]
[114.71131134 633.76116943]
[105.38450623 622.00756836]
[96.77730560 609.71728516]
[88.92051697 596.93420410]
[81.84227753 583.70416260]
[75.56792450 570.07452393]
[70.11991119 556.09399414]
[65.51774597 541.81268311]
[61.77790451 527.28173828]
[58.91376877 512.55310059]
[56.93559647 497.67956543]
[55.85046387 482.71432495]
[55.66226196 467.71099854]
[56.37165833 452.72326660]
[57.97612000 437.80477905]
[60.46989822 423.00894165]
[63.84406662 408.38873291]
[68.08654785 393.99649048]
[73.18215179 379.88372803]
[79.11264801 366.10095215]
[85.85678864 352.69750977]
[93.39044952 339.72140503]
[101.68665314 327.21905518]
[110.71569824 315.23522949]
[120.44526672 303.81283569]
[130.84053040 292.99276733]
[141.86427307 282.81375122]
[153.47703552 273.31219482]
[165.63723755 264.52215576]
[178.30137634 256.47509766]
[171.02813721 243.35639954]
[163.75491333 230.23770142]
[150.81680298 222.85836792]
[150.89222717 207.03733826]
[143.61900330 193.91864014]
[130.68089294 186.53930664]
[130.75631714 170.71829224]
[123.48309326 157.59959412]
[116.20986176 144.48089600]
[103.27175140 137.10156250]
[103.34718323 121.28053284]
[96.07395935 108.16184235]
[92.55480957 106.58450317]
[89.74801636 103.46364594]
[88.32733917 99.15218353]
[88.78382111 94.29096222]
[82.10363007 80.86058044]
[75.42343140 67.43020630]
[68.74324036 53.99983215]
[62.06304169 40.56945801]
[50.10604477 35.73282623]
[44.81858444 24.40910912]
[48.54100418 12.89954090]
[42.06150818 -0.62880433]
[35.58201218 -14.15715027]
[28.80202103 -27.53742409]
[21.72491455 -40.76295090]
[8.39190483 -49.28007507]
[9.20908070 -64.15224457]
[2.13197494 -77.37777710]
[-4.94513035 -90.60330200]
[-19.01675224 -85.34279633]
[-33.66399002 -82.00485229]
[-48.62544632 -80.64904785]
[-63.63412094 -81.29956818]
[-78.42216492 -83.94480896]
[-92.72566223 -88.53755951]
[-106.28935242 -94.99586487]
[-118.87117767 -103.20446014]
[-130.24661255 -113.01685333]
[-140.21261597 -124.25794220]
[-148.59136963 -136.72709656]
[-155.23332214 -150.20181274]
[-160.01995850 -164.44160461]
[-162.86582947 -179.19235229]
[-163.72016907 -194.19079590]
[-162.56771851 -209.16929626]
[-159.42904663 -223.86051941]
[-154.36018372 -238.00230408]
[-147.45156860 -251.34225464]
[-138.82649231 -263.64233398]
[-128.63890076 -274.68298340]
[-117.07057953 -284.26721191]
[-104.32798767 -292.22396851]
[-90.63854218 -298.41125488]
[-76.24653625 -302.71862793]
[-61.40881348 -305.06927490]
[-46.39017105 -305.42117310]
[-31.45863533 -303.76809692]
[-16.88067627 -300.13952637]
[-2.91645551 -294.60018921]
[10.18481922 -287.24902344]
[22.18934250 -278.21713257]
[32.88287735 -267.66574097]
[42.07458115 -255.78315735]
[49.60042572 -242.78141785]
[55.32609940 -228.89256287]
[59.14941788 -214.36447144]
[61.00215530 -199.45639038]
[60.85124207 -184.43438721]
[58.69937515 -169.56652832]
[54.58495331 -155.11817932]
[48.58140945 -141.34716797]
[40.79587936 -128.49925232]
[31.36730194 -116.80371857]
[20.46394730 -106.46929169]
[8.28039742 -97.68040466]
[15.35750198 -84.45487976]
[22.43460846 -71.22935486]
[35.26141739 -63.65820694]
[34.95044327 -47.84005737]
[42.02754974 -34.61452866]
[45.27799606 -33.24816895]
[48.02812195 -30.23954201]
[49.51326752 -25.84094620]
[49.11035919 -20.63664627]
[55.58985519 -7.10830021]
[62.06934738 6.42004538]
[77.06126404 15.54196262]
[75.49341583 33.88926315]
[82.17361450 47.31963730]
[88.85380554 60.75001526]
[95.53400421 74.18038940]
[102.21419525 87.61076355]
[109.19264984 100.88861084]
[116.46588135 114.00730896]
[129.92422485 122.32497406]
[129.32855225 137.20767212]
[136.60179138 150.32635498]
[143.87501526 163.44505310]
[157.33335876 171.76272583]
[156.73770142 186.64541626]
[164.01092529 199.76411438]
[177.46926880 208.08178711]
[176.87361145 222.96447754]
[184.14683533 236.08316040]
[191.42005920 249.20185852]
[204.95426941 242.72413635]
[218.85163879 237.06739807]
[233.06242371 232.25192261]
[247.53576660 228.29492188]
[262.21984863 225.21057129]
[277.06210327 223.00991821]
[292.00942993 221.70083618]
[307.00823975 221.28800964]
[322.00494385 221.77291870]
[336.94577026 223.15382385]
[351.77728271 225.42579651]
[366.44638062 228.58067322]
[380.90054321 232.60717773]
[395.08801270 237.49090576]
[408.95803833 243.21437073]
[422.46093750 249.75706482]
[435.54840088 257.09558105]
[448.17358398 265.20367432]
[460.29122925 274.05227661]
[471.85803223 283.60971069]
[482.83255005 293.84179688]
[493.17547607 304.71191406]
[502.84982300 316.18109131]
[511.82095337 328.20834351]
[520.05676270 340.75054932]
[527.52770996 353.76284790]
[534.20715332 367.19866943]
[540.07104492 381.00988770]
[545.09851074 395.14706421]
[549.27154541 409.55963135]
[552.57513428 424.19595337]
[554.99749756 439.00363159]
[556.52996826 453.92968750]
[557.16705322 468.92065430]
[556.90649414 483.92291260]
[555.74914551 498.88275146]
[553.69927979 513.74658203]
[550.76409912 528.46118164]
[546.95422363 542.97393799]
[542.28320312 557.23291016]
[536.76782227 571.18695068]
[530.42779541 584.78619385]
[523.28582764 597.98193359]
[515.36743164 610.72692871]
[506.70104980 622.97558594]
[497.31765747 634.68402100]
[487.25082397 645.81030273]
[476.53662109 656.31469727]
[465.21340942 666.15948486]
[453.32168579 675.30944824]
[440.90402222 683.73187256]
[428.00488281 691.39660645]
[414.67047119 698.27624512]
[400.94848633 704.34606934]
[386.88806152 709.58435059]
[372.53955078 713.97247314]
[357.95428467 717.49456787]
[343.18447876 720.13812256]
[328.28298950 721.89361572]
[313.30322266 722.75482178]
[298.29873657 722.71862793]
[283.32330322 721.78515625]
[268.43048096 719.95782471]
[253.67358398 717.24304199]
[239.10546875 713.65057373]
[224.77827454 709.19335938]
[210.74328613 703.88726807]
[197.05075073 697.75128174]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 142]
[36 141]
[37 140]
[39 138]
[40 137]
[42 135]
[43 134]
[44 133]
[46 131]
[47 130]
[51 129]
[52 128]
[53 127]
[54 126]
[55 125]
[58 123]
[59 122]
[60 121]
[61 117]
[62 116]
[64 114]
[65 113]
[66 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
