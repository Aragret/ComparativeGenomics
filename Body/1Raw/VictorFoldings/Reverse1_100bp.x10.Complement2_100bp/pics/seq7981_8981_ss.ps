%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxUGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[180.55886841 387.01181030]
[182.30020142 372.09521484]
[185.79357910 357.48931885]
[190.98997498 343.39910889]
[197.81640625 330.02239990]
[206.17707825 317.54699707]
[215.95458984 306.14804077]
[227.01170349 295.98553467]
[239.19317627 287.20211792]
[231.91995239 274.08343506]
[224.64671326 260.96475220]
[217.37348938 247.84603882]
[210.10026550 234.72735596]
[202.82702637 221.60865784]
[195.55380249 208.48995972]
[187.41857910 195.88764954]
[178.45788574 183.85827637]
[169.49719238 171.82890320]
[159.25180054 160.87298584]
[147.84933472 151.12701416]
[136.44688416 141.38105774]
[125.04441833 131.63508606]
[113.64195251 121.88912201]
[102.23948669 112.14315796]
[107.87091827 126.04592896]
[109.21405792 140.98567200]
[106.15270996 155.66995239]
[98.95171356 168.82844543]
[88.23402405 179.32278442]
[74.92684174 186.24511719]
[60.18135452 188.99659729]
[45.27320099 187.33918762]
[31.49208641 181.41627502]
[20.03021622 171.74024963]
[11.87915325 159.14817810]
[7.74404907 144.72941589]
[7.98262978 129.73130798]
[12.57425594 115.45135498]
[21.12170601 103.12491608]
[32.88554001 93.81835175]
[46.84807205 88.33676910]
[61.80139542 87.15437317]
[76.45190430 90.37346649]
[89.52940369 97.71340942]
[81.30059814 85.17200470]
[73.07178497 72.63060760]
[59.16683578 74.15216827]
[46.02556610 69.55617523]
[36.19369507 59.79335785]
[31.54976845 46.80940247]
[32.94638062 33.15736389]
[40.05426788 21.49567223]
[32.01309204 8.83314705]
[23.97192001 -3.82937837]
[15.93074703 -16.49190331]
[7.88957405 -29.15442848]
[3.26216698 -31.56983376]
[0.31835935 -35.15972137]
[-0.77640498 -39.08611298]
[-0.21324454 -42.56679916]
[-7.68098593 -55.57575226]
[-15.14872646 -68.58470154]
[-22.61646843 -81.59365845]
[-30.08420944 -94.60260773]
[-43.96015167 -88.85052490]
[-58.45775223 -84.92012787]
[-73.33893585 -82.87596893]
[-88.35935211 -82.75161743]
[-103.27234650 -84.54910278]
[-117.83303070 -88.23891449]
[-131.80230713 -93.76045990]
[-144.95080566 -101.02307892]
[-157.06257629 -109.90750885]
[-167.93878174 -120.26785278]
[-177.40077209 -131.93399048]
[-185.29321289 -144.71435547]
[-191.48649597 -158.39907837]
[-195.87890625 -172.76344299]
[-198.39834595 -187.57157898]
[-199.00340271 -202.58032227]
[-197.68417358 -217.54321289]
[-194.46229553 -232.21453857]
[-189.39070129 -246.35339355]
[-182.55265808 -259.72760010]
[-174.06045532 -272.11755371]
[-164.05354309 -283.31979370]
[-152.69624329 -293.15032959]
[-140.17504883 -301.44781494]
[-126.69556427 -308.07592773]
[-112.47914886 -312.92587280]
[-97.75924683 -315.91796875]
[-82.77756500 -317.00314331]
[-67.78012085 -316.16351318]
[-53.01318359 -313.41287231]
[-38.71924210 -308.79644775]
[-25.13301277 -302.38998413]
[-12.47759724 -294.29870605]
[-0.96080768 -284.65545654]
[9.22824001 -273.61865234]
[17.92223358 -261.36944580]
[24.97840691 -248.10902405]
[30.28089523 -234.05513000]
[33.74262238 -219.43853760]
[35.30674744 -204.49926758]
[34.94758606 -189.48263550]
[32.67103195 -174.63522339]
[28.51447105 -160.20083618]
[22.54615784 -146.41651917]
[14.86409664 -133.50859070]
[5.59443474 -121.68904877]
[-5.11061192 -111.15196228]
[-17.07525635 -102.07035065]
[-9.60751534 -89.06140137]
[-2.13977456 -76.05244446]
[5.32796669 -63.04349518]
[12.79570770 -50.03454208]
[20.55209923 -37.19560242]
[28.59327126 -24.53307533]
[36.63444519 -11.87055111]
[44.67561722 0.79197365]
[52.71678925 13.45449829]
[68.83990479 12.37856770]
[83.38935852 19.62213707]
[92.35185242 33.29293060]
[93.20199585 49.71160126]
[85.61318970 64.40180206]
[93.84199524 76.94319916]
[102.07080841 89.48459625]
[111.98545837 100.74069214]
[123.38791656 110.48666382]
[134.79037476 120.23262787]
[146.19284058 129.97859192]
[157.59530640 139.72456360]
[168.99777222 149.47052002]
[163.91230774 135.35890198]
[164.19509888 120.36156464]
[169.80892944 106.45167542]
[180.01521301 95.45932770]
[193.47114563 88.83074951]
[208.40634155 87.43804169]
[222.85585022 91.46443939]
[234.91856384 100.38020325]
[243.00744629 113.01230621]
[246.05824280 127.69878387]
[243.66960144 142.50737000]
[236.15574646 155.48974609]
[224.50529480 164.93786621]
[210.25103760 169.60864258]
[195.26838684 168.88758850]
[181.52656555 162.86819458]
[190.48727417 174.89758301]
[199.44796753 186.92695618]
[199.89645386 171.93365479]
[208.29173279 159.50308228]
[222.03240967 153.48695374]
[236.86079407 155.74945068]
[248.18215942 165.58950806]
[252.48844910 179.95808411]
[248.44531250 194.40290833]
[237.30555725 204.44810486]
[222.52096558 206.98104858]
[208.67250061 201.21673584]
[215.94572449 214.33543396]
[223.21894836 227.45411682]
[230.49218750 240.57281494]
[237.76541138 253.69151306]
[245.03865051 266.81021118]
[252.31187439 279.92889404]
[266.21487427 274.25061035]
[280.69189453 270.25656128]
[295.53967285 268.00283813]
[310.54983521 267.52105713]
[325.51159668 268.81802368]
[340.21493530 271.87545776]
[354.45343018 276.65051270]
[368.02725220 283.07611084]
[380.74575806 291.06207275]
[392.43048096 300.49624634]
[402.91732788 311.24624634]
[412.05911255 323.16110229]
[419.72747803 336.07360840]
[425.81481934 349.80242920]
[430.23559570 364.15487671]
[432.92782593 378.92947388]
[433.85366821 393.91876221]
[433.00012207 408.91238403]
[430.37921143 423.69976807]
[426.02770996 438.07336426]
[420.00668335 451.83142090]
[412.40069580 464.78076172]
[403.31646729 476.73959351]
[392.88159180 487.54003906]
[381.24252319 497.03045654]
[368.56268311 505.07766724]
[355.02001953 511.56866455]
[340.80471802 516.41235352]
[326.11630249 519.54071045]
[311.16094971 520.90979004]
[296.14868164 520.50042725]
[281.29019165 518.31835938]
[266.79406738 514.39416504]
[252.86383057 508.78302002]
[239.69505310 501.56362915]
[227.47257996 492.83737183]
[216.36801147 482.72674561]
[206.53721619 471.37368774]
[198.11824036 458.93759155]
[191.22923279 445.59298706]
[185.96693420 431.52728271]
[182.40519714 416.93786621]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 168]
[10 167]
[11 166]
[12 165]
[13 164]
[14 163]
[15 162]
[16 152]
[17 151]
[18 150]
[19 134]
[20 133]
[21 132]
[22 131]
[23 130]
[24 129]
[44 128]
[45 127]
[46 126]
[52 121]
[53 120]
[54 119]
[55 118]
[56 117]
[60 116]
[61 115]
[62 114]
[63 113]
[64 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
