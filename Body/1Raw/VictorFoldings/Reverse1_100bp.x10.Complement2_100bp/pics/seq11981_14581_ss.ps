%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCACAUACUUGUACUCCCACAAAAGAGCACACUUACUCCCAAAAUACAACAAUUACACCACCCACUCACUCGGGGUAACACAACACCAUUUAUACAUCUxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[94.23398590 723.76300049]
[80.03106689 729.35229492]
[64.81022644 728.21704102]
[51.59356689 720.58276367]
[43.00526810 707.96514893]
[40.75054169 692.86950684]
[45.27706528 678.29302979]
[55.68609619 667.12994385]
[69.91091156 661.59661865]
[71.02655792 646.63818359]
[72.14221191 631.67968750]
[63.68161011 616.30487061]
[74.17553711 601.17352295]
[75.06835175 586.20007324]
[75.96116638 571.22668457]
[76.85398865 556.25329590]
[74.79964447 553.38763428]
[74.03125000 549.38452148]
[75.06826782 544.85931396]
[78.13576508 540.63586426]
[79.69628143 525.71722412]
[81.25680542 510.79864502]
[81.92658997 495.81359863]
[81.70326233 480.81524658]
[81.47993469 465.81692505]
[81.25660706 450.81857300]
[81.03327942 435.82025146]
[77.79054260 429.17898560]
[80.91995239 420.59732056]
[80.91995239 405.59732056]
[77.77645111 398.90850830]
[81.03327942 390.37442017]
[81.25660706 375.37606812]
[81.47993469 360.37774658]
[81.70326233 345.37939453]
[81.92658997 330.38107300]
[82.14991760 315.38272095]
[74.60296631 302.54168701]
[82.54487610 288.85821533]
[82.76820374 273.85989380]
[82.99153137 258.86154175]
[83.21485901 243.86322021]
[83.43818665 228.86488342]
[83.66151428 213.86654663]
[76.11456299 201.02548218]
[84.05646515 187.34204102]
[72.56683350 196.98507690]
[57.61240005 195.81677246]
[47.75974655 184.50636292]
[48.65292358 169.53297424]
[59.78027344 159.47404480]
[74.76754761 160.09178162]
[85.02901459 171.03143311]
[86.58953857 156.11283875]
[88.15006256 141.19422913]
[89.71058655 126.27561951]
[91.27111053 111.35701752]
[85.75378418 98.50981140]
[93.81028748 87.08245850]
[95.37081146 72.16385651]
[96.93133545 57.24525070]
[87.25412750 45.03912354]
[89.04924774 29.93176842]
[100.74555969 20.78125572]
[102.30608368 5.86265182]
[103.86660004 -9.05595303]
[101.64696503 -17.91659737]
[105.56303406 -24.18446922]
[99.52043915 -38.80629349]
[108.71531677 -50.52395248]
[109.38510132 -65.50899506]
[108.93849182 -80.50234222]
[108.49188995 -95.49568939]
[108.04528046 -110.48904419]
[107.15246582 -125.46244812]
[105.81423187 -140.40263367]
[104.36481476 -155.33244324]
[102.80429077 -170.25105286]
[101.24376678 -185.16964722]
[89.87379456 -192.39033508]
[84.81238556 -204.66195679]
[87.70019531 -217.41902161]
[97.26439667 -226.05355835]
[88.32675934 -239.10841370]
[94.89773560 -252.47521973]
[85.96009827 -265.53009033]
[92.53107452 -278.89688110]
[91.19284058 -293.83706665]
[89.85460663 -308.77725220]
[74.92610931 -310.79907227]
[60.82198715 -316.09262085]
[48.24969101 -324.39233398]
[37.83984375 -335.28189087]
[30.11459923 -348.21511841]
[25.46145248 -362.54327393]
[24.11380196 -377.54766846]
[26.13924789 -392.47567749]
[31.43619347 -406.57849121]
[39.73894501 -419.14877319]
[50.63104248 -429.55599976]
[63.56613922 -437.27810669]
[77.89541626 -441.92779541]
[92.90013123 -443.27178955]
[107.82764435 -441.24273682]
[121.92919922 -435.94238281]
[134.49746704 -427.63656616]
[144.90203857 -416.74194336]
[152.62101746 -403.80499268]
[157.26722717 -389.47457886]
[158.60760498 -374.46954346]
[156.57492065 -359.54251099]
[151.27113342 -345.44226074]
[142.96229553 -332.87600708]
[132.06515503 -322.47406006]
[119.12631989 -314.75820923]
[104.79479218 -310.11547852]
[106.13302612 -295.17529297]
[107.47126007 -280.23513794]
[116.31317902 -268.24890137]
[109.83792114 -253.81346130]
[118.67984009 -241.82722473]
[112.20458221 -227.39179993]
[125.55908203 -217.16946411]
[127.42507935 -200.11564636]
[116.16237640 -186.73017883]
[117.72289276 -171.81156921]
[119.28341675 -156.89295959]
[123.10572815 -150.56748962]
[120.75441742 -141.74085999]
[122.09265137 -126.80068207]
[124.15481567 -124.90183258]
[125.58906555 -122.07171631]
[126.03693390 -118.54541779]
[125.23159790 -114.68329620]
[123.03863525 -110.93564606]
[123.48523712 -95.94229889]
[123.93184662 -80.94895172]
[124.37844849 -65.95559692]
[132.86328125 -78.32522583]
[146.35324097 -84.88426208]
[161.32209778 -83.91818237]
[173.85702515 -75.67951202]
[180.68142700 -62.32183838]
[180.01141357 -47.33680725]
[172.02212524 -34.64147949]
[158.80195618 -27.55438042]
[143.80661011 -27.92806053]
[130.95584106 -35.66484070]
[123.60903168 -48.74148941]
[129.77911377 -35.18496323]
[120.45674896 -22.40200424]
[118.78520966 -7.49542999]
[117.22468567 7.42317486]
[115.66416168 22.34177971]
[125.21367645 33.71465683]
[123.84360504 48.86647415]
[111.84993744 58.80577469]
[110.28941345 73.72438049]
[108.72888947 88.64298248]
[114.24621582 101.49018860]
[106.18971252 112.91754150]
[104.62918854 127.83614349]
[103.06866455 142.75474548]
[101.50814056 157.67335510]
[99.94762421 172.59196472]
[99.05480194 187.56536865]
[106.58578491 201.47920227]
[98.65985107 214.08987427]
[98.43652344 229.08821106]
[98.21319580 244.08654785]
[97.98986816 259.08486938]
[97.76654053 274.08322144]
[97.54321289 289.08154297]
[105.07418823 302.99539185]
[97.14825439 315.60604858]
[96.92492676 330.60440063]
[96.70159912 345.60272217]
[96.47827148 360.60107422]
[96.25494385 375.59939575]
[96.03161621 390.59774780]
[95.91995239 405.59732056]
[95.91995239 420.59732056]
[96.03161621 435.59692383]
[96.25494385 450.59524536]
[96.47827148 465.59359741]
[96.70159912 480.59191895]
[96.92492676 495.59027100]
[106.63076782 484.15362549]
[121.17754364 480.49420166]
[135.13964844 485.97683716]
[143.30958557 498.55667114]
[142.64016724 513.54174805]
[133.38104248 525.34295654]
[118.98567200 529.55877686]
[104.82315826 524.61682129]
[96.17541504 512.35913086]
[94.61489105 527.27777100]
[93.05436707 542.19635010]
[91.82739258 557.14611816]
[90.93457794 572.11950684]
[90.04175568 587.09289551]
[89.14894104 602.06634521]
[97.11090088 612.21374512]
[96.05901337 624.66674805]
[87.10066223 632.79534912]
[85.98501587 647.75384521]
[84.86936951 662.71228027]
[98.11598969 670.29449463]
[106.75390625 682.87817383]
[109.06806183 697.96484375]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 207]
[10 206]
[11 205]
[13 202]
[14 201]
[15 200]
[16 199]
[20 198]
[21 197]
[22 196]
[23 187]
[24 186]
[25 185]
[26 184]
[27 183]
[29 182]
[30 181]
[32 180]
[33 179]
[34 178]
[35 177]
[36 176]
[37 175]
[39 173]
[40 172]
[41 171]
[42 170]
[43 169]
[44 168]
[46 166]
[53 165]
[54 164]
[55 163]
[56 162]
[57 161]
[59 159]
[60 158]
[61 157]
[64 154]
[65 153]
[66 152]
[68 151]
[70 149]
[71 138]
[72 137]
[73 136]
[74 135]
[75 130]
[76 129]
[77 127]
[78 126]
[79 125]
[83 122]
[85 120]
[87 118]
[88 117]
[89 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
