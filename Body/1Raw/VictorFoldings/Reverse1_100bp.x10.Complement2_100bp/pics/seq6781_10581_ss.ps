%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[93.10341644 394.57940674]
[95.41757202 379.49273682]
[104.05549622 366.90905762]
[117.30211639 359.32684326]
[116.18646240 344.36840820]
[115.07081604 329.40994263]
[113.95516968 314.45150757]
[102.33808899 323.94061279]
[87.64458466 320.92385864]
[80.70615387 307.62506104]
[86.63755035 293.84759521]
[101.06636810 289.74771118]
[113.35540771 298.34622192]
[113.35540771 283.34622192]
[110.21191406 276.65740967]
[113.46874237 268.12332153]
[113.69207001 253.12498474]
[113.91539764 238.12664795]
[106.36844635 225.28558350]
[114.31034851 211.60214233]
[114.53367615 196.60380554]
[114.75700378 181.60546875]
[112.64237976 166.75526428]
[108.24138641 152.41542053]
[103.84038544 138.07557678]
[99.43938446 123.73573303]
[95.03839111 109.39588165]
[89.68720245 95.38285828]
[83.40984344 81.75954437]
[70.60742188 72.46392822]
[72.30835724 57.66675949]
[66.03099060 44.04344559]
[59.75363159 30.42012787]
[53.47627258 16.79681206]
[46.79607773 3.36643553]
[39.71897125 -9.85909176]
[32.64186478 -23.08461952]
[30.55367661 -8.23068237]
[21.39636612 3.64970756]
[7.56363249 9.45104408]
[-7.32867908 7.65687132]
[-19.38775444 -1.26381767]
[-25.46138191 -14.97917652]
[-23.96192741 -29.90404320]
[-15.28134632 -42.13709259]
[-1.68872154 -48.48063660]
[13.26286793 -47.27648544]
[25.66452980 -38.84007645]
[20.62761497 -52.96910477]
[15.59069824 -67.09813690]
[10.55378151 -81.22716522]
[5.51686525 -95.35619354]
[0.16567950 -109.36921692]
[-5.49710703 -123.25924683]
[-11.15989399 -137.14927673]
[-16.82267952 -151.03929138]
[-22.48546600 -164.92932129]
[-37.67498016 -165.94918823]
[-50.86166763 -173.43237305]
[-59.45647049 -185.84808350]
[-61.79869843 -200.70321655]
[-57.47668839 -215.04299927]
[-47.39897537 -226.03869629]
[-53.06176376 -239.92871094]
[-58.72454834 -253.81874084]
[-64.38733673 -267.70877075]
[-78.85717773 -263.69128418]
[-93.69557953 -261.38082886]
[-108.70188904 -260.80868530]
[-123.67314148 -261.98254395]
[-138.40689087 -264.88659668]
[-152.70385742 -269.48150635]
[-166.37069702 -275.70513916]
[-179.22259521 -283.47338867]
[-191.08572388 -292.68112183]
[-201.79966736 -303.20385742]
[-211.21951294 -314.89929199]
[-219.21788025 -327.60922241]
[-225.68659973 -341.16180420]
[-230.53819275 -355.37371826]
[-233.70703125 -370.05279541]
[-235.15028381 -385.00048828]
[-234.84840393 -400.01464844]
[-232.80549622 -414.89227295]
[-229.04917908 -429.43209839]
[-223.63026428 -443.43750000]
[-216.62202454 -456.71911621]
[-208.11923218 -469.09729004]
[-198.23689270 -480.40463257]
[-187.10865784 -490.48822021]
[-174.88499451 -499.21166992]
[-161.73124695 -506.45703125]
[-147.82528687 -512.12634277]
[-133.35517883 -516.14282227]
[-118.51661682 -518.45233154]
[-103.51026917 -519.02343750]
[-88.53909302 -517.84857178]
[-73.80554962 -514.94354248]
[-59.50888443 -510.34768677]
[-45.84245682 -504.12313843]
[-32.99108124 -496.35403442]
[-21.12856483 -487.14550781]
[-10.41532803 -476.62203979]
[-0.99625802 -464.92599487]
[7.00126362 -452.21551514]
[13.46907902 -438.66250610]
[18.31971931 -424.45028687]
[21.48758316 -409.77099609]
[22.92983055 -394.82321167]
[22.62695694 -379.80905151]
[20.58305740 -364.93157959]
[16.82577324 -350.39202881]
[11.40591812 -336.38696289]
[4.39678907 -323.10580444]
[-4.10682297 -310.72821045]
[-13.98991680 -299.42153931]
[-25.11883545 -289.33868408]
[-37.34307098 -280.61605835]
[-50.49730682 -273.37155151]
[-44.83452225 -259.48153687]
[-39.17173386 -245.59150696]
[-33.50894928 -231.70147705]
[-18.61598015 -230.88601685]
[-5.50001574 -223.65545654]
[3.21160364 -211.39704895]
[5.74731731 -196.51113892]
[1.55138004 -181.94126892]
[-8.59543991 -170.59211731]
[-2.93265343 -156.70208740]
[2.73013330 -142.81205750]
[8.39291954 -128.92202759]
[14.05570602 -115.03200531]
[17.14636612 -113.33489990]
[19.56856918 -110.05648804]
[20.58804893 -105.52725220]
[19.64589500 -100.39311218]
[24.68281174 -86.26408386]
[29.71972656 -72.13504791]
[34.75664520 -58.00601959]
[39.79356003 -43.87699127]
[45.86739349 -30.16172409]
[52.94449997 -16.93619728]
[60.02160645 -3.71066999]
[62.66231918 -2.77004719]
[65.08955383 -0.72672737]
[66.88143158 2.34321713]
[67.65140533 6.21254158]
[67.09958649 10.51945114]
[73.37694550 24.14276695]
[79.65431213 37.76608276]
[85.93167114 51.38940048]
[98.28509521 59.71058655]
[97.03315735 75.48218536]
[103.31051636 89.10549927]
[106.85202789 74.52957153]
[117.63796234 64.10538483]
[132.32618713 61.06299210]
[146.36538696 66.34510803]
[155.40536499 78.31501770]
[156.64500427 93.26371002]
[149.70016479 106.55916595]
[136.72279358 114.08164978]
[121.73406219 113.50023651]
[109.37823486 104.99488831]
[113.77923584 119.33473206]
[118.18022919 133.67457581]
[122.58123016 148.01441956]
[126.98223114 162.35427856]
[129.52592468 147.57153320]
[135.91368103 133.99961853]
[145.68435669 122.61832428]
[158.13259888 114.24926758]
[172.35977173 109.49661255]
[187.33877563 108.70346069]
[201.98829651 111.92707062]
[215.25074768 118.93473053]
[226.16871643 129.22055054]
[233.95402527 142.04197693]
[238.04463196 156.47343445]
[238.14523315 171.47309875]
[234.24858093 185.95812988]
[226.63597107 198.88284302]
[215.85696411 209.31417847]
[202.68971252 216.49911499]
[188.08474731 219.91894531]
[173.09645081 219.32679749]
[158.80680847 214.76542664]
[146.24740601 206.56410217]
[136.32493591 195.31489563]
[129.75534058 181.82879639]
[129.53201294 196.82713318]
[129.30868530 211.82546997]
[136.83966064 225.73930359]
[128.91372681 238.34997559]
[128.69039917 253.34831238]
[128.46707153 268.34664917]
[128.35540771 283.34622192]
[128.35540771 298.34622192]
[128.91362000 313.33584595]
[130.02926636 328.29431152]
[131.14491272 343.25274658]
[132.26057434 358.21121216]
[146.48538208 363.74450684]
[156.89440918 374.90759277]
[161.42094421 389.48406982]
[159.16621399 404.57974243]
[150.57791138 417.19732666]
[137.36125183 424.83163452]
[122.14041138 425.96685791]
[107.93750000 420.37759399]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 202]
[5 201]
[6 200]
[7 199]
[13 198]
[14 197]
[16 196]
[17 195]
[18 194]
[20 192]
[21 191]
[22 190]
[23 168]
[24 167]
[25 166]
[26 165]
[27 164]
[28 154]
[29 153]
[31 151]
[32 150]
[33 149]
[34 148]
[35 143]
[36 142]
[37 141]
[48 140]
[49 139]
[50 138]
[51 137]
[52 136]
[53 132]
[54 131]
[55 130]
[56 129]
[57 128]
[63 122]
[64 121]
[65 120]
[66 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
