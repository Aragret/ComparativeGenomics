%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCACUCGGAUCCCACAACACUCACAUUUAAUCACGCUACUCAUCCCCUUCCCUCGGAUGAUCCCACAUCUUAUCCUUCAUACACGGACGCAAGUCCGCAxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[50.16669083 616.76977539]
[46.36774826 631.51727295]
[36.89382172 643.44055176]
[23.38632393 650.47387695]
[8.18551159 651.39862061]
[-6.07498264 646.05462646]
[-16.92444229 635.36779785]
[-22.48313141 621.18957520]
[-21.78797531 605.97656250]
[-14.95941353 592.36437988]
[-3.18053484 582.71154785]
[11.50789738 578.69036865]
[13.73301506 563.85632324]
[15.95813179 549.02227783]
[13.84163666 541.94116211]
[18.32839203 533.98461914]
[20.77412033 519.18530273]
[23.21984673 504.38604736]
[10.49879456 496.56912231]
[1.71588564 484.44454956]
[-1.76528263 469.84158325]
[0.61605716 454.97830200]
[8.52777386 442.12457275]
[20.79076767 433.25543213]
[35.55459976 429.74758911]
[38.00032806 414.94830322]
[32.44173050 401.12979126]
[42.32558823 388.77584839]
[44.77131653 373.97659302]
[46.99643326 359.14254761]
[49.00044632 344.27700806]
[51.00445938 329.41146851]
[53.00847244 314.54595947]
[55.01248550 299.68041992]
[53.17697144 296.66989136]
[52.70843887 292.62075806]
[54.07915878 288.18518066]
[57.45228577 284.20156860]
[52.10004044 270.30184937]
[62.16673279 258.09640503]
[64.83252716 243.33520508]
[67.49832153 228.57397461]
[70.16412354 213.81275940]
[68.25939178 206.67176819]
[72.98105621 198.85232544]
[75.86633301 184.13243103]
[78.75160217 169.41253662]
[81.63687134 154.69265747]
[84.52214813 139.97276306]
[87.40741730 125.25286865]
[90.29269409 110.53297424]
[85.94354248 97.24476624]
[94.98741913 86.58174896]
[97.87268829 71.86186218]
[100.75795746 57.14196777]
[103.09344482 42.32490158]
[104.87591553 27.43118286]
[106.65837860 12.53746605]
[108.44084930 -2.35625124]
[110.22331238 -17.24996758]
[112.00577545 -32.14368439]
[113.78824615 -47.03740311]
[115.57070923 -61.93112183]
[117.35317230 -76.82483673]
[119.13564301 -91.71855164]
[120.91810608 -106.61227417]
[122.70057678 -121.50598907]
[120.61310577 -130.39869690]
[124.62205505 -136.60757446]
[126.62606812 -151.47309875]
[128.63008118 -166.33862305]
[130.63409424 -181.20416260]
[128.64987183 -186.03219604]
[128.71000671 -190.67436218]
[130.40133667 -194.38305664]
[133.07389832 -196.68301392]
[135.73968506 -211.44422913]
[138.40548706 -226.20544434]
[133.24391174 -241.16099548]
[143.11993408 -252.31059265]
[145.78573608 -267.07180786]
[148.45152283 -281.83303833]
[150.67663574 -296.66708374]
[152.45910645 -311.56079102]
[154.24157715 -326.45449829]
[156.02403259 -341.34823608]
[142.78619385 -356.46243286]
[144.89904785 -376.13574219]
[160.55383301 -387.73065186]
[161.66947937 -402.68911743]
[162.78512573 -417.64758301]
[163.78938293 -432.61392212]
[164.45916748 -447.59896851]
[164.90577698 -462.59231567]
[165.35238647 -477.58566284]
[165.79899597 -492.57901001]
[166.24559021 -507.57235718]
[151.99746704 -512.65625000]
[140.01895142 -521.89587402]
[131.48358154 -534.38598633]
[127.22755432 -548.90289307]
[127.66783905 -564.02447510]
[132.76129150 -578.26916504]
[142.00892639 -590.24151611]
[154.50474548 -598.76849365]
[169.02452087 -603.01477051]
[184.14578247 -602.56439209]
[198.38706970 -597.46136475]
[210.35319519 -588.20574951]
[218.87182617 -575.70422363]
[223.10839844 -561.18157959]
[222.64785767 -546.06060791]
[217.53530884 -531.82275391]
[208.27163696 -519.86285400]
[195.76440430 -511.35260010]
[181.23895264 -507.12576294]
[180.79234314 -492.13238525]
[180.34573364 -477.13903809]
[179.89912415 -462.14569092]
[179.45252991 -447.15234375]
[182.01739502 -443.12365723]
[182.07868958 -437.44091797]
[178.76278687 -431.72109985]
[181.50259399 -424.85705566]
[177.74357605 -416.53192139]
[176.62792969 -401.57345581]
[175.51228333 -386.61502075]
[184.05842590 -380.92868042]
[189.51574707 -372.13931274]
[190.84255981 -361.79751587]
[187.73298645 -351.76086426]
[180.68409729 -343.86022949]
[170.91775513 -339.56576538]
[169.13528442 -324.67205811]
[167.35282898 -309.77832031]
[165.57035828 -294.88461304]
[167.19493103 -292.60012817]
[168.01246643 -289.53445435]
[167.72091675 -285.99182129]
[166.13377380 -282.37994385]
[163.21273804 -279.16723633]
[160.54695129 -264.40600586]
[157.88114929 -249.64480591]
[163.23339844 -235.74507141]
[153.16670227 -223.53964233]
[150.50090027 -208.77842712]
[147.83511353 -194.01721191]
[145.49961853 -179.20014954]
[143.49560547 -164.33460999]
[141.49159241 -149.46908569]
[139.48757935 -134.60356140]
[137.59428406 -119.72352600]
[135.81182861 -104.82980347]
[134.02935791 -89.93608856]
[132.24688721 -75.04237366]
[130.46443176 -60.14865494]
[128.68196106 -45.25493622]
[126.89949799 -30.36121941]
[125.11702728 -15.46750259]
[123.33456421 -0.57378531]
[121.55209351 14.31993198]
[119.76963043 29.21364975]
[117.98716736 44.10736847]
[131.21255493 37.02999878]
[145.05139160 42.81674194]
[149.30221558 57.20182419]
[140.83146667 69.58109283]
[125.88346863 70.82901764]
[115.47785187 60.02724075]
[112.59258270 74.74713135]
[109.70730591 89.46702576]
[114.05645752 102.75523376]
[105.01258087 113.41825104]
[102.12731171 128.13813782]
[99.24204254 142.85803223]
[96.35676575 157.57792664]
[93.47149658 172.29782104]
[90.58621979 187.01770020]
[87.70095062 201.73759460]
[84.92533875 216.47856140]
[82.25954437 231.23977661]
[79.59375000 246.00099182]
[76.92794800 260.76220703]
[82.08952332 275.71777344]
[72.21350098 286.86737061]
[69.87801361 301.68444824]
[67.87400055 316.54995728]
[65.86998749 331.41549683]
[63.86597443 346.28103638]
[61.86196136 361.14654541]
[64.01571655 367.39736938]
[62.86248779 372.96218872]
[59.57058716 376.42230225]
[57.12485886 391.22158813]
[62.50852203 406.09863281]
[52.79959869 417.39404297]
[50.35387039 432.19329834]
[63.20412827 440.26464844]
[71.96160126 452.60766602]
[75.31718445 467.32342529]
[72.78990173 482.16256714]
[64.79557037 494.86907959]
[52.57875443 503.52328491]
[38.01911926 506.83178711]
[35.57339096 521.63104248]
[33.12766266 536.43029785]
[30.79217529 551.24737549]
[28.56705856 566.08142090]
[26.34194183 580.91546631]
[39.20412064 589.06927490]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 209]
[13 208]
[14 207]
[16 206]
[17 205]
[18 204]
[25 197]
[26 196]
[28 194]
[29 193]
[30 190]
[31 189]
[32 188]
[33 187]
[34 186]
[38 185]
[40 183]
[41 182]
[42 181]
[43 180]
[45 179]
[46 178]
[47 177]
[48 176]
[49 175]
[50 174]
[51 173]
[53 171]
[54 170]
[55 169]
[56 163]
[57 162]
[58 161]
[59 160]
[60 159]
[61 158]
[62 157]
[63 156]
[64 155]
[65 154]
[66 153]
[67 152]
[69 151]
[70 150]
[71 149]
[72 148]
[76 147]
[77 146]
[78 145]
[80 143]
[81 142]
[82 141]
[83 136]
[84 135]
[85 134]
[86 133]
[89 127]
[90 126]
[91 125]
[92 123]
[93 120]
[94 119]
[95 118]
[96 117]
[97 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
