%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGAUAAUACUCAGGAUCAACUGAACUUCACCUCUUCCGAUGCUAAAAAAACUACAGUAAAACACAUUCCCGCGUCUGACGACGCUUGUCUCACCACUAUxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[50.26377869 609.38336182]
[36.11485291 614.70306396]
[21.02641296 615.61431885]
[6.34010983 612.03607178]
[-6.63816118 604.28649902]
[-16.75437927 593.05468750]
[-23.10902023 579.33935547]
[-25.13702965 564.36010742]
[-22.65808105 549.44885254]
[-15.89259911 535.93145752]
[-5.44216728 525.00988770]
[7.76396942 517.65539551]
[22.55153084 514.52178955]
[23.88976479 499.58157349]
[25.22799873 484.64138794]
[26.56623268 469.70120239]
[27.90446663 454.76101685]
[29.24270058 439.82083130]
[30.58093643 424.88064575]
[24.00996017 411.51385498]
[32.94759750 398.45898438]
[34.28583145 383.51879883]
[31.96530151 379.34457397]
[32.24235916 373.66830444]
[35.89282227 368.15597534]
[37.67528915 353.26226807]
[39.45775604 338.36853027]
[37.57762146 335.38568115]
[37.04885483 331.34396362]
[38.35338211 326.88845825]
[41.66682434 322.85507202]
[44.11255264 308.05581665]
[46.55828094 293.25653076]
[49.00400543 278.45727539]
[42.21683502 268.44424438]
[44.13329315 256.09469604]
[54.26495743 248.11271667]
[56.93075180 233.35150146]
[59.59654999 218.59028625]
[62.26234436 203.82905579]
[50.53789520 213.18519592]
[35.55887222 213.97821045]
[22.91207886 205.91230774]
[17.31445885 191.99589539]
[20.85378456 177.41943359]
[32.20997620 167.61959839]
[47.14745331 166.25146484]
[60.09490585 173.82533264]
[66.22338867 187.51748657]
[70.62438202 173.17764282]
[66.96178436 158.74037170]
[78.40753174 147.81767273]
[82.80853271 133.47782898]
[86.99554443 119.07404327]
[90.96763611 104.60951996]
[89.89570618 96.62055969]
[95.10804749 89.96005249]
[99.29505920 75.55626678]
[95.71739960 60.14487839]
[106.69977570 50.08323288]
[110.88678741 35.67945099]
[114.85887909 21.21492577]
[118.61518097 6.69286728]
[122.37148285 -7.82919216]
[126.12778473 -22.35125160]
[129.88407898 -36.87331009]
[133.64038086 -51.39537048]
[136.63516235 -66.09337616]
[138.86027527 -80.92741394]
[141.08538818 -95.76145935]
[143.31051636 -110.59550476]
[134.51835632 -118.59767914]
[130.71960449 -129.73637390]
[132.74847412 -141.20709229]
[139.98701477 -150.18034363]
[150.54690552 -154.49948120]
[153.21270752 -169.26069641]
[155.87849426 -184.02191162]
[158.54429626 -198.78314209]
[161.21009827 -213.54435730]
[163.87588501 -228.30557251]
[166.54168701 -243.06678772]
[169.20747375 -257.82800293]
[171.87327576 -272.58923340]
[170.00077820 -278.92999268]
[171.40133667 -284.43774414]
[174.84446716 -287.74743652]
[177.94857788 -302.42272949]
[179.28680420 -317.36291504]
[178.84019470 -332.35626221]
[178.39360046 -347.34960938]
[177.94699097 -362.34295654]
[169.80223083 -375.90664673]
[177.15716553 -388.85864258]
[176.71055603 -403.85198975]
[162.18510437 -408.07882690]
[149.67787170 -416.58908081]
[140.41419983 -428.54901123]
[135.30165100 -442.78686523]
[134.84111023 -457.90783691]
[139.07768250 -472.43045044]
[147.59631348 -484.93197632]
[159.56242371 -494.18762207]
[173.80372620 -499.29061890]
[188.92498779 -499.74105835]
[203.44476318 -495.49475098]
[215.94058228 -486.96774292]
[225.18821716 -474.99542236]
[230.28167725 -460.75070190]
[230.72195435 -445.62915039]
[226.46592712 -431.11221313]
[217.93055725 -418.62213135]
[205.95202637 -409.38250732]
[191.70391846 -404.29861450]
[192.15051270 -389.30526733]
[200.26332092 -376.81399536]
[192.94033813 -362.78958130]
[193.38694763 -347.79623413]
[193.83355713 -332.80285645]
[194.28015137 -317.80950928]
[201.14410400 -331.14691162]
[212.10864258 -341.38305664]
[225.88569641 -347.31542969]
[240.85673523 -348.24707031]
[255.26298523 -344.06854248]
[267.41201782 -335.27075195]
[275.87655640 -322.88720703]
[279.66220093 -308.37277222]
[278.32421875 -293.43258667]
[272.01983643 -279.82174683]
[261.48962402 -269.13931274]
[247.97068787 -262.64019775]
[233.05122375 -261.08792114]
[218.48394775 -264.66485596]
[205.98020935 -272.95077515]
[197.00894165 -284.97229004]
[192.62387085 -299.31863403]
[189.51976013 -284.64331055]
[186.63449097 -269.92343140]
[183.96868896 -255.16220093]
[181.30290222 -240.40098572]
[178.63710022 -225.63977051]
[175.97131348 -210.87855530]
[173.30551147 -196.11734009]
[170.63972473 -181.35612488]
[167.97392273 -166.59490967]
[165.30812073 -151.83369446]
[176.63229370 -137.45039368]
[173.79823303 -119.04167938]
[158.14454651 -108.37038422]
[155.91943359 -93.53634644]
[153.69432068 -78.70230103]
[151.46920776 -63.86825562]
[163.47947693 -72.85454559]
[178.46263123 -72.14398956]
[189.56858826 -62.06143951]
[191.71983337 -47.21650696]
[183.93286133 -34.39608765]
[169.76777649 -29.46151352]
[155.70063782 -34.66880035]
[148.16244507 -47.63906860]
[144.40614319 -33.11700821]
[140.64984131 -18.59494972]
[136.89353943 -4.07289124]
[133.13723755 10.44916821]
[129.38093567 24.97122765]
[130.98982239 29.46795464]
[129.79095459 35.02310944]
[125.29056549 39.86646271]
[121.10355377 54.27024460]
[124.98069763 68.65137482]
[113.69883728 79.74327850]
[109.51183319 94.14706421]
[105.43215942 108.58161163]
[101.46006775 123.04613495]
[102.75939941 129.52867126]
[100.87304688 134.88952637]
[97.14837646 137.87881470]
[92.74738312 152.21867371]
[96.09519196 167.68161011]
[84.96423340 177.57862854]
[80.56323242 191.91848755]
[77.02355957 206.49485779]
[74.35776520 221.25607300]
[71.69197083 236.01728821]
[69.02617645 250.77850342]
[75.65306091 267.95889282]
[63.80327606 280.90298462]
[61.35755157 295.70227051]
[58.91182327 310.50152588]
[56.46609497 325.30081177]
[54.35147095 340.15100098]
[52.56900406 355.04473877]
[50.78654099 369.93844604]
[49.22601700 384.85705566]
[47.88778305 399.79724121]
[54.36303711 414.23266602]
[45.52112198 426.21890259]
[44.18288803 441.15908813]
[42.84465408 456.09927368]
[41.50641632 471.03945923]
[40.16818237 485.97964478]
[38.82994843 500.91983032]
[37.49171448 515.85998535]
[51.48697281 521.57177734]
[63.17583466 531.15625000]
[71.51893616 543.76116943]
[75.77441406 558.26568604]
[75.56387329 573.38018799]
[70.90603638 587.76055908]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 204]
[14 203]
[15 202]
[16 201]
[17 200]
[18 199]
[19 198]
[21 196]
[22 195]
[25 194]
[26 193]
[27 192]
[31 191]
[32 190]
[33 189]
[34 188]
[37 186]
[38 185]
[39 184]
[40 183]
[49 182]
[50 181]
[52 179]
[53 178]
[54 175]
[55 174]
[57 173]
[58 172]
[60 170]
[61 169]
[62 166]
[63 165]
[64 164]
[65 163]
[66 162]
[67 161]
[68 153]
[69 152]
[70 151]
[71 150]
[76 147]
[77 146]
[78 145]
[79 144]
[80 143]
[81 142]
[82 141]
[83 140]
[84 139]
[87 138]
[88 137]
[89 120]
[90 119]
[91 118]
[92 117]
[94 115]
[95 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
