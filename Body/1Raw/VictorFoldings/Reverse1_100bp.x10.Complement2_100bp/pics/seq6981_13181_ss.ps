%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[36.66857910 595.08178711]
[22.84003258 601.76513672]
[7.52368116 600.62280273]
[-5.16045523 591.96203613]
[-11.80040741 578.11260986]
[-10.61006165 562.79992676]
[-1.90961540 550.14300537]
[11.96055603 543.54650879]
[13.07620430 528.58807373]
[14.19185352 513.62957764]
[15.30750179 498.67114258]
[8.53824329 485.40365601]
[17.28052139 472.21716309]
[18.39617157 457.25872803]
[19.51181984 442.30026245]
[8.82435608 452.82537842]
[-5.99088573 455.17242432]
[-19.40818596 448.46600342]
[-26.42322350 435.20745850]
[-24.41956329 420.34188843]
[-14.14452171 409.41378784]
[0.56956655 406.49905396]
[14.23470974 412.68484497]
[21.75439453 425.66513062]
[24.63966751 410.94522095]
[22.84147263 403.77667236]
[27.67903137 396.02838135]
[30.78314209 381.35308838]
[33.88725281 366.67779541]
[36.99136353 352.00247192]
[40.09547043 337.32717896]
[43.09024429 322.62918091]
[45.97551727 307.90927124]
[48.86079025 293.18939209]
[51.74606323 278.46948242]
[41.48671341 267.70455933]
[39.51005936 252.78622437]
[46.78190231 239.40812683]
[60.69767761 232.80075073]
[63.58295059 218.08085632]
[61.92987823 214.96643066]
[61.70318604 210.89657593]
[63.33548737 206.55044556]
[66.93974304 202.77467346]
[70.47941589 188.19830322]
[74.01908112 173.62191772]
[77.55875397 159.04554749]
[81.09842682 144.46917725]
[84.63809967 129.89279175]
[83.16179657 122.65109253]
[88.34050751 115.12654877]
[81.07765961 102.58871460]
[84.70613098 88.56086731]
[97.13743591 81.11714935]
[100.89373779 66.59509277]
[104.65003967 52.07303238]
[108.40633392 37.55097198]
[112.16263580 23.02891350]
[115.91893768 8.50685501]
[119.67523956 -6.01520443]
[106.56610107 -13.47079277]
[95.84193420 -24.05746078]
[88.22953033 -37.04927444]
[84.24263000 -51.55759430]
[84.14721680 -66.59184265]
[87.94377899 -81.12714386]
[95.36772156 -94.17420197]
[105.90774536 -104.84660339]
[118.84111023 -112.42108154]
[133.28314209 -116.38647461]
[148.24780273 -116.47827911]
[152.00410461 -131.00033569]
[155.76040649 -145.52239990]
[159.51670837 -160.04444885]
[162.72998047 -174.69624329]
[165.39578247 -189.45745850]
[168.06156921 -204.21867371]
[170.72737122 -218.97988892]
[173.39315796 -233.74111938]
[175.94898987 -248.52175903]
[170.56533813 -263.39883423]
[180.27426147 -274.69421387]
[182.71998596 -289.49349976]
[185.16571045 -304.29275513]
[176.23219299 -317.05325317]
[178.92332458 -332.02697754]
[191.14355469 -340.46508789]
[185.75988770 -355.34213257]
[195.46881104 -366.63754272]
[197.91453552 -381.43679810]
[199.14151001 -396.38653564]
[199.14151001 -411.38653564]
[199.14151001 -426.38653564]
[199.14151001 -441.38653564]
[199.14151001 -456.38653564]
[199.14151001 -471.38653564]
[199.14151001 -486.38653564]
[199.14151001 -501.38653564]
[185.08432007 -507.17135620]
[174.31445312 -517.89880371]
[168.47421265 -531.93304443]
[168.45422363 -547.13397217]
[174.25750732 -561.18353271]
[184.99913025 -571.93927002]
[199.04104614 -577.76104736]
[214.24197388 -577.76104736]
[228.28390503 -571.93927002]
[239.02551270 -561.18353271]
[244.82879639 -547.13397217]
[244.80880737 -531.93304443]
[238.96856689 -517.89880371]
[228.19869995 -507.17135620]
[214.14151001 -501.38653564]
[214.14151001 -486.38653564]
[214.14151001 -471.38653564]
[214.14151001 -456.38653564]
[214.14151001 -441.38653564]
[214.14151001 -426.38653564]
[214.14151001 -411.38653564]
[214.14151001 -396.38653564]
[222.59942627 -408.77459717]
[235.80198669 -415.89443970]
[250.79971313 -416.15551758]
[264.24206543 -409.49945068]
[273.12600708 -397.41326904]
[275.46682739 -382.59704590]
[270.74157715 -368.36074829]
[260.00592041 -357.88482666]
[245.65817261 -353.50961304]
[230.90371704 -356.21252441]
[219.03869629 -365.38973999]
[212.71380615 -378.99108887]
[210.26808167 -364.19180298]
[215.82667542 -350.37329102]
[205.94282532 -338.01934814]
[214.79847717 -326.09823608]
[212.52899170 -311.05484009]
[199.96498108 -301.84704590]
[197.51925659 -287.04776001]
[195.07353210 -272.24850464]
[200.63212585 -258.42999268]
[190.74826050 -246.07603455]
[192.75909424 -238.96418762]
[188.15438843 -231.07531738]
[185.48858643 -216.31410217]
[182.82278442 -201.55288696]
[180.15699768 -186.79167175]
[177.49119568 -172.03044128]
[191.11439514 -178.30807495]
[204.58427429 -171.70788574]
[207.97132874 -157.09530640]
[198.77877808 -145.24217224]
[183.78300476 -144.88616943]
[174.03877258 -156.28816223]
[170.28247070 -141.76609802]
[166.52616882 -127.24403381]
[162.76986694 -112.72197723]
[175.81314087 -105.38559723]
[186.52110291 -94.91485596]
[194.15963745 -82.01922607]
[198.20286560 -67.57468414]
[198.36941528 -52.56426239]
[194.64190674 -38.01109695]
[187.26861572 -24.90871620]
[176.74693298 -14.15321255]
[163.78979492 -6.48195171]
[149.27735901 -2.42302656]
[134.19729614 -2.25890374]
[130.44099426 12.26315594]
[126.68470001 26.78521538]
[122.92839813 41.30727386]
[119.17209625 55.82933426]
[115.41579437 70.35139465]
[111.65949249 84.87345123]
[118.92234039 97.41128540]
[115.29386902 111.43913269]
[102.86256409 118.88285065]
[99.21447754 133.43246460]
[95.67480469 148.00885010]
[92.13513184 162.58522034]
[88.59545898 177.16159058]
[85.05578613 191.73797607]
[81.51611328 206.31434631]
[78.30284119 220.96614075]
[75.41757202 235.68601990]
[85.80919647 247.05793762]
[87.49244690 262.19134521]
[80.03009796 275.25952148]
[66.46595764 281.35476685]
[63.58068085 296.07467651]
[60.69541168 310.79455566]
[57.81013870 325.51443481]
[59.23041534 334.53778076]
[54.77077484 340.43127441]
[51.66666412 355.10659790]
[48.56255341 369.78189087]
[45.45844269 384.45718384]
[42.35433197 399.13250732]
[39.35955811 413.83050537]
[36.47428513 428.55038452]
[34.47027206 443.41592407]
[33.35462570 458.37435913]
[32.23897552 473.33282471]
[38.92843628 487.67025757]
[30.26595497 499.78680420]
[29.15030670 514.74523926]
[28.03465843 529.70367432]
[26.91900826 544.66217041]
[39.65719223 553.24322510]
[46.38383484 567.05072021]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 208]
[9 207]
[10 206]
[11 205]
[13 203]
[14 202]
[15 201]
[24 200]
[25 199]
[27 198]
[28 197]
[29 196]
[30 195]
[31 194]
[32 192]
[33 191]
[34 190]
[35 189]
[39 185]
[40 184]
[44 183]
[45 182]
[46 181]
[47 180]
[48 179]
[49 178]
[51 177]
[54 174]
[55 173]
[56 172]
[57 171]
[58 170]
[59 169]
[60 168]
[71 157]
[72 156]
[73 155]
[74 154]
[75 148]
[76 147]
[77 146]
[78 145]
[79 144]
[80 142]
[82 140]
[83 139]
[84 138]
[87 135]
[89 133]
[90 132]
[91 120]
[92 119]
[93 118]
[94 117]
[95 116]
[96 115]
[97 114]
[98 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
