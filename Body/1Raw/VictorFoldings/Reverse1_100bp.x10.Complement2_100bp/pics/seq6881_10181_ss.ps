%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[-13.79952240 471.86813354]
[-9.83872318 486.37615967]
[-8.45757961 501.35159302]
[-9.69806385 516.33935547]
[-13.52248001 530.88391113]
[-19.81460762 544.54339600]
[-28.38323593 556.90258789]
[-38.96797180 567.58593750]
[-51.24716187 576.26879883]
[-64.84765625 582.68737793]
[-79.35614014 586.64654541]
[-94.33172607 588.02600098]
[-109.31932831 586.78381348]
[-123.86347961 582.95770264]
[-137.52220154 576.66406250]
[-149.88043213 568.09399414]
[-160.56260681 557.50805664]
[-169.24409485 545.22790527]
[-175.66110229 531.62670898]
[-179.61862183 517.11773682]
[-180.99636841 502.14199829]
[-179.75247192 487.15454102]
[-175.92475891 472.61083984]
[-169.62954712 458.95281982]
[-161.05810547 446.59555054]
[-150.47094727 435.91458130]
[-138.18978882 427.23449707]
[-124.58784485 420.81903076]
[-110.07846069 416.86315918]
[-95.10255432 415.48709106]
[-80.11524200 416.73269653]
[-65.57196045 420.56204224]
[-59.29459763 406.93875122]
[-53.01723480 393.31542969]
[-53.07302475 385.92498779]
[-46.54365921 379.53707886]
[-40.06416321 366.00872803]
[-33.58466721 352.48037720]
[-27.10517311 338.95205688]
[-20.62567711 325.42370605]
[-14.14618111 311.89535522]
[-26.92319298 319.75332642]
[-41.83522034 321.37548828]
[-56.00299072 316.44857788]
[-66.69092560 305.92395020]
[-71.83535004 291.83370972]
[-70.44296265 276.89846802]
[-62.78260422 264.00201416]
[-50.33337402 255.63441467]
[-35.49902725 253.41133118]
[-21.14383507 257.76202393]
[-10.03956604 267.84643555]
[-4.33027983 281.71740723]
[-5.11869383 296.69790649]
[3.66190934 284.53646851]
[12.44251251 272.37500000]
[21.22311592 260.21356201]
[30.00371933 248.05209351]
[38.41833878 235.63459778]
[46.45951080 222.97207642]
[54.40619659 210.25003052]
[62.25794983 197.46919250]
[70.10970306 184.68835449]
[75.87574005 170.84086609]
[79.41541290 156.26449585]
[82.84647369 141.66217041]
[86.16873169 127.03470612]
[89.49098969 112.40724945]
[83.88928986 102.19636536]
[86.55328369 90.85861969]
[96.11619568 84.21091461]
[99.65586853 69.63454437]
[95.39361572 54.39827728]
[105.91576385 43.85627747]
[109.45543671 29.27990150]
[112.99510956 14.70352650]
[111.50334930 8.26254940]
[113.22924805 2.84791350]
[116.86325836 -0.25095671]
[120.83535767 -14.71548080]
[124.80744934 -29.18000412]
[128.77955627 -43.64452744]
[132.75164795 -58.10905075]
[136.72373962 -72.57357788]
[140.69583130 -87.03810120]
[143.69061279 -101.73610687]
[134.38111877 -114.22494507]
[136.62524414 -129.27215576]
[148.58882141 -138.07037354]
[150.59283447 -152.93589783]
[139.73365784 -166.65075684]
[142.10656738 -183.64146423]
[155.75950623 -193.46165466]
[149.71691895 -208.08348083]
[158.91178894 -219.80114746]
[152.86920166 -234.42295837]
[162.06408691 -246.14062500]
[163.84654236 -261.03433228]
[165.62901306 -275.92807007]
[151.73835754 -281.86322021]
[140.08337402 -291.47250366]
[131.60888672 -303.97689819]
[127.00188446 -318.36273193]
[126.63584137 -333.46380615]
[130.54042053 -348.05596924]
[138.39909363 -360.95626831]
[149.57481384 -371.11895752]
[163.16159058 -377.72018433]
[178.05801392 -380.22479248]
[193.05650330 -378.42980957]
[206.94119263 -372.48068237]
[218.58650208 -362.85971069]
[227.04843140 -350.34680176]
[231.64097595 -335.95635986]
[231.99185181 -320.85491943]
[228.07261658 -306.26669312]
[220.20098877 -293.37426758]
[209.01506042 -283.22283936]
[195.42166138 -276.63525391]
[180.52273560 -274.14559937]
[178.74026489 -259.25186157]
[176.95779419 -244.35815430]
[183.12788391 -230.80163574]
[173.80551147 -218.01867676]
[179.97560120 -204.46214294]
[170.65322876 -191.67918396]
[179.95611572 -182.76370239]
[182.46281433 -169.92631531]
[177.03826904 -157.81083679]
[165.45835876 -150.93188477]
[163.45434570 -136.06636047]
[172.66101074 -124.41419220]
[170.84042358 -109.30989075]
[158.55613708 -99.73209381]
[169.35960388 -110.13809967]
[184.05293274 -113.15576935]
[198.08322144 -107.85002136]
[207.10304260 -95.86491394]
[208.31750488 -80.91416168]
[201.35029602 -67.63040924]
[188.36027527 -60.12978363]
[173.37254333 -60.73642731]
[161.03121948 -69.26236725]
[155.16035461 -83.06600189]
[151.18826294 -68.60147858]
[147.21617126 -54.13695526]
[143.24407959 -39.67243195]
[139.27197266 -25.20790863]
[135.29988098 -10.74338436]
[131.32778931 3.72113943]
[127.57148743 18.24319839]
[124.03181458 32.81957245]
[120.49214172 47.39595032]
[125.00756836 61.58961487]
[114.23223877 73.17421722]
[110.69256592 87.75058746]
[115.82865906 103.71920776]
[104.11845398 115.72950745]
[100.79619598 130.35696411]
[97.47393036 144.98442078]
[98.62492371 154.04605103]
[93.99179077 159.80416870]
[90.45211792 174.38053894]
[100.18871307 162.97007751]
[112.61187744 154.56382751]
[126.82476807 149.76864624]
[141.80134583 148.93070984]
[156.46043396 152.11050415]
[169.74378967 159.07846069]
[180.69245911 169.33158875]
[188.51606750 182.12966919]
[192.64982605 196.54882812]
[192.79528809 211.54812622]
[188.94197083 226.04473877]
[181.36804199 238.99215698]
[170.62026978 249.45570374]
[157.47456360 256.67996216]
[142.87989807 260.14346313]
[127.88988495 259.59616089]
[113.58666992 255.07751465]
[101.00280762 246.91378784]
[91.04674530 235.69430542]
[84.43721008 222.22901917]
[81.65135956 207.48999023]
[82.89054871 192.54010010]
[75.03879547 205.32095337]
[67.18703461 218.10179138]
[65.36140442 227.05192566]
[59.12203598 231.01324463]
[51.08086395 243.67576599]
[51.05232239 248.01779175]
[49.77231216 251.74955750]
[47.58634567 254.55258179]
[44.90788269 256.25329590]
[42.16517639 256.83270264]
[33.38457108 268.99414062]
[24.60396767 281.15560913]
[15.82336521 293.31707764]
[7.04276180 305.47851562]
[-0.61783558 318.37484741]
[-7.09733152 331.90319824]
[-13.57682705 345.43154907]
[-20.05632401 358.95986938]
[-26.53581810 372.48822021]
[-33.01531601 386.01657104]
[-39.39392090 399.59277344]
[-45.67127991 413.21609497]
[-51.94864273 426.83941650]
[-39.58847427 435.40664673]
[-28.90390015 445.99017334]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 208]
[33 207]
[34 206]
[36 205]
[37 204]
[38 203]
[39 202]
[40 201]
[41 200]
[54 199]
[55 198]
[56 197]
[57 196]
[58 195]
[59 190]
[60 189]
[61 187]
[62 186]
[63 185]
[64 163]
[65 162]
[66 160]
[67 159]
[68 158]
[71 156]
[72 155]
[74 153]
[75 152]
[76 151]
[79 150]
[80 149]
[81 148]
[82 147]
[83 146]
[84 145]
[85 144]
[86 134]
[89 131]
[90 130]
[93 126]
[95 124]
[97 122]
[98 121]
[99 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
