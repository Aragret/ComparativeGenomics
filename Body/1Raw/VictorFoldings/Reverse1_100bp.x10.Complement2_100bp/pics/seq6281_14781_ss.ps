%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[124.80411530 579.34887695]
[109.97484589 576.11505127]
[97.31730652 567.73944092]
[88.54331970 555.35473633]
[84.83948517 540.63580322]
[86.70673370 525.57336426]
[93.89252472 512.20440674]
[105.42504120 502.33700562]
[119.74459839 497.30563354]
[120.19120789 482.31228638]
[120.63780975 467.31893921]
[121.08441925 452.32559204]
[121.53102112 437.33224487]
[121.64269257 422.33264160]
[121.41936493 407.33432007]
[121.19603729 392.33596802]
[120.97270966 377.33764648]
[111.17417145 362.77893066]
[120.27629852 346.77166748]
[116.93504333 340.17941284]
[119.93633270 331.55212402]
[119.71300507 316.55380249]
[109.91446686 301.99508667]
[119.01659393 285.98782349]
[118.56999207 270.99447632]
[118.12338257 256.00112915]
[110.01057434 243.50985718]
[117.33356476 229.48544312]
[116.88695526 214.49209595]
[116.44035339 199.49873352]
[115.99374390 184.50538635]
[113.54801941 169.70611572]
[109.14701843 155.36627197]
[104.74601746 141.02642822]
[100.34502411 126.68657684]
[95.94402313 112.34673309]
[91.11802673 98.14427185]
[85.87130737 84.09180450]
[80.62458801 70.03932953]
[75.37787628 55.98686218]
[70.13115692 41.93439102]
[64.88443756 27.88191795]
[60.85704041 24.56119919]
[58.71985245 20.43982506]
[58.46131516 16.37187576]
[59.73258209 13.08307362]
[55.11857224 -1.18965936]
[50.50456238 -15.46239281]
[45.86196518 -20.16960335]
[44.49823761 -25.68660164]
[45.97251511 -30.22923851]
[34.69065857 -41.32114029]
[38.56780243 -55.70227432]
[34.38079071 -70.10605621]
[30.19377899 -84.50983429]
[26.00676727 -98.91362000]
[21.81975746 -113.31739807]
[16.41930580 -120.68441772]
[17.67934799 -127.96686554]
[13.70725155 -142.43139648]
[2.59178638 -153.69003296]
[6.68261433 -168.01185608]
[-7.30710268 -170.02046204]
[-19.43785858 -177.18766785]
[-27.89496040 -188.40296936]
[-31.42792702 -201.95320129]
[-29.53530121 -215.78422546]
[-22.53554344 -227.81233215]
[-11.51400948 -236.23812866]
[-15.27031040 -250.76019287]
[-19.02661133 -265.28225708]
[-22.78291130 -279.80432129]
[-26.53921318 -294.32635498]
[-30.29551315 -308.84841919]
[-34.05181503 -323.37048340]
[-37.80811310 -337.89254761]
[-52.74921799 -336.28588867]
[-67.76502228 -336.87191772]
[-82.53546906 -339.63809204]
[-96.74572754 -344.52548218]
[-110.09289551 -351.42990112]
[-122.29248047 -360.20416260]
[-133.08445740 -370.66128540]
[-142.23878479 -382.57833862]
[-149.56033325 -395.70132446]
[-154.89306641 -409.75051880]
[-158.12329102 -424.42645264]
[-159.18215942 -439.41635132]
[-158.04710388 -454.40066528]
[-154.74232483 -469.05999756]
[-149.33827209 -483.08190918]
[-141.95010376 -496.16751099]
[-132.73532104 -508.03787231]
[-121.89034271 -518.44000244]
[-109.64631653 -527.15216064]
[-96.26422119 -533.98864746]
[-82.02931213 -538.80371094]
[-67.24499512 -541.49481201]
[-52.22640228 -542.00451660]
[-37.29365921 -540.32189941]
[-22.76505470 -536.48297119]
[-8.95026875 -530.56945801]
[3.85623741 -522.70745850]
[15.38149166 -513.06451416]
[25.37983322 -501.84619141]
[33.63814545 -489.29156494]
[39.98040009 -475.66830444]
[44.27141571 -461.26672363]
[46.41972733 -446.39385986]
[46.37954330 -431.36666870]
[44.15172195 -416.50549316]
[39.78374481 -402.12707520]
[33.36872101 -388.53793335]
[25.04338455 -376.02764893]
[14.98519039 -364.86294556]
[3.40853000 -355.28179932]
[-9.43983936 -347.48837280]
[-23.28605461 -341.64883423]
[-19.52975464 -327.12680054]
[-15.77345371 -312.60473633]
[-12.01715279 -298.08267212]
[-8.26085186 -283.56060791]
[-4.50455189 -269.03854370]
[-0.74825096 -254.51649475]
[3.00804973 -239.99443054]
[18.73939705 -237.18812561]
[31.71928406 -227.76814270]
[39.31929398 -213.57928467]
[39.97315598 -197.43826294]
[33.49924850 -182.57447815]
[21.14713860 -171.98394775]
[31.97849274 -161.75990295]
[28.17177582 -146.40348816]
[32.14387131 -131.93896484]
[36.22353745 -117.50440979]
[40.41054916 -103.10063171]
[44.59756088 -88.69684601]
[48.78457260 -74.29306793]
[52.97158432 -59.88928604]
[63.95395660 -49.82763672]
[60.37629700 -34.41624832]
[64.77729797 -20.07640266]
[69.39130402 -5.80366850]
[74.00531006 8.46906471]
[78.93690491 22.63520050]
[84.18362427 36.68767166]
[89.43034363 50.74014282]
[94.67706299 64.79261017]
[99.92378235 78.84508514]
[105.17050171 92.89755249]
[107.82615662 94.39321899]
[109.99629211 96.88821411]
[111.30973053 100.20458984]
[111.46622467 104.02973938]
[110.28387451 107.94573212]
[114.68486786 122.28557587]
[119.08586884 136.62542725]
[123.48686981 150.96527100]
[127.88786316 165.30511475]
[130.69253540 150.56965637]
[137.85827637 137.39195251]
[148.70210266 127.02799988]
[162.19046021 120.46564484]
[177.03768921 118.33036041]
[191.82868958 120.82566833]
[205.15364075 127.71373749]
[215.74252319 138.33804321]
[222.58604431 151.68592834]
[225.03195190 166.48516846]
[222.84709167 181.32519531]
[216.23973083 194.79154968]
[205.83963013 205.60070801]
[192.63806152 212.72239685]
[177.89331055 215.47784424]
[163.01075745 213.60440063]
[149.40892029 207.28063965]
[138.38423157 197.10929871]
[130.98709106 184.05877686]
[131.43370056 199.05213928]
[131.88031006 214.04548645]
[132.32691956 229.03883362]
[140.47166443 242.60252380]
[133.11672974 255.55451965]
[133.56333923 270.54788208]
[134.00994873 285.54122925]
[142.84545898 294.93783569]
[142.90876770 307.43502808]
[134.71134949 316.33047485]
[134.93467712 331.32879639]
[135.26965332 346.32507324]
[144.10516357 355.72167969]
[144.16847229 368.21887207]
[135.97103882 377.11431885]
[136.19436646 392.11264038]
[136.41769409 407.11099243]
[136.64102173 422.10931396]
[139.31948853 426.58959961]
[139.94865417 431.18933105]
[138.82618713 435.10787964]
[136.52436829 437.77883911]
[136.07777405 452.77218628]
[135.63116455 467.76553345]
[135.18455505 482.75888062]
[134.73794556 497.75222778]
[148.73265076 503.62698364]
[159.65740967 514.16333008]
[166.03471375 527.93627930]
[167.00212097 543.08319092]
[162.42877197 557.55554199]
[152.93318176 569.39605713]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 204]
[10 203]
[11 202]
[12 201]
[13 200]
[14 196]
[15 195]
[16 194]
[17 193]
[19 190]
[21 189]
[22 188]
[24 185]
[25 184]
[26 183]
[28 181]
[29 180]
[30 179]
[31 178]
[32 159]
[33 158]
[34 157]
[35 156]
[36 155]
[37 150]
[38 149]
[39 148]
[40 147]
[41 146]
[42 145]
[46 144]
[47 143]
[48 142]
[51 141]
[53 139]
[54 138]
[55 137]
[56 136]
[57 135]
[59 134]
[60 133]
[62 131]
[69 125]
[70 124]
[71 123]
[72 122]
[73 121]
[74 120]
[75 119]
[76 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
