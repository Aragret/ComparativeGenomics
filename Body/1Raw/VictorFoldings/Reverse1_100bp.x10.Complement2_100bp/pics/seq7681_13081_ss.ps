%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[-10.07810593 482.98522949]
[-2.80000806 496.18722534]
[1.10647798 510.74755859]
[1.41423392 525.81964111]
[-1.89463258 540.52728271]
[-8.62774849 554.01538086]
[-18.39365959 565.49975586]
[-30.62458801 574.31268311]
[-44.60944366 579.94183350]
[-59.53516388 582.05993652]
[-74.53398895 580.54376221]
[-88.73390961 575.48156738]
[-101.30935669 567.16766357]
[-111.52921295 556.08532715]
[-118.79930115 542.87890625]
[-122.69696045 528.31622314]
[-122.99558258 513.24395752]
[-119.67779541 498.53829956]
[-112.93650818 485.05429077]
[-103.16363525 473.57586670]
[-90.92736816 464.77035522]
[-76.93910217 459.14968872]
[-62.01209641 457.04064941]
[-47.01419067 458.56585693]
[-41.97727585 444.43682861]
[-36.94035721 430.30780029]
[-39.95464706 415.72140503]
[-28.03259087 405.32067871]
[-22.99567413 391.19165039]
[-26.00996399 376.60522461]
[-14.08790684 366.20449829]
[-9.05099106 352.07546997]
[-16.05891800 343.07241821]
[-17.86931610 331.68652344]
[-13.91818047 320.72833252]
[-5.07827187 312.95935059]
[6.53071308 310.39651489]
[11.98606968 296.42373657]
[17.44142723 282.45092773]
[22.89678383 268.47811890]
[28.35214043 254.50532532]
[33.80749893 240.53253174]
[39.26285553 226.55973816]
[44.71821213 212.58694458]
[50.17356873 198.61413574]
[49.11044312 193.95808411]
[50.96093750 188.58476257]
[56.00497818 184.31051636]
[61.87393951 170.50633240]
[67.74289703 156.70216370]
[73.61186218 142.89797974]
[79.48081970 129.09379578]
[77.34007263 114.35384369]
[89.86005402 104.68116760]
[95.62609100 90.83367920]
[101.28887177 76.94365692]
[100.57691193 71.77256012]
[101.79761505 67.29336548]
[104.36379242 64.12638092]
[107.52714539 62.56897736]
[113.80451202 48.94565964]
[120.08187103 35.32234573]
[106.97614288 42.61891174]
[91.97675323 42.48389053]
[79.00450134 34.95257568]
[71.45030212 21.99363708]
[71.28881073 6.99450541]
[78.56224060 -6.12407827]
[91.36933136 -13.93294907]
[106.36234283 -14.39088726]
[119.62213135 -7.37818813]
[127.68262482 5.27204514]
[128.43701172 20.25220490]
[136.66581726 7.71080399]
[144.89463806 -4.83059645]
[153.12344360 -17.37199593]
[155.21473694 -26.26380539]
[161.56929016 -30.03760147]
[169.98390198 -42.45509720]
[177.64450073 -55.35142517]
[184.52391052 -68.68085480]
[191.40333557 -82.01028442]
[198.28274536 -95.33971405]
[205.16215515 -108.66914368]
[198.35786438 -122.48970032]
[200.96575928 -137.49143982]
[211.77928162 -147.95719910]
[226.50566101 -150.02395630]
[233.38507080 -163.35337830]
[240.26449585 -176.68281555]
[247.14390564 -190.01223755]
[254.02331543 -203.34165955]
[260.90274048 -216.67109680]
[267.78213501 -230.00051880]
[274.66156006 -243.32995605]
[281.54095459 -256.65939331]
[288.42037964 -269.98880005]
[295.29977417 -283.31823730]
[302.17919922 -296.64767456]
[309.05862427 -309.97711182]
[296.82168579 -318.69711304]
[285.95037842 -329.06991577]
[276.66598511 -340.88436890]
[269.15753174 -353.89987183]
[263.57791138 -367.85153198]
[260.04064941 -382.45526123]
[258.61782837 -397.41372681]
[259.33837891 -412.42245483]
[262.18765259 -427.17584229]
[267.10763550 -441.37353516]
[273.99813843 -454.72650146]
[282.71890259 -466.96289062]
[293.09240723 -477.83355713]
[304.90740967 -487.11721802]
[317.92340088 -494.62484741]
[331.87539673 -500.20364380]
[346.47933960 -503.73995972]
[361.43789673 -505.16186523]
[376.44656372 -504.44039917]
[391.19976807 -501.59020996]
[405.39718628 -496.66937256]
[418.74972534 -489.77801514]
[430.98553467 -481.05648804]
[441.85559082 -470.68234253]
[451.13851929 -458.86676025]
[458.64535522 -445.85028076]
[464.22326660 -431.89794922]
[467.75869751 -417.29379272]
[469.17965698 -402.33514404]
[468.45724487 -387.32650757]
[465.60617065 -372.57348633]
[460.68444824 -358.37637329]
[453.79226685 -345.02429199]
[445.06997681 -332.78897095]
[434.69515991 -321.91958618]
[422.87899780 -312.63739014]
[409.86209106 -305.13134766]
[395.90939331 -299.55432129]
[381.30502319 -296.01977539]
[366.34628296 -294.59973145]
[351.33767700 -295.32305908]
[336.58483887 -298.17507935]
[322.38803101 -303.09768677]
[315.50863647 -289.76824951]
[308.62921143 -276.43884277]
[301.74981689 -263.10940552]
[294.87039185 -249.77996826]
[287.99096680 -236.45054626]
[281.11157227 -223.12110901]
[274.23214722 -209.79168701]
[267.35275269 -196.46224976]
[260.47332764 -183.13282776]
[253.59391785 -169.80339050]
[246.71450806 -156.47396851]
[239.83509827 -143.14453125]
[246.68179321 -129.94375610]
[244.41566467 -115.06663513]
[233.69857788 -104.25009918]
[218.49157715 -101.78972626]
[211.61216736 -88.46029663]
[204.73275757 -75.13086700]
[197.85334778 -61.80144119]
[190.97393799 -48.47201157]
[204.92747498 -53.97642899]
[219.47993469 -50.33969498]
[229.20361328 -38.91821289]
[230.47180176 -23.97192001]
[222.81150818 -11.07541180]
[209.07983398 -5.03876543]
[194.39834595 -8.11350250]
[184.24288940 -19.15282249]
[182.40139771 -34.04047775]
[173.98678589 -21.62298203]
[165.66484070 -9.14318848]
[157.43603516 3.39821148]
[149.20722961 15.93961143]
[140.97840881 28.48101234]
[133.70518494 41.59970474]
[127.42782593 55.22302246]
[121.15046692 68.84633636]
[115.17890167 82.60643768]
[109.51611328 96.49646759]
[109.63111877 104.55620575]
[103.66423035 110.55012512]
[105.38519287 126.27745819]
[93.28499603 134.96276855]
[87.41603851 148.76693726]
[81.54707336 162.57112122]
[75.67811584 176.37528992]
[69.80915070 190.17947388]
[64.14636993 204.06950378]
[58.69100952 218.04229736]
[53.23565292 232.01509094]
[47.78029633 245.98788452]
[42.32493973 259.96069336]
[36.86958313 273.93350220]
[31.41422462 287.90628052]
[25.95886803 301.87908936]
[20.50351143 315.85186768]
[28.76668549 332.89987183]
[22.05978394 350.27603149]
[5.07803869 357.11239624]
[0.04112258 371.24142456]
[2.69513798 386.83843994]
[-8.86664486 396.22854614]
[-13.90356159 410.35760498]
[-11.24954605 425.95458984]
[-22.81132889 435.34472656]
[-27.84824562 449.47375488]
[-32.88516235 463.60278320]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 210]
[25 209]
[26 208]
[28 206]
[29 205]
[31 203]
[32 202]
[37 199]
[38 198]
[39 197]
[40 196]
[41 195]
[42 194]
[43 193]
[44 192]
[45 191]
[48 190]
[49 189]
[50 188]
[51 187]
[52 186]
[54 184]
[55 182]
[56 181]
[60 180]
[61 179]
[62 178]
[73 177]
[74 176]
[75 175]
[76 174]
[78 173]
[79 172]
[80 163]
[81 162]
[82 161]
[83 160]
[84 159]
[88 155]
[89 154]
[90 153]
[91 152]
[92 151]
[93 150]
[94 149]
[95 148]
[96 147]
[97 146]
[98 145]
[99 144]
[100 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
