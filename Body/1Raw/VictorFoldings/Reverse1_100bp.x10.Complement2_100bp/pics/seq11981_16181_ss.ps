%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCACAUACUUGUACUCCCACAAAAGAGCACACUUACUCCCAAAAUACAACAAUUACACCACCCACUCACUCGGGGUAACACAACACCAUUUAUACAUCUxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[156.24435425 689.89050293]
[143.37080383 682.09576416]
[132.26548767 671.93908691]
[123.35527802 659.81085205]
[116.98265839 646.17718506]
[113.39257050 631.56219482]
[112.72301483 616.52764893]
[114.99971771 601.65142822]
[120.13516998 587.50524902]
[127.93198395 574.63299561]
[138.09046936 563.52929688]
[150.22016907 554.62109375]
[163.85482788 548.25067139]
[178.47038269 544.66296387]
[177.80059814 529.67791748]
[177.13081360 514.69287109]
[176.46102905 499.70782471]
[175.79124451 484.72277832]
[175.12145996 469.73773193]
[171.68241882 463.19595337]
[174.55493164 454.52496338]
[174.10832214 439.53161621]
[163.58583069 432.09475708]
[159.20256042 419.77124023]
[162.76985168 406.98513794]
[173.20121765 398.46450806]
[172.97789001 383.46615601]
[170.97387695 368.60064697]
[167.21757507 354.07858276]
[163.46128845 339.55651855]
[159.70498657 325.03445435]
[155.94868469 310.51239014]
[152.19238281 295.99032593]
[148.43608093 281.46829224]
[144.57177734 266.97457886]
[140.38476562 252.57080078]
[135.98376465 238.23095703]
[131.58276367 223.89111328]
[127.18177032 209.55125427]
[122.78076935 195.21141052]
[118.37976837 180.87156677]
[113.97877502 166.53172302]
[109.57777405 152.19187927]
[104.96376801 137.91914368]
[100.13777161 123.71668243]
[95.31176758 109.51422882]
[89.75254822 95.58242798]
[83.47518158 81.95911407]
[77.09658051 68.38290405]
[70.61708069 54.85456085]
[64.13758850 41.32621384]
[57.65809250 27.79786873]
[44.71868896 18.69388962]
[46.19912720 3.87303996]
[39.51893234 -9.55733585]
[32.63951874 -22.88676453]
[25.76010704 -36.21619415]
[12.55538273 -44.93088531]
[13.59389210 -59.78924179]
[6.71447992 -73.11866760]
[-6.49024534 -81.83335876]
[-5.45173550 -96.69171906]
[-12.33114815 -110.02114868]
[-19.21055984 -123.35057068]
[-32.41528702 -132.06526184]
[-31.37677574 -146.92361450]
[-45.51017761 -141.83422852]
[-60.18697739 -138.63320923]
[-75.15603638 -137.37533569]
[-90.16121674 -138.08213806]
[-104.94576263 -140.74153137]
[-119.25668335 -145.30798340]
[-132.84910583 -151.70338440]
[-145.49043274 -159.81829834]
[-156.96438599 -169.51383972]
[-167.07458496 -180.62413025]
[-175.64807129 -192.95906067]
[-182.53813171 -206.30755615]
[-187.62686157 -220.44119263]
[-190.82717896 -235.11814880]
[-192.08433533 -250.08726501]
[-191.37681580 -265.09240723]
[-188.71672058 -279.87683105]
[-184.14958191 -294.18753052]
[-177.75352478 -307.77963257]
[-169.63803101 -320.42059326]
[-159.94192505 -331.89407349]
[-148.83116150 -342.00375366]
[-136.49581909 -350.57666016]
[-123.14700317 -357.46606445]
[-109.01312256 -362.55413818]
[-94.33601379 -365.75375366]
[-79.36683655 -367.01019287]
[-64.36172485 -366.30197144]
[-49.57743454 -363.64117432]
[-35.26694870 -359.07333374]
[-21.67513657 -352.67663574]
[-9.03457355 -344.56054688]
[2.43844461 -334.86389160]
[12.54759979 -323.75265503]
[21.11991119 -311.41690063]
[28.00869370 -298.06774902]
[33.09607315 -283.93362427]
[36.29499817 -269.25637817]
[37.55072784 -254.28712463]
[36.84178162 -239.28205872]
[34.18028259 -224.49789429]
[29.61177635 -210.18762207]
[23.21443558 -196.59611511]
[15.09772682 -183.95593262]
[5.40053844 -172.48338318]
[-5.71119833 -162.37475586]
[-18.04734612 -153.80303955]
[-5.33468390 -146.04174805]
[-5.88113165 -130.22998047]
[0.99828100 -116.90055847]
[7.87769365 -103.57112885]
[20.59035683 -95.80985260]
[20.04390907 -79.99808502]
[26.92332077 -66.66865540]
[39.63598633 -58.90737534]
[39.08953857 -43.09560776]
[45.96894836 -29.76617813]
[52.84836197 -16.43674850]
[57.04499435 -14.15698338]
[59.85404587 -9.21671391]
[59.72747421 -2.60645604]
[72.20341492 5.52988577]
[71.18643951 21.31837273]
[77.66593170 34.84671783]
[84.14543152 48.37506485]
[90.62492371 61.90340805]
[96.34935760 66.57809448]
[97.09850311 75.68175507]
[103.37586212 89.30506897]
[108.48780060 75.20301056]
[121.40493011 67.57752991]
[136.22169495 69.91490173]
[146.16409302 81.14649963]
[146.68656921 96.13739777]
[137.55027771 108.03395844]
[122.93218994 111.39722443]
[109.51422882 104.68823242]
[114.34022522 118.89068604]
[119.16622162 133.09313965]
[123.87838745 137.73071289]
[125.32410431 143.22679138]
[123.91762543 147.79087830]
[128.31861877 162.13072205]
[132.71961975 176.47056580]
[137.12062073 190.81040955]
[141.52162170 205.15026855]
[145.92260742 219.49011230]
[150.32360840 233.82995605]
[154.72460938 248.16979980]
[159.29661560 252.94561768]
[160.57804871 258.48229980]
[159.03630066 263.00250244]
[164.32646179 270.44909668]
[162.95814514 277.71197510]
[166.71443176 292.23403931]
[170.47073364 306.75610352]
[174.22703552 321.27816772]
[177.98333740 335.80020142]
[181.73963928 350.32226562]
[185.49594116 364.84432983]
[189.23539734 350.31793213]
[197.66047668 337.90753174]
[209.78144836 329.07110596]
[224.17431641 324.84677124]
[239.14825439 325.73077393]
[252.94410706 331.61926270]
[263.94116211 341.82046509]
[270.84753418 355.13595581]
[272.85180664 370.00143433]
[269.71856689 384.67053223]
[261.81585693 397.41995239]
[250.07214355 406.75189209]
[235.86701965 411.57003784]
[220.86929321 411.30834961]
[206.84091187 405.99758911]
[195.42987061 396.26165771]
[187.97622681 383.24282837]
[188.19955444 398.24118042]
[200.97306824 410.19345093]
[201.14682007 427.34817505]
[189.10168457 439.08499146]
[189.54827881 454.07833862]
[190.10649109 469.06796265]
[190.77627563 484.05300903]
[191.44606018 499.03802490]
[192.11584473 514.02307129]
[192.78562927 529.00811768]
[193.45541382 543.99316406]
[208.33277893 546.26263428]
[222.48141479 551.39123535]
[235.35748291 559.18176270]
[246.46607971 569.33489990]
[255.38021851 581.46020508]
[261.75726318 595.09179688]
[265.35208130 609.70562744]
[266.02648926 624.73992920]
[263.75460815 639.61694336]
[258.62371826 653.76477051]
[250.83108521 666.63958740]
[240.67619324 677.74652100]
[228.54939270 686.65869141]
[214.91679382 693.03350830]
[200.30239868 696.62597656]
[185.26794434 697.29797363]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 194]
[15 193]
[16 192]
[17 191]
[18 190]
[19 189]
[21 188]
[22 187]
[26 184]
[27 183]
[28 166]
[29 165]
[30 164]
[31 163]
[32 162]
[33 161]
[34 160]
[35 158]
[36 155]
[37 154]
[38 153]
[39 152]
[40 151]
[41 150]
[42 149]
[43 148]
[44 145]
[45 144]
[46 143]
[47 135]
[48 134]
[49 132]
[50 131]
[51 130]
[52 129]
[54 127]
[55 124]
[56 123]
[57 122]
[59 120]
[60 119]
[62 117]
[63 116]
[64 115]
[66 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
