%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUAUCACCCCCCAUUCCGCUCCAAUCGCUCCGAACGAUCUUCAGUAGUUUUUCGAUAAUCACCCUCAUCUCAAACUUCAGGAACUCUCUCCUAAUACxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[61.85907745 646.63989258]
[48.92065811 654.26074219]
[35.21031952 660.38500977]
[20.90047646 664.93566895]
[6.17109299 667.85546875]
[-8.79259205 669.10772705]
[-23.80239487 668.67669678]
[-38.66955185 666.56774902]
[-53.20709610 662.80743408]
[-67.23219299 657.44305420]
[-80.56847382 650.54205322]
[-93.04821014 642.19128418]
[-104.51446533 632.49566650]
[-114.82303619 621.57714844]
[-123.84427643 609.57312012]
[-131.46473694 596.63446045]
[-137.58859253 582.92395020]
[-142.13880920 568.61395264]
[-145.05818176 553.88446045]
[-146.30998230 538.92077637]
[-145.87847900 523.91094971]
[-143.76910400 509.04388428]
[-140.00836182 494.50643921]
[-134.64355469 480.48150635]
[-127.74217224 467.14541626]
[-119.39098358 454.66592407]
[-109.69502258 443.19998169]
[-98.77622223 432.89172363]
[-86.77190399 423.87084961]
[-73.83303070 416.25076294]
[-60.12231827 410.12731934]
[-45.81220627 405.57754517]
[-31.08264732 402.65859985]
[-16.11888695 401.40725708]
[-1.10910988 401.83920288]
[13.75792122 403.94903564]
[17.51422310 389.42697144]
[21.27052307 374.90490723]
[24.91861153 360.35528564]
[28.45828247 345.77893066]
[23.94285583 331.58526611]
[34.71818161 320.00064087]
[38.25785446 305.42428589]
[41.79752731 290.84790039]
[45.33719635 276.27151489]
[48.87686920 261.69515991]
[44.36144257 247.50148010]
[55.13676834 235.91688538]
[53.46112061 231.44461060]
[54.57714081 225.87222290]
[59.00492096 220.96240234]
[62.97701645 206.49787903]
[66.94911194 192.03335571]
[70.92121124 177.56883240]
[74.89330292 163.10430908]
[78.86540222 148.63978577]
[82.83749390 134.17526245]
[86.80959320 119.71073914]
[90.78169250 105.24621582]
[94.21275330 90.64389038]
[97.09802246 75.92400360]
[86.93397522 86.95541382]
[73.19425964 92.97373962]
[58.19426346 92.96478271]
[44.46174622 86.93005371]
[34.31087875 75.88650513]
[29.45226288 61.69517517]
[30.70466042 46.74755096]
[37.85701752 33.56256485]
[49.70403671 24.36212730]
[64.24929047 20.69666672]
[79.04164886 23.18387985]
[91.58833313 31.40462685]
[99.77500916 43.97356796]
[102.22201538 58.77427292]
[107.88479614 44.88424683]
[113.54758453 30.99421883]
[119.21037292 17.10419273]
[124.87316132 3.21416593]
[122.91823578 -12.48579693]
[134.88777161 -21.35029602]
[140.55056763 -35.24032211]
[146.21334839 -49.13034821]
[151.66870117 -63.10314560]
[156.91542053 -77.15561676]
[162.16213989 -91.20809174]
[167.40885925 -105.26055908]
[169.96469116 -120.04121399]
[169.74136353 -135.03955078]
[169.51803589 -150.03788757]
[169.29470825 -165.03622437]
[161.35279846 -178.71966553]
[168.89974976 -191.56072998]
[168.67642212 -206.55906677]
[154.07768250 -210.40345764]
[141.05809021 -218.04496765]
[130.58378601 -228.91654968]
[123.43202972 -242.21148682]
[120.13352966 -256.94317627]
[120.93305969 -272.01843262]
[125.77129364 -286.31857300]
[134.28918457 -298.78244019]
[145.85467529 -308.48510742]
[159.60951233 -314.70660400]
[174.53298950 -316.98526001]
[189.51770020 -315.15194702]
[203.45167542 -309.34274292]
[215.30091858 -299.98870850]
[224.18614197 -287.78396606]
[229.44799805 -273.63421631]
[230.69601440 -258.58944702]
[227.83760071 -243.76609802]
[221.08485413 -230.26412964]
[210.93887329 -219.08551025]
[198.15257263 -211.05973816]
[183.67475891 -206.78239441]
[183.89808655 -191.78405762]
[191.82402039 -179.17340088]
[184.29304504 -165.25955200]
[184.51637268 -150.26121521]
[184.73970032 -135.26287842]
[184.96302795 -120.26454163]
[191.40019226 -133.81307983]
[200.75122070 -145.54161072]
[212.52557373 -154.83485413]
[226.10560608 -161.20533752]
[240.77891541 -164.31884766]
[255.77577209 -164.01208496]
[270.30947876 -160.30113220]
[283.61764526 -153.38064575]
[295.00210571 -143.61366272]
[303.86569214 -131.51255798]
[309.74340820 -117.71210480]
[312.32696533 -102.93627167]
[311.48080444 -87.96015930]
[307.24929810 -73.56938171]
[299.85446167 -60.51885223]
[289.68417358 -49.49317932]
[277.27200317 -41.07074356]
[263.26898193 -35.69337082]
[248.40977478 -33.64314651]
[233.47380066 -35.02761841]
[219.24459839 -39.77416611]
[206.46858215 -47.63379288]
[195.81599426 -58.19419861]
[187.84561157 -70.90139771]
[182.97555542 -85.08881378]
[181.46133423 -100.01383972]
[176.21461487 -85.96137238]
[170.96789551 -71.90889740]
[165.72117615 -57.85643005]
[166.85350037 -53.21672058]
[165.08322144 -47.81643295]
[160.10337830 -43.46756363]
[154.44058228 -29.57753563]
[148.77780151 -15.68750858]
[151.13777161 -0.98105317]
[138.76318359 8.87695217]
[133.10040283 22.76697922]
[127.43761444 36.65700531]
[121.77482605 50.54703140]
[116.11203766 64.43705750]
[111.81791687 78.80927277]
[108.93264008 93.52916718]
[122.64778900 87.45506287]
[136.01789856 94.25505829]
[139.18704224 108.91645813]
[129.81901550 120.63141632]
[114.81961060 120.76410675]
[105.24621582 109.21830750]
[101.27411652 123.68283081]
[97.30202484 138.14735413]
[93.32992554 152.61187744]
[89.35782623 167.07640076]
[85.38573456 181.54092407]
[81.41363525 196.00544739]
[77.44154358 210.46997070]
[73.46944427 224.93449402]
[69.71314240 239.45655823]
[73.97538757 254.69282532]
[63.45324707 265.23483276]
[59.91357422 279.81118774]
[56.37390137 294.38757324]
[52.83422852 308.96395874]
[49.29455566 323.54031372]
[53.55680466 338.77658081]
[43.03466034 349.31860352]
[39.49498749 363.89495850]
[40.51093292 372.97271729]
[35.79258347 378.66122437]
[32.03628159 393.18328857]
[28.27998161 407.70532227]
[42.30540085 413.06887817]
[55.64209366 419.96905518]
[68.12232971 428.31915283]
[79.58916473 438.01406860]
[89.89839172 448.93194580]
[98.92034912 460.93545532]
[106.54158783 473.87365723]
[112.66625214 487.58380127]
[117.21733093 501.89352417]
[120.13758087 516.62280273]
[121.39028168 531.58642578]
[120.95967865 546.59625244]
[118.85118103 561.46350098]
[115.09130859 576.00115967]
[109.72734833 590.02642822]
[102.82675934 603.36291504]
[94.47631836 615.84289551]
[84.78103638 627.30944824]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 192]
[37 191]
[38 190]
[39 188]
[40 187]
[42 185]
[43 184]
[44 183]
[45 182]
[46 181]
[48 179]
[51 178]
[52 177]
[53 176]
[54 175]
[55 174]
[56 173]
[57 172]
[58 171]
[59 170]
[60 164]
[61 163]
[75 162]
[76 161]
[77 160]
[78 159]
[79 158]
[81 156]
[82 155]
[83 154]
[84 151]
[85 150]
[86 149]
[87 148]
[88 122]
[89 121]
[90 120]
[91 119]
[93 117]
[94 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
