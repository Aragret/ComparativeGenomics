%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxUUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGC\
) } def
/len { sequence length } bind def

/coor [
[85.84579468 409.51840210]
[77.41892242 422.05493164]
[65.80057526 431.70846558]
[51.93258667 437.69641113]
[36.93917847 439.53338623]
[22.03580284 437.07046509]
[8.43060493 430.50726318]
[-2.77350211 420.37591553]
[-10.66825008 407.49765015]
[-14.61364937 392.91647339]
[-14.28986168 377.81442261]
[-9.72313595 363.41577148]
[-1.28367722 350.88769531]
[10.34436703 341.24584961]
[24.21836090 335.27182007]
[39.21360397 333.44992065]
[41.65933228 318.65063477]
[36.10073471 304.83215332]
[45.98459244 292.47817993]
[48.43032074 277.67892456]
[50.87604904 262.87963867]
[38.08307266 270.71160889]
[23.46739960 267.33789062]
[15.40155315 254.69105530]
[18.50601387 240.01582336]
[31.00240898 231.71882629]
[45.73223114 234.55296326]
[54.25737000 246.89378357]
[58.01367188 232.37171936]
[53.71006393 218.11239624]
[64.65667725 206.68951416]
[68.41297150 192.16744995]
[72.16927338 177.64538574]
[67.86566925 163.38606262]
[78.81227875 151.96318054]
[82.56858063 137.44113159]
[86.32488251 122.91906738]
[90.08118439 108.39700317]
[93.40344238 93.76954651]
[96.28871155 79.04965210]
[99.17398834 64.32976532]
[102.05925751 49.60987091]
[103.50867462 34.68006134]
[103.50867462 19.68006325]
[103.50867462 4.68006277]
[103.50867462 -10.31993675]
[103.50867462 -25.31993675]
[103.50867462 -40.31993866]
[100.53911591 -46.22698593]
[100.93853760 -51.89598083]
[103.73865509 -55.76488113]
[104.18525696 -70.75823212]
[104.63186646 -85.75157928]
[91.11042786 -95.91360474]
[86.35755157 -111.97322083]
[92.05640411 -127.54515076]
[105.77502441 -136.56051636]
[105.99835205 -151.55885315]
[106.22167969 -166.55718994]
[106.44500732 -181.55552673]
[106.66833496 -196.55386353]
[106.89166260 -211.55220032]
[107.00333405 -226.55178833]
[107.00333405 -241.55178833]
[106.89166260 -256.55136108]
[106.66833496 -271.54971313]
[106.44500732 -286.54803467]
[106.22167969 -301.54638672]
[105.99835205 -316.54470825]
[91.02695465 -317.61181641]
[76.20271301 -319.96200562]
[61.63538742 -323.57785034]
[47.43282318 -328.43261719]
[33.70017624 -334.49032593]
[20.53912163 -341.70614624]
[8.04710102 -350.02664185]
[-3.68340015 -359.39022827]
[-14.56552982 -369.72756958]
[-24.51872063 -380.96215820]
[-33.46928024 -393.01074219]
[-41.35094070 -405.78421021]
[-48.10534668 -419.18789673]
[-53.68249512 -433.12265015]
[-58.04108810 -447.48522949]
[-61.14885712 -462.16934204]
[-62.98279572 -477.06625366]
[-63.52932358 -492.06570435]
[-62.78439331 -507.05657959]
[-60.75352478 -521.92791748]
[-57.45174789 -536.56964111]
[-52.90351105 -550.87329102]
[-47.14249039 -564.73303223]
[-40.21133804 -578.04620361]
[-32.16136932 -590.71423340]
[-23.05218315 -602.64337158]
[-12.95122623 -613.74530029]
[-1.93328083 -623.93774414]
[9.92007828 -633.14532471]
[22.52109146 -641.29980469]
[35.77646255 -648.34088135]
[49.58805084 -654.21636963]
[63.85360336 -658.88281250]
[78.46749878 -662.30560303]
[93.32153320 -664.45941162]
[108.30574036 -665.32836914]
[123.30917358 -664.90594482]
[138.22074890 -663.19531250]
[152.93006897 -660.20916748]
[167.32823181 -655.96954346]
[181.30863953 -650.50787354]
[194.76777649 -643.86462402]
[207.60598755 -636.08886719]
[219.72824097 -627.23834229]
[231.04476929 -617.37841797]
[241.47178650 -606.58221436]
[250.93211365 -594.92956543]
[259.35568237 -582.50683594]
[266.68014526 -569.40588379]
[272.85128784 -555.72381592]
[277.82336426 -541.56195068]
[281.55963135 -527.02502441]
[284.03234863 -512.22070312]
[285.22329712 -497.25866699]
[285.12359619 -482.24963379]
[283.73400879 -467.30471802]
[281.06481934 -452.53457642]
[277.13577271 -438.04858398]
[271.97601318 -423.95397949]
[265.62365723 -410.35510254]
[258.12582397 -397.35266113]
[249.53794861 -385.04290771]
[239.92367554 -373.51696777]
[229.35414124 -362.86019897]
[217.90763855 -353.15151978]
[205.66888428 -344.46276855]
[192.72850037 -336.85827637]
[179.18231201 -330.39437866]
[165.13058472 -325.11892700]
[150.67736816 -321.07095337]
[135.92967224 -318.28042603]
[120.99668884 -316.76803589]
[121.22001648 -301.76971436]
[121.44334412 -286.77136230]
[121.66667175 -271.77304077]
[121.88999939 -256.77468872]
[125.13273621 -250.13343811]
[122.00333405 -241.55178833]
[122.00333405 -226.55178833]
[125.14682770 -219.86297607]
[121.88999939 -211.32887268]
[121.66667175 -196.33053589]
[121.44334412 -181.33219910]
[121.22001648 -166.33386230]
[120.99668884 -151.33552551]
[120.77336121 -136.33718872]
[132.15321350 -129.35571289]
[138.64944458 -117.56829071]
[138.47154236 -104.00222778]
[131.55905151 -92.20240021]
[119.62521362 -85.30497742]
[119.17861176 -70.31162262]
[118.73200226 -55.31827545]
[118.50867462 -40.31993866]
[118.50867462 -25.31993675]
[118.50867462 -10.31993675]
[118.50867462 4.68006277]
[118.50867462 19.68006325]
[118.50867462 34.68006134]
[126.36101532 21.89957809]
[138.68652344 13.35078335]
[153.40812683 10.47430134]
[168.04499817 13.75487041]
[180.13055420 22.63965607]
[187.62815857 35.63141632]
[189.27435303 50.54080963]
[184.79170227 64.85534668]
[174.93563843 76.16277313]
[161.36705017 82.55758667]
[146.37251282 82.96215057]
[132.47885132 77.30828857]
[122.02739716 66.54877472]
[116.77915192 52.49514389]
[113.89387512 67.21503448]
[111.00860596 81.93492889]
[108.12332916 96.65481567]
[109.60319519 99.31930542]
[110.14627075 102.58114624]
[109.52943420 106.09440613]
[107.66049957 109.43556213]
[104.60324097 112.15330505]
[100.84693909 126.67536926]
[97.09063721 141.19741821]
[93.33433533 155.71948242]
[97.36927032 171.01751709]
[86.69133759 181.40168762]
[82.93503571 195.92375183]
[79.17873383 210.44581604]
[83.21366119 225.74385071]
[72.53572845 236.12802124]
[68.77942657 250.65007019]
[65.67531586 265.32537842]
[63.22959137 280.12466431]
[60.78386307 294.92391968]
[66.16752625 309.80096436]
[56.45860291 321.09637451]
[54.01287460 335.89566040]
[67.62466431 342.44515991]
[78.83894348 352.56527710]
[86.74662018 365.43557739]
[90.70666504 380.01278687]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 206]
[17 205]
[19 203]
[20 202]
[21 201]
[28 200]
[29 199]
[31 197]
[32 196]
[33 195]
[35 193]
[36 192]
[37 191]
[38 190]
[39 185]
[40 184]
[41 183]
[42 182]
[43 168]
[44 167]
[45 166]
[46 165]
[47 164]
[48 163]
[51 162]
[52 161]
[53 160]
[57 155]
[58 154]
[59 153]
[60 152]
[61 151]
[62 150]
[63 148]
[64 147]
[65 145]
[66 144]
[67 143]
[68 142]
[69 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
