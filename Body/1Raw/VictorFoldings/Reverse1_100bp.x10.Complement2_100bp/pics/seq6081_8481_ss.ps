%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxUUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGC\
) } def
/len { sequence length } bind def

/coor [
[80.37715149 640.53588867]
[74.13440704 654.74182129]
[60.71696091 662.53613281]
[45.28408432 660.92181396]
[33.77004242 650.51959229]
[30.60221291 635.32928467]
[36.99869537 621.19195557]
[50.49990845 613.54364014]
[52.06043243 598.62506104]
[53.62095642 583.70642090]
[55.18147659 568.78784180]
[56.51971054 553.84765625]
[57.63536072 538.88916016]
[58.75101089 523.93072510]
[45.89140320 513.72741699]
[41.60453415 497.70913696]
[47.77122498 482.13760376]
[62.14535904 473.22241211]
[63.03817749 458.24902344]
[63.93099213 443.27560425]
[64.82380676 428.30221558]
[65.71662140 413.32879639]
[66.60943604 398.35537720]
[64.16565704 394.25210571]
[64.27359009 388.57006836]
[67.75830841 382.95150757]
[69.09654236 368.01132202]
[70.43477631 353.07113647]
[71.77301025 338.13095093]
[57.52178574 333.53698730]
[44.64405441 325.88308716]
[33.78731155 315.55032349]
[25.49826241 303.05459595]
[20.19530869 289.02081299]
[18.14741325 274.15170288]
[19.46046829 259.19247437]
[24.07182693 244.89372253]
[31.75327682 231.97352600]
[42.12233734 221.08149719]
[54.66130447 212.76614380]
[68.74309540 207.44715881]
[83.66260529 205.39431763]
[85.00083923 190.45413208]
[78.42986298 177.08732605]
[87.36750031 164.03247070]
[88.70573425 149.09228516]
[89.93270874 134.14254761]
[91.04835510 119.18410492]
[79.99590302 106.92803955]
[81.10083008 90.46150208]
[93.69161987 79.79193115]
[94.58443451 64.81852722]
[95.47724915 49.84511948]
[96.37007141 34.87171555]
[96.92827606 19.88210487]
[97.15160370 4.88376760]
[97.37493896 -10.11456966]
[89.84395599 -24.02840996]
[97.76988983 -36.63907242]
[97.99321747 -51.63740921]
[98.21654510 -66.63574982]
[98.43987274 -81.63408661]
[98.10489655 -96.63034821]
[97.21208191 -111.60375214]
[96.31926727 -126.57715607]
[95.42645264 -141.55056763]
[91.79180145 -149.93072510]
[94.63349152 -156.75323486]
[93.96370697 -171.73826599]
[93.29392242 -186.72331238]
[92.62413788 -201.70834351]
[91.95435333 -216.69338989]
[91.28456879 -231.67842102]
[90.61478424 -246.66346741]
[77.74325562 -250.53422546]
[66.70948029 -258.16986084]
[58.57923508 -268.81579590]
[54.13255692 -281.42742920]
[53.78894424 -294.77285767]
[57.56779861 -307.55294800]
[65.08792114 -318.52798462]
[75.60589600 -326.63784790]
[88.08959961 -331.10449219]
[87.86627197 -346.10281372]
[87.64294434 -361.10116577]
[87.41961670 -376.09948730]
[87.19628906 -391.09783936]
[79.25437927 -404.78128052]
[86.80133820 -417.62234497]
[74.64005280 -408.84149170]
[60.15215683 -412.72747803]
[54.01758575 -426.41567993]
[60.75851440 -439.81567383]
[75.40578461 -443.04949951]
[87.16123962 -433.73474121]
[88.05406189 -448.70816040]
[88.94687653 -463.68154907]
[89.83969116 -478.65496826]
[90.73250580 -493.62835693]
[91.62532043 -508.60177612]
[77.93737793 -515.21301270]
[67.82510376 -526.56250000]
[62.83056259 -540.91949463]
[63.71537781 -556.09460449]
[70.34461975 -569.77386475]
[81.70738220 -579.87121582]
[96.07092285 -584.84686279]
[111.24491119 -583.94207764]
[124.91541290 -577.29486084]
[134.99778748 -565.91882324]
[139.95454407 -551.54870605]
[139.02981567 -536.37597656]
[132.36459351 -522.71423340]
[120.97531128 -512.64678955]
[106.59873199 -507.70895386]
[105.70590973 -492.73556519]
[104.81309509 -477.76214600]
[103.92028046 -462.78872681]
[103.02746582 -447.81533813]
[102.13465118 -432.84191895]
[101.79967499 -417.84567261]
[109.72560883 -405.23501587]
[102.19462585 -391.32116699]
[102.41795349 -376.32281494]
[102.64128113 -361.32449341]
[102.86460876 -346.32614136]
[103.08793640 -331.32781982]
[118.70515442 -325.55212402]
[130.93302917 -314.19604492]
[137.87649536 -298.98095703]
[138.44465637 -282.22927856]
[132.52214050 -266.50988770]
[120.99107361 -254.24420166]
[105.59982300 -247.33325195]
[106.26960754 -232.34820557]
[106.93939209 -217.36317444]
[107.60917664 -202.37812805]
[108.27896118 -187.39309692]
[108.94874573 -172.40805054]
[109.61853027 -157.42301941]
[110.39985657 -142.44337463]
[111.29267120 -127.46997070]
[112.18548584 -112.49656677]
[113.07830048 -97.52316284]
[124.83537292 -106.83827209]
[139.48233032 -103.60308838]
[146.22200012 -90.20245361]
[140.08613586 -76.51482391]
[125.59786987 -72.63021088]
[113.43820953 -81.41075897]
[113.21488190 -66.41242218]
[112.99155426 -51.41408157]
[112.76822662 -36.41574478]
[120.31517792 -23.57468796]
[112.37327576 -9.89124203]
[112.14994812 5.10709524]
[111.92662048 20.10543251]
[114.10686493 22.87650490]
[115.05324554 26.84127808]
[114.21932220 31.40831947]
[111.34347534 35.76453018]
[110.45066071 50.73793793]
[109.55784607 65.71134186]
[108.66502380 80.68474579]
[118.14611816 89.09679413]
[121.12232971 101.41733551]
[116.52676392 113.22980499]
[106.00681305 120.29975128]
[104.89115906 135.25820923]
[107.37363434 144.04882812]
[103.64591980 150.43052673]
[102.30768585 165.37071228]
[108.78294373 179.80613708]
[99.94102478 191.79237366]
[98.60279083 206.73255920]
[112.91996765 211.40420532]
[125.83230591 219.14112854]
[136.69386292 229.55253601]
[144.96212769 242.11395264]
[150.22512817 256.19363403]
[152.22190857 271.08428955]
[150.85551453 286.03872681]
[146.19767761 300.30722046]
[138.48506165 313.17514038]
[128.10723877 323.99884033]
[115.58698273 332.23764038]
[101.55399323 337.48107910]
[86.71319580 339.46920776]
[85.37496185 354.40939331]
[84.03672791 369.34957886]
[82.69849396 384.28976440]
[81.58284760 399.24819946]
[80.69002533 414.22161865]
[79.79721069 429.19500732]
[78.90439606 444.16842651]
[78.01158142 459.14181519]
[77.11876678 474.11523438]
[88.38964844 482.04983521]
[94.22184753 494.41931152]
[93.18873596 507.94714355]
[85.66679382 519.10797119]
[73.70946503 525.04638672]
[72.59381104 540.00482178]
[71.47816467 554.96331787]
[74.00016022 561.07482910]
[73.18019867 566.69842529]
[70.10008240 570.34832764]
[68.53955841 585.26696777]
[66.97903442 600.18554688]
[65.41851044 615.10418701]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 210]
[9 209]
[10 208]
[11 207]
[12 204]
[13 203]
[14 202]
[18 197]
[19 196]
[20 195]
[21 194]
[22 193]
[23 192]
[26 191]
[27 190]
[28 189]
[29 188]
[42 175]
[43 174]
[45 172]
[46 171]
[47 169]
[48 168]
[51 164]
[52 163]
[53 162]
[54 161]
[55 157]
[56 156]
[57 155]
[59 153]
[60 152]
[61 151]
[62 150]
[63 144]
[64 143]
[65 142]
[66 141]
[68 140]
[69 139]
[70 138]
[71 137]
[72 136]
[73 135]
[74 134]
[83 127]
[84 126]
[85 125]
[86 124]
[87 123]
[89 121]
[95 120]
[96 119]
[97 118]
[98 117]
[99 116]
[100 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
