%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxAUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUA\
) } def
/len { sequence length } bind def

/coor [
[80.92311096 351.19116211]
[78.77389526 366.05377197]
[74.91373444 380.56637573]
[69.39482880 394.53271484]
[62.29181290 407.76388550]
[53.70075226 420.08093262]
[43.73782730 431.31735229]
[32.53778076 441.32110596]
[20.25207520 449.95697021]
[7.04686165 457.10812378]
[-6.89927387 462.67782593]
[-21.39772606 466.59082031]
[-36.25241852 468.79412842]
[-51.26246262 469.25799561]
[-66.22486115 467.97613525]
[-80.93726349 464.96585083]
[-95.20069885 460.26788330]
[-108.82228088 453.94577026]
[-121.61778259 446.08502197]
[-133.41416931 436.79190063]
[-144.05189514 426.19213867]
[-153.38711548 414.42904663]
[-161.29356384 401.66171265]
[-167.66432190 388.06283569]
[-172.41323853 373.81628418]
[-175.47607422 359.11471558]
[-176.81143188 344.15701294]
[-176.40122986 329.14538574]
[-174.25102234 314.28292847]
[-170.38989258 299.77056885]
[-164.87005615 285.80462646]
[-157.76615906 272.57394409]
[-149.17427063 260.25744629]
[-139.21060181 249.02169800]
[-128.00988770 239.01867676]
[-115.72360229 230.38365173]
[-102.51791382 223.23338318]
[-88.57140350 217.66458130]
[-74.07269287 213.75257874]
[-59.21784973 211.55024719]
[-44.20777893 211.08738708]
[-29.24546623 212.37026978]
[-14.53326511 215.38151550]
[-0.27013871 220.08042908]
[13.35101986 226.40344238]
[21.20277405 213.62260437]
[28.86337280 200.72627258]
[36.33111191 187.71733093]
[43.79885483 174.70837402]
[51.26659775 161.69941711]
[58.73433685 148.69047546]
[43.79417801 150.02899170]
[33.32273102 139.28894043]
[35.03915787 124.38746643]
[47.67817307 116.30939484]
[61.92276382 121.00956726]
[67.27247620 135.02156067]
[68.00695801 120.14507294]
[82.15370178 113.06125641]
[90.56832123 100.64376831]
[90.77038574 95.40228271]
[93.89478302 90.64712524]
[99.42292023 87.98693848]
[108.20352936 75.82548523]
[116.98413086 63.66403198]
[125.76473236 51.50257492]
[134.54533386 39.34111786]
[134.83226013 35.00849533]
[136.33212280 31.35952950]
[138.68106079 28.69158363]
[141.45599365 27.15330315]
[144.22833252 26.73819160]
[153.71722412 15.12092781]
[163.20613098 3.50366426]
[172.69502258 -8.11359882]
[182.18392944 -19.73086166]
[191.67282104 -31.34812546]
[199.99476624 -43.82791901]
[207.07186890 -57.05344772]
[214.14897156 -70.27897644]
[221.22608948 -83.50450134]
[207.19213867 -78.20844269]
[192.69543457 -82.06143951]
[183.14288330 -93.62642670]
[182.09736633 -108.58994293]
[189.94880676 -121.37097168]
[203.76884460 -127.20250702]
[218.40292358 -123.90952301]
[228.39289856 -112.72023010]
[230.01252747 -97.80680084]
[238.61108398 -110.09764099]
[247.20965576 -122.38848114]
[255.80821228 -134.67932129]
[264.40676880 -146.97015381]
[252.99383545 -156.72209167]
[242.57537842 -167.53001404]
[233.24868774 -179.29302979]
[225.10086060 -191.90129089]
[218.20794678 -205.23707581]
[212.63430786 -219.17587280]
[208.43200684 -233.58753967]
[205.64025879 -248.33750916]
[204.28514099 -263.28808594]
[204.37931824 -278.29962158]
[205.92187500 -293.23199463]
[208.89843750 -307.94580078]
[213.28121948 -322.30361938]
[219.02928162 -336.17138672]
[226.08894348 -349.41964722]
[234.39431763 -361.92471313]
[243.86784363 -373.56979370]
[254.42106628 -384.24615479]
[265.95544434 -393.85415649]
[278.36331177 -402.30404663]
[291.52877808 -409.51693726]
[305.32894897 -415.42547607]
[319.63494873 -419.97454834]
[334.31320190 -423.12161255]
[349.22668457 -424.83731079]
[364.23614502 -425.10562134]
[379.20141602 -423.92404175]
[393.98278809 -421.30361938]
[408.44223022 -417.26879883]
[422.44476318 -411.85723877]
[435.85961914 -405.11950684]
[448.56155396 -397.11849976]
[460.43197632 -387.92889404]
[471.36004639 -377.63653564]
[481.24371338 -366.33749390]
[489.99075317 -354.13726807]
[497.51940918 -341.14978027]
[503.75946045 -327.49630737]
[508.65258789 -313.30432129]
[512.15313721 -298.70632935]
[514.22845459 -283.83862305]
[514.85906982 -268.84002686]
[514.03918457 -253.85058594]
[511.77639771 -239.01025391]
[508.09188843 -224.45759583]
[503.01998901 -210.32849121]
[496.60812378 -196.75486755]
[488.91613770 -183.86344910]
[480.01583862 -171.77459717]
[469.99032593 -160.60121155]
[458.93322754 -150.44758606]
[446.94775391 -141.40855408]
[434.14584351 -133.56849670]
[420.64700317 -127.00061035]
[406.57730103 -121.76622772]
[392.06808472 -117.91423035]
[377.25482178 -115.48056793]
[362.27581787 -114.48796844]
[347.27096558 -114.94570923]
[332.38031006 -116.84950256]
[317.74295044 -120.18157959]
[303.49548340 -124.91083527]
[289.77099609 -130.99310303]
[276.69763184 -138.37159729]
[268.09906006 -126.08074951]
[259.50048828 -113.78991699]
[250.90193176 -101.49907684]
[242.30335999 -89.20823669]
[234.45161438 -76.42739868]
[227.37451172 -63.20186996]
[220.29739380 -49.97634125]
[213.22029114 -36.75081253]
[226.17362976 -44.31460190]
[241.07443237 -46.03683090]
[255.41165161 -41.62726974]
[266.76922607 -31.82901001]
[273.23315430 -18.29323006]
[273.71420288 -3.30094504]
[268.13131714 10.62137985]
[257.42526245 21.12758827]
[243.40020752 26.44720078]
[228.41964722 25.68376923]
[215.00805664 18.96594238]
[205.42552185 7.42579603]
[201.28686523 -6.99195433]
[203.29008484 -21.85922813]
[193.80119324 -10.24196434]
[184.31228638 1.37529922]
[174.82339478 12.99256229]
[165.33448792 24.60982513]
[155.84559631 36.22708893]
[146.70678711 48.12172318]
[137.92619324 60.28317642]
[129.14558411 72.44463348]
[120.36498260 84.60608673]
[111.58438110 96.76754761]
[102.98581696 109.05838013]
[94.57119751 121.47587585]
[93.23484039 137.24053955]
[79.68997192 143.43617249]
[71.74328613 156.15820312]
[64.27555084 169.16716003]
[56.80780792 182.17611694]
[49.34006500 195.18507385]
[41.87232590 208.19401550]
[41.50689697 214.79537964]
[38.33818436 219.51304626]
[33.98361588 221.47436523]
[26.13186264 234.25520325]
[37.92886734 243.54751587]
[48.56730270 254.14659119]
[57.90330505 265.90905762]
[65.81060791 278.67584229]
[72.18227386 292.27432251]
[76.93213654 306.52056885]
[79.99596405 321.22189331]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 203]
[46 202]
[47 199]
[48 198]
[49 197]
[50 196]
[51 195]
[57 194]
[59 192]
[60 191]
[63 190]
[64 189]
[65 188]
[66 187]
[67 186]
[72 185]
[73 184]
[74 183]
[75 182]
[76 181]
[77 180]
[78 166]
[79 165]
[80 164]
[81 163]
[90 162]
[91 161]
[92 160]
[93 159]
[94 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
