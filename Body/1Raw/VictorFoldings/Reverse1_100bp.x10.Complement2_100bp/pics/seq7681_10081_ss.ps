%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[128.24543762 475.94396973]
[133.52299500 461.81607056]
[142.14891052 449.44494629]
[153.58093262 439.60827637]
[167.10043335 432.92443848]
[163.99632263 418.24914551]
[160.89221191 403.57382202]
[157.78810120 388.89852905]
[154.68399048 374.22323608]
[151.25292969 359.62091064]
[147.49662781 345.09884644]
[143.74032593 330.57678223]
[139.98402405 316.05471802]
[136.22772217 301.53265381]
[132.47142029 287.01062012]
[128.71511841 272.48855591]
[118.03718567 262.10437012]
[122.07212067 246.80633545]
[119.72795105 245.26913452]
[117.85144806 242.71073914]
[116.83460999 239.30465698]
[116.99945831 235.36291504]
[118.55202484 231.30786133]
[115.66675568 216.58796692]
[112.78147888 201.86807251]
[109.78670502 187.17005920]
[106.68259430 172.49476624]
[102.22295380 166.60125732]
[103.64323425 157.57792664]
[100.75795746 142.85803223]
[97.87268829 128.13813782]
[94.98741913 113.41825104]
[85.94354248 102.75523376]
[90.29269409 89.46702576]
[87.40741730 74.74713135]
[84.52214813 60.02724075]
[81.41803741 45.35194016]
[78.09577942 30.72447777]
[74.77352142 16.09701920]
[71.45125580 1.46955824]
[66.51966858 -12.69657707]
[60.04016876 -26.22492218]
[53.56067276 -39.75326920]
[47.08117676 -53.28161240]
[40.60168076 -66.80995941]
[34.12218475 -80.33830261]
[27.59282303 -86.72620392]
[27.64861107 -94.11664581]
[21.37125015 -107.73995972]
[15.09388924 -121.36328125]
[14.47785473 -106.37593079]
[9.71894836 -92.15085602]
[1.19247711 -79.80989838]
[-10.42912483 -70.32631683]
[-24.22933197 -64.44802094]
[-39.11979675 -62.63860703]
[-53.92620468 -65.04077148]
[-67.48085022 -71.46506500]
[-78.71476746 -81.40483856]
[-86.74198914 -94.07621002]
[-90.92946625 -108.47985840]
[-90.94696045 -123.47985077]
[-86.79308319 -137.89321899]
[-78.79542542 -150.58326721]
[-67.58471680 -160.54922485]
[-54.04508972 -167.00511169]
[-39.24432755 -169.44178772]
[-24.34968185 -167.66709900]
[-10.53580570 -161.82101440]
[1.10788047 -152.36454773]
[9.66466618 -140.04040527]
[7.66065216 -154.90592957]
[5.65663862 -169.77146912]
[3.65262485 -184.63699341]
[-3.49928546 -171.45176697]
[-16.23367882 -163.52490234]
[-31.22181702 -162.92845154]
[-44.54583359 -169.81834412]
[-52.72286606 -182.39356995]
[-53.61545563 -197.36698914]
[-46.99028015 -210.82458496]
[-34.57915115 -219.24858093]
[-19.62629890 -220.43698120]
[-6.04036903 -214.07910156]
[2.62699986 -201.83773804]
[2.85032749 -216.83607483]
[3.07365513 -231.83441162]
[3.29698300 -246.83274841]
[3.52031064 -261.83108521]
[3.74363828 -276.82943726]
[3.96696615 -291.82775879]
[4.19029379 -306.82611084]
[-10.46952057 -310.27630615]
[-24.04470825 -316.79769897]
[-35.90033340 -326.08520508]
[-45.48188400 -337.70449829]
[-52.34122086 -351.11209106]
[-56.15751266 -365.68090820]
[-56.75226593 -380.72949219]
[-54.09766769 -395.55404663]
[-48.31787491 -409.46118164]
[-39.68321991 -421.80041504]
[-28.59755898 -431.99462891]
[-15.57939053 -439.56704712]
[-1.23759735 -444.16345215]
[13.75702858 -445.56890869]
[28.70316124 -443.71762085]
[42.90174484 -438.69625854]
[55.68868256 -430.73959351]
[66.46590424 -420.21981812]
[74.72934723 -407.62896729]
[80.09251404 -393.55593872]
[82.30455780 -378.65893555]
[81.26200867 -363.63470459]
[77.01364136 -349.18597412]
[69.75815582 -335.98855591]
[59.83489990 -324.65969849]
[47.70800781 -315.72927856]
[33.94467163 -309.61495972]
[19.18863106 -306.60278320]
[18.96530342 -291.60443115]
[18.74197578 -276.60610962]
[18.51864815 -261.60775757]
[18.29532051 -246.60942078]
[18.07199287 -231.61108398]
[17.84866524 -216.61274719]
[17.62533760 -201.61441040]
[18.51815224 -186.64100647]
[20.52216721 -171.77548218]
[22.52618027 -156.90994263]
[24.53019333 -142.04441833]
[28.71720505 -127.64064026]
[34.99456406 -114.01732635]
[41.27192688 -100.39400482]
[47.65053177 -86.81780243]
[54.13002777 -73.28945160]
[60.60952377 -59.76110840]
[67.08901978 -46.23276520]
[73.56851196 -32.70441818]
[80.04801178 -19.17607307]
[81.11222076 -34.13827515]
[87.44354248 -47.73659515]
[98.20898438 -58.18194580]
[111.99215698 -64.10005951]
[126.97966003 -64.71230316]
[141.19961548 -59.93813324]
[152.78115845 -50.40566635]
[160.20053101 -37.36906433]
[162.48158264 -22.54351997]
[159.32420349 -7.87958479]
[151.14381409 4.69344664]
[139.01666260 13.52137661]
[124.53830719 17.44273949]
[109.61360931 15.94161034]
[96.20617676 9.21549034]
[86.07872009 -1.85270131]
[89.40097809 12.77475929]
[92.72323608 27.40221977]
[96.04549408 42.02967834]
[99.53751373 45.28772736]
[101.01992035 50.77402878]
[99.24204254 57.14196777]
[102.12731171 71.86186218]
[105.01258087 86.58174896]
[114.05645752 97.24476624]
[109.70730591 110.53297424]
[112.59258270 125.25286865]
[115.47785187 139.97276306]
[118.36312866 154.69265747]
[121.35790253 169.39065552]
[124.46201324 184.06596375]
[129.29957581 191.81423950]
[127.50137329 198.98280334]
[130.38664246 213.70268250]
[133.27191162 228.42257690]
[136.59417725 243.05004883]
[147.54078674 254.47293091]
[143.23718262 268.73223877]
[146.99348450 283.25430298]
[150.74978638 297.77636719]
[154.50608826 312.29843140]
[158.26239014 326.82049561]
[162.01869202 341.34255981]
[165.77497864 355.86459351]
[169.43505859 359.58630371]
[171.13188171 363.90765381]
[170.96580505 367.98040771]
[169.35928345 371.11911011]
[172.46339417 385.79443359]
[175.56750488 400.46972656]
[178.67161560 415.14501953]
[181.77572632 429.82031250]
[196.84375000 430.45736694]
[211.27970886 434.82244873]
[224.17614746 442.64117432]
[234.72241211 453.42202759]
[242.25552368 466.48736572]
[246.30197144 481.01586914]
[246.60737610 496.09423828]
[243.15254211 510.77468872]
[236.15464783 524.13433838]
[226.05357361 535.33337402]
[213.48431396 543.66790771]
[199.23693848 548.61395264]
[184.20707703 549.86059570]
[169.33952332 547.32952881]
[155.56884766 541.17980957]
[143.76068115 531.79797363]
[134.65733337 519.77386475]
[128.83100891 505.86325073]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 192]
[6 191]
[7 190]
[8 189]
[9 188]
[10 184]
[11 183]
[12 182]
[13 181]
[14 180]
[15 179]
[16 178]
[18 176]
[23 175]
[24 174]
[25 173]
[26 171]
[27 170]
[29 169]
[30 168]
[31 167]
[32 166]
[34 164]
[35 163]
[36 162]
[37 159]
[38 158]
[39 157]
[40 156]
[41 140]
[42 139]
[43 138]
[44 137]
[45 136]
[46 135]
[48 134]
[49 133]
[50 132]
[71 131]
[72 130]
[73 129]
[74 128]
[85 127]
[86 126]
[87 125]
[88 124]
[89 123]
[90 122]
[91 121]
[92 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
