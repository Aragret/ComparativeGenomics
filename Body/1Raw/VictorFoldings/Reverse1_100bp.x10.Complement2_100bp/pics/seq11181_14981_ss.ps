%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCACUCGGAUCCCACAACACUCACAUUUAAUCACGCUACUCAUCCCCUUCCCUCGGAUGAUCCCACAUCUUAUCCUUCAUACACGGACGCAAGUCCGCAxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[-19.58266830 618.49877930]
[-19.78097725 633.52124023]
[-22.02306938 648.37677002]
[-26.26717186 662.78863525]
[-32.43422318 676.48828125]
[-40.40933609 689.22058105]
[-50.04393387 700.74829102]
[-61.15853119 710.85668945]
[-73.54607391 719.35742188]
[-86.97578430 726.09216309]
[-101.19747925 730.93542480]
[-115.94622040 733.79699707]
[-130.94723511 734.62353516]
[-145.92108154 733.39965820]
[-160.58879089 730.14819336]
[-174.67712402 724.92968750]
[-187.92359924 717.84136963]
[-200.08148193 709.01525879]
[-210.92425537 698.61584473]
[-220.24992371 686.83679199]
[-227.88475037 673.89758301]
[-233.68652344 660.03930664]
[-237.54714966 645.52001953]
[-239.39469910 630.61029053]
[-239.19476318 615.58782959]
[-236.95106506 600.73254395]
[-232.70539856 586.32116699]
[-226.53686523 572.62213135]
[-218.56037903 559.89068604]
[-208.92453003 548.36401367]
[-197.80883789 538.25683594]
[-185.42037964 529.75744629]
[-171.98992920 523.02416992]
[-157.76771545 518.18243408]
[-143.01866150 515.32250977]
[-128.01756287 514.49755859]
[-113.04384613 515.72308350]
[-98.37648773 518.97613525]
[-84.28872681 524.19616699]
[-77.21162415 510.97061157]
[-70.13451385 497.74508667]
[-63.05741119 484.51956177]
[-55.98030472 471.29403687]
[-48.90320206 458.06851196]
[-41.82609558 444.84298706]
[-45.03087234 433.17868042]
[-39.24305725 422.10235596]
[-27.08201599 417.80447388]
[-19.80878639 404.68576050]
[-12.53555775 391.56707764]
[-16.87397385 377.36447144]
[-9.68476486 363.95663452]
[5.24164057 359.50241089]
[12.51486969 346.38372803]
[18.58870316 332.66845703]
[23.41470146 318.46600342]
[28.24069977 304.26354980]
[33.06669617 290.06109619]
[20.29573441 279.37658691]
[12.59117794 264.57385254]
[11.16002560 247.91064453]
[16.24996758 231.94085693]
[27.10708046 219.12294006]
[42.08734894 211.44154358]
[58.90557098 210.10015869]
[63.30656815 195.76031494]
[67.70756531 181.42047119]
[72.10856628 167.08062744]
[76.50956726 152.74076843]
[80.91056061 138.40092468]
[85.20468140 124.02870941]
[89.39169312 109.62493134]
[86.24539948 96.00170135]
[96.20452118 86.18805695]
[100.39153290 71.78427887]
[104.57854462 57.38049316]
[108.11821747 42.80411911]
[111.00348663 28.08422661]
[113.88876343 13.36433601]
[108.95043182 -1.66641474]
[118.99135590 -12.66773701]
[121.87662506 -27.38762856]
[115.50627136 -44.66478348]
[127.54745483 -57.43101883]
[130.21325684 -72.19223785]
[121.31074524 -82.29965973]
[119.87594604 -95.49631500]
[126.20989990 -106.94023132]
[137.80413818 -112.56188202]
[140.68942261 -127.28176880]
[143.57469177 -142.00166321]
[137.03981018 -153.12182617]
[139.74600220 -165.32266235]
[149.71003723 -172.18157959]
[152.81414795 -186.85687256]
[155.69941711 -201.57676697]
[158.36521912 -216.33798218]
[161.03100586 -231.09919739]
[163.69680786 -245.86042786]
[166.36259460 -260.62164307]
[152.70973206 -267.04513550]
[141.18522644 -276.78414917]
[132.57482910 -289.17462158]
[127.46564484 -303.37173462]
[126.20600128 -318.40756226]
[128.88179016 -333.25689697]
[135.31056213 -346.90728760]
[145.05401611 -358.42803955]
[157.44779968 -367.03363037]
[171.64691162 -372.13732910]
[186.68321228 -373.39117432]
[201.53150940 -370.70965576]
[215.17941284 -364.27560425]
[226.69639587 -354.52770996]
[235.29721069 -342.13058472]
[240.39543152 -327.92953491]
[241.64347839 -312.89273071]
[238.95622253 -298.04547119]
[232.51689148 -284.40005493]
[222.76455688 -272.88684082]
[210.36412048 -264.29080200]
[196.16108704 -259.19805908]
[181.12382507 -257.95584106]
[178.45802307 -243.19462585]
[175.79222107 -228.43341064]
[173.12643433 -213.67219543]
[170.46063232 -198.91098022]
[172.39950562 -194.54635620]
[171.61714172 -188.91743469]
[167.48945618 -183.75276184]
[164.38534546 -169.07746887]
[170.71600342 -152.71012878]
[158.29458618 -139.11639404]
[155.40931702 -124.39649963]
[152.52403259 -109.67660522]
[162.49432373 -96.13289642]
[159.52584839 -79.23606110]
[144.97447205 -69.52643585]
[142.30867004 -54.76522064]
[148.94601440 -44.65224457]
[146.84590149 -32.33261490]
[136.59652710 -24.50235558]
[133.71124268 -9.78246498]
[138.85595703 4.19542074]
[128.60865784 16.24960899]
[125.72338104 30.96949959]
[122.83810425 45.68939209]
[135.85859680 38.24178696]
[150.36734009 42.04919815]
[158.05307007 54.93056488]
[154.51304626 69.50685120]
[141.77516174 77.42810822]
[127.13625336 74.15666962]
[118.98232269 61.56750488]
[114.79531860 75.97129059]
[110.60830688 90.37506866]
[113.75460052 103.99829865]
[103.79547882 113.81194305]
[99.60846710 128.21572876]
[100.21805573 137.32978821]
[95.25041199 142.80192566]
[90.84941101 157.14176941]
[86.44841003 171.48161316]
[82.04741669 185.82147217]
[77.64641571 200.16131592]
[73.24541473 214.50115967]
[84.06978607 222.46936035]
[91.89888000 233.36671448]
[95.98220062 246.12457275]
[95.93576050 259.49710083]
[91.77811432 272.18301392]
[83.92719269 282.95208740]
[73.15837097 290.76464844]
[60.52785873 294.87176514]
[47.26915359 294.88708496]
[42.44315338 309.08953857]
[37.61715698 323.29199219]
[32.79116058 337.49444580]
[44.54386520 328.17382812]
[59.15747452 324.79116821]
[73.81032562 327.99957275]
[85.67318726 337.17959595]
[92.45552063 350.55868530]
[92.84776306 365.55355835]
[86.77418518 379.26892090]
[75.40749359 389.05657959]
[60.94242477 393.02670288]
[46.17195129 390.41268921]
[33.94802094 381.71926880]
[26.63088608 368.62500000]
[25.63356400 353.65695190]
[18.36033440 366.77563477]
[22.49023628 381.79501343]
[14.92726707 394.99563599]
[0.58313632 398.84030151]
[-6.69009304 411.95898438]
[-13.96332264 425.07769775]
[-13.21628952 443.47668457]
[-28.60056686 451.92010498]
[-35.67767334 465.14562988]
[-42.75477982 478.37115479]
[-49.83188248 491.59667969]
[-56.90898895 504.82220459]
[-63.98609543 518.04772949]
[-71.06320190 531.27325439]
[-58.90436935 540.09802246]
[-48.06047440 550.49627686]
[-38.73353195 562.27429199]
[-31.09729767 575.21270752]
[-25.29402733 589.07037354]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 205]
[40 204]
[41 203]
[42 202]
[43 201]
[44 200]
[45 199]
[48 197]
[49 196]
[50 195]
[53 192]
[54 191]
[55 178]
[56 177]
[57 176]
[58 175]
[65 166]
[66 165]
[67 164]
[68 163]
[69 162]
[70 161]
[71 159]
[72 158]
[74 156]
[75 155]
[76 154]
[77 147]
[78 146]
[79 145]
[81 143]
[82 142]
[84 139]
[85 138]
[89 135]
[90 134]
[91 133]
[94 131]
[95 130]
[96 127]
[97 126]
[98 125]
[99 124]
[100 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
