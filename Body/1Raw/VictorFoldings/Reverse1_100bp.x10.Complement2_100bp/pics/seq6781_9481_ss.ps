%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxAAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUA\
) } def
/len { sequence length } bind def

/coor [
[76.20307159 766.04632568]
[63.67123032 774.35662842]
[49.91513062 780.42932129]
[35.33057022 784.08972168]
[20.33716965 785.23248291]
[5.36632061 783.82476807]
[-9.15123558 779.90704346]
[-22.79780197 773.59204102]
[-35.18073654 765.06146240]
[-45.94375992 754.56072998]
[-54.77719498 742.39196777]
[-61.42689133 728.90533447]
[-65.70152283 714.48883057]
[-67.47809601 699.55725098]
[-66.70549011 684.54022217]
[-63.40595245 669.86981201]
[-57.67440414 655.96813965]
[-49.67575455 643.23510742]
[-39.64014435 632.03717041]
[-27.85631371 622.69641113]
[-14.66331005 615.48162842]
[-0.44072130 610.60046387]
[14.40223980 608.19329834]
[29.43851280 608.32940674]
[32.10430908 593.56817627]
[34.77010345 578.80694580]
[37.43589783 564.04571533]
[40.10169601 549.28448486]
[42.76749039 534.52331543]
[45.43328476 519.76208496]
[47.98911667 504.98141479]
[42.43051910 491.16290283]
[52.31437683 478.80895996]
[54.76010513 464.00970459]
[57.20583344 449.21041870]
[59.65156174 434.41116333]
[62.09728622 419.61187744]
[64.54301453 404.81262207]
[57.48782730 388.74429321]
[69.28986359 374.60943604]
[71.51498413 359.77542114]
[73.74009705 344.94137573]
[75.96521759 330.10733032]
[58.84991074 322.36273193]
[44.90261459 309.75399780]
[35.46035767 293.47686768]
[31.43226051 275.07925415]
[33.21203613 256.31423950]
[40.63949966 238.97288513]
[53.01495743 224.71333313]
[69.16509247 214.90225220]
[87.55422211 210.48385620]
[88.22400665 195.49880981]
[88.89379120 180.51377869]
[89.56357574 165.52873230]
[90.23336029 150.54370117]
[83.07208252 137.48362732]
[91.41787720 124.04271698]
[92.08766174 109.05767822]
[92.53427124 94.06432343]
[92.75759888 79.06598663]
[92.98092651 64.06764984]
[93.09259033 49.06806564]
[93.09259033 34.06806564]
[93.09259033 19.06806564]
[92.42280579 4.08302736]
[91.08457184 -10.85715771]
[82.14693451 -23.91201210]
[88.71791077 -37.27882004]
[79.78027344 -50.33367157]
[86.35124969 -63.70048141]
[85.01301575 -78.64066315]
[83.67478180 -93.58084869]
[82.33654022 -108.52103424]
[80.88712311 -123.45084381]
[64.61818695 -128.94732666]
[52.42782593 -140.96342468]
[46.73462296 -157.04718018]
[48.63836288 -173.94656372]
[57.70795059 -188.26704407]
[72.07780457 -197.15341187]
[70.07378387 -212.01893616]
[68.06977081 -226.88446045]
[66.06575775 -241.74998474]
[64.06174469 -256.61550903]
[49.03895569 -257.45950317]
[34.44743729 -261.13156128]
[20.81466484 -267.49899292]
[8.63345337 -276.33157349]
[-1.65585399 -287.31002808]
[-9.68130493 -300.03750610]
[-15.15278435 -314.05389404]
[-17.87250137 -328.85253906]
[-17.74213982 -343.89846802]
[-14.76641273 -358.64773560]
[-9.05289173 -372.56723022]
[-0.80811483 -385.15374756]
[9.66987324 -395.95227051]
[22.00230026 -404.57247925]
[35.74335480 -410.70269775]
[50.39630890 -414.12139893]
[65.43146515 -414.70495605]
[80.30532074 -412.43225098]
[94.48017883 -407.38549805]
[107.44364166 -399.74710083]
[118.72708130 -389.79318237]
[127.92260742 -377.88357544]
[134.69781494 -364.44879150]
[138.80776978 -349.97451782]
[140.10391235 -334.98397827]
[138.53939819 -320.01904297]
[134.17076111 -305.62072754]
[127.15592957 -292.30950928]
[117.74848938 -280.56658936]
[106.28852081 -270.81640625]
[93.19028473 -263.41149902]
[78.92727661 -258.61953735]
[80.93128967 -243.75399780]
[82.93530273 -228.88847351]
[84.93931580 -214.02294922]
[86.94332886 -199.15742493]
[99.58210754 -196.15657043]
[110.47566223 -189.02180481]
[118.31547546 -178.58415222]
[122.15106201 -166.07293701]
[121.50514221 -152.97097778]
[116.43290710 -140.83877563]
[107.51807404 -131.12876892]
[95.80573273 -125.01136780]
[99.62804413 -118.68588257]
[97.27672577 -109.85926819]
[98.61495972 -94.91908264]
[99.95319366 -79.97889709]
[101.29143524 -65.03871155]
[110.13334656 -53.05248260]
[103.65809631 -38.61705399]
[112.50001526 -26.63082123]
[106.02475739 -12.19539165]
[107.36299133 2.74479318]
[117.78706360 -8.04124641]
[132.78189087 -8.43505764]
[143.75776672 1.78895295]
[144.42718506 16.77400780]
[134.40669250 27.93598747]
[119.43647766 28.88080215]
[108.09259033 19.06806564]
[108.09259033 34.06806564]
[108.09259033 49.06806564]
[111.23609161 55.75687790]
[107.97926331 64.29097748]
[107.75593567 79.28931427]
[107.53260803 94.28765106]
[110.23906708 98.78087616]
[110.23539734 104.47062683]
[107.07270050 109.72746277]
[106.40291595 124.71250153]
[113.51628876 138.84439087]
[105.21839905 151.21348572]
[104.54861450 166.19851685]
[103.87882996 181.18356323]
[103.20904541 196.16859436]
[102.53926086 211.15364075]
[113.60719299 214.14114380]
[123.91958618 219.13665771]
[133.11598206 225.96333313]
[140.87533569 234.38035583]
[146.92723083 244.09143066]
[151.06130981 254.75520325]
[153.13461304 265.99731445]
[153.07646179 277.42346191]
[150.89088440 288.63330078]
[146.65644836 299.23443604]
[140.52340698 308.85610962]
[132.70834351 317.16229248]
[123.48654175 323.86328125]
[113.18234253 328.72595215]
[102.15764618 331.58172607]
[90.79926300 332.33242798]
[88.57414246 347.16647339]
[86.34902191 362.00051880]
[84.12390900 376.83456421]
[91.14880371 387.65185547]
[88.99011230 399.96136475]
[79.34228516 407.25833130]
[76.89656067 422.05761719]
[74.45082855 436.85687256]
[72.00510406 451.65615845]
[69.55937958 466.45541382]
[67.11364746 481.25469971]
[72.49731445 496.13174438]
[62.78838730 507.42715454]
[64.47669220 516.40417480]
[60.19450378 522.42785645]
[57.52870560 537.18908691]
[54.86291122 551.95031738]
[52.19711685 566.71154785]
[49.53132248 581.47271729]
[46.86552429 596.23394775]
[44.19972992 610.99517822]
[58.33378220 616.12707520]
[71.39714813 623.57397461]
[83.01396942 633.12164307]
[92.85000610 644.49530029]
[100.62225342 657.36779785]
[106.10709381 671.36865234]
[109.14670563 686.09509277]
[109.65364838 701.12347412]
[107.61332703 716.02130127]
[103.08444977 730.35992432]
[96.19731903 743.72686768]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 199]
[25 198]
[26 197]
[27 196]
[28 195]
[29 194]
[30 193]
[31 191]
[33 189]
[34 188]
[35 187]
[36 186]
[37 185]
[38 184]
[40 181]
[41 180]
[42 179]
[43 178]
[52 162]
[53 161]
[54 160]
[55 159]
[56 158]
[58 156]
[59 155]
[60 152]
[61 151]
[62 150]
[63 148]
[64 147]
[65 146]
[66 139]
[67 138]
[69 136]
[71 134]
[72 133]
[73 132]
[74 131]
[75 129]
[81 121]
[82 120]
[83 119]
[84 118]
[85 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
