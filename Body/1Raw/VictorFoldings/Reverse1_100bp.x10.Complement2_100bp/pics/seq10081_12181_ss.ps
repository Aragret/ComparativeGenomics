%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCGGCGUGAGCAUUCCCCACCUAAAAAGAUACAUCGGCAACUCAACACCAUCAGUUUUACAUUAUUAAUAAUCAUCAUUCCGAUCCUCCCACAACUAAxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[165.53422546 387.44125366]
[178.40351868 379.57788086]
[174.00251770 365.23803711]
[169.60151672 350.89819336]
[165.20053101 336.55834961]
[160.79953003 322.21850586]
[147.31651306 320.04470825]
[136.03129578 312.23620605]
[129.17866516 300.26995850]
[128.14540100 286.45294189]
[133.18997192 273.47726440]
[143.38108826 263.89581299]
[139.19407654 249.49201965]
[135.00706482 235.08824158]
[124.02469635 225.02659607]
[127.60235596 209.61520386]
[123.41534424 195.21142578]
[118.80133057 180.93869019]
[113.76441956 166.80966187]
[108.72750092 152.68063354]
[103.52046204 147.43577576]
[103.72248077 138.30358887]
[98.89648438 124.10112762]
[91.31207275 137.04240417]
[76.83364868 140.96354675]
[63.75511932 133.61834717]
[59.56845474 119.21446228]
[66.67196655 106.00309753]
[80.99644470 101.55232239]
[94.33555603 108.41101837]
[89.52436066 101.94380188]
[90.85340881 93.59128571]
[87.53115082 78.96382141]
[84.20888519 64.33636475]
[80.56079865 49.78674316]
[76.58870697 35.32221985]
[72.61660767 20.85769463]
[68.64450836 6.39317083]
[57.52904510 -4.86547041]
[61.61987305 -19.18728638]
[57.64777756 -33.65180969]
[53.67568207 -48.11633301]
[43.92724991 -52.94092941]
[38.55397797 -62.14463425]
[39.12139511 -72.56703186]
[45.20107651 -80.77985382]
[41.66140366 -95.35623169]
[38.12173080 -109.93260956]
[34.58206177 -124.50897980]
[31.04238701 -139.08535767]
[15.99546623 -138.67431641]
[1.19768429 -141.39982605]
[-12.70457649 -147.14038086]
[-25.10456848 -155.64279175]
[-35.46165466 -166.53343201]
[-43.32487869 -179.33456421]
[-48.35261154 -193.48538208]
[-50.32737350 -208.36651611]
[-49.16526413 -223.32719421]
[-44.91949844 -237.71366882]
[-37.77799988 -250.89776611]
[-28.05505943 -262.30438232]
[-16.17753220 -271.43646240]
[-2.66607046 -277.89682007]
[-6.20574284 -292.47320557]
[-9.74541569 -307.04959106]
[-13.28508759 -321.62594604]
[-16.82476044 -336.20233154]
[-20.31212997 -321.61334229]
[-27.71838379 -308.56930542]
[-38.45943451 -298.09887695]
[-51.68819809 -291.02780151]
[-66.36139679 -287.91378784]
[-81.32184601 -289.00234985]
[-95.38969421 -294.20770264]
[-107.45550537 -303.11929321]
[-116.56770325 -315.03430176]
[-122.00767517 -329.01309204]
[-123.34639740 -343.95324707]
[-120.47828674 -358.67648315]
[-113.62953949 -372.02169800]
[-103.34028625 -382.93643188]
[-90.42195892 -390.55987549]
[-75.89337158 -394.29083252]
[-60.90029526 -393.83505249]
[-46.62515640 -389.22851562]
[-34.19374466 -380.83447266]
[-24.58645439 -369.31491089]
[-18.56002426 -355.57501221]
[-17.66720963 -370.54840088]
[-16.77439308 -385.52182007]
[-15.88157749 -400.49520874]
[-14.98876095 -415.46862793]
[-14.20743942 -430.44827271]
[-13.53765392 -445.43328857]
[-27.96603012 -449.82336426]
[-40.84891891 -457.66442871]
[-51.37648773 -468.46356201]
[-58.88696289 -481.54190063]
[-62.90823746 -496.07739258]
[-63.18752289 -511.15628052]
[-59.70726776 -525.83068848]
[-52.68624496 -539.17822266]
[-42.56579590 -550.35980225]
[-29.98210335 -558.67248535]
[-15.72619057 -563.59387207]
[-0.69419438 -564.81451416]
[14.16896057 -562.25762939]
[27.92896461 -556.08404541]
[39.72085190 -546.68182373]
[48.80337143 -534.64190674]
[54.60559464 -520.72125244]
[56.76278305 -505.79486084]
[55.13933945 -490.80102539]
[49.83731079 -476.68228149]
[41.18998718 -464.32611084]
[29.74094772 -454.50927734]
[16.20988846 -447.84884644]
[1.44738472 -444.76351929]
[0.77759963 -429.77847290]
[3.61929345 -422.95596313]
[-0.01535558 -414.57580566]
[-0.90817147 -399.60241699]
[-1.80098736 -384.62899780]
[-2.69380307 -369.65557861]
[-3.58661914 -354.68218994]
[-2.24838495 -339.74200439]
[1.29128754 -325.16561890]
[4.83095980 -310.58926392]
[8.37063217 -296.01287842]
[11.91030502 -281.43649292]
[26.87987137 -281.89236450]
[41.62281418 -279.22470093]
[55.49427795 -273.54766846]
[67.88701630 -265.10717773]
[78.25794983 -254.27017212]
[86.15201569 -241.50866699]
[91.22208405 -227.37918091]
[93.24424744 -212.49850464]
[92.12771606 -197.51675415]
[87.91885376 -183.08898926]
[80.79930878 -169.84651184]
[71.07814026 -158.36933899]
[59.17840576 -149.16069031]
[45.61876297 -142.62503052]
[49.15843582 -128.04866028]
[52.69810867 -113.47227478]
[56.23778152 -98.89590454]
[59.77745438 -84.31952667]
[74.11177063 -71.34207916]
[68.14020538 -52.08842850]
[72.11230469 -37.62390518]
[76.08439636 -23.15938187]
[86.91575623 -12.93533993]
[83.10903931 2.42107487]
[87.08113098 16.88559914]
[91.05323029 31.35012245]
[95.02532196 45.81464767]
[97.89241791 47.86699295]
[99.90788269 51.41000748]
[100.38191986 56.02829361]
[98.83634949 61.01410294]
[102.15860748 75.64156342]
[105.48086548 90.26902771]
[108.91192627 104.87134552]
[113.09893799 119.27513123]
[117.92493439 133.47758484]
[122.85652924 147.64372253]
[127.89344788 161.77275085]
[132.93035889 175.90177917]
[136.33613586 178.59523010]
[138.49093628 181.89997864]
[139.35621643 185.34768677]
[139.04946899 188.50561523]
[137.81912231 191.02441406]
[142.00613403 205.42819214]
[153.28799438 216.52009583]
[149.41084290 230.90122986]
[153.59785461 245.30502319]
[157.78486633 259.70880127]
[173.88252258 263.48474121]
[185.81103516 274.79870605]
[190.37988281 290.49401855]
[186.43295288 306.26034546]
[175.13937378 317.81750488]
[179.54037476 332.15734863]
[183.94137573 346.49719238]
[188.34236145 360.83703613]
[192.74336243 375.17687988]
[207.80812073 374.46710205]
[222.57595825 377.52685547]
[236.11853027 384.16381836]
[247.58454895 393.96081543]
[256.25326538 406.30197144]
[261.57974243 420.41152954]
[263.22915649 435.40252686]
[261.09780884 450.33264160]
[255.31971741 464.26333618]
[246.25807190 476.31893921]
[234.48248291 485.74160767]
[220.73318481 491.93899536]
[205.87448120 494.52157593]
[190.84040833 493.32699585]
[176.57598877 488.43035889]
[163.97792053 480.13943481]
[153.83811951 468.97540283]
[146.79397583 455.64007568]
[143.28831482 440.97171021]
[143.54147339 425.89236450]
[147.53756714 411.34994507]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 189]
[3 188]
[4 187]
[5 186]
[6 185]
[12 180]
[13 179]
[14 178]
[16 176]
[17 175]
[18 170]
[19 169]
[20 168]
[22 167]
[23 166]
[30 165]
[32 164]
[33 163]
[34 162]
[35 158]
[36 157]
[37 156]
[38 155]
[40 153]
[41 152]
[42 151]
[46 149]
[47 148]
[48 147]
[49 146]
[50 145]
[64 131]
[65 130]
[66 129]
[67 128]
[68 127]
[89 126]
[90 125]
[91 124]
[92 123]
[93 122]
[94 120]
[95 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
