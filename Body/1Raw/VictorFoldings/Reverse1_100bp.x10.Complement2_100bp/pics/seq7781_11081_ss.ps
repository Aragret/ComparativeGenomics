%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[55.46688843 565.50170898]
[52.13071442 580.21673584]
[45.09882355 593.56640625]
[34.85066605 604.64062500]
[22.08497620 612.68420410]
[7.67214155 617.14880371]
[-7.40514755 617.72998047]
[-22.11889648 614.38812256]
[-35.46589661 607.35113525]
[-46.53612900 597.09869385]
[-54.57480621 584.32989502]
[-59.03383636 569.91534424]
[-59.60919571 554.83782959]
[-56.26165771 540.12536621]
[-49.21945953 526.78106689]
[-38.96275330 515.71478271]
[-26.19085693 507.68106079]
[-11.77457905 503.22760010]
[3.30315471 502.65805054]
[6.62541437 488.03057861]
[1.89916408 473.90573120]
[12.50081730 462.16198730]
[7.77456760 448.03710938]
[18.37622070 436.29336548]
[21.69848061 421.66592407]
[25.02074051 407.03845215]
[28.34300041 392.41098022]
[26.75903511 385.19207764]
[31.82514572 377.59124756]
[35.36481857 363.01489258]
[38.90449142 348.43850708]
[42.44416428 333.86212158]
[37.92873383 319.66845703]
[48.70405960 308.08386230]
[52.24373245 293.50747681]
[46.40319443 276.95892334]
[59.22384262 263.74102783]
[62.54610062 249.11358643]
[57.81985092 234.98870850]
[68.42150879 223.24496460]
[71.74376678 208.61750793]
[75.06602478 193.99005127]
[78.27929688 179.33825684]
[81.38340759 164.66296387]
[84.15901947 149.92199707]
[86.60474396 135.12272644]
[89.05047607 120.32345581]
[91.49620056 105.52418518]
[89.59895325 97.69009399]
[94.09008789 90.52346039]
[96.75588226 75.76224518]
[95.14311218 71.73075104]
[94.91959381 67.79190063]
[95.88560486 64.37104797]
[97.72381592 61.78500748]
[100.04483795 60.21306610]
[103.58451080 45.63669205]
[107.12418365 31.06031609]
[110.66385651 16.48394012]
[114.20352173 1.90756536]
[106.24382782 -11.48201847]
[110.04120636 -26.21411133]
[122.85517883 -33.71995163]
[118.59293365 -48.95621872]
[129.11508179 -59.49821854]
[132.54614258 -74.10054016]
[135.86839294 -88.72800446]
[138.86317444 -103.42600250]
[141.52896118 -118.18722534]
[144.19476318 -132.94844055]
[145.19902039 -147.91477966]
[144.52923584 -162.89982605]
[143.85945129 -177.88485718]
[141.04878235 -182.28340149]
[140.28294373 -186.86236572]
[141.28825378 -190.81260681]
[143.50952148 -193.55090332]
[143.50952148 -208.55090332]
[143.50952148 -223.55090332]
[143.50952148 -238.55090332]
[130.91537476 -250.69203186]
[130.99703979 -267.84744263]
[143.21560669 -279.40362549]
[142.99227905 -294.40197754]
[139.73544312 -302.93606567]
[142.87893677 -309.62487793]
[142.87893677 -324.62487793]
[142.87893677 -339.62487793]
[142.87893677 -354.62487793]
[128.09063721 -357.38540649]
[114.06145477 -362.81649780]
[101.26924133 -370.73318481]
[90.14968109 -380.86581421]
[81.08150482 -392.86926270]
[74.37357330 -406.33471680]
[70.25436401 -420.80352783]
[68.86415863 -435.78292847]
[70.25032043 -450.76266479]
[74.36563873 -465.23260498]
[81.06993866 -478.69985962]
[90.13487244 -490.70574951]
[101.25170135 -500.84136963]
[114.04178619 -508.76150513]
[128.06950378 -514.19641113]
[142.85707092 -516.96087646]
[157.90081787 -516.96087646]
[172.68838501 -514.19641113]
[186.71609497 -508.76150513]
[199.50617981 -500.84136963]
[210.62301636 -490.70574951]
[219.68795776 -478.69985962]
[226.39225769 -465.23260498]
[230.50756836 -450.76266479]
[231.89372253 -435.78292847]
[230.50352478 -420.80352783]
[226.38430786 -406.33471680]
[219.67639160 -392.86926270]
[210.60821533 -380.86581421]
[199.48864746 -370.73318481]
[186.69642639 -362.81649780]
[172.66725159 -357.38540649]
[157.87893677 -354.62487793]
[157.87893677 -339.62487793]
[157.87893677 -324.62487793]
[157.87893677 -309.62487793]
[157.99061584 -294.62530518]
[158.21394348 -279.62695312]
[168.62454224 -272.03427124]
[172.82385254 -259.64688110]
[169.06658936 -246.91528320]
[158.50952148 -238.55090332]
[158.50952148 -223.55090332]
[158.50952148 -208.55090332]
[158.50952148 -193.55090332]
[158.84449768 -178.55464172]
[159.51428223 -163.56961060]
[160.18406677 -148.58456421]
[167.01760864 -161.93757629]
[178.16471863 -171.97459412]
[192.15881348 -177.37509155]
[207.15870667 -177.42854309]
[221.19093323 -172.12791443]
[232.40930176 -162.17059326]
[239.33782959 -148.86662292]
[241.06495667 -133.96638489]
[237.36346436 -119.43026733]
[228.72032166 -107.17073059]
[216.27270508 -98.80073547]
[201.65830994 -95.42149353]
[186.79989624 -97.47761536]
[173.65235901 -104.69856262]
[163.94546509 -116.13431549]
[158.95597839 -130.28263855]
[156.29017639 -115.52142334]
[153.62438965 -100.76020813]
[155.32363892 -97.67073059]
[155.61090088 -93.60471344]
[154.04350281 -89.23475647]
[150.49584961 -85.40573883]
[147.17359924 -70.77828217]
[148.75756836 -63.55935669]
[143.69145203 -55.95854568]
[148.20687866 -41.76487732]
[137.43154907 -30.18028069]
[145.37603760 -17.63353348]
[141.99394226 -2.80059266]
[128.77990723 5.44723797]
[125.24022675 20.02361298]
[121.70055389 34.59998703]
[118.16088104 49.17636490]
[114.62120819 63.75273895]
[111.51709747 78.42803955]
[108.85130310 93.18926239]
[106.29547119 107.96990967]
[103.84974670 122.76918030]
[101.40401459 137.56845093]
[98.95829010 152.36772156]
[100.79788208 157.25270081]
[100.59957123 161.89102173]
[98.79856110 165.54771423]
[96.05870819 167.76707458]
[92.95460510 182.44236755]
[94.24037933 191.48585510]
[89.69348907 197.31231689]
[86.37122345 211.93977356]
[83.04896545 226.56723022]
[87.53758240 241.73834229]
[77.17356110 252.43583679]
[73.85130310 267.06329346]
[80.05219269 278.37310791]
[76.98394012 290.48794556]
[66.82010651 297.04714966]
[63.28043747 311.62353516]
[67.54268646 326.85980225]
[57.02053833 337.40179443]
[53.48086548 351.97817993]
[49.94119263 366.55456543]
[46.40151978 381.13092041]
[42.97045898 395.73324585]
[39.64820099 410.36071777]
[36.32594299 424.98815918]
[33.00368118 439.61563110]
[37.49230194 454.78674316]
[27.12827873 465.48425293]
[31.61689758 480.65536499]
[21.25287437 491.35284424]
[17.93061447 505.98031616]
[31.28304482 513.00701904]
[42.36119080 523.25091553]
[50.40972519 536.01348877]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 207]
[20 206]
[22 204]
[24 202]
[25 201]
[26 200]
[27 199]
[29 198]
[30 197]
[31 196]
[32 195]
[34 193]
[35 192]
[37 189]
[38 188]
[40 186]
[41 185]
[42 184]
[43 182]
[44 181]
[45 177]
[46 176]
[47 175]
[48 174]
[50 173]
[51 172]
[56 171]
[57 170]
[58 169]
[59 168]
[60 167]
[63 164]
[65 162]
[66 160]
[67 159]
[68 155]
[69 154]
[70 153]
[71 137]
[72 136]
[73 135]
[77 134]
[78 133]
[79 132]
[80 131]
[83 127]
[84 126]
[86 125]
[87 124]
[88 123]
[89 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
