%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[35.19486237 568.13073730]
[20.85403061 572.65270996]
[5.95523262 574.68591309]
[-9.07286358 574.17175293]
[-23.79786873 571.12512207]
[-37.79611588 565.63354492]
[-50.66484451 557.85510254]
[-62.03379822 548.01361084]
[-71.57587433 536.39227295]
[-79.01651764 523.32531738]
[-84.14165497 509.18878174]
[-86.80381775 494.38943481]
[-86.92642212 479.35305786]
[-84.50592804 464.51226807]
[-79.61198425 450.29403687]
[-72.38539886 437.10751343]
[-63.03409576 425.33209229]
[-51.82712555 415.30651855]
[-39.08694458 407.31930542]
[-25.18010330 401.60021973]
[-10.50673676 398.31384277]
[4.51097775 397.55471802]
[6.29344368 382.66098022]
[8.07590961 367.76727295]
[9.85837555 352.87356567]
[-1.28839982 362.91094971]
[-16.19366455 364.59411621]
[-29.29812622 357.29528809]
[-35.71414185 343.73672485]
[-33.04869843 328.97543335]
[-22.29593849 318.51702881]
[-7.46637630 316.26223755]
[5.90892696 323.05203247]
[12.84151268 336.35513306]
[16.38118553 321.77874756]
[19.92085838 307.20239258]
[23.46052933 292.62600708]
[27.00020218 278.04962158]
[22.48477364 263.85595703]
[33.26010132 252.27136230]
[36.79977417 237.69499207]
[24.97234154 246.92060852]
[10.04480743 248.39326477]
[-3.35736823 241.65667725]
[-11.08137703 228.79823303]
[-10.73385048 213.80226135]
[-2.42247367 201.31542969]
[11.27738285 195.20690918]
[26.12067032 197.36950684]
[37.50803375 207.13311768]
[41.91098022 221.47262573]
[47.36633682 207.49983215]
[52.82169342 193.52702332]
[58.27705002 179.55422974]
[57.21392441 174.89817810]
[59.06441498 169.52484131]
[64.10845947 165.25059509]
[69.97741699 151.44642639]
[67.83666992 136.70646667]
[80.35665131 127.03378296]
[86.22561646 113.22960663]
[80.90299988 99.75311279]
[86.57223511 86.41871643]
[99.97020721 80.90142822]
[105.83917236 67.09725189]
[111.70812988 53.29307556]
[117.37091827 39.40304947]
[122.82627106 25.43025208]
[127.22727203 11.09040451]
[130.54953003 -3.53705573]
[133.87179565 -18.16451645]
[132.28430176 -24.58256912]
[133.92939758 -30.02230072]
[137.51686096 -33.17493439]
[141.27316284 -47.69699097]
[145.02946472 -62.21905136]
[139.16806030 -73.70847321]
[142.59565735 -85.72659302]
[152.95027161 -91.98027802]
[156.92237854 -106.44480133]
[160.89447021 -120.90932465]
[164.86656189 -135.37384033]
[168.83865356 -149.83837891]
[172.81076050 -164.30290222]
[171.51142883 -170.78543091]
[173.39778137 -176.14628601]
[177.12243652 -179.13557434]
[181.52343750 -193.47543335]
[185.92443848 -207.81527710]
[190.32543945 -222.15512085]
[186.97763062 -237.61807251]
[198.10858154 -247.51509094]
[202.50958252 -261.85491943]
[206.91058350 -276.19479370]
[211.31158447 -290.53463745]
[215.71258545 -304.87448120]
[202.20840454 -311.47625732]
[189.90330505 -320.10940552]
[179.10029602 -330.56127930]
[170.06542969 -342.57449341]
[163.02119446 -355.85324097]
[158.14105225 -370.07052612]
[155.54519653 -384.87619019]
[155.29753113 -399.90567017]
[157.40417480 -414.78884888]
[161.81323242 -429.15917969]
[168.41613770 -442.66281128]
[177.05027771 -454.96719360]
[187.50305176 -465.76934814]
[199.51701355 -474.80322266]
[212.79635620 -481.84634399]
[227.01402283 -486.72531128]
[241.81991577 -489.31997681]
[256.84939575 -489.56637573]
[271.73239136 -487.45852661]
[286.10238647 -483.04827881]
[299.60546875 -476.44424438]
[311.90914917 -467.80908203]
[322.71041870 -457.35543823]
[331.74328613 -445.34072876]
[338.78533936 -432.06079102]
[343.66314697 -417.84274292]
[346.25656128 -403.03662109]
[346.50173950 -388.00711060]
[344.39263916 -373.12429810]
[339.98123169 -358.75466919]
[333.37609863 -345.25213623]
[324.73989868 -332.94915771]
[314.28536987 -322.14877319]
[302.26989746 -313.11688232]
[288.98941040 -306.07592773]
[274.77093506 -301.19931030]
[259.96459961 -298.60708618]
[244.93507385 -298.36315918]
[230.05242920 -300.47348022]
[225.65142822 -286.13363647]
[221.25042725 -271.79379272]
[216.84942627 -257.45394897]
[212.44844055 -243.11408997]
[216.11103821 -228.67681885]
[204.66528320 -217.75411987]
[200.26428223 -203.41427612]
[195.86329651 -189.07443237]
[191.46229553 -174.73458862]
[187.27528381 -160.33079529]
[183.30317688 -145.86627197]
[179.33108521 -131.40174866]
[175.35899353 -116.93722534]
[171.38690186 -102.47270203]
[167.41479492 -88.00817871]
[172.76004028 -71.29305267]
[159.55152893 -58.46274948]
[155.79522705 -43.94069290]
[152.03892517 -29.41863251]
[148.49925232 -14.84225655]
[145.17698669 -0.21479627]
[141.85473633 14.41266346]
[153.16680908 4.56193399]
[167.86946106 1.59004772]
[182.11944580 6.27384901]
[192.19184875 17.38900375]
[195.45376587 32.03003693]
[191.05255127 46.36981583]
[180.13867188 56.65996170]
[165.56497192 60.21065140]
[151.14099121 56.09374237]
[140.63713074 45.38538361]
[136.79907227 30.88560867]
[131.34371948 44.85840607]
[132.40684509 49.51445770]
[130.55635071 54.88779068]
[125.51230621 59.16203690]
[119.64334869 72.96621704]
[113.77438354 86.77039337]
[119.09700012 100.24688721]
[113.42776489 113.58128357]
[100.02979279 119.09857178]
[94.16082764 132.90274048]
[95.88179016 148.63008118]
[83.78159332 157.31538391]
[77.91263580 171.11955261]
[72.24984741 185.00958252]
[66.79448700 198.98239136]
[61.33913422 212.95518494]
[55.88377762 226.92797852]
[51.37614822 241.23466492]
[47.83647537 255.81103516]
[52.09872055 271.04730225]
[41.57657623 281.58929443]
[38.03690720 296.16567993]
[34.49723434 310.74206543]
[30.95756149 325.31842041]
[27.41788864 339.89480591]
[24.75209236 354.65603638]
[22.96962738 369.54974365]
[21.18716049 384.44345093]
[19.40469551 399.33718872]
[33.81914520 403.61871338]
[47.30260086 410.27487183]
[59.46710968 419.11413574]
[69.96267700 429.88220215]
[78.48732758 442.26922607]
[84.79579163 455.91882324]
[88.70655060 470.43826294]
[90.10709381 485.40979004]
[88.95713043 500.40261841]
[85.28973389 514.98541260]
[79.21042633 528.73858643]
[70.89411926 541.26647949]
[60.58010101 552.20855713]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 197]
[23 196]
[24 195]
[25 194]
[34 193]
[35 192]
[36 191]
[37 190]
[38 189]
[40 187]
[41 186]
[51 185]
[52 184]
[53 183]
[54 182]
[57 181]
[58 180]
[60 178]
[61 177]
[64 174]
[65 173]
[66 172]
[67 169]
[68 168]
[69 157]
[70 156]
[71 155]
[74 154]
[75 153]
[76 152]
[79 150]
[80 149]
[81 148]
[82 147]
[83 146]
[84 145]
[87 144]
[88 143]
[89 142]
[90 141]
[92 139]
[93 138]
[94 137]
[95 136]
[96 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
