%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[78.60902405 651.37426758]
[64.27038574 646.92370605]
[50.46535492 641.02239990]
[37.34028244 633.73297119]
[25.03429794 625.13256836]
[13.67785454 615.31237793]
[3.39133477 604.37658691]
[-5.71621847 592.44110107]
[-13.54825974 579.63238525]
[-20.02176476 566.08624268]
[-25.06810951 551.94628906]
[-28.63380241 537.36242676]
[-30.68104553 522.48919678]
[-31.18813324 507.48428345]
[-30.14969254 492.50677490]
[-27.57673264 477.71542358]
[-23.49652481 463.26702881]
[-17.95232582 449.31475830]
[-11.00290394 436.00653076]
[-2.72192883 423.48336792]
[6.80281782 411.87805176]
[17.47036743 401.31359863]
[29.16763878 391.90203857]
[41.77063370 383.74307251]
[55.14575195 376.92321777]
[69.15121460 371.51480103]
[83.63854980 367.57510376]
[98.45418549 365.14593506]
[97.56137085 350.17251587]
[96.66855621 335.19912720]
[95.77574158 320.22570801]
[94.88291931 305.25231934]
[93.99010468 290.27890015]
[93.09729004 275.30551147]
[89.56124115 268.81564331]
[92.30433655 260.10284424]
[84.00644684 247.73374939]
[91.11981964 233.60185242]
[80.22452545 243.91166687]
[65.22706604 243.63552856]
[54.71867371 232.93162537]
[54.71903229 217.93162537]
[65.22793579 207.22821045]
[80.22541046 206.95280457]
[91.11981964 217.26228333]
[91.78961182 202.27723694]
[92.45939636 187.29220581]
[93.12918091 172.30715942]
[93.35250854 157.30882263]
[93.12918091 142.31048584]
[92.90585327 127.31214905]
[92.68252563 112.31381226]
[85.67764282 100.21326447]
[92.31913757 87.90951538]
[92.09580994 72.91117859]
[83.40117645 63.38405228]
[83.52394104 50.88730240]
[91.85289764 42.11490250]
[91.85289764 27.11490250]
[91.85289764 12.11490154]
[91.85289764 -2.88509798]
[79.56222534 5.71370840]
[65.13379669 1.61245227]
[59.20370102 -12.16557312]
[66.14338684 -25.46372032]
[80.83718109 -28.47908974]
[92.45265198 -18.99035645]
[93.56830597 -33.94881058]
[94.68395233 -48.90726471]
[95.79959869 -63.86571503]
[95.01828003 -78.84535217]
[92.35248566 -93.60657501]
[89.68669128 -108.36779022]
[87.02088928 -123.12900543]
[76.95420074 -135.33442688]
[82.30644226 -149.23416138]
[79.64064789 -163.99537659]
[76.97485352 -178.75659180]
[74.30905914 -193.51782227]
[59.28690338 -193.07897949]
[44.36714172 -194.88406372]
[29.88308334 -198.89277649]
[16.15830994 -205.01553345]
[3.49943495 -213.11557007]
[-7.81073618 -223.01191711]
[-17.51952934 -234.48348999]
[-25.41004753 -247.27401733]
[-31.30601501 -261.09771729]
[-35.07571030 -275.64581299]
[-36.63492203 -290.59329224]
[-35.94881058 -305.60617065]
[-33.03270721 -320.34909058]
[-27.95175934 -334.49270630]
[-20.81947517 -347.72100830]
[-11.79519558 -359.73852539]
[-1.08052385 -370.27670288]
[11.08516979 -379.10015869]
[24.43009758 -386.01177979]
[38.65613174 -390.85717773]
[53.44545746 -393.52804565]
[68.46767426 -393.96475220]
[83.38717651 -392.15753174]
[97.87065887 -388.14675903]
[111.59456635 -382.02203369]
[124.25228882 -373.92019653]
[135.56105042 -364.02224731]
[145.26820374 -352.54928589]
[153.15690613 -339.75762939]
[159.05090332 -325.93307495]
[162.81852722 -311.38446045]
[164.37561035 -296.43676758]
[163.68736267 -281.42398071]
[160.76914978 -266.68145752]
[155.68618774 -252.53857422]
[148.55201721 -239.31127930]
[139.52603149 -227.29507446]
[128.80986023 -216.75840759]
[116.64291382 -207.93667603]
[103.29699707 -201.02696228]
[89.07027435 -196.18360901]
[91.73606873 -181.42239380]
[94.40186310 -166.66117859]
[97.06765747 -151.89996338]
[106.94367981 -140.75036621]
[101.78211212 -125.79479980]
[104.44790649 -111.03358459]
[107.11370087 -96.27236938]
[109.77949524 -81.51114655]
[114.43960571 -95.76889801]
[123.42404175 -107.78055573]
[135.78466797 -116.27849579]
[150.21702576 -120.36591339]
[165.19804382 -119.61145782]
[179.14672852 -114.09474945]
[190.59104919 -104.39797211]
[198.32325745 -91.54445648]
[201.52735901 -76.89065552]
[199.86521912 -61.98303223]
[193.51223755 -48.39481735]
[183.13885498 -37.56000519]
[169.83981323 -30.62202454]
[155.01860046 -28.31305313]
[140.23930359 -30.87676430]
[127.06164551 -38.04260254]
[116.87628174 -49.05434036]
[110.75805664 -62.75006866]
[109.64240265 -47.79161453]
[108.52675629 -32.83316040]
[107.41110992 -17.87470818]
[106.85289764 -2.88509798]
[106.85289764 12.11490154]
[106.85289764 27.11490250]
[106.85289764 42.11490250]
[116.43359375 56.81786728]
[107.09414673 72.68785095]
[107.31747437 87.68618774]
[114.32235718 99.78673553]
[107.68086243 112.09048462]
[107.90419006 127.08882141]
[108.12751770 142.08715820]
[108.35084534 157.08549500]
[110.70896149 160.73149109]
[111.68595123 164.55378723]
[111.39598083 168.09657288]
[110.08953094 170.98791504]
[108.11421967 172.97694397]
[107.44443512 187.96199036]
[106.77465057 202.94702148]
[106.10485840 217.93206787]
[106.10485840 232.93206787]
[114.45065308 246.37298584]
[107.28937531 259.43304443]
[108.07069397 274.41268921]
[108.96351624 289.38607788]
[109.85633087 304.35949707]
[110.74914551 319.33291626]
[111.64196014 334.30630493]
[112.53477478 349.27972412]
[113.42758942 364.25311279]
[128.42691040 364.90454102]
[143.27975464 367.09475708]
[157.82867432 370.80056763]
[171.91943359 375.98272705]
[185.40266418 382.58624268]
[198.13543701 390.54113770]
[209.98278809 399.76309204]
[220.81912231 410.15432739]
[230.52955627 421.60470581]
[239.01116943 433.99285889]
[246.17405701 447.18746948]
[251.94227600 461.04861450]
[256.25466919 475.42941284]
[259.06555176 490.17739868]
[260.34509277 505.13623047]
[260.07977295 520.14733887]
[258.27236938 535.05163574]
[254.94203186 549.69104004]
[250.12409973 563.91046143]
[243.86961365 577.55908203]
[236.24490356 590.49230957]
[227.33078003 602.57299805]
[217.22174072 613.67303467]
[206.02494812 623.67480469]
[193.85910034 632.47229004]
[180.85313416 639.97229004]
[167.14495850 646.09515381]
[152.87985229 650.77606201]
[138.20906067 653.96539307]
[123.28809357 655.62933350]
[108.27512360 655.75024414]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 179]
[29 178]
[30 177]
[31 176]
[32 175]
[33 174]
[34 173]
[36 172]
[38 170]
[45 169]
[46 168]
[47 167]
[48 166]
[49 161]
[50 160]
[51 159]
[52 158]
[54 156]
[55 155]
[58 153]
[59 152]
[60 151]
[61 150]
[67 149]
[68 148]
[69 147]
[70 146]
[71 128]
[72 127]
[73 126]
[74 125]
[76 123]
[77 122]
[78 121]
[79 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
