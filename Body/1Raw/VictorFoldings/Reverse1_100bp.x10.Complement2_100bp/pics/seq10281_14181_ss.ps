%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCAGUGAGUAUCCGGUCUGAAUCCCGAUCCUACUACUAAUUAUUCUCCCUACUGUAUUGAUAAUCACCGUCCAAUCAACAAACAUCCCGAGUACCAUxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[133.37435913 767.93194580]
[120.19512177 760.74267578]
[107.79719543 752.27685547]
[96.30381775 742.61865234]
[85.82921600 731.86401367]
[76.47749329 720.11993408]
[68.34159088 707.50305176]
[61.50237274 694.13879395]
[56.02780914 680.15997314]
[51.97231293 665.70550537]
[49.37618637 650.91906738]
[48.26523590 635.94757080]
[48.65050125 620.93994141]
[50.52815628 606.04516602]
[53.87953186 591.41143799]
[58.67132568 577.18408203]
[64.85591125 563.50457764]
[72.37182617 550.50878906]
[81.14436340 538.32598877]
[91.08634949 527.07714844]
[102.09895325 516.87420654]
[114.07273865 507.81842041]
[126.88870239 499.99984741]
[140.41946411 493.49624634]
[154.53054810 488.37216187]
[169.08169556 484.67861938]
[166.85658264 469.84457397]
[164.63146973 455.01052856]
[162.40635681 440.17648315]
[160.18122864 425.34243774]
[148.52548218 412.22335815]
[155.40742493 395.14352417]
[145.69850159 383.84811401]
[151.08216858 368.97106934]
[148.63644409 354.17178345]
[146.19070435 339.37252808]
[143.74497986 324.57324219]
[140.20530701 309.99688721]
[135.59129333 295.72415161]
[130.97729492 281.45141602]
[126.36328125 267.17868042]
[121.74927521 252.90594482]
[117.13526154 238.63320923]
[112.52125549 224.36047363]
[107.90724182 210.08773804]
[103.29323578 195.81501770]
[98.67922974 181.54228210]
[96.09425354 196.31785583]
[89.12550354 209.60079956]
[78.43717957 220.12504578]
[65.04803467 226.88749695]
[50.23422623 229.24359131]
[35.40772247 226.96878052]
[21.98168945 220.27986145]
[11.23580647 209.81439209]
[4.19430637 196.56988525]
[1.52833843 181.80868530]
[3.49200606 166.93777466]
[9.89814568 153.37454224]
[20.13616371 142.41174316]
[33.23023605 135.09428406]
[47.93232346 132.11961365]
[62.84111404 133.77127075]
[76.53559875 139.89183044]
[87.71050262 149.89790344]
[95.30112457 162.83683777]
[94.63134003 147.85179138]
[93.96155548 132.86676025]
[93.29177094 117.88172150]
[82.66996765 108.02659607]
[82.02297211 93.55152130]
[91.72319031 82.78806305]
[83.37739563 69.34714508]
[90.53868103 56.28707886]
[89.86889648 41.30204010]
[89.19911194 26.31700134]
[88.52931976 11.33196354]
[85.01984406 2.89861417]
[87.96279907 -3.88082552]
[87.06998444 -18.85423088]
[85.73175049 -33.79441452]
[84.39351654 -48.73460007]
[83.05528259 -63.67478561]
[81.71704865 -78.61497498]
[80.37881470 -93.55515289]
[79.04058075 -108.49533844]
[77.70234680 -123.43552399]
[68.87400818 -111.30867767]
[54.63970184 -106.57743835]
[40.30848312 -111.00644684]
[31.22553062 -122.94377899]
[30.77856827 -137.93711853]
[39.13430023 -150.39431763]
[53.17624283 -155.66914368]
[67.66709900 -151.79421997]
[77.20257568 -140.21371460]
[77.64917755 -155.20706177]
[78.09578705 -170.20042419]
[78.54239655 -185.19377136]
[64.66367340 -191.39453125]
[54.21797180 -202.43789673]
[48.79817963 -216.63980103]
[49.23078156 -231.83457947]
[55.44980621 -245.70513916]
[66.50689697 -256.13629150]
[80.71592712 -261.53741455]
[95.91011810 -261.08480835]
[109.77247620 -254.84754944]
[120.18908691 -243.77674866]
[125.57149506 -229.56063843]
[125.09892273 -214.36705017]
[118.84342957 -200.51290894]
[107.75893402 -190.11085510]
[93.53574371 -184.74716187]
[93.08913422 -169.75381470]
[92.64253235 -154.76046753]
[92.19592285 -139.76710510]
[92.64253235 -124.77375793]
[93.98076630 -109.83357239]
[95.31900024 -94.89339447]
[96.65723419 -79.95320892]
[97.99546814 -65.01302338]
[99.33370209 -50.07283401]
[100.67193604 -35.13265228]
[102.01016998 -20.19246483]
[104.07233429 -18.29361343]
[105.50658417 -15.46350288]
[105.95445251 -11.93719959]
[105.14911652 -8.07508183]
[102.95615387 -4.32743168]
[103.51435852 10.66217804]
[104.18415070 25.64721680]
[104.85393524 40.63225555]
[105.52371979 55.61729431]
[113.82160187 67.98638153]
[106.70822906 82.11827850]
[117.33003235 91.97340393]
[117.97702789 106.44847870]
[108.27680969 117.21193695]
[108.94659424 132.19697571]
[109.61637878 147.18200684]
[110.28616333 162.16705322]
[112.95195770 176.92826843]
[117.56597137 191.20100403]
[122.17997742 205.47373962]
[126.79399109 219.74647522]
[131.40798950 234.01919556]
[136.02200317 248.29193115]
[140.63601685 262.56466675]
[145.25003052 276.83740234]
[149.86402893 291.11013794]
[154.47804260 305.38287354]
[159.17283630 291.13650513]
[170.29574585 281.07266235]
[184.93928528 277.82202148]
[199.27566528 282.23431396]
[209.55740356 293.15612793]
[213.09684753 307.73254395]
[208.96882629 322.15335083]
[198.25238037 332.64895630]
[183.74874878 336.47583008]
[169.24917603 332.63366699]
[158.54425049 322.12753296]
[160.98997498 336.92678833]
[163.43571472 351.72607422]
[165.88143921 366.52532959]
[175.76528931 378.87927246]
[170.20669556 392.69778442]
[180.21839905 400.82974243]
[181.95077515 413.20645142]
[175.01527405 423.11730957]
[177.24038696 437.95135498]
[179.46551514 452.78540039]
[181.69062805 467.61944580]
[183.91574097 482.45349121]
[198.91020203 481.71520996]
[213.90364075 482.47354126]
[228.74707031 484.72103882]
[243.29296875 488.43527222]
[257.39675903 493.57940674]
[270.91824341 500.10226440]
[283.72308350 507.93902588]
[295.68395996 517.01184082]
[306.68206787 527.23046875]
[316.60803223 538.49340820]
[325.36325073 550.68865967]
[332.86065674 563.69512939]
[339.02578735 577.38342285]
[343.79736328 591.61755371]
[347.12792969 606.25610352]
[348.98440552 621.15344238]
[349.34832764 636.16168213]
[348.21606445 651.13153076]
[345.59893799 665.91424561]
[341.52288818 680.36291504]
[336.02844238 694.33398438]
[329.17022705 707.68847656]
[321.01638794 720.29382324]
[311.64797974 732.02459717]
[301.15808105 742.76428223]
[289.65100098 752.40612793]
[277.24105835 760.85430908]
[264.05160522 768.02484131]
[250.21371460 773.84655762]
[235.86494446 778.26141357]
[221.14788818 781.22570801]
[206.20881653 782.70989990]
[191.19619751 782.69921875]
[176.25926208 781.19378662]
[161.54643250 778.20861816]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 175]
[27 174]
[28 173]
[29 172]
[30 171]
[32 168]
[34 166]
[35 165]
[36 164]
[37 163]
[38 152]
[39 151]
[40 150]
[41 149]
[42 148]
[43 147]
[44 146]
[45 145]
[46 144]
[47 143]
[66 142]
[67 141]
[68 140]
[69 139]
[72 136]
[74 134]
[75 133]
[76 132]
[77 131]
[79 130]
[80 125]
[81 124]
[82 123]
[83 122]
[84 121]
[85 120]
[86 119]
[87 118]
[96 117]
[97 116]
[98 115]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
