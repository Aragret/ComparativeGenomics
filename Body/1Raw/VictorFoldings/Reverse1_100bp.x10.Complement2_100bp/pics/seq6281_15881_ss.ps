%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[66.85808563 514.55035400]
[74.29026031 527.65985107]
[78.49825287 542.13018799]
[79.25513458 557.18090820]
[76.52008820 572.00030518]
[70.44061279 585.78936768]
[61.34456253 597.80426025]
[49.72248459 607.39715576]
[36.20113373 614.05072021]
[21.50970078 617.40612793]
[6.44048071 617.28234863]
[-8.19386578 613.68615723]
[-21.60412598 606.81146240]
[-33.06710052 597.02899170]
[-41.96460724 584.86627197]
[-47.81681442 570.97930908]
[-50.30811691 556.11694336]
[-49.30416870 541.08068848]
[-44.85910416 526.68145752]
[-37.21264267 513.69573975]
[-26.77715111 502.82388306]
[-14.11539936 494.65219116]
[0.08977959 489.62130737]
[15.07231808 488.00259399]
[30.02422714 489.88333130]
[35.27094650 475.83087158]
[40.51766586 461.77838135]
[39.47806168 459.17504883]
[39.40703964 456.00305176]
[40.52635193 452.62924194]
[42.92098618 449.49392700]
[46.51765442 447.06124878]
[52.59148788 433.34597778]
[58.66532135 419.63070679]
[64.73915863 405.91543579]
[70.50518799 392.06796265]
[75.96054840 378.09515381]
[81.41590118 364.12237549]
[86.87126160 350.14956665]
[90.19351959 335.52209473]
[91.30917358 320.56365967]
[92.42481995 305.60519409]
[79.66574097 292.47805786]
[80.56926727 273.87438965]
[95.02782440 261.63247681]
[95.69760895 246.64744568]
[96.36739349 231.66239929]
[97.03717804 216.67736816]
[97.03717804 201.67736816]
[96.36739349 186.69232178]
[88.06950378 174.32324219]
[95.18287659 160.19134521]
[94.51309204 145.20629883]
[93.84330750 130.22126770]
[81.45360565 124.64266205]
[72.66359711 114.28113556]
[69.17935181 101.14775848]
[71.67713165 87.79161072]
[79.67213440 76.80500793]
[91.61260986 70.32035828]
[83.46785736 56.75666809]
[90.82278442 43.80467224]
[90.37618256 28.81132126]
[89.59485626 13.83168411]
[88.47920990 -1.12676895]
[87.36356354 -16.08522224]
[86.24790955 -31.04367638]
[74.01799774 -37.40135193]
[66.58551025 -48.88074875]
[65.80203247 -62.42533493]
[71.76544189 -74.49106598]
[82.82220459 -81.97372437]
[81.92938995 -96.94712830]
[81.03657532 -111.92053223]
[80.14375305 -126.89394379]
[79.25093842 -141.86734009]
[78.13529205 -156.82580566]
[69.19765472 -169.88064575]
[75.76863098 -183.24746704]
[74.43039703 -198.18765259]
[63.16918945 -205.57681274]
[58.29104233 -217.92242432]
[61.36846542 -230.63508606]
[71.06016541 -239.12628174]
[69.94451904 -254.08473206]
[68.82887268 -269.04318237]
[67.71321869 -284.00164795]
[56.99517059 -298.97509766]
[65.22592926 -314.47418213]
[63.88769150 -329.41436768]
[62.54945755 -344.35455322]
[47.68298340 -346.93341064]
[33.99093246 -353.27294922]
[22.40684891 -362.94104004]
[13.72055531 -375.27841187]
[8.52429867 -389.44390869]
[7.17236757 -404.47167969]
[9.75693893 -419.33715820]
[16.10179329 -433.02676392]
[25.77432632 -444.60711670]
[38.11505127 -453.28866577]
[52.28255463 -458.47943115]
[67.31087494 -459.82556152]
[82.17534637 -457.23526001]
[95.86250305 -450.88510132]
[107.43911743 -441.20809937]
[116.11588287 -428.86404419]
[121.30119324 -414.69451904]
[122.64152527 -399.66567993]
[120.04547119 -384.80221558]
[113.69004822 -371.11752319]
[104.00857544 -359.54464722]
[91.66114807 -350.87265015]
[77.48964691 -345.69281006]
[78.82788086 -330.75262451]
[80.16611481 -315.81243896]
[89.24449158 -307.81808472]
[90.48166656 -295.38211060]
[82.67167664 -285.11727905]
[83.78732300 -270.15884399]
[84.90296936 -255.20037842]
[86.01862335 -240.24192810]
[99.21944427 -229.82189941]
[100.83132935 -212.74218750]
[89.37058258 -199.52587891]
[90.70881653 -184.58569336]
[99.55073547 -172.59945679]
[93.07547760 -158.16403198]
[96.10090637 -154.46865845]
[96.83705139 -148.83349609]
[94.22434998 -142.76016235]
[95.11716461 -127.78675842]
[96.00997925 -112.81334686]
[96.90279388 -97.83994293]
[97.79560852 -82.86653900]
[111.90310669 -74.47273254]
[118.29159546 -59.17080688]
[114.26056671 -42.91497421]
[101.20636749 -32.15932465]
[102.32201385 -17.20087051]
[103.43766022 -2.24241757]
[104.55331421 12.71603584]
[106.97209167 15.28154564]
[108.26841736 19.14607620]
[107.84526825 23.76930428]
[105.36952972 28.36471558]
[105.81613922 43.35806656]
[113.92894745 55.84932709]
[106.60595703 69.87374878]
[120.86338043 77.28549194]
[129.45751953 90.86300659]
[130.05549622 106.92073059]
[122.49502563 121.09984589]
[108.82834625 129.55148315]
[109.49813080 144.53651428]
[110.16791534 159.52156067]
[118.51371002 172.96247864]
[111.35243225 186.02253723]
[112.02221680 201.00758362]
[122.91751862 190.69775391]
[137.91497803 190.97389221]
[148.42337036 201.67781067]
[148.42300415 216.67781067]
[137.91410828 227.38121033]
[122.91663361 227.65663147]
[112.02221680 217.34715271]
[111.35243225 232.33218384]
[110.68264771 247.31723022]
[110.01286316 262.30227661]
[119.58980560 269.34631348]
[124.52675629 280.02935791]
[123.70225525 291.64892578]
[117.43651581 301.32653809]
[107.38327026 306.72085571]
[106.26762390 321.67929077]
[105.15197754 336.63775635]
[112.95783997 323.82882690]
[124.01736450 313.69537354]
[137.45835876 307.03656006]
[152.22077942 304.37750244]
[167.14044189 305.92794800]
[181.04069519 311.56558228]
[192.82530212 320.84582520]
[201.56489563 333.03680420]
[206.57023621 347.17703247]
[207.44656372 362.15142822]
[204.12478638 376.77899170]
[196.86685181 389.90615845]
[186.24516296 400.49765015]
[173.09739685 407.71820068]
[158.46044922 410.99835205]
[143.48861694 410.07940674]
[129.36267090 405.03384399]
[117.19662476 396.25961304]
[107.94995880 384.44863892]
[102.35189819 370.53240967]
[100.84406281 355.60491943]
[95.38870239 369.57772827]
[89.93334198 383.55050659]
[84.47798920 397.52331543]
[85.26686096 402.68322754]
[84.11298370 407.18011475]
[81.59424591 410.38494873]
[78.45442200 411.98928833]
[72.38059235 425.70452881]
[66.30675507 439.41979980]
[60.23292160 453.13507080]
[54.57013702 467.02511597]
[49.32341766 481.07757568]
[44.07669830 495.13003540]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 210]
[26 209]
[27 208]
[32 207]
[33 206]
[34 205]
[35 204]
[36 200]
[37 199]
[38 198]
[39 197]
[40 176]
[41 175]
[42 174]
[45 169]
[46 168]
[47 167]
[48 166]
[49 159]
[50 158]
[52 156]
[53 155]
[54 154]
[60 149]
[62 147]
[63 146]
[64 142]
[65 141]
[66 140]
[67 139]
[72 135]
[73 134]
[74 133]
[75 132]
[76 131]
[77 128]
[79 126]
[80 125]
[84 122]
[85 121]
[86 120]
[87 119]
[89 116]
[90 115]
[91 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
