%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCGGCGUGAGCAUUCCCCACCUAAAAAGAUACAUCGGCAACUCAACACCAUCAGUUUUACAUUAUUAAUAAUCAUCAUUCCGAUCCUCCCACAACUAAxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[212.44816589 543.27478027]
[219.30369568 529.87744141]
[228.64140320 518.07519531]
[240.10241699 508.32165527]
[253.24617004 500.99172974]
[248.63215637 486.71899414]
[244.01814270 472.44625854]
[239.40412903 458.17352295]
[228.78060913 452.38842773]
[224.81979370 440.53533936]
[230.16232300 428.79565430]
[225.76132202 414.45581055]
[221.36032104 400.11596680]
[216.95932007 385.77612305]
[212.55831909 371.43627930]
[207.41636658 357.34512329]
[201.54740906 343.54095459]
[195.67845154 329.73678589]
[189.70687866 315.97668457]
[183.63304138 302.26141357]
[177.55921936 288.54614258]
[171.48538208 274.83087158]
[165.41154480 261.11560059]
[159.33770752 247.40034485]
[143.40440369 242.01811218]
[136.15083313 226.47138977]
[142.50816345 210.17402649]
[136.23080444 196.55072021]
[123.87738037 188.22952271]
[125.12931061 172.45793152]
[118.85195160 158.83460999]
[112.57459259 145.21130371]
[100.22116852 136.89010620]
[101.47309875 121.11851501]
[85.86410522 115.75875092]
[78.84612274 100.82169342]
[84.68429565 85.38525391]
[78.20479584 71.85691071]
[78.02836609 86.85587311]
[74.44384003 101.42127991]
[67.63925934 114.78907013]
[57.97158432 126.25798798]
[45.94795609 135.22639465]
[32.19911194 141.22383118]
[17.44628525 143.93568420]
[2.46338272 143.21968079]
[-11.96362209 139.11340332]
[-25.07791901 131.83224487]
[-36.19155502 121.75817108]
[-44.72153473 109.41963196]
[-50.22039032 95.46389771]
[-52.39966583 80.62304688]
[-51.14503860 65.67561340]
[-46.52231979 51.40569687]
[-38.77401352 38.56187439]
[-28.30658150 27.81790733]
[-15.66911888 19.73740196]
[-1.52456534 14.74424648]
[13.38508511 13.10037041]
[28.27770233 14.89200974]
[42.37204742 20.02517700]
[54.92876053 28.23059654]
[65.28914642 39.07783127]
[72.91038513 51.99937057]
[71.79473877 37.04091644]
[70.67908478 22.08246231]
[69.56343842 7.12400913]
[68.44779205 -7.83444452]
[67.33213806 -22.79289818]
[58.58985901 -35.97937393]
[65.35912323 -49.24686813]
[56.35120773 -37.25280380]
[42.04804230 -32.73401642]
[27.78434944 -37.37590027]
[18.88013458 -49.44714737]
[18.65645027 -64.44548035]
[27.19672394 -76.77688599]
[41.31564713 -81.84207153]
[55.74720764 -77.75183105]
[65.10920715 -66.03063965]
[65.77899170 -81.01567841]
[66.44877625 -96.00071716]
[67.11856079 -110.98575592]
[67.78834534 -125.97079468]
[60.67497253 -140.10269165]
[68.97286224 -152.47177124]
[69.64264679 -167.45681763]
[70.08924866 -182.45016479]
[70.31257629 -197.44850159]
[61.90546036 -207.23028564]
[62.40024185 -219.71783447]
[70.98669434 -228.23835754]
[71.43329620 -243.23170471]
[71.87990570 -258.22506714]
[57.35435104 -262.25888062]
[44.21658325 -269.65228271]
[33.23041916 -279.97546387]
[25.03457260 -292.62817383]
[20.10554504 -306.87487793]
[18.72990227 -321.88723755]
[20.98762321 -336.79248047]
[26.74744415 -350.72402954]
[35.67449951 -362.87191772]
[47.24977875 -372.52987671]
[60.80031204 -379.13641357]
[75.53829193 -382.30743408]
[90.60686493 -381.85861206]
[105.12997437 -377.81597900]
[118.26325226 -370.41458130]
[129.24316406 -360.08477783]
[137.43133545 -347.42709351]
[142.35171509 -333.17739868]
[143.71826172 -318.16421509]
[141.45150757 -303.26034546]
[135.68324280 -289.33230591]
[126.74882507 -277.18981934]
[115.16768646 -267.53887939]
[101.61315155 -260.94055176]
[86.87325287 -257.77844238]
[86.42665100 -242.78511047]
[85.98004150 -227.79176331]
[95.11872864 -212.81005859]
[85.31091309 -197.22517395]
[85.08758545 -182.22683716]
[87.71215820 -178.23677063]
[87.85804749 -172.55558777]
[84.62768555 -166.78703308]
[83.95790100 -151.80198669]
[91.11917877 -138.74192810]
[82.77338409 -125.30101013]
[82.10359955 -110.31597137]
[81.43381500 -95.33093262]
[80.76403046 -80.34589386]
[80.09424591 -65.36085510]
[80.31757355 -50.36251450]
[88.98005676 -38.24596786]
[82.29059601 -23.90854645]
[83.40624237 -8.95009327]
[84.52188873 6.00836039]
[85.63754272 20.96681404]
[86.75318909 35.92526627]
[87.86883545 50.88372040]
[91.73313904 65.37741089]
[98.21263885 78.90576172]
[110.58345795 81.66555023]
[119.16040039 90.99773407]
[120.86886597 103.55698395]
[115.09642029 114.84115601]
[127.89884186 124.13677216]
[126.19790649 138.93392944]
[132.47526550 152.55725098]
[138.75262451 166.18057251]
[151.55505371 175.47618103]
[149.85411072 190.27334595]
[156.13148499 203.89666748]
[169.22004700 207.07533264]
[177.96054077 217.06605530]
[179.33064270 230.07392883]
[173.05297852 241.32650757]
[179.12681580 255.04177856]
[185.20065308 268.75704956]
[191.27447510 282.47232056]
[197.34831238 296.18756104]
[203.42214966 309.90283203]
[209.75842285 316.48229980]
[209.48262024 323.86782837]
[215.35157776 337.67199707]
[221.22053528 351.47616577]
[226.75009155 337.53256226]
[239.88851929 330.29504395]
[254.62913513 333.07254028]
[264.23269653 344.59518433]
[264.30862427 359.59500122]
[254.82217407 371.21426392]
[240.11042786 374.14080811]
[226.89817810 367.03527832]
[231.29916382 381.37512207]
[235.70016479 395.71496582]
[240.10116577 410.05480957]
[244.50216675 424.39465332]
[258.27041626 436.62237549]
[253.67686462 453.55950928]
[258.29086304 467.83224487]
[262.90487671 482.10498047]
[267.51889038 496.37771606]
[282.46612549 494.62655640]
[297.46777344 495.82540894]
[311.94717407 499.92819214]
[325.34780884 506.77722168]
[337.15460205 516.10919189]
[346.91369629 527.56542969]
[354.25003052 540.70562744]
[358.88156128 555.02471924]
[360.63031006 569.97222900]
[359.42901611 584.97363281]
[355.32388306 599.45239258]
[348.47271729 612.85192871]
[339.13882446 624.65722656]
[327.68096924 634.41448975]
[314.53958130 641.74865723]
[300.21978760 646.37786865]
[285.27200317 648.12420654]
[270.27075195 646.92047119]
[255.79267883 642.81298828]
[242.39424133 635.95965576]
[230.59048462 626.62384033]
[220.83508301 615.16442871]
[213.50302124 602.02185059]
[208.87611389 587.70129395]
[207.13221741 572.75323486]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 185]
[6 184]
[7 183]
[8 182]
[11 180]
[12 179]
[13 178]
[14 177]
[15 176]
[16 168]
[17 167]
[18 166]
[19 164]
[20 163]
[21 162]
[22 161]
[23 160]
[24 159]
[27 155]
[28 154]
[30 152]
[31 151]
[32 150]
[34 148]
[37 144]
[38 143]
[64 142]
[65 141]
[66 140]
[67 139]
[68 138]
[69 137]
[71 135]
[80 134]
[81 133]
[82 132]
[83 131]
[84 130]
[86 128]
[87 127]
[88 124]
[89 123]
[92 121]
[93 120]
[94 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
