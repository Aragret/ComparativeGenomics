%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUAGGAAAUUUUCAACUCUUUCGGUACAACAAUCUGUACCCCCGUACUCAAUCGUCAAGAACACUCGAAAGAGCCAUUUAUUCCCCAGCAUUCGGAGAxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[35.66384125 573.58093262]
[27.01279259 585.85760498]
[16.94499588 597.00201416]
[5.60727167 606.85150146]
[-6.83504200 615.26257324]
[-20.20050049 622.11254883]
[-34.29419327 627.30151367]
[-48.91059875 630.75378418]
[-63.83655930 632.41900635]
[-78.85441589 632.27288818]
[-93.74516296 630.31768799]
[-108.29164886 626.58172607]
[-122.28174591 621.11962891]
[-135.51142883 614.01098633]
[-147.78778076 605.35949707]
[-158.93176270 595.29125977]
[-168.78088379 583.95318604]
[-177.19148254 571.51055908]
[-184.04093933 558.14483643]
[-189.22935486 544.05096436]
[-192.68107605 529.43438721]
[-194.34574890 514.50836182]
[-194.19911194 499.49053955]
[-192.24330139 484.59985352]
[-188.50683594 470.05349731]
[-183.04420471 456.06362915]
[-175.93505859 442.83419800]
[-167.28309631 430.55816650]
[-157.21446228 419.41458130]
[-145.87600708 409.56588745]
[-133.43305969 401.15573120]
[-120.06709290 394.30676270]
[-105.97300720 389.11889648]
[-91.35634613 385.66772461]
[-76.43025970 384.00360107]
[-61.41241074 384.15078735]
[-46.52181244 386.10717773]
[-31.97560692 389.84417725]
[-26.52025032 375.87136841]
[-21.06489182 361.89859009]
[-15.60953522 347.92578125]
[-10.15417862 333.95300293]
[-4.69882107 319.98019409]
[0.75653589 306.00738525]
[-5.98022890 296.79968262]
[-7.45082474 285.36492920]
[-3.17517400 274.52923584]
[5.89212656 267.02688599]
[17.57226944 264.81085205]
[23.44123077 251.00666809]
[29.31019020 237.20248413]
[25.07755661 225.87062073]
[29.85411072 214.32209778]
[41.58321762 208.95637512]
[47.65705109 195.24111938]
[45.73599625 180.47091675]
[58.39860535 170.98571777]
[52.07970428 161.48635864]
[51.12116241 149.99737549]
[55.87638855 139.36338806]
[65.26964569 132.27340698]
[77.03708649 130.58111572]
[83.51658630 117.05277252]
[89.99607849 103.52442169]
[95.76211548 89.67694092]
[100.79902649 75.54791260]
[98.14501190 59.95089722]
[109.70679474 50.56077576]
[114.74371338 36.43174362]
[119.78063202 22.30271530]
[108.93957520 9.81818676]
[105.89126587 -6.33741093]
[111.37463379 -21.73707199]
[123.80386353 -32.20942307]
[139.72552490 -34.96858215]
[144.55152893 -49.17103577]
[149.37751770 -63.37349319]
[154.20352173 -77.57595062]
[159.02952576 -91.77840424]
[163.85551453 -105.98085785]
[168.68151855 -120.18331909]
[171.01699829 -135.00038147]
[170.79367065 -149.99871826]
[170.57034302 -164.99705505]
[170.34701538 -179.99539185]
[170.12368774 -194.99372864]
[169.90036011 -209.99206543]
[157.38037109 -218.96736145]
[152.60183716 -233.42485046]
[157.19831848 -247.75442505]
[169.20748901 -256.52468872]
[168.98416138 -271.52304077]
[168.76083374 -286.52136230]
[168.53750610 -301.51971436]
[168.31417847 -316.51803589]
[168.09085083 -331.51638794]
[153.69114685 -336.19903564]
[141.59361267 -345.30554199]
[133.11050415 -357.84808350]
[129.16198730 -372.46615601]
[130.17639160 -387.57409668]
[136.04367065 -401.53311157]
[146.12738037 -412.82901001]
[159.33374023 -420.23651123]
[174.23017883 -422.95211792]
[189.20088196 -420.68124390]
[202.62191772 -413.67022705]
[213.03749084 -402.67956543]
[219.31777954 -388.90142822]
[220.78155518 -373.83038330]
[217.27003479 -359.10125732]
[209.16412354 -346.31167603]
[197.34307861 -336.84902954]
[183.08918762 -331.73971558]
[183.31251526 -316.74136353]
[183.53584290 -301.74304199]
[183.75917053 -286.74468994]
[183.98249817 -271.74636841]
[184.20582581 -256.74801636]
[196.47079468 -248.33920288]
[201.49186707 -234.15283203]
[197.14591980 -219.55947876]
[184.89869690 -210.21539307]
[185.12202454 -195.21705627]
[185.34535217 -180.21871948]
[185.56867981 -165.22038269]
[185.79200745 -150.22204590]
[186.01533508 -135.22370911]
[192.49713135 -148.75096130]
[202.10018921 -160.27403259]
[214.23724365 -169.08833313]
[228.16613770 -174.65481567]
[243.03511047 -176.63311768]
[257.93490601 -174.90226746]
[271.95443726 -169.56808472]
[284.23632812 -160.95677185]
[294.02960205 -149.59492493]
[300.73538208 -136.17729187]
[303.94357300 -121.52439880]
[303.45803833 -106.53225708]
[299.30847168 -92.11765289]
[291.74856567 -79.16203308]
[281.24066162 -68.45764923]
[268.42730713 -60.65907669]
[254.09202576 -56.24319839]
[239.11145020 -55.48004532]
[224.40164185 -58.41629028]
[210.86210632 -64.87237549]
[199.32080078 -74.45351410]
[190.48345947 -86.57380676]
[184.89051819 -100.49210358]
[182.88397217 -115.35731506]
[178.05796814 -101.15486145]
[173.23197937 -86.95240784]
[168.40597534 -72.74995422]
[163.57998657 -58.54749680]
[158.75398254 -44.34503937]
[153.92797852 -30.14258385]
[163.58703613 -20.48754311]
[168.16578674 -7.55062866]
[166.71694946 6.16250229]
[159.46655273 17.96970749]
[147.78096008 25.53695488]
[133.90965271 27.33963013]
[128.87274170 41.46866226]
[123.83582306 55.59769058]
[126.85011292 70.18409729]
[114.92805481 80.58482361]
[109.89114380 94.71385956]
[123.40566254 88.20556641]
[137.97235107 91.78488922]
[146.93151855 103.81540680]
[146.18714905 118.79692078]
[136.07957458 129.88009644]
[121.22982025 131.99784851]
[108.42700195 124.18196869]
[103.52442169 110.00392151]
[97.04492950 123.53226471]
[90.56542969 137.06060791]
[97.53775024 154.67597961]
[89.55704498 171.50515747]
[72.11386871 177.05955505]
[73.60047913 192.81076050]
[61.37231827 201.31494141]
[55.29848480 215.03021240]
[57.68401718 233.28919983]
[43.11436844 243.07144165]
[37.24540710 256.87564087]
[31.37644577 270.67980957]
[39.12837601 287.96627808]
[31.90709496 305.13500977]
[14.72933388 311.46273804]
[9.27397633 325.43554688]
[3.81861949 339.40835571]
[-1.63673747 353.38113403]
[-7.09209442 367.35394287]
[-12.54745197 381.32675171]
[-18.00280952 395.29953003]
[-4.77259207 402.40719604]
[7.50440359 411.05776978]
[18.64914322 421.12515259]
[28.49910355 432.46252441]
[36.91064453 444.90451050]
[43.76110077 458.26971436]
[48.95056915 472.36322021]
[52.40337753 486.97949219]
[54.06917191 501.90539551]
[53.92365646 516.92327881]
[51.96895599 531.81408691]
[48.23357773 546.36071777]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 198]
[39 197]
[40 196]
[41 195]
[42 194]
[43 193]
[44 192]
[49 189]
[50 188]
[51 187]
[54 185]
[55 184]
[57 182]
[62 179]
[63 178]
[64 177]
[65 169]
[66 168]
[68 166]
[69 165]
[70 164]
[75 158]
[76 157]
[77 156]
[78 155]
[79 154]
[80 153]
[81 152]
[82 128]
[83 127]
[84 126]
[85 125]
[86 124]
[87 123]
[91 119]
[92 118]
[93 117]
[94 116]
[95 115]
[96 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
