%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[95.25736237 275.20608521]
[94.62235260 290.20486450]
[92.52024841 305.06918335]
[88.97129059 319.65588379]
[84.00965118 333.82446289]
[77.68312836 347.43850708]
[70.05264282 360.36685181]
[61.19168091 372.48504639]
[51.18558502 383.67633057]
[40.13072586 393.83294678]
[28.13356018 402.85705566]
[15.30963707 410.66177368]
[1.78245890 417.17196655]
[-12.31769562 422.32485962]
[-26.85503197 426.07086182]
[-41.68954468 428.37393188]
[-56.67836380 429.21182251]
[-71.67713928 428.57650757]
[-86.54141235 426.47412109]
[-101.12803650 422.92486572]
[-115.29652405 417.96295166]
[-128.91043091 411.63613892]
[-141.83863831 404.00540161]
[-153.95663452 395.14419556]
[-165.14772034 385.13787842]
[-175.30412292 374.08282471]
[-184.32800293 362.08547974]
[-192.13247681 349.26138306]
[-198.64236450 335.73410034]
[-203.79499817 321.63381958]
[-207.54071045 307.09640503]
[-209.84347534 292.26187134]
[-210.68107605 277.27301025]
[-210.04547119 262.27426147]
[-207.94276428 247.41003418]
[-204.39321899 232.82347107]
[-199.43103027 218.65509033]
[-193.10395813 205.04130554]
[-185.47294617 192.11325073]
[-176.61151123 179.99543762]
[-166.60496521 168.80455017]
[-155.54969788 158.64837646]
[-143.55216980 149.62472534]
[-130.72793579 141.82051086]
[-117.20049286 135.31088257]
[-103.10013580 130.15855408]
[-88.56264496 126.41310883]
[-73.72804260 124.11065674]
[-58.73919296 123.27334595]
[-43.74044418 123.90925598]
[-28.87625313 126.01225281]
[-14.28977108 129.56208801]
[-0.12147806 134.52458191]
[13.49217415 140.85191345]
[26.42007637 148.48318481]
[38.53771973 157.34486389]
[48.53589249 146.16288757]
[58.53406525 134.98091125]
[68.53223419 123.79894257]
[78.53041077 112.61696625]
[88.52857971 101.43498993]
[73.96631622 105.03226471]
[59.37856293 101.53977203]
[48.02427292 91.73772430]
[42.44001389 77.81594086]
[43.87332916 62.88457870]
[52.00401306 50.27933884]
[65.01564789 42.81626892]
[80.00139618 42.16263580]
[93.61341095 48.46446609]
[102.81072998 60.31390762]
[105.53865051 75.06376648]
[101.18773651 89.41891479]
[112.87532043 80.01676178]
[124.56290436 70.61460876]
[136.25048828 61.21245956]
[147.93806458 51.81031036]
[159.62564087 42.40815735]
[171.31323242 33.00600815]
[165.02980042 19.88954163]
[161.83143616 5.70944691]
[161.87597656 -8.81928825]
[165.15782166 -22.96486473]
[171.50839233 -36.01552582]
[180.60479736 -47.31538391]
[191.98625183 -56.29736328]
[205.07739258 -62.51167679]
[219.21737671 -65.64833832]
[233.69325256 -65.55262756]
[247.77589417 -62.23271942]
[260.75671387 -55.85909653]
[271.98339844 -46.75580978]
[283.80966187 -55.98290634]
[295.63592529 -65.21000671]
[307.46218872 -74.43710327]
[319.28848267 -83.66419983]
[331.11474609 -92.89130402]
[322.85174561 -105.41979218]
[315.61026001 -118.56517029]
[309.43609619 -132.24433899]
[304.36825562 -146.37080383]
[300.43878174 -160.85527039]
[297.67254639 -175.60612488]
[296.08703613 -190.53013611]
[295.69223022 -205.53294373]
[296.49069214 -220.51969910]
[298.47729492 -235.39562988]
[301.63955688 -250.06669617]
[305.95742798 -264.44015503]
[311.40365601 -278.42510986]
[317.94375610 -291.93313599]
[325.53640747 -304.87884521]
[334.13360596 -317.18041992]
[343.68099976 -328.76004028]
[354.11822510 -339.54449463]
[365.37927246 -349.46560669]
[377.39297485 -358.46066284]
[390.08334351 -366.47280884]
[403.37017822 -373.45135498]
[417.16946411 -379.35217285]
[431.39395142 -384.13800049]
[445.95370483 -387.77853394]
[460.75668335 -390.25079346]
[475.70928955 -391.53912354]
[490.71697998 -391.63540649]
[505.68487549 -390.53897095]
[520.51837158 -388.25683594]
[535.12359619 -384.80334473]
[549.40832520 -380.20040894]
[563.28216553 -374.47705078]
[576.65740967 -367.66952515]
[589.44952393 -359.82086182]
[601.57763672 -350.98065186]
[612.96502686 -341.20477295]
[623.53973389 -330.55511475]
[633.23486328 -319.09890747]
[641.98919678 -306.90866089]
[649.74725342 -294.06140137]
[656.46014404 -280.63836670]
[662.08526611 -266.72442627]
[666.58715820 -252.40754700]
[669.93737793 -237.77825928]
[672.11468506 -222.92903137]
[673.10528564 -207.95376587]
[672.90295410 -192.94712830]
[671.50903320 -178.00399780]
[668.93225098 -163.21885681]
[665.18890381 -148.68519592]
[660.30273438 -134.49487305]
[654.30450439 -120.73763275]
[647.23223877 -107.50043488]
[639.13067627 -94.86698151]
[630.05096436 -82.91714478]
[620.05047607 -71.72647095]
[609.19256592 -61.36571503]
[597.54577637 -51.90038681]
[585.18377686 -43.39031982]
[572.18469238 -35.88932800]
[558.63079834 -29.44483185]
[544.60772705 -24.09757614]
[530.20410156 -19.88136673]
[515.51104736 -16.82286263]
[500.62149048 -14.94139957]
[485.62945557 -14.24887371]
[470.62982178 -14.74966335]
[455.71737671 -16.44060135]
[440.98641968 -19.31099892]
[426.53009033 -23.34270477]
[412.43978882 -28.51023293]
[398.80459595 -34.78091049]
[385.71069336 -42.11508942]
[373.24090576 -50.46640396]
[361.47406006 -59.78205109]
[350.48455811 -70.00313568]
[340.34182739 -81.06503296]
[328.51556396 -71.83793640]
[316.68930054 -62.61083603]
[304.86303711 -53.38373566]
[293.03674316 -44.15663910]
[281.21047974 -34.92953873]
[287.63500977 -20.83018494]
[290.50781250 -5.59588146]
[289.65850830 9.89238262]
[285.13204956 24.73791885]
[277.18652344 38.08024597]
[266.27816772 49.14498520]
[253.03540039 57.28877258]
[238.22253418 62.03669739]
[222.69569397 63.10998154]
[207.35324097 60.44234085]
[193.08395386 54.18407440]
[180.71537781 44.69358826]
[169.02780151 54.09574127]
[157.34020996 63.49789047]
[145.65263367 72.90003967]
[133.96505737 82.30219269]
[122.27747345 91.70434570]
[110.58988953 101.10649872]
[99.71055603 111.43316650]
[89.71237946 122.61514282]
[79.71421051 133.79711914]
[69.71604156 144.97909546]
[59.71786499 156.16105652]
[49.71969604 167.34303284]
[59.87652969 178.39768982]
[68.90089417 190.39468384]
[76.70587921 203.21844482]
[83.21631622 216.74549866]
[88.36949921 230.84555054]
[92.11580658 245.38281250]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[56 204]
[57 203]
[58 202]
[59 201]
[60 200]
[61 199]
[73 198]
[74 197]
[75 196]
[76 195]
[77 194]
[78 193]
[79 192]
[92 180]
[93 179]
[94 178]
[95 177]
[96 176]
[97 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
