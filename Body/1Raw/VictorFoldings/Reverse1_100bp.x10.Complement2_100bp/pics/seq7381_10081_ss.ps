%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[30.69486618 565.23046875]
[18.71086121 556.12176514]
[8.80599976 544.78692627]
[1.38587916 531.69012451]
[-3.24565148 517.36761475]
[-4.89893389 502.40594482]
[-3.50626707 487.41778564]
[0.87532020 473.01684570]
[8.06640434 459.79287720]
[17.77251625 448.28741455]
[29.59619331 438.97152710]
[43.05326843 432.22674561]
[57.59267807 428.32925415]
[56.69986343 413.35586548]
[55.80704498 398.38244629]
[54.91423035 383.40902710]
[54.02141571 368.43563843]
[45.18508148 360.17453003]
[44.31871796 347.70724487]
[52.43087006 337.67950439]
[51.76108551 322.69445801]
[51.09130096 307.70941162]
[50.42151642 292.72439575]
[44.11343002 306.33349609]
[34.11892700 317.51873779]
[21.30263710 325.31250000]
[6.77329206 329.04052734]
[-8.21217060 328.38031006]
[-22.35736084 323.38894653]
[-34.43857574 314.49829102]
[-43.41067123 302.47738647]
[-48.49747086 288.36624146]
[-49.25891876 273.38558960]
[-45.62913513 258.83139038]
[-37.92213821 245.96273804]
[-26.80465698 235.89289856]
[-13.23846722 229.49302673]
[1.60282087 227.31674194]
[16.43528748 229.55235291]
[29.97577667 236.00643921]
[41.05289841 246.12065125]
[48.70837402 259.02001953]
[52.27959824 273.58511353]
[55.81927109 259.00872803]
[59.35894394 244.43235779]
[62.79000473 229.83004761]
[66.11226654 215.20257568]
[69.43452454 200.57511902]
[72.75678253 185.94766235]
[76.07904053 171.32020569]
[79.40129852 156.69273376]
[71.27090454 144.26567078]
[74.43177032 129.38401794]
[87.52155304 120.94036102]
[90.84381866 106.31290436]
[77.60735321 113.36953735]
[63.21840286 109.13183594]
[55.91960907 96.02734375]
[59.89205170 81.56291962]
[72.86013794 74.02442932]
[87.39515686 77.73027039]
[95.17063904 90.55662537]
[99.78464508 76.28389740]
[104.39865875 62.01116180]
[109.01266479 47.73843002]
[113.62667847 33.46569443]
[118.24068451 19.19296074]
[117.90272522 10.06478500]
[123.03109741 4.74298382]
[127.85709381 -9.45947170]
[132.68309021 -23.66192818]
[137.50909424 -37.86438370]
[142.33508301 -52.06683731]
[147.16108704 -66.26929474]
[151.98707581 -80.47174835]
[156.81307983 -94.67420197]
[158.70637512 -109.55423737]
[157.59072876 -124.51269531]
[144.12844849 -135.68347168]
[142.93392944 -152.79745483]
[154.25914001 -165.23040771]
[152.92089844 -180.17059326]
[151.47148132 -195.10040283]
[149.91096497 -210.01901245]
[148.35043335 -224.93760681]
[146.78991699 -239.85621643]
[131.79891968 -241.14710999]
[117.32319641 -245.25199890]
[103.88604736 -252.02247620]
[91.97322083 -261.21383667]
[82.01534271 -272.49377441]
[74.37239075 -285.45455933]
[69.32066345 -299.62765503]
[67.04276276 -314.50070190]
[67.62103271 -329.53607178]
[71.03458405 -344.19021606]
[77.16001129 -357.93341064]
[85.77587891 -370.26885986]
[96.57073212 -380.75064087]
[109.15434265 -388.99984741]
[123.07183075 -394.71823120]
[137.82006836 -397.69912720]
[152.86593628 -397.83477783]
[167.66552734 -395.12023926]
[181.68385315 -389.65368652]
[194.41413879 -381.63269043]
[205.39620972 -371.34725952]
[214.23306274 -359.16912842]
[220.60527039 -345.53860474]
[224.28245544 -330.94836426]
[225.13169861 -315.92587280]
[223.12229919 -301.01416016]
[218.32691956 -286.75231934]
[210.91886902 -273.65585327]
[201.16596985 -262.19821167]
[189.42077637 -252.79357910]
[176.10787964 -245.78193665]
[161.70852661 -241.41674805]
[163.26904297 -226.49813843]
[164.82957458 -211.57952881]
[166.39009094 -196.66093445]
[170.21240234 -190.33544922]
[167.86108398 -181.50883484]
[169.19932556 -166.56864929]
[180.14581299 -159.77130127]
[185.25482178 -147.73052979]
[182.45489502 -134.75474548]
[172.54917908 -125.62834167]
[173.66482544 -110.66989136]
[179.27311707 -124.58200836]
[187.70425415 -136.98829651]
[198.57467651 -147.32434082]
[211.38984680 -155.11993408]
[225.56678772 -160.02041626]
[240.46049500 -161.80285645]
[255.39344788 -160.38616943]
[269.68627930 -155.83477783]
[282.68875122 -148.35577393]
[293.80935669 -138.28938293]
[302.54217529 -126.09357452]
[308.48992920 -112.32315826]
[311.38201904 -97.60460663]
[311.08688354 -82.60750580]
[307.61791992 -68.01413727]
[301.13299561 -54.48839188]
[291.92712402 -42.64560699]
[280.41906738 -33.02454758]
[267.13238525 -26.06290627]
[252.67156982 -22.07739258]
[237.69444275 -21.24932098]
[222.88238525 -23.61636353]
[208.90924072 -29.07083511]
[196.41069031 -37.36459351]
[185.95535278 -48.12032700]
[178.01885986 -60.84872437]
[172.96228027 -74.97072601]
[171.01553345 -89.84820557]
[166.18954468 -75.64575195]
[161.36354065 -61.44329834]
[156.53753662 -47.24084091]
[151.71154785 -33.03838730]
[146.88554382 -18.83592987]
[142.05955505 -4.63347387]
[137.23355103 9.56898117]
[132.51341248 23.80697060]
[127.89940643 38.07970428]
[123.28540039 52.35243607]
[118.67138672 66.62516785]
[114.05738068 80.89790344]
[109.44337463 95.17063904]
[105.47127533 109.63516235]
[102.14901733 124.26261902]
[110.30718231 137.53221130]
[106.72956848 152.31921387]
[94.02876282 160.01499939]
[90.70650482 174.64245605]
[87.38424683 189.26992798]
[84.06198120 203.89738464]
[80.73972321 218.52484131]
[77.41746521 233.15229797]
[78.56845856 242.21392822]
[73.93531799 247.97203064]
[70.39564514 262.54840088]
[66.85597229 277.12478638]
[65.40655518 292.05459595]
[66.07633972 307.03964233]
[66.74612427 322.02468872]
[67.41590881 337.00970459]
[77.68339539 352.29565430]
[68.99481964 367.54281616]
[69.88763428 382.51623535]
[70.78044891 397.48962402]
[71.67327118 412.46304321]
[72.56608582 427.43643188]
[87.46562195 429.57858276]
[101.62882996 434.67645264]
[114.47574615 442.52130127]
[125.48029327 452.79187012]
[134.19184875 465.06762695]
[140.25366211 478.84582520]
[143.41752625 493.56231689]
[143.55386353 508.61444092]
[140.65710449 523.38580322]
[134.84587097 537.27160645]
[126.35812378 549.70312500]
[115.54142761 560.17132568]
[102.83872986 568.24761963]
[88.77018738 573.60119629]
[73.91189575 576.01293945]
[58.87231064 575.38391113]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 194]
[14 193]
[15 192]
[16 191]
[17 190]
[20 188]
[21 187]
[22 186]
[23 185]
[43 184]
[44 183]
[45 182]
[46 180]
[47 179]
[48 178]
[49 177]
[50 176]
[51 175]
[54 172]
[55 171]
[62 170]
[63 169]
[64 168]
[65 167]
[66 166]
[67 165]
[69 164]
[70 163]
[71 162]
[72 161]
[73 160]
[74 159]
[75 158]
[76 157]
[77 129]
[78 128]
[81 124]
[82 123]
[83 121]
[84 120]
[85 119]
[86 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
