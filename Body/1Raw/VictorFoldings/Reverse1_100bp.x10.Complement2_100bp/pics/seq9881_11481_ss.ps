%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUUAUCUACCUCUGUAUGUCUUUAUCAGUUUGGUGUAGAUGUUUUACGGUCAUAGUCCGCCGCCGAAGCUUCGGUUUCACUACAAACCUACAUUUCACxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[30.48847198 690.50506592]
[20.67500496 701.86517334]
[9.81093216 712.22509766]
[-2.00230789 721.48803711]
[-14.65441608 729.56762695]
[-28.02725983 736.38836670]
[-41.99597549 741.88659668]
[-56.43014145 746.01098633]
[-71.19498444 748.72296143]
[-86.15264893 749.99725342]
[-101.16347504 749.82196045]
[-116.08729553 748.19873047]
[-130.78479004 745.14270020]
[-145.11871338 740.68237305]
[-158.95521545 734.85949707]
[-172.16514587 727.72833252]
[-184.62512207 719.35546875]
[-196.21884155 709.81915283]
[-206.83802795 699.20837402]
[-216.38354492 687.62225342]
[-224.76625061 675.16894531]
[-231.90789795 661.96466064]
[-237.74179077 648.13275146]
[-242.21347046 633.80236816]
[-245.28115845 619.10736084]
[-246.91624451 604.18481445]
[-247.10343933 589.17413330]
[-245.84101868 574.21545410]
[-243.14073181 559.44848633]
[-239.02783203 545.01104736]
[-233.54069519 531.03796387]
[-226.73056030 517.65972900]
[-218.66102600 505.00119019]
[-209.40740967 493.18060303]
[-199.05613708 482.30831909]
[-187.70385742 472.48583984]
[-175.45654297 463.80487061]
[-162.42857361 456.34649658]
[-148.74157715 450.18032837]
[-134.52334595 445.36395264]
[-119.90663910 441.94235229]
[-105.02793121 439.94744873]
[-90.02615356 439.39785767]
[-75.04135895 440.29873657]
[-60.21347427 442.64169312]
[-45.68094635 446.40481567]
[-31.57945633 451.55297852]
[-25.09996033 438.02462769]
[-18.62046432 424.49627686]
[-12.14096832 410.96792603]
[-5.66147232 397.43957520]
[-0.20611516 383.46679688]
[4.19488287 369.12692261]
[8.59588051 354.78707886]
[12.99687862 340.44723511]
[5.81328011 327.44989014]
[10.07224178 312.84454346]
[23.75378036 305.39785767]
[28.15477943 291.05801392]
[32.55577850 276.71813965]
[25.37217903 263.72079468]
[29.63113976 249.11544800]
[43.31267929 241.66876221]
[39.65007782 227.23149109]
[51.09582901 216.30879211]
[55.49682617 201.96894836]
[59.89782333 187.62908936]
[58.70511246 185.09225464]
[58.44541550 181.93009949]
[59.36193085 178.49566650]
[61.56570053 175.22335815]
[65.01119995 172.58091736]
[70.25791168 158.52844238]
[75.50463104 144.47598267]
[80.75135040 130.42350769]
[85.99806976 116.37103271]
[91.24478912 102.31856537]
[90.15732574 98.61859131]
[90.70603180 94.45724487]
[93.06039429 90.57601166]
[97.05230713 87.76451874]
[102.92127228 73.96034241]
[103.39903259 64.83841705]
[108.98174286 59.99536896]
[115.05557251 46.28010178]
[121.12940979 32.56483459]
[127.20324707 18.84956932]
[133.27708435 5.13430262]
[138.52378845 -8.91816902]
[142.92478943 -23.25801659]
[139.57698059 -38.72096252]
[150.70794678 -48.61798096]
[155.10894775 -62.95782852]
[150.57057190 -80.80397034]
[163.87455750 -92.24822998]
[168.06156921 -106.65200806]
[172.03366089 -121.11653137]
[175.78996277 -135.63859558]
[179.54626465 -150.16065979]
[183.30256653 -164.68270874]
[169.87094116 -171.49487305]
[158.21804810 -181.03552246]
[148.88890076 -192.85842896]
[142.31983948 -206.41061401]
[138.81813049 -221.05821228]
[138.54753113 -236.11611938]
[141.52070618 -250.88006592]
[147.59860229 -264.65951538]
[156.49694824 -276.80996704]
[167.79954529 -286.76315308]
[180.97773743 -294.05349731]
[195.41517639 -298.34005737]
[210.43658447 -299.42230225]
[225.33938599 -297.24963379]
[239.42655945 -291.92370605]
[252.03921509 -283.69357300]
[262.58743286 -272.94418335]
[270.57785034 -260.17834473]
[275.63674927 -245.99307251]
[277.52752686 -231.05187988]
[276.16174316 -216.05360413]
[271.60324097 -201.69970703]
[264.06527710 -188.66156006]
[253.90039062 -177.54899597]
[241.58401489 -168.88174438]
[227.69221497 -163.06521606]
[212.87474060 -160.37144470]
[197.82463074 -160.92640686]
[194.06832886 -146.40435791]
[190.31202698 -131.88229370]
[186.55572510 -117.36023712]
[188.16459656 -112.86350250]
[186.96574402 -107.30834961]
[182.46534729 -102.46499634]
[178.27833557 -88.06121826]
[183.82756042 -77.31260681]
[180.45716858 -65.27830505]
[169.44879150 -58.55683136]
[165.04779053 -44.21698380]
[168.71038818 -29.77971840]
[157.26464844 -18.85701752]
[152.86364746 -4.51717091]
[165.61682129 -12.41378593]
[180.58393860 -11.42120075]
[192.18264771 -1.90962589]
[196.08689880 12.57335663]
[190.84051514 26.62595367]
[178.40026855 35.00689316]
[163.40605164 34.59029007]
[151.45034790 25.53153038]
[146.99234009 11.20813656]
[140.91851807 24.92340279]
[134.84468079 38.63866806]
[128.77084351 52.35393524]
[122.69700623 66.06920624]
[116.72544861 79.82930756]
[110.85648346 93.63348389]
[105.29725647 107.56528473]
[100.05053711 121.61775208]
[94.80382538 135.67022705]
[89.55710602 149.72270203]
[84.31038666 163.77516174]
[79.06366730 177.82763672]
[74.23767090 192.03009033]
[69.83666992 206.36993408]
[65.43567657 220.70979309]
[68.78348541 236.17272949]
[57.65252686 246.06974792]
[64.80114746 259.90936279]
[60.13363647 274.38931274]
[46.89562225 281.11914062]
[42.49462509 295.45898438]
[38.09362793 309.79885864]
[45.24225235 323.63845825]
[40.57473755 338.11840820]
[27.33672523 344.84823608]
[22.93572807 359.18807983]
[18.53473091 373.52792358]
[14.13373184 387.86779785]
[26.14714241 378.88568115]
[41.03010559 377.01556396]
[54.89225388 382.74627686]
[64.11005402 394.57977295]
[66.27399445 409.42288208]
[60.81842804 423.39559937]
[49.16942215 432.84548950]
[34.37200546 435.30239868]
[20.29418182 430.12408447]
[10.61586380 418.66415405]
[7.86687326 403.91906738]
[1.38737750 417.44741821]
[-5.09211826 430.97576904]
[-11.57161427 444.50411987]
[-18.05110931 458.03247070]
[-5.20085430 465.79302979]
[6.84039831 474.75759888]
[17.96021843 484.84249878]
[28.05478287 495.95355225]
[37.02983475 507.98699951]
[44.80158234 520.83050537]
[51.29745102 534.36413574]
[56.45679474 548.46154785]
[60.23144531 562.99108887]
[62.58614731 577.81707764]
[63.49892807 592.80114746]
[62.96125412 607.80340576]
[60.97815323 622.68365479]
[57.56813431 637.30310059]
[52.76304626 651.52514648]
[46.60774231 665.21704102]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 194]
[48 193]
[49 192]
[50 191]
[51 190]
[52 179]
[53 178]
[54 177]
[55 176]
[58 173]
[59 172]
[60 171]
[63 168]
[65 166]
[66 165]
[67 164]
[72 163]
[73 162]
[74 161]
[75 160]
[76 159]
[77 158]
[81 157]
[82 156]
[84 155]
[85 154]
[86 153]
[87 152]
[88 151]
[89 142]
[90 141]
[92 139]
[93 138]
[95 135]
[96 134]
[97 131]
[98 130]
[99 129]
[100 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
