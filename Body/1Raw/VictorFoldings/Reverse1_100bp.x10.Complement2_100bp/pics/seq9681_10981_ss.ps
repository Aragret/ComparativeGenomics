%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGGCAGCCUUUACCACUUCCCUCUGAGCUUCAUGAGACUCCGAACAUCCUCCCAUUUUAUCUCUGGGUCAUUUUAACAUUAUUCGUCACGAACUUAAUxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[53.93999863 624.61853027]
[39.77567673 619.21966553]
[28.31411552 609.29956055]
[20.93936157 596.05615234]
[18.54194641 581.08856201]
[21.41137314 566.20428467]
[29.20114326 553.20062256]
[40.97060394 543.64782715]
[55.29853439 538.69946289]
[55.52186203 523.70111084]
[55.74518967 508.70278931]
[55.96852112 493.70446777]
[56.19184875 478.70611572]
[56.41517639 463.70779419]
[48.21775055 454.81234741]
[48.28105927 442.31515503]
[57.11657333 432.91854858]
[57.56317902 417.92520142]
[50.20824814 404.97320557]
[58.35300064 391.40951538]
[58.79960632 376.41616821]
[59.24621201 361.42282104]
[59.69281769 346.42944336]
[60.13942337 331.43609619]
[60.58602905 316.44274902]
[61.03263474 301.44940186]
[61.47924042 286.45605469]
[61.92584610 271.46270752]
[59.78709412 268.65948486]
[58.89985275 264.68106079]
[59.80167770 260.12695312]
[62.74206543 255.81402588]
[63.85771561 240.85557556]
[64.97336578 225.89712524]
[66.08901215 210.93867493]
[57.04484940 222.90541077]
[43.74395752 229.83984375]
[28.75453377 230.40303040]
[14.97079945 224.48620605]
[5.05417824 213.23185730]
[0.91941381 198.81298828]
[3.36486483 184.01367188]
[11.91835308 171.69142151]
[24.92833328 164.22546387]
[39.88278198 163.05737305]
[53.89422989 168.41268921]
[64.25728607 179.25737000]
[68.97113037 193.49874878]
[72.72743225 178.97668457]
[76.48373413 164.45462036]
[80.13182068 149.90499878]
[83.67149353 135.32862854]
[87.21116638 120.75225830]
[90.75083923 106.17588043]
[77.41078186 113.03466034]
[63.08652115 108.58319855]
[55.98364258 95.37149048]
[60.17099762 80.96781158]
[73.24987793 73.62323761]
[87.72811127 77.54507446]
[95.31176758 90.48577118]
[100.13777161 76.28331757]
[104.96376801 62.08086014]
[109.78976440 47.87840652]
[114.61576080 33.67594910]
[101.28643799 25.77974701]
[89.88816833 15.29520702]
[80.91480255 2.67975426]
[74.75443268 -11.51693535]
[71.67266846 -26.67688370]
[71.80115509 -42.14071655]
[75.13198090 -57.23632812]
[81.51807404 -71.30811310]
[90.67973328 -83.74541473]
[102.21688080 -94.00906372]
[115.62651062 -101.65469360]
[130.32461548 -106.35204315]
[145.67164612 -107.89916992]
[161.00033569 -106.23117065]
[165.61433411 -120.50390625]
[170.22834778 -134.77664185]
[173.87643433 -149.32626343]
[176.54223633 -164.08747864]
[179.20802307 -178.84869385]
[181.87382507 -193.60990906]
[184.20930481 -208.42697144]
[186.21331787 -223.29251099]
[184.25848389 -232.21531677]
[188.35943604 -238.36380005]
[190.58454895 -253.19784546]
[192.58856201 -268.06338501]
[194.37103271 -282.95709229]
[196.15348816 -297.85079956]
[197.93595886 -312.74453735]
[199.71842957 -327.63824463]
[185.46565247 -332.49130249]
[172.53353882 -340.20193481]
[161.48742676 -350.43313599]
[152.81019592 -362.73757935]
[146.88119507 -376.57739258]
[143.95959473 -391.34756470]
[144.17314148 -406.40240479]
[147.51246643 -421.08377075]
[153.83161926 -434.74984741]
[162.85432434 -446.80325317]
[174.18617249 -456.71704102]
[187.33177185 -464.05780029]
[201.71646118 -468.50463867]
[216.71139526 -469.86318970]
[231.66105652 -468.07403564]
[245.91192627 -463.21536255]
[258.84100342 -455.49963379]
[269.88308716 -445.26409912]
[278.55548096 -432.95623779]
[284.47903442 -419.11410522]
[287.39483643 -404.34277344]
[287.17535400 -389.28802490]
[283.83026123 -374.60797119]
[277.50573730 -360.94436646]
[268.47827148 -348.89453125]
[257.14254761 -338.98519897]
[243.99404907 -331.64962769]
[229.60760498 -327.20843506]
[214.61213684 -325.85577393]
[212.82968140 -310.96206665]
[211.04721069 -296.06835938]
[209.26473999 -281.17462158]
[207.48228455 -266.28091431]
[209.67750549 -262.03945923]
[209.23155212 -256.37393188]
[205.41859436 -250.97273254]
[203.19348145 -236.13868713]
[201.07885742 -221.28849792]
[199.07484436 -206.42295837]
[200.91035461 -203.41244507]
[201.37889099 -199.36331177]
[200.00816345 -194.92771912]
[196.63504028 -190.94410706]
[193.96923828 -176.18289185]
[191.30345154 -161.42167664]
[188.63764954 -146.66046143]
[199.89500427 -156.57369995]
[214.70840454 -158.93225098]
[228.48779297 -153.00532532]
[236.96345520 -140.62940979]
[237.50912476 -125.63933563]
[229.95570374 -112.67993927]
[216.64372253 -105.76683044]
[201.69804382 -107.04210663]
[189.74972534 -116.11061096]
[184.50108337 -130.16262817]
[179.88706970 -115.88989258]
[175.27305603 -101.61716461]
[187.95614624 -94.50612640]
[199.00660706 -85.04783630]
[207.99606323 -73.60639954]
[214.57550049 -60.62285614]
[218.48889160 -46.59817505]
[219.58306885 -32.07392883]
[217.81384277 -17.61136627]
[213.24761963 -3.76974273]
[206.05909729 8.91531658]
[196.52439880 19.95254135]
[185.01060486 28.91404343]
[171.96156311 35.45190048]
[157.88078308 39.31166458]
[143.31201172 40.34227371]
[128.81822205 38.50194931]
[123.99221802 52.70440292]
[119.16622162 66.90686035]
[114.34022522 81.10931396]
[109.51422882 95.31176758]
[105.32721710 109.71555328]
[101.78754425 124.29193115]
[98.24787140 138.86830139]
[94.70819855 153.44467163]
[95.72414398 162.52243042]
[91.00579071 168.21092224]
[87.24949646 182.73298645]
[83.49319458 197.25505066]
[81.04746246 212.05432129]
[79.93181610 227.01277161]
[78.81616974 241.97122192]
[77.70052338 256.92968750]
[76.91919708 271.90930176]
[76.47259521 286.90267944]
[76.02598572 301.89602661]
[75.57937622 316.88937378]
[75.13277435 331.88272095]
[74.68616486 346.87606812]
[74.23956299 361.86941528]
[73.79295349 376.86276245]
[73.34635162 391.85610962]
[80.66933441 405.88052368]
[72.55652618 418.37179565]
[72.10992432 433.36514282]
[81.21205139 449.37243652]
[71.41351318 463.93112183]
[71.19018555 478.92944336]
[70.96685791 493.92779541]
[70.74353027 508.92611694]
[70.52020264 523.92443848]
[70.29687500 538.92279053]
[84.47112274 544.29553223]
[95.95094299 554.19451904]
[103.35009003 567.42437744]
[105.77508545 582.38745117]
[102.93309784 597.27703857]
[95.16730499 610.29504395]
[83.41546631 619.86950684]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 203]
[10 202]
[11 201]
[12 200]
[13 199]
[14 198]
[17 196]
[18 195]
[20 193]
[21 192]
[22 191]
[23 190]
[24 189]
[25 188]
[26 187]
[27 186]
[28 185]
[32 184]
[33 183]
[34 182]
[35 181]
[48 180]
[49 179]
[50 178]
[51 176]
[52 175]
[53 174]
[54 173]
[61 172]
[62 171]
[63 170]
[64 169]
[65 168]
[79 153]
[80 152]
[81 151]
[82 141]
[83 140]
[84 139]
[85 138]
[86 134]
[87 133]
[89 132]
[90 131]
[91 128]
[92 127]
[93 126]
[94 125]
[95 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
