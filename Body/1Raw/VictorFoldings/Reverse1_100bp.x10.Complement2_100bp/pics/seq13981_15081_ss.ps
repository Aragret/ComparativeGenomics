%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAAAACCCAACUCCACUACUACCUCCACCUCUAAACCACGACACUUUAACAAAAUCCAUUAUCGAAAAGAUCAGUCCAAUCCAGAUCCUCCUCAUCCCxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[112.28996277 681.84313965]
[99.84704590 673.44207764]
[88.33390045 663.80615234]
[77.87256622 653.03747559]
[68.57395172 641.25018311]
[60.53660965 628.56927490]
[53.84575653 615.12915039]
[48.57230759 601.07232666]
[44.77217102 586.54779053]
[42.48562622 571.70947266]
[41.73691559 556.71466064]
[42.53397751 541.72241211]
[44.86835480 526.89154053]
[48.71530914 512.37927246]
[54.03405380 498.33950806]
[60.76821518 484.92105103]
[68.84640503 472.26614380]
[78.18298340 460.50891113]
[88.67898560 449.77401733]
[100.22314453 440.17523193]
[112.69308472 431.81436157]
[125.95661926 424.77996826]
[139.87315369 419.14663696]
[154.29515076 414.97412109]
[151.62934875 400.21289062]
[148.96356201 385.45169067]
[146.29776001 370.69046021]
[143.63197327 355.92922974]
[127.32407379 355.38955688]
[111.53110504 351.26235962]
[97.03264618 343.74844360]
[84.54502869 333.21578979]
[74.68595123 320.18161011]
[67.94393921 305.28701782]
[64.65409851 289.26531982]
[64.98149109 272.90612793]
[68.91285706 257.01623535]
[76.25711060 242.37997437]
[86.65462494 229.72045898]
[99.59485626 219.66384888]
[114.44141388 212.70834351]
[111.11915588 198.08088684]
[107.79689026 183.45341492]
[104.47463226 168.82595825]
[101.15237427 154.19850159]
[91.07145691 165.30593872]
[76.09300232 164.50219727]
[67.25857544 152.37979126]
[71.08058929 137.87487793]
[84.74158478 131.67996216]
[98.17018127 138.36039734]
[95.94506073 123.52635193]
[82.93615723 116.69601440]
[76.39088440 103.54138184]
[78.78853607 89.04530334]
[89.22089386 78.69876862]
[86.99577332 63.86472321]
[84.77066040 49.03068161]
[70.25078583 44.45522690]
[59.20238495 34.07160187]
[53.78014374 19.97835732]
[55.00955200 4.99004364]
[62.59337997 -7.92487097]
[74.98122406 -16.23190308]
[72.75611115 -31.06594658]
[70.53099060 -45.89999008]
[65.82254791 -31.65812874]
[57.49219894 -19.18394661]
[46.14130783 -9.37796593]
[32.58930969 -2.94808698]
[17.81453323 -0.35848942]
[2.88358498 -1.79611850]
[-11.12565899 -7.15719032]
[-23.20185852 -16.05468559]
[-32.47322083 -27.84628487]
[-38.27044296 -41.68074036]
[-40.17501450 -56.55933762]
[-38.04944229 -71.40797424]
[-32.04717636 -85.15470886]
[-22.60152435 -96.80715942]
[-10.39437389 -105.52413177]
[3.69302797 -110.67632294]
[18.64369965 -111.89180756]
[33.37834167 -109.08282471]
[46.83324432 -102.45217133]
[58.03708649 -92.47851562]
[66.18106079 -79.88185883]
[70.67742920 -65.57041931]
[73.12316132 -80.36968994]
[75.56888580 -95.16896057]
[78.01461029 -109.96823120]
[80.46034241 -124.76750183]
[82.90606689 -139.56677246]
[85.35179138 -154.36604309]
[71.18701935 -159.42556763]
[58.15339279 -166.93319702]
[46.66989517 -176.64756775]
[37.10567856 -188.25642395]
[29.76819038 -201.38658142]
[24.89329720 -215.61596680]
[22.63771057 -230.48715210]
[23.07393646 -245.52209473]
[26.18795013 -260.23748779]
[31.87965393 -274.16027832]
[39.96607971 -286.84292603]
[50.18728256 -297.87771606]
[62.21469116 -306.90994263]
[75.66168213 -313.64926147]
[90.09597778 -317.87902832]
[105.05358124 -319.46322632]
[120.05367279 -318.35101318]
[134.61405945 -314.57806396]
[148.26667786 -308.26571655]
[160.57266235 -299.61688232]
[171.13641357 -288.90954590]
[179.61836243 -276.48794556]
[185.74584961 -262.75137329]
[189.32189941 -248.14137268]
[190.23153687 -233.12763977]
[188.44555664 -218.19277954]
[184.02134705 -203.81689453]
[177.10113525 -190.46209717]
[167.90737915 -178.55770874]
[156.73561096 -168.48638916]
[143.94496155 -160.57189941]
[129.94660950 -155.06864929]
[115.19052887 -152.15354919]
[100.15106964 -151.92031860]
[97.70533752 -137.12104797]
[95.25961304 -122.32177734]
[92.81388092 -107.52250671]
[90.36815643 -92.72323608]
[87.92243195 -77.92396545]
[85.47669983 -63.12469101]
[85.36503601 -48.12510681]
[87.59014893 -33.29106522]
[89.81526947 -18.45701981]
[104.09520721 -14.15017414]
[115.13449860 -4.02874136]
[120.70736694 9.93922615]
[119.65872192 25.00310707]
[112.14311218 38.17134857]
[99.60470581 46.80556107]
[101.82981873 61.63960648]
[104.05493927 76.47364807]
[117.06384277 83.30398560]
[123.60911560 96.45861816]
[121.21146393 110.95469666]
[110.77910614 121.30123138]
[113.00422668 136.13526917]
[115.77983093 150.87623596]
[119.10209656 165.50369263]
[122.42435455 180.13116455]
[125.74661255 194.75862122]
[129.06887817 209.38607788]
[142.80534363 209.01966858]
[156.36740112 211.20443726]
[169.28550720 215.86309814]
[181.11273193 222.83270264]
[191.44020081 231.87042236]
[199.91123962 242.66191101]
[206.23368835 254.83235168]
[210.19001770 267.95938110]
[211.64472961 281.58776855]
[210.54908752 295.24526978]
[206.94267273 308.45889282]
[200.95199585 320.77133179]
[192.78608704 331.75677490]
[182.72911072 341.03570557]
[171.13059998 348.28787231]
[158.39318848 353.26345825]
[161.05897522 368.02465820]
[163.72477722 382.78588867]
[166.39056396 397.54708862]
[169.05636597 412.30831909]
[184.02682495 411.17272949]
[199.03468323 411.58245850]
[213.92088318 413.53317261]
[228.52760315 417.00415039]
[242.69999695 421.95864868]
[256.28784180 428.34414673]
[269.14709473 436.09292603]
[281.14144897 445.12283325]
[292.14376831 455.33819580]
[302.03738403 466.63070679]
[310.71743774 478.88061523]
[318.09191895 491.95812988]
[324.08264160 505.72457886]
[328.62612915 520.03405762]
[331.67416382 534.73486328]
[333.19451904 549.67114258]
[333.17098999 564.68457031]
[331.60388184 579.61602783]
[328.50979614 594.30718994]
[323.92150879 608.60235596]
[317.88769531 622.34997559]
[310.47229004 635.40429688]
[301.75390625 647.62701416]
[291.82498169 658.88842773]
[280.79074097 669.06927490]
[268.76815796 678.06158447]
[255.88470459 685.77008057]
[242.27691650 692.11297607]
[228.08906555 697.02301025]
[213.47154236 700.44824219]
[198.57931519 702.35235596]
[183.57023621 702.71502686]
[168.60340881 701.53259277]
[153.83750916 698.81744385]
[139.42903137 694.59844971]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 175]
[25 174]
[26 173]
[27 172]
[28 171]
[41 155]
[42 154]
[43 153]
[44 152]
[45 151]
[51 150]
[52 149]
[56 145]
[57 144]
[58 143]
[64 137]
[65 136]
[66 135]
[88 134]
[89 133]
[90 132]
[91 131]
[92 130]
[93 129]
[94 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
