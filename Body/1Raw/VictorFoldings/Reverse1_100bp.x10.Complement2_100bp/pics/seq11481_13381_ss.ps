%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCGAACAAUAUUAAUACGGAGUAUCCCUAUCAUGUUCCUUCCCCAUCCGAUACACAAAACAGUCCCCCAACUCUUACUCACACUCCGCAUAAUAUGGUxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[82.90097046 417.70126343]
[76.82867432 431.43240356]
[69.35431671 444.45361328]
[60.55980301 456.62219238]
[50.54148483 467.80480957]
[39.40913010 477.87896729]
[27.28471184 486.73425293]
[14.30106831 494.27365112]
[0.60045803 500.41458130]
[-13.66700840 505.08975220]
[-28.34500885 508.24792480]
[-43.27272034 509.85449219]
[-58.28659058 509.89187622]
[-73.22212219 508.35964966]
[-87.91566467 505.27459717]
[-102.20623016 500.67053223]
[-115.93724823 494.59790039]
[-128.95826721 487.12322998]
[-141.12663269 478.32843018]
[-152.30900574 468.30984497]
[-162.38288879 457.17724609]
[-171.23788452 445.05261230]
[-178.77697754 432.06878662]
[-184.91757202 418.36801147]
[-189.59237671 404.10043335]
[-192.75019836 389.42236328]
[-194.35641479 374.49459839]
[-194.39341736 359.48074341]
[-192.86082458 344.54525757]
[-189.77543640 329.85177612]
[-185.17102051 315.56130981]
[-179.09805298 301.83044434]
[-171.62306213 288.80960083]
[-162.82795715 276.64144897]
[-152.80909729 265.45932007]
[-141.67625427 255.38572693]
[-129.55140686 246.53102112]
[-116.56739807 238.99224854]
[-102.86649323 232.85198975]
[-88.59879303 228.17752075]
[-73.92064667 225.02006531]
[-58.99285126 223.41421509]
[-43.97898102 223.37756348]
[-29.04352570 224.91050720]
[-14.35013294 227.99627686]
[-0.05978873 232.60102844]
[13.67093372 238.67433167]
[21.13867569 225.66537476]
[28.60641670 212.65641785]
[36.07415771 199.64747620]
[43.54189682 186.63851929]
[51.00963974 173.62956238]
[58.08674622 160.40403748]
[64.76693726 146.97366333]
[71.44713593 133.54328918]
[56.91928101 137.27711487]
[43.93670273 129.76361084]
[39.93641281 115.30686188]
[47.20995712 102.18833923]
[61.59071732 97.92293549]
[74.84074402 104.95406342]
[79.36989594 119.25302887]
[87.22164917 106.47219086]
[87.79519653 92.50212860]
[99.99750519 85.67605591]
[107.84925842 72.89521027]
[115.70101929 60.11436844]
[123.55277252 47.33352661]
[131.30915833 34.49458694]
[138.96975708 21.59826088]
[146.63035583 8.70193386]
[154.29095459 -4.19439363]
[161.95155334 -17.09072113]
[169.61215210 -29.98704720]
[154.65371704 -28.87110329]
[144.34333801 -39.76587296]
[146.28143311 -54.64014053]
[159.03932190 -62.52914429]
[173.21235657 -57.61740875]
[178.35285950 -43.52732468]
[186.95141602 -55.81816483]
[195.54998779 -68.10900116]
[204.14854431 -80.39984131]
[205.71946716 -96.14286041]
[219.35507202 -102.13613892]
[227.95364380 -114.42697906]
[236.55220032 -126.71781921]
[245.15077209 -139.00865173]
[233.59498596 -148.58554077]
[222.85827637 -159.07247925]
[213.01206970 -170.39965820]
[204.12191772 -182.49171448]
[196.24694824 -195.26817322]
[189.43960571 -208.64399719]
[183.74517822 -222.53019714]
[179.20155334 -236.83432007]
[175.83897400 -251.46121216]
[173.67982483 -266.31350708]
[172.73846436 -281.29238892]
[173.02116394 -296.29815674]
[174.52604675 -311.23092651]
[177.24308777 -325.99136353]
[181.15420532 -340.48123169]
[186.23338318 -354.60406494]
[192.44680786 -368.26593018]
[199.75312805 -381.37585449]
[208.10372925 -393.84664917]
[217.44303894 -405.59527588]
[227.70889282 -416.54354858]
[238.83299255 -426.61862183]
[250.74128723 -435.75347900]
[263.35455322 -443.88726807]
[276.58880615 -450.96588135]
[290.35601807 -456.94223022]
[304.56454468 -461.77655029]
[319.11984253 -465.43661499]
[333.92504883 -467.89813232]
[348.88162231 -469.14465332]
[363.89001465 -469.16793823]
[378.85037231 -467.96783447]
[393.66314697 -465.55227661]
[408.22970581 -461.93737793]
[422.45318604 -457.14718628]
[436.23886108 -451.21356201]
[449.49502563 -444.17605591]
[462.13345337 -436.08142090]
[474.07003784 -426.98358154]
[485.22534180 -416.94305420]
[495.52511597 -406.02667236]
[504.90084839 -394.30709839]
[513.29010010 -381.86227417]
[520.63708496 -368.77508545]
[526.89282227 -355.13256836]
[532.01580811 -341.02554321]
[535.97186279 -326.54791260]
[538.73468018 -311.79595947]
[540.28588867 -296.86791992]
[540.61517334 -281.86309814]
[539.72027588 -266.88137817]
[537.60723877 -252.02246094]
[534.29003906 -237.38520813]
[529.79083252 -223.06704712]
[524.13952637 -209.16325378]
[517.37371826 -195.76635742]
[509.53842163 -182.96553040]
[500.68582153 -170.84594727]
[490.87481689 -159.48826599]
[480.17068481 -148.96807861]
[468.64468384 -139.35537720]
[456.37350464 -130.71415710]
[443.43881226 -123.10189819]
[429.92666626 -116.56928253]
[415.92703247 -111.15977478]
[401.53305054 -106.90937805]
[386.84048462 -103.84637451]
[371.94717407 -101.99115753]
[356.95217896 -101.35605621]
[341.95535278 -101.94531250]
[327.05642700 -103.75499725]
[312.35458374 -106.77307129]
[297.94766235 -110.97944641]
[283.93154907 -116.34613800]
[270.39950562 -122.83741760]
[257.44161987 -130.41009521]
[248.84304810 -118.11925507]
[240.24447632 -105.82841492]
[231.64591980 -93.53757477]
[230.69001770 -78.67367554]
[216.43939209 -71.80127716]
[207.84082031 -59.51043701]
[199.24226379 -47.21960068]
[190.64369202 -34.92876053]
[182.50848389 -22.32645035]
[174.84788513 -9.43012333]
[167.18728638 3.46620393]
[159.52668762 16.36253166]
[151.86608887 29.25885773]
[144.20549011 42.15518570]
[143.49211121 49.51132965]
[136.33361816 55.18528366]
[128.48185730 67.96612549]
[120.63010406 80.74697113]
[112.77835083 93.52780914]
[112.20480347 107.49787140]
[100.00249481 114.32394409]
[92.15074158 127.10478973]
[84.87751007 140.22348022]
[78.19731903 153.65385437]
[71.51712036 167.08422852]
[71.94046021 171.40567017]
[71.05562592 175.25035095]
[69.17313385 178.26557922]
[66.68614197 180.23573303]
[64.01859283 181.09730530]
[56.55084991 194.10626221]
[49.08311081 207.11521912]
[41.61536789 220.12416077]
[34.14762878 233.13311768]
[26.67988586 246.14207458]
[38.84867477 254.93629456]
[50.03153992 264.95434570]
[60.10595322 276.08645630]
[68.96154022 288.21066284]
[76.50126648 301.19412231]
[82.64252472 314.89456177]
[87.31803131 329.16192627]
[90.47655487 343.83984375]
[92.08349609 358.76751709]
[92.12123871 373.78140259]
[90.58937073 388.71694946]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 199]
[48 198]
[49 197]
[50 196]
[51 195]
[52 194]
[53 189]
[54 188]
[55 187]
[62 186]
[63 185]
[65 183]
[66 182]
[67 181]
[68 180]
[69 178]
[70 177]
[71 176]
[72 175]
[73 174]
[74 173]
[80 172]
[81 171]
[82 170]
[83 169]
[85 167]
[86 166]
[87 165]
[88 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
