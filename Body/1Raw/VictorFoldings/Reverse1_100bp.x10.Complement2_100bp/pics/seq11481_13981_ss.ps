%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCGAACAAUAUUAAUACGGAGUAUCCCUAUCAUGUUCCUUCCCCAUCCGAUACACAAAACAGUCCCCCAACUCUUACUCACACUCCGCAUAAUAUGGUxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[80.08827209 707.85015869]
[65.56689453 711.65612793]
[50.74597931 714.04272461]
[35.76390839 714.98779297]
[20.76057243 714.48242188]
[5.87605286 712.53137207]
[-8.75067329 709.15289307]
[-22.98303604 704.37841797]
[-36.68814850 698.25262451]
[-49.73804855 690.83264160]
[-62.01088715 682.18786621]
[-73.39207458 672.39886475]
[-83.77534485 661.55712891]
[-93.06375122 649.76385498]
[-101.17057037 637.12921143]
[-108.02010345 623.77105713]
[-113.54839325 609.81420898]
[-117.70383453 595.38897705]
[-120.44762421 580.63000488]
[-121.75413513 565.67510986]
[-121.61117554 550.66394043]
[-120.02008820 535.73669434]
[-116.99571228 521.03265381]
[-112.56629181 506.68914795]
[-106.77319336 492.84011841]
[-99.67049408 479.61486816]
[-91.32452393 467.13687134]
[-81.81319427 455.52267456]
[-71.22532654 444.88064575]
[-59.65977097 435.31021118]
[-47.22451401 426.90069580]
[-34.03567123 419.73062134]
[-20.21637535 413.86694336]
[-5.89566422 409.36441040]
[8.79275322 406.26507568]
[23.71173096 404.59786987]
[38.72197342 404.37832642]
[53.68332672 405.60855103]
[56.34912109 390.84732056]
[59.01491547 376.08612061]
[52.37757492 365.97314453]
[54.47768784 353.65350342]
[64.72706604 345.82324219]
[67.61234283 331.10336304]
[69.83745575 316.26931763]
[71.39797974 301.35070801]
[72.95850372 286.43209839]
[70.70037842 282.22378540]
[71.06192017 276.55224609]
[74.79404449 271.09487915]
[76.79805756 256.22937012]
[78.80207825 241.36383057]
[80.80609131 226.49830627]
[82.81010437 211.63278198]
[84.81411743 196.76724243]
[86.37464142 181.84864807]
[87.49028778 166.89019775]
[88.60593414 151.93173218]
[89.72158813 136.97328186]
[90.83723450 122.01483154]
[91.95288086 107.05637360]
[91.17156219 92.07673645]
[88.50576782 77.31552124]
[85.83996582 62.55430603]
[83.17417145 47.79308701]
[80.50837708 33.03187180]
[77.84258270 18.27065277]
[64.13996124 3.48550487]
[71.46211243 -14.41067028]
[68.35800171 -29.08597374]
[65.25389099 -43.76127625]
[52.29127121 -52.39888000]
[49.35231781 -67.32594299]
[57.66683960 -79.63059235]
[54.56272888 -94.30589294]
[51.45861816 -108.98119354]
[48.35450745 -123.65649414]
[37.92887878 -135.55677795]
[42.86490250 -149.60971069]
[39.76079178 -164.28501892]
[36.65668106 -178.96032715]
[33.55257034 -193.63562012]
[30.06233406 -197.51702881]
[28.56015778 -201.90983582]
[28.90792656 -205.97113037]
[30.65299225 -209.03497314]
[28.20726395 -223.83424377]
[25.76153755 -238.63351440]
[10.73699856 -239.94273376]
[-3.48965049 -244.94805908]
[-16.02411270 -253.33483887]
[-26.07846069 -264.57586670]
[-33.02066803 -277.96453857]
[-36.41434479 -292.65924072]
[-36.04615784 -307.73620605]
[-31.93925667 -322.24774170]
[-24.35180092 -335.28158569]
[-13.76074409 -346.01846313]
[-0.83185124 -353.78341675]
[13.62215805 -358.08834839]
[28.69269180 -358.66262817]
[43.43240356 -355.47018433]
[56.91474533 -348.71170044]
[68.29220581 -338.81198120]
[76.84957886 -326.39337158]
[82.04895020 -312.23648071]
[83.56348419 -297.23123169]
[81.29797363 -282.32089233]
[75.39482117 -268.44271851]
[66.22512054 -256.46911621]
[54.36527634 -247.15274048]
[40.56080627 -241.07923889]
[43.00653458 -226.27996826]
[45.45226288 -211.48069763]
[48.22787476 -196.73973083]
[51.33198547 -182.06442261]
[54.43609238 -167.38912964]
[57.54020309 -152.71382141]
[67.74381256 -141.86322021]
[63.02981186 -126.76060486]
[66.13391876 -112.08530426]
[69.23802948 -97.41000366]
[72.34214020 -82.73470306]
[84.92695618 -74.85066986]
[88.28401947 -60.01204300]
[79.92919159 -46.86538696]
[83.03330231 -32.19008255]
[86.13741302 -17.51478004]
[95.16828156 -12.73393917]
[100.18215179 -3.57919121]
[99.31174469 7.04260826]
[92.60379791 15.60485840]
[95.26959229 30.36607552]
[97.93539429 45.12729263]
[100.60118866 59.88850784]
[103.26698303 74.64972687]
[105.93277740 89.41094208]
[110.59288788 75.15319824]
[119.57732391 63.14154053]
[131.93794250 54.64360046]
[146.37030029 50.55617905]
[161.35131836 51.31063461]
[175.30000305 56.82734680]
[186.74433899 66.52412415]
[194.47654724 79.37763977]
[197.68064880 94.03143311]
[196.01849365 108.93906403]
[189.66551208 122.52727509]
[179.29214478 133.36209106]
[165.99310303 140.30006409]
[151.17187500 142.60903931]
[136.39259338 140.04533386]
[123.21492767 132.87948608]
[113.02956390 121.86775208]
[106.91133881 108.17202759]
[105.79568481 123.13047791]
[104.68003845 138.08892822]
[103.56439209 153.04737854]
[102.44873810 168.00584412]
[101.33309174 182.96429443]
[103.35652924 186.80612183]
[103.98860931 190.70034790]
[103.38372803 194.20314026]
[101.82453918 196.96638489]
[99.67964172 198.77125549]
[97.67562866 213.63679504]
[95.67161560 228.50231934]
[93.66760254 243.36784363]
[91.66358948 258.23336792]
[89.65957642 273.09890747]
[87.87711334 287.99261475]
[86.31658936 302.91122437]
[84.75606537 317.82983398]
[97.06018829 309.25030518]
[111.85076141 311.74810791]
[120.65505981 323.89242554]
[118.42958832 338.72640991]
[106.44919586 347.75250244]
[91.57679749 345.80014038]
[82.33222961 333.98861694]
[79.44696045 348.70852661]
[85.81732178 365.98565674]
[73.77613068 378.75189209]
[71.11033630 393.51312256]
[68.44454193 408.27435303]
[82.89111328 412.35504150]
[96.87638855 417.81100464]
[110.26979828 424.59127808]
[122.94627380 432.63256836]
[134.78747559 441.85980225]
[145.68281555 452.18679810]
[155.53059387 463.51715088]
[164.23883057 475.74505615]
[171.72624207 488.75637817]
[177.92291260 502.42959595]
[182.77099609 516.63702393]
[186.22518921 531.24609375]
[188.25328064 546.12030029]
[188.83630371 561.12084961]
[187.96884155 576.10760498]
[185.65898132 590.94067383]
[181.92828369 605.48156738]
[176.81158447 619.59448242]
[170.35665894 633.14770508]
[162.62377930 646.01464844]
[153.68516541 658.07513428]
[143.62423706 669.21667480]
[132.53495789 679.33514404]
[120.52086639 688.33612061]
[107.69413757 696.13549805]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 185]
[39 184]
[40 183]
[43 181]
[44 180]
[45 173]
[46 172]
[47 171]
[50 170]
[51 169]
[52 168]
[53 167]
[54 166]
[55 165]
[56 160]
[57 159]
[58 158]
[59 157]
[60 156]
[61 155]
[62 137]
[63 136]
[64 135]
[65 134]
[66 133]
[67 132]
[69 128]
[70 127]
[71 126]
[74 123]
[75 122]
[76 121]
[77 120]
[79 118]
[80 117]
[81 116]
[82 115]
[86 114]
[87 113]
[88 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
