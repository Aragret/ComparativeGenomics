%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxGAGGUGCCUUCGUUAUACUUUACUAGACGACGUCACGAGACUCGGGAUCCUAAGUAGAAAGAAAAGUGGCAUCCACCGGACUGACCGUAACAUAAUCGUU\
) } def
/len { sequence length } bind def

/coor [
[89.03917694 530.30712891]
[76.24024963 538.15356445]
[62.72366714 544.68658447]
[48.62376404 549.84130859]
[34.08067322 553.56652832]
[19.23893929 555.82519531]
[4.24606514 556.59484863]
[-10.74893665 555.86779785]
[-25.59703636 553.65136719]
[-40.15066147 549.96752930]
[-54.26516724 544.85296631]
[-67.80027771 538.35839844]
[-80.62146759 530.54840088]
[-92.60131073 521.50061035]
[-103.62074280 511.30502319]
[-113.57024384 500.06286621]
[-122.35093689 487.88589478]
[-129.87553406 474.89517212]
[-136.06927490 461.21978760]
[-140.87059021 446.99566650]
[-144.23176575 432.36413574]
[-146.11936951 417.47067261]
[-146.51467896 402.46325684]
[-145.41374207 387.49108887]
[-142.82751465 372.70291138]
[-138.78169250 358.24572754]
[-133.31648254 344.26324463]
[-126.48620605 330.89440918]
[-118.35874939 318.27206421]
[-109.01488495 306.52172852]
[-98.54747772 295.76013184]
[-87.06056976 286.09423828]
[-74.66831207 277.62011719]
[-61.49387741 270.42199707]
[-47.66820145 264.57141113]
[-33.32869339 260.12652588]
[-18.61787033 257.13146973]
[-3.68193460 255.61607361]
[11.33066559 255.59535217]
[26.27072716 257.06951904]
[40.98976135 260.02395630]
[45.39076233 245.68409729]
[49.79175949 231.34425354]
[54.19275665 217.00440979]
[58.59375381 202.66456604]
[53.74855804 185.79769897]
[67.33322144 173.36634827]
[71.52023315 158.96257019]
[70.28987885 156.44375610]
[69.98313141 153.28582764]
[70.84841156 149.83811951]
[73.00321960 146.53337097]
[76.40898895 143.83992004]
[81.44590759 129.71089172]
[78.43161774 115.12448883]
[90.35367584 104.72376251]
[92.90950775 89.94310760]
[92.90950775 74.94310760]
[92.90950775 59.94310760]
[92.90950775 44.94310760]
[85.17221069 31.14293480]
[92.90950775 18.41566277]
[92.90950775 3.41566324]
[92.90950775 -11.58433723]
[92.12818909 -26.56397438]
[80.96907043 -41.21169281]
[88.73471069 -56.94896698]
[86.95224762 -71.84268188]
[85.16978455 -86.73640442]
[83.16577148 -101.60192871]
[80.94065094 -116.43597412]
[78.71553040 -131.27001953]
[76.49041748 -146.10406494]
[74.26529694 -160.93811035]
[72.04018402 -175.77215576]
[69.81506348 -190.60618591]
[67.58995056 -205.44023132]
[65.36483002 -220.27427673]
[63.13971329 -235.10832214]
[48.11399841 -235.01502991]
[33.22796249 -237.06114197]
[18.78465652 -241.20501709]
[5.07813311 -247.36228943]
[-7.61256075 -255.40760803]
[-19.02905846 -265.17715454]
[-28.93893814 -276.47207642]
[-37.14044189 -289.06240845]
[-43.46660233 -302.69180298]
[-47.78862381 -317.08279419]
[-50.01852036 -331.94241333]
[-50.11088562 -346.96813965]
[-48.06384659 -361.85403442]
[-43.91907883 -376.29708862]
[-37.76095963 -390.00323486]
[-29.71486092 -402.69342041]
[-19.94459343 -414.10931396]
[-8.64906597 -424.01849365]
[3.94175863 -432.21923828]
[17.57154655 -438.54455566]
[31.96281433 -442.86569214]
[46.82257462 -445.09466553]
[61.84829712 -445.18609619]
[76.73408508 -443.13812256]
[91.17687225 -438.99246216]
[104.88263702 -432.83349609]
[117.57233429 -424.78662109]
[128.98762512 -415.01565552]
[138.89610291 -403.71951294]
[147.09605408 -391.12817383]
[153.42051697 -377.49798584]
[157.74076843 -363.10644531]
[159.96882629 -348.24655151]
[160.05932617 -333.22082520]
[158.01045227 -318.33517456]
[153.86389160 -303.89263916]
[147.70407104 -290.18725586]
[139.65640259 -277.49804688]
[129.88471985 -266.08337402]
[118.58796692 -256.17559814]
[105.99613190 -247.97642517]
[92.36556244 -241.65278625]
[77.97375488 -237.33343506]
[80.19887543 -222.49940491]
[82.42398834 -207.66535950]
[84.64910889 -192.83131409]
[86.87422943 -177.99726868]
[89.09934235 -163.16322327]
[91.32446289 -148.32917786]
[93.54957581 -133.49513245]
[95.77469635 -118.66109467]
[97.99980927 -103.82704926]
[101.23983002 -100.31829834]
[102.31008148 -94.73693848]
[100.06349945 -88.51886749]
[101.84596252 -73.62515259]
[103.62843323 -58.73143387]
[112.94080353 -51.01092529]
[114.54769897 -38.61731339]
[107.04679108 -28.12449646]
[116.42403412 -39.83207321]
[131.10772705 -42.89624023]
[144.38468933 -35.91609955]
[150.18486023 -22.08288193]
[145.85649109 -7.72094536]
[133.37846375 0.60362607]
[118.45553589 -0.91505021]
[107.90950775 -11.58433723]
[107.90950775 3.41566324]
[107.90950775 18.41566277]
[115.64681244 31.14293480]
[107.90950775 44.94310760]
[107.90950775 59.94310760]
[107.90950775 74.94310760]
[107.90950775 89.94310760]
[114.59198761 76.51387024]
[124.36553192 65.13503265]
[136.63247681 56.50242615]
[150.64271545 51.14393234]
[165.53948975 49.38722229]
[180.41186523 51.33972549]
[194.35040283 56.88204193]
[206.50274658 65.67525482]
[216.12576294 77.18166351]
[222.63102722 90.69763947]
[225.62072754 105.39667511]
[224.91203308 120.37992859]
[220.54829407 134.73115540]
[212.79634094 147.57278442]
[202.13021851 158.11953735]
[189.20217896 165.72647095]
[174.80274963 169.92842102]
[159.81246948 170.46846008]
[145.14801025 167.31353760]
[131.70610046 160.65657043]
[120.30871582 150.90466309]
[111.65281677 138.65414429]
[106.26771545 124.65412140]
[104.48270416 109.76067352]
[107.13671875 125.35768890]
[95.57493591 134.74781799]
[90.53802490 148.87684631]
[85.92401123 163.14958191]
[81.73699951 177.55335999]
[87.25372314 189.21220398]
[83.46981812 201.12294006]
[72.93360138 207.06555176]
[68.53260040 221.40541077]
[64.13160706 235.74525452]
[59.73060608 250.08509827]
[55.32960892 264.42495728]
[69.17186737 270.23617554]
[82.36672211 277.39682007]
[94.78302765 285.83563232]
[106.29737854 295.46884155]
[116.79534912 306.20062256]
[126.17259216 317.92434692]
[134.33592224 330.52349854]
[141.20417786 343.87286377]
[146.70913696 357.83975220]
[150.79606628 372.28536987]
[153.42434692 387.06613159]
[154.56785583 402.03512573]
[154.21522522 417.04360962]
[152.36997986 431.94238281]
[149.05043030 446.58340454]
[144.28959656 460.82113647]
[138.13478088 474.51406860]
[130.64714050 487.52615356]
[121.90112305 499.72802734]
[111.98362732 510.99841309]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 190]
[42 189]
[43 188]
[44 187]
[45 186]
[47 183]
[48 182]
[53 181]
[54 180]
[56 178]
[57 154]
[58 153]
[59 152]
[60 151]
[62 149]
[63 148]
[64 147]
[65 139]
[67 136]
[68 135]
[69 134]
[70 131]
[71 130]
[72 129]
[73 128]
[74 127]
[75 126]
[76 125]
[77 124]
[78 123]
[79 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
