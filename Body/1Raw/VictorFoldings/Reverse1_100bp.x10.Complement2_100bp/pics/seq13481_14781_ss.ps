%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUACUCUCAUUAUCUAUCCCGAGUCCGCAAACACAUACUAUACAAACGCCAAAGCUACUACACCAGAAACCUCAUCUUUGGACACUCCUUUCCAUAAxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[85.24548340 699.66217041]
[71.06657410 704.75195312]
[56.11050797 706.55853271]
[41.12746811 704.99127197]
[26.86900330 700.12878418]
[14.05031109 692.21496582]
[3.31436992 681.64672852]
[-4.80030870 668.95422363]
[-9.88669586 654.77410889]
[-11.68966103 639.81756592]
[-10.11876774 624.83489990]
[-5.25281191 610.57763672]
[2.66413307 597.76086426]
[13.23495579 587.02746582]
[25.92942810 578.91589355]
[40.11080170 573.83294678]
[55.06774521 572.03356934]
[56.62826538 557.11499023]
[58.18878937 542.19635010]
[59.63820648 527.26654053]
[60.97644424 512.32635498]
[62.31467819 497.38619995]
[60.34656525 494.46063232]
[59.69769669 490.43646240]
[60.86899185 485.94409180]
[64.06087494 481.81384277]
[66.06488800 466.94830322]
[68.06890106 452.08279419]
[70.07291412 437.21725464]
[72.07692719 422.35174561]
[74.08094025 407.48620605]
[59.05736542 394.95996094]
[54.61758423 375.76181030]
[62.73426819 357.64801025]
[80.27067566 348.04510498]
[81.38632202 333.08666992]
[82.50196838 318.12820435]
[69.42547607 312.70431519]
[58.64701462 303.49310303]
[51.22898865 291.38516235]
[47.90795517 277.55728149]
[49.02149200 263.35830688]
[54.47393417 250.17755127]
[63.74444962 239.30871582]
[75.93674469 231.82304382]
[89.86571503 228.46368408]
[91.20394897 213.52349854]
[92.54218292 198.58331299]
[93.21197510 183.59826660]
[93.21197510 168.59826660]
[93.21197510 153.59826660]
[93.21197510 138.59826660]
[93.21197510 123.59827423]
[92.87699890 108.60201263]
[92.09567261 93.62237549]
[91.20285797 78.64897156]
[82.65787506 65.33379364]
[89.62391663 52.16855621]
[88.73110199 37.19515228]
[87.83828735 22.22174454]
[86.94546509 7.24833918]
[86.05265045 -7.72506666]
[77.50766754 -21.04023933]
[84.47370911 -34.20547867]
[83.58089447 -49.17888641]
[82.68807983 -64.15229034]
[81.79526520 -79.12569427]
[70.03819275 -69.81058502]
[55.39123154 -73.04576874]
[48.65156937 -86.44640350]
[54.78743362 -100.13403320]
[69.27569580 -104.01864624]
[81.43535614 -95.23809814]
[81.65868378 -110.23643494]
[81.88201141 -125.23477173]
[82.10533905 -140.23310852]
[69.69335175 -152.56039429]
[70.03044128 -169.71269226]
[82.41969299 -181.08569336]
[82.41969299 -196.08569336]
[71.07490540 -186.27264404]
[56.10473633 -187.21818542]
[46.08477783 -198.38064575]
[46.75492477 -213.36566162]
[57.73127747 -223.58914185]
[72.72608948 -223.19462585]
[83.14929199 -212.40896606]
[84.48752594 -227.34915161]
[85.82575989 -242.28933716]
[77.69254303 -258.80999756]
[88.34025574 -272.75964355]
[89.45590973 -287.71810913]
[90.57155609 -302.67657471]
[83.88209534 -317.01397705]
[92.54457855 -329.13052368]
[93.66022491 -344.08898926]
[94.77587128 -359.04745483]
[80.57832336 -364.17892456]
[68.29238892 -372.95153809]
[58.82976532 -384.71423340]
[52.89264297 -398.59417725]
[50.92159653 -413.56140137]
[53.06288910 -428.50521851]
[59.15761948 -442.31668091]
[68.75352478 -453.97091675]
[81.13851929 -462.60308838]
[95.39356232 -467.57263184]
[110.46083069 -468.51080322]
[125.22222137 -465.34793091]
[138.58236694 -458.31875610]
[149.54983521 -447.94488525]
[157.31076050 -434.99612427]
[161.28926086 -420.43334961]
[161.19007874 -405.33721924]
[157.02058411 -390.82800293]
[149.09017944 -377.98233032]
[137.98735046 -367.75344849]
[124.53601074 -360.90042114]
[109.73432922 -357.93179321]
[108.61867523 -342.97332764]
[107.50302887 -328.01489258]
[114.27228546 -314.74740601]
[105.53000641 -301.56091309]
[104.41436005 -286.60244751]
[103.29871368 -271.64401245]
[110.95214081 -262.27642822]
[110.14509583 -249.80516052]
[100.76594543 -240.95109558]
[99.42771149 -226.01091003]
[98.08947754 -211.07072449]
[97.41969299 -196.08569336]
[97.41969299 -181.08569336]
[107.71609497 -173.33885193]
[111.73052216 -160.89028931]
[107.78411102 -148.21604919]
[97.10367584 -140.00978088]
[96.88034821 -125.01144409]
[96.65702057 -110.01310730]
[96.43369293 -95.01477051]
[96.76866913 -80.01850891]
[97.66148376 -65.04510498]
[98.55429840 -50.07170105]
[99.44711304 -35.09829330]
[107.92823792 -22.85412025]
[101.02605438 -8.61788273]
[101.91887665 6.35552311]
[102.81169128 21.32892799]
[103.70450592 36.30233383]
[104.59732056 51.27574158]
[113.07844543 63.51991653]
[106.17626190 77.75614929]
[107.06907654 92.72956085]
[110.65433502 99.94887543]
[107.86203766 107.93222809]
[110.67270660 112.33077240]
[111.43853760 116.90972137]
[110.43323517 120.85997009]
[108.21197510 123.59827423]
[108.21197510 138.59826660]
[108.21197510 153.59826660]
[108.21197510 168.59826660]
[108.21197510 183.59826660]
[119.55676270 173.78523254]
[134.52693176 174.73075867]
[144.54689026 185.89321899]
[143.87673950 200.87825012]
[132.90039062 211.10173035]
[117.90557861 210.70719910]
[107.48236847 199.92153931]
[106.14413452 214.86172485]
[104.80590057 229.80191040]
[119.26700592 236.48893738]
[130.54507446 247.70457458]
[137.28948975 262.07974243]
[138.70143127 277.86856079]
[134.62847900 293.16046143]
[125.58086395 306.11123657]
[112.66755676 315.16561890]
[97.46042633 319.24386597]
[96.34477234 334.20230103]
[95.22912598 349.16076660]
[104.56511688 354.20059204]
[111.66691589 362.03103638]
[115.74427032 371.74285889]
[116.35610962 382.21981812]
[113.45810699 392.26675415]
[107.40487671 400.74615479]
[98.90673828 406.70672607]
[88.94647217 409.49020386]
[86.94245911 424.35574341]
[84.93844604 439.22128296]
[82.93443298 454.08679199]
[80.93041992 468.95233154]
[78.92639923 483.81787109]
[77.25485992 498.72442627]
[75.91662598 513.66461182]
[74.57839203 528.60479736]
[76.92971039 537.43139648]
[73.10739136 543.75689697]
[71.54687500 558.67547607]
[69.98635101 573.59411621]
[84.24716949 578.44970703]
[97.06969452 586.35729980]
[107.81075287 596.92034912]
[115.93158722 609.60888672]
[121.02484131 623.78662109]
[122.83505249 638.74224854]
[121.27142334 653.72564697]
[116.41237640 667.98529053]
[108.50164032 680.80590820]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 201]
[18 200]
[19 199]
[20 197]
[21 196]
[22 195]
[26 194]
[27 193]
[28 192]
[29 191]
[30 190]
[31 189]
[35 181]
[36 180]
[37 179]
[46 171]
[47 170]
[48 169]
[49 162]
[50 161]
[51 160]
[52 159]
[53 158]
[54 154]
[55 152]
[56 151]
[58 149]
[59 148]
[60 147]
[61 146]
[62 145]
[64 143]
[65 142]
[66 141]
[67 140]
[73 139]
[74 138]
[75 137]
[76 136]
[79 132]
[80 131]
[87 130]
[88 129]
[89 128]
[91 125]
[92 124]
[93 123]
[95 121]
[96 120]
[97 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
