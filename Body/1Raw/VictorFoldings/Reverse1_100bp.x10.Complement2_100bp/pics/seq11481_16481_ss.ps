%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCGAACAAUAUUAAUACGGAGUAUCCCUAUCAUGUUCCUUCCCCAUCCGAUACACAAAACAGUCCCCCAACUCUUACUCACACUCCGCAUAAUAUGGUxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[55.88605118 529.53405762]
[45.48343658 540.35083008]
[34.29254913 550.34991455]
[22.37749290 559.47399902]
[9.80651379 567.67077637]
[-3.34838104 574.89343262]
[-17.01184082 581.10046387]
[-31.10560226 586.25634766]
[-45.54893494 590.33154297]
[-60.25910950 593.30279541]
[-75.15186310 595.15301514]
[-90.14189148 595.87158203]
[-105.14334106 595.45440674]
[-120.07026672 593.90386963]
[-134.83718872 591.22888184]
[-149.35949707 587.44470215]
[-163.55403137 582.57312012]
[-177.33947754 576.64190674]
[-190.63687134 569.68511963]
[-203.37004089 561.74261475]
[-215.46604919 552.85986328]
[-226.85563660 543.08770752]
[-237.47352600 532.48211670]
[-247.25892639 521.10394287]
[-256.15579224 509.01828003]
[-264.11312866 496.29437256]
[-271.08535767 483.00506592]
[-277.03259277 469.22653198]
[-281.92071533 455.03768921]
[-285.72177124 440.51977539]
[-288.41394043 425.75598145]
[-289.98184204 410.83087158]
[-290.41647339 395.82992554]
[-289.71533203 380.83908081]
[-287.88247681 365.94418335]
[-284.92837524 351.23056030]
[-280.86996460 336.78250122]
[-275.73046875 322.68273926]
[-269.53933716 309.01205444]
[-262.33203125 295.84875488]
[-254.14985657 283.26824951]
[-245.03965759 271.34259033]
[-235.05360413 260.14007568]
[-224.24893188 249.72488403]
[-212.68750000 240.15666199]
[-200.43554688 231.49023438]
[-187.56324768 223.77522278]
[-174.14434814 217.05583191]
[-160.25567627 211.37054443]
[-145.97682190 206.75193787]
[-131.38955688 203.22645569]
[-116.57743835 200.81428528]
[-101.62531281 199.52925110]
[-86.61882782 199.37872314]
[-71.64392853 200.36354065]
[-56.78640366 202.47808838]
[-42.13134766 205.71023560]
[-27.76271248 210.04148865]
[-13.76279640 215.44700623]
[-0.21179202 221.89585876]
[12.81268215 229.35108948]
[21.22730064 216.93359375]
[29.64191818 204.51609802]
[38.05653763 192.09860229]
[45.81292725 179.25965881]
[52.89003372 166.03413391]
[59.96714020 152.80860901]
[67.04424286 139.58308411]
[74.12135315 126.35755157]
[59.79090881 130.78907776]
[45.91633987 125.08851624]
[38.84091568 111.86209106]
[41.79941940 97.15674591]
[53.43926620 87.69556427]
[68.43887329 87.80406952]
[79.94062805 97.43266296]
[82.68577576 112.18109894]
[78.83043671 100.10675049]
[82.56381226 87.99412537]
[92.54757690 80.18527985]
[105.20282745 79.47946930]
[113.80139160 67.18862915]
[122.39995575 54.89779282]
[130.99851990 42.60695267]
[139.59707642 30.31611633]
[141.95219421 21.49051476]
[148.41629028 17.90759087]
[157.19689941 5.74613523]
[165.97749329 -6.41532040]
[168.46374512 -15.20487976]
[174.98046875 -18.69116592]
[183.94116211 -30.72054291]
[192.90185547 -42.74991989]
[201.86256409 -54.77929688]
[190.71652222 -64.83415985]
[180.56101990 -75.88858032]
[171.48529053 -87.84541321]
[163.56913757 -100.59957886]
[156.88208008 -114.03899384]
[151.48291016 -128.04554749]
[147.41908264 -142.49613953]
[144.72630310 -157.26379395]
[143.42822266 -172.21870422]
[143.53627014 -187.22946167]
[145.04949951 -202.16413879]
[147.95457458 -216.89149475]
[152.22601318 -231.28208923]
[157.82624817 -245.20947266]
[164.70606995 -258.55123901]
[172.80500793 -271.19012451]
[182.05191040 -283.01507568]
[192.36549377 -293.92214966]
[203.65512085 -303.81552124]
[215.82157898 -312.60821533]
[228.75794983 -320.22299194]
[242.35054016 -326.59292603]
[256.47991943 -331.66198730]
[271.02188110 -335.38571167]
[285.84863281 -337.73129272]
[300.82986450 -338.67816162]
[315.83395386 -338.21798706]
[330.72903442 -336.35479736]
[345.38418579 -333.10501099]
[359.67059326 -328.49716187]
[373.46276855 -322.57171631]
[386.63946533 -315.38079834]
[399.08486938 -306.98757935]
[410.68963623 -297.46578979]
[421.35174561 -286.89916992]
[430.97753906 -275.38055420]
[439.48239136 -263.01116943]
[446.79156494 -249.89970398]
[452.84085083 -236.16140747]
[457.57705688 -221.91700745]
[460.95858765 -207.29170227]
[462.95568848 -192.41400146]
[463.55084229 -177.41465759]
[462.73880005 -162.42549133]
[460.52667236 -147.57823181]
[456.93395996 -133.00335693]
[451.99221802 -118.82896423]
[445.74484253 -105.17961121]
[438.24676514 -92.17524719]
[429.56387329 -79.93017578]
[419.77249146 -68.55199432]
[408.95861816 -58.14069748]
[397.21734619 -48.78778839]
[384.65182495 -40.57546234]
[371.37249756 -33.57588577]
[357.49609375 -27.85057640]
[343.14450073 -23.44984818]
[328.44387817 -20.41237640]
[313.52340698 -18.76485443]
[298.51425171 -18.52176285]
[283.54824829 -19.68523407]
[268.75695801 -22.24504852]
[254.27040100 -26.17870522]
[240.21583557 -31.45163727]
[226.71681213 -38.01750183]
[213.89193726 -45.81860352]
[204.93124390 -33.78922272]
[195.97055054 -21.75984764]
[187.00984192 -9.73046875]
[178.13894653 2.36528277]
[169.35835266 14.52673817]
[160.57774353 26.68819427]
[151.88792419 38.91468048]
[143.28935242 51.20551682]
[134.69079590 63.49635696]
[126.09223175 75.78719330]
[117.49366760 88.07803345]
[120.73682404 104.25980377]
[111.37728882 117.85269928]
[95.10327148 120.59571838]
[87.34687805 133.43466187]
[80.26977539 146.66018677]
[73.19266510 159.88571167]
[66.11556244 173.11123657]
[59.03845596 186.33677673]
[73.36889648 181.90524292]
[87.24346924 187.60580444]
[94.31889343 200.83222961]
[91.36038971 215.53758240]
[79.72054291 224.99876404]
[64.72093201 224.89025879]
[53.21918106 215.26165771]
[50.47403336 200.51322937]
[42.05941391 212.93072510]
[33.64479446 225.34822083]
[25.23017693 237.76571655]
[36.98156357 247.09963989]
[47.99337387 257.29559326]
[58.20253372 268.29516602]
[67.55056763 280.03533936]
[75.98393250 292.44885254]
[83.45431519 305.46466064]
[89.91893005 319.00814819]
[95.34075165 333.00177002]
[99.68871307 347.36535645]
[102.93791962 362.01663208]
[105.06974792 376.87167358]
[106.07200623 391.84542847]
[105.93893433 406.85208130]
[104.67131042 421.80569458]
[102.27638245 436.62060547]
[98.76787567 451.21197510]
[94.16587830 465.49618530]
[88.49676514 479.39144897]
[81.79299164 492.81817627]
[74.09297180 505.69943237]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[61 190]
[62 189]
[63 188]
[64 187]
[65 179]
[66 178]
[67 177]
[68 176]
[69 175]
[77 174]
[81 171]
[82 170]
[83 169]
[84 168]
[85 167]
[87 166]
[88 165]
[89 164]
[91 163]
[92 162]
[93 161]
[94 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
