%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[171.47268677 932.94024658]
[156.59744263 930.99536133]
[141.80761719 928.48217773]
[127.12489319 925.40435791]
[112.57083893 921.76635742]
[98.16680145 917.57360840]
[83.93393707 912.83221436]
[69.89312744 907.54913330]
[56.06497192 901.73211670]
[42.46977234 895.38970947]
[29.12748146 888.53125000]
[16.05768013 881.16680908]
[3.27954817 873.30706787]
[-9.18815804 864.96374512]
[-21.32714081 856.14892578]
[-33.11958694 846.87567139]
[-44.54818726 837.15753174]
[-55.59616470 827.00872803]
[-66.24731445 816.44427490]
[-76.48600006 805.47955322]
[-86.29718781 794.13073730]
[-95.66648865 782.41442871]
[-104.58014679 770.34783936]
[-113.02507782 757.94873047]
[-120.98889160 745.23522949]
[-128.45989990 732.22601318]
[-135.42713928 718.94018555]
[-141.88038635 705.39727783]
[-147.81016541 691.61712646]
[-153.20776367 677.61993408]
[-158.06527710 663.42626953]
[-162.37556458 649.05694580]
[-166.13230896 634.53308105]
[-169.33000183 619.87603760]
[-171.96392822 605.10723877]
[-174.03024292 590.24835205]
[-175.52590942 575.32122803]
[-176.44871521 560.34783936]
[-176.79733276 545.35003662]
[-176.57124329 530.34985352]
[-175.77075195 515.36938477]
[-174.39706421 500.43057251]
[-172.45219421 485.55532837]
[-169.93898010 470.76550293]
[-166.86111450 456.08279419]
[-163.22312927 441.52874756]
[-159.03034973 427.12472534]
[-154.28894043 412.89184570]
[-149.00584412 398.85104370]
[-143.18881226 385.02288818]
[-136.84640503 371.42770386]
[-129.98791504 358.08541870]
[-122.62342072 345.01562500]
[-114.76371002 332.23751831]
[-106.42033386 319.76980591]
[-97.60553741 307.63082886]
[-88.33224487 295.83840942]
[-78.61408234 284.40982056]
[-68.46530151 273.36184692]
[-57.90079880 262.71072388]
[-46.93608093 252.47204590]
[-35.58724213 242.66087341]
[-23.87093544 233.29158020]
[-11.80435562 224.37794495]
[0.59478557 215.93302917]
[13.30829239 207.96922302]
[26.31750488 200.49822998]
[39.60333252 193.53100586]
[53.14627075 187.07777405]
[66.92645264 181.14802551]
[80.92364502 175.75042725]
[95.11730957 170.89292908]
[109.48661041 166.58265686]
[105.73030853 152.06059265]
[101.97400665 137.53854370]
[98.21771240 123.01647949]
[94.46141052 108.49442291]
[89.55445862 102.09954834]
[90.75900269 93.72817230]
[87.21932983 79.15179443]
[83.67965698 64.57542419]
[68.65756989 65.38256836]
[53.74298096 63.41543961]
[39.44387054 58.74102402]
[26.24726868 51.51853561]
[14.60264206 41.99397278]
[4.90660477 30.49173355]
[-2.51060104 17.40358162]
[-7.39634800 3.17529607]
[-9.58422852 -11.70851421]
[-8.99972534 -26.74091339]
[-5.66274595 -41.40990067]
[0.31305361 -55.21585846]
[8.72413921 -67.68856049]
[19.28403282 -78.40319061]
[31.63306999 -86.99481201]
[45.35064316 -93.17079926]
[59.96953964 -96.72079468]
[74.99184418 -97.52389526]
[89.90590668 -95.55274200]
[104.20375824 -90.87447357]
[117.39841461 -83.64842987]
[129.04046631 -74.12072754]
[138.73341370 -62.61587524]
[146.14707947 -49.52572250]
[151.02899170 -35.29611969]
[153.21286011 -20.41172218]
[152.62431335 -5.37948084]
[149.28337097 9.28860760]
[143.30384827 23.09295273]
[134.88940430 35.56338882]
[124.32662201 46.27516937]
[111.97527313 54.86346054]
[98.25603485 61.03575134]
[101.79570770 75.61212158]
[105.33538055 90.18849945]
[108.98346710 104.73812103]
[112.73976898 119.26017761]
[116.49607086 133.78224182]
[120.25237274 148.30430603]
[124.00866699 162.82635498]
[138.66574097 159.62861633]
[153.43453979 156.99464417]
[168.29339600 154.92826843]
[183.22048950 153.43255615]
[198.19392395 152.50968933]
[213.19172668 152.16102600]
[228.19186401 152.38706970]
[243.17234802 153.18750000]
[258.11117554 154.56112671]
[272.98641968 156.50595093]
[287.77624512 159.01911926]
[302.45898438 162.09692383]
[317.01306152 165.73486328]
[331.41708374 169.92759705]
[345.64996338 174.66896057]
[359.69079590 179.95201111]
[373.51895142 185.76898193]
[387.11416626 192.11134338]
[400.45648193 198.96977234]
[413.52630615 206.33422852]
[426.30444336 214.19389343]
[438.77218628 222.53723145]
[450.91119385 231.35198975]
[462.70364380 240.62522888]
[474.13226318 250.34335327]
[485.18026733 260.49209595]
[495.83145142 271.05654907]
[506.07015991 282.02124023]
[515.88134766 293.37005615]
[525.25067139 305.08633423]
[534.16436768 317.15286255]
[542.60937500 329.55197144]
[550.57318115 342.26547241]
[558.04425049 355.27465820]
[565.01147461 368.56045532]
[571.46478271 382.10336304]
[577.39459229 395.88351440]
[582.79223633 409.88070679]
[587.64978027 424.07434082]
[591.96008301 438.44363403]
[595.71685791 452.96746826]
[598.91461182 467.62454224]
[601.54858398 482.39337158]
[603.61492920 497.25219727]
[605.11059570 512.17932129]
[606.03344727 527.15277100]
[606.38208008 542.15051270]
[606.15606689 557.15069580]
[605.35559082 572.13116455]
[603.98193359 587.07000732]
[602.03710938 601.94525146]
[599.52392578 616.73504639]
[596.44610596 631.41778564]
[592.80816650 645.97186279]
[588.61541748 660.37585449]
[583.87402344 674.60876465]
[578.59094238 688.64959717]
[572.77398682 702.47772217]
[566.43157959 716.07293701]
[559.57312012 729.41522217]
[552.20867920 742.48504639]
[544.34899902 755.26318359]
[536.00561523 767.73089600]
[527.19085693 779.86987305]
[517.91760254 791.66235352]
[508.19946289 803.09094238]
[498.05072021 814.13897705]
[487.48623657 824.79010010]
[476.52154541 835.02880859]
[465.17272949 844.84002686]
[453.45645142 854.20935059]
[441.38989258 863.12298584]
[428.99075317 871.56793213]
[416.27728271 879.53179932]
[403.26806641 887.00280762]
[389.98226929 893.97009277]
[376.43933105 900.42333984]
[362.65917969 906.35308838]
[348.66198730 911.75073242]
[334.46835327 916.60827637]
[320.09906006 920.91857910]
[305.57519531 924.67535400]
[290.91812134 927.87304688]
[276.14932251 930.50701904]
[261.29046631 932.57330322]
[246.36335754 934.06896973]
[231.38992310 934.99182129]
[216.39213562 935.34045410]
[201.39198303 935.11437988]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[73 121]
[74 120]
[75 119]
[76 118]
[77 117]
[79 116]
[80 115]
[81 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
