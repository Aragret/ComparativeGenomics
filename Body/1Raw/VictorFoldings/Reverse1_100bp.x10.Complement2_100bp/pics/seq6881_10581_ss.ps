%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[45.77549744 478.90185547]
[36.75251007 490.96557617]
[25.27098083 500.71865845]
[11.90681553 507.67184448]
[-2.66964412 511.47637939]
[-17.72724915 511.94146729]
[-32.51071548 509.04373169]
[-46.27851105 502.92852783]
[-58.34004974 493.90261841]
[-68.09033203 482.41873169]
[-75.04027557 469.05288696]
[-78.84129333 454.47549438]
[-79.30271149 439.41778564]
[-76.40139771 424.63500977]
[-70.28287506 410.86871338]
[-61.25404358 398.80935669]
[-49.76778793 389.06185913]
[-36.40025330 382.11514282]
[-21.82195282 378.31765747]
[-6.76412535 377.85989380]
[-3.87885284 363.14001465]
[-0.99358034 348.42010498]
[1.89169228 333.70022583]
[4.77696514 318.98031616]
[-0.36773983 305.00244141]
[9.87955856 292.94824219]
[12.76483154 278.22836304]
[2.60078263 289.25976562]
[-11.13893223 295.27810669]
[-26.13892937 295.26913452]
[-39.87144470 289.23440552]
[-50.02231216 278.19085693]
[-54.88092804 263.99954224]
[-53.62853241 249.05191040]
[-46.47617340 235.86692810]
[-34.62915421 226.66648865]
[-20.08390045 223.00102234]
[-5.29154539 225.48823547]
[7.25513983 233.70898438]
[15.44181824 246.27793884]
[17.88881874 261.07864380]
[23.55160522 247.18861389]
[29.21439171 233.29858398]
[34.87717819 219.40855408]
[40.53996658 205.51852417]
[26.33005905 210.32254028]
[12.82461262 203.79545593]
[7.76015759 189.67626953]
[14.03784466 176.05311584]
[28.06152916 170.72993469]
[41.79780960 176.75608826]
[47.37792587 190.67858887]
[54.25733566 177.34915161]
[61.13674927 164.01972961]
[68.01615906 150.69029236]
[74.59619141 137.21057129]
[80.87355042 123.58724976]
[87.15090942 109.96393585]
[85.18231964 93.30557251]
[98.98404694 83.77203369]
[105.05788422 70.05676270]
[111.13172150 56.34149933]
[111.74523926 47.22769547]
[117.39943695 42.46830368]
[123.67679596 28.84498596]
[129.95416260 15.22167015]
[136.23152161 1.59835446]
[135.75117493 -3.59937096]
[137.17065430 -8.01959038]
[139.87568665 -11.06882954]
[143.10543823 -12.48343182]
[130.10012817 -5.00934601]
[115.14640808 -3.83190084]
[101.13161469 -9.17844200]
[90.76177979 -20.01663780]
[86.03914642 -34.25379944]
[87.87560272 -49.14095688]
[95.91653442 -61.80363083]
[108.60938263 -69.79685974]
[123.50334167 -71.57727814]
[137.72262573 -66.80110931]
[148.52172852 -56.39056015]
[153.81549072 -42.35574341]
[152.58140564 -27.40534592]
[161.72019958 -39.29998016]
[170.85900879 -51.19461060]
[179.99780273 -63.08924484]
[189.13661194 -74.98387909]
[198.27542114 -86.87850952]
[207.32540894 -98.84085083]
[216.28611755 -110.87022400]
[209.30465698 -124.39873505]
[208.89099121 -139.55511475]
[215.07363892 -153.33172607]
[226.57743835 -163.01799011]
[241.08616638 -166.73365784]
[255.70881653 -163.79364014]
[264.66952515 -175.82301331]
[273.63021851 -187.85240173]
[282.59091187 -199.88177490]
[271.64868164 -210.16600037]
[261.95010376 -221.63053894]
[253.62164307 -234.12591553]
[246.77185059 -247.48922729]
[241.49006653 -261.54626465]
[237.84510803 -276.11376953]
[235.88452148 -291.00180054]
[235.63385010 -306.01629639]
[237.09637451 -320.96148682]
[240.25302124 -335.64254761]
[245.06263733 -349.86807251]
[251.46252441 -363.45257568]
[259.36923218 -376.21902466]
[268.67971802 -388.00088501]
[279.27255249 -398.64465332]
[291.00967407 -408.01150513]
[303.73803711 -415.97933960]
[317.29171753 -422.44430542]
[331.49401855 -427.32208252]
[346.15975952 -430.54907227]
[361.09777832 -432.08325195]
[376.11328125 -431.90457153]
[391.01055908 -430.01538086]
[405.59536743 -426.44033813]
[419.67758179 -421.22598267]
[433.07357788 -414.44036865]
[445.60873413 -406.17190552]
[457.11965942 -396.52841187]
[467.45623779 -385.63562012]
[476.48370361 -373.63552856]
[484.08441162 -360.68457031]
[490.15924072 -346.95162964]
[494.62899780 -332.61569214]
[497.43542480 -317.86367798]
[498.54190063 -302.88790894]
[497.93405151 -287.88363647]
[495.61975098 -273.04644775]
[491.62918091 -258.56982422]
[486.01440430 -244.64244080]
[478.84857178 -231.44589233]
[470.22515869 -219.15222168]
[460.25653076 -207.92172241]
[449.07269287 -197.90077209]
[436.81939697 -189.22004700]
[423.65646362 -181.99269104]
[409.75543213 -176.31294250]
[395.29757690 -172.25485229]
[380.47137451 -169.87130737]
[365.47009277 -169.19340515]
[350.48934937 -170.22996521]
[335.72439575 -172.96748352]
[321.36773682 -177.37026978]
[307.60656738 -183.38092041]
[294.62026978 -190.92108154]
[285.65957642 -178.89169312]
[276.69888306 -166.86231995]
[267.73818970 -154.83294678]
[274.74127197 -141.66394043]
[275.33459473 -126.69873810]
[269.34698486 -112.90347290]
[257.91687012 -103.03568268]
[243.27641296 -99.09313965]
[228.31549072 -101.90953064]
[219.35479736 -89.88014984]
[217.87998962 -82.63813782]
[210.17004395 -77.73970795]
[201.03125000 -65.84507751]
[191.89244080 -53.95044327]
[182.75364685 -42.05580902]
[173.61483765 -30.16117668]
[164.47602844 -18.26654434]
[156.43486023 -5.60401917]
[149.85482788 7.87571526]
[143.57746887 21.49903107]
[137.30010986 35.12234879]
[131.02275085 48.74566269]
[124.84698486 62.41533279]
[118.77314758 76.13059998]
[112.69931793 89.84587097]
[116.23233795 100.94357300]
[111.43725586 111.55716705]
[100.77422333 116.24129486]
[94.49686432 129.86460876]
[88.21950531 143.48793030]
[88.69985962 148.68565369]
[87.28036499 153.10586548]
[84.57533264 156.15510559]
[81.34558868 157.56971741]
[74.46617889 170.89913940]
[67.58676910 184.22857666]
[60.70735168 197.55799866]
[54.42999268 211.18132019]
[48.76720428 225.07135010]
[43.10441971 238.96136475]
[37.44163132 252.85139465]
[31.77884674 266.74142456]
[27.48472214 281.11364746]
[24.59945107 295.83352661]
[29.53778076 310.86428833]
[19.49685669 321.86560059]
[16.61158371 336.58547974]
[13.72631073 351.30538940]
[10.84103870 366.02526855]
[7.95576572 380.74517822]
[21.72652435 386.85366821]
[33.79243469 395.87374878]
[43.54827881 407.35290527]
[50.50470352 420.71539307]
[54.31278229 435.29092407]
[54.78150177 450.34841919]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 204]
[21 203]
[22 202]
[23 201]
[24 200]
[26 198]
[27 197]
[41 196]
[42 195]
[43 194]
[44 193]
[45 192]
[52 191]
[53 190]
[54 189]
[55 188]
[56 184]
[57 183]
[58 182]
[60 179]
[61 178]
[62 177]
[64 176]
[65 175]
[66 174]
[67 173]
[71 172]
[84 171]
[85 170]
[86 169]
[87 168]
[88 167]
[89 166]
[90 164]
[91 163]
[97 157]
[98 156]
[99 155]
[100 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
