%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[112.62599945 661.56018066]
[108.01461792 647.22320557]
[106.59353638 632.23004150]
[108.42921448 617.28198242]
[113.43579102 603.07818604]
[121.37909698 590.28295898]
[131.88761902 579.49475098]
[144.46984863 571.21820068]
[158.53727722 565.84033203]
[156.31216431 551.00628662]
[154.08705139 536.17224121]
[151.86193848 521.33819580]
[149.63681030 506.50418091]
[147.41169739 491.67013550]
[145.18658447 476.83609009]
[129.79106140 475.98245239]
[114.90165710 471.95370483]
[101.16613770 464.92272949]
[89.18257141 455.19299316]
[79.47328186 443.18557739]
[72.46210480 429.42089844]
[68.45584869 414.49618530]
[67.63092041 399.05950928]
[70.02550507 383.78164673]
[75.53783417 369.32705688]
[83.93051147 356.32476807]
[94.84073639 345.34124756]
[107.79595184 336.85546875]
[122.23437500 331.23828125]
[119.78864288 316.43899536]
[117.34291840 301.63973999]
[114.89719391 286.84045410]
[103.47546387 280.87609863]
[97.48503876 269.24865723]
[99.31212616 256.10058594]
[108.51161957 246.26269531]
[106.28649902 231.42864990]
[104.06138611 216.59460449]
[101.45848846 214.21611023]
[99.87832642 210.45869446]
[99.95643616 205.81680298]
[102.08352661 201.04998779]
[100.52300262 186.13137817]
[98.96248627 171.21276855]
[95.14017487 164.88728333]
[97.49148560 156.06066895]
[96.15325165 141.12048340]
[94.81501770 126.18030548]
[93.47678375 111.24011993]
[91.69431305 96.34640503]
[89.46920013 81.51235962]
[87.24407959 66.67831421]
[85.01896667 51.84427261]
[82.79384613 37.01022720]
[79.03754425 22.48816872]
[73.79082489 8.43569756]
[68.54411316 -5.61677408]
[63.29739380 -19.66924477]
[58.05067444 -33.72171783]
[52.80395508 -47.77418900]
[47.95580292 -52.26940155]
[46.34708786 -57.72000122]
[47.61705399 -62.32393646]
[42.79105759 -76.52639008]
[31.02517319 -87.10346985]
[34.25629807 -101.64338684]
[29.43030167 -115.84584045]
[17.66441727 -126.42291260]
[20.89554214 -140.96282959]
[9.12965775 -151.53990173]
[12.36078262 -166.07981873]
[7.53478527 -180.28227234]
[2.70878768 -194.48472595]
[-2.11720991 -208.68717957]
[-16.90806198 -206.02479553]
[-31.93052673 -205.59671021]
[-46.84899139 -207.41247559]
[-61.33017731 -211.43154907]
[-75.05056763 -217.56413269]
[-87.70363617 -225.67323303]
[-99.00672150 -235.57766724]
[-108.70730591 -247.05618286]
[-116.58866119 -259.85235596]
[-122.47473145 -273.68029785]
[-126.23401642 -288.23107910]
[-127.78252411 -303.17965698]
[-127.08567047 -318.19204712]
[-124.15901184 -332.93289185]
[-119.06794739 -347.07284546]
[-111.92619324 -360.29605103]
[-102.89331055 -372.30706787]
[-92.17110443 -382.83758545]
[-79.99909973 -391.65234375]
[-66.64922333 -398.55441284]
[-52.41972351 -403.38961792]
[-37.62849426 -406.04989624]
[-22.60596848 -406.47586060]
[-7.68776226 -404.65795898]
[6.79285002 -400.63681030]
[20.51236534 -394.50225830]
[33.16428375 -386.39138794]
[44.46595764 -376.48532104]
[54.16490173 -365.00543213]
[62.04444122 -352.20812988]
[67.92854309 -338.37936401]
[71.68575287 -323.82803345]
[73.23213196 -308.87924194]
[72.53313446 -293.86694336]
[69.60438538 -279.12652588]
[64.51129913 -264.98730469]
[57.36766434 -251.76510620]
[48.33307266 -239.75537109]
[37.60936356 -229.22637939]
[25.43610191 -220.41334534]
[12.08524609 -213.51318359]
[16.91124344 -199.31072998]
[21.73724174 -185.10827637]
[26.56323814 -170.90582275]
[37.98393631 -161.34458923]
[35.09799576 -145.78883362]
[46.51869583 -136.22760010]
[43.63275528 -120.67183685]
[48.45875549 -106.46938324]
[59.87945175 -96.90815735]
[56.99351120 -81.35239410]
[61.81951141 -67.14993286]
[66.85643005 -53.02090454]
[72.10314178 -38.96843338]
[77.34986115 -24.91596413]
[82.59658051 -10.86349201]
[87.84329987 3.18897915]
[93.09001923 17.24145126]
[95.70861053 2.47178698]
[103.71510315 -10.21269512]
[115.92177582 -18.93032837]
[130.51783752 -22.38790321]
[145.33805847 -20.07251167]
[158.18394470 -12.32762432]
[167.14988708 -0.30215091]
[170.90582275 14.22000027]
[168.89460754 29.08455467]
[161.41458130 42.08644485]
[149.57536316 51.29691696]
[135.13322449 55.34965515]
[120.23057556 53.64345551]
[107.07814026 46.43142319]
[97.62789154 34.78511047]
[99.85300446 49.61915588]
[102.07812500 64.45320129]
[104.30324554 79.28723907]
[106.52835846 94.12128448]
[108.81701660 96.13413239]
[110.42386627 99.02421570]
[111.02257538 102.54060364]
[110.38410187 106.31533813]
[108.41696930 109.90188599]
[109.75520325 124.84207153]
[111.09343719 139.78225708]
[112.43167114 154.72244263]
[113.88108826 169.65225220]
[115.44161224 184.57086182]
[117.00213623 199.48945618]
[118.89542389 214.36949158]
[121.12054443 229.20353699]
[123.34565735 244.03758240]
[137.60150146 254.17614746]
[140.06558228 271.15386963]
[129.69645691 284.39471436]
[132.14219666 299.19400024]
[134.58792114 313.99325562]
[137.03364563 328.79254150]
[151.63354492 329.34002686]
[165.83930969 332.73226929]
[179.10234070 338.83624268]
[190.91076660 347.41421509]
[200.80932617 358.13311768]
[208.41682434 370.57723999]
[213.44088745 384.26464844]
[215.68913269 398.66555786]
[215.07659912 413.22305298]
[211.62890625 427.37451172]
[205.48118591 440.57345581]
[196.87283325 452.31048584]
[186.13816833 462.13308716]
[173.69342041 469.66305542]
[160.02062988 474.61096191]
[162.24574280 489.44500732]
[164.47085571 504.27905273]
[166.69598389 519.11309814]
[168.92109680 533.94714355]
[171.14620972 548.78118896]
[173.37132263 563.61523438]
[188.39752197 564.62902832]
[202.85433960 568.84973145]
[216.06562805 576.07989502]
[227.41346741 585.98144531]
[236.36711121 598.09124756]
[242.50775146 611.84283447]
[245.54820251 626.59307861]
[245.34623718 641.65203857]
[241.91133118 656.31549072]
[235.40411377 669.89746094]
[226.12895203 681.76275635]
[214.51966858 691.35644531]
[201.11923218 698.22973633]
[186.55441284 702.06121826]
[171.50645447 702.67169189]
[156.67913818 700.03253174]
[142.76599121 694.26727295]
[130.41775513 685.64550781]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 192]
[10 191]
[11 190]
[12 189]
[13 188]
[14 187]
[15 186]
[29 171]
[30 170]
[31 169]
[32 168]
[36 165]
[37 164]
[38 163]
[42 162]
[43 161]
[44 160]
[46 159]
[47 158]
[48 157]
[49 156]
[50 151]
[51 150]
[52 149]
[53 148]
[54 147]
[55 132]
[56 131]
[57 130]
[58 129]
[59 128]
[60 127]
[63 126]
[64 125]
[66 123]
[67 122]
[69 120]
[71 118]
[72 117]
[73 116]
[74 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
