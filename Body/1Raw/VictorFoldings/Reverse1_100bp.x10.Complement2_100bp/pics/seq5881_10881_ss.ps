%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[48.82796860 657.26910400]
[34.72981644 662.52636719]
[19.89145088 665.02026367]
[4.84927177 664.66064453]
[-9.85295773 661.46044922]
[-23.68375969 655.53552246]
[-36.14316177 647.09985352]
[-46.78076172 636.45855713]
[-55.21202087 623.99615479]
[-61.13214874 610.16326904]
[-64.32714081 595.45996094]
[-64.68149567 580.41766357]
[-62.18241119 565.58013916]
[-56.92022324 551.48382568]
[-49.08515549 538.63830566]
[-38.96044159 527.50787354]
[-26.91208458 518.49487305]
[-13.37562275 511.92520142]
[1.15960658 508.03628540]
[16.16816521 506.96875000]
[17.95063019 492.07504272]
[19.73309708 477.18130493]
[21.51556206 462.28759766]
[23.29802895 447.39389038]
[21.67345619 445.10937500]
[20.85591698 442.04373169]
[21.14747429 438.50106812]
[22.73461342 434.88922119]
[25.65564537 431.67651367]
[28.32144165 416.91528320]
[30.98723793 402.15408325]
[17.30736351 396.07546997]
[5.47277546 386.89382935]
[-3.82593966 375.13943481]
[-10.04485512 361.49285889]
[-12.81852436 346.74554443]
[-11.98144913 331.75396729]
[-7.57795429 317.38977051]
[0.14014369 304.48922729]
[10.72792912 293.80441284]
[23.57303429 285.95953369]
[37.93105316 281.41424561]
[52.96868896 280.43692017]
[47.61644363 266.53720093]
[57.68313980 254.33177185]
[60.34893417 239.57055664]
[54.99668884 225.67082214]
[65.06338501 213.46540833]
[67.72917938 198.70417786]
[70.39497375 183.94296265]
[73.06076813 169.18174744]
[60.15260696 176.82238770]
[45.58878326 173.23141479]
[37.71212387 160.46589661]
[41.03473282 145.83851624]
[53.65327072 137.72850037]
[68.33926392 140.78161621]
[76.67972565 153.24798584]
[80.65181732 138.78346252]
[84.62391663 124.31893921]
[83.20706177 121.09018707]
[83.28369904 117.01474762]
[85.23473358 112.80205536]
[89.10983276 109.30481720]
[86.37054443 95.59394836]
[96.61743927 86.08117676]
[101.23144531 71.80844116]
[105.84545898 57.53570938]
[110.45946503 43.26297379]
[115.07347107 28.99024200]
[119.68748474 14.71750927]
[115.41532135 -3.19422388]
[128.88821411 -14.43913651]
[133.28921509 -28.77898407]
[137.69021606 -43.11883163]
[134.34240723 -58.58177948]
[145.47335815 -68.47879791]
[144.36761475 -74.99714661]
[146.41275024 -80.29945374]
[150.22476196 -83.17652893]
[155.05076599 -97.37898254]
[159.87675476 -111.58144379]
[156.99081421 -127.13720703]
[168.41151428 -136.69842529]
[173.23751831 -150.90089417]
[178.06350708 -165.10334778]
[182.88951111 -179.30580139]
[185.44534302 -194.08645630]
[185.66867065 -209.08479309]
[185.89199829 -224.08312988]
[185.78033447 -239.08271790]
[185.33372498 -254.07606506]
[184.88711548 -269.06939697]
[176.74237061 -282.63308716]
[184.09730530 -295.58508301]
[183.65069580 -310.57843018]
[183.20408630 -325.57180786]
[168.98089600 -330.93548584]
[157.89640808 -341.33752441]
[151.64091492 -355.19168091]
[151.16833496 -370.38525391]
[156.55073547 -384.60137939]
[166.96734619 -395.67218018]
[180.82971191 -401.90945435]
[196.02391052 -402.36203003]
[210.23294067 -396.96093750]
[221.29002380 -386.52978516]
[227.50904846 -372.65921021]
[227.94165039 -357.46444702]
[222.52186584 -343.26254272]
[212.07615662 -332.21917725]
[198.19743347 -326.01840210]
[198.64404297 -311.02505493]
[199.09065247 -296.03170776]
[207.20346069 -283.54043579]
[199.88046265 -269.51602173]
[200.32707214 -254.52267456]
[200.77368164 -239.52931213]
[203.07550049 -236.85836792]
[204.19796753 -232.93980408]
[203.56880188 -228.34007263]
[200.89033508 -223.85980225]
[200.66700745 -208.86146545]
[200.44367981 -193.86312866]
[207.41122437 -207.14669800]
[217.66400146 -218.09570312]
[230.46183777 -225.91970825]
[244.88087463 -230.05390930]
[259.88015747 -230.19985962]
[274.37689209 -226.34700012]
[287.32455444 -218.77348328]
[297.78842163 -208.02604675]
[305.01312256 -194.88055420]
[308.47708130 -180.28599548]
[307.93023682 -165.29597473]
[303.41204834 -150.99261475]
[295.24871826 -138.40849304]
[284.02957153 -128.45207214]
[270.56448364 -121.84211731]
[255.82553101 -119.05579376]
[240.87675476 -120.29426575]
[226.79728699 -125.46811676]
[214.60356140 -134.20384216]
[205.17582703 -145.87080383]
[199.19471741 -159.62675476]
[197.09196472 -174.47979736]
[192.26597595 -160.27734375]
[187.43997192 -146.07489014]
[182.61396790 -131.87243652]
[185.84509277 -117.33251953]
[174.07920837 -106.75544739]
[169.25321960 -92.55298615]
[164.42721558 -78.35053253]
[159.81321716 -64.07779694]
[163.47581482 -49.64053345]
[152.03005981 -38.71783447]
[147.62905884 -24.37798500]
[143.22805786 -10.03813839]
[148.61663818 0.79190350]
[145.06745911 12.77468491]
[133.96022034 19.33151817]
[129.34620667 33.60425186]
[124.73220062 47.87698364]
[120.11818695 62.14971924]
[115.50418091 76.42245483]
[110.89016724 90.69518280]
[113.62945557 104.40605164]
[103.38256073 113.91882324]
[99.08843994 128.29103088]
[95.11634064 142.75555420]
[91.14424896 157.22007751]
[87.82199097 171.84754944]
[85.15618896 186.60876465]
[82.49039459 201.36997986]
[79.82460022 216.13119507]
[84.98616791 231.08676147]
[75.11015320 242.23635864]
[72.44435883 256.99755859]
[77.60592651 271.95312500]
[67.72990417 283.10272217]
[81.47579193 289.27819824]
[93.33698273 298.55850220]
[102.62667847 310.40084839]
[108.80830383 324.11410522]
[111.52648926 338.89938354]
[110.62750244 353.89648438]
[106.16792297 368.23385620]
[98.41113281 381.07940674]
[87.81174469 391.68869019]
[74.98895264 399.44805908]
[60.69037247 403.91018677]
[45.74845505 404.81985474]
[43.08266068 419.58108521]
[40.41686249 434.34228516]
[38.19174576 449.17633057]
[36.40927887 464.07006836]
[34.62681580 478.96377563]
[32.84434891 493.85748291]
[31.06188202 508.75122070]
[45.39465714 513.33032227]
[58.60168839 520.53936768]
[70.20555878 530.11785889]
[79.78678894 541.71942139]
[86.99902344 554.92474365]
[91.58154297 569.25640869]
[93.36869812 584.19635010]
[92.29588318 599.20452881]
[88.40187836 613.73840332]
[81.82744598 627.27258301]
[72.81025696 639.31774902]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 199]
[21 198]
[22 197]
[23 196]
[24 195]
[29 194]
[30 193]
[31 192]
[43 180]
[45 178]
[46 177]
[48 175]
[49 174]
[50 173]
[51 172]
[58 171]
[59 170]
[60 169]
[64 168]
[66 166]
[67 165]
[68 164]
[69 163]
[70 162]
[71 161]
[73 158]
[74 157]
[75 156]
[77 154]
[80 153]
[81 152]
[82 151]
[84 149]
[85 148]
[86 147]
[87 146]
[88 124]
[89 123]
[90 122]
[91 118]
[92 117]
[93 116]
[95 114]
[96 113]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
