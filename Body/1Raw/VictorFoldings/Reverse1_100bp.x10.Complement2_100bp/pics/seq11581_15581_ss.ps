%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCCCCCAAACCUACUCUUACCGACAAUGAUGCUCCCGAUACACCGACUAACUUCUCAUACGUUACUCGCUAAAAUCCAGACAAACAGCAUCCGUCUAxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[83.60311127 668.86114502]
[74.60754395 681.30999756]
[60.58613968 687.57867432]
[45.31059265 685.98083496]
[32.88994217 676.94628906]
[26.66528130 662.90527344]
[28.31101608 647.63482666]
[37.38444901 635.24255371]
[51.44487381 629.06195068]
[53.00539780 614.14331055]
[54.56591797 599.22473145]
[56.12644196 584.30609131]
[57.68696594 569.38751221]
[59.24748993 554.46887207]
[60.80801010 539.55029297]
[62.36853409 524.63171387]
[63.37279510 509.66534424]
[63.81940079 494.67199707]
[64.26600647 479.67864990]
[64.71260834 464.68530273]
[65.15921783 449.69195557]
[65.60582733 434.69860840]
[66.05242920 419.70526123]
[66.49903870 404.71188354]
[58.43495941 395.69540405]
[58.68432617 383.20053101]
[67.65876007 373.93649292]
[68.21697235 358.94689941]
[68.66358185 343.95355225]
[69.11018372 328.96020508]
[69.55679321 313.96685791]
[70.00339508 298.97351074]
[58.37146759 308.44439697]
[43.43608475 307.05358887]
[33.75292206 295.59774780]
[34.86892700 280.63931274]
[46.14480591 270.74716187]
[61.12122345 271.58798218]
[71.21868134 282.67916870]
[73.00114441 267.78546143]
[74.78360748 252.89175415]
[76.56607819 237.99803162]
[70.39599609 224.44151306]
[79.71836090 211.65855408]
[81.38990021 196.75196838]
[82.95042419 181.83337402]
[73.51583099 173.05737305]
[70.81827545 160.25872803]
[76.06183624 148.06384277]
[87.53805542 141.01322937]
[89.32051849 126.11951447]
[91.10298920 111.22579956]
[85.77754974 98.29786682]
[94.00329590 86.99173737]
[95.78575897 72.09801483]
[88.44190979 61.49468994]
[90.23314667 49.12637329]
[99.65943909 41.54536819]
[101.66345215 26.67984009]
[103.66746521 11.81431293]
[105.22798920 -3.10429215]
[98.53852844 -17.44171524]
[107.20100403 -29.55826187]
[108.31665802 -44.51671600]
[109.43230438 -59.47516632]
[110.54795074 -74.43362427]
[103.85848999 -88.77104187]
[112.52097321 -100.88758850]
[113.63661957 -115.84604645]
[111.15415192 -124.63667297]
[114.88186646 -131.01835632]
[116.22010040 -145.95854187]
[104.57507324 -150.34500122]
[94.33164978 -157.39093018]
[86.08516693 -166.68035889]
[80.31336975 -177.66714478]
[77.34870911 -189.70707703]
[77.35919952 -202.09558105]
[80.33892822 -214.10900879]
[86.10869598 -225.04689026]
[94.32677460 -234.27281189]
[104.50916290 -241.25135803]
[116.05808258 -245.57929993]
[128.29705811 -247.00875854]
[130.52217102 -261.84280396]
[132.74728394 -276.67684937]
[134.97241211 -291.51089478]
[137.19752502 -306.34494019]
[139.42263794 -321.17898560]
[137.36218262 -327.46118164]
[138.59814453 -333.00820923]
[141.94119263 -336.41891479]
[144.60699463 -351.18014526]
[147.27278137 -365.94137573]
[149.93858337 -380.70257568]
[152.38430786 -395.50186157]
[154.60942078 -410.33590698]
[156.83454895 -425.16995239]
[159.05966187 -440.00396729]
[161.28477478 -454.83801270]
[147.57698059 -461.18414307]
[136.21327209 -471.13616943]
[128.11485291 -483.88732910]
[123.93821716 -498.40396118]
[124.02194214 -513.50921631]
[128.35925293 -527.97869873]
[136.59854126 -540.63928223]
[148.07186890 -550.46472168]
[161.84916687 -556.65850830]
[176.81356812 -558.71850586]
[191.75196838 -556.47772217]
[205.45336914 -550.11779785]
[216.80706787 -540.15435791]
[224.89268494 -527.39508057]
[229.05473328 -512.87426758]
[228.95584106 -497.76907349]
[224.60398865 -483.30401611]
[216.35198975 -470.65170288]
[204.86878967 -460.83779907]
[191.08528137 -454.65786743]
[176.11882019 -452.61291504]
[173.89370728 -437.77886963]
[171.66857910 -422.94482422]
[169.44346619 -408.11077881]
[167.21835327 -393.27673340]
[169.28631592 -388.97177124]
[168.67189026 -383.32205200]
[164.69979858 -378.03677368]
[162.03399658 -363.27557373]
[159.36820984 -348.51434326]
[156.70240784 -333.75314331]
[154.25668335 -318.95385742]
[152.03157043 -304.11981201]
[149.80644226 -289.28576660]
[147.58132935 -274.45172119]
[145.35621643 -259.61767578]
[143.13110352 -244.78364563]
[158.92088318 -236.82170105]
[171.05847168 -223.92864990]
[178.07250977 -207.64373779]
[179.10461426 -189.91877747]
[174.01448059 -172.88424683]
[163.39860535 -158.59317017]
[148.52049255 -148.77375793]
[131.16027832 -144.62031555]
[129.82205200 -129.68013000]
[128.59507751 -114.73039246]
[127.47942352 -99.77194214]
[134.24868774 -86.50444794]
[125.50640869 -73.31797028]
[124.39075470 -58.35951996]
[123.27510834 -43.40106583]
[122.15946198 -28.44261360]
[128.92872620 -15.17511845]
[120.18643951 -1.98864353]
[121.91139984 0.22102948]
[122.86501312 3.24712157]
[122.73193359 6.79926109]
[121.30765533 10.47838593]
[118.53298950 13.81832600]
[116.52897644 28.68385506]
[114.52496338 43.54938126]
[122.05543518 59.40053177]
[110.67948151 73.88048553]
[108.89701080 88.77420044]
[114.22245026 101.70213318]
[105.99670410 113.00826263]
[104.21424103 127.90198517]
[102.43177032 142.79570007]
[113.49394226 156.34736633]
[111.37424469 173.37152100]
[97.86902618 183.39389038]
[96.30850983 198.31250000]
[98.52814484 207.17314148]
[94.61207581 213.44100952]
[100.65466309 228.06283569]
[91.45979309 239.78050232]
[89.67733002 254.67420959]
[87.89485931 269.56793213]
[86.11239624 284.46163940]
[84.99674988 299.42010498]
[84.55014038 314.41345215]
[84.10353851 329.40679932]
[83.65692902 344.40014648]
[83.21032715 359.39349365]
[86.08283997 368.06451416]
[82.64379883 374.60629272]
[91.50659180 390.74731445]
[81.49238586 405.15850830]
[81.04577637 420.15185547]
[80.59917450 435.14520264]
[80.15256500 450.13854980]
[79.70596313 465.13189697]
[79.25935364 480.12524414]
[78.81275177 495.11859131]
[78.36614227 510.11196899]
[90.90737915 501.88290405]
[105.20730591 506.41192627]
[110.72454834 520.36041260]
[103.39200592 533.44604492]
[88.61494446 536.02258301]
[77.28713989 526.19219971]
[75.72661591 541.11083984]
[74.16609192 556.02941895]
[72.60556793 570.94805908]
[71.04504395 585.86663818]
[69.48452759 600.78521729]
[67.92400360 615.70385742]
[66.36347961 630.62243652]
[78.84052277 639.57897949]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 209]
[10 208]
[11 207]
[12 206]
[13 205]
[14 204]
[15 203]
[16 202]
[17 196]
[18 195]
[19 194]
[20 193]
[21 192]
[22 191]
[23 190]
[24 189]
[27 187]
[28 185]
[29 184]
[30 183]
[31 182]
[32 181]
[39 180]
[40 179]
[41 178]
[42 177]
[44 175]
[45 173]
[46 172]
[50 169]
[51 168]
[52 167]
[54 165]
[55 164]
[58 162]
[59 161]
[60 160]
[61 155]
[63 153]
[64 152]
[65 151]
[66 150]
[68 148]
[69 147]
[71 146]
[72 145]
[84 137]
[85 136]
[86 135]
[87 134]
[88 133]
[89 132]
[92 131]
[93 130]
[94 129]
[95 128]
[96 125]
[97 124]
[98 123]
[99 122]
[100 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
