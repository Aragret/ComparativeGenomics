%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUGGCUAUAGCGGCUAUGCCAACAUAUCCUAACGAACUUACCGACGACACAACCGUAGACGAGCCCGCAUAGUAGUUGACUACUCGUUCUUCCUAUAUUxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[51.79633331 683.53338623]
[44.41847992 670.42846680]
[39.42853165 656.24145508]
[36.97813034 641.40344238]
[37.14173889 626.36535645]
[39.91438675 611.58416748]
[45.21181870 597.50903320]
[52.87304306 584.56781006]
[62.66525269 573.15356445]
[74.29087067 563.61334229]
[87.39660645 556.23699951]
[101.58419037 551.24865723]
[99.13846588 536.44940186]
[96.69274139 521.65008545]
[94.02694702 506.88888550]
[91.14167023 492.16900635]
[88.25640106 477.44909668]
[85.37112427 462.72921753]
[75.33020020 451.72790527]
[80.26853180 436.69714355]
[77.38326263 421.97726440]
[69.86444092 434.95675659]
[56.19959259 441.14318848]
[41.48536301 438.22915649]
[31.20980263 427.30154419]
[29.20543480 412.43606567]
[36.21984100 399.17715454]
[49.63682175 392.47012329]
[64.45217896 394.81646729]
[75.14068604 405.34210205]
[74.02503204 390.38363647]
[72.90938568 375.42520142]
[71.79373932 360.46673584]
[70.67808533 345.50827026]
[62.75405884 358.24444580]
[49.57042694 365.39929199]
[34.57336426 365.10256958]
[21.68306160 357.43182373]
[14.26901817 344.39221191]
[14.26924515 329.39221191]
[21.68368340 316.35281372]
[34.57421494 308.68246460]
[49.57128906 308.38619995]
[62.75470734 315.54144287]
[70.67808533 328.27697754]
[71.79373932 313.31854248]
[72.90938568 298.36007690]
[66.14012909 285.09259033]
[74.88240814 271.90609741]
[75.99805450 256.94766235]
[77.11370087 241.98919678]
[78.22935486 227.03074646]
[75.84693146 222.89154053]
[76.03945160 217.21174622]
[79.60743713 211.64569092]
[81.16796112 196.72708130]
[71.73336792 187.95109558]
[69.03581238 175.15245056]
[74.27937317 162.95755005]
[85.75559235 155.90695190]
[87.53805542 141.01322937]
[89.32051849 126.11951447]
[91.10298920 111.22579956]
[85.77754974 98.29786682]
[94.00329590 86.99173737]
[95.78575897 72.09801483]
[97.56822968 57.20429993]
[99.35069275 42.31058502]
[88.28852844 28.75891304]
[90.40821838 11.73476124]
[103.91343689 1.71239102]
[105.47396088 -13.20621395]
[107.03448486 -28.12481880]
[106.81115723 -43.12315750]
[104.80714417 -57.98868561]
[95.29548645 -70.63143158]
[101.26305389 -84.27831268]
[99.25903320 -99.14384460]
[96.06715393 -103.27409363]
[94.89585876 -107.76646423]
[95.54473114 -111.79064178]
[97.51284027 -114.71619415]
[96.17460632 -129.65638733]
[94.83637238 -144.59657288]
[85.89873505 -157.65142822]
[92.46971130 -171.01823425]
[91.13147736 -185.95841980]
[89.79324341 -200.89860535]
[88.34381866 -215.82841492]
[86.78330231 -230.74700928]
[77.27336884 -239.46044922]
[76.28073883 -251.91831970]
[83.79384613 -261.39880371]
[82.45561218 -276.33898926]
[67.79932404 -280.20797729]
[55.35195541 -288.85891724]
[46.61659241 -301.24719238]
[42.64807129 -315.87686157]
[43.92560959 -330.98126221]
[50.29493713 -344.73654175]
[60.98692703 -355.48165894]
[74.71047211 -361.91903687]
[89.80838013 -363.27142334]
[104.45751190 -359.37542725]
[116.88891602 -350.70156860]
[125.60143280 -338.29721069]
[129.54298401 -323.66027832]
[128.23760986 -308.55822754]
[121.84294891 -294.81472778]
[111.13117981 -284.08932495]
[97.39579773 -277.67724609]
[98.73403168 -262.73706055]
[109.58824921 -248.94746399]
[101.70190430 -232.30754089]
[103.26242828 -217.38893127]
[107.08473969 -211.06344604]
[104.73342896 -202.23683167]
[106.07166290 -187.29664612]
[107.40989685 -172.35646057]
[116.25180817 -160.37022400]
[109.77655792 -145.93479919]
[111.11479187 -130.99461365]
[112.45302582 -116.05442810]
[114.12456512 -101.14785767]
[116.12857819 -86.28232574]
[125.49688721 -74.70286560]
[119.67266846 -59.99269867]
[121.67668152 -45.12717056]
[127.11582184 -59.10628891]
[136.95596313 -70.42758179]
[150.04107666 -77.76103973]
[164.83395386 -80.24514008]
[179.59674072 -77.58803558]
[192.59512329 -70.10189819]
[202.30204773 -58.66618347]
[207.57716370 -44.62435150]
[207.80076599 -29.62601662]
[202.94656372 -15.43317413]
[193.58483887 -3.71318245]
[180.81539917 4.15710497]
[166.13838196 7.25309467]
[151.27803040 5.21107292]
[137.98011780 -1.72906566]
[127.80687714 -12.75200081]
[121.95308685 -26.56429482]
[120.39256287 -11.64569092]
[118.83203888 3.27291393]
[128.26663208 12.04890442]
[130.96418762 24.84754753]
[125.72062683 37.04244614]
[114.24440765 44.09304810]
[112.46194458 58.98676682]
[110.67948151 73.88048553]
[108.89701080 88.77420044]
[114.22245026 101.70213318]
[105.99670410 113.00826263]
[104.21424103 127.90198517]
[102.43177032 142.79570007]
[100.64930725 157.68942261]
[111.71147156 171.24108887]
[109.59178162 188.26524353]
[96.08656311 198.28761292]
[94.52603912 213.20620728]
[93.18780518 228.14639282]
[92.07215881 243.10485840]
[90.95651245 258.06329346]
[89.84085846 273.02175903]
[96.53031921 287.35919189]
[87.86783600 299.47573853]
[86.75218964 314.43417358]
[85.63654327 329.39263916]
[85.63654327 344.39263916]
[86.75218964 359.35107422]
[87.86783600 374.30953979]
[88.98348999 389.26800537]
[90.09913635 404.22644043]
[92.10314941 419.09197998]
[94.98842621 433.81185913]
[105.23572540 445.86605835]
[100.09101868 459.84393311]
[102.97628784 474.56384277]
[105.86156464 489.28372192]
[108.74683380 504.00360107]
[112.79717255 509.22915649]
[113.49565125 514.86914062]
[111.49201202 519.20440674]
[113.93773651 534.00366211]
[116.38346863 548.80291748]
[131.42161560 548.96142578]
[146.20375061 551.72900391]
[160.28063965 557.02166748]
[173.22453308 564.67846680]
[184.64205933 574.46679688]
[194.18624878 586.08917236]
[201.56707764 599.19244385]
[206.56024170 613.37829590]
[209.01400757 628.21575928]
[208.85380554 643.25390625]
[206.08450317 658.03570557]
[200.79026794 672.11199951]
[193.13198853 685.05505371]
[183.34236145 696.47143555]
[171.71890259 706.01434326]
[158.61485291 713.39367676]
[144.42839050 718.38519287]
[129.59065247 720.83728027]
[114.55254364 720.67541504]
[99.77103424 717.90441895]
[85.69533539 712.60858154]
[72.75318909 704.94885254]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 188]
[13 187]
[14 186]
[15 183]
[16 182]
[17 181]
[18 180]
[20 178]
[21 177]
[30 176]
[31 175]
[32 174]
[33 173]
[34 172]
[45 171]
[46 170]
[47 169]
[49 167]
[50 166]
[51 165]
[52 164]
[55 163]
[56 162]
[60 159]
[61 158]
[62 157]
[63 156]
[65 154]
[66 153]
[67 152]
[68 151]
[71 147]
[72 146]
[73 145]
[74 128]
[75 127]
[77 125]
[78 124]
[82 123]
[83 122]
[84 121]
[86 119]
[87 118]
[88 117]
[89 115]
[90 114]
[93 112]
[94 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
