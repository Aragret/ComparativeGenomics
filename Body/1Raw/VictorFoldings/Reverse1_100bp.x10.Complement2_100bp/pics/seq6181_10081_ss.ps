%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[30.54527855 505.06314087]
[27.91890335 519.91418457]
[21.68099022 533.64514160]
[12.22366142 545.39288330]
[0.14141102 554.41894531]
[-13.80626011 560.15594482]
[-28.74258995 562.24328613]
[-43.72866821 560.54968262]
[-57.82245636 555.18164062]
[-70.13800812 546.47656250]
[-79.90116119 534.98168945]
[-86.49818420 521.41961670]
[-89.51439667 506.64285278]
[-88.76018524 491.58026123]
[-84.28297424 477.17868042]
[-76.36418915 464.34341431]
[-65.50161743 453.88131714]
[-52.37809372 446.45004272]
[-37.81856918 442.51672363]
[-22.73827171 442.32858276]
[-19.19859886 427.75222778]
[-15.65892696 413.17584229]
[-21.68256378 402.68572998]
[-18.85289955 390.51293945]
[-8.15562344 383.30661011]
[-4.39932251 368.78457642]
[-0.64302188 354.26251221]
[3.11327887 339.74044800]
[-8.48707771 349.25000000]
[-23.27169228 351.78280640]
[-37.37590408 346.67681885]
[-47.11290359 335.26669312]
[-49.93746185 320.53503418]
[-45.11125183 306.33264160]
[-33.89582825 296.37200928]
[-19.22287369 293.25680542]
[-4.92786932 297.80136108]
[5.25250816 308.81771851]
[8.65715885 323.42532349]
[14.52611923 309.62115479]
[8.08162212 298.46328735]
[9.25790596 285.43646240]
[17.84867668 275.31671143]
[30.88846970 271.94354248]
[36.96230316 258.22827148]
[43.03613663 244.51300049]
[49.10997009 230.79772949]
[55.18380737 217.08245850]
[61.25764084 203.36718750]
[61.09182358 195.97839355]
[67.52536011 189.49400330]
[73.80271912 175.87068176]
[80.08007812 162.24736023]
[84.48107910 147.90751648]
[86.92680359 133.10824585]
[89.37253571 118.30897522]
[80.81803131 108.95621490]
[79.13973999 96.39289856]
[84.93927765 85.12262726]
[96.13766479 79.18548584]
[90.97609711 64.22992706]
[100.85211182 53.08032608]
[103.51791382 38.31911087]
[106.18370819 23.55789375]
[104.41704559 18.64607048]
[104.68439484 14.01122189]
[106.53964996 10.38174629]
[109.31224060 8.20342445]
[112.63449860 -6.42403555]
[115.95675659 -21.05149651]
[119.27901459 -35.67895508]
[122.60127258 -50.30641556]
[121.45028687 -59.36804199]
[126.08341980 -65.12615204]
[129.62309265 -79.70252991]
[128.25314331 -83.82286835]
[128.26446533 -87.76804352]
[129.43237305 -91.12532806]
[131.42124939 -93.59737396]
[133.83171082 -95.02837372]
[138.23271179 -109.36822510]
[142.63371277 -123.70806885]
[147.03471375 -138.04791260]
[148.26168823 -152.99765015]
[146.25767517 -167.86317444]
[144.25366211 -182.72871399]
[142.24964905 -197.59423828]
[132.73799133 -210.23698425]
[138.70555115 -223.88386536]
[136.70153809 -238.74938965]
[121.74940491 -240.83175659]
[107.91401672 -246.87199402]
[96.22203827 -256.42187500]
[87.54110718 -268.77276611]
[82.51540375 -283.00808716]
[81.51786041 -298.07153320]
[84.62250519 -312.84527588]
[91.59896088 -326.23303223]
[101.92951202 -337.24130249]
[114.84757996 -345.05322266]
[129.39454651 -349.08911133]
[144.49093628 -349.04943848]
[159.01649475 -344.93716431]
[171.89334106 -337.05746460]
[182.16589355 -325.99505615]
[189.07189941 -312.57083130]
[192.09886169 -297.78097534]
[191.02217102 -282.72299194]
[185.92173767 -268.51425171]
[177.17601013 -256.20916748]
[165.43402100 -246.72085571]
[151.56707764 -240.75340271]
[153.57109070 -225.88787842]
[162.93939209 -214.30841064]
[157.11517334 -199.59825134]
[159.11918640 -184.73272705]
[161.12319946 -169.86718750]
[163.12721252 -155.00166321]
[167.91499329 -169.21705627]
[175.43026733 -182.19859314]
[185.37373352 -193.42926025]
[197.34931946 -202.46170044]
[210.88006592 -208.93620300]
[225.42703247 -212.59484863]
[240.41082764 -213.29194641]
[255.23464966 -210.99971008]
[269.30807495 -205.80943298]
[282.07055664 -197.92787170]
[293.01376343 -187.66893005]
[301.70184326 -175.44120789]
[307.78875732 -161.73175049]
[311.03207397 -147.08657837]
[311.30261230 -132.08901978]
[308.58953857 -117.33641052]
[303.00100708 -103.41635132]
[294.75952148 -90.88326263]
[284.19338989 -80.23634338]
[271.72344971 -71.89965057]
[257.84637451 -66.20523071]
[243.11485291 -63.37989426]
[228.11566162 -63.53616714]
[213.44621277 -66.66783142]
[199.69079590 -72.65014648]
[187.39724731 -81.24484253]
[177.05525208 -92.10960388]
[169.07669067 -104.81168365]
[163.77938843 -118.84516144]
[161.37455750 -133.64692688]
[156.97355652 -119.30707550]
[152.57257080 -104.96722412]
[148.17156982 -90.62738037]
[144.19946289 -76.16285706]
[140.65979004 -61.58647919]
[137.22872925 -46.98415756]
[133.90647888 -32.35669708]
[130.58421326 -17.72923660]
[127.26195526 -3.10177588]
[123.93969727 11.52568436]
[120.94492340 26.22368813]
[118.27912903 40.98490524]
[115.61333466 55.74612427]
[120.96557617 69.64585876]
[110.89888000 81.85128021]
[120.61630249 95.19067383]
[117.80428314 111.45291138]
[104.17180634 120.75469971]
[101.72607422 135.55397034]
[99.28034973 150.35324097]
[108.35391998 138.40876770]
[120.63847351 129.80123901]
[134.96313477 125.35105133]
[149.96255493 125.48237610]
[164.20709229 130.18269348]
[176.33906555 139.00401306]
[185.20210266 151.10551453]
[189.95144653 165.33378601]
[190.13442993 180.33267212]
[185.73359680 194.67257690]
[177.16841125 206.98669434]
[165.25526428 216.10134888]
[151.12962341 221.14776611]
[136.13786316 221.64497375]
[121.70890808 217.54556274]
[109.21802521 209.24026489]
[99.85576630 197.52070618]
[94.51448822 183.50390625]
[93.70339966 168.52471924]
[87.42603302 182.14804077]
[81.14867401 195.77136230]
[74.97290802 209.44102478]
[68.89907074 223.15629578]
[62.82523727 236.87156677]
[56.75140381 250.58682251]
[50.67757034 264.30209351]
[44.60373688 278.01736450]
[51.20299911 294.21826172]
[44.18170929 309.87124634]
[28.33029556 315.49011230]
[22.46133614 329.29428101]
[17.63533783 343.49673462]
[13.87903786 358.01879883]
[10.12273693 372.54086304]
[6.36643600 387.06292725]
[11.69714642 404.68862915]
[-1.08255124 416.71551514]
[-4.62222385 431.29190063]
[-8.16189575 445.86825562]
[5.15260887 452.95169067]
[16.28668404 463.12435913]
[24.54043388 475.74679565]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 207]
[21 206]
[22 205]
[25 203]
[26 202]
[27 201]
[28 200]
[39 199]
[40 198]
[44 195]
[45 194]
[46 193]
[47 192]
[48 191]
[49 190]
[51 189]
[52 188]
[53 187]
[54 168]
[55 167]
[56 166]
[60 163]
[62 161]
[63 160]
[64 159]
[68 158]
[69 157]
[70 156]
[71 155]
[72 154]
[74 153]
[75 152]
[80 151]
[81 150]
[82 149]
[83 148]
[84 118]
[85 117]
[86 116]
[87 115]
[89 113]
[90 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
