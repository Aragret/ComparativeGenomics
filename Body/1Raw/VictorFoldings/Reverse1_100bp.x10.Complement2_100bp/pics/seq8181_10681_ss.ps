%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[46.11568451 865.80426025]
[31.56669617 869.48675537]
[16.77362823 872.01647949]
[1.82768691 873.37768555]
[-13.17898178 873.56201172]
[-28.15385437 872.56842041]
[-43.00460434 870.40295410]
[-57.63967133 867.07897949]
[-71.96882629 862.61694336]
[-85.90371704 857.04443359]
[-99.35843658 850.39581299]
[-112.25003052 842.71197510]
[-124.49901581 834.04040527]
[-136.02986145 824.43444824]
[-146.77149963 813.95349121]
[-156.65768433 802.66198730]
[-165.62745667 790.62963867]
[-173.62553406 777.93066406]
[-180.60260010 764.64324951]
[-186.51562500 750.84942627]
[-191.32817078 736.63415527]
[-195.01054382 722.08514404]
[-197.54006958 707.29205322]
[-198.90113831 692.34606934]
[-199.08534241 677.33941650]
[-198.09156799 662.36456299]
[-195.92594910 647.51379395]
[-192.60180664 632.87878418]
[-188.13966370 618.54968262]
[-182.56701660 604.61480713]
[-175.91821289 591.16015625]
[-168.23428345 578.26867676]
[-159.56256104 566.01977539]
[-149.95652771 554.48901367]
[-139.47541809 543.74749756]
[-128.18383789 533.86145020]
[-116.15140533 524.89178467]
[-103.45231628 516.89379883]
[-90.16485596 509.91690063]
[-76.37094879 504.00399780]
[-62.15564346 499.19161987]
[-47.60657883 495.50936890]
[-32.81346130 492.98001099]
[-17.86748886 491.61911011]
[-2.86081743 491.43502808]
[12.11403465 492.42895508]
[26.96474075 494.59475708]
[30.28700066 479.96728516]
[33.60926056 465.33981323]
[36.93151855 450.71237183]
[40.25378036 436.08489990]
[43.57603836 421.45745850]
[28.83609581 413.59082031]
[16.88447952 401.89639282]
[8.68586922 387.30758667]
[4.90497541 370.99176025]
[5.85266066 354.25695801]
[11.46039104 338.44689941]
[21.28513336 324.83331299]
[34.54434967 314.51336670]
[50.17831802 308.32144165]
[66.93482971 306.76162720]
[69.60062408 292.00039673]
[72.26642609 277.23919678]
[74.93222046 262.47796631]
[77.59801483 247.71675110]
[80.26380920 232.95553589]
[82.26782227 218.09001160]
[83.60605621 203.14982605]
[84.94429016 188.20964050]
[78.37331390 174.84283447]
[87.31095123 161.78797913]
[88.64918518 146.84779358]
[89.98741913 131.90760803]
[91.21439362 116.95787048]
[81.83895111 105.91037750]
[82.91663361 91.46098328]
[93.82714844 81.92647552]
[94.94279480 66.96802521]
[96.05844879 52.00957108]
[97.17409515 37.05111694]
[98.28974152 22.09266472]
[99.40539551 7.13421154]
[100.52104187 -7.82424164]
[101.52529907 -22.79058647]
[102.41811371 -37.76399231]
[103.19944000 -52.74362946]
[103.86922455 -67.72866821]
[101.46218109 -72.36042786]
[101.10791016 -76.98944855]
[102.46163177 -80.83425140]
[104.91833496 -83.36346436]
[106.25656891 -98.30364990]
[107.59481049 -113.24382782]
[108.48762512 -128.21723938]
[108.93422699 -143.21058655]
[109.38083649 -158.20393372]
[109.82743835 -173.19728088]
[95.73475647 -178.78047180]
[84.40358734 -188.84925842]
[77.20223236 -202.18778992]
[75.00028229 -217.18536377]
[78.06364441 -232.03096008]
[86.02239227 -244.93188477]
[97.91548157 -254.33030701]
[112.30674744 -259.09130859]
[127.45838165 -258.64001465]
[141.54075623 -253.03085327]
[152.85334778 -242.94120789]
[160.03010559 -229.58943176]
[162.20442200 -214.58781433]
[159.11370850 -199.74789429]
[151.13119507 -186.86164856]
[139.22080994 -177.48516846]
[124.82079315 -172.75068665]
[124.37418365 -157.75732422]
[123.92758179 -142.76397705]
[123.48097229 -127.77062988]
[125.30287933 -125.64018250]
[126.39066315 -122.65969086]
[126.41632843 -119.10515594]
[125.15775299 -115.36610413]
[122.53498840 -111.90559387]
[121.19675446 -96.96541595]
[119.85852051 -82.02523041]
[118.85426331 -67.05888367]
[118.18447876 -52.07384491]
[121.02616882 -45.25133896]
[117.39152527 -36.87117767]
[116.49871063 -21.89776993]
[119.23851013 -15.03371334]
[115.47949219 -6.70859289]
[114.36384583 8.24986076]
[113.24819946 23.20831299]
[112.13254547 38.16676712]
[111.01689911 53.12522125]
[109.90125275 68.08367157]
[108.78560638 83.04212952]
[118.16104889 94.08962250]
[117.08336639 108.53901672]
[106.17285156 118.07352448]
[108.65531921 126.86415100]
[104.92760468 133.24583435]
[103.58937073 148.18601990]
[102.25113678 163.12620544]
[108.72639465 177.56164551]
[99.88447571 189.54786682]
[98.54624176 204.48805237]
[97.20800781 219.42823792]
[109.38303375 210.66647339]
[124.20915222 212.94380188]
[133.19328308 224.95568848]
[131.18891907 239.82116699]
[119.34423828 249.02462769]
[104.44441986 247.29389954]
[95.02502441 235.62133789]
[92.35923004 250.38255310]
[89.69343567 265.14376831]
[87.02764130 279.90499878]
[84.36184692 294.66619873]
[81.69605255 309.42742920]
[93.90022278 314.88790894]
[104.56752014 322.93450928]
[113.15977478 333.15664673]
[119.24453735 345.03417969]
[122.51684570 357.96365356]
[122.81450653 371.28927612]
[120.12611389 384.33587646]
[114.59146118 396.44332886]
[106.49427032 406.99975586]
[96.24764252 415.47271729]
[84.37298584 421.43579102]
[71.47349548 424.59017944]
[58.20349884 424.77969360]
[54.88124084 439.40716553]
[51.55897903 454.03463745]
[48.23672104 468.66207886]
[44.91445923 483.28955078]
[41.59220123 497.91702271]
[55.92144394 502.37872314]
[69.85645294 507.95092773]
[83.31130981 514.59930420]
[96.20305634 522.28283691]
[108.45221710 530.95422363]
[119.98326874 540.55987549]
[130.72511292 551.04064941]
[140.61152649 562.33197021]
[149.58154297 574.36407471]
[157.57987976 587.06292725]
[164.55722046 600.35021973]
[170.47053528 614.14392090]
[175.28335571 628.35906982]
[178.96604919 642.90802002]
[181.49586487 657.70104980]
[182.85723877 672.64697266]
[183.04174805 687.65368652]
[182.04827881 702.62854004]
[179.88296509 717.47930908]
[176.55912781 732.11444092]
[172.09725952 746.44360352]
[166.52490234 760.37860107]
[159.87638855 773.83337402]
[152.19270325 786.72503662]
[143.52124023 798.97412109]
[133.91543579 810.50506592]
[123.43454742 821.24676514]
[112.14316559 831.13305664]
[100.11092377 840.10296631]
[87.41199493 848.10119629]
[74.12467957 855.07836914]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 179]
[48 178]
[49 177]
[50 176]
[51 175]
[52 174]
[62 161]
[63 160]
[64 159]
[65 158]
[66 157]
[67 156]
[68 149]
[69 148]
[70 147]
[72 145]
[73 144]
[74 143]
[75 141]
[78 138]
[79 137]
[80 136]
[81 135]
[82 134]
[83 133]
[84 132]
[85 130]
[86 129]
[87 127]
[88 126]
[92 125]
[93 124]
[94 123]
[95 118]
[96 117]
[97 116]
[98 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
