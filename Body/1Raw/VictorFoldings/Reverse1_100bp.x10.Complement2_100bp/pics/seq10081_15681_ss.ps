%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCGGCGUGAGCAUUCCCCACCUAAAAAGAUACAUCGGCAACUCAACACCAUCAGUUUUACAUUAUUAAUAAUCAUCAUUCCGAUCCUCCCACAACUAAxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[15.48712635 352.75289917]
[23.42520332 365.52621460]
[29.02444077 379.48400879]
[32.11468506 394.20205688]
[32.60202408 409.23315430]
[30.47165298 424.12048340]
[25.78830910 438.41165161]
[18.69431305 451.67236328]
[9.40524483 463.49963379]
[-1.79661238 473.53405762]
[-14.57084656 481.47067261]
[-28.52926254 487.06832886]
[-43.24768066 490.15692139]
[-58.27882385 490.64254761]
[-73.16591644 488.51049805]
[-87.45655060 483.82553101]
[-100.71645355 476.73001099]
[-112.54266357 467.43960571]
[-122.57581329 456.23660278]
[-130.51098633 443.46148682]
[-136.10707092 429.50244141]
[-139.19396973 414.78366089]
[-139.67790222 399.75247192]
[-137.54415894 384.86560059]
[-132.85757446 370.57550049]
[-125.76056671 357.31640625]
[-116.46881104 345.49124146]
[-105.26467896 335.45938110]
[-92.48864746 327.52563477]
[-78.52896118 321.93115234]
[-63.80984116 318.84591675]
[-48.77858734 318.36367798]
[-33.89198303 320.49911499]
[-19.60241127 325.18734741]
[-12.52530670 311.96182251]
[-5.44820118 298.73626709]
[1.62890410 285.51074219]
[8.70600986 272.28521729]
[1.07937050 257.74865723]
[3.64581680 241.36650085]
[15.58960533 229.62565613]
[32.34256363 227.29446411]
[39.22197723 213.96504211]
[39.49624634 206.57946777]
[46.30432892 200.48950195]
[53.38143539 187.26397705]
[60.45854187 174.03845215]
[67.53564453 160.81291199]
[74.61275482 147.58738708]
[80.58431244 133.82728577]
[85.41030884 119.62483215]
[90.23631287 105.42237854]
[94.95644379 91.18438721]
[99.57044983 76.91165161]
[98.51075745 72.70083618]
[98.81546783 68.76742554]
[100.22985077 65.50630188]
[102.39707947 63.18903351]
[104.90730286 61.94127655]
[110.36266327 47.96847916]
[115.81801605 33.99568176]
[121.27337646 20.02288246]
[108.88924408 28.48653030]
[94.00137329 30.31716728]
[79.93574524 25.10582542]
[69.83466339 14.01672840]
[65.95472717 -0.47278881]
[69.16272736 -15.12573147]
[78.74198914 -26.66859436]
[92.55249023 -32.52267456]
[107.50891113 -31.38014984]
[120.26996613 -23.49627113]
[127.98478699 -10.63231087]
[128.92987061 4.33790779]
[136.59046936 -8.55841923]
[136.98612976 -24.37467766]
[150.13821411 -31.36552429]
[157.79881287 -44.26185226]
[149.49147034 -61.50492477]
[153.22564697 -80.12387848]
[167.31494141 -92.63068390]
[185.94593811 -94.10687256]
[193.02304077 -107.33239746]
[200.10014343 -120.55792999]
[207.17726135 -133.78344727]
[214.25436401 -147.00898743]
[221.33146667 -160.23451233]
[228.40856934 -173.46003723]
[235.48567200 -186.68556213]
[242.56278992 -199.91108704]
[230.07186890 -208.23771667]
[218.44291687 -217.73103333]
[207.78450012 -228.30238342]
[198.19613647 -239.85310364]
[189.76736450 -252.27529907]
[182.57685852 -265.45303345]
[176.69177246 -279.26321411]
[172.16706848 -293.57693481]
[169.04495239 -308.26052856]
[167.35461426 -323.17687988]
[167.11181641 -338.18676758]
[168.31884766 -353.15002441]
[170.96440125 -367.92691040]
[175.02381897 -382.37948608]
[180.45915222 -396.37277222]
[187.21969604 -409.77615356]
[195.24229431 -422.46447754]
[204.45205688 -434.31924438]
[214.76300049 -445.22979736]
[226.07882690 -455.09426880]
[238.29389954 -463.82052612]
[251.29415894 -471.32711792]
[264.95822144 -477.54391479]
[279.15850830 -482.41293335]
[293.76245117 -485.88864136]
[308.63366699 -487.93865967]
[323.63330078 -488.54379272]
[338.62133789 -487.69839478]
[353.45779419 -485.41040039]
[368.00415039 -481.70114136]
[382.12463379 -476.60525513]
[395.68731689 -470.17028809]
[408.56564331 -462.45639038]
[420.63934326 -453.53555298]
[431.79568481 -443.49105835]
[441.93048096 -432.41671753]
[450.94912720 -420.41589355]
[458.76739502 -407.60067749]
[465.31231689 -394.09069824]
[470.52276611 -380.01208496]
[474.35009766 -365.49633789]
[476.75857544 -350.67895508]
[477.72567749 -335.69830322]
[477.24243164 -320.69424438]
[475.31332397 -305.80685425]
[471.95635986 -291.17517090]
[467.20288086 -276.93579102]
[461.09729004 -263.22164917]
[453.69659424 -250.16084290]
[445.06985474 -237.87527466]
[435.29766846 -226.47967529]
[424.47125244 -216.08042908]
[412.69168091 -206.77465820]
[400.06896973 -198.64923096]
[386.72094727 -191.78002930]
[372.77227783 -186.23117065]
[358.35317993 -182.05447388]
[343.59826660 -179.28894043]
[328.64532471 -177.96038818]
[313.63394165 -178.08122253]
[298.70434570 -179.65031433]
[283.99584961 -182.65303040]
[269.64584351 -187.06129456]
[255.78831482 -192.83398438]
[248.71121216 -179.60845947]
[241.63409424 -166.38293457]
[234.55699158 -153.15740967]
[227.47988892 -139.93186951]
[220.40278625 -126.70635223]
[213.32568359 -113.48081970]
[206.24856567 -100.25529480]
[199.17146301 -87.02976227]
[205.84405518 -78.08956146]
[208.71159363 -67.25556946]
[207.32279968 -56.08319092]
[201.84033203 -46.19121170]
[193.02272034 -39.02728653]
[182.11970520 -35.65609741]
[170.69512939 -36.60125351]
[163.03453064 -23.70492744]
[163.18681335 -8.81110096]
[149.48680115 -0.89782149]
[141.82620239 11.99850559]
[135.24617004 25.47823906]
[129.79081726 39.45103836]
[124.33545685 53.42383575]
[118.88010406 67.39663696]
[113.84318542 81.52566528]
[109.22917938 95.79839325]
[109.94331360 103.82725525]
[104.43876648 110.24837494]
[99.61277008 124.45082855]
[94.78677368 138.65328979]
[106.78062439 129.64509583]
[121.57190704 127.15151215]
[135.85620117 131.72958374]
[146.44236755 142.35658264]
[150.96542358 156.65840149]
[148.41491699 171.43997192]
[139.36061096 183.39906311]
[125.82529449 189.86398315]
[110.83277130 189.39042664]
[97.73241425 182.08422852]
[89.45087433 169.57757568]
[87.83827972 154.66448975]
[80.76117706 167.89002991]
[73.68406677 181.11555481]
[66.60696411 194.34107971]
[59.52985764 207.56660461]
[52.55140686 220.84445190]
[45.67199326 234.17387390]
[52.76463699 245.99273682]
[53.08864212 259.66436768]
[46.66629028 271.61523438]
[35.26931763 278.77435303]
[21.93153763 279.36233521]
[14.85443115 292.58786011]
[7.77732611 305.81338501]
[0.70022076 319.03890991]
[-6.37688446 332.26443481]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 210]
[35 209]
[36 208]
[37 207]
[38 206]
[42 201]
[43 200]
[45 199]
[46 198]
[47 197]
[48 196]
[49 195]
[50 183]
[51 182]
[52 181]
[53 179]
[54 178]
[59 177]
[60 176]
[61 175]
[62 174]
[74 173]
[75 172]
[77 170]
[78 169]
[82 162]
[83 161]
[84 160]
[85 159]
[86 158]
[87 157]
[88 156]
[89 155]
[90 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
