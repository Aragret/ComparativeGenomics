%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUAUCACCCCCCAUUCCGCUCCAAUCGCUCCGAACGAUCUUCAGUAGUUUUUCGAUAAUCACCCUCAUCUCAAACUUCAGGAACUCUCUCCUAAUACxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[98.19191742 694.49591064]
[83.13422394 696.77313232]
[68.45382690 692.72271729]
[56.69419861 683.04644775]
[49.89275742 669.42071533]
[49.22790146 654.20629883]
[54.81481552 640.03924561]
[65.68553925 629.37396240]
[79.95664978 624.05841064]
[80.84946442 609.08502197]
[81.74227905 594.11157227]
[82.52359772 579.13195801]
[83.19338226 564.14691162]
[83.41671753 549.14855957]
[83.19338226 534.15026855]
[74.73474121 525.50280762]
[74.42594147 513.00927734]
[82.97776031 503.35375977]
[82.97776031 488.35375977]
[82.97776031 473.35375977]
[82.97776031 458.35375977]
[82.97776031 443.35375977]
[82.64278412 428.35751343]
[81.97299957 413.37246704]
[81.30321503 398.38742065]
[78.44580841 394.56063843]
[77.96202850 388.89822388]
[80.84331512 382.94763184]
[80.61998749 367.94927979]
[80.39665985 352.95095825]
[80.17333221 337.95260620]
[79.95000458 322.95428467]
[67.78871918 331.73510742]
[53.30082321 327.84915161]
[47.16625214 314.16091919]
[53.90718079 300.76092529]
[68.55445099 297.52713013]
[80.30990601 306.84188843]
[81.20272827 291.86846924]
[73.41067505 282.61587524]
[74.03195190 270.13397217]
[83.27823639 261.14123535]
[84.39388275 246.18280029]
[85.50953674 231.22434998]
[86.62518311 216.26588440]
[87.74082947 201.30743408]
[88.63364410 186.33403015]
[89.30342865 171.34898376]
[89.97321320 156.36395264]
[90.64300537 141.37890625]
[91.31278992 126.39387512]
[77.24892426 115.95283508]
[72.22555542 99.17268372]
[78.23879242 82.72128296]
[92.89917755 73.13584900]
[93.12250519 58.13751221]
[85.59152985 44.22367096]
[93.51746368 31.61300659]
[93.74079132 16.61466980]
[93.96411896 1.61633193]
[94.18744659 -13.38200569]
[94.41077423 -28.38034248]
[94.63410187 -43.37868118]
[94.74576569 -58.37826538]
[94.74576569 -73.37826538]
[94.74576569 -88.37826538]
[94.74576569 -103.37826538]
[91.61635590 -111.95990753]
[94.85910034 -118.60117340]
[95.08242798 -133.59951782]
[95.30575562 -148.59785461]
[95.52908325 -163.59619141]
[95.75241089 -178.59452820]
[93.50389099 -182.30911255]
[92.64113617 -186.15881348]
[93.03646088 -189.69139099]
[94.42841339 -192.54254150]
[96.46207428 -194.47189331]
[97.57772827 -209.43034363]
[98.69337463 -224.38879395]
[99.80902100 -239.34724426]
[100.92467499 -254.30569458]
[102.04032135 -269.26416016]
[92.00399017 -281.17672729]
[93.34850311 -296.33084106]
[104.76718140 -305.82553101]
[105.88283539 -320.78399658]
[106.99848175 -335.74246216]
[107.89129639 -350.71585083]
[108.56108093 -365.70089722]
[109.23086548 -380.68594360]
[102.11749268 -394.81784058]
[110.41538239 -407.18692017]
[111.08516693 -422.17196655]
[111.42014313 -437.16821289]
[111.42014313 -452.16821289]
[111.42014313 -467.16821289]
[111.42014313 -482.16821289]
[97.36295319 -487.95303345]
[86.59307861 -498.68048096]
[80.75285339 -512.71472168]
[80.73285675 -527.91564941]
[86.53614044 -541.96520996]
[97.27775574 -552.72094727]
[111.31967163 -558.54272461]
[126.52060699 -558.54272461]
[140.56253052 -552.72094727]
[151.30413818 -541.96520996]
[157.10742188 -527.91564941]
[157.08743286 -512.71472168]
[151.24720764 -498.68048096]
[140.47732544 -487.95303345]
[126.42014313 -482.16821289]
[126.42014313 -467.16821289]
[126.42014313 -452.16821289]
[126.42014313 -437.16821289]
[128.64140320 -434.42990112]
[129.64671326 -430.47967529]
[128.88087463 -425.90072632]
[126.07020569 -421.50216675]
[125.40042114 -406.51712036]
[132.56170654 -393.45706177]
[124.21590424 -380.01614380]
[123.54611969 -365.03109741]
[122.87633514 -350.04608154]
[125.38094330 -345.97961426]
[125.35762024 -340.29663086]
[121.95693207 -334.62680054]
[120.84128571 -319.66833496]
[119.72563934 -304.70989990]
[129.60952759 -293.62637329]
[128.69119263 -278.44049072]
[116.99877167 -268.14849854]
[115.88312531 -253.19004822]
[114.76747894 -238.23159790]
[113.65182495 -223.27314758]
[112.53617859 -208.31469727]
[111.42053223 -193.35623169]
[110.75074768 -178.37120056]
[110.52742004 -163.37286377]
[110.30409241 -148.37452698]
[110.08076477 -133.37619019]
[109.85743713 -118.37784576]
[109.74576569 -103.37826538]
[109.74576569 -88.37826538]
[109.74576569 -73.37826538]
[109.74576569 -58.37826538]
[112.88926697 -51.68945312]
[109.63243866 -43.15535355]
[109.40911102 -28.15701485]
[109.18578339 -13.15867805]
[108.96245575 1.83965969]
[108.73912811 16.83799744]
[108.51580048 31.83633423]
[116.06275177 44.67739105]
[108.12084198 58.36083984]
[107.89751434 73.35917664]
[118.43995667 79.21364594]
[125.50941467 88.98301697]
[127.77444458 100.82731628]
[124.80844879 112.51580048]
[117.17003632 121.84706116]
[106.29782867 127.06365967]
[105.62804413 142.04870605]
[104.95825195 157.03373718]
[104.28846741 172.01878357]
[103.61868286 187.00381470]
[106.32152557 193.03756714]
[105.66936493 198.68307495]
[102.69928741 202.42308044]
[101.58363342 217.38153076]
[100.46798706 232.33999634]
[99.35234070 247.29844666]
[98.23668671 262.25689697]
[106.61497498 278.65463257]
[96.17613220 292.76129150]
[95.28331757 307.73468018]
[94.94834137 322.73095703]
[95.17166901 337.72927856]
[95.39499664 352.72763062]
[95.61832428 367.72595215]
[95.84165192 382.72430420]
[96.28825378 397.71765137]
[96.95803833 412.70269775]
[97.62782288 427.68771362]
[100.43849945 432.08627319]
[101.20433044 436.66522217]
[100.19902802 440.61547852]
[97.97776031 443.35375977]
[97.97776031 458.35375977]
[97.97776031 473.35375977]
[97.97776031 488.35375977]
[97.97776031 503.35375977]
[107.55245209 519.08294678]
[98.19172668 533.92694092]
[98.41505432 548.92523193]
[100.77317047 552.57122803]
[101.75016022 556.39355469]
[101.46018982 559.93634033]
[100.15373993 562.82769775]
[98.17842865 564.81671143]
[97.50863647 579.80175781]
[100.25173950 588.51458740]
[96.71568298 595.00439453]
[95.82286835 609.97784424]
[94.93005371 624.95123291]
[108.46839142 631.92498779]
[117.99472046 643.80645752]
[121.85856628 658.53704834]
[119.39047241 673.56463623]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 206]
[10 205]
[11 204]
[12 202]
[13 201]
[14 196]
[15 195]
[18 193]
[19 192]
[20 191]
[21 190]
[22 189]
[23 185]
[24 184]
[25 183]
[28 182]
[29 181]
[30 180]
[31 179]
[32 178]
[38 177]
[39 176]
[42 174]
[43 173]
[44 172]
[45 171]
[46 170]
[47 167]
[48 166]
[49 165]
[50 164]
[51 163]
[55 157]
[56 156]
[58 154]
[59 153]
[60 152]
[61 151]
[62 150]
[63 149]
[64 147]
[65 146]
[66 145]
[67 144]
[69 143]
[70 142]
[71 141]
[72 140]
[73 139]
[78 138]
[79 137]
[80 136]
[81 135]
[82 134]
[83 133]
[86 130]
[87 129]
[88 128]
[89 125]
[90 124]
[91 123]
[93 121]
[94 120]
[95 116]
[96 115]
[97 114]
[98 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
