%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCACCUCAUCCCGACUCUGACCCCACCCCGGAAGAUACCGACUCCCCUCAGUCCCCACCUCUGGAUUAACCCGACUAAACGGACGACGACGAUCCUCCUCxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[42.25556564 845.07464600]
[28.34378624 850.78717041]
[13.65133858 853.99707031]
[-1.37528932 854.60662842]
[-16.27945518 852.59741211]
[-30.60823631 848.03045654]
[-43.92620087 841.04449463]
[-55.82862854 831.85192871]
[-65.95381927 820.73205566]
[-73.99407959 808.02282715]
[-79.70507050 794.11035156]
[-82.91324615 779.41754150]
[-83.52111816 764.39086914]
[-81.51020050 749.48693848]
[-76.94161987 735.15869141]
[-69.95419312 721.84149170]
[-60.76027679 709.94012451]
[-49.63925171 699.81616211]
[-36.92907715 691.77734375]
[-23.01600075 686.06793213]
[-8.32282448 682.86145020]
[6.70394135 682.25524902]
[8.70795536 667.38977051]
[10.71196842 652.52423096]
[12.71598244 637.65869141]
[14.71999550 622.79315186]
[16.72401047 607.92761230]
[18.72802353 593.06213379]
[11.64573479 583.25561523]
[13.19365120 570.85449219]
[23.08317184 562.57434082]
[25.30828857 547.74029541]
[27.42291260 532.89013672]
[29.42692566 518.02459717]
[31.43093872 503.15905762]
[33.43495178 488.29354858]
[31.59943962 485.28302002]
[31.13090515 481.23388672]
[32.50162506 476.79830933]
[35.87475204 472.81469727]
[38.54054642 458.05346680]
[41.20634079 443.29226685]
[43.87213898 428.53103638]
[46.53793335 413.76983643]
[31.83753586 403.92022705]
[22.90136909 388.58599854]
[21.57079506 370.83471680]
[28.16026878 354.24114990]
[41.38462067 342.16720581]
[58.60942841 337.08099365]
[60.61344147 322.21545410]
[62.61745834 307.34991455]
[64.62146759 292.48440552]
[51.35815430 285.60183716]
[41.23088455 274.57604980]
[35.47616196 260.72479248]
[34.80637741 245.71237183]
[39.32165146 231.34983826]
[48.49542618 219.37644958]
[61.23581314 211.24905396]
[76.01550293 207.96484375]
[78.01951599 193.09931946]
[72.05195618 179.45242310]
[81.56360626 166.80967712]
[83.56762695 151.94415283]
[85.57164001 137.07862854]
[83.98125458 134.77020264]
[83.20944977 131.69270325]
[83.55371857 128.15478516]
[85.19445801 124.56696320]
[88.16300201 121.39809418]
[91.04827118 106.67819977]
[93.82388306 91.93724060]
[96.48967743 77.17602539]
[99.15547943 62.41480637]
[85.34159088 49.16670609]
[82.32732391 30.41773987]
[91.15198517 13.77279758]
[108.08974457 5.87308836]
[110.09375763 -8.99244022]
[112.09777069 -23.85796738]
[106.27354431 -38.56813431]
[115.64186096 -50.14759827]
[117.64587402 -65.01313019]
[119.31741333 -79.91970062]
[112.84215546 -94.35513306]
[121.68407440 -106.34136200]
[123.02230835 -121.28154755]
[116.54705048 -135.71697998]
[125.38896942 -147.70321655]
[118.91371918 -162.13864136]
[127.75563049 -174.12487793]
[129.09387207 -189.06506348]
[130.43209839 -204.00524902]
[122.29888153 -220.52590942]
[132.94659424 -234.47557068]
[134.06224060 -249.43402100]
[119.86470032 -254.56550598]
[107.57876587 -263.33810425]
[98.11614227 -275.10083008]
[92.17901611 -288.98077393]
[90.20796967 -303.94799805]
[92.34925842 -318.89178467]
[98.44399261 -332.70327759]
[108.03990173 -344.35751343]
[120.42489624 -352.98968506]
[134.67993164 -357.95922852]
[149.74720764 -358.89736938]
[164.50859070 -355.73449707]
[177.86872864 -348.70532227]
[188.83619690 -338.33145142]
[196.59713745 -325.38269043]
[200.57562256 -310.81994629]
[200.47644043 -295.72381592]
[196.30694580 -281.21456909]
[188.37655640 -268.36889648]
[177.27372742 -258.14004517]
[163.82238770 -251.28701782]
[149.02070618 -248.31837463]
[147.90504456 -233.35992432]
[155.55847168 -223.99234009]
[154.75143433 -211.52107239]
[145.37228394 -202.66700745]
[144.03405762 -187.72682190]
[142.69581604 -172.78663635]
[149.26679993 -159.41983032]
[140.32916260 -146.36497498]
[146.90013123 -132.99816895]
[137.96249390 -119.94331360]
[136.62426758 -105.00312805]
[143.19523621 -91.63632202]
[134.25759888 -78.58146667]
[136.22570801 -75.65591431]
[136.87457275 -71.63172913]
[135.70327759 -67.13936615]
[132.51139832 -63.00911331]
[130.50738525 -48.14358521]
[136.47494507 -34.49670029]
[126.96329498 -21.85395432]
[124.95928192 -6.98842621]
[122.95526886 7.87710190]
[132.33346558 13.91862392]
[138.80940247 23.06523323]
[141.41622925 34.01764297]
[139.74009705 45.20242310]
[133.98529053 54.99804688]
[124.95019531 61.96995163]
[113.91669464 65.08060455]
[111.25090027 79.84181976]
[108.58509827 94.60303497]
[110.36550140 102.46450806]
[105.76816559 109.56347656]
[102.88288879 124.28337097]
[100.43716431 139.08264160]
[98.43315125 153.94816589]
[96.42913818 168.81369019]
[102.25335693 183.52386475]
[92.88504791 195.10333252]
[90.88103485 209.96885681]
[104.26343536 217.04957581]
[114.39682007 228.26057434]
[120.07247925 242.23580933]
[120.62327576 257.28131104]
[116.00201416 271.58044434]
[106.78482056 283.41336060]
[94.09938049 291.36373901]
[79.48699951 294.48840332]
[77.48298645 309.35394287]
[75.47897339 324.21945190]
[73.47496033 339.08499146]
[84.47363281 344.87371826]
[93.14896393 353.74005127]
[98.67501831 364.81842041]
[100.53227234 377.03372192]
[98.55642700 389.20562744]
[92.95284271 400.16268921]
[84.27527618 408.85504150]
[73.37123108 414.45489502]
[61.29914856 416.43560791]
[58.63335419 431.19683838]
[55.96755981 445.95803833]
[53.30176544 460.71926880]
[50.63596725 475.48049927]
[48.30047989 490.29754639]
[46.29646683 505.16308594]
[44.29245377 520.02862549]
[42.28844070 534.89416504]
[44.24327850 543.81695557]
[40.14233017 549.96545410]
[37.91721344 564.79949951]
[45.05268478 581.77496338]
[33.59355164 595.06610107]
[31.58953857 609.93164062]
[29.58552361 624.79718018]
[27.58151054 639.66271973]
[25.57749748 654.52825928]
[23.57348251 669.39373779]
[21.56946945 684.25927734]
[35.89928818 688.82299805]
[49.21883392 695.80590820]
[61.12334824 704.99578857]
[71.25106049 716.11334229]
[79.29419708 728.82080078]
[85.00834656 742.73193359]
[88.21985626 757.42401123]
[88.83113861 772.45056152]
[86.82360077 787.35491943]
[82.25827026 801.68426514]
[75.27386475 815.00299072]
[66.08264923 826.90649414]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 198]
[23 197]
[24 196]
[25 195]
[26 194]
[27 193]
[28 192]
[31 190]
[32 189]
[33 187]
[34 186]
[35 185]
[36 184]
[40 183]
[41 182]
[42 181]
[43 180]
[44 179]
[50 170]
[51 169]
[52 168]
[53 167]
[61 159]
[62 158]
[64 156]
[65 155]
[66 154]
[71 153]
[72 152]
[73 150]
[74 149]
[75 148]
[79 141]
[80 140]
[81 139]
[83 137]
[84 136]
[85 132]
[87 130]
[88 129]
[90 127]
[92 125]
[93 124]
[94 123]
[96 120]
[97 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
