%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[78.55862427 638.86169434]
[69.09114075 650.52844238]
[58.09204102 660.76391602]
[45.77543259 669.36901855]
[32.38105774 676.17614746]
[18.16964340 681.05279541]
[3.41781855 683.90405273]
[-11.58726788 684.67449951]
[-26.55353737 683.34899902]
[-41.18966675 679.95343018]
[-55.21076202 674.55389404]
[-68.34389496 667.25549316]
[-80.33342743 658.20025635]
[-90.94598389 647.56445312]
[-99.97497559 635.55517578]
[-107.24465942 622.40606689]
[-112.61353302 608.37322998]
[-115.97707367 593.72973633]
[-117.26982880 578.76055908]
[-116.46662140 563.75720215]
[-113.58309174 549.01165771]
[-108.67536926 534.81091309]
[-101.83897400 521.43145752]
[-93.20699310 509.13372803]
[-82.94744110 498.15701294]
[-71.26002502 488.71508789]
[-58.37224579 480.99163818]
[-44.53496552 475.13708496]
[-30.01753426 471.26535034]
[-15.10253334 469.45184326]
[-0.08029164 469.73178101]
[14.75678062 472.09979248]
[19.15777779 457.75994873]
[23.55877686 443.42010498]
[27.95977402 429.08023071]
[31.82407951 414.58654785]
[35.14633942 399.95907593]
[38.46859741 385.33163452]
[41.79085922 370.70416260]
[45.11311722 356.07672119]
[33.54926300 340.39898682]
[37.30153656 320.97155762]
[54.39128494 310.40652466]
[57.05707932 295.64532471]
[59.72287750 280.88409424]
[62.38867188 266.12289429]
[65.05446625 251.36166382]
[56.37727737 239.31002808]
[58.87049484 224.30207825]
[71.57019043 215.28236389]
[74.23599243 200.52113342]
[76.90178680 185.75991821]
[68.22459412 173.70828247]
[70.71781158 158.70033264]
[83.41751099 149.68061829]
[86.08330536 134.91940308]
[88.74909973 120.15818024]
[91.41490173 105.39696503]
[89.63449860 97.53549194]
[94.23183441 90.43652344]
[97.11711121 75.71662903]
[90.74674988 58.43947983]
[102.78793335 45.67324448]
[105.45372772 30.91202736]
[107.12526703 16.00545311]
[107.79505920 1.02041388]
[108.46484375 -13.96462536]
[109.13462830 -28.94966316]
[100.45076752 -16.71894073]
[87.36223602 -9.39156914]
[72.39622498 -8.38234901]
[58.44243622 -13.88614559]
[48.19512939 -24.84026146]
[43.63289261 -39.12962723]
[45.63662720 -53.99519348]
[53.81944656 -66.56665039]
[66.60137177 -74.41664886]
[81.51441193 -76.02947235]
[95.67909241 -71.09371185]
[106.36044312 -60.56238556]
[111.49621582 -46.46766663]
[114.81848145 -61.09512711]
[118.14073944 -75.72258759]
[121.46299744 -90.35004425]
[113.70579529 -97.67463684]
[109.71919250 -107.48351288]
[110.16042328 -117.98155212]
[114.88291168 -127.27730560]
[122.97477722 -133.72380066]
[132.93412781 -136.21022034]
[136.90621948 -150.67474365]
[140.87832642 -165.13926697]
[144.85041809 -179.60379028]
[148.82250977 -194.06831360]
[135.08462524 -200.16159058]
[122.40837860 -208.23442078]
[111.07698822 -218.10646057]
[101.34358215 -229.55715942]
[93.42561340 -242.33070374]
[87.49997711 -256.14172363]
[83.69905090 -270.68170166]
[82.10774994 -285.62576294]
[82.76161957 -300.64010620]
[85.64605713 -315.38925171]
[90.69662476 -329.54373169]
[97.80048370 -342.78735352]
[106.79893494 -354.82418823]
[117.49095154 -365.38534546]
[129.63766479 -374.23492432]
[142.96772766 -381.17520142]
[157.18331909 -386.05108643]
[171.96687317 -388.75372314]
[186.98812866 -389.22268677]
[201.91146851 -387.44750977]
[216.40353394 -383.46783447]
[230.14056396 -377.37261963]
[242.81564331 -369.29797363]
[254.14564514 -359.42431641]
[263.87741089 -347.97222900]
[271.79354858 -335.19757080]
[277.71722412 -321.38568115]
[281.51608276 -306.84518433]
[283.10525513 -291.90087891]
[282.44924927 -276.88665771]
[279.56271362 -262.13790894]
[274.51013184 -247.98413086]
[267.40438843 -234.74154663]
[258.40420532 -222.70599365]
[247.71069336 -212.14633179]
[235.56271362 -203.29849243]
[222.23167419 -196.36013794]
[208.01538086 -191.48625183]
[193.23144531 -188.78573608]
[178.21012878 -188.31890869]
[163.28703308 -190.09622192]
[159.31494141 -175.63169861]
[155.34284973 -161.16716003]
[151.37074280 -146.70263672]
[147.39865112 -132.23811340]
[158.25093079 -116.05966187]
[153.63491821 -96.81918335]
[136.09045410 -87.02778625]
[132.76820374 -72.40032959]
[129.44593811 -57.77286530]
[126.12368011 -43.14540863]
[124.11966705 -28.27987862]
[123.44988251 -13.29483986]
[122.78009796 1.69019902]
[122.11030579 16.67523766]
[131.94232178 5.34688282]
[146.30783081 1.03038025]
[160.75552368 5.06324530]
[170.80863953 16.19585228]
[173.35209656 30.97863960]
[167.59779358 44.83100128]
[155.32873535 53.46063232]
[140.34666443 54.19354630]
[127.29389954 46.80264282]
[120.21495056 33.57782364]
[117.54914856 48.33903885]
[124.18649292 58.45201492]
[122.08638000 70.77164459]
[111.83699799 78.60190582]
[108.95172882 93.32180023]
[106.17611694 108.06275940]
[103.51032257 122.82397461]
[100.84452057 137.58518982]
[98.17872620 152.34640503]
[106.92127991 165.23847961]
[104.00749969 180.17048645]
[91.66300201 188.42572021]
[88.99720764 203.18693542]
[86.33141327 217.94815063]
[95.07395935 230.84022522]
[92.16018677 245.77223206]
[79.81568146 254.02746582]
[77.14988708 268.78866577]
[74.48409271 283.54989624]
[71.81829834 298.31112671]
[69.15250397 313.07232666]
[77.22902679 320.04324341]
[81.64964294 329.66430664]
[81.67761993 340.17160034]
[77.37491608 349.66894531]
[69.57897186 356.47033691]
[59.74057770 359.39895630]
[56.41831970 374.02642822]
[53.09605789 388.65390015]
[49.77379990 403.28134155]
[46.45154190 417.90881348]
[60.34145737 412.24575806]
[73.50318146 419.44082642]
[76.23438263 434.19006348]
[66.52172089 445.62091064]
[51.52500916 445.30694580]
[42.29962158 433.48123169]
[37.89862442 447.82107544]
[33.49762726 462.16094971]
[29.09662819 476.50079346]
[42.70763397 482.86370850]
[55.30059052 491.05902100]
[66.63037109 500.92727661]
[76.47644043 512.27630615]
[84.64714050 524.88531494]
[90.98342896 538.50872803]
[95.36196136 552.88140869]
[97.69750977 567.72363281]
[97.94461823 582.74645996]
[96.09847260 597.65747070]
[92.19500732 612.16638184]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 199]
[33 198]
[34 197]
[35 196]
[36 190]
[37 189]
[38 188]
[39 187]
[40 186]
[43 180]
[44 179]
[45 178]
[46 177]
[47 176]
[50 173]
[51 172]
[52 171]
[55 168]
[56 167]
[57 166]
[58 165]
[60 164]
[61 163]
[63 160]
[64 159]
[65 149]
[66 148]
[67 147]
[68 146]
[81 145]
[82 144]
[83 143]
[84 142]
[90 139]
[91 138]
[92 137]
[93 136]
[94 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
