%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[260.25003052 562.89691162]
[271.03579712 552.40966797]
[283.56506348 544.08306885]
[277.69610596 530.27886963]
[271.82711792 516.47473145]
[265.95816040 502.67053223]
[252.09185791 497.35443115]
[245.94325256 483.43865967]
[251.61328125 468.93041992]
[245.74432373 455.12625122]
[239.87536621 441.32208252]
[227.77516174 432.63677979]
[229.49612427 416.90942383]
[223.62716675 403.10525513]
[217.75820923 389.30108643]
[211.88923645 375.49691772]
[206.02027893 361.69271851]
[200.15132141 347.88854980]
[194.28236389 334.08438110]
[188.41340637 320.28021240]
[182.54443359 306.47601318]
[177.03445435 301.55038452]
[176.69255066 292.42236328]
[171.02976990 278.53234863]
[158.80911255 279.09271240]
[146.98225403 275.87054443]
[136.69374084 269.16210938]
[128.94398499 259.60183716]
[124.49205017 248.10226440]
[123.78125763 235.76704407]
[126.89512634 223.78492737]
[133.54786682 213.31524658]
[143.11053467 205.37574768]
[138.07362366 191.24671936]
[133.03669739 177.11769104]
[127.99978638 162.98866272]
[121.52028656 149.46032715]
[113.66853333 136.67947388]
[105.81678009 123.89863586]
[97.96502686 111.11779022]
[95.46114349 125.90733337]
[84.82337952 136.48268127]
[70.01935577 138.89949036]
[56.57061386 132.25636292]
[49.49319458 119.03099823]
[51.42679977 104.15615082]
[61.65024948 93.17976379]
[76.35044098 90.19575500]
[90.04544830 96.31787109]
[83.76808167 82.69455719]
[77.49072266 69.07123566]
[71.21336365 55.44792175]
[58.41093826 46.15230179]
[60.11187363 31.35513878]
[53.83451462 17.73182106]
[47.45590591 4.15561485]
[40.92654419 -2.23228216]
[40.98233032 -9.62272739]
[34.70497131 -23.24604416]
[31.16346359 -8.67011356]
[20.37752914 1.75407052]
[5.68930769 4.79646301]
[-8.34989548 -0.48565489]
[-17.38988113 -12.45556164]
[-18.62951088 -27.40425110]
[-11.68467140 -40.69971085]
[1.29270196 -48.22219467]
[16.28142929 -47.64078140]
[28.63725471 -39.13542938]
[24.23625565 -53.47527695]
[10.46801662 -65.70299530]
[15.06155300 -82.64012146]
[10.44754410 -96.91285706]
[-1.15955925 -107.66394043]
[2.28768563 -122.15412903]
[-2.32632351 -136.42686462]
[-6.94033289 -150.69960022]
[-11.55434227 -164.97233582]
[-16.16835213 -179.24507141]
[-31.10198593 -177.40576172]
[-46.11382294 -178.42617798]
[-60.66119385 -182.26942444]
[-74.21822357 -188.79655457]
[-86.29482269 -197.77165222]
[-96.45443726 -208.87023926]
[-104.32981110 -221.69111633]
[-109.63623810 -235.77082825]
[-112.18190765 -250.60040283]
[-111.87479401 -265.64373779]
[-108.72599030 -280.35705566]
[-102.84933472 -294.20846558]
[-94.45725250 -306.69723511]
[-83.85312653 -317.37191772]
[-71.42027283 -325.84661865]
[-57.60814667 -331.81500244]
[-42.91604233 -335.06130981]
[-27.87506485 -335.46820068]
[-13.02894211 -333.02090454]
[1.08565009 -327.80798340]
[13.95847702 -320.01779175]
[25.12419510 -309.93200684]
[34.17916870 -297.91519165]
[40.79607010 -284.40173340]
[44.73569870 -269.88018799]
[45.85564041 -254.87544250]
[44.11540985 -239.92993164]
[39.57791901 -225.58393860]
[32.40718842 -212.35604858]
[22.86244011 -200.72444153]
[11.28871059 -191.10958862]
[-1.89561796 -183.85906982]
[2.71839118 -169.58634949]
[7.33240032 -155.31361389]
[11.94641018 -141.04087830]
[16.56041908 -126.76814270]
[27.83749771 -117.03794098]
[24.72027779 -101.52686310]
[29.33428574 -87.25413513]
[39.95781326 -81.46904755]
[43.91863251 -69.61595917]
[38.57610321 -57.87627411]
[42.97710037 -43.53642654]
[48.32828903 -29.52340508]
[54.60564804 -15.90008831]
[60.98425293 -2.32388091]
[66.70868683 2.35080266]
[67.45783234 11.45446110]
[73.73519135 25.07777786]
[86.08861542 33.39896393]
[84.83667755 49.17056274]
[91.11403656 62.79387665]
[97.39140320 76.41719055]
[103.66876221 90.04051208]
[110.74586487 103.26603699]
[118.59761810 116.04688263]
[126.44937897 128.82772827]
[134.30113220 141.60856628]
[134.02986145 126.61101532]
[139.44696045 112.62334442]
[149.74884033 101.72052765]
[163.40727234 95.51994324]
[178.39610291 94.94141388]
[192.49185181 100.07074738]
[203.60346985 110.14704132]
[210.08264160 123.67554474]
[210.96820068 138.64938354]
[206.12878418 152.84727478]
[196.28228760 164.16304016]
[182.88938904 170.91806030]
[167.93684387 172.11027527]
[153.64277649 167.56280518]
[142.12881470 157.95175171]
[147.16572571 172.08078003]
[152.20265198 186.20980835]
[157.23956299 200.33883667]
[175.14407349 201.75045776]
[190.58073425 210.82637024]
[200.46145630 225.69712830]
[202.83316040 243.33949280]
[197.26370239 260.19107056]
[184.91979980 272.86953735]
[190.58258057 286.75958252]
[196.34861755 300.60705566]
[202.21757507 314.41122437]
[208.08653259 328.21542358]
[213.95549011 342.01959229]
[219.82446289 355.82376099]
[225.69342041 369.62796021]
[231.56237793 383.43212891]
[237.43133545 397.23629761]
[243.30030823 411.04046631]
[255.82028198 420.71316528]
[253.67953491 435.45312500]
[259.54849243 449.25729370]
[265.41744995 463.06146240]
[279.79946899 469.04440308]
[285.55477905 483.12741089]
[279.76235962 496.80157471]
[285.63131714 510.60574341]
[291.50027466 524.40991211]
[297.36923218 538.21411133]
[312.05868530 534.96844482]
[327.09442139 534.47741699]
[341.96435547 536.75787354]
[356.16195679 541.73199463]
[369.20373535 549.23046875]
[380.64544678 558.99786377]
[390.09738159 570.70147705]
[397.23767090 583.94274902]
[401.82305908 598.27069092]
[403.69738770 613.19720459]
[402.79681396 628.21398926]
[399.15200806 642.80957031]
[392.88714600 656.48675537]
[384.21557617 668.77978516]
[373.43264771 679.26989746]
[360.90560913 687.59991455]
[347.06115723 693.48596191]
[332.37081909 696.72766113]
[317.33496094 697.21459961]
[302.46566772 694.93023682]
[288.26937866 689.95220947]
[275.22964478 682.45025635]
[263.79055786 672.67974854]
[254.34176636 660.97357178]
[247.20506287 647.73040771]
[242.62353516 633.40124512]
[240.75323486 618.47418213]
[241.65785217 603.45764160]
[245.30657959 588.86309814]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 181]
[4 180]
[5 179]
[6 178]
[9 175]
[10 174]
[11 173]
[13 171]
[14 170]
[15 169]
[16 168]
[17 167]
[18 166]
[19 165]
[20 164]
[21 163]
[23 162]
[24 161]
[33 155]
[34 154]
[35 153]
[36 152]
[37 137]
[38 136]
[39 135]
[40 134]
[49 133]
[50 132]
[51 131]
[52 130]
[54 128]
[55 127]
[56 125]
[58 124]
[59 123]
[69 122]
[70 121]
[72 118]
[73 117]
[75 115]
[76 114]
[77 113]
[78 112]
[79 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
