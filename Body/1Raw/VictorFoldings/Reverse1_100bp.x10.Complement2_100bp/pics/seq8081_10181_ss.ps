%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[137.02914429 691.12103271]
[123.41398621 684.81634521]
[110.17732239 677.75152588]
[97.36154938 669.94915771]
[85.00773621 661.43420410]
[73.15543365 652.23394775]
[61.84262466 642.37792969]
[51.10554123 631.89764404]
[40.97857666 620.82672119]
[31.49417686 609.20056152]
[22.68271637 597.05645752]
[14.57242489 584.43328857]
[7.18928146 571.37145996]
[0.55693632 557.91290283]
[-5.30336475 544.10064697]
[-10.37284851 529.97900391]
[-14.63527775 515.59313965]
[-18.07699776 500.98916626]
[-20.68698120 486.21389771]
[-22.45687103 471.31460571]
[-23.38099670 456.33905029]
[-23.45639610 441.33520508]
[-22.68283081 426.35110474]
[-21.06277657 411.43478394]
[-18.60142326 396.63400269]
[-15.30665493 381.99618530]
[-11.18902683 367.56823730]
[-6.26172876 353.39633179]
[-0.54054445 339.52587891]
[5.95619965 326.00131226]
[13.20769215 312.86599731]
[21.19070435 300.16192627]
[29.87966537 287.92987061]
[39.24673843 276.20901489]
[49.26192093 265.03683472]
[59.89313126 254.44917297]
[71.10630798 244.47993469]
[82.86553955 235.16104126]
[95.13315582 226.52235413]
[107.86985779 218.59155273]
[121.03485107 211.39404297]
[134.58595276 204.95286560]
[128.92317200 191.06283569]
[116.95362854 182.19833374]
[118.90854645 166.49836731]
[113.24576569 152.60835266]
[107.58297729 138.71832275]
[101.92018890 124.82829285]
[96.25740051 110.93826294]
[93.10208130 125.60264587]
[83.56436920 137.17985535]
[69.77500153 143.08354187]
[54.81456757 141.99476624]
[42.02526093 134.15679932]
[34.26425171 121.32065582]
[33.26536560 106.35395050]
[39.25175858 92.60029602]
[50.88605118 83.13228607]
[65.56911469 80.06510162]
[80.02071381 84.08395386]
[91.01234436 94.29105377]
[87.69007874 79.66358948]
[84.36782074 65.03613281]
[81.04556274 50.40867233]
[77.72330475 35.78121185]
[73.51918030 30.67857933]
[72.65309143 25.06191444]
[74.52676392 20.66892052]
[71.64148712 5.94902992]
[68.75621796 -8.77086163]
[65.87094116 -23.49075317]
[50.90768051 -22.24019814]
[35.89765930 -22.64334488]
[21.02309608 -24.69530106]
[6.46454954 -28.37115479]
[-7.60125208 -33.62628555]
[-21.00356293 -40.39690399]
[-33.57968903 -48.60081863]
[-45.17697144 -58.13844299]
[-55.65462875 -68.89399719]
[-64.88546753 -80.73691559]
[-72.75743866 -93.52344513]
[-79.17498779 -107.09835815]
[-84.06019592 -121.29687500]
[-87.35378265 -135.94664001]
[-89.01574707 -150.86981201]
[-89.02592468 -165.88523865]
[-87.38419342 -180.81065369]
[-84.11047363 -195.46485901]
[-79.24451447 -209.66998291]
[-72.84538269 -223.25358582]
[-64.99075317 -236.05078125]
[-55.77597809 -247.90620422]
[-45.31291580 -258.67596436]
[-33.72857666 -268.22927856]
[-21.16358185 -276.45025635]
[-7.77046394 -283.23901367]
[6.28819990 -288.51321411]
[20.84174919 -292.20880127]
[35.71352005 -294.28094482]
[50.72297668 -294.70443726]
[65.68792725 -293.47415161]
[80.42669678 -290.60507202]
[94.76038361 -286.13195801]
[108.51498413 -280.10916138]
[121.52353668 -272.60977173]
[133.62811279 -263.72482300]
[144.68179321 -253.56219482]
[154.55038452 -242.24520874]
[163.11410522 -229.91127014]
[170.26898193 -216.71009827]
[175.92816162 -202.80194092]
[180.02296448 -188.35563660]
[182.50366211 -173.54653931]
[183.34016418 -158.55442810]
[182.52229309 -143.56127930]
[180.05998230 -128.74911499]
[175.98313904 -114.29773712]
[170.34124756 -100.38256073]
[163.20277405 -87.17250824]
[154.65438843 -74.82794189]
[144.79986572 -63.49870682]
[133.75881958 -53.32233429]
[121.66528320 -44.42235947]
[108.66606140 -36.90681076]
[94.91895294 -30.86692810]
[80.59083557 -26.37602615]
[83.47611237 -11.65613365]
[86.36138153 3.06375742]
[89.24665070 17.78364944]
[92.35076141 32.45895004]
[95.67302704 47.08641052]
[98.99528503 61.71387100]
[102.31754303 76.34133148]
[105.63980103 90.96878815]
[110.14743042 105.27548218]
[115.81021881 119.16550446]
[121.47300720 133.05552673]
[127.13578796 146.94555664]
[132.79858398 160.83558655]
[145.17315674 170.69358826]
[142.81318665 185.40005493]
[148.47598267 199.29006958]
[162.66792297 194.42077637]
[177.11260986 190.36216736]
[191.76377869 187.12728882]
[206.57449341 184.72648621]
[221.49731445 183.16743469]
[236.48443604 182.45515442]
[251.48785400 182.59190369]
[266.45950317 183.57725525]
[281.35140991 185.40806580]
[296.11590576 188.07844543]
[310.70568848 191.57984924]
[325.07400513 195.90107727]
[339.17480469 201.02825928]
[352.96298218 206.94499207]
[366.39431763 213.63232422]
[379.42581177 221.06881714]
[392.01571655 229.23065186]
[404.12368774 238.09170532]
[415.71093750 247.62356567]
[426.74038696 257.79571533]
[437.17666626 268.57556152]
[446.98638916 279.92858887]
[456.13806152 291.81838989]
[464.60241699 304.20693970]
[472.35232544 317.05450439]
[479.36300659 330.31994629]
[485.61190796 343.96078491]
[491.07910156 357.93328857]
[495.74703979 372.19271851]
[499.60076904 386.69342041]
[502.62796021 401.38888550]
[504.81887817 416.23211670]
[506.16653442 431.17550659]
[506.66662598 446.17120361]
[506.31750488 461.17120361]
[505.12033081 476.12738037]
[503.07891846 490.99191284]
[500.19982910 505.71713257]
[496.49224854 520.25585938]
[491.96807861 534.56158447]
[486.64181519 548.58837891]
[480.53051758 562.29144287]
[473.65374756 575.62677002]
[466.03353882 588.55169678]
[457.69430542 601.02478027]
[448.66275024 613.00616455]
[438.96783447 624.45733643]
[428.64059448 635.34167480]
[417.71408081 645.62432861]
[406.22335815 655.27233887]
[394.20520020 664.25482178]
[381.69808960 672.54296875]
[368.74209595 680.11029053]
[355.37875366 686.93243408]
[341.65084839 692.98767090]
[327.60235596 698.25653076]
[313.27825928 702.72216797]
[298.72448730 706.37023926]
[283.98760986 709.18914795]
[269.11486816 711.16973877]
[254.15391541 712.30572510]
[239.15263367 712.59350586]
[224.15910339 712.03210449]
[209.22134399 710.62335205]
[194.38720703 708.37176514]
[179.70422363 705.28448486]
[165.21940613 701.37152100]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 143]
[43 142]
[45 140]
[46 139]
[47 138]
[48 137]
[49 136]
[61 135]
[62 134]
[63 133]
[64 132]
[65 131]
[68 130]
[69 129]
[70 128]
[71 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
