%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCACCUCAUCCCGACUCUGACCCCACCCCGGAAGAUACCGACUCCCCUCAGUCCCCACCUCUGGAUUAACCCGACUAAACGGACGACGACGAUCCUCCUCxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[236.38293457 441.54861450]
[230.92756653 427.57583618]
[225.47221375 413.60302734]
[220.01686096 399.63021851]
[206.31497192 393.90362549]
[200.58341980 379.81094360]
[206.68289185 365.47796631]
[201.22753906 351.50515747]
[195.86665344 346.41766357]
[195.79667664 337.28350830]
[190.54995728 323.23104858]
[185.30323792 309.17855835]
[180.05651855 295.12609863]
[174.49729919 281.19430542]
[168.62834167 267.39010620]
[162.75938416 253.58593750]
[156.78781128 239.82583618]
[150.71398926 226.11058044]
[134.78067017 220.72834778]
[127.52710724 205.18162537]
[133.88442993 188.88426208]
[127.60707092 175.26095581]
[121.22846985 161.68473816]
[114.74897003 148.15640259]
[108.26947784 134.62805176]
[95.79352570 126.49170685]
[96.81050873 110.70322418]
[90.23048401 97.22348785]
[83.55028534 83.79311371]
[76.87009430 70.36273193]
[64.91309357 65.52610779]
[59.62563705 54.20238876]
[63.34805298 42.69282150]
[56.86855698 29.16447449]
[50.38906097 15.63612938]
[47.06496048 30.26317215]
[36.43542480 40.84678650]
[21.79412651 44.10752869]
[7.67783642 39.03501892]
[-1.53936124 27.20103073]
[-3.00141716 12.27245426]
[3.74470234 -1.12492883]
[16.60863876 -8.83979321]
[31.60436058 -8.48160553]
[44.08544922 -0.16115549]
[39.47143936 -14.43388844]
[34.75130463 -28.67187881]
[29.92530823 -42.87433243]
[25.09930992 -57.07678986]
[20.27331161 -71.27924347]
[14.54929352 -78.39777374]
[15.48290062 -85.72922516]
[10.86889076 -100.00195312]
[8.69016457 -85.16102600]
[3.19182372 -71.20508575]
[-5.33770084 -58.86623764]
[-16.45096588 -48.79174805]
[-29.56499481 -41.51010895]
[-43.99184799 -37.40329742]
[-58.97472382 -36.68675232]
[-73.72764587 -39.39805603]
[-87.47671509 -45.39498520]
[-99.50067902 -54.36294937]
[-109.16877747 -65.83150482]
[-115.97384644 -79.19904327]
[-119.55890656 -93.76432037]
[-119.73589325 -108.76327515]
[-116.49552155 -123.40909576]
[-110.00777435 -136.93348694]
[-100.61298370 -148.62698364]
[-88.80398560 -157.87617493]
[-75.20024872 -164.19586182]
[-60.51541138 -167.25453186]
[-45.51979828 -166.89172363]
[-31.00005531 -163.12648010]
[-17.71785927 -156.15631104]
[-6.36996412 -146.34686279]
[2.44833946 -134.21272278]
[8.27492619 -120.38881683]
[9.16774273 -135.36222839]
[10.06055832 -150.33563232]
[3.15837669 -164.57186890]
[11.63949966 -176.81604004]
[12.53231525 -191.78944397]
[-0.24837196 -183.93743896]
[-14.40711403 -188.89021301]
[-19.50661278 -202.99678040]
[-11.78770638 -215.85829163]
[3.05951309 -217.99372864]
[14.08961201 -207.83045959]
[16.09362602 -222.69598389]
[18.09763908 -237.56150818]
[20.10165215 -252.42703247]
[22.10566711 -267.29257202]
[24.10968018 -282.15808105]
[26.11369324 -297.02362061]
[11.96774387 -302.19143677]
[-0.73631424 -310.27975464]
[-11.40428829 -320.91027832]
[-19.53721809 -333.58584595]
[-24.75471306 -347.71353149]
[-26.81273842 -362.63259888]
[-25.61503792 -377.64523315]
[-21.21763229 -392.04931641]
[-13.82619381 -405.17108154]
[-3.78643346 -416.39682007]
[8.43206978 -425.20147705]
[22.25783539 -431.17327881]
[37.04420471 -434.03286743]
[52.09959793 -433.64654541]
[66.71984100 -430.03231812]
[80.22112274 -423.35928345]
[91.97196198 -413.93951416]
[101.42275238 -402.21362305]
[108.13145447 -388.73004150]
[111.78430939 -374.11938477]
[112.21044159 -359.06506348]
[109.38994598 -344.27117920]
[103.45471954 -330.42968750]
[94.68238068 -318.18795776]
[83.48321533 -308.11856079]
[70.38103485 -300.69244385]
[55.98865128 -296.25698853]
[40.97922134 -295.01962280]
[38.97520828 -280.15408325]
[36.97119522 -265.28854370]
[34.96718216 -250.42301941]
[32.96316910 -235.55749512]
[30.95915413 -220.69197083]
[28.95514107 -205.82643127]
[27.50572205 -190.89663696]
[26.61290550 -175.92321777]
[33.57894897 -162.75798035]
[25.03396416 -149.44281006]
[24.14114761 -134.46940613]
[23.24833298 -119.49600220]
[25.14162445 -104.61596680]
[29.75563431 -90.34323120]
[34.47576904 -76.10523987]
[39.30176544 -61.90278625]
[44.12776184 -47.70033264]
[48.95376205 -33.49787521]
[54.08213425 -28.17607498]
[53.74417496 -19.04789734]
[58.35818100 -4.77516460]
[63.91740799 9.15663338]
[70.39690399 22.68497849]
[76.87639618 36.21332550]
[91.86831665 45.33524323]
[90.30046844 63.68254089]
[96.98066711 77.11291504]
[103.66085815 90.54328918]
[109.78495026 95.78429413]
[110.33885956 104.22372437]
[123.27825928 113.32770538]
[121.79782104 128.14855957]
[128.27731323 141.67689514]
[134.75680542 155.20524597]
[141.28617859 161.59313965]
[141.23039246 168.98358154]
[147.50775146 182.60690308]
[160.59631348 185.78556824]
[169.33680725 195.77629089]
[170.70690918 208.78416443]
[164.42924500 220.03674316]
[170.50308228 233.75201416]
[176.83935547 240.33148193]
[176.56355286 247.71697998]
[182.43251038 261.52114868]
[188.30148315 275.32534790]
[192.47312927 278.46292114]
[194.79222107 282.48474121]
[195.23214722 286.53707886]
[194.10899353 289.87936401]
[199.35571289 303.93185425]
[204.60243225 317.98431396]
[209.84915161 332.03680420]
[215.20033264 346.04980469]
[220.65570068 360.02261353]
[234.85319519 366.43109131]
[240.18666077 380.67919922]
[233.98965454 394.17486572]
[239.44500732 408.14767456]
[244.90037537 422.12045288]
[250.35572815 436.09326172]
[265.25521851 433.86767578]
[280.27633667 435.01385498]
[294.66561890 439.47430420]
[307.70135498 447.02529907]
[318.72964478 457.28808594]
[327.19732666 469.74786377]
[332.67962646 483.77969360]
[334.90161133 498.67971802]
[333.75180054 513.70056152]
[329.28784180 528.08874512]
[321.73370361 541.12268066]
[311.46826172 552.14849854]
[299.00640869 560.61309814]
[284.97326660 566.09204102]
[270.07272339 568.31042480]
[255.05215454 567.15692139]
[240.66500854 562.68951416]
[227.63293457 555.13220215]
[216.60961914 544.86407471]
[208.14799500 532.40020752]
[202.67247009 518.36572266]
[200.45771790 503.46463013]
[201.61482239 488.44433594]
[206.08572388 474.05828857]
[213.64619446 461.02804565]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 185]
[2 184]
[3 183]
[4 182]
[7 179]
[8 178]
[10 177]
[11 176]
[12 175]
[13 174]
[14 170]
[15 169]
[16 168]
[17 166]
[18 165]
[21 161]
[22 160]
[23 158]
[24 157]
[25 156]
[27 154]
[28 152]
[29 151]
[30 150]
[33 148]
[34 147]
[35 146]
[45 145]
[46 144]
[47 142]
[48 141]
[49 140]
[50 139]
[52 138]
[53 137]
[79 136]
[80 135]
[81 134]
[83 132]
[84 131]
[90 130]
[91 129]
[92 128]
[93 127]
[94 126]
[95 125]
[96 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
