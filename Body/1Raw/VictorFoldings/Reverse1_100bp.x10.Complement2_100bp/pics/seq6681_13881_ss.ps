%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[149.53115845 478.46728516]
[152.57257080 463.75988770]
[157.36462402 449.52633667]
[163.83744812 435.97424316]
[171.89663696 423.30114746]
[181.42466736 411.69192505]
[192.28259277 401.31585693]
[204.31207275 392.32424927]
[196.84432983 379.31530762]
[189.37658691 366.30636597]
[181.90884399 353.29739380]
[174.44110107 340.28845215]
[166.97337341 327.27951050]
[162.01985168 341.43798828]
[148.56604004 348.07086182]
[134.31887817 343.37847900]
[127.43978882 330.04888916]
[131.86941528 315.71786499]
[145.07029724 308.59487915]
[159.47958374 312.75970459]
[153.20222473 299.13638306]
[146.92486572 285.51306152]
[140.64750671 271.88973999]
[134.37014771 258.26641846]
[131.79010010 257.17028809]
[129.48880005 254.98612976]
[127.88281250 251.81497192]
[127.34451294 247.90667725]
[128.15170288 243.64024353]
[122.69635010 229.66744995]
[117.24098969 215.69465637]
[111.78562927 201.72184753]
[106.33027649 187.74905396]
[100.87491608 173.77626038]
[99.36791229 188.70036316]
[93.77075195 202.61695862]
[84.52484894 214.42854309]
[72.35938263 223.20358276]
[58.23376083 228.25004578]
[43.26199341 229.16995239]
[28.62482071 225.89076233]
[15.47658634 218.67106628]
[4.85421562 208.08026123]
[-2.40456557 194.95356750]
[-5.72730017 180.32621765]
[-4.85194349 165.35177612]
[0.15247031 151.21119690]
[8.89127254 139.01968384]
[20.67528343 129.73867798]
[34.57516861 124.10012817]
[49.49472427 122.54872131]
[64.25733185 125.20680237]
[77.69875336 131.86474609]
[88.75893402 141.99748230]
[96.56700134 154.80908203]
[95.45135498 139.85063171]
[94.33570862 124.89218140]
[93.22005463 109.93373108]
[91.88182068 94.99354553]
[90.32130432 80.07493591]
[88.76078033 65.15633392]
[78.24486542 59.61086273]
[71.77780151 49.77836609]
[70.86952209 38.16505432]
[75.63034821 27.66504288]
[84.77217102 20.83911705]
[83.65652466 5.88066292]
[82.54087067 -9.07779026]
[81.42522430 -24.03624344]
[80.30957794 -38.99469757]
[74.55491638 -25.14248085]
[65.31984711 -13.32243252]
[53.27106476 -4.38785172]
[39.27836990 1.01626623]
[24.35190964 2.49979401]
[9.56924343 -0.04436610]
[-4.00246000 -6.43254852]
[-15.38344574 -16.20358467]
[-23.75211143 -28.65209770]
[-28.50431633 -42.87941360]
[-29.29699326 -57.85845566]
[-26.07291794 -72.50786591]
[-19.06484222 -85.77010345]
[-8.77868176 -96.68774414]
[4.04299545 -104.47264099]
[18.47458076 -108.56278992]
[33.47424698 -108.66292572]
[47.95915222 -104.76581573]
[60.88362503 -97.15280151]
[71.31462860 -86.37345886]
[78.49914551 -73.20597076]
[81.91863251 -58.59975052]
[85.45830536 -73.17612457]
[88.99797058 -87.75250244]
[92.53764343 -102.32888031]
[96.07731628 -116.90525055]
[98.08132935 -131.77078247]
[98.52793884 -146.76412964]
[98.97454834 -161.75747681]
[99.42115021 -176.75082397]
[85.84918213 -183.73397827]
[76.65798187 -195.91940308]
[73.67248535 -210.88769531]
[77.48545074 -225.66687012]
[87.33981323 -237.32252502]
[101.27899170 -243.54040527]
[116.53533936 -243.08596802]
[130.07971191 -236.04942322]
[139.22283936 -223.82789612]
[142.14938354 -208.84797668]
[138.27824402 -194.08392334]
[128.37805176 -182.46717834]
[114.41449738 -176.30422974]
[113.96789551 -161.31088257]
[113.52128601 -146.31752014]
[113.07468414 -131.32417297]
[121.07534027 -144.01234436]
[133.27799988 -152.73559570]
[147.87246704 -156.19987488]
[162.69375610 -153.89131165]
[175.54319763 -146.15232849]
[184.51466370 -134.13098145]
[188.27729797 -119.61056519]
[186.27291870 -104.74508667]
[178.79887390 -91.73975372]
[166.96389771 -82.52383423]
[152.52362061 -78.46445465]
[137.62019348 -80.16379547]
[124.46443176 -87.36977386]
[115.00793457 -99.01342773]
[110.65369415 -113.36557770]
[107.11402130 -98.78920746]
[103.57434845 -84.21282959]
[100.03467560 -69.63645172]
[96.49500275 -55.06007767]
[95.26802826 -40.11034775]
[96.38367462 -25.15189171]
[97.49932861 -10.19343948]
[98.61497498 4.76501417]
[99.73062134 19.72346687]
[114.29582977 30.81266785]
[116.16199493 49.34453964]
[103.67938232 63.59580994]
[105.23990631 78.51441956]
[106.80043030 93.43302155]
[110.02164459 97.57279205]
[110.69412231 103.22267151]
[108.17851257 108.81807709]
[109.29415894 123.77653503]
[110.40980530 138.73498535]
[111.52545929 153.69343567]
[114.84771729 168.32090759]
[120.30307007 182.29370117]
[125.75843048 196.26649475]
[131.21379089 210.23928833]
[136.66914368 224.21209717]
[142.12449646 238.18489075]
[147.99346924 251.98905945]
[154.27082825 265.61239624]
[160.54818726 279.23568726]
[166.82554626 292.85900879]
[173.10290527 306.48233032]
[179.98231506 319.81176758]
[187.45005798 332.82070923]
[194.91780090 345.82965088]
[202.38554382 358.83862305]
[209.85328674 371.84756470]
[217.32102966 384.85653687]
[231.15194702 379.00305176]
[245.58758545 374.85943604]
[260.41744995 372.48611450]
[275.42526245 371.91766357]
[290.39215088 373.16238403]
[305.09988403 376.20214844]
[319.33395386 380.99261475]
[332.88677979 387.46389771]
[345.56076050 395.52166748]
[357.17105103 405.04840088]
[367.54833984 415.90515137]
[376.54129028 427.93362427]
[384.01876831 440.95840454]
[389.87173462 454.78955078]
[394.01480103 469.22534180]
[396.38757324 484.05529785]
[396.95544434 499.06311035]
[395.71017456 514.02996826]
[392.66986084 528.73760986]
[387.87887573 542.97149658]
[381.40707397 556.52410889]
[373.34881592 569.19775391]
[363.82165527 580.80767822]
[352.96450806 591.18457031]
[340.93569946 600.17706299]
[327.91064453 607.65405273]
[314.07928467 613.50646973]
[299.64334106 617.64904785]
[284.81329346 620.02124023]
[269.80545044 620.58856201]
[254.83865356 619.34271240]
[240.13114929 616.30187988]
[225.89743042 611.51031494]
[212.34507751 605.03802490]
[199.67169189 596.97930908]
[188.06211853 587.45172119]
[177.68563843 576.59417725]
[168.69358826 564.56506348]
[161.21710205 551.53973389]
[155.36517334 537.70812988]
[151.22319031 523.27203369]
[148.85151672 508.44189453]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 168]
[9 167]
[10 166]
[11 165]
[12 164]
[13 163]
[20 162]
[21 161]
[22 160]
[23 159]
[24 158]
[29 157]
[30 156]
[31 155]
[32 154]
[33 153]
[34 152]
[55 151]
[56 150]
[57 149]
[58 148]
[59 145]
[60 144]
[61 143]
[66 140]
[67 139]
[68 138]
[69 137]
[70 136]
[92 135]
[93 134]
[94 133]
[95 132]
[96 131]
[97 116]
[98 115]
[99 114]
[100 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
