%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxGGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUU\
) } def
/len { sequence length } bind def

/coor [
[129.77952576 675.95568848]
[118.81026459 665.70269775]
[109.01387787 654.32391357]
[100.50520325 641.95257568]
[93.38400269 628.73382568]
[87.73377991 614.82257080]
[83.62076569 600.38201904]
[81.09320068 585.58135986]
[80.18070221 570.59423828]
[80.89398193 555.59625244]
[83.22467041 540.76336670]
[87.14543915 526.26940918]
[92.61032867 512.28430176]
[99.55525208 498.97210693]
[107.89879608 486.48883057]
[117.54312897 474.98080444]
[128.37518311 464.58303833]
[140.26795959 455.41738892]
[153.08200073 447.59130859]
[166.66709900 441.19659424]
[180.86395264 436.30816650]
[177.54168701 421.68072510]
[174.21943665 407.05325317]
[170.78837585 392.45092773]
[167.24870300 377.87457275]
[163.70903015 363.29818726]
[160.16935730 348.72180176]
[156.62968445 334.14544678]
[139.92877197 333.66635132]
[124.01973724 328.51828003]
[110.18196869 319.10729980]
[99.53051758 306.18258667]
[92.92624664 290.77688599]
[90.90623474 274.12384033]
[93.64012909 257.55935669]
[100.91592407 242.41436768]
[112.15638733 229.90785217]
[126.46481323 221.04881287]
[122.27780151 206.64503479]
[118.09078979 192.24124146]
[113.90377808 177.83746338]
[101.85422516 173.27262878]
[94.52455139 162.43943787]
[94.77629089 149.16738892]
[102.74155426 138.30603027]
[98.76945496 123.84150696]
[85.04106903 118.60543060]
[76.97899628 106.32178497]
[77.63706970 91.64350891]
[86.76602173 80.13059235]
[82.79392242 65.66606903]
[78.82183075 51.20154190]
[74.84973145 36.73701859]
[70.87763214 22.27249527]
[66.90554047 7.80797052]
[50.87709808 5.01101446]
[37.72008896 -4.46193886]
[30.03892326 -18.67319870]
[29.32673454 -34.75350952]
[35.67540741 -49.48130798]
[47.76731873 -59.92814255]
[43.58030701 -74.33192444]
[39.39329529 -88.73570251]
[35.20628357 -103.13948822]
[30.91216087 -117.51170349]
[26.51116180 -131.85154724]
[22.11016464 -146.19139099]
[17.70916748 -160.53123474]
[13.30816841 -174.87109375]
[8.90717030 -189.21093750]
[2.77947116 -175.51965332]
[-10.16762257 -167.94517517]
[-25.10516548 -169.31259155]
[-36.46182251 -179.11189270]
[-40.00184250 -193.68818665]
[-34.40488434 -207.60485840]
[-21.75847435 -215.67135620]
[-6.77941370 -214.87905884]
[4.94612789 -205.52252197]
[2.28033257 -220.28373718]
[-7.78636122 -232.48915100]
[-2.43411684 -246.38888550]
[-5.09991217 -261.15011597]
[-7.76570797 -275.91131592]
[-10.43150330 -290.67254639]
[-13.09729862 -305.43374634]
[-15.76309395 -320.19497681]
[-18.42889023 -334.95620728]
[-33.46615219 -336.19842529]
[-47.66919327 -341.29116821]
[-60.06962585 -349.88717651]
[-69.82196808 -361.40042114]
[-76.26128387 -375.04583740]
[-78.94853973 -389.89309692]
[-77.70050812 -404.92987061]
[-72.60227966 -419.13095093]
[-64.00146484 -431.52807617]
[-52.48448181 -441.27597046]
[-38.83657455 -447.71002197]
[-23.98827934 -450.39154053]
[-8.95197964 -449.13769531]
[5.24712467 -444.03396606]
[17.64091492 -435.42837524]
[27.38436317 -423.90762329]
[33.81314468 -410.25723267]
[36.48892975 -395.40789795]
[35.22928619 -380.37210083]
[30.12009621 -366.17495728]
[21.50971031 -353.78448486]
[9.98520088 -344.04550171]
[-3.66767263 -337.62197876]
[-1.00187707 -322.86077881]
[1.66391838 -308.09954834]
[4.32971382 -293.33834839]
[6.99550915 -278.57711792]
[9.66130447 -263.81588745]
[12.32710075 -249.05468750]
[22.20311928 -237.90509033]
[17.04154968 -222.94952393]
[19.70734596 -208.18830872]
[23.24701691 -193.61193848]
[27.64801598 -179.27209473]
[32.04901505 -164.93223572]
[36.45001221 -150.59239197]
[40.85100937 -136.25254822]
[45.25200653 -121.91269684]
[50.21965790 -116.44056702]
[49.61006546 -107.32649994]
[53.79707718 -92.92271423]
[57.98408890 -78.51893616]
[62.17110062 -64.11515045]
[75.95002747 -62.49980164]
[88.11093903 -55.73339844]
[96.80172729 -44.80867767]
[100.68443298 -31.35449028]
[99.14112091 -17.39298248]
[92.37198639 -5.03567600]
[81.37006378 3.83587432]
[85.34216309 18.30039787]
[89.31425476 32.76492310]
[93.28635406 47.22944641]
[97.25844574 61.69396973]
[101.23054504 76.15849304]
[114.95893097 81.39456940]
[123.02100372 93.67821503]
[122.36293030 108.35649109]
[113.23397827 119.86940765]
[117.20607758 134.33393860]
[132.56567383 142.70661926]
[137.02978516 159.27124023]
[128.30755615 173.65045166]
[132.49456787 188.05424500]
[136.68157959 202.45802307]
[140.86859131 216.86180115]
[154.22752380 216.31581116]
[167.36209106 218.76976013]
[179.60763550 224.09571838]
[190.34527588 232.02052307]
[199.03327942 242.13975525]
[205.23429871 253.93838501]
[208.63748169 266.81704712]
[209.07398987 280.12237549]
[206.52537537 293.18023682]
[201.12437439 305.32986450]
[193.14791870 315.95727539]
[183.00306702 324.52633667]
[171.20605469 330.60577393]
[174.74572754 345.18212891]
[178.28540039 359.75851440]
[181.82507324 374.33489990]
[185.36474609 388.91125488]
[190.43086243 396.51208496]
[188.84689331 403.73098755]
[192.16915894 418.35845947]
[195.49140930 432.98593140]
[210.40704346 431.26214600]
[225.42160034 431.16119385]
[240.35905457 432.68420410]
[255.04428101 435.81332397]
[269.30508423 440.51190186]
[282.97427368 446.72482300]
[295.89160156 454.37924194]
[307.90557861 463.38543701]
[318.87539673 473.63775635]
[328.67239380 485.01608276]
[337.18173218 497.38696289]
[344.30364990 510.60534668]
[349.95462036 524.51623535]
[354.06842041 538.95660400]
[356.59677124 553.75708008]
[357.51007080 568.74420166]
[356.79760742 583.74218750]
[354.46771240 598.57525635]
[350.54772949 613.06939697]
[345.08358765 627.05474854]
[338.13937378 640.36737061]
[329.79650879 652.85107422]
[320.15280151 664.35961914]
[309.32128906 674.75799561]
[297.42901611 683.92425537]
[284.61538696 691.75103760]
[271.03063965 698.14648438]
[256.83404541 703.03564453]
[242.19206238 706.36120605]
[227.27635193 708.08416748]
[212.26177979 708.18432617]
[197.32440186 706.66052246]
[182.63934326 703.53057861]
[168.37879944 698.83123779]
[154.70993042 692.61761475]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 175]
[22 174]
[23 173]
[24 171]
[25 170]
[26 169]
[27 168]
[28 167]
[38 154]
[39 153]
[40 152]
[41 151]
[45 148]
[46 147]
[50 143]
[51 142]
[52 141]
[53 140]
[54 139]
[55 138]
[61 131]
[62 130]
[63 129]
[64 128]
[65 126]
[66 125]
[67 124]
[68 123]
[69 122]
[70 121]
[79 120]
[80 119]
[82 117]
[83 116]
[84 115]
[85 114]
[86 113]
[87 112]
[88 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
