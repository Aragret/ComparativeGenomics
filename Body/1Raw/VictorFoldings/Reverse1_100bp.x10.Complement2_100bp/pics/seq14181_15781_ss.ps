%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGUCCCAACUAAGCCCUCCUAGGAUAACCACGCCCCCGAAACAUACUAAUACCCGCAACUAAUCAUCAUCAAUGACCAACUUGUAACAAACAACCACAUxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[69.19569397 750.54888916]
[62.22121429 737.21649170]
[57.89620590 722.80499268]
[56.37701797 707.83544922]
[57.71856308 692.84887695]
[61.87234497 678.38708496]
[68.68820953 664.97290039]
[77.91976929 653.09118652]
[89.23330688 643.17150879]
[102.21984100 635.57238770]
[116.40992737 630.56860352]
[114.18480682 615.73455811]
[111.95969391 600.90051270]
[102.42002106 589.46185303]
[108.02458191 574.66656494]
[105.79946136 559.83251953]
[103.57434845 544.99847412]
[101.34922791 530.16442871]
[99.12411499 515.33038330]
[87.67043304 512.59228516]
[77.78184509 506.13348389]
[70.62938690 496.69097900]
[67.06943512 485.35665894]
[67.54124451 473.45117188]
[72.01285553 462.36990356]
[79.98214722 453.41961670]
[90.53310394 447.66412354]
[88.97257996 432.74554443]
[87.41206360 417.82693481]
[85.85153961 402.90832520]
[84.29101562 387.98971558]
[75.27162170 376.13644409]
[81.53123474 361.60623169]
[73.98992157 374.57266235]
[61.02516174 382.11685181]
[46.02591324 382.26678467]
[32.91293716 374.98324585]
[25.11394310 362.17013550]
[24.66756439 347.17678833]
[31.69048309 333.92239380]
[44.34692764 325.87167358]
[59.32853317 325.12899780]
[72.71913910 331.88858032]
[81.01819611 344.38256836]
[81.68798065 329.39752197]
[74.52670288 316.33746338]
[82.87248993 302.89654541]
[83.54228210 287.91149902]
[84.21206665 272.92645264]
[84.88185120 257.94140625]
[85.55163574 242.95637512]
[82.70993805 236.13388062]
[86.34458923 227.75370789]
[87.23740387 212.78030396]
[78.54883575 197.53315735]
[88.81631470 182.24720764]
[89.48609924 167.26216125]
[90.15588379 152.27713013]
[90.82566833 137.29208374]
[91.49545288 122.30704498]
[80.04330444 113.10198212]
[76.15057373 98.93400574]
[81.29178619 85.16981506]
[93.51950836 77.02317047]
[94.18929291 62.03812790]
[94.85907745 47.05308914]
[95.52886200 32.06805038]
[92.78576660 23.35523033]
[96.32181549 16.86538315]
[97.21463013 1.89197683]
[98.10744476 -13.08142853]
[99.00026703 -28.05483437]
[96.38719177 -36.80752945]
[100.01947784 -43.24401093]
[101.13512421 -58.20246506]
[98.65265656 -66.99309540]
[102.38037109 -73.37478638]
[103.71860504 -88.31497192]
[97.24334717 -102.75039673]
[106.08526611 -114.73663330]
[107.42350006 -129.67681885]
[99.29028320 -146.19747925]
[109.93799591 -160.14714050]
[111.05364227 -175.10559082]
[108.57117462 -183.89622498]
[112.29888916 -190.27790833]
[113.63712311 -205.21809387]
[114.97535706 -220.15827942]
[116.31359100 -235.09846497]
[106.13166046 -253.95426941]
[118.71203613 -270.31576538]
[119.38182068 -285.30081177]
[112.26844788 -299.43270874]
[120.56633759 -311.80178833]
[121.23612213 -326.78683472]
[121.90590668 -341.77188110]
[122.57569122 -356.75692749]
[108.33934784 -361.83804321]
[96.23417664 -370.89102173]
[87.33655548 -383.11083984]
[82.43766022 -397.41091919]
[81.97309875 -412.51971436]
[85.98416901 -427.09375000]
[94.11421967 -439.83712769]
[105.64032745 -449.61669922]
[119.53760529 -455.56289673]
[134.57029724 -457.14697266]
[149.40173340 -454.22805786]
[162.71310425 -447.06573486]
[173.32075500 -436.29684448]
[180.28147888 -422.87893677]
[182.97631836 -408.00515747]
[181.16566467 -392.99807739]
[175.01051331 -379.19207764]
[165.05818176 -367.81478882]
[152.19361877 -359.87789917]
[137.56072998 -356.08712769]
[136.89094543 -341.10208130]
[136.22116089 -326.11706543]
[135.55137634 -311.13201904]
[142.71264648 -298.07196045]
[134.36686707 -284.63104248]
[133.69708252 -269.64599609]
[140.67594910 -264.15704346]
[144.40322876 -255.94717407]
[143.92768860 -246.80561829]
[139.22969055 -238.78935242]
[131.25376892 -233.76023865]
[129.91554260 -218.82005310]
[128.57730103 -203.87986755]
[127.23907471 -188.93968201]
[126.01210022 -173.98994446]
[124.89644623 -159.03149414]
[132.54988098 -149.66390991]
[131.74282837 -137.19264221]
[122.36368561 -128.33857727]
[121.02545166 -113.39839935]
[127.59642792 -100.03158569]
[118.65879059 -86.97673798]
[117.32055664 -72.03655243]
[116.09358215 -57.08681488]
[114.97792816 -42.12836456]
[113.97367096 -27.16201973]
[113.08085632 -12.18861294]
[112.18804169 2.78479266]
[111.29521942 17.75819778]
[110.51390076 32.73783493]
[109.84411621 47.72287369]
[109.17433167 62.70791245]
[108.50454712 77.69295502]
[119.95669556 86.89801788]
[123.84942627 101.06599426]
[118.70821381 114.83018494]
[106.48049164 122.97682953]
[105.81070709 137.96186829]
[105.14092255 152.94691467]
[104.47113800 167.93194580]
[103.80135345 182.91699219]
[111.91350555 192.94473267]
[111.04714203 205.41201782]
[102.21080780 213.67312622]
[101.31799316 228.64653015]
[100.53667450 243.62617493]
[99.86688995 258.61120605]
[99.19710541 273.59625244]
[98.52732086 288.58129883]
[97.85752869 303.56631470]
[104.97090149 317.69821167]
[96.67301941 330.06732178]
[96.00323486 345.05233765]
[96.44983673 360.04568481]
[105.58085632 372.96603394]
[99.20961761 386.42919922]
[100.77014160 401.34780884]
[102.33066559 416.26641846]
[103.89118958 431.18499756]
[105.45171356 446.10360718]
[122.55947113 453.04275513]
[133.72483826 467.63815308]
[135.92530823 485.79653931]
[128.63746643 502.48037720]
[113.95815277 513.10528564]
[116.18327332 527.93933105]
[118.40839386 542.77337646]
[120.63350677 557.60742188]
[122.85862732 572.44146729]
[132.55744934 584.94116211]
[126.79373932 598.67541504]
[129.01885986 613.50946045]
[131.24397278 628.34350586]
[146.27766418 628.96368408]
[160.92222595 632.41815186]
[174.64830017 638.58184814]
[186.95965576 647.23211670]
[197.41128540 658.05615234]
[205.62533569 670.66271973]
[211.30488586 684.59613037]
[214.24464417 699.35260010]
[214.33830261 714.39880371]
[211.58250427 729.19079590]
[206.07685852 743.19378662]
[198.02038574 755.90167236]
[187.70433044 766.85498047]
[175.50161743 775.65783691]
[161.85334778 781.99200439]
[147.25291443 785.62847900]
[132.22811890 786.43579102]
[117.32208252 784.38482666]
[103.07365417 779.54962158]
[89.99790192 772.10510254]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 190]
[12 189]
[13 188]
[15 186]
[16 185]
[17 184]
[18 183]
[19 182]
[27 177]
[28 176]
[29 175]
[30 174]
[31 173]
[33 171]
[44 170]
[45 169]
[47 167]
[48 166]
[49 165]
[50 164]
[51 163]
[53 162]
[54 161]
[56 158]
[57 157]
[58 156]
[59 155]
[60 154]
[64 150]
[65 149]
[66 148]
[67 147]
[69 146]
[70 145]
[71 144]
[72 143]
[74 142]
[75 141]
[77 140]
[78 139]
[80 137]
[81 136]
[83 133]
[84 132]
[86 131]
[87 130]
[88 129]
[89 128]
[91 123]
[92 122]
[94 120]
[95 119]
[96 118]
[97 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
