%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[166.93040466 518.77972412]
[166.07774353 503.77792358]
[167.36882019 488.80749512]
[170.77735901 474.17321777]
[176.23396301 460.17297363]
[183.62753296 447.09185791]
[192.80755615 435.19613647]
[203.58714294 424.72802734]
[215.74681091 415.90063477]
[229.03903198 408.89364624]
[224.00212097 394.76461792]
[218.96519470 380.63558960]
[213.92828369 366.50656128]
[208.89137268 352.37753296]
[203.85444641 338.24850464]
[198.81753540 324.11947632]
[193.25831604 310.18768311]
[187.18447876 296.47241211]
[181.11064148 282.75714111]
[175.03680420 269.04187012]
[168.96296692 255.32661438]
[162.88914490 241.61134338]
[156.40963745 228.08299255]
[149.53022766 214.75357056]
[142.65081787 201.42413330]
[135.77140808 188.09471130]
[123.06880951 185.93286133]
[113.79222870 176.71183777]
[111.48636627 163.63922119]
[117.21369171 151.44854736]
[110.53349304 138.01817322]
[97.93779755 130.06848145]
[98.71959686 114.26660156]
[87.17493439 106.37911224]
[87.85002899 92.41358948]
[81.16983032 78.98321533]
[67.03156281 82.54183197]
[52.46813583 83.07495880]
[38.11947250 80.56170654]
[24.61550903 75.11498260]
[12.54857445 66.97641754]
[2.44739246 56.50566864]
[-5.24608135 44.16450119]
[-10.19599628 30.49644852]
[-12.18726635 16.10284805]
[-11.13491535 1.61640227]
[-7.08769941 -12.32663536]
[-0.22585760 -25.11440849]
[9.14691925 -36.18630600]
[20.61692238 -45.05754471]
[14.13742733 -58.58588791]
[7.65793133 -72.11423492]
[1.17843533 -85.64257812]
[-14.25135040 -95.69261932]
[-12.22110844 -113.12377167]
[-18.90130234 -126.55414581]
[-25.58149719 -139.98451233]
[-32.26169205 -153.41490173]
[-38.94188690 -166.84527588]
[-45.72187805 -180.22554016]
[-52.60129166 -193.55497742]
[-56.99475479 -196.37358093]
[-59.60654831 -200.21179199]
[-60.34665298 -204.22019958]
[-59.47520447 -207.63676453]
[-65.75256348 -221.26007080]
[-72.02993011 -234.88339233]
[-78.30728912 -248.50671387]
[-84.58464813 -262.13003540]
[-98.97234344 -257.80099487]
[-113.82250977 -255.51657104]
[-128.84608459 -255.32119751]
[-143.75064087 -257.21865845]
[-158.24604797 -261.17205811]
[-172.05015564 -267.10443115]
[-184.89424133 -274.90029907]
[-196.52832031 -284.40789795]
[-206.72590637 -295.44216919]
[-215.28851318 -307.78833008]
[-222.04946899 -321.20608521]
[-226.87718201 -335.43420410]
[-229.67764282 -350.19573975]
[-230.39637756 -365.20339966]
[-229.01936340 -380.16500854]
[-225.57342529 -394.78936768]
[-220.12564087 -408.79177856]
[-212.78204346 -421.89971924]
[-203.68557739 -433.85800171]
[-193.01332092 -444.43386841]
[-180.97300720 -453.42144775]
[-167.79898071 -460.64581299]
[-153.74771118 -465.96633911]
[-139.09269714 -469.27944946]
[-124.11920166 -470.52062988]
[-109.11869049 -469.66577148]
[-94.38315582 -466.73150635]
[-80.19941711 -461.77490234]
[-66.84358215 -454.89248657]
[-54.57561111 -446.21820068]
[-43.63431549 -435.92092896]
[-34.23266220 -424.20104980]
[-26.55365944 -411.28677368]
[-20.74678230 -397.42941284]
[-16.92506409 -382.89874268]
[-15.16289520 -367.97756958]
[-15.49457550 -352.95639038]
[-17.91365051 -338.12756348]
[-22.37302971 -323.77972412]
[-28.78591347 -310.19219971]
[-37.02746964 -297.62945557]
[-46.93727493 -286.33599854]
[-58.32243729 -276.53170776]
[-70.96133423 -268.40737915]
[-64.68396759 -254.78407288]
[-58.40660858 -241.16075134]
[-52.12924957 -227.53744507]
[-45.85189056 -213.91412354]
[-39.27186203 -200.43438721]
[-32.39244843 -187.10496521]
[-26.53137207 -182.60278320]
[-25.51151085 -173.52546692]
[-18.83131599 -160.09509277]
[-12.15112114 -146.66471863]
[-5.47092676 -133.23434448]
[1.20926797 -119.80396271]
[12.57342625 -115.65879059]
[18.24872208 -104.52439117]
[14.70678139 -92.12207794]
[21.18627739 -78.59372711]
[27.66577339 -65.06538391]
[34.14526749 -51.53703690]
[49.19890976 -55.03165817]
[64.65968323 -55.09742737]
[79.75611115 -51.72796631]
[93.73419952 -45.08840179]
[105.89512634 -35.50724792]
[115.63013458 -23.46017647]
[122.45104980 -9.54639435]
[126.01471710 5.54116297]
[126.14031982 21.05033493]
[122.81848145 36.20724106]
[116.21194458 50.25488281]
[106.64758301 62.49097443]
[94.60021210 72.30302429]
[101.28040314 85.73339844]
[112.82506561 93.62088776]
[112.14997101 107.58641052]
[125.22348022 116.49672699]
[123.96386719 131.33798218]
[130.64405823 144.76835632]
[147.32734680 150.03025818]
[154.89431763 165.42686462]
[149.10083008 181.21530151]
[155.98025513 194.54472351]
[162.85966492 207.87416077]
[169.73907471 221.20358276]
[173.47416687 223.41787720]
[176.05116272 226.40510559]
[177.36930847 229.70629883]
[177.48721313 232.87690735]
[176.60440063 235.53750610]
[182.67823792 249.25277710]
[188.75207520 262.96804810]
[194.82591248 276.68331909]
[200.89973450 290.39855957]
[206.97357178 304.11383057]
[214.72972107 291.27474976]
[229.58305359 289.18234253]
[240.58427429 299.37905884]
[239.62367249 314.34826660]
[227.40937805 323.05523682]
[212.94656372 319.08255005]
[217.98347473 333.21157837]
[223.02040100 347.34060669]
[228.05731201 361.46963501]
[233.09422302 375.59866333]
[238.13114929 389.72769165]
[243.16806030 403.85671997]
[257.89523315 400.87496948]
[272.89688110 400.01953125]
[287.86755371 401.30783081]
[302.50247192 404.71365356]
[316.50372314 410.16763306]
[329.58621216 417.55877686]
[341.48361206 426.73660278]
[351.95373535 437.51422119]
[360.78341675 449.67227173]
[367.79284668 462.96319580]
[372.83938599 477.11639404]
[375.82022095 491.84375000]
[376.67474365 506.84545898]
[375.38552856 521.81604004]
[371.97879028 536.45074463]
[366.52392578 550.45166016]
[359.13195801 563.53369141]
[349.95343018 575.43054199]
[339.17514038 585.89996338]
[327.01657104 594.72888184]
[313.72521973 601.73754883]
[299.57168579 606.78314209]
[284.84414673 609.76312256]
[269.84240723 610.61669922]
[254.87188721 609.32653809]
[240.23738098 605.91894531]
[226.23681641 600.46319580]
[213.15522766 593.07043457]
[201.25895691 583.89111328]
[190.79017639 573.11218262]
[181.96202087 560.95306396]
[174.95420837 547.66131592]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 178]
[11 177]
[12 176]
[13 175]
[14 174]
[15 173]
[16 172]
[17 166]
[18 165]
[19 164]
[20 163]
[21 162]
[22 161]
[23 156]
[24 155]
[25 154]
[26 153]
[30 150]
[31 149]
[33 147]
[35 145]
[36 144]
[50 131]
[51 130]
[52 129]
[53 128]
[55 125]
[56 124]
[57 123]
[58 122]
[59 121]
[60 119]
[61 118]
[65 117]
[66 116]
[67 115]
[68 114]
[69 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
