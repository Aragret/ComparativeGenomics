%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[101.74846649 594.06060791]
[105.13307190 579.32843018]
[112.71112823 566.24926758]
[123.80878448 555.98608398]
[137.43925476 549.45141602]
[135.21414185 534.61737061]
[132.98902893 519.78332520]
[130.76391602 504.94931030]
[128.53878784 490.11526489]
[126.31367493 475.28121948]
[124.08856201 460.44717407]
[111.99532318 451.82806396]
[109.52742004 436.81591797]
[118.64993286 424.18984985]
[116.42481995 409.35580444]
[114.19969940 394.52175903]
[104.66158295 387.08193970]
[102.68640137 374.74166870]
[109.87157440 364.03018188]
[107.86756134 349.16464233]
[105.86354828 334.29913330]
[103.85953522 319.43359375]
[89.40485382 315.69305420]
[77.45112610 306.67898560]
[69.83866119 293.74008179]
[67.75431824 278.83224487]
[71.54655457 264.22293091]
[80.66764069 252.14613342]
[93.75251007 244.46096802]
[91.74849701 229.59544373]
[89.74448395 214.72990417]
[87.74047089 199.86437988]
[85.73645782 184.99885559]
[83.73244476 170.13333130]
[78.74623871 184.28033447]
[70.02313232 196.48309326]
[58.25107956 205.77926636]
[44.35846329 211.43569946]
[29.44091797 213.00630188]
[14.67490196 210.36721802]
[1.22492349 203.72657776]
[-9.84829426 193.60809326]
[-17.67147064 180.80973816]
[-21.62763977 166.34085083]
[-21.40479851 151.34249878]
[-17.02052307 136.99754333]
[-8.82057571 124.43724823]
[2.54836202 114.65219879]
[16.18968773 108.41407013]
[31.02759171 106.21483612]
[45.89189148 108.22793579]
[59.61032867 114.29460144]
[71.10101318 123.93640137]
[79.45773315 136.39292908]
[84.02203369 150.68524170]
[86.46775818 135.88597107]
[88.91348267 121.08670807]
[91.35921478 106.28743744]
[92.14053345 91.30780029]
[91.24771881 76.33438873]
[90.35490417 61.36098480]
[89.46208954 46.38758087]
[88.56927490 31.41417313]
[87.45362091 16.45572090]
[86.11538696 1.51553535]
[84.33292389 -13.37818241]
[82.10780334 -28.21222496]
[79.88269043 -43.04626846]
[76.99741364 -57.76615906]
[73.45774078 -72.34253693]
[69.91806793 -86.91891479]
[64.99338531 -72.75037384]
[54.47041702 -62.06079483]
[40.38098145 -56.91416550]
[25.44552994 -58.30421829]
[12.54786205 -65.96255493]
[4.17831659 -78.41047668]
[1.95292234 -93.24448395]
[6.30136728 -107.60034943]
[16.38403511 -118.70619965]
[30.25412178 -124.41765594]
[45.23352814 -123.63192749]
[58.42996597 -116.50072479]
[67.29592133 -104.39981079]
[66.40310669 -119.37321472]
[65.51029205 -134.34661865]
[64.61747742 -149.32002258]
[63.72465897 -164.29344177]
[62.60901260 -179.25189209]
[61.27077866 -194.19207764]
[46.36880112 -196.47122192]
[32.44555664 -202.25108337]
[20.31052017 -211.19558716]
[10.66921043 -222.78474426]
[4.08215904 -236.34477234]
[0.93232816 -251.08729553]
[1.40284526 -266.15521240]
[5.46635532 -280.67248535]
[12.88661003 -293.79510498]
[23.23220825 -304.76016235]
[35.90166473 -312.93011475]
[50.15840149 -317.82998657]
[65.17354584 -319.17495728]
[80.07413483 -316.88674927]
[93.99387360 -311.09848022]
[106.12348938 -302.14660645]
[115.75776672 -290.55160522]
[122.33660126 -276.98757935]
[125.47749329 -262.24316406]
[124.99784088 -247.17552185]
[120.92552948 -232.66072083]
[113.49731445 -219.54260254]
[103.14507294 -208.58383179]
[90.47066498 -200.42155457]
[76.21096039 -195.53030396]
[77.54919434 -180.59011841]
[80.57463074 -176.89474487]
[81.31076813 -171.25958252]
[78.69806671 -165.18624878]
[79.59088135 -150.21284485]
[80.48369598 -135.23944092]
[81.37651062 -120.26603699]
[82.26933289 -105.29262543]
[84.49444580 -90.45858765]
[88.03411865 -75.88220978]
[91.57379150 -61.30583191]
[100.28252411 -73.51885986]
[115.05303192 -76.13265991]
[127.42411041 -67.64994049]
[130.30902100 -52.92998123]
[122.05518341 -40.40504456]
[107.39074707 -37.24998093]
[94.71673584 -45.27138519]
[96.94184875 -30.43734360]
[99.16696930 -15.60329914]
[101.33849335 -13.83055687]
[102.93865204 -11.09083080]
[103.59561920 -7.59743690]
[103.02158356 -3.69423246]
[101.05557251 0.17730117]
[102.39380646 15.11748600]
[105.41924286 18.81286240]
[106.15538025 24.44803047]
[103.54267883 30.52135849]
[104.43549347 45.49476242]
[105.32830811 60.46817017]
[106.22112274 75.44157410]
[107.11393738 90.41497803]
[113.74791718 76.96171570]
[124.74436188 66.75984192]
[138.65649414 61.15158463]
[153.65394592 60.87481689]
[167.76353455 65.96594238]
[179.12889099 75.75514221]
[186.25473022 88.95447540]
[188.20352173 103.82734680]
[184.71885681 118.41696930]
[176.25920105 130.80383301]
[163.93757629 139.35821533]
[149.37510681 142.95466614]
[134.48773193 141.12001038]
[121.23413849 134.09559631]
[111.35807037 122.80563354]
[106.15848541 108.73316193]
[103.71275330 123.53243256]
[101.26702881 138.33171082]
[98.82130432 153.13098145]
[98.59797668 168.12931824]
[100.60198975 182.99484253]
[102.60600281 197.86036682]
[104.61001587 212.72589111]
[106.61402893 227.59143066]
[108.61804199 242.45695496]
[123.27088928 246.40281677]
[135.26437378 255.63316345]
[142.78988647 268.71673584]
[144.72763062 283.64431763]
[140.81321716 298.13717651]
[131.67321777 309.99490356]
[118.72505951 317.42959595]
[120.72907257 332.29510498]
[122.73308563 347.16064453]
[124.73709869 362.02615356]
[136.32739258 376.33514404]
[129.03375244 392.29666138]
[131.25886536 407.13070679]
[133.48397827 421.96475220]
[145.90950012 431.35858154]
[147.95477295 446.43411255]
[138.92260742 458.22204590]
[141.14772034 473.05609131]
[143.37283325 487.89013672]
[145.59796143 502.72418213]
[147.82307434 517.55822754]
[150.04818726 532.39227295]
[152.27330017 547.22631836]
[167.22116089 549.47418213]
[180.84164429 556.02966309]
[191.92359924 566.30981445]
[199.48165894 579.40051270]
[202.84375000 594.13781738]
[201.71090698 609.21124268]
[196.18389893 623.28045654]
[186.75413513 635.09448242]
[174.26013184 643.60284424]
[159.81285095 648.04888916]
[144.69692993 648.03735352]
[130.25645447 643.56921387]
[117.77547455 635.04180908]
[108.36378479 623.21337891]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 196]
[6 195]
[7 194]
[8 193]
[9 192]
[10 191]
[11 190]
[14 187]
[15 186]
[16 185]
[19 183]
[20 182]
[21 181]
[22 180]
[29 173]
[30 172]
[31 171]
[32 170]
[33 169]
[34 168]
[55 167]
[56 166]
[57 165]
[58 164]
[59 148]
[60 147]
[61 146]
[62 145]
[63 144]
[64 141]
[65 140]
[66 135]
[67 134]
[68 133]
[69 126]
[70 125]
[71 124]
[84 123]
[85 122]
[86 121]
[87 120]
[88 119]
[89 116]
[90 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
