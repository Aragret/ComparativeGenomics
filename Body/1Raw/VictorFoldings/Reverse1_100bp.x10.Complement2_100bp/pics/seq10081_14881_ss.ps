%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCGGCGUGAGCAUUCCCCACCUAAAAAGAUACAUCGGCAACUCAACACCAUCAGUUUUACAUUAUUAAUAAUCAUCAUUCCGAUCCUCCCACAACUAAxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[153.46214294 688.62268066]
[156.00230408 673.76300049]
[162.02546692 659.94329834]
[171.18144226 647.96697998]
[182.93791199 638.53039551]
[196.61137390 632.18218994]
[193.72610474 617.46228027]
[183.86529541 610.45581055]
[181.34106445 598.21606445]
[188.04077148 587.19439697]
[185.37498474 572.43316650]
[182.70918274 557.67193604]
[180.04339600 542.91076660]
[165.43611145 539.81939697]
[153.09179688 531.34802246]
[144.90917969 518.76196289]
[142.16123962 503.96206665]
[145.29734802 489.19796753]
[153.87008667 476.72595215]
[166.59873962 468.46420288]
[163.93295288 453.70297241]
[161.26715088 438.94174194]
[158.60136414 424.18054199]
[142.77297974 423.82562256]
[127.35450745 420.20513916]
[113.01251984 413.47329712]
[100.36751556 403.91885376]
[89.96708679 391.95272827]
[82.26222229 378.09033203]
[77.58773041 362.92944336]
[76.14769745 347.12423706]
[78.00657654 331.35733032]
[83.08631897 316.31002808]
[91.16963959 302.63311768]
[101.90928650 290.91848755]
[114.84301758 281.67376709]
[129.41342163 275.30014038]
[126.30931854 260.62481689]
[116.10571289 249.77421570]
[120.81970978 234.67161560]
[117.71559906 219.99630737]
[114.61148834 205.32099915]
[111.50737762 190.64570618]
[108.40326691 175.97039795]
[105.29915619 161.29510498]
[92.71434021 153.41107178]
[89.35727692 138.57244873]
[97.71210480 125.42578125]
[94.60799408 110.75048065]
[91.28573608 96.12302399]
[87.74606323 81.54664612]
[84.20639038 66.97026825]
[80.66671753 52.39389420]
[77.17934418 66.98287201]
[69.77309418 80.02693176]
[59.03204346 90.49735260]
[45.80327988 97.56841278]
[31.13007927 100.68244171]
[16.16963196 99.59386444]
[2.10177994 94.38852692]
[-9.96402645 85.47694397]
[-19.07622719 73.56192017]
[-24.51619720 59.58312225]
[-25.85491562 44.64297867]
[-22.98680878 29.91973495]
[-16.13806534 16.57452202]
[-5.84880543 5.65980101]
[7.06951618 -1.96364808]
[21.59810638 -5.69460773]
[36.59117889 -5.23883915]
[50.86632156 -0.63228607]
[63.29773331 7.76175928]
[72.90502167 19.28130722]
[78.93144989 33.02122116]
[79.82426453 18.04781532]
[80.71708679 3.07441020]
[81.60990143 -11.89899540]
[82.50271606 -26.87240219]
[83.39553070 -41.84580612]
[70.28901672 -55.52548599]
[71.32582855 -74.12220001]
[85.38134766 -85.85071564]
[85.82795715 -100.84406281]
[86.27455902 -115.83740997]
[86.72116852 -130.83076477]
[87.16777039 -145.82411194]
[87.61437988 -160.81745911]
[88.06098175 -175.81080627]
[88.50759125 -190.80416870]
[76.28051758 -203.31488037]
[76.87293243 -220.46025085]
[89.43014526 -231.64753723]
[89.65347290 -246.64587402]
[89.54180908 -261.64544678]
[89.09519958 -276.63879395]
[80.95044708 -290.20248413]
[88.30538177 -303.15447998]
[74.08219147 -308.51818848]
[62.99769592 -318.92022705]
[56.74220276 -332.77438354]
[56.26962662 -347.96795654]
[61.65203094 -362.18408203]
[72.06864166 -373.25488281]
[85.93099976 -379.49215698]
[101.12519836 -379.94473267]
[115.33422852 -374.54364014]
[126.39131927 -364.11245728]
[132.61033630 -350.24191284]
[133.04293823 -335.04714966]
[127.62315369 -320.84521484]
[117.17745209 -309.80184937]
[103.29872894 -303.60110474]
[111.41153717 -291.10983276]
[104.08854675 -277.08541870]
[104.53515625 -262.09207153]
[106.83696747 -259.42111206]
[107.95943451 -255.50254822]
[107.33027649 -250.90281677]
[104.65180969 -246.42254639]
[104.42848206 -231.42420959]
[114.60840607 -223.52491760]
[118.43704224 -211.01797485]
[114.30236816 -198.40390015]
[103.50093842 -190.35755920]
[103.05433655 -175.36421204]
[102.60772705 -160.37084961]
[102.16112518 -145.37750244]
[101.71451569 -130.38415527]
[101.26791382 -115.39080811]
[100.82130432 -100.39745331]
[100.37470245 -85.40410614]
[109.81219482 -78.99319458]
[115.03712463 -68.71623230]
[114.64830780 -57.07395172]
[108.62673950 -46.96249390]
[98.36893463 -40.95299149]
[97.47612000 -25.97958565]
[96.58330536 -11.00617981]
[95.69049072 3.96722603]
[94.79767609 18.94063187]
[93.90486145 33.91403580]
[95.24309540 48.85422134]
[98.78276825 63.43059921]
[102.32243347 78.00697327]
[105.86210632 92.58335114]
[109.60752869 96.25565338]
[111.02880859 101.76503754]
[109.28329468 107.64636993]
[112.38740540 122.32167053]
[125.35002899 130.95927429]
[128.28898621 145.88633728]
[119.97445679 158.19099426]
[123.07856750 172.86628723]
[126.18267822 187.54159546]
[129.28678894 202.21688843]
[132.39089966 216.89219666]
[135.49501038 231.56750488]
[145.92063904 243.46778870]
[140.98461914 257.52072144]
[144.08872986 272.19601440]
[158.29231262 271.97271729]
[172.28822327 274.37796021]
[185.59434509 279.32733154]
[197.75265503 286.64871216]
[208.34497070 296.08850098]
[217.00727844 307.32012939]
[223.44229126 319.95556641]
[227.42964172 333.55865479]
[228.83343506 347.66009521]
[227.60687256 361.77377319]
[223.79376221 375.41342163]
[217.52708435 388.10934448]
[209.02420044 399.42474365]
[198.57942200 408.97058105]
[186.55378723 416.41903687]
[173.36257935 421.51473999]
[176.02836609 436.27597046]
[178.69416809 451.03717041]
[181.35997009 465.79840088]
[196.17439270 469.08602905]
[208.56806946 477.77163696]
[216.67028809 490.50613403]
[219.27264404 505.33230591]
[216.00927734 519.98547363]
[207.40786743 532.23950195]
[194.80461121 540.24493408]
[197.47039795 555.00616455]
[200.13619995 569.76739502]
[202.80198669 584.52862549]
[215.01963806 598.30578613]
[208.44599915 614.57702637]
[211.33126831 629.29693604]
[226.38949585 630.01336670]
[240.83850098 634.31335449]
[253.83822632 641.94689941]
[264.63290405 652.47009277]
[272.59490967 665.27130127]
[277.26138306 679.60614014]
[278.36102295 694.64123535]
[275.82986450 709.50244141]
[269.81506348 723.32586670]
[260.66635132 735.30767822]
[248.91561890 744.75140381]
[235.24600220 751.10784912]
[220.45225525 754.00762939]
[205.39447021 753.28204346]
[190.94807434 748.97326660]
[177.95298767 741.33190918]
[167.16468811 730.80212402]
[159.21043396 717.99615479]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 192]
[7 191]
[10 189]
[11 188]
[12 187]
[13 186]
[20 179]
[21 178]
[22 177]
[23 176]
[37 160]
[38 159]
[40 157]
[41 156]
[42 155]
[43 154]
[44 153]
[45 152]
[48 149]
[49 148]
[50 145]
[51 144]
[52 143]
[53 142]
[74 141]
[75 140]
[76 139]
[77 138]
[78 137]
[79 136]
[82 131]
[83 130]
[84 129]
[85 128]
[86 127]
[87 126]
[88 125]
[89 124]
[92 120]
[93 119]
[94 115]
[95 114]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
