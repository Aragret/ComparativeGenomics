%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[211.82670593 521.06604004]
[220.78097534 508.99258423]
[231.51379395 498.46865845]
[243.76084900 489.75338745]
[237.08064270 476.32299805]
[230.40045166 462.89263916]
[223.72026062 449.46224976]
[208.59419250 440.56454468]
[209.88870239 422.19595337]
[203.00929260 408.86651611]
[198.81265259 406.58676147]
[196.00360107 401.64648438]
[196.13017273 395.03622437]
[189.65068054 381.50787354]
[183.17118835 367.97952271]
[176.69169617 354.45120239]
[170.21218872 340.92285156]
[163.73269653 327.39450073]
[159.70378113 341.84329224]
[148.02352905 351.25454712]
[133.04841614 352.11813354]
[120.36376190 344.11190796]
[114.70064545 330.22201538]
[118.17126465 315.62902832]
[129.48115540 305.77578735]
[144.41203308 304.33731079]
[157.39579773 311.85098267]
[152.56980896 297.64852905]
[147.74380493 283.44607544]
[142.91781616 269.24359131]
[138.09181213 255.04115295]
[133.16021729 240.87501526]
[128.12330627 226.74598694]
[123.08638763 212.61695862]
[115.69548798 225.66972351]
[101.27705383 229.80598450]
[88.09061432 222.65632629]
[83.68995667 208.31636047]
[90.59598541 195.00070190]
[104.85260773 190.33715820]
[118.29235840 196.99649048]
[114.53605652 182.47444153]
[110.77975464 167.95237732]
[107.02345276 153.43031311]
[103.26715851 138.90824890]
[99.29505920 124.44373322]
[95.10804749 110.03994751]
[90.81392670 95.66773987]
[86.41292572 81.32788849]
[82.01192474 66.98804474]
[75.88423157 80.67932892]
[62.93713379 88.25380707]
[47.99959183 86.88639069]
[36.64293671 77.08708954]
[33.10291672 62.51079941]
[38.69987488 48.59411621]
[51.34628296 40.52761841]
[66.32534027 41.31991196]
[78.05088806 50.67646408]
[75.38509369 35.91524887]
[65.25342560 27.93325806]
[63.33696747 15.58372593]
[70.12413788 5.57069111]
[67.67841339 -9.22857952]
[65.23268127 -24.02785110]
[62.78695679 -38.82712173]
[60.34122849 -53.62639236]
[57.89550400 -68.42565918]
[55.11989212 -83.16662598]
[52.01578140 -97.84192657]
[48.91167068 -112.51722717]
[45.80755997 -127.19253540]
[42.59428787 -141.84431458]
[39.27202606 -156.47178650]
[35.84096527 -171.07409668]
[32.30129242 -185.65048218]
[28.76162148 -200.22685242]
[23.69551086 -207.82766724]
[25.27947617 -215.04658508]
[21.95721626 -229.67404175]
[6.94201756 -228.86668396]
[-7.99362516 -230.60868835]
[-22.41998482 -234.84994507]
[-35.92198563 -241.46839905]
[-48.11114883 -250.27365112]
[-58.63676453 -261.01232910]
[-67.19599152 -273.37548828]
[-73.54257202 -287.00738525]
[-77.49388885 -301.51583862]
[-78.93626404 -316.48339844]
[-77.82819366 -331.47940063]
[-74.20155334 -346.07238770]
[-68.16070557 -359.84249878]
[-59.87944031 -372.39355469]
[-49.59603500 -383.36441040]
[-37.60636139 -392.43942261]
[-24.25538826 -399.35748291]
[-9.92724609 -403.91952515]
[4.96581268 -405.99432373]
[19.99528694 -405.52218628]
[34.72874832 -402.51666260]
[48.74228287 -397.06423950]
[61.63269806 -389.32180786]
[73.02910614 -379.51214600]
[82.60361481 -367.91744995]
[90.08074188 -354.87136841]
[95.24536133 -340.74920654]
[97.94887543 -325.95736694]
[98.11348724 -310.92138672]
[95.73447418 -296.07388306]
[90.88027954 -281.84204102]
[83.69056702 -268.63537598]
[74.37220764 -256.83386230]
[63.19329453 -246.77700806]
[50.47547913 -238.75422668]
[36.58467484 -232.99630737]
[39.90693665 -218.36885071]
[43.33799744 -203.76652527]
[46.87767029 -189.19015503]
[50.41734314 -174.61376953]
[55.05047607 -168.85566711]
[53.89948654 -159.79403687]
[57.22174835 -145.16658020]
[61.76863861 -139.34013367]
[60.48286438 -130.29664612]
[63.58697510 -115.62133789]
[66.69108582 -100.94603729]
[69.79519653 -86.27073669]
[72.53504181 -84.05137634]
[74.33605194 -80.39468384]
[74.53437042 -75.75636292]
[72.69477081 -70.87139130]
[75.14050293 -56.07212067]
[77.58622742 -41.27285004]
[80.03195190 -26.47357750]
[82.47768402 -11.67430687]
[84.92340851 3.12496376]
[96.77319336 16.06905937]
[90.14630890 33.24945450]
[92.81210327 48.01066971]
[96.35177612 62.58704376]
[100.75276947 76.92689514]
[105.15377045 91.26673889]
[110.34136963 97.43612671]
[109.51183319 105.85293579]
[113.69883728 120.25672150]
[118.19922638 125.10007477]
[119.39808655 130.65522766]
[117.78921509 135.15196228]
[121.54551697 149.67401123]
[125.30181885 164.19607544]
[129.05812073 178.71813965]
[132.81442261 193.24018860]
[137.21540833 207.58003235]
[142.25233459 221.70907593]
[147.28924561 235.83810425]
[153.11862183 242.87062073]
[152.29426575 250.21514893]
[157.12026978 264.41760254]
[161.94625854 278.62005615]
[166.77226257 292.82250977]
[171.59825134 307.02496338]
[177.26104736 320.91500854]
[183.74053955 334.44335938]
[190.22003174 347.97167969]
[196.69953918 361.50003052]
[203.17903137 375.02838135]
[209.65852356 388.55673218]
[216.33871460 401.98709106]
[223.21812439 415.31652832]
[235.24581909 419.97460938]
[240.70127869 431.21835327]
[237.15063477 442.78207397]
[243.83082581 456.21243286]
[250.51103210 469.64282227]
[257.19122314 483.07318115]
[271.53060913 478.56451416]
[286.39880371 476.35464478]
[301.42962646 476.49801636]
[316.25296021 478.99105835]
[330.50375366 483.77243042]
[343.83108521 490.72436523]
[355.90670776 499.67562866]
[366.43328857 510.40585327]
[375.15161133 522.65075684]
[381.84695435 536.10876465]
[386.35443115 550.44854736]
[388.56307983 565.31695557]
[388.41848755 580.34777832]
[385.92419434 595.17089844]
[381.14166260 609.42126465]
[374.18862915 622.74798584]
[365.23635864 634.82293701]
[354.50527954 645.34863281]
[342.25964355 654.06591797]
[328.80105591 660.76013184]
[314.46090698 665.26647949]
[299.59237671 667.47387695]
[284.56155396 667.32800293]
[269.73864746 664.83251953]
[255.48863220 660.04882812]
[242.16247559 653.09466553]
[230.08831787 644.14141846]
[219.56349182 633.40948486]
[210.84719849 621.16314697]
[204.15408325 607.70397949]
[199.64895630 593.36346436]
[197.44277954 578.49475098]
[197.58985901 563.46392822]
[200.08659363 548.64123535]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 176]
[5 175]
[6 174]
[7 173]
[9 170]
[10 169]
[13 168]
[14 167]
[15 166]
[16 165]
[17 164]
[18 163]
[27 162]
[28 161]
[29 160]
[30 159]
[31 158]
[32 156]
[33 155]
[34 154]
[41 153]
[42 152]
[43 151]
[44 150]
[45 149]
[46 146]
[47 145]
[48 143]
[49 142]
[50 141]
[59 140]
[60 139]
[63 137]
[64 136]
[65 135]
[66 134]
[67 133]
[68 132]
[69 128]
[70 127]
[71 126]
[72 125]
[73 123]
[74 122]
[75 120]
[76 119]
[77 118]
[79 117]
[80 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
