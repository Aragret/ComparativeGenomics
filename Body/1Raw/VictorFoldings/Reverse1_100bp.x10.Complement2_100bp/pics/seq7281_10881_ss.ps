%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[156.51507568 636.92004395]
[165.31732178 624.49267578]
[178.41656494 616.72546387]
[176.63410950 601.83172607]
[174.85163879 586.93798828]
[173.06916809 572.04431152]
[171.28671265 557.15057373]
[168.62091064 542.38934326]
[165.08123779 527.81298828]
[161.54156494 513.23663330]
[156.90843201 507.47851562]
[158.05941772 498.41687012]
[154.73716736 483.78942871]
[151.41490173 469.16195679]
[148.09263611 454.53448486]
[144.77038574 439.90704346]
[141.44812012 425.27957153]
[127.70851898 419.59088135]
[119.86038971 406.75067139]
[121.09231567 391.57385254]
[131.14074707 379.89761353]
[127.81848907 365.27014160]
[117.73757172 376.37756348]
[102.75911713 375.57385254]
[93.92469025 363.45141602]
[97.74670410 348.94653320]
[111.40770721 342.75161743]
[124.83629608 349.43203735]
[122.61117554 334.59799194]
[120.38606262 319.76394653]
[118.16094208 304.92990112]
[115.93582916 290.09585571]
[113.71070862 275.26181030]
[111.48559570 260.42776489]
[101.05898285 255.79614258]
[94.09081268 246.61135864]
[92.40437317 235.08531189]
[96.53308105 224.06465149]
[105.55958557 216.32780457]
[103.77712250 201.43408203]
[101.99465179 186.54037476]
[89.78408813 181.14183044]
[81.77129364 170.32798767]
[80.13515472 156.85978699]
[85.40921783 144.24221802]
[96.31455994 135.81225586]
[94.75403595 120.89365387]
[93.19351196 105.97504425]
[90.57206726 103.14654541]
[89.21012115 99.17628479]
[89.58962250 94.65267944]
[91.91173553 90.35760498]
[91.01892090 75.38420105]
[90.12610626 60.41079330]
[89.23328400 45.43738937]
[88.34046936 30.46398354]
[79.15498352 42.32260132]
[64.78612518 46.62793350]
[50.59312439 41.77420044]
[41.86961746 29.57172394]
[41.86926270 14.57172394]
[50.59218597 2.36883068]
[64.78495789 -2.48557806]
[79.15402222 1.81907225]
[88.34046936 13.67835140]
[81.43828583 -0.55788630]
[89.91941071 -12.80206108]
[83.01722717 -27.03829956]
[91.49835205 -39.28247452]
[92.39116669 -54.25587845]
[93.28398895 -69.22928619]
[80.29683685 -75.07608795]
[70.10687256 -84.98395538]
[63.92389297 -97.74811554]
[62.47226334 -111.82645416]
[65.90606689 -125.52577209]
[73.79305267 -137.20544434]
[85.16893768 -145.47392273]
[98.65525055 -149.35447693]
[99.77089691 -164.31294250]
[100.88655090 -179.27139282]
[102.00219727 -194.22984314]
[94.19220734 -204.49467468]
[95.42938232 -216.93063354]
[104.50775909 -224.92498779]
[105.84599304 -239.86517334]
[107.18422699 -254.80535889]
[108.52246094 -269.74554443]
[109.86069489 -284.68572998]
[111.19892883 -299.62591553]
[112.53716278 -314.56610107]
[113.87539673 -329.50628662]
[115.21363068 -344.44647217]
[112.86231995 -353.27307129]
[116.68463135 -359.59857178]
[118.24515533 -374.51718140]
[104.02026367 -379.49203491]
[91.32640839 -387.61376953]
[80.84815979 -398.44442749]
[73.15059662 -411.39990234]
[68.64882660 -425.78152466]
[67.58563995 -440.81369019]
[70.01836395 -455.68576050]
[75.81580353 -469.59570312]
[84.66532135 -481.79336548]
[96.08966064 -491.62094116]
[109.47272491 -498.54843140]
[124.09278870 -502.20227051]
[139.16140747 -502.38537598]
[153.86595154 -499.08792114]
[167.41340637 -492.48770142]
[179.07319641 -482.94064331]
[188.21652222 -470.96163940]
[194.35028076 -457.19668579]
[197.14369202 -442.38812256]
[196.44612122 -427.33456421]
[192.29518127 -412.84780884]
[184.91471863 -399.70910645]
[174.70275879 -388.62701416]
[162.21002197 -380.19918823]
[148.11022949 -374.88009644]
[133.16375732 -372.95663452]
[131.60324097 -358.03805542]
[130.15382385 -343.10824585]
[128.81558228 -328.16806030]
[127.47734833 -313.22787476]
[126.13911438 -298.28768921]
[124.80088043 -283.34750366]
[123.46264648 -268.40731812]
[122.12441254 -253.46711731]
[120.78617859 -238.52694702]
[119.44794464 -223.58676147]
[127.67870331 -208.08767700]
[116.96064758 -193.11419678]
[115.84500122 -178.15574646]
[114.72935486 -163.19729614]
[113.61370850 -148.23883057]
[127.87083435 -141.32072449]
[138.40715027 -129.43226624]
[143.58712769 -114.37429810]
[142.58963013 -98.44291687]
[135.53787231 -84.07947540]
[123.48510742 -73.49640656]
[108.25739288 -68.33647156]
[107.36457825 -53.36306381]
[106.47175598 -38.38965607]
[113.43780518 -25.22441864]
[104.89281464 -11.90924549]
[111.85885620 1.25599420]
[103.31387329 14.57116699]
[103.31387329 29.57116699]
[104.20669556 44.54457474]
[105.09951019 59.51797867]
[105.99232483 74.49138641]
[106.88513947 89.46479034]
[108.11211395 104.41452026]
[109.67263794 119.33312988]
[111.23316193 134.25173950]
[125.99104309 142.51617432]
[132.84689331 157.79684448]
[129.27955627 173.99053955]
[116.88837433 184.75790405]
[118.67083740 199.65162659]
[120.45330048 214.54533386]
[135.78231812 225.67796326]
[138.06703186 244.16290283]
[126.31963348 258.20266724]
[128.54475403 273.03671265]
[130.76986694 287.87075806]
[132.99499512 302.70480347]
[135.22010803 317.53881836]
[137.44522095 332.37286377]
[139.67033386 347.20690918]
[142.44595337 361.94787598]
[145.76820374 376.57534790]
[159.87454224 382.76547241]
[167.54147339 395.92111206]
[166.00987244 410.89169312]
[156.07559204 421.95730591]
[159.39784241 436.58477783]
[162.72010803 451.21224976]
[166.04235840 465.83969116]
[169.36462402 480.46716309]
[172.68688965 495.09460449]
[176.11795044 509.69692993]
[179.65760803 524.27331543]
[183.19728088 538.84967041]
[190.12904358 525.54742432]
[203.50402832 518.75695801]
[218.33369446 521.01104736]
[229.08694458 531.46893311]
[231.75309753 546.23010254]
[225.33772278 559.78900146]
[212.23361206 567.08843994]
[197.32826233 565.40600586]
[186.18041992 555.36810303]
[187.96289062 570.26184082]
[189.74536133 585.15557861]
[191.52781677 600.04925537]
[193.31028748 614.94299316]
[207.87248230 619.39971924]
[219.35873413 629.39898682]
[225.77899170 643.20843506]
[226.02088928 658.43542480]
[220.04252625 672.44183350]
[208.87968445 682.80090332]
[194.46640015 687.71795654]
[179.29986572 686.34100342]
[166.00776672 678.90863037]
[156.89303589 666.70855713]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 200]
[4 199]
[5 198]
[6 197]
[7 196]
[8 187]
[9 186]
[10 185]
[12 184]
[13 183]
[14 182]
[15 181]
[16 180]
[17 179]
[21 175]
[22 174]
[28 173]
[29 172]
[30 171]
[31 170]
[32 169]
[33 168]
[34 167]
[39 164]
[40 163]
[41 162]
[46 158]
[47 157]
[48 156]
[52 155]
[53 154]
[54 153]
[55 152]
[56 151]
[65 150]
[67 148]
[69 146]
[70 145]
[71 144]
[79 137]
[80 136]
[81 135]
[82 134]
[85 132]
[86 131]
[87 130]
[88 129]
[89 128]
[90 127]
[91 126]
[92 125]
[93 124]
[95 123]
[96 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
