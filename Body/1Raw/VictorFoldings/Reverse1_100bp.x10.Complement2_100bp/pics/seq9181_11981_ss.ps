%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[67.26585388 744.90270996]
[57.80527115 733.16552734]
[51.42911911 719.50506592]
[48.50809860 704.71551514]
[49.21203232 689.65667725]
[53.49999619 675.20410156]
[61.12268829 662.19805908]
[71.63694763 651.39465332]
[84.43147278 643.42193604]
[98.76242065 638.74353027]
[97.64677429 623.78509521]
[96.53112030 608.82666016]
[95.41547394 593.86822510]
[94.29982758 578.90972900]
[92.26616669 576.98040771]
[90.87420654 574.12927246]
[90.47888947 570.59667969]
[91.34164429 566.74694824]
[93.59015656 563.03240967]
[93.36682892 548.03405762]
[93.14350128 533.03570557]
[92.92017365 518.03735352]
[77.77149200 515.32983398]
[63.43444061 509.72583008]
[50.45731735 501.43768311]
[39.33679199 490.78045654]
[30.49888992 478.15997314]
[24.28267670 464.05722046]
[20.92725372 449.01022339]
[20.56255341 433.59329224]
[23.20431137 418.39529419]
[28.75339699 403.99703979]
[36.99953842 390.94921875]
[47.62927628 379.75115967]
[60.23788834 370.83181763]
[74.34480286 364.53341675]
[89.41190338 361.09814453]
[88.96530151 346.10479736]
[88.51869202 331.11145020]
[88.07209015 316.11810303]
[87.62548065 301.12475586]
[87.17887878 286.13140869]
[86.73226929 271.13806152]
[86.28566742 256.14468384]
[74.25646210 265.10562134]
[59.71231842 261.43579102]
[53.37462997 247.84042358]
[59.91530609 234.34155273]
[74.51280975 230.89002991]
[86.40564728 240.02871704]
[87.07543182 225.04368591]
[73.51561737 218.79380798]
[63.35416412 207.79881287]
[58.16237640 193.71299744]
[58.76062393 178.67205811]
[65.08885956 164.96923828]
[76.21102905 154.70570374]
[90.45341492 149.46830750]
[91.12319946 134.48327637]
[91.79298401 119.49823761]
[92.46276855 104.51319885]
[90.60402679 102.09770966]
[89.58309937 98.95251465]
[89.67194366 95.38662720]
[91.02457428 91.80519867]
[93.64485168 88.66400146]
[95.20537567 73.74539948]
[96.76589966 58.82679367]
[98.32642365 43.90819168]
[99.88694763 28.98958588]
[101.44747162 14.07098103]
[103.00798798 -0.84762388]
[103.45459747 -15.84097385]
[102.78481293 -30.82601357]
[102.11502838 -45.81105042]
[98.88466644 -51.57961273]
[99.03055573 -57.26078415]
[101.65512085 -61.25085831]
[101.43179321 -76.24919891]
[101.20846558 -91.24753571]
[100.98513794 -106.24587250]
[100.76181030 -121.24420929]
[100.53848267 -136.24253845]
[100.31515503 -151.24089050]
[100.09182739 -166.23922729]
[92.14992523 -179.92266846]
[99.69687653 -192.76371765]
[99.47354889 -207.76205444]
[83.92886353 -215.95938110]
[74.72397614 -230.82479858]
[74.31803131 -248.21557617]
[82.73268127 -263.33862305]
[97.57093811 -272.07159424]
[96.90115356 -287.05664062]
[96.23136902 -302.04165649]
[95.56158447 -317.02670288]
[94.89179993 -332.01174927]
[80.70141602 -337.53921509]
[69.99068451 -348.36511230]
[64.61531830 -362.61380005]
[65.50662231 -377.81661987]
[72.51016998 -391.33956909]
[84.41256714 -400.83972168]
[99.15163422 -404.67111206]
[114.17375183 -402.16995239]
[126.87624359 -393.76956177]
[135.05833435 -380.92535400]
[137.30239868 -365.86270142]
[133.21968079 -351.19125366]
[123.51750183 -339.45294189]
[109.87683868 -332.68151855]
[110.54662323 -317.69650269]
[111.21640778 -302.71145630]
[111.88619232 -287.72640991]
[112.55597687 -272.74136353]
[124.32995605 -268.15969849]
[133.53044128 -259.43319702]
[138.76632690 -247.83262634]
[139.22758484 -235.06678772]
[134.81036377 -223.03088379]
[126.13769531 -213.52510071]
[114.47188568 -207.98538208]
[114.69521332 -192.98704529]
[122.62114716 -180.37638855]
[115.09016418 -166.46255493]
[115.31349182 -151.46421814]
[115.53681946 -136.46586609]
[115.76014709 -121.46753693]
[115.98347473 -106.46920013]
[116.20680237 -91.47086334]
[116.43013000 -76.47252655]
[116.65345764 -61.47418594]
[117.10006714 -46.48083496]
[117.76985168 -31.49579811]
[118.43963623 -16.51075935]
[126.73935699 -29.00534439]
[140.13017273 -35.76449585]
[155.11175537 -35.02138519]
[167.76794434 -26.97026062]
[174.79046631 -13.71566772]
[174.34364319 1.27767539]
[166.54425049 14.09054470]
[153.43106079 21.37368774]
[138.43180847 21.22330666]
[125.46728516 13.67871284]
[117.92659760 0.71289915]
[116.36607361 15.63150406]
[114.80554962 30.55010796]
[113.24502563 45.46871185]
[111.68450165 60.38731766]
[110.12397766 75.30592346]
[108.56346130 90.22452545]
[107.44780731 105.18298340]
[106.77802277 120.16802216]
[106.10823822 135.15306091]
[105.43845367 150.13809204]
[119.15678406 156.62524414]
[129.31893921 167.84013367]
[134.39942932 182.05287170]
[133.65341187 197.08720398]
[127.22565460 210.65367126]
[116.12378693 220.69827271]
[102.06047058 225.71347046]
[101.39068604 240.69850159]
[101.27901459 255.69808960]
[101.72562408 270.69143677]
[102.17222595 285.68478394]
[102.61883545 300.67813110]
[103.06543732 315.67147827]
[103.51204681 330.66482544]
[103.95864868 345.65820312]
[104.40525818 360.65155029]
[118.85704803 362.97497559]
[132.62908936 367.92098999]
[145.24993896 375.31863403]
[156.28788757 384.91314697]
[165.36569214 396.37451172]
[172.17346191 409.30911255]
[176.47926331 423.27297974]
[178.13697815 437.78710938]
[177.09132385 452.35400391]
[173.37965393 466.47460938]
[167.13061523 479.66537476]
[158.55973816 491.47497559]
[147.96194458 501.49960327]
[135.70144653 509.39685059]
[122.19921875 514.89733887]
[107.91851044 517.81402588]
[108.14183807 532.81237793]
[108.36516571 547.81072998]
[108.58849335 562.80908203]
[109.25827789 577.79406738]
[110.37392426 592.75256348]
[111.48957825 607.71099854]
[112.60522461 622.66943359]
[113.72087097 637.62792969]
[128.58726501 640.12866211]
[142.42291260 646.11517334]
[154.42343140 655.23937988]
[163.89112854 666.97082520]
[170.27555847 680.62738037]
[173.20555115 695.41516113]
[172.51074219 710.47442627]
[168.23155212 724.92956543]
[160.61672974 737.94024658]
[150.10903931 748.75006104]
[137.31933594 756.73046875]
[122.99123383 761.41760254]
[107.95772552 762.53881836]
[93.09285736 760.02905273]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 196]
[11 195]
[12 194]
[13 193]
[14 192]
[19 191]
[20 190]
[21 189]
[22 188]
[37 172]
[38 171]
[39 170]
[40 169]
[41 168]
[42 167]
[43 166]
[44 165]
[50 164]
[51 163]
[58 156]
[59 155]
[60 154]
[61 153]
[66 152]
[67 151]
[68 150]
[69 149]
[70 148]
[71 147]
[72 146]
[73 135]
[74 134]
[75 133]
[78 132]
[79 131]
[80 130]
[81 129]
[82 128]
[83 127]
[84 126]
[85 125]
[87 123]
[88 122]
[93 115]
[94 114]
[95 113]
[96 112]
[97 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
