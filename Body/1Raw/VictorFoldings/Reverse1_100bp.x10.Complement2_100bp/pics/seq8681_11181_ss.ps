%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[107.89619446 562.77148438]
[106.33244324 547.72454834]
[109.49696350 532.93127441]
[117.07972717 519.84094238]
[128.33786011 509.73599243]
[142.16839600 503.60644531]
[140.60786438 488.68783569]
[139.04734802 473.76922607]
[135.96722412 470.11929321]
[135.14727783 464.49572754]
[137.66926575 458.38415527]
[136.55361938 443.42572021]
[135.43795776 428.46725464]
[134.32231140 413.50881958]
[133.20666504 398.55035400]
[132.09101868 383.59188843]
[118.61450958 377.24768066]
[110.06611633 364.92773438]
[108.82392120 349.88369751]
[115.32131195 336.14758301]
[127.90386963 327.45123291]
[126.78822327 312.49276733]
[125.67256927 297.53430176]
[124.55692291 282.57586670]
[122.66362762 267.69583130]
[119.99783325 252.93461609]
[117.33203888 238.17340088]
[114.66624451 223.41217041]
[112.00045013 208.65095520]
[102.12442780 197.50135803]
[107.28600311 182.54580688]
[104.62020111 167.78457642]
[101.95440674 153.02336121]
[99.28861237 138.26214600]
[96.62281799 123.50093079]
[93.95702362 108.73971558]
[90.30893707 94.19009399]
[85.69492340 79.91735840]
[81.08091736 65.64463043]
[76.46690369 51.37189484]
[71.85289764 37.09915924]
[67.23889160 22.82642746]
[55.63178635 12.07534695]
[59.07902908 -2.41484857]
[54.46501923 -16.68758202]
[49.85101318 -30.96031570]
[38.74377441 -37.51714706]
[35.19458771 -49.49993134]
[40.58316422 -60.32997131]
[36.18216705 -74.66982269]
[31.78116798 -89.00966644]
[25.20113945 -102.48940277]
[16.60257530 -114.78023529]
[8.00401211 -127.07107544]
[-0.59455198 -139.36190796]
[-9.19311619 -151.65275574]
[-15.01248646 -154.79066467]
[-17.93488312 -159.66473389]
[-17.85829735 -164.44000244]
[-26.08710480 -176.98139954]
[-34.31591415 -189.52281189]
[-47.79029846 -182.88800049]
[-61.97790527 -177.95938110]
[-76.66366577 -174.81164551]
[-91.62493134 -173.49252319]
[-106.63490295 -174.02201843]
[-121.46603394 -176.39208984]
[-135.89347839 -180.56681824]
[-149.69853210 -186.48291016]
[-162.67190552 -194.05067444]
[-174.61692810 -203.15539551]
[-185.35252380 -213.65905762]
[-194.71592712 -225.40240479]
[-202.56521606 -238.20741272]
[-208.78137207 -251.87997437]
[-213.27017212 -266.21282959]
[-215.96356201 -280.98864746]
[-216.82072449 -295.98348999]
[-215.82864380 -310.97000122]
[-213.00236511 -325.72097778]
[-208.38475037 -340.01284790]
[-202.04579163 -353.62890625]
[-194.08157349 -366.36276245]
[-184.61285400 -378.02136230]
[-173.78315735 -388.42794800]
[-161.75666809 -397.42480469]
[-148.71571350 -404.87548828]
[-134.85797119 -410.66711426]
[-120.39353180 -414.71179199]
[-105.54167175 -416.94830322]
[-90.52754211 -417.34268188]
[-75.57875061 -415.88894653]
[-60.92192078 -412.60916138]
[-46.77924347 -407.55303955]
[-33.36512375 -400.79724121]
[-20.88290596 -392.44415283]
[-9.52182674 -382.62045288]
[0.54588819 -371.47500610]
[9.16761303 -359.17681885]
[16.21264458 -345.91232300]
[21.57418251 -331.88256836]
[25.17094612 -317.30029297]
[26.94841003 -302.38653564]
[26.87962914 -287.36737061]
[24.96564484 -272.47052002]
[21.23547363 -257.92181396]
[15.74566460 -243.94175720]
[8.57944012 -230.74234009]
[-0.15456127 -218.52362061]
[-10.32393360 -207.47087097]
[-21.77451324 -197.75161743]
[-13.54570484 -185.21020508]
[-5.31689644 -172.66880798]
[3.09772205 -160.25131226]
[11.69628620 -147.96047974]
[20.29484940 -135.66964722]
[28.89341354 -123.37879944]
[37.49197769 -111.08796692]
[35.36515808 -125.93641663]
[37.26847839 -140.81517029]
[43.06453705 -154.65011597]
[52.33491135 -166.44250488]
[64.41036224 -175.34100342]
[78.41915131 -180.70326233]
[93.34998322 -182.14213562]
[108.12497711 -179.55378723]
[121.67751312 -173.12504578]
[133.02923584 -163.32002258]
[141.36062622 -150.84654236]
[146.07026672 -136.60507202]
[146.81814575 -121.62372589]
[143.55027771 -106.98402405]
[136.50257874 -93.74280548]
[126.18380737 -82.85597229]
[113.33891296 -75.10945129]
[98.89515686 -71.06247711]
[83.89525604 -71.00719452]
[69.42207336 -74.94760895]
[56.52042389 -82.59924316]
[46.12101364 -93.41066742]
[50.52201080 -79.07081604]
[54.92301178 -64.73097229]
[68.39590454 -53.48605728]
[64.12374115 -35.57432556]
[68.73775482 -21.30159187]
[73.35176086 -7.02885771]
[84.62884521 2.70134115]
[81.51161957 18.21241760]
[86.12563324 32.48515320]
[90.73963928 46.75788498]
[95.35365295 61.03061676]
[99.96765900 75.30335236]
[104.58166504 89.57608795]
[109.83015442 75.52427673]
[121.77838135 66.45565796]
[136.72406006 65.18023682]
[150.03611755 72.09322357]
[157.58964539 85.05254364]
[157.04412842 100.04262543]
[148.56857300 112.41860962]
[134.78924561 118.34568024]
[119.97581482 115.98726654]
[108.71823883 106.07392120]
[111.38403320 120.83513641]
[114.04982758 135.59635925]
[116.71562958 150.35757446]
[119.38142395 165.11878967]
[122.04721832 179.88000488]
[132.11390686 192.08541870]
[126.76166534 205.98516846]
[129.42745972 220.74638367]
[132.09326172 235.50759888]
[134.75904846 250.26881409]
[137.42485046 265.03002930]
[145.90534973 252.65744019]
[160.32046509 248.50962830]
[174.07981873 254.48294067]
[180.89279175 267.84646606]
[177.64460754 282.49053955]
[165.82028198 291.72012329]
[150.82574463 291.31558228]
[139.51538086 281.46020508]
[140.63102722 296.41867065]
[141.74667358 311.37713623]
[142.86231995 326.33557129]
[156.59568787 333.06921387]
[165.05883789 345.68951416]
[166.06202698 360.75137329]
[159.43577576 374.20309448]
[147.04946899 382.47625732]
[148.16511536 397.43469238]
[149.28076172 412.39315796]
[150.39642334 427.35162354]
[151.51206970 442.31005859]
[152.62771606 457.26852417]
[153.96594238 472.20870972]
[155.52647400 487.12731934]
[157.08699036 502.04592896]
[171.88659668 505.18069458]
[184.99215698 512.73712158]
[195.11970520 523.97491455]
[201.27705383 537.79309082]
[202.86096191 552.83789062]
[199.71627808 567.63543701]
[192.15106201 580.73590088]
[180.90647888 590.85589600]
[167.08418274 597.00402832]
[152.03829956 598.57781982]
[137.24291992 595.42321777]
[124.14749908 587.84924316]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 198]
[7 197]
[8 196]
[11 195]
[12 194]
[13 193]
[14 192]
[15 191]
[16 190]
[21 185]
[22 184]
[23 183]
[24 182]
[25 174]
[26 173]
[27 172]
[28 171]
[29 170]
[31 168]
[32 167]
[33 166]
[34 165]
[35 164]
[36 163]
[37 153]
[38 152]
[39 151]
[40 150]
[41 149]
[42 148]
[44 146]
[45 145]
[46 144]
[49 142]
[50 141]
[51 140]
[52 118]
[53 117]
[54 116]
[55 115]
[56 114]
[59 113]
[60 112]
[61 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
