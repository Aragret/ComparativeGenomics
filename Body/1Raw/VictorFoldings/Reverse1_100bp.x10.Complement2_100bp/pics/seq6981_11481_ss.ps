%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[19.23551559 612.36791992]
[29.92668343 601.70947266]
[43.09755707 594.33178711]
[39.55788422 579.75543213]
[36.01821518 565.17901611]
[32.47854233 550.60266113]
[28.93886948 536.02630615]
[25.67397881 550.66668701]
[19.37849236 564.28161621]
[10.33881378 576.25177002]
[-1.03381288 586.03253174]
[-14.22200871 593.17895508]
[-28.62579727 597.36590576]
[-43.58990479 598.40301514]
[-58.43356323 596.24291992]
[-72.48148346 590.98406982]
[-85.09458160 582.86553955]
[-95.69905090 572.25683594]
[-103.81244659 559.64044189]
[-109.06566620 545.59039307]
[-111.21973419 530.74591064]
[-110.17663574 515.78222656]
[-105.98384857 501.38009644]
[-98.83209991 488.19479370]
[-89.04674530 476.82611084]
[-77.07296753 467.79125977]
[-63.45547867 461.50125122]
[-48.81379318 458.24227905]
[-33.81400681 458.16256714]
[-19.13850594 461.26574707]
[-5.45493317 467.41064453]
[6.61420202 476.31771851]
[16.51983452 487.58175659]
[23.81132507 500.69030762]
[28.15776253 515.05126953]
[30.60348892 500.25201416]
[33.04921722 485.45272827]
[35.49494553 470.65347290]
[37.94067001 455.85418701]
[31.15349960 445.84115601]
[33.06995773 433.49163818]
[43.20162201 425.50964355]
[45.86741638 410.74841309]
[48.53321457 395.98721313]
[51.19900894 381.22598267]
[53.86480331 366.46475220]
[56.08992004 351.63073730]
[57.87238693 336.73699951]
[59.65485382 321.84329224]
[61.43732071 306.94958496]
[63.21978378 292.05584717]
[57.04970169 278.49932861]
[66.37207031 265.71636963]
[68.15453339 250.82264709]
[69.60395050 235.89283752]
[70.71960449 220.93438721]
[71.83525085 205.97593689]
[72.95089722 191.01748657]
[63.22524261 202.43727112]
[49.12611389 207.55728149]
[34.33898926 205.03916931]
[22.72918892 195.54113770]
[17.33148575 181.54597473]
[19.55682755 166.71195984]
[28.82351494 154.91668701]
[42.70925903 149.24339294]
[57.58435822 151.17509460]
[69.56049347 160.20681763]
[75.50701141 173.97682190]
[78.82926941 159.34936523]
[82.15152740 144.72190857]
[85.47379303 130.09445190]
[88.79605103 115.46698761]
[81.16312408 103.15095520]
[84.37232208 89.02129364]
[96.57649231 81.21075439]
[99.89875031 66.58329010]
[103.22100830 51.95582962]
[106.43428040 37.30404282]
[109.53839111 22.62874222]
[104.82439423 7.52613258]
[115.02799988 -3.32447600]
[110.31400299 -18.42708588]
[120.51760864 -29.27769279]
[115.80361176 -44.38030243]
[126.00721741 -55.23091125]
[129.11132812 -69.90621185]
[115.69801331 -83.55973053]
[113.24330902 -102.39012909]
[122.55963898 -118.76495361]
[139.72508240 -126.15686035]
[142.17082214 -140.95613098]
[144.61654663 -155.75540161]
[147.06227112 -170.55467224]
[145.37396240 -179.53172302]
[149.65615845 -185.55538940]
[152.32194519 -200.31660461]
[154.98774719 -215.07781982]
[157.65354919 -229.83905029]
[143.88708496 -235.98297119]
[131.99140930 -245.24345398]
[122.65814209 -257.08209229]
[116.42989349 -270.81063843]
[113.66876984 -285.63085938]
[114.53530121 -300.68121338]
[118.97910309 -315.08663940]
[126.74182129 -328.00961304]
[137.37213135 -338.69885254]
[150.25202942 -346.53286743]
[164.63265991 -351.05621338]
[179.67797852 -352.00592041]
[194.51325989 -349.32675171]
[208.27600098 -343.17446899]
[220.16604614 -333.90676880]
[229.49212646 -322.06246948]
[235.71205139 -308.33016968]
[238.46418762 -293.50827026]
[237.58854675 -278.45846558]
[233.13600159 -264.05572510]
[225.36546326 -251.13745117]
[214.72865295 -240.45466614]
[201.84402466 -232.62846375]
[187.46064758 -228.11383057]
[172.41476440 -227.17324829]
[169.74896240 -212.41203308]
[167.08317566 -197.65081787]
[164.41737366 -182.88960266]
[161.86154175 -168.10894775]
[159.41581726 -153.30967712]
[156.97009277 -138.51040649]
[154.52435303 -123.71112823]
[163.71852112 -117.39306641]
[169.91925049 -108.05769348]
[172.19883728 -97.03253174]
[170.19042969 -85.90261078]
[164.14653015 -76.28266907]
[154.90785217 -69.58286285]
[143.78662109 -66.80210114]
[140.68252563 -52.12680054]
[145.61854553 -38.07386780]
[135.19291687 -26.17358398]
[140.12893677 -12.12065029]
[129.70330811 -0.22036588]
[134.63932800 13.83256721]
[124.21369934 25.73285103]
[121.10958862 40.40815353]
[122.80085754 47.60269547]
[117.84847260 55.27809143]
[114.52620697 69.90554810]
[111.20394897 84.53301239]
[118.83687592 96.84904480]
[115.62767792 110.97870636]
[103.42350769 118.78924561]
[100.10124969 133.41670227]
[96.77899170 148.04417419]
[93.45673370 162.67163086]
[90.13446808 177.29908752]
[87.90935516 192.13313293]
[86.79370880 207.09158325]
[85.67805481 222.05003357]
[84.56240845 237.00849915]
[86.83048248 241.70986938]
[87.04676819 246.34738159]
[85.57917786 250.15017700]
[83.04825592 252.60511780]
[81.26578522 267.49884033]
[87.30837250 282.12066650]
[78.11350250 293.83831787]
[76.33103943 308.73202515]
[74.54856873 323.62576294]
[72.76610565 338.51947021]
[70.98364258 353.41317749]
[72.83350372 357.34155273]
[73.29107666 361.26010132]
[72.53038788 364.73239136]
[70.84936523 367.42324829]
[68.62602234 369.13055420]
[65.96022797 383.89178467]
[63.29442978 398.65298462]
[60.62863541 413.41421509]
[57.96284103 428.17544556]
[64.58972168 445.35583496]
[52.73994446 458.29992676]
[50.29421616 473.09918213]
[47.84848785 487.89846802]
[45.40275955 502.69772339]
[42.95703125 517.49700928]
[43.51524353 532.48663330]
[47.05491638 547.06298828]
[50.59458923 561.63934326]
[54.13426208 576.21575928]
[57.67393494 590.79211426]
[72.76157379 591.30761719]
[87.15028381 595.87573242]
[99.77233124 604.15740967]
[109.69108582 615.53814697]
[116.17048645 629.17340088]
[118.72974396 644.05133057]
[117.17892456 659.06793213]
[111.63312531 673.10876465]
[102.50386810 685.13208008]
[90.46861267 694.24554443]
[76.42045593 699.77288818]
[61.40185165 701.30401611]
[46.52729416 698.72521973]
[32.90056992 692.22790527]
[21.53287315 682.29425049]
[13.26775932 669.66131592]
[8.71855640 655.26660156]
[8.22284603 640.17834473]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 192]
[4 191]
[5 190]
[6 189]
[7 188]
[35 187]
[36 186]
[37 185]
[38 184]
[39 183]
[42 181]
[43 180]
[44 179]
[45 178]
[46 177]
[47 172]
[48 171]
[49 170]
[50 169]
[51 168]
[53 166]
[54 165]
[55 161]
[56 160]
[57 159]
[58 158]
[69 157]
[70 156]
[71 155]
[72 154]
[73 153]
[76 150]
[77 149]
[78 148]
[79 146]
[80 145]
[82 143]
[84 141]
[86 139]
[87 138]
[91 131]
[92 130]
[93 129]
[94 128]
[96 127]
[97 126]
[98 125]
[99 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
