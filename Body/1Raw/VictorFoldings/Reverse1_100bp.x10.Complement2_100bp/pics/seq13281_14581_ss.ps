%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCUACUACCUGGGCCUCGUGUAUUUAUCAUACCGAAACUUCUUCCGCACCCAUGUCUACACGUCCUUACGAUCCACACCAACCAACUACGGCUAACAxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[58.06889343 669.22625732]
[46.60770416 678.93994141]
[33.93055725 687.00238037]
[20.27361107 693.26354980]
[5.89129210 697.60662842]
[-8.94846821 699.95086670]
[-23.96921349 700.25244141]
[-38.89111710 698.50585938]
[-53.43619156 694.74359131]
[-67.33347321 689.03576660]
[-80.32405853 681.48870850]
[-92.16595459 672.24298096]
[-102.63853455 661.47088623]
[-111.54671478 649.37298584]
[-118.72454071 636.17480469]
[-124.03828430 622.12213135]
[-127.38896942 607.47674561]
[-128.71415710 592.51153564]
[-127.98917389 577.50524902]
[-125.22751617 562.73748779]
[-120.48063660 548.48333740]
[-113.83696747 535.00836182]
[-105.42027283 522.56353760]
[-95.38735199 511.38079834]
[-83.92510986 501.66839600]
[-71.24709320 493.60726929]
[-57.58946991 487.34762573]
[-43.20668030 483.00607300]
[-28.36666679 480.66348267]
[-13.34588909 480.36349487]
[1.57582486 482.11169434]
[5.33212566 467.58963013]
[9.08842659 453.06756592]
[12.84472656 438.54550171]
[16.60102844 424.02346802]
[15.23270035 416.76055908]
[20.52286911 409.31396484]
[24.49496460 394.84942627]
[28.46706009 380.38491821]
[32.43915558 365.92037964]
[36.41125488 351.45587158]
[21.79998779 340.93563843]
[12.32572174 325.58547974]
[9.46092415 307.74148560]
[13.66986465 290.13101196]
[24.33360291 275.45587158]
[39.84085464 265.97778320]
[57.83141708 263.16989136]
[60.93552780 248.49459839]
[64.03963470 233.81929016]
[67.14374542 219.14399719]
[70.24785614 204.46868896]
[73.35196686 189.79338074]
[76.45607758 175.11808777]
[79.56018829 160.44277954]
[74.62416077 146.38984680]
[85.04979706 134.48956299]
[88.15390778 119.81426239]
[91.25801849 105.13896179]
[89.71247101 97.22796631]
[94.51913452 90.26902771]
[81.87375641 98.33714294]
[66.98494720 96.51416016]
[56.65966034 85.63351440]
[55.61848068 70.66969299]
[64.33742523 58.46395111]
[78.83029938 54.59659195]
[92.47116852 60.83572388]
[99.02380371 74.33073425]
[103.84980011 60.12827682]
[108.67579651 45.92582321]
[113.50179291 31.72336578]
[112.59062195 25.17498589]
[114.79270935 19.93591881]
[118.68869781 17.17361641]
[123.93541718 3.12114477]
[129.18212891 -10.93132687]
[134.42884827 -24.98379707]
[139.46577454 -39.11282730]
[144.29176331 -53.31528473]
[149.11776733 -67.51773834]
[153.94375610 -81.72019196]
[153.03257751 -88.26857758]
[155.23468018 -93.50764465]
[159.13066101 -96.26994324]
[164.37738037 -110.32241821]
[169.62409973 -124.37488556]
[174.87081909 -138.42735291]
[161.43098450 -145.11979675]
[148.76434326 -153.18041992]
[137.00967407 -162.52095032]
[126.29575348 -173.03901672]
[116.73999023 -184.61940002]
[108.44707489 -197.13519287]
[101.50786591 -210.44927979]
[95.99839020 -224.41580200]
[91.97902679 -238.88169861]
[89.49379730 -253.68850708]
[88.56993866 -268.67398071]
[89.21757507 -283.67391968]
[91.42961121 -298.52398682]
[95.18180847 -313.06146240]
[100.43305206 -327.12710571]
[107.12580872 -340.56677246]
[115.18675232 -353.23321533]
[124.52756500 -364.98767090]
[135.04589844 -375.70132446]
[146.62649536 -385.25680542]
[159.14250183 -393.54943848]
[172.45675659 -400.48831177]
[186.42340088 -405.99743652]
[200.88940430 -410.01647949]
[215.69627380 -412.50134277]
[230.68176270 -413.42483521]
[245.68168640 -412.77682495]
[260.53170776 -410.56442261]
[275.06909180 -406.81188965]
[289.13461304 -401.56030273]
[302.57412720 -394.86721802]
[315.24038696 -386.80596924]
[326.99459839 -377.46487427]
[337.70800781 -366.94628906]
[347.26318359 -355.36544800]
[355.55551147 -342.84924316]
[362.49407959 -329.53479004]
[368.00286865 -315.56802368]
[372.02151489 -301.10192871]
[374.50604248 -286.29501343]
[375.42916870 -271.30947876]
[374.78079224 -256.30957031]
[372.56805420 -241.45962524]
[368.81515503 -226.92230225]
[363.56320190 -212.85691833]
[356.86981201 -199.41758728]
[348.80822754 -186.75152588]
[339.46685791 -174.99752808]
[328.94799805 -164.28439331]
[317.36694336 -154.72946167]
[304.85052490 -146.43745422]
[291.53594971 -139.49922180]
[277.56903076 -133.99076843]
[263.10284424 -129.97245789]
[248.29585266 -127.48830414]
[233.31031799 -126.56554413]
[218.31042480 -127.21427155]
[203.46051025 -129.42738342]
[188.92329407 -133.18063354]
[183.67657471 -119.12816620]
[178.42985535 -105.07569885]
[173.18313599 -91.02322388]
[168.14620972 -76.89419556]
[163.32022095 -62.69174194]
[158.49421692 -48.48928452]
[153.66822815 -34.28683090]
[154.93818665 -29.68289375]
[153.32948303 -24.23229218]
[148.48132324 -19.73707962]
[143.23460388 -5.68460846]
[137.98788452 8.36786270]
[132.74116516 22.42033386]
[127.70425415 36.54936218]
[122.87825775 50.75181961]
[118.05225372 64.95427704]
[113.22625732 79.15673065]
[109.14659119 93.59128571]
[105.93331909 108.24307251]
[102.82920837 122.91837311]
[99.72509766 137.59367371]
[104.43909454 152.69628906]
[94.23548889 163.54689026]
[91.13137817 178.22219849]
[88.02726746 192.89749146]
[84.92316437 207.57279968]
[81.81905365 222.24810791]
[78.71494293 236.92340088]
[75.61083221 251.59870911]
[72.50672150 266.27401733]
[83.12545013 272.14938354]
[91.85450745 280.55960083]
[98.10588837 290.92779541]
[101.46117401 302.54556274]
[101.69950867 314.62139893]
[98.81214905 326.33456421]
[93.00252533 336.89086914]
[84.67192841 345.57662964]
[74.39183044 351.80670166]
[62.86465454 355.16415405]
[50.87577820 355.42797852]
[46.90368271 369.89248657]
[42.93158340 384.35702515]
[38.95948792 398.82153320]
[34.98739243 413.28607178]
[31.12308693 427.77975464]
[27.36678696 442.30181885]
[23.61048508 456.82388306]
[19.85418510 471.34594727]
[16.09788322 485.86798096]
[29.99578285 491.57431030]
[42.98719025 499.11999512]
[54.83007812 508.36444092]
[65.30383301 519.13543701]
[74.21331787 531.23229980]
[81.39257050 544.42974854]
[86.70783997 558.48187256]
[90.06010437 573.12683105]
[91.38691711 588.09191895]
[90.66355133 603.09826660]
[87.90349579 617.86633301]
[83.15815735 632.12103271]
[76.51594543 645.59674072]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 197]
[32 196]
[33 195]
[34 194]
[35 193]
[37 192]
[38 191]
[39 190]
[40 189]
[41 188]
[48 177]
[49 176]
[50 175]
[51 174]
[52 173]
[53 172]
[54 171]
[55 170]
[57 168]
[58 167]
[59 166]
[61 165]
[69 164]
[70 163]
[71 162]
[72 161]
[75 160]
[76 159]
[77 158]
[78 157]
[79 154]
[80 153]
[81 152]
[82 151]
[85 150]
[86 149]
[87 148]
[88 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
