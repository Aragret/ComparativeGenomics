%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAGAAAUGAUAUUUUCGAUAACACAUUCGAUCAGUAUAAUUCAACAACCGAGUCCUCAAACUAUCAAGAACCCGUCACUCUCACUCAUCAUCUUACAAxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[75.67834473 868.36450195]
[60.83212662 870.55249023]
[45.86671829 871.66357422]
[30.86015511 871.69183350]
[15.89067173 870.63714600]
[1.03631186 868.50506592]
[-13.62547970 865.30670166]
[-28.01826096 861.05871582]
[-42.06699371 855.78320312]
[-55.69843674 849.50775146]
[-68.84152222 842.26501465]
[-81.42771912 834.09277344]
[-93.39141083 825.03363037]
[-104.67023468 815.13482666]
[-115.20537567 804.44799805]
[-124.94190979 793.02880859]
[-133.82907104 780.93682861]
[-141.82054138 768.23510742]
[-148.87464905 754.98980713]
[-154.95460510 741.27008057]
[-160.02871704 727.14733887]
[-164.07054138 712.69531250]
[-167.05899048 697.98931885]
[-168.97848511 683.10595703]
[-169.81904602 668.12292480]
[-169.57624817 653.11834717]
[-168.25138855 638.17034912]
[-165.85134888 623.35687256]
[-162.38867188 608.75524902]
[-157.88139343 594.44158936]
[-152.35301208 580.49041748]
[-145.83235168 566.97454834]
[-138.35340881 553.96441650]
[-129.95516968 541.52789307]
[-120.68143463 529.72979736]
[-110.58054352 518.63159180]
[-99.70515442 508.29119873]
[-88.11197662 498.76251221]
[-75.86145020 490.09518433]
[-63.01743698 482.33444214]
[-49.64690399 475.52072144]
[-35.81956482 469.68957520]
[-21.60750198 464.87136841]
[-7.08481693 461.09124756]
[7.67277813 458.36889648]
[22.58834267 456.71853638]
[37.58411026 456.14877319]
[52.58190536 456.66253662]
[67.50353241 458.25717163]
[70.16932678 443.49594116]
[72.83512115 428.73474121]
[75.50091553 413.97351074]
[78.16670990 399.21231079]
[79.83824921 384.30572510]
[80.50803375 369.32067871]
[81.17782593 354.33566284]
[81.84761047 339.35061646]
[82.51739502 324.36557007]
[83.18717957 309.38052368]
[83.85696411 294.39550781]
[69.57783508 289.91711426]
[56.93484116 281.88894653]
[46.79302979 270.85317993]
[39.84815216 257.55801392]
[36.57894897 242.90698242]
[37.21412659 227.89746094]
[41.71638870 213.55287170]
[49.78456116 200.85282898]
[60.87373734 190.66625977]
[74.23206329 183.69198608]
[88.95172882 180.41073608]
[89.62151337 165.42568970]
[90.29129791 150.44065857]
[90.96109009 135.45561218]
[91.63087463 120.47058105]
[92.30065918 105.48554230]
[89.72917938 100.91372681]
[89.90224457 95.22660828]
[93.22005463 90.06626892]
[94.33570862 75.10781860]
[95.45135498 60.14936447]
[94.55854034 45.17596054]
[91.67326355 30.45606804]
[88.78799438 15.73617649]
[84.06632996 7.91673136]
[85.97105408 0.77573621]
[83.30525970 -13.98548126]
[80.63946533 -28.74669838]
[65.60220337 -29.98892593]
[51.39916229 -35.08166885]
[38.99872971 -43.67769623]
[29.24638748 -55.19091797]
[22.80706787 -68.83634186]
[20.11981392 -83.68360138]
[21.36784744 -98.72038269]
[26.46607399 -112.92145538]
[35.06688690 -125.31856537]
[46.58387375 -135.06646729]
[60.23178101 -141.50051880]
[75.08007812 -144.18203735]
[90.11637878 -142.92819214]
[104.31548309 -137.82447815]
[116.70927429 -129.21888733]
[126.45272064 -117.69813538]
[132.88150024 -104.04774475]
[135.55728149 -89.19841766]
[134.29763794 -74.16259766]
[129.18844604 -59.96546936]
[120.57806396 -47.57500076]
[109.05355835 -37.83600235]
[95.40068054 -31.41249466]
[98.06648254 -16.65127563]
[100.73227692 -1.89005935]
[103.50788879 12.85090351]
[106.39315796 27.57079506]
[109.27842712 42.29068756]
[113.60088348 27.92696762]
[122.09868622 15.56625080]
[133.96188354 6.38667822]
[148.05975342 1.26319039]
[163.04856873 0.68412441]
[177.49969482 4.70467329]
[190.03575134 12.94162464]
[199.46186829 24.60988426]
[204.87962341 38.59730530]
[205.77261353 53.57070160]
[202.05572510 68.10289764]
[194.08325195 80.80878448]
[182.61505127 90.47731781]
[168.74421692 96.18694305]
[153.79281616 97.39347076]
[139.18592834 93.98188782]
[126.31578827 86.27737427]
[116.40909576 75.01427460]
[110.40980530 61.26501465]
[109.29415894 76.22346497]
[108.17851257 91.18192291]
[107.28569794 106.15532684]
[106.61591339 121.14036560]
[105.94612885 136.12539673]
[105.27633667 151.11044312]
[104.60655212 166.09547424]
[103.93676758 181.08052063]
[118.30500031 185.66191101]
[130.98785400 193.80014038]
[141.12400818 204.93540955]
[148.02696228 218.30462646]
[151.23150635 232.99369812]
[150.52507019 248.00001526]
[145.96179199 262.30096436]
[137.85847473 274.92352295]
[126.77254486 285.01046753]
[113.46372986 291.87866211]
[98.84200287 295.06527710]
[98.17221832 310.05032349]
[97.50243378 325.03536987]
[96.83264923 340.02038574]
[96.16286469 355.00543213]
[95.49307251 369.99047852]
[94.82328796 384.97552490]
[104.65529633 373.64715576]
[119.02080536 369.33065796]
[133.46850586 373.36352539]
[143.52162170 384.49612427]
[146.06507874 399.27890015]
[140.31077576 413.13128662]
[128.04171753 421.76089478]
[113.05963898 422.49383545]
[100.00688171 415.10290527]
[92.92792511 401.87811279]
[90.26213074 416.63931274]
[87.59633636 431.40054321]
[84.93054199 446.16174316]
[82.26474762 460.92297363]
[96.80156708 464.64834595]
[111.03167725 469.41299438]
[124.88088989 475.19201660]
[138.27699280 481.95532227]
[151.15014648 489.66763306]
[163.43324280 498.28872681]
[175.06222534 507.77368164]
[185.97648621 518.07305908]
[196.11911011 529.13311768]
[205.43722534 540.89617920]
[213.88224792 553.30102539]
[221.41014099 566.28283691]
[227.98165894 579.77404785]
[233.56256104 593.70428467]
[238.12373352 608.00091553]
[241.64138794 622.58941650]
[244.09719849 637.39367676]
[245.47836304 652.33660889]
[245.77767944 667.34020996]
[244.99357605 682.32629395]
[243.13014221 697.21673584]
[240.19711304 711.93389893]
[236.20976257 726.40106201]
[231.18887329 740.54278564]
[225.16064453 754.28533936]
[218.15649414 767.55712891]
[210.21292114 780.28887939]
[201.37136841 792.41424561]
[191.67791748 803.86999512]
[181.18310547 814.59649658]
[169.94165039 824.53765869]
[158.01216125 833.64178467]
[145.45684814 841.86138916]
[132.34114075 849.15356445]
[118.73342896 855.48034668]
[104.70466614 860.80871582]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 174]
[50 173]
[51 172]
[52 171]
[53 170]
[54 160]
[55 159]
[56 158]
[57 157]
[58 156]
[59 155]
[60 154]
[71 143]
[72 142]
[73 141]
[74 140]
[75 139]
[76 138]
[79 137]
[80 136]
[81 135]
[82 116]
[83 115]
[84 114]
[86 113]
[87 112]
[88 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
