%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCGGCGUGAGCAUUCCCCACCUAAAAAGAUACAUCGGCAACUCAACACCAUCAGUUUUACAUUAUUAAUAAUCAUCAUUCCGAUCCUCCCACAACUAAxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[232.04856873 213.83338928]
[237.23130798 199.74844360]
[243.53059387 186.12620544]
[230.46641541 178.75552368]
[215.57969666 179.24037170]
[207.36245728 165.72048950]
[194.29826355 158.34979248]
[181.23408508 150.97911072]
[164.71504211 159.72062683]
[146.11666870 156.71574402]
[132.98316956 143.00003052]
[130.75233459 123.99058533]
[117.37206268 117.21059418]
[103.99179077 110.43060303]
[90.56140900 103.75040436]
[77.08168030 97.17037964]
[63.60194397 90.59034729]
[50.12220764 84.01032257]
[58.73502731 96.29117584]
[62.69491959 110.75904846]
[61.53668213 125.71426392]
[55.39638138 139.39990234]
[44.99537277 150.20819092]
[31.55555916 156.86936951]
[16.65583611 158.60090637]
[2.04660630 155.19938660]
[-10.55585098 147.06439209]
[-19.67101288 135.15162659]
[-24.22803688 120.86060333]
[-23.69157219 105.87019348]
[-18.12463760 91.94147491]
[-8.18123531 80.71076965]
[4.97049713 73.49745178]
[19.78550529 71.14894104]
[34.52480698 73.94167328]
[22.97850418 64.36655426]
[11.43220139 54.79143524]
[-0.11409990 45.21631622]
[-15.67586899 42.36290741]
[-20.53369141 28.28275108]
[-31.07224655 38.97014236]
[-42.49053574 48.71201706]
[-54.70402145 57.43624496]
[-67.62227631 65.07823944]
[-81.14965820 71.58142090]
[-95.18601227 76.89764404]
[-109.62741852 80.98754120]
[-124.36695862 83.82083130]
[-139.29548645 85.37654114]
[-154.30250549 85.64315796]
[-169.27688599 84.61869812]
[-184.10775757 82.31074524]
[-198.68531799 78.73640442]
[-212.90165710 73.92211914]
[-226.65148926 67.90354156]
[-239.83305359 60.72523117]
[-252.34872437 52.44033432]
[-264.10583496 43.11019516]
[-275.01736450 32.80388641]
[-285.00250244 21.59771347]
[-293.98736572 9.57464695]
[-301.90536499 -3.17629790]
[-308.69790649 -16.56071663]
[-314.31472778 -30.47951126]
[-318.71420288 -44.82963562]
[-321.86376953 -59.50483704]
[-323.74014282 -74.39646912]
[-324.32937622 -89.39427948]
[-323.62716675 -104.38722229]
[-321.63864136 -119.26428986]
[-318.37860107 -133.91534424]
[-313.87109375 -148.23191833]
[-308.14956665 -162.10800171]
[-301.25637817 -175.44085693]
[-293.24252319 -188.13177490]
[-284.16735840 -200.08680725]
[-274.09805298 -211.21742249]
[-263.10916138 -221.44122314]
[-251.28208923 -230.68251038]
[-238.70434570 -238.87287903]
[-225.46908569 -245.95166016]
[-211.67428589 -251.86647034]
[-197.42208862 -256.57348633]
[-182.81799316 -260.03790283]
[-167.97015381 -262.23403931]
[-152.98847961 -263.14566040]
[-137.98390198 -262.76596069]
[-123.06752014 -261.09780884]
[-108.34974670 -258.15356445]
[-93.93956757 -253.95495605]
[-79.94367218 -248.53314209]
[-66.46566772 -241.92820740]
[-53.60535812 -234.18910217]
[-41.45795441 -225.37309265]
[-30.11338997 -215.54547119]
[-19.65566063 -204.77897644]
[-10.16219044 -193.15333557]
[-1.70326841 -180.75462341]
[5.65847778 -167.67463684]
[11.86854267 -154.01020813]
[16.88094902 -139.86251831]
[20.65858650 -125.33629608]
[23.17348671 -110.53911591]
[24.40702820 -95.58051300]
[24.35007858 -80.57123566]
[23.00305939 -65.62242889]
[20.37594414 -50.84474945]
[16.48818398 -36.34762192]
[11.36856365 -22.23837280]
[5.05498457 -8.62146473]
[-2.40580630 4.40228462]
[-10.95857143 16.73645020]
[3.77732801 18.90497971]
[9.46101952 33.67001343]
[21.00732231 43.24513245]
[32.55362320 52.82025528]
[44.09992599 62.39537430]
[56.70223618 70.53058624]
[70.18196869 77.11061859]
[83.66170502 83.69064331]
[97.14144135 90.27066803]
[105.19078827 90.69553375]
[110.77178192 97.05033112]
[124.15205383 103.83032227]
[137.53233337 110.61031342]
[146.66990662 103.68797302]
[157.68110657 100.68895721]
[168.96507263 102.00959015]
[178.89608765 107.42105103]
[186.05772400 116.10791779]
[189.44490051 126.79085541]
[188.60476685 137.91491699]
[201.66896057 145.28561401]
[214.73313904 152.65629578]
[230.55429077 152.69865417]
[237.83709717 165.69134521]
[250.90129089 173.06202698]
[259.30364990 160.62631226]
[268.67941284 148.90704346]
[278.96777344 137.98022461]
[290.10205078 127.91670227]
[302.00997925 118.78176117]
[314.61437988 110.63463593]
[327.83349609 103.52817535]
[341.58154297 97.50845337]
[355.76940918 92.61452484]
[370.30508423 88.87812805]
[385.09426880 86.32348633]
[400.04107666 84.96717072]
[415.04855347 84.81797791]
[430.01934814 85.87687683]
[444.85641479 88.13700867]
[459.46347046 91.58369446]
[473.74584961 96.19460297]
[487.61087036 101.93981171]
[500.96862793 108.78207397]
[513.73248291 116.67700958]
[525.81970215 125.57341766]
[537.15179443 135.41358948]
[547.65539551 146.13372803]
[557.26226807 157.66429138]
[565.91021729 169.93051147]
[573.54302979 182.85281372]
[580.11132812 196.34741211]
[585.57238770 210.32678223]
[589.89093018 224.70025635]
[593.03881836 239.37461853]
[594.99572754 254.25469971]
[595.74890137 269.24398804]
[595.29351807 284.24530029]
[593.63250732 299.16131592]
[590.77661133 313.89529419]
[586.74438477 328.35168457]
[581.56201172 342.43673706]
[575.26300049 356.05911255]
[567.88824463 369.13046265]
[559.48565674 381.56597900]
[550.10961914 393.28503418]
[539.82098389 404.21163940]
[528.68652344 414.27490234]
[516.77838135 423.40957642]
[504.17379761 431.55642700]
[490.95452881 438.66259766]
[477.20632935 444.68200684]
[463.01834106 449.57565308]
[448.48260498 453.31170654]
[433.69335938 455.86602783]
[418.74652100 457.22201538]
[403.73907471 457.37088013]
[388.76828003 456.31164551]
[373.93127441 454.05120850]
[359.32427979 450.60418701]
[345.04202271 445.99295044]
[331.17712402 440.24743652]
[317.81951904 433.40487671]
[305.05581665 425.50967407]
[292.96881104 416.61300659]
[281.63690186 406.77258301]
[271.13357544 396.05221558]
[261.52691650 384.52142334]
[252.87928772 372.25503540]
[245.24671936 359.33255005]
[238.67875671 345.83779907]
[233.21797180 331.85830688]
[228.89978027 317.48474121]
[225.75218201 302.81030273]
[223.79560852 287.93020630]
[223.04273987 272.94088745]
[223.49845886 257.93957520]
[225.15982056 243.02362061]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 137]
[4 136]
[6 134]
[7 133]
[8 132]
[12 125]
[13 124]
[14 123]
[15 121]
[16 120]
[17 119]
[18 118]
[35 117]
[36 116]
[37 115]
[38 114]
[40 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
