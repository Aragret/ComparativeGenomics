%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[200.02003479 443.03713989]
[204.37498474 428.66046143]
[210.56925964 414.97518921]
[218.49687195 402.21557617]
[228.02217102 390.59991455]
[238.98217773 380.32696533]
[251.18933105 371.57254028]
[244.11222839 358.34701538]
[237.03512573 345.12149048]
[222.74983215 341.06365967]
[215.38423157 327.75192261]
[219.73728943 312.79568481]
[212.66018677 299.57015991]
[205.58308411 286.34463501]
[198.50598145 273.11911011]
[191.03823853 260.11016846]
[176.53674316 256.90982056]
[168.39187622 244.06008911]
[171.84700012 228.87127686]
[163.99525452 216.09043884]
[156.14349365 203.30960083]
[148.29173279 190.52874756]
[140.43998718 177.74790955]
[132.58822632 164.96707153]
[124.64154816 152.24502563]
[116.60037231 139.58250427]
[108.55919647 126.91998291]
[100.42398071 114.31766510]
[88.02384186 107.85793304]
[87.03461456 93.91114044]
[78.80580902 81.36973572]
[70.57700348 68.82833862]
[72.40602112 83.71640778]
[70.79959106 98.63014221]
[65.84195709 112.78718567]
[57.79320908 125.44489288]
[47.07555771 135.93927002]
[34.25122833 143.71980286]
[19.99296379 148.37832642]
[5.04872370 149.67048645]
[-9.79754925 147.52847290]
[-23.76704788 142.06468201]
[-36.12696075 133.56570435]
[-46.22890854 122.47739410]
[-53.54296875 109.38141632]
[-57.68545532 94.96476746]
[-58.43906784 79.98371124]
[-55.76426697 65.22412109]
[-49.80136871 51.46026230]
[-40.86317444 39.41415405]
[-29.41856956 29.71771240]
[-16.06790924 22.87959290]
[-1.51154363 19.25851250]
[13.48692894 19.04442215]
[28.14071846 22.24855423]
[41.68111420 28.70282555]
[53.39781952 38.06866074]
[62.67706680 49.85615540]
[59.57295609 35.18085098]
[56.46884537 20.50555038]
[53.36473465 5.83024788]
[50.26062393 -8.84505463]
[47.15651321 -23.52035713]
[29.75978088 -33.57188034]
[25.43074417 -52.87895203]
[36.52268982 -68.89404297]
[32.76638794 -83.41609955]
[29.01008797 -97.93815613]
[25.25378799 -112.46022034]
[21.28169060 -126.92474365]
[17.09467888 -141.32852173]
[5.81282234 -152.42042542]
[9.68996620 -166.80155945]
[5.50295448 -181.20533752]
[-3.89896584 -169.51757812]
[-18.89870071 -169.42834473]
[-28.43900299 -181.00343323]
[-25.48711777 -195.71011353]
[-12.21906376 -202.70716858]
[1.58334672 -196.83786011]
[-1.52076340 -211.51316833]
[-4.62487364 -226.18846130]
[-7.83814764 -240.84025574]
[-11.16040707 -255.46771240]
[-14.48266602 -270.09518433]
[-29.55180168 -270.22891235]
[-44.18376160 -273.83477783]
[-57.58946609 -280.71838379]
[-69.04595947 -290.50845337]
[-77.93541718 -302.67703247]
[-83.77842712 -316.56787109]
[-86.25988770 -331.43191528]
[-85.24597931 -346.46749878]
[-80.79138184 -360.86376953]
[-73.13632202 -373.84442139]
[-62.69363785 -384.70935059]
[-50.02647781 -392.87268066]
[-35.81797028 -397.89413452]
[-20.83436203 -399.50292969]
[-5.88370132 -397.61230469]
[8.22774220 -392.32421875]
[20.73895645 -383.92382812]
[30.97522736 -372.86419678]
[38.38452530 -359.74172974]
[42.56727600 -345.26412964]
[43.29790878 -330.21212769]
[40.53702164 -315.39746094]
[34.43350983 -301.61907959]
[25.31652069 -289.62002563]
[13.67772770 -280.04739380]
[0.14479375 -273.41741943]
[3.46705317 -258.78997803]
[6.78931284 -244.16252136]
[11.33620548 -238.33605957]
[10.05042839 -229.29257202]
[13.15453911 -214.61727905]
[16.25864983 -199.94197083]
[19.90673637 -185.39234924]
[24.09374809 -170.98857117]
[35.07612228 -160.92692566]
[31.49846268 -145.51553345]
[35.68547440 -131.11175537]
[39.36521912 -128.06733704]
[41.17154694 -122.67899323]
[39.77584457 -116.21651459]
[43.53214645 -101.69445801]
[47.28844833 -87.17240143]
[51.04475021 -72.65033722]
[60.96597672 -70.01591492]
[68.96096802 -63.44966888]
[73.54453278 -54.08463287]
[73.82941437 -43.58118820]
[69.69721222 -33.83275223]
[61.83181763 -26.62446594]
[64.93592834 -11.94916439]
[68.04003906 2.72613788]
[71.14414978 17.40143967]
[74.24826050 32.07674408]
[77.35237122 46.75204468]
[83.11840057 60.59952927]
[91.34720612 73.14093018]
[99.57601929 85.68233490]
[111.97615814 92.14206696]
[112.96538544 106.08885956]
[120.28964233 111.54716492]
[121.22172546 118.87880707]
[129.26289368 131.54133606]
[137.30407715 144.20385742]
[144.54624939 149.77059937]
[145.36906433 157.11531067]
[153.22082520 169.89614868]
[161.07258606 182.67700195]
[168.92433167 195.45783997]
[176.77609253 208.23867798]
[184.62785339 221.01953125]
[199.73826599 224.80281067]
[207.51898193 237.87625122]
[203.81907654 252.25840759]
[207.70851135 254.18876648]
[210.50056458 256.97604370]
[212.06057739 260.17007446]
[212.41397095 263.32312012]
[211.73150635 266.04202271]
[218.80860901 279.26754761]
[225.88571167 292.49307251]
[232.96281433 305.71859741]
[247.82125854 310.39456177]
[254.81004333 323.90795898]
[250.26065063 338.04437256]
[257.33776855 351.26989746]
[264.41485596 364.49542236]
[278.47091675 359.19616699]
[293.09844971 355.77697754]
[308.04711914 354.29638672]
[323.06115723 354.77972412]
[337.88366699 357.21868896]
[352.26098633 361.57156372]
[365.94711304 367.76388550]
[378.70785522 375.68969727]
[390.32489014 385.21334839]
[400.59939575 396.17187500]
[409.35556030 408.37777710]
[416.44360352 421.62222290]
[421.74218750 435.67852783]
[425.16067505 450.30621338]
[426.64056396 465.25494385]
[426.15652466 480.26895142]
[423.71685791 495.09133911]
[419.36328125 509.46844482]
[413.17028809 523.15429688]
[405.24389648 535.91467285]
[395.71969604 547.53125000]
[384.76068115 557.80523682]
[372.55435181 566.56085205]
[359.30960083 573.64825439]
[345.25302124 578.94616699]
[330.62518311 582.36395264]
[315.67636108 583.84313965]
[300.66238403 583.35833740]
[285.84011841 580.91796875]
[271.46319580 576.56372070]
[257.77764893 570.37011719]
[245.01765442 562.44311523]
[233.40155029 552.91833496]
[223.12808228 541.95880127]
[214.37306213 529.75207520]
[207.28628540 516.50695801]
[201.98902893 502.45016479]
[198.57194519 487.82214355]
[197.09347534 472.87326050]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 171]
[8 170]
[9 169]
[12 166]
[13 165]
[14 164]
[15 163]
[16 158]
[19 155]
[20 154]
[21 153]
[22 152]
[23 151]
[24 150]
[25 148]
[26 147]
[27 146]
[28 144]
[30 142]
[31 141]
[32 140]
[58 139]
[59 138]
[60 137]
[61 136]
[62 135]
[63 134]
[66 128]
[67 127]
[68 126]
[69 125]
[70 122]
[71 121]
[73 119]
[74 118]
[80 117]
[81 116]
[82 115]
[83 113]
[84 112]
[85 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
