%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAUCCUCAGUCCAUCAAUCAUAAUCCUCCCCCCAACAAUCCCCCAGCCUCCUUUUCCAACCCCUUGUCGAUUUAUCCAACAACAACUAAACCAAUUUUxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[124.79631042 676.63464355]
[121.07311249 661.94061279]
[122.60318756 646.85968018]
[129.20176697 633.21289062]
[140.07203674 622.64819336]
[153.90136719 616.44128418]
[152.78570557 601.48284912]
[151.67005920 586.52441406]
[150.55441284 571.56591797]
[149.43876648 556.60748291]
[140.77629089 544.49096680]
[147.46574402 530.15350342]
[146.35009766 515.19506836]
[145.23445129 500.23660278]
[143.89620972 485.29641724]
[142.33569336 470.37780762]
[140.77516174 455.45922852]
[139.10362244 440.55264282]
[137.32116699 425.65893555]
[135.53869629 410.76519775]
[133.75622559 395.87149048]
[120.10329437 386.05130005]
[117.73036957 369.06060791]
[128.58953857 355.34573364]
[126.58553314 340.48019409]
[124.58152008 325.61468506]
[122.57750702 310.74914551]
[113.20919037 299.16967773]
[119.03341675 284.45950317]
[117.02939606 269.59399414]
[115.02538300 254.72845459]
[113.02136993 239.86293030]
[98.32864380 232.54164124]
[90.81974792 217.75724792]
[93.63056183 201.24662781]
[105.84863281 189.54985046]
[103.62351990 174.71580505]
[101.39839935 159.88175964]
[99.17327881 145.04771423]
[96.94816589 130.21366882]
[94.72304535 115.37962341]
[85.79135132 107.90526581]
[84.14948273 96.37506866]
[90.63981628 86.70465851]
[88.63580322 71.83913422]
[86.63179016 56.97360229]
[84.62777710 42.10807419]
[82.62376404 27.24254799]
[68.51394653 21.33828354]
[59.31464005 9.24409008]
[57.41672516 -5.73136663]
[63.23057175 -19.55363655]
[75.10248566 -28.54937363]
[73.09847260 -43.41490173]
[70.32380676 -46.75484085]
[68.89952850 -50.43396759]
[68.76644897 -53.98610687]
[69.72006226 -57.01219940]
[71.44502258 -59.22187042]
[70.32937622 -74.18032074]
[69.21372986 -89.13877869]
[68.09807587 -104.09722900]
[66.98242950 -119.05568695]
[65.19996643 -133.94940186]
[62.75423431 -148.74867249]
[60.30850983 -163.54794312]
[57.53289795 -178.28890991]
[54.31962204 -192.94068909]
[50.99736404 -207.56816101]
[47.56630325 -222.17047119]
[44.02663040 -236.74685669]
[40.48695755 -251.32322693]
[36.94728470 -265.89959717]
[33.40761185 -280.47598267]
[16.86430359 -289.70816040]
[12.39920712 -307.79061890]
[22.39500046 -323.12686157]
[18.42290497 -337.59136963]
[14.45080757 -352.05590820]
[-0.52223003 -350.64904785]
[-15.51207733 -351.86380005]
[-30.06320953 -355.66320801]
[-43.73343277 -361.93188477]
[-56.10732651 -370.47927856]
[-66.80886078 -381.04565430]
[-75.51282501 -393.30990601]
[-81.95472717 -406.89935303]
[-85.93878937 -421.40103149]
[-87.34394836 -436.37420654]
[-86.12751007 -451.36392212]
[-82.32642365 -465.91464233]
[-76.05621338 -479.58413696]
[-67.50742340 -491.95706177]
[-56.93983459 -502.65740967]
[-44.67458725 -511.35998535]
[-31.08440781 -517.80035400]
[-16.58228874 -521.78277588]
[-1.60893261 -523.18621826]
[13.38063908 -521.96807861]
[27.93090820 -518.16534424]
[41.59970856 -511.89358521]
[53.97166443 -503.34338379]
[64.67079926 -492.77459717]
[73.37198639 -480.50836182]
[79.81079865 -466.91744995]
[83.79158020 -452.41485596]
[85.19334412 -437.44134521]
[83.97349548 -422.45193481]
[80.16911316 -407.90206909]
[73.89580536 -394.23397827]
[65.34420776 -381.86300659]
[54.77418900 -371.16506958]
[42.50696945 -362.46527100]
[28.91533279 -356.02801514]
[32.88742828 -341.56347656]
[36.85952377 -327.09896851]
[47.76263809 -323.73913574]
[55.77287292 -315.44747925]
[58.81701660 -304.20349121]
[56.02715683 -292.77032471]
[47.98398972 -284.01565552]
[51.52366257 -269.43927002]
[55.06333542 -254.86289978]
[58.60300446 -240.28652954]
[62.14267731 -225.71014404]
[66.77581787 -219.95204163]
[65.62482452 -210.89041138]
[68.94708252 -196.26295471]
[73.49398041 -190.43649292]
[72.20819855 -181.39302063]
[74.94805145 -179.17366028]
[76.74905396 -175.51696777]
[76.94737244 -170.87864685]
[75.10778046 -165.99366760]
[77.55350494 -151.19439697]
[79.99923706 -136.39512634]
[89.59220886 -147.92660522]
[104.51621246 -149.43458557]
[116.22210693 -140.05523682]
[118.00421143 -125.16148376]
[108.84166718 -113.28512573]
[93.98319244 -111.22949982]
[81.94087982 -120.17133331]
[83.05653381 -105.21288300]
[84.17218018 -90.25442505]
[85.28782654 -75.29597473]
[86.40348053 -60.33752060]
[87.96399689 -45.41891479]
[89.96801758 -30.55338669]
[103.79824829 -25.02254105]
[113.06477356 -13.23324966]
[115.20021057 1.71018684]
[109.53192139 15.80867290]
[97.48928833 25.23853302]
[99.49330902 40.10406113]
[101.49732208 54.96958923]
[103.50133514 69.83512115]
[105.50534821 84.70064545]
[116.09735107 97.70778656]
[109.55709076 113.15451050]
[111.78221130 127.98854828]
[114.00732422 142.82260132]
[116.23244476 157.65663147]
[118.45755768 172.49067688]
[120.68267822 187.32472229]
[133.35157776 192.75517273]
[141.61727905 203.64997864]
[143.40599060 217.09877014]
[138.35650635 229.57461548]
[127.88690186 237.85891724]
[129.89091492 252.72444153]
[131.89492798 267.58996582]
[133.89894104 282.45550537]
[143.41059875 295.09823608]
[137.44303894 308.74511719]
[139.44705200 323.61065674]
[141.45106506 338.47619629]
[143.45507812 353.34170532]
[155.03498840 360.22067261]
[160.45953369 372.33615112]
[157.95283508 385.17355347]
[148.64994812 394.08901978]
[150.43241882 408.98272705]
[152.21487427 423.87646484]
[153.99734497 438.77017212]
[158.12434387 446.91915894]
[155.69377136 453.89868164]
[157.25428772 468.81729126]
[158.81481934 483.73590088]
[162.38281250 489.30197144]
[162.57531738 494.98175049]
[160.19290161 499.12097168]
[161.30854797 514.07940674]
[162.42419434 529.03784180]
[171.16647339 542.22436523]
[164.39721680 555.49182129]
[165.51286316 570.45031738]
[166.62850952 585.40875244]
[167.74417114 600.36718750]
[168.85981750 615.32562256]
[183.45687866 619.41241455]
[195.77406311 628.24774170]
[204.32400513 640.76470947]
[208.07427979 655.45178223]
[206.57200623 670.53552246]
[199.99858093 684.19445801]
[189.14779663 694.77917480]
[175.32994080 701.01153564]
[160.21356201 702.13897705]
[145.62405396 698.02532959]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 200]
[7 199]
[8 198]
[9 197]
[10 196]
[12 194]
[13 193]
[14 192]
[15 189]
[16 188]
[17 187]
[18 185]
[19 184]
[20 183]
[21 182]
[24 178]
[25 177]
[26 176]
[27 175]
[29 173]
[30 172]
[31 171]
[32 170]
[36 165]
[37 164]
[38 163]
[39 162]
[40 161]
[41 160]
[44 158]
[45 157]
[46 156]
[47 155]
[48 154]
[53 149]
[54 148]
[59 147]
[60 146]
[61 145]
[62 144]
[63 143]
[64 136]
[65 135]
[66 134]
[67 130]
[68 128]
[69 127]
[70 125]
[71 124]
[72 123]
[73 122]
[74 121]
[77 116]
[78 115]
[79 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
