%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAUCCUCAGUCCAUCAAUCAUAAUCCUCCCCCCAACAAUCCCCCAGCCUCCUUUUCCAACCCCUUGUCGAUUUAUCCAACAACAACUAAACCAAUUUUxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[119.82517242 594.63769531]
[111.01450348 606.81103516]
[100.52520752 617.57171631]
[88.58087158 626.69042969]
[75.43608093 633.97271729]
[61.37102127 639.26348877]
[46.68548965 642.44989014]
[31.69250870 643.46398926]
[16.71165657 642.28417969]
[2.06224847 638.93566895]
[-11.94346046 633.48974609]
[-25.00693893 626.06250000]
[-36.84973907 616.81231689]
[-47.21942520 605.93634033]
[-55.89497375 593.66632080]
[-62.69146347 580.26391602]
[-67.46402740 566.01464844]
[-70.11093140 551.22235107]
[-70.57576752 536.20233154]
[-68.84861755 521.27465820]
[-64.96629333 506.75759888]
[-59.01156235 492.96054077]
[-51.11133957 480.17758179]
[-41.43402100 468.68115234]
[-30.18587685 458.71636963]
[-17.60666466 450.49557495]
[-3.96450853 444.19403076]
[10.44980526 439.94604492]
[25.32903671 437.84216309]
[40.35603333 437.92721558]
[55.21049500 440.19943237]
[59.61149216 425.85958862]
[64.01248932 411.51971436]
[68.41349030 397.17987061]
[72.81448364 382.84002686]
[77.21548462 368.50018311]
[81.61648560 354.16033936]
[86.01747894 339.82049561]
[90.41847992 325.48065186]
[94.81947327 311.14080811]
[96.82348633 296.27526855]
[96.37688446 281.28192139]
[95.93027496 266.28857422]
[87.81746674 253.79730225]
[95.14045715 239.77288818]
[94.69384766 224.77954102]
[94.24724579 209.78617859]
[90.90599060 203.19393921]
[93.90727997 194.56665039]
[93.68395233 179.56831360]
[93.46062469 164.56997681]
[93.23729706 149.57164001]
[79.54740143 145.65930176]
[67.51391602 138.04911804]
[58.11141586 127.35740662]
[52.10139084 114.45007324]
[49.97058487 100.37245178]
[51.89155960 86.26467133]
[57.70874786 73.26928711]
[66.95101929 62.43876648]
[78.86986542 54.65026093]
[92.50000000 50.53454590]
[92.50000000 35.53454590]
[92.50000000 20.53454590]
[91.38435364 5.57609177]
[89.15923309 -9.25795174]
[86.93412018 -24.09199524]
[77.23529053 -36.59172821]
[82.99900818 -50.32594681]
[80.77388763 -65.15998840]
[78.54877472 -79.99403381]
[68.84993744 -92.49376678]
[74.61366272 -106.22798920]
[72.38854218 -121.06202698]
[70.16342163 -135.89607239]
[67.93830872 -150.73011780]
[64.83419800 -165.40542603]
[60.86210251 -179.86994934]
[56.89000702 -194.33447266]
[52.91790771 -208.79899597]
[37.92651367 -207.54493713]
[22.95996475 -209.06713867]
[8.52802086 -213.31373596]
[-4.87777233 -220.14010620]
[-16.80081749 -229.31375122]
[-26.83502197 -240.52220154]
[-34.63862228 -253.38371277]
[-39.94583130 -267.46023560]
[-42.57588959 -282.27230835]
[-42.43921661 -297.31542969]
[-39.54046631 -312.07727051]
[-33.97837067 -326.05502319]
[-25.94237328 -338.77264404]
[-15.70617485 -349.79690552]
[-3.61841774 -358.75241089]
[9.90919304 -365.33407593]
[24.41591263 -369.31774902]
[39.40764618 -370.56777954]
[54.37378311 -369.04153442]
[68.80458069 -364.79104614]
[82.20853424 -357.96105957]
[94.12910461 -348.78421021]
[104.16028595 -337.57305908]
[111.96042633 -324.70944214]
[117.26383972 -310.63150024]
[119.88990021 -295.81872559]
[119.74917603 -280.77563477]
[116.84644318 -266.01455688]
[111.28058624 -252.03829956]
[103.24115753 -239.32287598]
[93.00199127 -228.30134583]
[80.91181946 -219.34910583]
[67.38243103 -212.77108765]
[71.35453033 -198.30656433]
[75.32662201 -183.84204102]
[79.29872131 -169.37751770]
[85.83134460 -182.88027954]
[98.99822235 -190.06593323]
[113.88842773 -188.25436401]
[124.94828796 -178.12127686]
[128.05274963 -163.44604492]
[122.04391479 -149.70217896]
[109.16294861 -142.01579285]
[94.21411896 -143.25372314]
[82.77235413 -152.95523071]
[84.99746704 -138.12118530]
[87.22258759 -123.28714752]
[89.44770050 -108.45310211]
[98.98738098 -97.01440430]
[93.38281250 -82.21915436]
[95.60793304 -67.38510895]
[97.83304596 -52.55106354]
[107.37272644 -41.11236191]
[101.76815796 -26.31711388]
[103.99327850 -11.48306942]
[106.21839142 3.35097432]
[113.17320251 -9.93927097]
[125.78816986 -18.05485535]
[140.76576233 -18.87438393]
[154.19088745 -12.18363476]
[162.55422974 0.26844701]
[163.66966248 15.22691727]
[157.24557495 28.78166771]
[144.96124268 37.38951874]
[130.02774048 38.80039978]
[116.34866333 32.64550781]
[107.50000000 20.53454590]
[107.50000000 35.53454590]
[107.50000000 50.53454590]
[122.41024017 55.26900101]
[135.12939453 64.37688446]
[144.41389465 76.96769714]
[149.35597229 91.81040955]
[149.47242737 107.45384216]
[144.75189209 122.36849976]
[135.65588379 135.09614563]
[123.07373810 144.39237976]
[108.23563385 149.34831238]
[108.45896149 164.34664917]
[108.68228912 179.34498596]
[108.90561676 194.34332275]
[109.24059296 209.33958435]
[109.68720245 224.33293152]
[110.13380432 239.32627869]
[118.27855682 252.88996887]
[110.92362976 265.84194946]
[111.37023163 280.83532715]
[111.81684113 295.82867432]
[118.13434601 282.22390747]
[127.71692657 270.68380737]
[139.92900085 261.97375488]
[153.96060181 256.67144775]
[168.88104248 255.12858582]
[183.70071411 257.44747925]
[197.43667603 263.47436523]
[209.17787170 272.80947876]
[218.14556885 284.83364868]
[223.74494934 298.74932861]
[225.60462952 313.63360596]
[223.60127258 328.49923706]
[217.86773682 342.36019897]
[208.78433228 354.29721069]
[196.95352173 363.51846313]
[183.15997314 369.41238403]
[168.31860352 371.58804321]
[153.41375732 369.90115356]
[139.43403625 364.46356201]
[127.30665588 355.63595581]
[117.83598328 344.00384521]
[111.65017700 330.33871460]
[109.15932465 315.54180908]
[104.75832367 329.88165283]
[100.35733032 344.22149658]
[95.95632935 358.56134033]
[91.55532837 372.90118408]
[87.15433502 387.24102783]
[82.75333405 401.58087158]
[78.35234070 415.92071533]
[73.95133972 430.26055908]
[69.55033875 444.60043335]
[83.12199402 451.05239868]
[95.60955811 459.41174316]
[106.74684906 469.50027466]
[116.29647827 481.10296631]
[124.05490112 493.97250366]
[129.85673523 507.83456421]
[133.57832336 522.39367676]
[135.14035034 537.33947754]
[134.50949097 552.35345459]
[131.69920349 567.11560059]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 200]
[32 199]
[33 198]
[34 197]
[35 196]
[36 195]
[37 194]
[38 193]
[39 192]
[40 191]
[41 168]
[42 167]
[43 166]
[45 164]
[46 163]
[47 162]
[49 161]
[50 160]
[51 159]
[52 158]
[62 149]
[63 148]
[64 147]
[65 136]
[66 135]
[67 134]
[69 132]
[70 131]
[71 130]
[73 128]
[74 127]
[75 126]
[76 125]
[77 116]
[78 115]
[79 114]
[80 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
