%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACAGUCUAAGUGUUAGACUACAAAACCAAUUUGAUAUAAAUGUUCUCCUUUUGGGCCAUUACUACAGCCCCAACUCCCUAUCCUCCUCUUACCCCCUAxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[14.87468815 587.75683594]
[3.16353488 597.18261719]
[-9.90802860 604.60760498]
[-24.00141907 609.83947754]
[-38.75157928 612.74273682]
[-53.77645111 613.24212646]
[-68.68685150 611.32482910]
[-83.09656525 607.04040527]
[-96.63233948 600.49981689]
[-108.94357300 591.87255859]
[-119.71138000 581.38208008]
[-128.65682983 569.30004883]
[-135.54823303 555.93951416]
[-140.20709229 541.64642334]
[-142.51269531 526.79113770]
[-142.40534973 511.75833130]
[-139.88783264 496.93746948]
[-135.02536011 482.71240234]
[-127.94386292 469.45159912]
[-118.82678223 457.49856567]
[-107.91027069 447.16290283]
[-95.47708893 438.71234131]
[-81.84929657 432.36575317]
[-67.37986755 428.28753662]
[-52.44360733 426.58331299]
[-37.42740250 427.29724121]
[-34.32329178 412.62194824]
[-31.21918106 397.94665527]
[-28.11507225 383.27133179]
[-25.01096153 368.59603882]
[-26.61747932 365.45733643]
[-26.78355408 361.38455200]
[-25.08672714 357.06320190]
[-21.42665672 353.34152222]
[-17.67035675 338.81945801]
[-13.91405582 324.29739380]
[-10.15775585 309.77536011]
[-20.26077461 320.86267090]
[-33.26427078 328.33993530]
[-47.92883301 331.49438477]
[-62.85672760 330.02539062]
[-76.62512970 324.07299805]
[-87.92171478 314.20449829]
[-95.66976166 301.36050415]
[-99.13079071 286.76525879]
[-97.97489929 271.80987549]
[-92.31227875 257.91976929]
[-82.68264008 246.41889954]
[-70.00382233 238.40344238]
[-55.48429489 234.63735962]
[-40.50796127 235.47964478]
[-26.50227356 240.84999084]
[-14.80216026 250.23654175]
[-6.52280521 262.74462891]
[-2.45334220 277.18206787]
[-2.98186207 292.17388916]
[-3.35587525 277.28396606]
[10.22481060 269.16760254]
[17.69255257 256.15863037]
[25.16029358 243.14968872]
[32.62803268 230.14073181]
[39.40802383 216.76046753]
[45.48186111 203.04519653]
[51.55569458 189.32992554]
[57.62952805 175.61466980]
[63.70336151 161.89939880]
[69.77719879 148.18412781]
[65.71374512 136.79049683]
[70.66171265 125.31436920]
[82.46940613 120.12387848]
[88.74676514 106.50056458]
[94.61572266 92.69638824]
[100.07108307 78.72358704]
[105.52643585 64.75079346]
[110.98179626 50.77799606]
[116.43714905 36.80519867]
[114.24869537 21.13607979]
[126.08493042 12.09435654]
[131.54028320 -1.87844157]
[129.35183716 -17.54755783]
[141.18806458 -26.58928299]
[145.26773071 -41.02383423]
[147.93353271 -55.78505325]
[150.59931946 -70.54627228]
[153.26512146 -85.30748749]
[155.93092346 -100.06870270]
[156.60070801 -115.05374146]
[155.26246643 -129.99392700]
[153.92424011 -144.93411255]
[152.58599854 -159.87429810]
[151.24775696 -174.81448364]
[147.76304626 -180.43304443]
[147.65510559 -186.11506653]
[150.09889221 -190.21835327]
[149.20608521 -205.19175720]
[148.31326294 -220.16516113]
[133.93667603 -225.10301208]
[122.54739380 -235.17041016]
[115.88218689 -248.83216858]
[114.95745087 -264.00494385]
[119.91419983 -278.37503052]
[129.99658203 -289.75106812]
[143.66708374 -296.39828491]
[158.84106445 -297.30307007]
[173.20460510 -292.32742310]
[184.56736755 -282.23007202]
[191.19660950 -268.55084229]
[192.08142090 -253.37568665]
[187.08688354 -239.01869202]
[176.97460938 -227.66921997]
[163.28666687 -221.05798340]
[164.17948914 -206.08457947]
[165.07229614 -191.11117554]
[166.18794250 -176.15272522]
[167.52618408 -161.21253967]
[168.86441040 -146.27235413]
[170.20265198 -131.33216858]
[171.54089355 -116.39197540]
[177.33421326 -130.22807312]
[187.07185364 -141.63764954]
[199.82566833 -149.53321838]
[214.38005066 -153.16223145]
[229.34777832 -152.17880249]
[243.30221558 -146.67665100]
[254.91331482 -137.18020630]
[263.07437134 -124.59461212]
[267.00753784 -110.11946106]
[266.33795166 -95.13441467]
[261.12936401 -81.06775665]
[251.87829590 -69.26023102]
[239.46646118 -60.83726120]
[225.07690430 -56.60166550]
[210.08111572 -56.95715332]
[195.90841675 -61.86984634]
[183.90965271 -70.87149811]
[175.22846985 -83.10411835]
[170.69213867 -97.40290833]
[168.02633667 -82.64169312]
[165.36053467 -67.88047791]
[162.69474792 -53.11925888]
[160.02894592 -38.35803986]
[170.02763367 -49.53955841]
[183.67622375 -55.76178360]
[198.67468262 -55.97615433]
[212.49552917 -50.14654922]
[222.80969238 -39.25535583]
[227.87905884 -25.13793755]
[226.84934998 -10.17332172]
[219.89408875 3.11668777]
[208.18536377 12.49249268]
[193.69628906 16.37410355]
[178.86854553 14.10740280]
[166.20086670 6.07436800]
[157.82795715 -6.37129307]
[155.16085815 -21.13392639]
[157.73953247 -6.46423674]
[145.51309204 3.57691550]
[140.05772400 17.54971313]
[142.63639832 32.21940231]
[130.40995789 42.26055527]
[124.95458984 56.23335266]
[119.49923706 70.20614624]
[114.04387665 84.17894745]
[108.58852386 98.15174866]
[109.57129669 101.03681946]
[109.52603149 104.34325409]
[108.29463959 107.69095612]
[105.86166382 110.64678192]
[102.37007904 112.77792358]
[96.09272003 126.40124512]
[98.20613861 144.69372559]
[83.49246216 154.25796509]
[77.41862488 167.97323608]
[71.34479523 181.68849182]
[65.27095795 195.40376282]
[59.19712448 209.11903381]
[53.12329102 222.83430481]
[67.08444214 217.34919739]
[81.34456635 222.00202942]
[89.38413239 234.66557312]
[87.52755737 249.55023193]
[76.62363434 259.85095215]
[61.65750504 260.85836792]
[49.47146988 252.11189270]
[45.63698578 237.60847473]
[38.16924667 250.61743164]
[30.70150375 263.62637329]
[23.23376274 276.63534546]
[23.07363319 292.45571899]
[10.02709007 299.64163208]
[4.36430359 313.53164673]
[0.60800308 328.05371094]
[-3.14829755 342.57577515]
[-6.90459824 357.09783936]
[-10.33565903 371.70013428]
[-13.43976974 386.37545776]
[-16.54388046 401.05075073]
[-19.64798927 415.72604370]
[-22.75209999 430.40136719]
[-8.73292542 435.82897949]
[4.23398447 443.43524170]
[15.81275654 453.02316284]
[25.70347214 464.34436035]
[33.64994049 477.10562134]
[39.44632721 490.97640991]
[42.94248962 505.59738159]
[44.04787064 520.58984375]
[42.73383713 535.56549072]
[39.03443146 550.13635254]
[33.04546738 563.92504883]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 199]
[27 198]
[28 197]
[29 196]
[30 195]
[34 194]
[35 193]
[36 192]
[37 191]
[56 190]
[58 188]
[59 187]
[60 186]
[61 185]
[62 177]
[63 176]
[64 175]
[65 174]
[66 173]
[67 172]
[70 170]
[71 169]
[72 164]
[73 163]
[74 162]
[75 161]
[76 160]
[78 158]
[79 157]
[81 155]
[82 141]
[83 140]
[84 139]
[85 138]
[86 137]
[87 118]
[88 117]
[89 116]
[90 115]
[91 114]
[94 113]
[95 112]
[96 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
