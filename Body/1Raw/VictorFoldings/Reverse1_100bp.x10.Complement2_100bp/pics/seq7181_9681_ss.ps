%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxAUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUA\
) } def
/len { sequence length } bind def

/coor [
[53.79817963 650.65045166]
[43.24916077 661.34375000]
[31.41929054 670.60021973]
[18.50282097 678.26788330]
[4.71185350 684.22082520]
[-9.72715092 688.36132812]
[-24.57709122 690.62127686]
[-39.59411621 690.96374512]
[-54.53163528 689.38293457]
[-69.14436340 685.90490723]
[-83.19233704 680.58679199]
[-96.44488525 673.51580811]
[-108.68437958 664.80816650]
[-119.70984650 654.60687256]
[-129.34024048 643.07934570]
[-137.41740417 630.41491699]
[-143.80871582 616.82153320]
[-148.40922546 602.52246094]
[-151.14338684 587.75244141]
[-151.96629333 572.75408936]
[-150.86444092 557.77362061]
[-147.85592651 543.05706787]
[-142.99014282 528.84606934]
[-136.34700012 515.37396240]
[-128.03558350 502.86203003]
[-118.19237518 491.51571655]
[-106.97899628 481.52127075]
[-94.57958984 473.04287720]
[-81.19776154 466.21975708]
[-67.05326843 461.16394043]
[-52.37835312 457.95840454]
[-37.41400528 456.65585327]
[-22.40595245 457.27764893]
[-7.60063648 459.81356812]
[-3.19963813 445.47372437]
[1.20135987 431.13388062]
[5.60235786 416.79403687]
[10.00335598 402.45419312]
[6.34075546 388.01693726]
[17.78650475 377.09423828]
[14.12390423 362.65695190]
[25.56965256 351.73425293]
[21.90705299 337.29699707]
[33.35280228 326.37429810]
[37.43246841 311.93972778]
[41.18877029 297.41769409]
[44.94506836 282.89562988]
[37.18827438 270.23199463]
[40.79082489 255.45104980]
[54.12620544 247.40086365]
[57.88250732 232.87879944]
[61.63880539 218.35675049]
[57.33520126 204.09742737]
[68.28180695 192.67454529]
[72.03810883 178.15248108]
[75.79441071 163.63041687]
[79.55071259 149.10836792]
[83.30701447 134.58630371]
[87.06331635 120.06423950]
[77.76396179 108.68851471]
[76.88742828 94.02165985]
[84.76572418 81.61934662]
[98.41462708 76.17945862]
[102.17092896 61.65739822]
[105.92723083 47.13533783]
[101.89229584 31.83730316]
[112.57022858 21.45313072]
[116.32653046 6.93107176]
[119.97461700 -7.61854887]
[123.51428986 -22.19492340]
[109.95465088 -28.73058701]
[98.05491638 -37.93922806]
[88.33374023 -49.41640854]
[81.21420288 -62.65887833]
[77.00534058 -77.08664703]
[75.88880920 -92.06839752]
[77.91097260 -106.94907379]
[82.98104095 -121.07855988]
[90.87510681 -133.84007263]
[101.24604034 -144.67707825]
[113.63877869 -153.11755371]
[127.51023865 -158.79458618]
[142.25318909 -161.46226501]
[157.22274780 -161.00639343]
[160.76242065 -175.58276367]
[159.74647522 -184.66052246]
[164.46482849 -190.34901428]
[168.22113037 -204.87107849]
[171.86921692 -219.42070007]
[175.40888977 -233.99707031]
[177.52351379 -248.84727478]
[178.19329834 -263.83230591]
[178.86308289 -278.81735229]
[179.53286743 -293.80239868]
[180.09107971 -308.79199219]
[180.53768921 -323.78533936]
[180.98428345 -338.77868652]
[166.73616028 -343.86260986]
[154.75764465 -353.10223389]
[146.22227478 -365.59231567]
[141.96624756 -380.10925293]
[142.40652466 -395.23080444]
[147.49998474 -409.47552490]
[156.74761963 -421.44784546]
[169.24343872 -429.97485352]
[183.76321411 -434.22113037]
[198.88447571 -433.77072144]
[213.12576294 -428.66772461]
[225.09188843 -419.41207886]
[233.61051941 -406.91055298]
[237.84709167 -392.38790894]
[237.38655090 -377.26696777]
[232.27400208 -363.02911377]
[223.01033020 -351.06918335]
[210.50309753 -342.55892944]
[195.97764587 -338.33209229]
[195.53103638 -323.33874512]
[195.08442688 -308.34539795]
[198.02738953 -301.56594849]
[194.51789856 -293.13259888]
[193.84811401 -278.14755249]
[193.17832947 -263.16253662]
[192.50854492 -248.17749023]
[200.92373657 -260.59460449]
[213.61866760 -268.58450317]
[228.45404053 -270.80075073]
[242.92982483 -266.86990356]
[254.60659790 -257.45431519]
[261.51660156 -244.14073181]
[262.49542236 -229.17269897]
[257.37808228 -215.07260132]
[247.02693176 -204.21655273]
[233.18634033 -198.43399048]
[218.18869019 -198.69937134]
[204.56134033 -204.96797180]
[194.60073853 -216.18344116]
[189.98526001 -230.45739746]
[186.44558716 -215.88102722]
[187.92190552 -208.63932800]
[182.74319458 -201.11477661]
[178.98689270 -186.59271240]
[175.33880615 -172.04309082]
[171.79913330 -157.46672058]
[185.31059265 -151.00637817]
[197.18811035 -141.87426758]
[206.91105652 -130.46766663]
[214.05255127 -117.28356171]
[218.29832458 -102.89709473]
[219.46043396 -87.93641663]
[217.48567200 -73.05527496]
[212.45793152 -58.90446091]
[204.59471130 -46.10332489]
[194.23762512 -35.21269226]
[181.83763123 -26.71027374]
[167.93537903 -20.96972084]
[153.13758850 -18.24420357]
[138.09066772 -18.65525246]
[134.55099487 -4.07887650]
[136.02729797 3.16282940]
[130.84858704 10.68737221]
[127.09229279 25.20943260]
[131.39588928 39.46875381]
[120.44928741 50.89163971]
[116.69298553 65.41369629]
[112.93668365 79.93576050]
[122.23603821 91.31148529]
[123.11257172 105.97834015]
[115.23427582 118.38065338]
[101.58537292 123.82054138]
[97.82907104 138.34260559]
[94.07276917 152.86465454]
[90.31646729 167.38671875]
[86.56017303 181.90878296]
[82.80387115 196.43083191]
[86.83879852 211.72888184]
[76.16086578 222.11305237]
[72.40456390 236.63510132]
[68.64826202 251.15716553]
[76.40773010 264.66378784]
[72.39143372 279.33770752]
[59.46712875 286.65191650]
[55.71083069 301.17398071]
[51.95452881 315.69604492]
[53.35097122 320.72564697]
[52.73963547 325.32778931]
[50.61957550 328.80923462]
[47.69264984 330.77529907]
[51.04046249 346.23825073]
[39.90950012 356.13525391]
[43.25731277 371.59820557]
[32.12635040 381.49523926]
[35.47416306 396.95816040]
[24.34320259 406.85519409]
[19.94220543 421.19503784]
[15.54120731 435.53488159]
[11.14020920 449.87472534]
[6.73921108 464.21456909]
[20.41813278 470.42065430]
[33.19110489 478.32504272]
[44.84838486 487.79797363]
[55.19855118 498.68386841]
[64.07164001 510.80395508]
[71.32195282 523.95922852]
[76.83042908 537.93365479]
[80.50661469 552.49780273]
[82.29014587 567.41247559]
[82.15174103 582.43273926]
[80.09365845 597.31201172]
[76.14969635 611.80590820]
[70.38462830 625.67651367]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 197]
[35 196]
[36 195]
[37 194]
[38 193]
[40 191]
[42 189]
[44 187]
[45 183]
[46 182]
[47 181]
[50 178]
[51 177]
[52 176]
[54 174]
[55 173]
[56 172]
[57 171]
[58 170]
[59 169]
[63 165]
[64 164]
[65 163]
[67 161]
[68 160]
[69 158]
[70 157]
[84 143]
[85 142]
[87 141]
[88 140]
[89 138]
[90 137]
[91 123]
[92 122]
[93 121]
[94 120]
[95 118]
[96 117]
[97 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
