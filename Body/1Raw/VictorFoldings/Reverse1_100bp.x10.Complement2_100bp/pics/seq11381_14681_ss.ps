%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGGCGGAUCAAAAUUCUCAUGACGCCGUUCAUGAUAACUGGGUCGCUACCCCCGAAGCUGUACCCGAAAUCCCUCAGUAUUCACCUCAGGCAUUUCUCxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[99.95886993 647.14947510]
[91.46685791 634.67761230]
[86.49308014 620.43243408]
[85.37665558 605.38531494]
[88.19371796 590.56213379]
[94.75218201 576.97357178]
[104.60488129 565.54614258]
[117.08005524 557.05895996]
[131.32710266 552.09063721]
[130.21145630 537.13220215]
[129.09580994 522.17376709]
[127.98016357 507.21530151]
[126.86451721 492.25683594]
[125.74886322 477.29840088]
[124.63321686 462.33993530]
[121.66313934 458.59991455]
[121.01097870 452.95440674]
[123.71381378 446.92065430]
[115.41593170 434.55157471]
[122.52930450 420.41967773]
[121.85951996 405.43463135]
[121.18973541 390.44961548]
[120.51995087 375.46456909]
[119.85015869 360.47952271]
[119.18037415 345.49447632]
[110.88249207 333.12539673]
[117.99586487 318.99349976]
[117.32608032 304.00845337]
[116.54475403 289.02883911]
[115.65193939 274.05541992]
[114.53629303 259.09695435]
[113.19805908 244.15678406]
[111.85982513 229.21659851]
[110.52159119 214.27641296]
[108.96106720 199.35780334]
[107.17860413 184.46408081]
[104.95348358 169.63005066]
[102.28768921 154.86882019]
[99.62189484 140.10760498]
[96.95610046 125.34638977]
[94.29030609 110.58517456]
[91.40502930 95.86528015]
[80.97940063 83.96499634]
[85.91542053 69.91206360]
[82.81130981 55.23676300]
[72.38568115 43.33647919]
[77.32170868 29.28354645]
[74.21759796 14.60824394]
[71.11348724 -0.06705891]
[68.00937653 -14.74236107]
[64.90526581 -29.41766357]
[61.80115509 -44.09296799]
[48.83148956 -48.75971985]
[39.93197250 -59.14321899]
[37.34594727 -72.46170807]
[41.64390564 -85.21598816]
[51.60185623 -94.10875702]
[48.71658325 -108.82865143]
[45.83131027 -123.54853821]
[29.71673965 -133.51020813]
[26.06352234 -151.77403259]
[36.73414230 -166.64862061]
[33.41188431 -181.27607727]
[30.08962440 -195.90353394]
[19.48797035 -207.64727783]
[24.21422195 -221.77215576]
[20.89196205 -236.39961243]
[17.46090126 -251.00193787]
[13.32343769 -236.58383179]
[4.31512070 -224.59008789]
[-8.37885094 -216.59864807]
[-23.08836746 -213.66093445]
[-37.87813950 -216.16346741]
[-50.80231857 -223.77697754]
[-60.16050339 -235.49980164]
[-64.72146606 -249.78956604]
[-63.88513565 -264.76623535]
[-57.76154327 -278.45935059]
[-47.15635300 -289.06738281]
[-33.46485901 -295.19461060]
[-18.48841476 -296.03491211]
[-4.19742870 -291.47775269]
[7.52787447 -282.12271118]
[15.14564610 -269.19830322]
[14.92231846 -284.19665527]
[14.69899082 -299.19497681]
[14.47566319 -314.19332886]
[13.80587769 -329.17837524]
[12.69022942 -344.13681030]
[11.57458019 -359.09527588]
[10.45893192 -374.05371094]
[9.34328270 -389.01217651]
[8.22763443 -403.97064209]
[7.11198568 -418.92907715]
[-7.54090452 -422.74633789]
[-20.15901756 -431.11663818]
[-29.37363434 -443.13204956]
[-34.18522263 -457.48916626]
[-34.07185745 -472.63070679]
[-29.04583740 -486.91418457]
[-19.65234566 -498.79025269]
[-6.91031599 -506.97067261]
[7.79808807 -510.56811523]
[22.87741089 -509.19235229]
[36.69195938 -502.99258423]
[47.74323273 -492.64135742]
[54.83247757 -479.26147461]
[57.19070053 -464.30429077]
[54.56209946 -449.39224243]
[47.23180389 -436.14288330]
[35.99495697 -425.99337769]
[22.07043839 -420.04473877]
[23.18608856 -405.08627319]
[24.30173683 -390.12783813]
[25.41738510 -375.16937256]
[26.53303337 -360.21090698]
[27.64868164 -345.25247192]
[28.76433182 -330.29400635]
[30.79799271 -328.36465454]
[32.18994904 -325.51351929]
[32.58526993 -321.98092651]
[31.72251701 -318.13122559]
[29.47400093 -314.41665649]
[29.69732857 -299.41830444]
[29.92065620 -284.41998291]
[30.14398384 -269.42163086]
[32.03727722 -254.54161072]
[36.67041016 -248.78349304]
[35.51942062 -239.72186279]
[38.84168243 -225.09440613]
[49.20570374 -214.39691162]
[44.71708298 -199.22579956]
[48.03934479 -184.59834290]
[51.36160278 -169.97088623]
[62.10382080 -166.12757874]
[69.73582458 -157.48649597]
[72.27485657 -146.11779785]
[68.97726440 -134.82060242]
[60.55120087 -126.43381500]
[63.43647385 -111.71392059]
[66.32174683 -96.99403381]
[81.42419434 -90.56024933]
[89.79976654 -76.24900818]
[87.97666168 -59.60035706]
[76.47645569 -47.19707489]
[79.58056641 -32.52177429]
[82.68467712 -17.84647179]
[85.78878784 -3.17116904]
[88.89289856 11.50413322]
[91.99700928 26.17943573]
[102.20061493 37.03004456]
[97.48661804 52.13265228]
[100.59072113 66.80795288]
[110.79432678 77.65856171]
[106.08032990 92.76117706]
[109.71475220 96.54336548]
[110.97136688 102.09262085]
[109.05152130 107.91938019]
[111.71731567 122.68059540]
[114.38311005 137.44181824]
[117.04890442 152.20303345]
[119.71469879 166.96424866]
[122.63573456 170.17695618]
[124.22286987 173.78881836]
[124.51442719 177.33148193]
[123.69689178 180.39712524]
[122.07231903 182.68162537]
[123.85478210 197.57533264]
[127.50524902 203.08766174]
[127.78230286 208.76394653]
[125.46177673 212.93817139]
[126.80001068 227.87835693]
[128.13824463 242.81854248]
[129.47647095 257.75872803]
[132.96119690 263.37728882]
[133.06913757 269.05932617]
[130.62535095 273.16259766]
[131.51815796 288.13601685]
[135.15281677 296.51617432]
[132.31111145 303.33868408]
[132.98089600 318.32373047]
[141.32669067 331.76464844]
[134.16542053 344.82470703]
[134.83520508 359.80975342]
[135.50498962 374.79476929]
[136.17477417 389.77981567]
[136.84455872 404.76486206]
[137.51434326 419.74990845]
[145.86013794 433.19082642]
[138.69885254 446.25088501]
[139.59167480 461.22427368]
[140.70732117 476.18273926]
[141.82296753 491.14120483]
[142.93861389 506.09963989]
[144.05426025 521.05810547]
[145.16990662 536.01654053]
[146.28556824 550.97503662]
[161.11199951 553.77490234]
[174.70814514 560.31762695]
[186.14700317 570.15704346]
[194.64863586 582.62237549]
[199.63342285 596.86370850]
[200.76145935 611.90997314]
[197.95585632 626.73529053]
[191.40788269 640.32891846]
[181.56401062 651.76397705]
[169.09539795 660.26080322]
[154.85217285 665.24011230]
[139.80548096 666.36230469]
[124.98121643 663.55096436]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 197]
[10 196]
[11 195]
[12 194]
[13 193]
[14 192]
[15 191]
[18 190]
[20 188]
[21 187]
[22 186]
[23 185]
[24 184]
[25 183]
[27 181]
[28 180]
[29 178]
[30 177]
[31 174]
[32 173]
[33 172]
[34 171]
[35 168]
[36 167]
[37 162]
[38 161]
[39 160]
[40 159]
[41 158]
[42 155]
[44 153]
[45 152]
[47 150]
[48 149]
[49 148]
[50 147]
[51 146]
[52 145]
[57 141]
[58 140]
[59 139]
[62 134]
[63 133]
[64 132]
[66 130]
[67 129]
[68 127]
[84 126]
[85 125]
[86 124]
[87 123]
[88 118]
[89 117]
[90 116]
[91 115]
[92 114]
[93 113]
[94 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
