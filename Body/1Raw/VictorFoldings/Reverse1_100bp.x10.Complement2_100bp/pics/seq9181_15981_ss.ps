%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[-7.90122843 321.73114014]
[-6.69287777 336.69357300]
[-6.89095736 351.70339966]
[-8.49372482 366.62875366]
[-11.48709679 381.33840942]
[-15.84476471 395.70312500]
[-21.52843285 409.59664917]
[-28.48815346 422.89691162]
[-36.66276169 435.48699951]
[-45.98041534 447.25628662]
[-56.35923004 458.10131836]
[-67.70800018 467.92678833]
[-79.92697906 476.64636230]
[-92.90879059 484.18341064]
[-106.53934479 490.47167969]
[-120.69886017 495.45590210]
[-135.26289368 499.09231567]
[-150.10345459 501.34893799]
[-165.09010315 502.20593262]
[-180.09117126 501.65579224]
[-194.97479248 499.70330811]
[-209.61018372 496.36566162]
[-223.86871338 491.67218018]
[-237.62509155 485.66415405]
[-250.75840759 478.39431763]
[-263.15325928 469.92657471]
[-274.70068359 460.33538818]
[-285.29925537 449.70498657]
[-294.85577393 438.12884521]
[-303.28628540 425.70867920]
[-310.51669312 412.55361938]
[-316.48345947 398.77926636]
[-321.13415527 384.50674438]
[-324.42788696 369.86138916]
[-326.33572388 354.97198486]
[-326.84088135 339.96932983]
[-325.93896484 324.98532104]
[-323.63784790 310.15158081]
[-319.95776367 295.59854126]
[-314.93109131 281.45404053]
[-308.60195923 267.84240723]
[-301.02600098 254.88325500]
[-292.26983643 242.69047546]
[-282.41036987 231.37121582]
[-271.53427124 221.02497864]
[-259.73709106 211.74266052]
[-247.12255859 203.60585022]
[-233.80148315 196.68605042]
[-219.89096069 191.04406738]
[-205.51324463 186.72950745]
[-190.79466248 183.78025818]
[-175.86459351 182.22225952]
[-160.85423279 182.06919861]
[-145.89549255 183.32240295]
[-131.11982727 185.97090149]
[-116.65711212 189.99136353]
[-102.63443756 195.34851074]
[-89.17502594 201.99522400]
[-76.39717865 209.87310791]
[-64.41317749 218.91291809]
[-53.32835007 229.03521729]
[-42.22111511 218.95408630]
[-31.11388397 208.87294006]
[-20.00664902 198.79180908]
[-15.78238392 184.50877380]
[-0.36354780 180.96334839]
[10.74368572 170.88221741]
[21.85091972 160.80107117]
[32.95815277 150.71994019]
[37.18241882 136.43690491]
[52.60125351 132.89147949]
[63.70848846 122.81034088]
[74.81571960 112.72920227]
[85.92295837 102.64806366]
[90.37322235 89.39337158]
[103.99590302 86.24470520]
[115.10314178 76.16356659]
[126.05905151 65.91817474]
[136.86120605 55.51080322]
[141.43098450 40.36392975]
[155.96478271 37.10540009]
[166.76693726 26.69802666]
[171.33671570 11.55115604]
[185.87051392 8.29262638]
[196.67266846 -2.11474681]
[186.99044800 -13.57846928]
[178.07872009 -25.65089607]
[169.97566223 -38.28033066]
[162.71595764 -51.41269302]
[156.33070374 -64.99174500]
[150.84722900 -78.95934296]
[146.28901672 -93.25567627]
[142.67559814 -107.81951904]
[140.02244568 -122.58850098]
[138.34091187 -137.49938965]
[137.63819885 -152.48834229]
[137.91732788 -167.49114990]
[139.17709351 -182.44358826]
[141.41209412 -197.28161621]
[144.61276245 -211.94169617]
[148.76539612 -226.36105347]
[153.85221863 -240.47793579]
[159.85144043 -254.23190308]
[166.73738098 -267.56405640]
[174.48052979 -280.41729736]
[183.04776001 -292.73657227]
[192.40235901 -304.46917725]
[202.50428772 -315.56481934]
[213.31027222 -325.97601318]
[224.77404785 -335.65814209]
[236.84652710 -344.56979370]
[249.47601318 -352.67279053]
[262.60842896 -359.93240356]
[276.18750000 -366.31759644]
[290.15515137 -371.80099487]
[304.45150757 -376.35910034]
[319.01535034 -379.97244263]
[333.78436279 -382.62551880]
[348.69528198 -384.30694580]
[363.68420410 -385.00958252]
[378.68701172 -384.73037720]
[393.63946533 -383.47052002]
[408.47747803 -381.23544312]
[423.13751221 -378.03466797]
[437.55685425 -373.88195801]
[451.67370605 -368.79504395]
[465.42764282 -362.79574585]
[478.75976562 -355.90972900]
[491.61294556 -348.16650391]
[503.93218994 -339.59918213]
[515.66473389 -330.24453735]
[526.76031494 -320.14251709]
[537.17144775 -309.33648682]
[546.85351562 -297.87265015]
[555.76507568 -285.80010986]
[563.86798096 -273.17059326]
[571.12756348 -260.03814697]
[577.51263428 -246.45899963]
[582.99597168 -232.49134827]
[587.55401611 -218.19496155]
[591.16723633 -203.63107300]
[593.82025146 -188.86206055]
[595.50158691 -173.95114136]
[596.20410156 -158.96218872]
[595.92480469 -143.95938110]
[594.66485596 -129.00695801]
[592.42968750 -114.16896820]
[589.22888184 -99.50892639]
[585.07604980 -85.08961487]
[579.98907471 -70.97278595]
[573.98968506 -57.21889114]
[567.10357666 -43.88682556]
[559.36029053 -31.03367805]
[550.79290771 -18.71448708]
[541.43817139 -6.98200893]
[531.33612061 4.11351728]
[520.53002930 14.52457905]
[509.06610107 24.20659256]
[496.99353027 33.11809921]
[484.36395264 41.22093964]
[471.23144531 48.48041153]
[457.65228271 54.86542892]
[443.68460083 60.34865570]
[429.38818359 64.90660858]
[414.82427979 68.51976776]
[400.05523682 71.17266083]
[385.14431763 72.85392761]
[370.15536499 73.55637360]
[355.15255737 73.27698517]
[340.20013428 72.01696777]
[325.36215210 69.78170013]
[310.70214844 66.58077240]
[296.28286743 62.42787552]
[282.16604614 57.34080505]
[268.41220093 51.34133911]
[255.08016968 44.45516968]
[242.22706604 36.71178436]
[229.90792847 28.14434242]
[218.17550659 18.78953171]
[207.08003235 8.68740940]
[196.27787781 19.09478378]
[192.48074341 33.49724960]
[177.17430115 37.50018311]
[166.37214661 47.90755844]
[162.57501221 62.31002426]
[147.26858521 66.31295776]
[136.46641541 76.72032928]
[135.48345947 81.39395905]
[131.55410767 85.49972534]
[125.18428040 87.27079773]
[114.07704163 97.35193634]
[109.62677765 110.60662842]
[96.00409698 113.75529480]
[84.89685822 123.83643341]
[73.78962708 133.91757202]
[62.68239212 143.99871826]
[57.66366577 159.00280762]
[43.03929138 161.82716370]
[31.93205833 171.90830994]
[20.82482529 181.98944092]
[9.71759129 192.07058716]
[4.69886160 207.07467651]
[-9.92551041 209.89904785]
[-21.03274345 219.98017883]
[-32.13997650 230.06132507]
[-43.24721146 240.14245605]
[-34.24337769 252.15351868]
[-26.40385246 264.95492554]
[-19.79753113 278.43420410]
[-14.48247337 292.47290039]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[61 206]
[62 205]
[63 204]
[64 203]
[66 201]
[67 200]
[68 199]
[69 198]
[71 196]
[72 195]
[73 194]
[74 193]
[76 191]
[77 190]
[78 187]
[79 186]
[81 184]
[82 183]
[84 181]
[85 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
