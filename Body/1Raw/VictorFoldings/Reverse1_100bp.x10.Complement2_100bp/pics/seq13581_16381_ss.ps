%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCCAAUAAAAGCAAUUACAAUCAUUCCCACCCCUUCGCUCCAACUGGACAAUCCCACUCUUCUUAAUAAGCUCACGAUAUCCGCGAACAGUCCCUCCAxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[68.37626648 785.64556885]
[53.35228348 784.97406006]
[38.67319489 781.70367432]
[24.78508568 775.93377686]
[12.11000061 767.83972168]
[1.03312075 757.66754150]
[-8.10894012 745.72625732]
[-15.03836632 732.37884521]
[-19.54457855 718.03082275]
[-21.49063873 703.11828613]
[-20.81740952 688.09436035]
[-17.54534721 673.41564941]
[-11.77388859 659.52819824]
[-3.67842031 646.85406494]
[6.49504519 635.77832031]
[18.43734741 626.63757324]
[31.78557587 619.70971680]
[46.13408661 615.20507812]
[61.04685211 613.26074219]
[61.71663666 598.27569580]
[62.38642502 583.29064941]
[63.05620956 568.30560303]
[63.72599411 553.32055664]
[52.71578217 563.50756836]
[37.74000549 564.35968018]
[25.64538002 555.48724365]
[21.96140862 540.94665527]
[28.37235451 527.38568115]
[41.94721603 521.00421143]
[56.47975540 524.71978760]
[65.32640839 536.83544922]
[67.55152130 522.00140381]
[69.77664185 507.16735840]
[72.00176239 492.33331299]
[73.89505005 477.45327759]
[75.45557404 462.53466797]
[77.01609802 447.61605835]
[78.57662201 432.69744873]
[80.13714600 417.77886963]
[81.69766235 402.86026001]
[83.25818634 387.94165039]
[84.81871033 373.02304077]
[86.37923431 358.10443115]
[79.00811005 348.51312256]
[80.18611145 336.07144165]
[89.82471466 327.50054932]
[91.60718536 312.60681152]
[92.50000000 297.63342285]
[92.50000000 282.63342285]
[92.50000000 267.63342285]
[92.50000000 252.63342285]
[92.50000000 237.63342285]
[81.81912994 227.31573486]
[81.60544586 212.10360718]
[92.50000000 200.97047424]
[92.50000000 185.97047424]
[92.50000000 170.97047424]
[78.72780609 168.12159729]
[65.78172302 162.62721252]
[54.16451263 154.70069885]
[44.32732010 144.64987183]
[36.65218353 132.86508179]
[31.43716621 119.80395508]
[28.88478851 105.97373962]
[29.09417725 91.91154480]
[32.05719757 78.16345978]
[37.65878677 65.26339722]
[45.68139648 53.71233368]
[55.81347656 43.95885468]
[67.66154480 36.38174057]
[80.76547241 31.27524567]
[94.61637878 28.83768272]
[95.06298828 13.84433270]
[95.50959015 -1.14901745]
[84.65227509 9.20079517]
[69.69084167 10.27573681]
[57.46545792 1.58435929]
[53.56540680 -12.89975643]
[59.77373886 -26.55466843]
[73.25209045 -33.13753510]
[87.83833313 -29.63875580]
[96.86438751 -17.65615845]
[98.86840057 -32.52168655]
[100.87241364 -47.38721466]
[102.76570892 -62.26725006]
[104.54817200 -77.16096497]
[98.50558472 -91.78279114]
[107.70046234 -103.50045013]
[101.65786743 -118.12227631]
[110.85274506 -129.83993530]
[112.63520813 -144.73365784]
[114.41767883 -159.62736511]
[116.20014191 -174.52108765]
[117.87168121 -189.42765808]
[119.43220520 -204.34626770]
[120.99272919 -219.26487732]
[122.55325317 -234.18347168]
[108.41175842 -239.42456055]
[96.01841736 -248.01850891]
[86.15229034 -259.42510986]
[79.43356323 -272.92730713]
[76.28459167 -287.67636108]
[76.90331268 -302.74514771]
[81.25083160 -317.18640137]
[89.05386353 -330.09234619]
[99.82190704 -340.65170288]
[112.87807465 -348.20071411]
[127.40163422 -352.26480103]
[142.47962952 -352.58853149]
[157.16424561 -349.15155029]
[170.53239441 -342.16992188]
[181.74374390 -332.08248901]
[190.09353638 -319.52334595]
[195.05690002 -305.28201294]
[196.32183838 -290.25366211]
[193.80882263 -275.38302612]
[187.67582703 -261.60488892]
[178.30838013 -249.78533936]
[166.29533386 -240.66737366]
[152.39183044 -234.82414246]
[137.47186279 -232.62295532]
[135.91133118 -217.70434570]
[134.35081482 -202.78573608]
[132.79028320 -187.86714172]
[135.22085571 -180.88758850]
[131.09385681 -172.73861694]
[129.31138611 -157.84490967]
[127.52893066 -142.95118713]
[125.74645996 -128.05746460]
[131.91654968 -114.50094604]
[122.59417725 -101.71798706]
[128.76425171 -88.16146088]
[119.44189453 -75.37850189]
[117.65942383 -60.48478317]
[119.98581696 -53.46982193]
[115.73794556 -45.38320160]
[113.73393250 -30.51767349]
[111.72991943 -15.65214539]
[110.50294495 -0.70241147]
[110.05633545 14.29093838]
[109.60973358 29.28428841]
[125.02252197 33.16489029]
[139.19421387 40.36048126]
[151.42189026 50.51416016]
[161.09906006 63.12231827]
[167.74575806 77.55959320]
[171.03228760 93.10989380]
[170.79565430 109.00194550]
[167.04757690 124.44750214]
[159.97398376 138.68048096]
[149.92572021 150.99491882]
[137.40115356 160.78004456]
[123.02149963 167.55049133]
[107.50000000 170.97047424]
[107.50000000 185.97047424]
[107.50000000 200.97047424]
[118.39455414 212.10360718]
[118.18087006 227.31573486]
[107.50000000 237.63342285]
[107.50000000 252.63342285]
[107.50000000 267.63342285]
[107.50000000 282.63342285]
[107.50000000 297.63342285]
[117.37503815 286.34255981]
[131.97468567 282.90011597]
[145.85362244 288.59002686]
[153.83535767 301.29010010]
[152.94288635 316.26351929]
[143.50910950 327.92556763]
[129.05256653 331.92660522]
[114.96518707 326.77432251]
[106.50090027 314.38928223]
[104.71843719 329.28302002]
[112.35616302 346.03851318]
[101.29783630 359.66494751]
[99.73731995 374.58355713]
[98.17679596 389.50216675]
[96.61627197 404.42077637]
[95.05574799 419.33938599]
[93.49522400 434.25799561]
[91.93470001 449.17657471]
[90.37417603 464.09518433]
[88.81365204 479.01379395]
[90.94075012 483.78060913]
[91.01885986 488.42251587]
[89.43869781 492.17993164]
[86.83580017 494.55844116]
[84.61068726 509.39245605]
[82.38556671 524.22650146]
[80.16045380 539.06054688]
[78.71102905 553.99035645]
[78.04124451 568.97540283]
[77.37145996 583.96044922]
[76.70167542 598.94549561]
[76.03189087 613.93054199]
[90.71172333 617.19757080]
[104.60113525 622.96429443]
[117.27806091 631.05548096]
[128.35723877 641.22515869]
[137.50201416 653.16436768]
[144.43446350 666.51025391]
[148.94393921 680.85723877]
[150.89337158 695.76934814]
[150.22355652 710.79339600]
[146.95481873 725.47283936]
[141.18650818 739.36157227]
[133.09391785 752.03759766]
[122.92296600 763.11566162]
[110.98274231 772.25903320]
[97.63608551 779.19000244]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 195]
[20 194]
[21 193]
[22 192]
[23 191]
[31 190]
[32 189]
[33 188]
[34 187]
[35 183]
[36 182]
[37 181]
[38 180]
[39 179]
[40 178]
[41 177]
[42 176]
[43 175]
[46 173]
[47 172]
[48 163]
[49 162]
[50 161]
[51 160]
[52 159]
[55 156]
[56 155]
[57 154]
[72 141]
[73 140]
[74 139]
[82 138]
[83 137]
[84 136]
[85 134]
[86 133]
[88 131]
[90 129]
[91 128]
[92 127]
[93 126]
[94 124]
[95 123]
[96 122]
[97 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
