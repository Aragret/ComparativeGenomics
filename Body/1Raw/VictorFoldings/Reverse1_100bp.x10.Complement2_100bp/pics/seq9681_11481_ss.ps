%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGGCAGCCUUUACCACUUCCCUCUGAGCUUCAUGAGACUCCGAACAUCCUCCCAUUUUAUCUCUGGGUCAUUUUAACAUUAUUCGUCACGAACUUAAUxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[186.62469482 439.08377075]
[183.08502197 424.50741577]
[179.54534912 409.93103027]
[176.00567627 395.35464478]
[172.46600342 380.77828979]
[167.83287048 375.02017212]
[168.98385620 365.95855713]
[165.66159058 351.33108521]
[160.72999573 337.16494751]
[154.25050354 323.63659668]
[147.77101135 310.10827637]
[141.29151917 296.57992554]
[134.81201172 283.05157471]
[122.33607483 274.91522217]
[123.35305023 259.12673950]
[116.87355804 245.59838867]
[110.39406586 232.07005310]
[110.16818237 247.06834412]
[106.26879883 261.55264282]
[98.93435669 274.63720703]
[88.61336517 285.52194214]
[75.93695831 293.54119873]
[61.68029404 298.20462036]
[46.71517563 299.22705078]
[31.95673370 296.54592896]
[18.30744553 290.32525635]
[6.60197210 280.94537354]
[-2.44389224 268.97991943]
[-8.27698994 255.16055298]
[-10.54062366 240.33233643]
[-9.09637260 225.40202332]
[-4.03255320 211.28262329]
[4.34118080 198.83750916]
[15.51277161 188.82774353]
[28.79907227 181.86540222]
[43.38762283 178.37623596]
[58.38632202 178.57362366]
[72.87799835 182.44548035]
[85.97647858 189.75505066]
[96.88079071 200.05534363]
[104.92413330 212.71652222]
[103.36361694 197.79791260]
[101.80309296 182.87931824]
[100.24256897 167.96070862]
[98.68204498 153.04209900]
[97.01050568 138.13552856]
[95.22803497 123.24181366]
[93.44557190 108.34809875]
[90.77977753 93.58687592]
[87.24010468 79.01050568]
[83.70043182 64.43412781]
[78.63432312 56.83331680]
[80.21828461 49.61439514]
[76.89602661 34.98693466]
[73.57376862 20.35947227]
[70.25151062 5.73201323]
[67.18993378 2.65293431]
[65.44309998 -0.88445145]
[64.99364471 -4.41055346]
[65.67347717 -7.50965548]
[67.19441986 -9.86441040]
[62.70766830 -17.82097054]
[64.82416534 -24.90208817]
[62.59904480 -39.73613358]
[60.37392807 -54.57017517]
[58.14881134 -69.40422058]
[48.44998169 -81.90395355]
[54.21369934 -95.63816833]
[44.51486969 -108.13790131]
[50.27859116 -121.87212372]
[48.05347061 -136.70616150]
[45.82835388 -151.54020691]
[30.82583427 -150.93058777]
[15.84535122 -151.94664001]
[1.06254232 -154.57643127]
[-13.34927082 -158.78913879]
[-27.22111702 -164.53535461]
[-40.39035797 -171.74774170]
[-52.70258713 -180.34170532]
[-64.01345062 -190.21649170]
[-74.19033813 -201.25634766]
[-83.11392975 -213.33180237]
[-90.67959595 -226.30130005]
[-96.79863739 -240.01277161]
[-101.39931488 -254.30546570]
[-104.42768097 -269.01181030]
[-105.84823608 -283.95935059]
[-105.64431763 -298.97286987]
[-103.81832123 -313.87631226]
[-100.39165497 -328.49499512]
[-95.40449524 -342.65744019]
[-88.91531372 -356.19769287]
[-81.00019073 -368.95690918]
[-71.75193024 -380.78555298]
[-61.27896118 -391.54492188]
[-49.70407486 -401.10888672]
[-37.16297913 -409.36529541]
[-23.80271149 -416.21734619]
[-9.77991867 -421.58468628]
[4.74099302 -425.40441895]
[19.58977318 -427.63174438]
[34.59232712 -428.24057007]
[49.57275391 -427.22372437]
[64.35542297 -424.59313965]
[78.76700592 -420.37963867]
[92.63854218 -414.63265991]
[105.80739594 -407.41958618]
[118.11916351 -398.82495117]
[129.42950439 -388.94955444]
[139.60578918 -377.90914917]
[148.52873230 -365.83322144]
[156.09370422 -352.86331177]
[162.21200562 -339.15151978]
[166.81192017 -324.85858154]
[169.83949280 -310.15206909]
[171.25923157 -295.20443726]
[171.05451965 -280.19094849]
[169.22772217 -265.28759766]
[165.80026245 -250.66911316]
[160.81234741 -236.50691223]
[154.32243347 -222.96704102]
[146.40661621 -210.20822144]
[137.15773010 -198.38008118]
[126.68417358 -187.62126160]
[115.10877228 -178.05793762]
[102.56723022 -169.80220032]
[89.20659637 -162.95088196]
[75.18351746 -157.58427429]
[60.66239929 -153.76531982]
[62.88751602 -138.93128967]
[65.11263275 -124.09723663]
[74.65230560 -112.65853882]
[69.04774475 -97.86328888]
[78.58741760 -86.42459106]
[72.98285675 -71.62933350]
[75.20796967 -56.79529190]
[77.43309021 -41.96125031]
[79.65821075 -27.12720490]
[81.99369812 -12.31013775]
[84.87896729 2.40975356]
[88.20122528 17.03721428]
[91.52348328 31.66467476]
[94.84574890 46.29213333]
[98.27680969 60.89445496]
[101.81648254 75.47083282]
[105.35615540 90.04721069]
[112.28791046 76.74492645]
[125.66288757 69.95449829]
[140.49255371 72.20858765]
[151.24581909 82.66647339]
[153.91195679 97.42762756]
[147.49658203 110.98650360]
[134.39247131 118.28597260]
[119.48712921 116.60350800]
[108.33928680 106.56562805]
[110.12175751 121.45935059]
[111.90422058 136.35307312]
[116.03121948 144.50202942]
[113.60064697 151.48158264]
[115.16117096 166.40019226]
[116.72169495 181.31878662]
[118.28221893 196.23739624]
[119.84274292 211.15600586]
[123.92240906 225.59056091]
[130.40190125 239.11889648]
[136.88139343 252.64724731]
[149.82080078 261.75122070]
[148.34036255 276.57208252]
[154.81985474 290.10043335]
[161.29936218 303.62875366]
[167.77885437 317.15710449]
[174.25834656 330.68545532]
[175.32255554 315.72326660]
[181.65388489 302.12493896]
[192.41931152 291.67959595]
[206.20249939 285.76147461]
[221.19000244 285.14923096]
[235.40995789 289.92340088]
[246.99150085 299.45587158]
[254.41087341 312.49246216]
[256.69192505 327.31802368]
[253.53454590 341.98193359]
[245.35415649 354.55496216]
[233.22700500 363.38290405]
[218.74864197 367.30426025]
[203.82394409 365.80313110]
[190.41650391 359.07702637]
[180.28906250 348.00881958]
[183.61131287 362.63629150]
[187.04237366 377.23861694]
[190.58204651 391.81497192]
[194.12171936 406.39135742]
[197.66139221 420.96774292]
[201.20106506 435.54409790]
[216.28027344 436.92117310]
[230.09429932 443.12210083]
[241.14469910 453.47427368]
[248.23280334 466.85473633]
[250.58975220 481.81213379]
[247.95989990 496.72396851]
[240.62847900 509.97268677]
[229.39077759 520.12121582]
[215.46575928 526.06872559]
[200.36390686 527.16998291]
[185.72335815 523.30566406]
[173.13221741 514.89483643]
[163.95626831 502.84988403]
[159.19085693 488.47735596]
[159.35290527 473.33627319]
[164.42480469 459.06903076]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 194]
[2 193]
[3 192]
[4 191]
[5 190]
[7 189]
[8 188]
[9 172]
[10 171]
[11 170]
[12 169]
[13 168]
[15 166]
[16 165]
[17 164]
[41 163]
[42 162]
[43 161]
[44 160]
[45 159]
[46 157]
[47 156]
[48 155]
[49 146]
[50 145]
[51 144]
[53 143]
[54 142]
[55 141]
[56 140]
[61 139]
[63 138]
[64 137]
[65 136]
[66 135]
[68 133]
[70 131]
[71 130]
[72 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
