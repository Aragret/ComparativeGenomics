%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCUGACUAUUAUUUCCACCUACGCUGUUACCUAAAAUGUAUUACCCCCAUACUCAAAAAAAACAAUCCCAAUUGCUCCCACCAUUCCUACCCCCCUUAxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[-81.92842865 390.54458618]
[-74.53296661 403.62094116]
[-68.94644928 417.56634521]
[-65.26858521 432.13192749]
[-63.56501007 447.05780029]
[-63.86611938 462.07754517]
[-66.16654205 476.92312622]
[-70.42522430 491.32962036]
[-76.56616211 505.03991699]
[-84.47977448 517.80932617]
[-94.02481842 529.41003418]
[-105.03096008 539.63488770]
[-117.30178070 548.30151367]
[-130.61830139 555.25524902]
[-144.74285889 560.37188721]
[-159.42338562 563.56024170]
[-174.39788818 564.76336670]
[-189.39915466 563.95971680]
[-204.15943909 561.16375732]
[-218.41532898 556.42535400]
[-231.91242981 549.82897949]
[-244.40986633 541.49249268]
[-255.68460083 531.56451416]
[-265.53540039 520.22235107]
[-273.78652954 507.66836548]
[-280.29064941 494.12661743]
[-284.93176270 479.83871460]
[-287.62701416 465.05972290]
[-288.32827759 450.05331421]
[-287.02310181 435.08737183]
[-283.73471069 420.42892456]
[-278.52185059 406.33959961]
[-271.47747803 393.07080078]
[-262.72738647 380.85937500]
[-252.42767334 369.92321777]
[-240.76219177 360.45748901]
[-227.93908691 352.63116455]
[-214.18722534 346.58386230]
[-199.75202942 342.42352295]
[-184.89109802 340.22439575]
[-169.86964417 340.02572632]
[-154.95574951 341.83105469]
[-140.41557312 345.60815430]
[-126.50859070 351.28964233]
[-113.48299408 358.77410889]
[-104.34419250 346.87948608]
[-95.20539093 334.98483276]
[-93.58674622 320.17843628]
[-79.04344940 313.94921875]
[-69.90464783 302.05459595]
[-60.76584625 290.15997314]
[-51.62704086 278.26531982]
[-50.00839615 263.45892334]
[-35.46510315 257.22970581]
[-26.32630157 245.33508301]
[-34.28398514 233.62658691]
[-38.24264908 220.01225281]
[-37.80253601 205.81942749]
[-32.99343109 192.43615723]
[-24.27304649 181.17536926]
[-12.48349762 173.14616394]
[1.23002315 169.14448547]
[15.53046608 169.57429504]
[29.01929092 174.40681458]
[38.33417511 162.64956665]
[47.64905548 150.89231873]
[47.99880600 146.12925720]
[51.34439087 141.53533936]
[57.42050552 138.92912292]
[67.08131409 127.45442963]
[76.74212646 115.97972870]
[86.40293884 104.50502777]
[89.04246521 90.77460480]
[102.12236023 85.83415985]
[111.78317261 74.35945892]
[114.75234985 58.81936646]
[128.86828613 54.06649780]
[138.52909851 42.59179688]
[147.48979187 30.56241989]
[155.71859741 18.02101898]
[163.94740295 5.47961903]
[172.17620850 -7.06178141]
[180.40501404 -19.60318184]
[188.63381958 -32.14458084]
[196.86264038 -44.68598175]
[197.62033081 -51.25389099]
[201.06422424 -55.77457809]
[205.52781677 -57.47323227]
[214.12637329 -69.76406860]
[215.69729614 -85.50709534]
[229.33290100 -91.50037384]
[237.93147278 -103.79121399]
[246.43829346 -116.14572144]
[254.85292053 -128.56321716]
[243.31022644 -138.16180420]
[232.76394653 -148.84558105]
[223.31567383 -160.51162720]
[215.05636597 -173.04760742]
[208.06559753 -186.33279419]
[202.41069031 -200.23921204]
[198.14608765 -214.63296509]
[195.31288147 -229.37541199]
[193.93835449 -244.32456970]
[194.03572083 -259.33648682]
[195.60406494 -274.26654053]
[198.62829590 -288.97100830]
[203.07925415 -303.30822754]
[208.91409302 -317.14010620]
[216.07661438 -330.33349609]
[224.49784851 -342.76126099]
[234.09666443 -354.30377197]
[244.78065491 -364.84982300]
[256.44689941 -374.29788208]
[268.98303223 -382.55691528]
[282.26834106 -389.54742432]
[296.17489624 -395.20205688]
[310.56872559 -399.46636963]
[325.31121826 -402.29928589]
[340.26040649 -403.67352295]
[355.27233887 -403.57583618]
[370.20236206 -402.00720215]
[384.90676880 -398.98269653]
[399.24389648 -394.53143311]
[413.07565308 -388.69631958]
[426.26889038 -381.53353882]
[438.69650269 -373.11206055]
[450.23880005 -363.51300049]
[460.78466797 -352.82882690]
[470.23248291 -341.16238403]
[478.49127197 -328.62606812]
[485.48150635 -315.34060669]
[491.13586426 -301.43395996]
[495.39987183 -287.04003906]
[498.23251343 -272.29748535]
[499.60644531 -257.34826660]
[499.50848389 -242.33636475]
[497.93951416 -227.40635681]
[494.91470337 -212.70202637]
[490.46316528 -198.36499023]
[484.62777710 -184.53332520]
[477.46472168 -171.34024048]
[469.04299927 -158.91279602]
[459.44372559 -147.37068176]
[448.75930786 -136.82504272]
[437.09271240 -127.37746429]
[424.55621338 -119.11891937]
[411.27062988 -112.12894440]
[397.36386108 -106.47486877]
[382.96984863 -102.21112823]
[368.22723389 -99.37880707]
[353.27798462 -98.00516510]
[338.26611328 -98.10344696]
[323.33612061 -99.67269135]
[308.63183594 -102.69779205]
[294.29489136 -107.14961243]
[280.46334839 -112.98528290]
[267.27041626 -120.14859772]
[258.85580444 -107.73110199]
[257.70584106 -100.43045807]
[250.22230530 -95.19264984]
[241.62374878 -82.90180969]
[240.66786194 -68.03791046]
[226.41722107 -61.16550827]
[217.81864929 -48.87466812]
[209.40403748 -36.45717621]
[201.17523193 -23.91577339]
[192.94641113 -11.37437344]
[184.71760559 1.16702640]
[176.48880005 13.70842648]
[168.25999451 26.24982643]
[160.03118896 38.79122543]
[174.48165894 34.76833344]
[188.57681274 39.89929962]
[197.05949402 52.27040100]
[196.76586914 67.26752472]
[187.80545044 79.29711914]
[173.52026367 83.87243652]
[159.23832703 79.28699493]
[150.28645325 67.25106049]
[150.00378418 52.25260925]
[140.34298706 63.72730637]
[138.06480408 78.44665527]
[123.25787354 84.02027130]
[113.59706116 95.49497223]
[110.95753479 109.22539520]
[97.87763977 114.16584015]
[88.21682739 125.64054108]
[78.55601501 137.11523438]
[68.89520264 148.58993530]
[59.40630722 160.20719910]
[50.09142303 171.96444702]
[40.77654266 183.72171021]
[49.19895935 197.24584961]
[52.47573090 212.81018066]
[50.22865295 228.52905273]
[42.74761200 242.50456238]
[30.95331573 253.05564880]
[16.28403091 258.92031860]
[0.52019453 259.40652466]
[-14.43166924 254.47387695]
[-23.57047081 266.36849976]
[-25.84278488 282.02569580]
[-39.73241043 287.40411377]
[-48.87121201 299.29876709]
[-58.01001358 311.19338989]
[-67.14881897 323.08801270]
[-69.42112732 338.74520874]
[-83.31075287 344.12362671]
[-92.44955444 356.01828003]
[-101.58835602 367.91290283]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 210]
[46 209]
[47 208]
[49 206]
[50 205]
[51 204]
[52 203]
[54 201]
[55 200]
[64 192]
[65 191]
[66 190]
[69 189]
[70 188]
[71 187]
[72 186]
[74 184]
[75 183]
[77 181]
[78 180]
[79 171]
[80 170]
[81 169]
[82 168]
[83 167]
[84 166]
[85 165]
[88 164]
[89 163]
[91 161]
[92 160]
[93 158]
[94 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
