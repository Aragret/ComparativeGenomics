%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[164.37181091 869.13317871]
[149.56175232 866.74078369]
[134.86004639 863.75402832]
[120.29051208 860.17767334]
[105.87680817 856.01763916]
[91.64230347 851.28051758]
[77.61008453 845.97412109]
[63.80290985 840.10699463]
[50.24318314 833.68865967]
[36.95289230 826.72955322]
[23.95359802 819.24090576]
[11.26638031 811.23492432]
[-1.08817828 802.72454834]
[-13.09004021 793.72363281]
[-24.71973610 784.24676514]
[-35.95840454 774.30926514]
[-46.78781891 763.92730713]
[-57.19041061 753.11773682]
[-67.14930725 741.89801025]
[-76.64835358 730.28643799]
[-85.67214203 718.30175781]
[-94.20603943 705.96343994]
[-102.23619843 693.29150391]
[-109.74960327 680.30651855]
[-116.73405457 667.02954102]
[-123.17823792 653.48205566]
[-129.07168579 639.68609619]
[-134.40484619 625.66406250]
[-139.16908264 611.43859863]
[-143.35664368 597.03283691]
[-146.96073914 582.47015381]
[-149.97554016 567.77416992]
[-152.39614868 552.96868896]
[-154.21862793 538.07775879]
[-155.44004822 523.12554932]
[-156.05839539 508.13623047]
[-156.07269287 493.13421631]
[-155.48291016 478.14376831]
[-154.28999329 463.18923950]
[-152.49588013 448.29486084]
[-150.10350037 433.48480225]
[-147.11669922 418.78308105]
[-143.54035950 404.21356201]
[-139.38024902 389.79986572]
[-134.64314270 375.56536865]
[-129.33671570 361.53314209]
[-123.46955872 347.72598267]
[-117.05120850 334.16625977]
[-110.09207153 320.87600708]
[-102.60342407 307.87670898]
[-94.59742737 295.18951416]
[-86.08705902 282.83496094]
[-77.08612061 270.83309937]
[-67.60922241 259.20343018]
[-57.67172623 247.96476746]
[-47.28975296 237.13536072]
[-36.48014450 226.73278809]
[-25.26043129 216.77391052]
[-13.64881516 207.27488708]
[-1.66412783 198.25111389]
[10.67419052 189.71722412]
[23.34612846 181.68708801]
[36.33113098 174.17370605]
[49.60813522 167.18927002]
[63.15560913 160.74510193]
[76.95157623 154.85166931]
[90.97365570 149.51852417]
[105.19911194 144.75431824]
[101.01210022 130.35054016]
[96.82508850 115.94675446]
[84.42077637 104.65475464]
[88.59729004 88.40874481]
[84.19628906 74.06889343]
[79.79529572 59.72904587]
[75.39429474 45.38919830]
[70.99330139 31.04935265]
[66.48567200 16.74266624]
[61.87166214 2.46993256]
[46.96399307 4.47024775]
[31.93873978 3.77633858]
[17.27889824 0.41051111]
[3.45571995 -5.51903725]
[-9.08643436 -13.82169533]
[-19.94438744 -24.23056793]
[-28.76910019 -36.41105270]
[-35.27689743 -49.97159958]
[-39.25857544 -64.47628784]
[-40.58614349 -79.45885468]
[-39.21692657 -94.43767548]
[-35.19493484 -108.93123627]
[-28.64946365 -122.47363281]
[-19.79091835 -134.62953186]
[-8.90406895 -145.00817871]
[3.66112041 -153.27593994]
[17.50073051 -159.16703796]
[32.16987228 -162.49209595]
[47.19699860 -163.14422607]
[62.09904861 -161.10246277]
[76.39698029 -156.43246460]
[89.63117218 -149.28431702]
[101.37620544 -139.88783264]
[111.25451660 -128.54505920]
[118.94857788 -115.62060547]
[124.21103668 -101.52996063]
[126.87273407 -86.72607422]
[126.84811401 -71.68482208]
[124.13795471 -56.88972855]
[118.82939148 -42.81639099]
[111.09305573 -29.91720581]
[101.17765808 -18.60683060]
[89.40192413 -9.24884701]
[76.14439392 -2.14407682]
[80.75839996 12.12865639]
[85.80697632 17.52622223]
[85.33314514 26.64835358]
[89.73414612 40.98820114]
[94.13513947 55.32804871]
[98.53614044 69.66789246]
[102.93714142 84.00774384]
[112.87877655 90.07446289]
[116.21287537 101.23354340]
[111.22886658 111.75974274]
[115.41587830 126.16352844]
[119.60289001 140.56730652]
[134.16555786 136.96315002]
[148.86154175 133.94828796]
[163.66699219 131.52761841]
[178.55792236 129.70506287]
[193.51014709 128.48359680]
[208.49943542 127.86518097]
[223.50146484 127.85082245]
[238.49191284 128.44055176]
[253.44645691 129.63340759]
[268.34085083 131.42744446]
[283.15090942 133.81977844]
[297.85263062 136.80650330]
[312.42214966 140.38279724]
[326.83587646 144.54283142]
[341.07040405 149.27989197]
[355.10263062 154.58625793]
[368.90982056 160.45335388]
[382.46957397 166.87165833]
[395.75988770 173.83073425]
[408.75918579 181.31933594]
[421.44644165 189.32527161]
[433.80102539 197.83560181]
[445.80288696 206.83648682]
[457.43261719 216.31333923]
[468.67132568 226.25077820]
[479.50076294 236.63270569]
[489.90338135 247.44227600]
[499.86230469 258.66195679]
[509.36138916 270.27352905]
[518.38519287 282.25817871]
[526.91912842 294.59646606]
[534.94934082 307.26837158]
[542.46276855 320.25332642]
[549.44726562 333.53030396]
[555.89147949 347.07775879]
[561.78497314 360.87368774]
[567.11816406 374.89575195]
[571.88244629 389.12118530]
[576.07000732 403.52691650]
[579.67419434 418.08959961]
[582.68902588 432.78558350]
[585.10968018 447.59103394]
[586.93218994 462.48196411]
[588.15362549 477.43420410]
[588.77203369 492.42349243]
[588.78637695 507.42553711]
[588.19665527 522.41595459]
[587.00372314 537.37048340]
[585.20971680 552.26489258]
[582.81732178 567.07495117]
[579.83056641 581.77667236]
[576.25427246 596.34619141]
[572.09423828 610.75988770]
[567.35717773 624.99444580]
[562.05078125 639.02667236]
[556.18365479 652.83386230]
[549.76531982 666.39355469]
[542.80621338 679.68389893]
[535.31762695 692.68316650]
[527.31164551 705.37042236]
[518.80133057 717.72497559]
[509.80041504 729.72686768]
[500.32354736 741.35656738]
[490.38607788 752.59521484]
[480.00415039 763.42468262]
[469.19454956 773.82727051]
[457.97488403 783.78619385]
[446.36328125 793.28521729]
[434.37863159 802.30902100]
[422.04031372 810.84295654]
[409.36840820 818.87316895]
[396.38342285 826.38653564]
[383.10644531 833.37103271]
[369.55899048 839.81524658]
[355.76303101 845.70867920]
[341.74096680 851.04187012]
[327.51553345 855.80615234]
[313.10977173 859.99371338]
[298.54711914 863.59783936]
[283.85113525 866.61267090]
[269.04565430 869.03326416]
[254.15473938 870.85577393]
[239.20249939 872.07720947]
[224.21321106 872.69561768]
[209.21116638 872.70989990]
[194.22073364 872.12011719]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[68 124]
[69 123]
[70 122]
[72 119]
[73 118]
[74 117]
[75 116]
[76 115]
[77 113]
[78 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
