%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUCAUCUCCCUACUACGAUUAUUAAUCCGACACCCACCAACACAACUAAGUUUAAUACACAAAAAACCUUUCAGUACAGUCACCAUCAUUAUAUUAACxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[56.96813202 528.52038574]
[43.13958740 535.20367432]
[27.82323647 534.06134033]
[15.13909912 525.40063477]
[8.49914646 511.55120850]
[9.68949223 496.23849487]
[18.38993835 483.58157349]
[32.26010895 476.98507690]
[33.37575912 462.02661133]
[34.49140930 447.06814575]
[35.60705566 432.10971069]
[28.83779716 418.84222412]
[37.58007812 405.65573120]
[30.81081772 392.38824463]
[39.55309677 379.20178223]
[40.66874695 364.24331665]
[30.50381088 375.27392578]
[16.01615334 379.16079712]
[1.69493270 374.69955444]
[-8.02226448 363.27255249]
[-10.12445927 348.42059326]
[-3.96026421 334.74569702]
[8.56027794 326.48519897]
[23.55754089 326.19866943]
[36.38446045 333.97494507]
[43.06652069 347.40466309]
[46.17063141 332.72933960]
[49.27474213 318.05404663]
[52.37885284 303.37875366]
[55.37362671 288.68075562]
[58.25889969 273.96084595]
[61.14417267 259.24096680]
[64.02944183 244.52107239]
[66.91471863 229.80117798]
[69.79998779 215.08128357]
[72.68526459 200.36138916]
[75.57053375 185.64151001]
[78.45580292 170.92161560]
[81.34107971 156.20172119]
[71.08173370 145.43678284]
[69.10507202 130.51844788]
[76.37691498 117.14034271]
[90.29269409 110.53297424]
[85.94354248 97.24476624]
[94.98741913 86.58174896]
[97.87268829 71.86186218]
[100.64830017 57.12089539]
[103.31409454 42.35968018]
[105.97988892 27.59846306]
[96.72949219 39.40651703]
[84.31814575 47.83020020]
[69.92881775 52.06662369]
[54.93301010 51.71199417]
[40.76002884 46.80011368]
[28.76074791 37.79915237]
[20.07886505 25.56702805]
[15.54188251 11.26962280]
[15.58223534 -3.73032331]
[20.19607735 -18.00311089]
[28.94364738 -30.18834877]
[40.99118423 -39.12461853]
[55.19038773 -43.96017075]
[70.18788910 -44.23411179]
[84.55421448 -39.92033005]
[96.92005920 -31.42999077]
[106.10678864 -19.57233620]
[111.23878479 -5.47756481]
[111.82677460 9.51202869]
[118.30626678 -4.01631641]
[124.78576660 -17.54466248]
[131.26525879 -31.07300758]
[131.13868713 -37.68326569]
[133.94773865 -42.62353516]
[138.14436340 -44.90330124]
[145.02378845 -58.23273087]
[144.47734070 -74.04449463]
[157.19000244 -81.80577850]
[164.06941223 -95.13520813]
[170.94882202 -108.46463776]
[164.14453125 -122.28518677]
[166.75244141 -137.28692627]
[177.56594849 -147.75268555]
[192.29232788 -149.81944275]
[199.17173767 -163.14888000]
[206.05116272 -176.47830200]
[212.93057251 -189.80772400]
[219.80998230 -203.13716125]
[226.68939209 -216.46658325]
[214.04220581 -224.55195618]
[202.19499207 -233.76979065]
[191.24885559 -244.04142761]
[181.29714966 -255.27923584]
[172.42481995 -267.38732910]
[164.70753479 -280.26245117]
[158.21116638 -293.79467773]
[152.99110413 -307.86862183]
[149.09190369 -322.36416626]
[146.54684448 -337.15765381]
[145.37760925 -352.12286377]
[145.59420776 -367.13214111]
[147.19476318 -382.05737305]
[150.16564941 -396.77127075]
[154.48149109 -411.14825439]
[160.10548401 -425.06570435]
[166.98962402 -438.40487671]
[175.07521057 -451.05191040]
[184.29322815 -462.89898682]
[194.56504822 -473.84494019]
[205.80302429 -483.79644775]
[217.91128540 -492.66857910]
[230.78651428 -500.38565063]
[244.31886292 -506.88180542]
[258.39288330 -512.10162354]
[272.88851929 -516.00061035]
[287.68203735 -518.54541016]
[302.64727783 -519.71441650]
[317.65652466 -519.49755859]
[332.58172607 -517.89672852]
[347.29556274 -514.92559814]
[361.67248535 -510.60952759]
[375.58984375 -504.98532104]
[388.92889404 -498.10092163]
[401.57580566 -490.01513672]
[413.42272949 -480.79693604]
[424.36853027 -470.52493286]
[434.31985474 -459.28677368]
[443.19177246 -447.17837524]
[450.90863037 -434.30300903]
[457.40457153 -420.77053833]
[462.62414551 -406.69644165]
[466.52285767 -392.20077515]
[469.06744385 -377.40719604]
[470.23617554 -362.44195557]
[470.01907349 -347.43270874]
[468.41799927 -332.50750732]
[465.44665527 -317.79370117]
[461.13031006 -303.41687012]
[455.50585938 -289.49960327]
[448.62127686 -276.16067505]
[440.53527832 -263.51388550]
[431.31686401 -251.66712952]
[421.04467773 -240.72149658]
[409.80636597 -230.77037048]
[397.69781494 -221.89863586]
[384.82232666 -214.18200684]
[371.28973389 -207.68629456]
[357.21554565 -202.46694946]
[342.71981812 -198.56846619]
[327.92620850 -196.02413940]
[312.96093750 -194.85566711]
[297.95169067 -195.07301331]
[283.02651978 -196.67431641]
[268.31277466 -199.64593506]
[253.93598938 -203.96249390]
[240.01882935 -209.58717346]
[233.13940430 -196.25775146]
[226.25999451 -182.92831421]
[219.38058472 -169.59889221]
[212.50117493 -156.26945496]
[205.62176514 -142.94003296]
[212.46846008 -129.73924255]
[210.20233154 -114.86212921]
[199.48524475 -104.04559326]
[184.27825928 -101.58522034]
[177.39883423 -88.25579071]
[170.51942444 -74.92636108]
[171.55793762 -60.06800461]
[158.35321045 -51.35331726]
[151.47380066 -38.02388763]
[144.79360962 -24.59351158]
[138.31410217 -11.06516647]
[131.83460999 2.46317935]
[125.35511780 15.99152470]
[120.74110413 30.26425743]
[118.07530975 45.02547455]
[115.40951538 59.78669357]
[117.31423950 66.92768860]
[112.59258270 74.74713135]
[109.70730591 89.46702576]
[114.05645752 102.75523376]
[105.01258087 113.41825104]
[115.40421295 124.79015350]
[117.08745575 139.92356873]
[109.62511444 152.99174500]
[96.06097412 159.08699036]
[93.17569733 173.80688477]
[90.29042816 188.52677917]
[87.40515137 203.24667358]
[84.51988220 217.96655273]
[81.63460541 232.68644714]
[78.74933624 247.40634155]
[75.86405945 262.12622070]
[72.97879028 276.84613037]
[70.09351349 291.56600952]
[71.51379395 300.58935547]
[67.05415344 306.48284912]
[63.95004272 321.15817261]
[60.84593201 335.83346558]
[57.74182510 350.50875854]
[55.62720108 365.35894775]
[54.51155090 380.31741333]
[61.20101166 394.65484619]
[52.53852844 406.77139282]
[59.22798920 421.10879517]
[50.56550980 433.22534180]
[49.44985962 448.18380737]
[48.33421326 463.14227295]
[47.21856308 478.10070801]
[59.95674515 486.68176270]
[66.68338776 500.48928833]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 208]
[9 207]
[10 206]
[11 205]
[13 203]
[15 201]
[16 200]
[26 199]
[27 198]
[28 197]
[29 196]
[30 194]
[31 193]
[32 192]
[33 191]
[34 190]
[35 189]
[36 188]
[37 187]
[38 186]
[39 185]
[43 181]
[45 179]
[46 178]
[47 176]
[48 175]
[49 174]
[68 173]
[69 172]
[70 171]
[71 170]
[74 169]
[75 168]
[77 166]
[78 165]
[79 164]
[83 160]
[84 159]
[85 158]
[86 157]
[87 156]
[88 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
