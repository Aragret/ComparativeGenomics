%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[40.30755615 446.22100830]
[45.37946701 460.48825073]
[45.54150391 475.62933350]
[40.77609253 490.00186157]
[31.60014725 502.04681396]
[19.00900650 510.45764160]
[4.36846256 514.32196045]
[-10.73338795 513.22070312]
[-24.65840721 507.27319336]
[-35.89611816 497.12466431]
[-43.22753143 483.87594604]
[-45.85739517 468.96411133]
[-43.50043869 454.00671387]
[-36.41233063 440.62622070]
[-25.36193085 430.27407837]
[-11.54790688 424.07315063]
[3.53129864 422.69607544]
[7.07097101 408.11972046]
[2.55554295 393.92605591]
[13.33086872 382.34143066]
[16.87054062 367.76507568]
[20.41021347 353.18869019]
[18.93390465 345.94699097]
[24.11261749 338.42245483]
[19.80901146 324.16311646]
[30.75562096 312.74023438]
[34.51192093 298.21817017]
[28.91841316 281.58450317]
[41.93443680 268.55895996]
[45.47410965 253.98257446]
[49.01378250 239.40620422]
[47.53747177 232.16448975]
[52.71618652 224.63995361]
[56.47248459 210.11788940]
[60.22878647 195.59584045]
[46.17641830 200.84283447]
[33.23474884 193.25907898]
[30.94389915 178.43504333]
[40.99259186 167.29844666]
[55.97331238 168.05877686]
[64.84251404 180.15393066]
[69.66851044 165.95146179]
[74.49450684 151.74900818]
[79.32050323 137.54655457]
[84.14650726 123.34410095]
[88.97250366 109.14164734]
[86.43765259 95.39151001]
[96.82504272 86.03235626]
[101.65103912 71.82990265]
[106.47703552 57.62744522]
[111.30303955 43.42499161]
[116.12903595 29.22253418]
[120.31604767 14.81875229]
[123.85572052 0.24237724]
[127.39538574 -14.33399773]
[130.93505859 -28.91037369]
[134.47473145 -43.48674774]
[130.21249390 -58.72301483]
[140.73463440 -69.26501465]
[144.27430725 -83.84139252]
[147.81398010 -98.41776276]
[151.35365295 -112.99414062]
[154.89332581 -127.57051849]
[158.32438660 -142.17283630]
[161.64663696 -156.80029297]
[164.96890259 -171.42776489]
[168.29116821 -186.05522156]
[166.70367432 -192.47326660]
[168.34875488 -197.91300964]
[171.93623352 -201.06562805]
[175.69253540 -215.58769226]
[179.44883728 -230.10975647]
[183.20513916 -244.63182068]
[171.60478210 -235.12225342]
[156.82015991 -232.58943176]
[142.71595764 -237.69543457]
[132.97895813 -249.10556030]
[130.15438843 -263.83721924]
[134.98060608 -278.03961182]
[146.19602966 -288.00024414]
[160.86898804 -291.11544800]
[175.16398621 -286.57089233]
[185.34436035 -275.55456543]
[188.74902344 -260.94692993]
[194.61798096 -274.75109863]
[200.48693848 -288.55529785]
[206.35589600 -302.35946655]
[212.22485352 -316.16363525]
[218.09382629 -329.96780396]
[223.96278381 -343.77200317]
[224.44053650 -352.89392090]
[230.02325439 -357.73696899]
[236.09709167 -371.45223999]
[223.16438293 -379.08517456]
[211.20526123 -388.16790771]
[200.38148499 -398.57760620]
[190.83941650 -410.17355347]
[182.70809937 -422.79885864]
[176.09750366 -436.28277588]
[171.09704590 -450.44299316]
[167.77432251 -465.08801270]
[166.17428589 -480.01971436]
[166.31857300 -495.03625488]
[168.20523071 -509.93447876]
[171.80874634 -524.51293945]
[177.08038330 -538.57446289]
[183.94885254 -551.92883301]
[192.32127380 -564.39556885]
[202.08439636 -575.80603027]
[213.10621643 -586.00579834]
[225.23764038 -594.85711670]
[238.31463623 -602.24011230]
[252.16033936 -608.05499268]
[266.58749390 -612.22314453]
[281.40100098 -614.68823242]
[296.40051270 -615.41680908]
[311.38320923 -614.39916992]
[326.14642334 -611.64892578]
[340.49053955 -607.20330811]
[354.22152710 -601.12249756]
[367.15374756 -593.48870850]
[379.11224365 -584.40521240]
[389.93533325 -573.99475098]
[399.47662354 -562.39819336]
[407.60708618 -549.77233887]
[414.21679688 -536.28796387]
[419.21630859 -522.12744141]
[422.53805542 -507.48220825]
[424.13708496 -492.55035400]
[423.99179077 -477.53387451]
[422.10415649 -462.63577271]
[418.49966431 -448.05755615]
[413.22708130 -433.99639893]
[406.35772705 -420.64242554]
[397.98446655 -408.17626953]
[388.22058105 -396.76647949]
[377.19808960 -386.56741333]
[365.06607056 -377.71694946]
[351.98858643 -370.33480835]
[338.14248657 -364.52081299]
[323.71505737 -360.35363770]
[308.90139771 -357.88955688]
[293.90182495 -357.16195679]
[278.91918945 -358.18063354]
[264.15615845 -360.93185425]
[249.81236267 -365.37838745]
[243.73852539 -351.66314697]
[237.76695251 -337.90301514]
[231.89799500 -324.09884644]
[226.02903748 -310.29467773]
[220.16007996 -296.49050903]
[214.29112244 -282.68630981]
[208.42214966 -268.88214111]
[202.55319214 -255.07797241]
[197.72720337 -240.87551880]
[193.97090149 -226.35345459]
[190.21459961 -211.83139038]
[186.45829773 -197.30934143]
[182.91862488 -182.73295593]
[179.59635925 -168.10549927]
[176.27410889 -153.47804260]
[172.95184326 -138.85058594]
[174.53581238 -131.63165283]
[169.46969604 -124.03084564]
[165.93002319 -109.45446777]
[162.39035034 -94.87808990]
[158.85067749 -80.30171967]
[155.31100464 -65.72534180]
[159.82643127 -51.53167725]
[149.05111694 -39.94707489]
[145.51144409 -25.37070084]
[141.97177124 -10.79432583]
[138.43209839 3.78204966]
[134.89242554 18.35842514]
[148.23248291 11.49964523]
[162.55674744 15.95110703]
[169.65962219 29.16281128]
[165.47225952 43.56649399]
[152.39337158 50.91106796]
[137.91514587 46.98923492]
[130.33148193 34.04853058]
[125.50549316 48.25098801]
[120.67949677 62.45344543]
[115.85349274 76.65589905]
[111.02749634 90.85835266]
[113.56234741 104.60848999]
[103.17495728 113.96764374]
[98.34896088 128.17010498]
[93.52296448 142.37255859]
[88.69696045 156.57501221]
[83.87096405 170.77746582]
[79.04496765 184.97991943]
[74.75084686 199.35212708]
[70.99454498 213.87419128]
[67.23824310 228.39625549]
[63.59015656 242.94587708]
[60.05048370 257.52224731]
[56.51081085 272.09863281]
[62.54262543 283.49951172]
[59.29433823 295.56732178]
[49.03398132 301.97448730]
[45.27767944 316.49655151]
[49.31261063 331.79458618]
[38.63467789 342.17874146]
[34.98658752 356.72836304]
[31.44691658 371.30474854]
[27.90724373 385.88110352]
[32.16949081 401.11737061]
[21.64734650 411.65939331]
[18.10767365 426.23574829]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 210]
[18 209]
[20 207]
[21 206]
[22 205]
[24 204]
[26 202]
[27 201]
[29 198]
[30 197]
[31 196]
[33 195]
[34 194]
[35 193]
[41 192]
[42 191]
[43 190]
[44 189]
[45 188]
[46 187]
[48 185]
[49 184]
[50 183]
[51 182]
[52 181]
[53 174]
[54 173]
[55 172]
[56 171]
[57 170]
[59 168]
[60 167]
[61 166]
[62 165]
[63 164]
[64 162]
[65 161]
[66 160]
[67 159]
[70 158]
[71 157]
[72 156]
[73 155]
[84 154]
[85 153]
[86 152]
[87 151]
[88 150]
[89 149]
[90 148]
[92 147]
[93 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
