%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAGACUCCAUUAUUUAUCCUAAUAGGGCAUAGCUUCCGGAAAAACCUGUCCACCACACACCACCGGAACCAUACACGAAAGAGCACAAUGUAGCGxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[161.49789429 526.87017822]
[160.20693970 511.84408569]
[162.69419861 496.96911621]
[168.80331421 483.18038940]
[178.15026855 471.34460449]
[190.14750671 462.20584106]
[204.04086304 456.33853149]
[201.81575012 441.50448608]
[199.59063721 426.67044067]
[197.36552429 411.83639526]
[195.14039612 397.00238037]
[192.25512695 382.28247070]
[188.71545410 367.70608521]
[185.17578125 353.12973022]
[181.63565063 349.92404175]
[180.07171631 344.46041870]
[181.75459290 338.06671143]
[178.65048218 323.39138794]
[175.54637146 308.71609497]
[171.14538574 294.37625122]
[159.17584229 285.51174927]
[161.13076782 269.81179810]
[155.46797180 255.92176819]
[149.80519104 242.03173828]
[144.14239502 228.14170837]
[129.36779785 226.25045776]
[117.44425964 217.15733337]
[111.63472748 203.22479248]
[113.59186554 188.15606689]
[122.88935852 176.01095581]
[117.22657013 162.12092590]
[105.25702667 153.25642395]
[107.21195221 137.55645752]
[101.54916382 123.66643524]
[95.88638306 109.77640533]
[89.60901642 96.15309143]
[82.72960663 82.82366180]
[75.85019684 69.49423218]
[70.50222015 65.60697937]
[68.25720215 60.38616562]
[68.97108459 55.66394043]
[62.49158859 42.13559341]
[50.60792542 37.12147903]
[45.48964691 25.72029495]
[49.38301086 14.26742363]
[43.10565186 0.64410710]
[28.02368355 -2.49284077]
[17.80026817 -13.77713013]
[16.20069885 -28.74059868]
[23.63001823 -41.62249374]
[17.35265732 -55.24580765]
[11.07529736 -68.86912537]
[4.79793596 -82.49243927]
[-1.47942448 -96.11576080]
[-7.75678539 -109.73907471]
[-14.03414631 -123.36238861]
[-26.83656883 -132.65800476]
[-25.13563538 -147.45516968]
[-31.41299629 -161.07849121]
[-44.21541977 -170.37411499]
[-42.51448441 -185.17127991]
[-57.06825638 -190.72334290]
[-63.24032211 -204.62873840]
[-57.85758591 -218.46932983]
[-64.13494873 -232.09265137]
[-70.41230774 -245.71595764]
[-83.21472931 -255.01158142]
[-81.51379395 -269.80874634]
[-87.79115295 -283.43206787]
[-102.17884827 -279.10302734]
[-117.02901459 -276.81860352]
[-132.05259705 -276.62322998]
[-146.95715332 -278.52072144]
[-161.45256042 -282.47412109]
[-175.25665283 -288.40646362]
[-188.10075378 -296.20233154]
[-199.73481750 -305.70993042]
[-209.93241882 -316.74420166]
[-218.49502563 -329.09036255]
[-225.25598145 -342.50811768]
[-230.08367920 -356.73623657]
[-232.88415527 -371.49777222]
[-233.60287476 -386.50543213]
[-232.22587585 -401.46704102]
[-228.77993774 -416.09140015]
[-223.33215332 -430.09381104]
[-215.98855591 -443.20175171]
[-206.89208984 -455.16003418]
[-196.21983337 -465.73590088]
[-184.17950439 -474.72348022]
[-171.00549316 -481.94784546]
[-156.95422363 -487.26837158]
[-142.29920959 -490.58148193]
[-127.32571411 -491.82269287]
[-112.32520294 -490.96780396]
[-97.58966064 -488.03353882]
[-83.40592957 -483.07693481]
[-70.05008698 -476.19451904]
[-57.78211975 -467.52023315]
[-46.84082031 -457.22296143]
[-37.43916702 -445.50308228]
[-29.76016617 -432.58880615]
[-23.95329094 -418.73144531]
[-20.13157272 -404.20077515]
[-18.36940193 -389.27960205]
[-18.70108414 -374.25842285]
[-21.12015724 -359.42959595]
[-25.57953835 -345.08175659]
[-31.99242020 -331.49423218]
[-40.23397827 -318.93148804]
[-50.14378357 -307.63803101]
[-61.52894211 -297.83374023]
[-74.16783905 -289.70941162]
[-67.89048004 -276.08609009]
[-55.53705597 -267.76492310]
[-56.78899002 -251.99331665]
[-50.51162720 -238.37001038]
[-44.23426819 -224.74668884]
[-30.21582031 -219.84579468]
[-23.65561485 -206.11924744]
[-28.89116859 -191.44863892]
[-16.53774452 -183.12744141]
[-17.78967857 -167.35585022]
[-11.51231861 -153.73252869]
[0.84110552 -145.41134644]
[-0.41082972 -129.63975525]
[5.86653090 -116.01643372]
[12.14389133 -102.39311981]
[18.42125320 -88.76979828]
[24.69861221 -75.14648438]
[30.97597313 -61.52317047]
[37.25333405 -47.89985275]
[51.87274933 -45.17758942]
[62.20815277 -34.23942566]
[64.14359283 -19.13619804]
[56.72896576 -5.63325357]
[63.00632858 7.99006271]
[77.86077118 17.33417702]
[76.01993561 35.65609741]
[82.49942780 49.18444443]
[89.17962646 62.61481857]
[96.05903625 75.94425201]
[102.93844604 89.27368164]
[108.51922607 75.35050201]
[122.25579071 69.32499695]
[136.27922058 74.64884949]
[142.55625916 88.27231598]
[137.49111938 102.39125061]
[123.98536682 108.91769409]
[109.77640533 104.11361694]
[115.43919373 118.00364685]
[121.10198212 131.89367676]
[133.47656250 141.75167847]
[131.11659241 156.45812988]
[136.77938843 170.34815979]
[151.91816711 172.53091431]
[163.85299683 181.93606567]
[169.44058228 195.95909119]
[167.27336121 210.79684448]
[158.03242493 222.47892761]
[163.69522095 236.36894226]
[169.35800171 250.25897217]
[175.02078247 264.14901733]
[187.39537048 274.00701904]
[185.03540039 288.71347046]
[187.80383301 273.97116089]
[196.62466431 261.83883667]
[209.79476929 254.65911865]
[224.77117920 253.81825256]
[238.66220093 259.47860718]
[248.78567505 270.54724121]
[253.18695068 284.88702393]
[251.01617432 299.72912598]
[242.69252014 312.20776367]
[229.82313538 319.91354370]
[214.89289856 321.35855103]
[200.78460693 316.26382446]
[190.22167969 305.61199951]
[193.32579041 320.28729248]
[196.42990112 334.96258545]
[199.75215149 349.59005737]
[203.29182434 364.16641235]
[206.83149719 378.74279785]
[215.54023743 366.52978516]
[230.31074524 363.91598511]
[242.68182373 372.39868164]
[245.56674194 387.11865234]
[237.31289673 399.64358521]
[222.64846802 402.79864502]
[209.97444153 394.77725220]
[212.19955444 409.61129761]
[214.42468262 424.44534302]
[216.64979553 439.27938843]
[218.87490845 454.11343384]
[233.87829590 455.64620972]
[248.02883911 460.86279297]
[260.43704224 469.43524170]
[270.32290649 480.82473755]
[277.06503296 494.31527710]
[280.23953247 509.05886841]
[279.64691162 524.12872314]
[275.32443237 538.57745361]
[267.54376221 551.49688721]
[256.79400635 562.07489014]
[243.75094604 569.64648438]
[229.23443604 573.73577881]
[214.15702820 574.08563232]
[199.46647644 570.67407227]
[186.08625793 563.71557617]
[174.85745239 553.64758301]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 194]
[8 193]
[9 192]
[10 191]
[11 190]
[12 183]
[13 182]
[14 181]
[17 180]
[18 179]
[19 178]
[20 165]
[22 163]
[23 162]
[24 161]
[25 160]
[30 155]
[31 154]
[33 152]
[34 151]
[35 150]
[36 143]
[37 142]
[38 141]
[41 140]
[42 139]
[45 137]
[46 136]
[50 132]
[51 131]
[52 130]
[53 129]
[54 128]
[55 127]
[56 126]
[58 124]
[59 123]
[61 121]
[64 118]
[65 117]
[66 116]
[68 114]
[69 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
