%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxAGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUA\
) } def
/len { sequence length } bind def

/coor [
[140.94361877 785.14807129]
[126.25173950 782.11120605]
[111.70857239 778.42742920]
[97.34258270 774.10394287]
[83.18190002 769.14923096]
[69.25424194 763.57305908]
[55.58686829 757.38623047]
[42.20653534 750.60089111]
[29.13943863 743.23034668]
[16.41115570 735.28900146]
[4.04660177 726.79241943]
[-7.93001699 717.75726318]
[-19.49525642 708.20117188]
[-30.62647629 698.14282227]
[-41.30188751 687.60198975]
[-51.50059509 676.59924316]
[-61.20262909 665.15612793]
[-70.38899994 653.29510498]
[-79.04172516 641.03930664]
[-87.14386749 628.41278076]
[-94.67956543 615.44024658]
[-101.63406372 602.14703369]
[-107.99375916 588.55926514]
[-113.74619293 574.70343018]
[-118.88010406 560.60675049]
[-123.38544464 546.29675293]
[-127.25339508 531.80145264]
[-130.47639465 517.14929199]
[-133.04811096 502.36889648]
[-134.96353149 487.48922729]
[-136.21890259 472.53936768]
[-136.81175232 457.54861450]
[-136.74093628 442.54632568]
[-136.00657654 427.56182861]
[-134.61012268 412.62451172]
[-132.55432129 397.76358032]
[-129.84317017 383.00811768]
[-126.48199463 368.38702393]
[-122.47736359 353.92889404]
[-117.83712006 339.66207886]
[-112.57035065 325.61450195]
[-106.68736267 311.81359863]
[-100.19967651 298.28646851]
[-93.11998749 285.05950928]
[-85.46215057 272.15869141]
[-77.24116516 259.60922241]
[-68.47312164 247.43565369]
[-59.17517853 235.66186523]
[-49.36554337 224.31088257]
[-39.06341934 213.40490723]
[-28.28896713 202.96531677]
[-17.06328201 193.01252747]
[-5.40834045 183.56604004]
[6.65304518 174.64433289]
[19.09726334 166.26486206]
[31.89995193 158.44406128]
[45.03605270 151.19720459]
[58.47984695 144.53849792]
[72.20501709 138.48098755]
[86.18470001 133.03649902]
[100.39153290 128.21572876]
[96.20452118 113.81194305]
[86.24539948 103.99829865]
[89.39169312 90.37506866]
[85.20468140 75.97129059]
[81.01767731 61.56750488]
[76.83066559 47.16372299]
[72.16685486 61.42026138]
[61.47646332 71.94240570]
[47.14773178 76.37947083]
[32.38174820 73.74020386]
[20.47726631 64.61424255]
[14.09377766 51.04032898]
[14.65737057 36.05091858]
[22.04213715 22.99468613]
[34.59830093 14.78842449]
[49.52078247 13.26543331]
[63.47586441 18.76595306]
[73.34595490 30.06117439]
[71.56348419 15.16745663]
[69.78102112 0.27373904]
[67.99855804 -14.61997795]
[52.97778320 -15.18818951]
[38.23085022 -18.09929466]
[24.12092018 -23.28160286]
[10.99545670 -30.60749435]
[-0.82231098 -39.89656830]
[-11.04136086 -50.92006683]
[-19.41003799 -63.40652847]
[-25.72225952 -77.04846191]
[-29.82257843 -91.50992584]
[-31.61001968 -106.43478394]
[-31.04056931 -121.45551300]
[-28.12824821 -136.20220947]
[-22.94477654 -150.31170654]
[-15.61779976 -163.43656921]
[-6.32775307 -175.25357056]
[4.69658852 -185.47171021]
[17.18374062 -193.83935547]
[30.82619476 -200.15045166]
[45.28799438 -204.24957275]
[60.21300507 -206.03578186]
[75.23368835 -205.46508789]
[89.98013306 -202.55155945]
[104.08921051 -197.36692810]
[117.21346283 -190.03886414]
[129.02969360 -180.74783325]
[139.24693298 -169.72265625]
[147.61354065 -157.23481750]
[153.92352295 -143.59184265]
[158.02145386 -129.12969971]
[159.80642700 -114.20454407]
[159.23449707 -99.18390656]
[156.31974792 -84.43769836]
[151.13394165 -70.32904816]
[143.80479431 -57.20540237]
[134.51280212 -45.38993454]
[123.48677826 -35.17361450]
[110.99824524 -26.80802536]
[97.35475159 -20.49918365]
[82.89227295 -16.40244484]
[84.67473602 -1.50872684]
[86.45720673 13.38499069]
[88.23966980 28.27870750]
[91.23444366 42.97671127]
[95.42145538 57.38049316]
[99.60846710 71.78427887]
[103.79547882 86.18805695]
[113.75460052 96.00170135]
[110.60830688 109.62493134]
[114.79531860 124.02870941]
[129.37258911 120.48229218]
[144.09245300 117.58414459]
[158.92611694 115.33994293]
[173.84452820 113.75408173]
[188.81848145 112.82966614]
[203.81867981 112.56850433]
[218.81573486 112.97110748]
[233.78031921 114.03668976]
[248.68310547 115.76316071]
[263.49493408 118.14714050]
[278.18682861 121.18396759]
[292.73001099 124.86769104]
[307.09600830 129.19110107]
[321.25671387 134.14575195]
[335.18438721 139.72190857]
[348.85180664 145.90869141]
[362.23214722 152.69396973]
[375.29928589 160.06446838]
[388.02758789 168.00575256]
[400.39218140 176.50227356]
[412.36883545 185.53741455]
[423.93408203 195.09347534]
[435.06533813 205.15176392]
[445.74081421 215.69256592]
[455.93954468 226.69528198]
[465.64163208 238.13833618]
[474.82803345 249.99935913]
[483.48080444 262.25509644]
[491.58300781 274.88159180]
[499.11874390 287.85412598]
[506.07330322 301.14730835]
[512.43304443 314.73507690]
[518.18548584 328.59085083]
[523.31945801 342.68753052]
[527.82489014 356.99749756]
[531.69287109 371.49276733]
[534.91595459 386.14492798]
[537.48767090 400.92532349]
[539.40319824 415.80499268]
[540.65856934 430.75485229]
[541.25152588 445.74557495]
[541.18072510 460.74789429]
[540.44641113 475.73236084]
[539.05004883 490.66970825]
[536.99426270 505.53063965]
[534.28320312 520.28613281]
[530.92205811 534.90722656]
[526.91748047 549.36535645]
[522.27728271 563.63220215]
[517.01055908 577.67980957]
[511.12765503 591.48071289]
[504.64001465 605.00787354]
[497.56036377 618.23486328]
[489.90258789 631.13568115]
[481.68164062 643.68524170]
[472.91363525 655.85882568]
[463.61572266 667.63262939]
[453.80615234 678.98364258]
[443.50405884 689.88964844]
[432.72964478 700.32928467]
[421.50399780 710.28210449]
[409.84909058 719.72863770]
[397.78771973 728.65039062]
[385.34353638 737.02990723]
[372.54089355 744.85076904]
[359.40481567 752.09765625]
[345.96102905 758.75640869]
[332.23590088 764.81396484]
[318.25622559 770.25848389]
[304.04940796 775.07934570]
[289.64328003 779.26702881]
[275.06597900 782.81341553]
[260.34609985 785.71148682]
[245.51243591 787.95562744]
[230.59400940 789.54144287]
[215.62005615 790.46582031]
[200.61985779 790.72692871]
[185.62280273 790.32427979]
[170.65823364 789.25866699]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[61 131]
[62 130]
[64 128]
[65 127]
[66 126]
[67 125]
[79 124]
[80 123]
[81 122]
[82 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
