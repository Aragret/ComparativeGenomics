%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxGGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUA\
) } def
/len { sequence length } bind def

/coor [
[-21.84717941 403.81329346]
[-18.78046608 418.51544189]
[-17.50830078 433.48004150]
[-18.04923630 448.48886108]
[-20.39538383 463.32302856]
[-24.51252937 477.76623535]
[-30.34063530 491.60787964]
[-37.79470825 504.64605713]
[-46.76604462 516.69067383]
[-57.12381744 527.56604004]
[-68.71697998 537.11358643]
[-81.37647247 545.19409180]
[-94.91767883 551.68975830]
[-109.14312744 556.50573730]
[-123.84537506 559.57189941]
[-138.81001282 560.84350586]
[-153.81881714 560.30200195]
[-168.65290833 557.95532227]
[-183.09596252 553.83764648]
[-196.93737793 548.00897217]
[-209.97528076 540.55444336]
[-222.01954651 531.58264160]
[-232.89453125 521.22448730]
[-242.44166565 509.63095093]
[-250.52169800 496.97116089]
[-257.01681519 483.42971802]
[-261.83230591 469.20407104]
[-264.89791870 454.50170898]
[-266.16894531 439.53704834]
[-265.62689209 424.52825928]
[-263.27963257 409.69424438]
[-259.16140747 395.25134277]
[-253.33227539 381.41015625]
[-245.87722778 368.37252808]
[-236.90498352 356.32858276]
[-226.54640198 345.45397949]
[-214.95252991 335.90728760]
[-202.29243469 327.82772827]
[-188.75073242 321.33312988]
[-174.52493286 316.51818848]
[-159.82244873 313.45312500]
[-144.85772705 312.18261719]
[-129.84895325 312.72525024]
[-115.01503754 315.07305908]
[-100.57228851 319.19183350]
[-86.73131561 325.02148438]
[-73.69396973 332.47702026]
[-64.73327637 320.44763184]
[-55.77257919 308.41827393]
[-54.37455750 293.58941650]
[-39.92562103 287.14434814]
[-30.96492577 275.11495972]
[-22.00423050 263.08560181]
[-26.60694313 248.94512939]
[-21.94544792 234.63658142]
[-9.60815620 225.71218872]
[5.79650164 225.76422119]
[14.75719738 213.73484802]
[23.71789360 201.70545959]
[32.67858887 189.67608643]
[41.63928604 177.64671326]
[50.59998322 165.61734009]
[59.56067657 153.58795166]
[67.78948212 141.04655457]
[75.25722504 128.03759766]
[74.88321686 113.14769745]
[88.46389771 105.03131866]
[95.63926697 91.85884094]
[102.51867676 78.52941132]
[109.39808655 65.19998169]
[116.27750397 51.87055588]
[115.73105621 36.05878830]
[128.44372559 28.29751015]
[127.89727020 12.48574257]
[140.60993958 4.72446394]
[147.08943176 -8.80388165]
[153.16326904 -22.51914787]
[159.23709106 -36.23441696]
[165.31092834 -49.94968033]
[171.38476562 -63.66494751]
[177.45860291 -77.38021851]
[183.53244019 -91.09548187]
[175.74888611 -102.47121429]
[174.61170959 -116.09931946]
[180.31135559 -128.41125488]
[191.26199341 -136.23605347]
[204.54113770 -137.61686707]
[210.81849670 -151.24018860]
[217.09585571 -164.86351013]
[222.86189270 -178.71098328]
[228.10861206 -192.76345825]
[233.35533142 -206.81593323]
[238.60205078 -220.86840820]
[243.84875488 -234.92086792]
[230.58143616 -241.96594238]
[218.34721375 -250.68252563]
[207.35543823 -260.92147827]
[197.79418945 -272.50756836]
[189.82708740 -285.24255371]
[183.59045410 -298.90856934]
[179.19099426 -313.27169800]
[176.70399475 -328.08621216]
[176.17201233 -343.09860229]
[177.60415649 -358.05200195]
[180.97592163 -372.69052124]
[186.22959900 -386.76367188]
[193.27529907 -400.03067017]
[201.99246216 -412.26449585]
[212.23193359 -423.25576782]
[223.81848145 -432.81646729]
[236.55386353 -440.78295898]
[250.22015381 -447.01895142]
[264.58349609 -451.41772461]
[279.39813232 -453.90402222]
[294.41055298 -454.43527222]
[309.36389160 -453.00241089]
[324.00222778 -449.62997437]
[338.07516479 -444.37561035]
[351.34179688 -437.32928467]
[363.57519531 -428.61154175]
[374.56600952 -418.37155151]
[384.12612915 -406.78454590]
[392.09204102 -394.04876709]
[398.32736206 -380.38220215]
[402.72546387 -366.01864624]
[405.21105957 -351.20388794]
[405.74160767 -336.19143677]
[404.30804443 -321.23818970]
[400.93487549 -306.59997559]
[395.67987061 -292.52731323]
[388.63290405 -279.26098633]
[379.91455078 -267.02801514]
[369.67404175 -256.03771973]
[358.08657837 -246.47811890]
[345.35046387 -238.51283264]
[331.68356323 -232.27815247]
[317.31979370 -227.88073730]
[302.50494385 -225.39585876]
[287.49246216 -224.86602783]
[272.53927612 -226.30030823]
[257.90124512 -229.67416382]
[252.65451050 -215.62168884]
[247.40779114 -201.56921387]
[242.16107178 -187.51673889]
[236.91436768 -173.46426392]
[251.43634033 -177.22085571]
[263.51879883 -168.33187866]
[264.25500488 -153.34996033]
[253.10226440 -143.31921387]
[238.28193665 -145.63392639]
[230.71917725 -158.58613586]
[224.44181824 -144.96282959]
[218.16444397 -131.33950806]
[226.64280701 -117.28266144]
[225.05598450 -100.77678680]
[213.83219910 -88.34586334]
[197.24769592 -85.02164459]
[191.17387390 -71.30638123]
[185.10003662 -57.59111404]
[179.02619934 -43.87584686]
[172.95236206 -30.16058159]
[166.87852478 -16.44531441]
[160.80470276 -2.73004794]
[161.68750000 -0.06944703]
[161.56959534 3.10115385]
[160.25146484 6.40235233]
[157.67445374 9.38958549]
[153.93936157 11.60387611]
[154.97787476 26.46223259]
[141.77314758 35.17692184]
[142.81166077 50.03527832]
[129.60693359 58.74996948]
[122.72751617 72.07939911]
[115.84810638 85.40882874]
[108.96869659 98.73825836]
[109.60877991 102.54123688]
[108.56946564 106.60789490]
[105.77057648 110.18185425]
[101.47285461 112.49906158]
[101.31272125 128.31945801]
[88.26618195 135.50534058]
[80.79843903 148.51429749]
[94.98384857 143.63842773]
[109.35940552 147.92134094]
[118.56338501 159.76560974]
[119.16292572 174.75361633]
[110.93441772 187.29521179]
[96.94688416 192.71269226]
[82.41734314 188.98545837]
[72.76493835 177.50369263]
[71.59005737 162.54864502]
[62.62936020 174.57803345]
[53.66866302 186.60740662]
[44.70796585 198.63677979]
[35.74727249 210.66616821]
[26.78657532 222.69554138]
[17.82587814 234.72491455]
[22.28569794 249.46995544]
[17.26667786 263.84573364]
[4.89144993 272.40829468]
[-9.97485256 272.04629517]
[-18.93554878 284.07568359]
[-27.89624405 296.10504150]
[-29.93519402 311.79431152]
[-43.74320221 317.37896729]
[-52.70389938 329.40832520]
[-61.66459274 341.43771362]
[-50.78882599 351.79507446]
[-41.24083328 363.38787842]
[-33.15984726 376.04708862]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 207]
[48 206]
[49 205]
[51 203]
[52 202]
[53 201]
[57 197]
[58 196]
[59 195]
[60 194]
[61 193]
[62 192]
[63 191]
[64 182]
[65 181]
[67 179]
[68 175]
[69 174]
[70 173]
[71 172]
[73 170]
[75 168]
[76 163]
[77 162]
[78 161]
[79 160]
[80 159]
[81 158]
[82 157]
[87 153]
[88 152]
[89 151]
[90 145]
[91 144]
[92 143]
[93 142]
[94 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
