%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGAUGCGGGAGAGUCGGCUACUUGUCAACCUUAUCCAACAAUCGCCAUUGAUUCUAAUCAUACCAUUAAUCCUUCUACUCAUCUAUAAACUUCUUGACxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[119.95993805 734.29132080]
[105.43802643 738.13439941]
[90.53872681 740.04901123]
[75.51698303 740.00250244]
[60.62983322 737.99554443]
[46.13201523 734.06256104]
[32.27161026 728.27087402]
[19.28578377 720.71948242]
[7.39674330 711.53765869]
[-3.19207549 700.88250732]
[-12.29948330 688.93640137]
[-19.76964188 675.90368652]
[-25.47472382 662.00738525]
[-29.31711197 647.48529053]
[-31.23105431 632.58587646]
[-31.18380356 617.56414795]
[-29.17616653 602.67706299]
[-25.24249649 588.17944336]
[-19.45010376 574.31933594]
[-11.89810562 561.33386230]
[-2.71572471 549.44525146]
[7.93991566 538.85693359]
[19.88648415 529.75012207]
[32.91955948 522.28057861]
[46.81612778 516.57617188]
[61.33839798 512.73443604]
[76.23787689 510.82122803]
[91.25962067 510.86917114]
[93.26363373 496.00366211]
[95.26764679 481.13812256]
[97.27165985 466.27261353]
[99.27567291 451.40707397]
[92.19338989 441.60055542]
[93.74130249 429.19943237]
[103.63082123 420.91934204]
[105.85594177 406.08529663]
[108.08105469 391.25125122]
[110.30617523 376.41720581]
[112.53129578 361.58316040]
[112.97789764 346.58981323]
[111.63966370 331.64962769]
[110.30142975 316.70944214]
[108.96319580 301.76925659]
[107.62496185 286.82907104]
[106.28672791 271.88888550]
[94.72795105 262.56524658]
[93.15795898 247.43283081]
[103.01582336 235.37214661]
[101.67758942 220.43196106]
[92.59920502 212.43760681]
[91.36203003 200.00164795]
[99.17201996 189.73681641]
[98.05637360 174.77835083]
[96.94072723 159.81990051]
[95.82508087 144.86145020]
[94.70942688 129.90299988]
[93.59378052 114.94454193]
[85.24273682 106.82658386]
[84.46299744 95.20619965]
[91.65460968 86.04530334]
[90.76178741 71.07189941]
[89.86897278 56.09849548]
[88.97615814 41.12509155]
[86.64067078 26.30802155]
[82.88436890 11.78596210]
[79.02006531 -2.70773077]
[75.04796600 -17.17225456]
[64.24459076 -24.21851158]
[61.23400116 -36.34782028]
[67.10079193 -46.92644882]
[63.34449005 -61.44850922]
[59.58818817 -75.97056580]
[55.83188629 -90.49263000]
[52.07558441 -105.01468658]
[41.12897873 -116.43756866]
[45.43258286 -130.69689941]
[41.67628098 -145.21894836]
[37.91998291 -159.74101257]
[26.97337151 -171.16389465]
[31.27697754 -185.42321777]
[27.52067757 -199.94528198]
[23.76437569 -214.46733093]
[8.73103046 -213.70352173]
[-6.14828300 -215.98188782]
[-20.26426506 -221.20912170]
[-33.03887558 -229.17115784]
[-43.94900513 -239.54199219]
[-52.54788589 -251.89691162]
[-58.48340225 -265.73001099]
[-61.51249695 -280.47482300]
[-61.51113129 -295.52755737]
[-58.47936249 -310.27182007]
[-52.54133606 -324.10382080]
[-43.94021225 -336.45718384]
[-33.02820206 -346.82604980]
[-20.25214577 -354.78576660]
[-6.13521576 -360.01043701]
[8.74451065 -362.28610229]
[23.77771759 -361.51956177]
[38.34880447 -357.74221802]
[51.86109543 -351.10873413]
[63.76126480 -341.89077759]
[73.56201935 -330.46582031]
[80.86201477 -317.30166626]
[85.36231995 -302.93737793]
[86.87866211 -287.96121216]
[85.34893036 -272.98641968]
[80.83578491 -258.62619019]
[73.52401733 -245.46855164]
[63.71305847 -234.05233765]
[51.80464935 -224.84503174]
[38.28643417 -218.22363281]
[42.04273605 -203.70158386]
[45.79903793 -189.17951965]
[56.47697067 -178.79534912]
[52.44203949 -163.49731445]
[56.19834137 -148.97525024]
[59.95464325 -134.45320129]
[70.63257599 -124.06902313]
[66.59764862 -108.77098846]
[70.35394287 -94.24892426]
[74.11024475 -79.72686768]
[77.86654663 -65.20481110]
[81.62284851 -50.68275070]
[94.58019257 -38.84745789]
[89.51248932 -21.14435005]
[93.48458862 -6.67982674]
[98.28710938 -1.06221449]
[97.40643311 8.02966213]
[101.16272736 22.55172157]
[105.56438446 8.21207428]
[115.35637665 -3.15088630]
[128.88858032 -9.62230206]
[143.88059998 -10.11162567]
[157.80599976 -4.53639841]
[168.31811523 6.16385746]
[173.64546204 20.18595886]
[172.89030457 35.16693878]
[166.17987061 48.58223343]
[154.64501953 58.17113876]
[140.22955322 62.31774521]
[125.36273956 60.32328415]
[112.54989624 52.52385330]
[103.94956207 40.23227310]
[104.84237671 55.20568085]
[105.73519897 70.17908478]
[106.62801361 85.15248871]
[116.22325897 98.91139984]
[108.55223083 113.82889557]
[109.66788483 128.78735352]
[110.78353119 143.74580383]
[111.89917755 158.70425415]
[113.01483154 173.66270447]
[114.13047791 188.62117004]
[124.84852600 203.59463501]
[116.61777496 219.09371948]
[117.95600891 234.03390503]
[129.80036926 244.15066528]
[130.94470215 259.32119751]
[121.22691345 270.55065918]
[122.56514740 285.49084473]
[123.90338135 300.43103027]
[125.24161530 315.37121582]
[126.57984924 330.31140137]
[127.91808319 345.25158691]
[133.97599792 331.52926636]
[144.31184387 320.65866089]
[157.71136475 313.91677856]
[172.60041809 312.09570312]
[187.22982788 315.40933228]
[199.88096619 323.46841431]
[209.06758118 335.32617188]
[213.71043396 349.58953857]
[213.26409912 364.58291626]
[207.78100586 378.54483032]
[197.90528870 389.83511353]
[184.79716492 397.12738037]
[169.99653625 399.56491089]
[155.24218750 396.86138916]
[142.26742554 389.33438110]
[132.59654236 377.86816406]
[127.36533356 363.80825806]
[125.14022064 378.64230347]
[122.91510010 393.47634888]
[120.68998718 408.31039429]
[118.46486664 423.14443970]
[125.60034180 440.11990356]
[114.14120483 453.41107178]
[112.13719177 468.27661133]
[110.13317871 483.14215088]
[108.12916565 498.00765991]
[106.12515259 512.87322998]
[120.62333679 516.80480957]
[134.48429871 522.59521484]
[147.47084045 530.14538574]
[159.36076355 539.32604980]
[169.95059204 549.98016357]
[179.05912781 561.92541504]
[186.53053284 574.95745850]
[192.23693848 588.85321045]
[196.08070374 603.37493896]
[197.99606323 618.27410889]
[197.95025635 633.29589844]
[195.94403076 648.18310547]
[192.01173401 662.68115234]
[186.22067261 676.54180908]
[178.66990662 689.52801514]
[169.48866272 701.41748047]
[158.83403015 712.00677490]
[146.88832092 721.11474609]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 192]
[29 191]
[30 190]
[31 189]
[32 188]
[35 186]
[36 185]
[37 184]
[38 183]
[39 182]
[40 165]
[41 164]
[42 163]
[43 162]
[44 161]
[45 160]
[48 157]
[49 156]
[52 154]
[53 153]
[54 152]
[55 151]
[56 150]
[57 149]
[60 147]
[61 146]
[62 145]
[63 144]
[64 130]
[65 129]
[66 127]
[67 126]
[70 124]
[71 123]
[72 122]
[73 121]
[74 120]
[76 118]
[77 117]
[78 116]
[80 114]
[81 113]
[82 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
