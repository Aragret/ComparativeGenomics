%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGGCAGCCUUUACCACUUCCCUCUGAGCUUCAUGAGACUCCGAACAUCCUCCCAUUUUAUCUCUGGGUCAUUUUAACAUUAUUCGUCACGAACUUAAUxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[72.51963043 610.26983643]
[57.99772263 614.11291504]
[43.09842300 616.02752686]
[28.07667542 615.98101807]
[13.18952560 613.97406006]
[-1.30829144 610.04113770]
[-15.16869736 604.24938965]
[-28.15452385 596.69799805]
[-40.04356384 587.51617432]
[-50.63238144 576.86102295]
[-59.73979187 564.91491699]
[-67.20994568 551.88220215]
[-72.91503143 537.98590088]
[-76.75741577 523.46380615]
[-78.67136383 508.56442261]
[-78.62410736 493.54266357]
[-76.61647034 478.65560913]
[-72.68280029 464.15798950]
[-66.89041138 450.29785156]
[-59.33841324 437.31237793]
[-50.15603256 425.42379761]
[-39.50039291 414.83547974]
[-27.55382347 405.72863770]
[-14.52074814 398.25909424]
[-0.62418097 392.55468750]
[13.89809132 388.71298218]
[28.79757309 386.79974365]
[43.81931305 386.84771729]
[45.82332611 371.98217773]
[47.82734299 357.11666870]
[41.85977936 343.46975708]
[51.37143326 330.82702637]
[53.37544632 315.96148682]
[55.37945938 301.09597778]
[53.54394531 298.08544922]
[53.07541275 294.03631592]
[54.44613266 289.60070801]
[57.81925583 285.61712646]
[60.48505402 270.85589600]
[63.15084839 256.09469604]
[65.81664276 241.33346558]
[68.48243713 226.57225037]
[61.84510040 216.45927429]
[63.94520950 204.13964844]
[74.19459534 196.30938721]
[77.07986450 181.58949280]
[79.96514130 166.86959839]
[82.74074554 152.12863159]
[85.40654755 137.36741638]
[88.07234192 122.60620117]
[90.73813629 107.84498596]
[81.38530731 119.57207489]
[68.76695251 127.68238068]
[54.21471024 131.32000732]
[39.26432037 130.10105896]
[25.49352837 124.15419006]
[14.35560226 114.10697174]
[7.02595186 101.01971436]
[4.27809286 86.27355194]
[6.40201330 71.42468262]
[13.17357063 58.04014206]
[23.87814713 47.53242493]
[37.38606262 41.01044846]
[52.27179718 39.16248322]
[66.96441650 42.18355179]
[79.91338348 49.75483322]
[89.75215149 61.07731247]
[95.44242096 74.95610809]
[96.38366699 89.92673492]
[102.66102600 76.30342102]
[108.93838501 62.68010330]
[108.45803833 57.48237610]
[109.87752533 53.06215668]
[112.58255768 50.01291656]
[115.81230164 48.59831619]
[122.69171143 35.26888657]
[129.57112122 21.93945694]
[129.02467346 6.12769079]
[141.73733521 -1.63358855]
[148.61676025 -14.96301746]
[155.49617004 -28.29244614]
[162.37557983 -41.62187576]
[168.44941711 -55.33714294]
[173.69613647 -69.38961792]
[178.94285583 -83.44208527]
[184.18955994 -97.49456024]
[189.43627930 -111.54702759]
[185.96818542 -129.63165283]
[199.92974854 -140.26376343]
[204.96667480 -154.39279175]
[210.00358582 -168.52182007]
[196.55300903 -175.20149231]
[183.98687744 -183.42517090]
[172.48161316 -193.07739258]
[162.19874573 -204.02265930]
[153.28259277 -216.10731506]
[145.85836792 -229.16169739]
[140.03025818 -243.00256348]
[135.88011169 -257.43560791]
[133.46617126 -272.25820923]
[132.82231140 -287.26226807]
[133.95761108 -302.23715210]
[136.85609436 -316.97265625]
[141.47709656 -331.26190186]
[147.75573730 -344.90429688]
[155.60386658 -357.70834351]
[164.91131592 -369.49426270]
[175.54742432 -380.09658813]
[187.36286926 -389.36651611]
[200.19180298 -397.17388916]
[213.85409546 -403.40911865]
[228.15797424 -407.98464966]
[242.90261841 -410.83627319]
[257.88104248 -411.92391968]
[272.88299561 -411.23236084]
[287.69781494 -408.77130127]
[302.11758423 -404.57525635]
[315.93984985 -398.70318604]
[328.97058105 -391.23745728]
[341.02679443 -382.28295898]
[351.93930054 -371.96530151]
[361.55490112 -360.42941284]
[369.73855591 -347.83721924]
[376.37545776 -334.36544800]
[381.37234497 -320.20327759]
[384.65914917 -305.54949951]
[386.18966675 -290.60980225]
[385.94244385 -275.59399414]
[383.92095947 -260.71279907]
[380.15359497 -246.17514038]
[374.69317627 -232.18511963]
[367.61645508 -218.93914795]
[359.02267456 -206.62315369]
[349.03256226 -195.41003418]
[337.78634644 -185.45721436]
[325.44186401 -176.90441895]
[312.17245483 -169.87170410]
[298.16439819 -164.45779419]
[283.61431885 -160.73872375]
[268.72647095 -158.76666260]
[253.70991516 -158.56932068]
[238.77540588 -160.14945984]
[224.13261414 -163.48489380]
[219.09570312 -149.35586548]
[214.05879211 -135.22683716]
[218.95840454 -124.16699219]
[214.87770081 -112.35463715]
[203.48875427 -106.30030823]
[198.24203491 -92.24784088]
[192.99531555 -78.19536591]
[187.74859619 -64.14289856]
[182.50187683 -50.09042358]
[195.70246887 -57.21395493]
[210.58396912 -55.33227158]
[221.59597778 -45.14719391]
[224.63125610 -30.45750427]
[218.55775452 -16.74209213]
[205.64071655 -9.11647034]
[190.69789124 -10.42480469]
[179.30256653 -20.17912102]
[175.70500183 -34.74246216]
[168.82559204 -21.41303444]
[161.94618225 -8.08360481]
[155.06677246 5.24582386]
[156.10528564 20.10418129]
[142.90055847 28.81887054]
[136.02114868 42.14830017]
[129.14172363 55.47772980]
[122.56169891 68.95746613]
[116.28433990 82.58078003]
[110.00698090 96.20409393]
[105.49935150 110.51078033]
[102.83355713 125.27199554]
[100.16776276 140.03321838]
[97.50196838 154.79443359]
[99.05643463 163.79562378]
[94.68502808 169.75486755]
[91.79975891 184.47476196]
[88.91448212 199.19465637]
[95.28484344 216.47181702]
[83.24365997 229.23803711]
[80.57785797 243.99926758]
[77.91206360 258.76046753]
[75.24626923 273.52169800]
[72.58047485 288.28292847]
[70.24498749 303.09997559]
[68.24097443 317.96551514]
[66.23696136 332.83102417]
[72.06118011 347.54119873]
[62.69287109 359.12066650]
[60.68885422 373.98620605]
[58.68484116 388.85171509]
[73.18303680 392.78332520]
[87.04399109 398.57373047]
[100.03053284 406.12387085]
[111.92044830 415.30456543]
[122.51028442 425.95867920]
[131.61883545 437.90396118]
[139.09022522 450.93597412]
[144.79663086 464.83172607]
[148.64039612 479.35345459]
[150.55577087 494.25265503]
[150.50994873 509.27441406]
[148.50372314 524.16162109]
[144.57142639 538.65966797]
[138.78036499 552.52032471]
[131.22959900 565.50653076]
[122.04834747 577.39599609]
[111.39371490 587.98535156]
[99.44801331 597.09332275]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 192]
[29 191]
[30 190]
[32 188]
[33 187]
[34 186]
[38 185]
[39 184]
[40 183]
[41 182]
[42 181]
[45 179]
[46 178]
[47 177]
[48 175]
[49 174]
[50 173]
[51 172]
[69 171]
[70 170]
[71 169]
[75 168]
[76 167]
[77 166]
[79 164]
[80 163]
[81 162]
[82 161]
[83 152]
[84 151]
[85 150]
[86 149]
[87 148]
[89 145]
[90 144]
[91 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
