%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[308.75219727 535.13934326]
[302.88323975 521.33520508]
[297.01425171 507.53100586]
[291.14529419 493.72683716]
[285.27633667 479.92263794]
[279.20251465 466.20736694]
[272.92514038 452.58407593]
[260.57171631 444.26287842]
[261.82366943 428.49127197]
[255.54629517 414.86795044]
[248.66688538 401.53854370]
[241.19914246 388.52957153]
[228.15260315 381.34368896]
[227.99247742 365.52328491]
[220.52473450 352.51434326]
[213.05699158 339.50540161]
[205.58924866 326.49642944]
[191.81826782 328.17822266]
[178.40408325 324.47262573]
[167.38073730 315.90728760]
[160.43280029 303.74929810]
[158.63790894 289.81790161]
[162.29981995 276.21221924]
[170.89753723 264.99499512]
[163.62431335 251.87629700]
[156.35107422 238.75761414]
[149.77131653 252.23747253]
[135.16387939 255.64668274]
[123.29682159 246.47210693]
[122.91810608 231.47688293]
[134.30690002 221.71495056]
[149.06646729 224.38146973]
[142.78910828 210.75814819]
[136.51174927 197.13484192]
[130.23439026 183.51152039]
[123.95702362 169.88819885]
[117.67966461 156.26489258]
[111.40230560 142.64157104]
[97.38385773 137.74067688]
[90.82364655 124.01412201]
[96.05920410 109.34351349]
[90.09387207 103.92250824]
[89.79148102 95.47032166]
[85.33415222 109.79275513]
[73.37887573 118.85208893]
[58.38468552 119.26940155]
[45.94403458 110.88905334]
[40.69698334 96.83670807]
[44.60054779 82.35353851]
[56.19879913 72.84141541]
[71.16587830 71.84811401]
[83.92018890 79.74501038]
[79.51918793 65.40516663]
[75.11818695 51.06531906]
[70.71719360 36.72547150]
[66.31619263 22.38562393]
[60.18849182 36.07691193]
[47.24139786 43.65139008]
[32.30385590 42.28397369]
[20.94720078 32.48466873]
[17.40718079 17.90837860]
[23.00413895 3.99169612]
[35.65054703 -4.07479954]
[50.62960815 -3.28250504]
[62.35515213 6.07404661]
[59.68935394 -8.68717098]
[57.02355957 -23.44838715]
[54.35776520 -38.20960617]
[44.29106903 -50.41502380]
[49.64331436 -64.31476593]
[39.57662201 -76.52017975]
[44.92886353 -90.41992188]
[42.26306915 -105.18113708]
[37.65835190 -113.07001495]
[39.66918564 -120.18186188]
[29.78532600 -132.53579712]
[35.34392548 -146.35430908]
[32.89819717 -161.15357971]
[30.45246887 -175.95285034]
[28.00674248 -190.75212097]
[25.56101418 -205.55139160]
[23.11528587 -220.35066223]
[10.55128479 -229.55847168]
[8.28179073 -244.60188293]
[17.13744926 -256.52297974]
[14.69172192 -271.32226562]
[12.24599457 -286.12152100]
[9.80026722 -300.92080688]
[-5.22427034 -302.23004150]
[-19.45092010 -307.23535156]
[-31.98538208 -315.62213135]
[-42.03973007 -326.86315918]
[-48.98193741 -340.25183105]
[-52.37561417 -354.94653320]
[-52.00742722 -370.02349854]
[-47.90052414 -384.53503418]
[-40.31306839 -397.56887817]
[-29.72201347 -408.30575562]
[-16.79312134 -416.07070923]
[-2.33911133 -420.37564087]
[12.73142338 -420.94992065]
[27.47113609 -417.75747681]
[40.95347595 -410.99899292]
[52.33093262 -401.09927368]
[60.88830948 -388.68066406]
[66.08768463 -374.52377319]
[67.60221863 -359.51852417]
[65.33670044 -344.60818481]
[59.43355560 -330.73001099]
[50.26385117 -318.75640869]
[38.40400696 -309.44003296]
[24.59953880 -303.36651611]
[27.04526520 -288.56726074]
[29.49099350 -273.76797485]
[31.93671989 -258.96871948]
[44.15694427 -250.53060913]
[46.84807968 -235.55688477]
[37.91455841 -222.79640198]
[40.36028671 -207.99713135]
[42.80601120 -193.19786072]
[45.25173950 -178.39859009]
[47.69746780 -163.59931946]
[50.14319611 -148.80004883]
[59.85211563 -137.50463867]
[54.46845627 -122.62758636]
[57.02428818 -107.84693146]
[59.69008255 -93.08571625]
[69.56610107 -81.93611908]
[64.40453339 -66.98056030]
[74.28054810 -55.83095932]
[69.11898041 -40.87540054]
[71.78477478 -26.11418343]
[74.45056915 -11.35296631]
[77.11637115 3.40825105]
[80.65603638 17.98462677]
[85.05703735 32.32447433]
[89.45803833 46.66432190]
[93.85903168 61.00416946]
[98.26003265 75.34401703]
[103.50675201 89.39648438]
[109.68251801 103.06615448]
[124.23628998 108.61822510]
[130.40835571 122.52362823]
[125.02561951 136.36421204]
[131.30297852 149.98753357]
[137.58033752 163.61083984]
[143.85769653 177.23416138]
[150.13505554 190.85748291]
[156.41241455 204.48078918]
[162.68978882 218.10411072]
[169.46977234 231.48437500]
[176.74299622 244.60307312]
[184.01623535 257.72177124]
[200.25202942 256.65737915]
[215.27287292 262.75802612]
[226.09065247 274.75534058]
[230.57733154 290.21347046]
[227.88339233 306.02346802]
[218.59820557 319.02868652]
[226.06594849 332.03765869]
[233.53369141 345.04660034]
[241.00143433 358.05557251]
[254.58210754 366.17193604]
[254.20809937 381.06182861]
[261.67584229 394.07080078]
[266.62933350 379.91229248]
[280.08316040 373.27944946]
[294.33032227 377.97180176]
[301.20941162 391.30139160]
[296.77978516 405.63241577]
[283.57891846 412.75543213]
[269.16961670 408.59060669]
[275.44699097 422.21392822]
[288.24938965 431.50955200]
[286.54846191 446.30670166]
[292.82583618 459.93002319]
[297.99490356 464.05218506]
[300.00454712 469.36804199]
[299.08053589 474.05368042]
[304.94949341 487.85784912]
[310.81845093 501.66204834]
[316.68740845 515.46618652]
[322.55636597 529.27038574]
[337.33337402 526.38354492]
[352.38766479 526.63244629]
[367.06112671 530.00628662]
[380.71234131 536.35754395]
[392.74447632 545.40856934]
[402.63159180 556.76367188]
[409.94146729 569.92645264]
[414.35449219 584.32159424]
[415.67776489 599.31964111]
[413.85348511 614.26507568]
[408.96136475 628.50451660]
[401.21524048 641.41540527]
[390.95379639 652.43341064]
[378.62557983 661.07684326]
[364.76956177 666.96783447]
[349.99142456 669.84887695]
[334.93722534 669.59405518]
[320.26507568 666.21447754]
[306.61636353 659.85784912]
[294.58776855 650.80206299]
[284.70513916 639.44305420]
[277.40045166 626.27740479]
[272.99310303 611.88055420]
[271.67568970 596.88195801]
[273.50588989 581.93725586]
[278.40362549 567.69976807]
[286.15478516 554.79187012]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 183]
[2 182]
[3 181]
[4 180]
[5 179]
[6 176]
[7 175]
[9 173]
[10 172]
[11 165]
[12 164]
[14 162]
[15 161]
[16 160]
[17 159]
[24 153]
[25 152]
[26 151]
[32 150]
[33 149]
[34 148]
[35 147]
[36 146]
[37 145]
[38 144]
[41 141]
[43 140]
[52 139]
[53 138]
[54 137]
[55 136]
[56 135]
[65 134]
[66 133]
[67 132]
[68 131]
[70 129]
[72 127]
[73 126]
[75 125]
[77 123]
[78 122]
[79 121]
[80 120]
[81 119]
[82 118]
[85 115]
[86 114]
[87 113]
[88 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
