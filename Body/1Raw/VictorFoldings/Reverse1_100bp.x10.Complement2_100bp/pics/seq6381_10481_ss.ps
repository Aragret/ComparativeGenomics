%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxAUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[60.35224915 493.50930786]
[52.02759933 505.99923706]
[42.63166046 517.70452881]
[32.23796463 528.53356934]
[20.92785835 538.40167236]
[8.78985977 547.23156738]
[-4.08103085 554.95410156]
[-17.58408165 561.50891113]
[-31.61360931 566.84460449]
[-46.05981064 570.91949463]
[-60.80962753 573.70172119]
[-75.74761200 575.16943359]
[-90.75686646 575.31115723]
[-105.71990204 574.12579346]
[-120.51962280 571.62261963]
[-135.04019165 567.82122803]
[-149.16798401 562.75134277]
[-162.79238892 556.45269775]
[-175.80682373 548.97460938]
[-188.10939026 540.37548828]
[-199.60382080 530.72271729]
[-210.20014954 520.09185791]
[-219.81544495 508.56607056]
[-228.37445068 496.23559570]
[-235.81018066 483.19689941]
[-242.06445312 469.55206299]
[-247.08830261 455.40783691]
[-250.84240723 440.87496948]
[-253.29740906 426.06716919]
[-254.43406677 411.10037231]
[-254.24349976 396.09164429]
[-252.72718811 381.15853882]
[-249.89700317 366.41784668]
[-245.77511597 351.98498535]
[-240.39375305 337.97290039]
[-233.79504395 324.49124146]
[-226.03065491 311.64556885]
[-217.16131592 299.53634644]
[-207.25648499 288.25842285]
[-196.39364624 277.90002441]
[-184.65783691 268.54223633]
[-172.14089966 260.25827026]
[-158.94079590 253.11300659]
[-145.16084290 247.16232300]
[-130.90888977 242.45281982]
[-116.29647827 239.02133179]
[-101.43797302 236.89474487]
[-86.44966125 236.08969116]
[-71.44884491 236.61245728]
[-56.55294037 238.45896912]
[-41.87852478 241.61476135]
[-27.54044151 246.05514526]
[-13.65091419 251.74537659]
[-0.31864744 258.64089966]
[7.72252560 245.97837830]
[15.76369858 233.31585693]
[23.80487061 220.65332031]
[31.36925125 207.70033264]
[38.44635391 194.47480774]
[45.52346039 181.24926758]
[52.50191498 167.97142029]
[59.38132477 154.64199829]
[58.65844727 151.93356323]
[58.96485901 148.77560425]
[60.47715378 145.55871582]
[63.22739410 142.73016357]
[67.08765411 140.74211121]
[74.74825287 127.84579468]
[82.40885162 114.94946289]
[90.06945038 102.05313873]
[91.15131378 94.06551361]
[97.94132233 89.02304077]
[105.79308319 76.24219513]
[90.81969452 77.13530731]
[80.67266083 66.08824158]
[82.83200073 51.24447632]
[95.70592499 43.54629135]
[109.80426025 48.66849899]
[114.73441315 62.83355713]
[116.53954315 47.11566544]
[130.26287842 41.32606506]
[139.04347229 29.16460991]
[147.82408142 17.00315475]
[156.60469055 4.84169865]
[165.38528442 -7.31975698]
[171.86479187 -20.84810257]
[175.83688354 -35.31262589]
[179.80897522 -49.77714920]
[178.56231689 -53.93645096]
[178.69108582 -57.87953949]
[179.95845032 -61.20056534]
[182.02003479 -63.61230087]
[184.47204590 -64.97090149]
[189.29803467 -79.17335510]
[194.12403870 -93.37580872]
[198.95004272 -107.57826233]
[203.77603149 -121.78072357]
[208.60203552 -135.98318481]
[195.35551453 -143.09512329]
[183.46035767 -152.29049683]
[173.24104309 -163.31845093]
[164.97637939 -175.87811279]
[158.89183044 -189.62686157]
[155.15338135 -204.18960571]
[153.86302185 -219.16909790]
[155.05595398 -234.15664673]
[158.69963074 -248.74340820]
[164.69465637 -262.53143311]
[172.87748718 -275.14456177]
[183.02487183 -286.23870850]
[194.85998535 -295.51126099]
[208.05998230 -302.70916748]
[222.26472473 -307.63613892]
[237.08671570 -310.15774536]
[252.12159729 -310.20516968]
[266.95919800 -307.77716064]
[281.19476318 -302.93991089]
[294.43991089 -295.82540894]
[306.33328247 -286.62774658]
[316.55047607 -275.59783936]
[324.81271362 -263.03656006]
[330.89462280 -249.28665161]
[334.63027954 -234.72317505]
[335.91775513 -219.74343872]
[334.72192383 -204.75611877]
[331.07543945 -190.17007446]
[325.07775879 -176.38319397]
[316.89248657 -163.77163696]
[306.74298096 -152.67942810]
[294.90606689 -143.40919495]
[281.70468140 -136.21380615]
[267.49899292 -131.28956604]
[252.67651367 -128.77082825]
[237.64163208 -128.72630310]
[222.80448914 -131.15718079]
[217.97848511 -116.95472717]
[213.15249634 -102.75226593]
[208.32649231 -88.54981232]
[203.50050354 -74.34735870]
[198.67449951 -60.14490128]
[194.27349854 -45.80505371]
[190.30140686 -31.34053040]
[186.32931519 -16.87600708]
[196.30702209 -28.07623482]
[208.64726257 -36.60375595]
[222.65211487 -41.97629547]
[237.52954102 -43.89001465]
[252.43814087 -42.23667908]
[266.53475952 -37.10979462]
[279.02218628 -28.79931068]
[289.19418335 -17.77522659]
[296.47549438 -4.66100788]
[300.45428467 9.80167484]
[300.90557861 24.79488373]
[297.80380249 39.47068405]
[291.32443237 52.99908447]
[281.83386230 64.61499023]
[269.86886597 73.66146088]
[256.10610962 79.62688446]
[241.32391357 82.17388153]
[226.35833740 81.15840912]
[212.05570984 76.63788605]
[199.22494507 68.86798859]
[188.59165955 58.28812790]
[180.75724792 45.49665070]
[176.16474915 31.21697807]
[175.07392883 16.25669479]
[177.54673767 1.46084619]
[168.76614380 13.62230206]
[159.98553467 25.78375816]
[151.20494080 37.94521332]
[142.42433167 50.10667038]
[141.24725342 64.95468903]
[126.89586639 71.61415863]
[118.57392120 84.09395599]
[110.72216797 96.87479401]
[102.96577454 109.71373749]
[95.30518341 122.61006165]
[87.64458466 135.50639343]
[79.98398590 148.40270996]
[72.71075439 161.52140808]
[65.83134460 174.85084534]
[64.67644501 183.91197205]
[58.74898911 188.32638550]
[51.67188263 201.55191040]
[44.59477615 214.77743530]
[59.48846054 212.99467468]
[70.27503204 223.41819763]
[69.00304413 238.36416626]
[56.61014557 246.81497192]
[42.23192978 242.54100037]
[36.46739578 228.69450378]
[28.42622375 241.35702515]
[20.38504982 254.01954651]
[12.34387779 266.68206787]
[24.25430107 275.81658936]
[35.31079865 285.96801758]
[45.42683792 297.05691528]
[54.52324295 308.99645996]
[62.52882385 321.69323730]
[69.38092041 335.04788208]
[75.02590942 348.95587158]
[79.41960907 363.30831909]
[82.52763367 377.99291992]
[84.32565308 392.89477539]
[84.79960632 407.89718628]
[83.94576263 422.88281250]
[81.77082825 437.73431396]
[78.29180908 452.33547974]
[73.53594208 466.57202148]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[54 195]
[55 194]
[56 193]
[57 192]
[58 186]
[59 185]
[60 184]
[61 182]
[62 181]
[67 180]
[68 179]
[69 178]
[70 177]
[72 176]
[73 175]
[79 174]
[81 172]
[82 171]
[83 170]
[84 169]
[85 168]
[86 143]
[87 142]
[88 141]
[93 140]
[94 139]
[95 138]
[96 137]
[97 136]
[98 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
