%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCACCUCAUCCCGACUCUGACCCCACCCCGGAAGAUACCGACUCCCCUCAGUCCCCACCUCUGGAUUAACCCGACUAAACGGACGACGACGAUCCUCCUCxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[97.29610443 608.64141846]
[82.77909088 612.58740234]
[67.78416443 613.79852295]
[52.82204056 612.23345947]
[38.40232468 607.94549561]
[25.01614571 601.08074951]
[13.11943531 591.87298584]
[3.11738825 580.63580322]
[-4.64932823 567.75201416]
[-9.91618252 553.66033936]
[-12.50378799 538.84082031]
[-12.32401180 523.79809570]
[-9.38297653 509.04464722]
[-3.78085303 495.08288574]
[4.29155207 482.38836670]
[14.55929661 471.39346313]
[26.67266273 462.47262573]
[40.21907806 455.92974854]
[54.73715210 451.98764038]
[69.73240662 450.78060913]
[71.29293060 435.86199951]
[72.85345459 420.94338989]
[74.30287170 406.01358032]
[75.64110565 391.07339478]
[76.86808014 376.12365723]
[77.98372650 361.16519165]
[79.09938049 346.20675659]
[80.21502686 331.24829102]
[81.33067322 316.28985596]
[73.67724609 306.92227173]
[74.48429108 294.45098877]
[83.86344147 285.59692383]
[85.20167542 270.65673828]
[86.09449005 255.68334961]
[86.54109192 240.68998718]
[86.98770142 225.69664001]
[84.04474640 218.91720581]
[87.55422211 210.48385620]
[88.22400665 195.49880981]
[81.06272888 182.43875122]
[89.40852356 168.99783325]
[90.07830811 154.01278687]
[90.74809265 139.02775574]
[91.41787720 124.04271698]
[92.08766174 109.05767822]
[92.53427124 94.06432343]
[92.75759888 79.06598663]
[92.98092651 64.06764984]
[90.09963989 58.11704254]
[90.58341980 52.45462418]
[93.44082642 48.62784195]
[94.11061096 33.64280319]
[94.78039551 18.65776634]
[85.77776337 30.65579033]
[72.27045441 37.17901611]
[57.27602386 36.77013779]
[44.14427948 29.52049828]
[35.80887985 17.04968643]
[34.13197708 2.14371514]
[39.48819351 -11.86738586]
[50.68093872 -21.85349846]
[65.20972443 -25.58370209]
[79.82878113 -22.22465897]
[91.27217102 -12.52678680]
[96.98342896 1.34340549]
[100.08753967 -13.33189678]
[103.19165039 -28.00719833]
[106.29575348 -42.68250275]
[101.58175659 -57.78511047]
[111.78536224 -68.63571930]
[114.88947296 -83.31101990]
[117.99358368 -97.98632050]
[121.09769440 -112.66162872]
[108.62065887 -121.29871368]
[100.42306519 -134.02044678]
[97.72792816 -148.87136841]
[100.91529083 -163.58287048]
[109.46902466 -175.91975403]
[122.06008148 -184.01979065]
[136.75292969 -186.67488098]
[139.85704041 -201.35017395]
[142.96115112 -216.02548218]
[146.06526184 -230.70077515]
[141.35125732 -245.80339050]
[151.55487061 -256.65399170]
[154.65898132 -271.32931519]
[143.72673035 -286.80187988]
[147.51072693 -305.03903198]
[163.15055847 -314.55276489]
[165.81636047 -329.31399536]
[168.48214722 -344.07519531]
[171.14794922 -358.83642578]
[173.81373596 -373.59762573]
[176.47953796 -388.35885620]
[179.14533997 -403.12008667]
[181.81112671 -417.88128662]
[183.70442200 -432.76132202]
[184.82006836 -447.71978760]
[185.93571472 -462.67822266]
[187.05136108 -477.63668823]
[173.33294678 -484.13049316]
[162.88955688 -495.14410400]
[157.13360596 -509.18807983]
[156.84350586 -524.36309814]
[162.05851746 -538.61676025]
[172.07334900 -550.02148438]
[185.53355408 -557.03485107]
[200.61877441 -558.70831299]
[215.28884888 -554.81561279]
[227.55978394 -545.88317871]
[235.77200317 -533.11901855]
[238.81491089 -518.24938965]
[236.27694702 -503.28533936]
[228.50137329 -490.25057983]
[216.53976440 -480.90798950]
[202.00982666 -476.52102661]
[200.89416504 -461.56259155]
[199.77851868 -446.60412598]
[198.66287231 -431.64569092]
[209.97151184 -441.50036621]
[224.96601868 -441.90615845]
[236.79110718 -432.67758179]
[240.04052734 -418.03375244]
[233.22866821 -404.66967773]
[219.46981812 -398.69522095]
[205.05435181 -402.84182739]
[196.57234192 -415.21548462]
[193.90655518 -400.45428467]
[191.24075317 -385.69305420]
[188.57495117 -370.93185425]
[185.90916443 -356.17062378]
[183.24336243 -341.40942383]
[180.57757568 -326.64819336]
[177.91177368 -311.88696289]
[186.29385376 -304.14703369]
[189.93647766 -293.20867920]
[187.82493591 -281.75289917]
[180.37004089 -272.64654541]
[169.33427429 -268.22518921]
[166.23016357 -253.54989624]
[171.16619873 -239.49696350]
[160.74055481 -227.59667969]
[157.63644409 -212.92137146]
[154.53233337 -198.24606323]
[151.42822266 -183.57077026]
[163.78755188 -175.19361877]
[172.02030945 -162.68893433]
[174.84594727 -147.94511414]
[171.80329895 -133.20300293]
[163.32553101 -120.71536255]
[150.67874146 -112.40261841]
[135.77299500 -109.55751801]
[132.66888428 -94.88221741]
[129.56477356 -80.20690918]
[126.46066284 -65.53160858]
[131.39669800 -51.47867584]
[120.97106171 -39.57839203]
[117.86695099 -24.90308952]
[114.76284027 -10.22778702]
[111.65872955 4.44751549]
[109.76543427 19.32755089]
[109.09564972 34.31258774]
[108.42586517 49.29762650]
[107.97926331 64.29097748]
[107.75593567 79.28931427]
[107.53260803 94.28765106]
[110.23906708 98.78087616]
[110.23539734 104.47062683]
[107.07270050 109.72746277]
[106.40291595 124.71250153]
[105.73313141 139.69754028]
[105.06334686 154.68257141]
[104.39356232 169.66761780]
[111.50693512 183.79951477]
[103.20904541 196.16859436]
[102.53926086 211.15364075]
[101.98104858 226.14324951]
[101.53444672 241.13659668]
[101.08783722 256.12994385]
[103.28079987 259.87759399]
[104.08614349 263.73971558]
[103.63826752 267.26602173]
[102.20401764 270.09613037]
[100.14186096 271.99499512]
[98.80362701 286.93518066]
[106.93684387 303.45584106]
[96.28913116 317.40548706]
[95.17347717 332.36395264]
[94.05783081 347.32238770]
[92.94218445 362.28085327]
[91.82653809 377.23931885]
[94.30900574 386.02993774]
[90.58129120 392.41162109]
[89.24305725 407.35180664]
[91.59436798 416.17843628]
[87.77205658 422.50390625]
[86.21153259 437.42251587]
[84.65100861 452.34112549]
[99.07188416 456.62518311]
[112.45990753 463.48632812]
[124.35910034 472.69088745]
[134.36418152 483.92532349]
[142.13436890 496.80706787]
[147.40501404 510.89730835]
[149.99662781 525.71612549]
[149.82089233 540.75891113]
[146.88383484 555.51312256]
[141.28547668 569.47644043]
[133.21649170 582.17309570]
[122.95172119 593.17077637]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 198]
[21 197]
[22 196]
[23 194]
[24 193]
[25 191]
[26 190]
[27 189]
[28 188]
[29 187]
[32 185]
[33 184]
[34 179]
[35 178]
[36 177]
[38 176]
[39 175]
[41 173]
[42 172]
[43 171]
[44 170]
[45 169]
[46 166]
[47 165]
[48 164]
[51 163]
[52 162]
[53 161]
[65 160]
[66 159]
[67 158]
[68 157]
[70 155]
[71 154]
[72 153]
[73 152]
[80 145]
[81 144]
[82 143]
[83 142]
[85 140]
[86 139]
[89 134]
[90 133]
[91 132]
[92 131]
[93 130]
[94 129]
[95 128]
[96 127]
[97 119]
[98 118]
[99 117]
[100 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
