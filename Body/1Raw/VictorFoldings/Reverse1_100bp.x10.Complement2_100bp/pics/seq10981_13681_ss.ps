%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAUUCCUCUAAACAUCCCUCUAAUCAUAUCUCUCCAUCUCAAAAAAAGCACUAUCACCAAGUGACCUAUUCACCGCAACCGAACGGUACUAACACUCxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[105.95976257 611.46594238]
[104.39600372 596.41900635]
[107.56052399 581.62573242]
[115.14328766 568.53540039]
[126.40142059 558.43048096]
[140.23194885 552.30090332]
[138.67143250 537.38232422]
[137.11090088 522.46374512]
[135.55038452 507.54510498]
[133.98986816 492.62649536]
[132.42933655 477.70788574]
[130.86882019 462.78930664]
[121.67241669 454.93099976]
[120.25022888 442.51483154]
[127.90652466 432.13485718]
[126.56829071 417.19467163]
[117.48991394 409.20031738]
[116.25273895 396.76437378]
[124.06272888 386.49954224]
[122.94708252 371.54107666]
[121.83142853 356.58261108]
[120.71578217 341.62417603]
[119.60013580 326.66571045]
[118.48448181 311.70727539]
[116.59119415 296.82723999]
[113.92539978 282.06600952]
[111.25960541 267.30477905]
[108.59380341 252.54357910]
[105.92800903 237.78236389]
[103.26221466 223.02113342]
[90.91771698 214.76589966]
[88.00393677 199.83390808]
[96.74649048 186.94183350]
[94.08069611 172.18061829]
[91.41490173 157.41940308]
[88.74909973 142.65818787]
[84.66196442 157.09062195]
[77.51802826 170.28016663]
[67.66303253 181.58853149]
[55.57389069 190.46842957]
[41.83565903 196.49014282]
[27.11319160 199.36224365]
[12.11897564 198.94573975]
[-2.42135191 195.26078796]
[-15.80411816 188.48571777]
[-27.38167000 178.94841003]
[-36.59371948 167.11041260]
[-42.99444962 153.54461670]
[-46.27410507 138.90754700]
[-46.27396393 123.90754700]
[-42.99403763 109.27053833]
[-36.59305191 95.70486450]
[-27.38078117 83.86704254]
[-15.80305195 74.32994843]
[-2.42015862 67.55513000]
[12.12023735 63.87044907]
[27.11446190 63.45422363]
[41.83687592 66.32659912]
[55.57499313 72.34856415]
[67.66397095 81.22869873]
[77.51876068 92.53723907]
[84.66244507 105.72692108]
[88.74909973 120.15818024]
[91.41490173 105.39696503]
[89.63449860 97.53549194]
[94.23183441 90.43652344]
[97.11711121 75.71662903]
[100.00238037 60.99674225]
[102.77799225 46.25577927]
[105.44378662 31.49456215]
[95.68264008 23.68509102]
[90.19986725 12.53127003]
[89.98088074 0.17685486]
[95.00587463 -11.03253651]
[104.26525116 -18.99476051]
[115.96179199 -22.24531937]
[119.06590271 -36.92061996]
[122.17001343 -51.59592438]
[110.66980743 -63.99920273]
[108.84670258 -80.64785767]
[117.22227478 -94.95909119]
[132.32472229 -101.39287567]
[135.20999146 -116.11277008]
[138.09526062 -130.83265686]
[140.98054504 -145.55255127]
[139.56025696 -154.57589722]
[144.01989746 -160.46939087]
[147.12400818 -175.14469910]
[150.22811890 -189.81999207]
[153.33222961 -204.49530029]
[148.61824036 -219.59791565]
[158.82183838 -230.44851685]
[144.74562073 -235.71330261]
[131.61135864 -243.01731873]
[119.71245575 -252.19738770]
[109.31475067 -263.04846191]
[100.65052795 -275.32806396]
[93.91335297 -288.76190186]
[89.25373077 -303.04986572]
[86.77575684 -317.87271118]
[86.53480530 -332.89935303]
[88.53623962 -347.79403687]
[92.73535919 -362.22406006]
[99.03835297 -375.86700439]
[107.30441284 -388.41809082]
[117.34886169 -399.59692383]
[128.94731140 -409.15380859]
[141.84063721 -416.87518311]
[155.74081421 -422.58856201]
[170.33729553 -426.16635132]
[185.30398560 -427.52853394]
[200.30654907 -426.64477539]
[215.00978088 -423.53475952]
[229.08525085 -418.26797485]
[242.21847534 -410.96206665]
[254.11607361 -401.78030396]
[264.51223755 -390.92776489]
[273.17471313 -378.64691162]
[279.90997314 -365.21212769]
[284.56756592 -350.92349243]
[287.04342651 -336.10028076]
[287.28222656 -321.07363892]
[285.27868652 -306.17922974]
[281.07748413 -291.74981689]
[274.77255249 -278.10775757]
[266.50473022 -265.55783081]
[256.45867920 -254.38041687]
[244.85887146 -244.82521057]
[231.96443176 -237.10566711]
[218.06344604 -231.39425659]
[203.46646118 -227.81857300]
[188.49957275 -226.45849609]
[173.49714661 -227.34440613]
[178.43316650 -213.29147339]
[168.00753784 -201.39118958]
[164.90342712 -186.71589661]
[161.79931641 -172.04058838]
[158.69520569 -157.36528015]
[155.70042419 -142.66728210]
[152.81515503 -127.94738770]
[149.92988586 -113.22750092]
[147.04461670 -98.50760651]
[157.00256348 -89.61483765]
[161.30052185 -76.86055756]
[158.71449280 -63.54206848]
[149.81498718 -53.15856552]
[136.84530640 -48.49181366]
[133.74121094 -33.81651306]
[130.63710022 -19.14120865]
[143.06372070 -6.59327888]
[145.49180603 11.05765057]
[136.76210022 26.76981163]
[120.20500183 34.16035843]
[117.53920746 48.92157364]
[119.44393158 56.06256866]
[114.72227478 63.88201523]
[111.83699799 78.60190582]
[108.95172882 93.32180023]
[106.17611694 108.06275940]
[103.51032257 122.82397461]
[106.47105408 128.95831299]
[106.27269745 135.14775085]
[103.51032257 139.99238586]
[106.17611694 154.75360107]
[108.84191132 169.51481628]
[111.50770569 184.27603149]
[124.20740509 193.29576111]
[126.70062256 208.30371094]
[118.02342987 220.35534668]
[120.68923187 235.11656189]
[123.35502625 249.87777710]
[126.02082062 264.63900757]
[128.68661499 279.40020752]
[131.35241699 294.16143799]
[139.83291626 281.78884888]
[154.24803162 277.64102173]
[168.00737000 283.61434937]
[174.82035828 296.97784424]
[171.57217407 311.62194824]
[159.74784851 320.85153198]
[144.75329590 320.44696045]
[133.44293213 310.59161377]
[134.55859375 325.55007935]
[135.67424011 340.50851440]
[136.78988647 355.46697998]
[137.90553284 370.42541504]
[139.02117920 385.38388062]
[149.73922729 400.35736084]
[141.50848389 415.85644531]
[142.84671021 430.79663086]
[153.78649902 445.60885620]
[145.78741455 461.22875977]
[147.34794617 476.14736938]
[148.90846252 491.06597900]
[150.46899414 505.98458862]
[152.02951050 520.90319824]
[153.59004211 535.82177734]
[155.15055847 550.74041748]
[169.95016479 553.87518311]
[183.05570984 561.43164062]
[193.18325806 572.66943359]
[199.34060669 586.48760986]
[200.92453003 601.53240967]
[197.77983093 616.32989502]
[190.21463013 629.43041992]
[178.97004700 639.55041504]
[165.14773560 645.69848633]
[150.10186768 647.27233887]
[135.30647278 644.11773682]
[122.21105957 636.54370117]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 198]
[7 197]
[8 196]
[9 195]
[10 194]
[11 193]
[12 192]
[15 190]
[16 189]
[19 187]
[20 186]
[21 185]
[22 184]
[23 183]
[24 182]
[25 174]
[26 173]
[27 172]
[28 171]
[29 170]
[30 169]
[33 166]
[34 165]
[35 164]
[36 163]
[63 160]
[64 159]
[66 158]
[67 157]
[68 156]
[69 154]
[70 153]
[76 149]
[77 148]
[78 147]
[82 142]
[83 141]
[84 140]
[85 139]
[87 138]
[88 137]
[89 136]
[90 135]
[92 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
