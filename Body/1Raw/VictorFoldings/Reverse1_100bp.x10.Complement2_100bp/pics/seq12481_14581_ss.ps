%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUUCGAAUCCCUCUCGACCCAACAAACCCAACACCGAGUCACAGUCAAGCUCUAUUAUUGAAGAACCAGAUCCGUGUACUUAUAACAACACCCCUxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[67.46804810 574.75610352]
[52.52629852 573.10076904]
[38.04360580 569.06988525]
[24.39511871 562.76788330]
[11.93435764 554.35803223]
[0.98409092 544.05816650]
[-8.17204475 532.13500977]
[-15.29688358 518.89746094]
[-20.20587540 504.68838501]
[-22.77186394 489.87582397]
[-22.92838478 474.84347534]
[-20.67138481 459.98071289]
[-16.05932426 445.67248535]
[-9.21166706 432.28942871]
[-0.30578360 420.17822266]
[10.42764187 409.65255737]
[22.71058655 400.98507690]
[36.22489548 394.40026855]
[50.62051392 390.06872559]
[65.52455902 388.10260010]
[65.97116852 373.10925293]
[66.41777039 358.11590576]
[64.27902222 355.31268311]
[63.39177704 351.33425903]
[64.29360199 346.78015137]
[67.23399353 342.46722412]
[68.34963989 327.50875854]
[69.46528625 312.55032349]
[70.58094025 297.59185791]
[71.69658661 282.63342285]
[72.81223297 267.67495728]
[62.92834091 256.59146118]
[63.84667587 241.40556335]
[75.53910065 231.11357117]
[76.65474701 216.15512085]
[77.77039337 201.19665527]
[78.88604736 186.23820496]
[66.84281921 195.18028259]
[51.98443604 193.12393188]
[42.82246017 181.24714661]
[44.60528183 166.35346985]
[56.31162262 156.97468567]
[71.23555756 158.48338318]
[80.82769012 170.01441956]
[83.27342224 155.21514893]
[85.71914673 140.41587830]
[88.16487122 125.61660004]
[90.61060333 110.81732941]
[85.86773682 97.66450500]
[94.59012604 86.73694611]
[97.03585052 71.93767548]
[99.48158264 57.13840103]
[101.92730713 42.33913040]
[88.39909363 48.81889343]
[74.83244324 42.41998672]
[71.22818756 27.85944366]
[80.24325562 15.87075901]
[95.23207092 15.29154110]
[105.14498138 26.54718208]
[108.68465424 11.97080612]
[112.22432709 -2.60556889]
[115.76399994 -17.18194389]
[119.30366516 -31.75831985]
[122.84333801 -46.33469391]
[108.87065125 -40.87906265]
[95.81750488 -48.26928711]
[93.30619812 -63.05757141]
[103.18797302 -74.34254456]
[118.17835236 -73.80533600]
[127.22664642 -61.84358597]
[131.84065247 -76.11631775]
[136.45466614 -90.38905334]
[135.39497375 -94.59986877]
[135.69969177 -98.53327942]
[137.11407471 -101.79440308]
[139.28129578 -104.11167145]
[141.79151917 -105.35942841]
[147.24687195 -119.33222961]
[152.70223999 -133.30502319]
[140.54505920 -124.51849365]
[125.79498291 -121.79172516]
[111.30001068 -125.65122986]
[99.85889435 -135.35179138]
[93.68073273 -149.02037048]
[93.95843506 -164.01780701]
[100.63838196 -177.44830322]
[112.43077087 -186.71865845]
[127.05869293 -190.03890991]
[141.69770813 -186.76795959]
[153.52127075 -177.53738403]
[160.24641418 -164.12945557]
[160.57438660 -149.13180542]
[168.42613220 -161.91264343]
[176.27789307 -174.69348145]
[184.12965393 -187.47431946]
[191.98139954 -200.25517273]
[199.83316040 -213.03601074]
[207.68492126 -225.81684875]
[215.53666687 -238.59770203]
[203.80178833 -247.97171021]
[193.30784607 -258.71679688]
[184.21391296 -270.67004395]
[176.65788269 -283.65023804]
[170.75425720 -297.46063232]
[166.59257507 -311.89184570]
[164.23590088 -326.72512817]
[163.71998596 -341.73556519]
[165.05261230 -356.69564819]
[168.21362305 -371.37854004]
[173.15505981 -385.56170654]
[179.80203247 -399.03009033]
[188.05377197 -411.57952881]
[197.78518677 -423.01977539]
[208.84873962 -433.17739868]
[221.07672119 -441.89840698]
[234.28375244 -449.05059814]
[248.26962280 -454.52557373]
[262.82229614 -458.24026489]
[277.72116089 -460.13842773]
[292.74038696 -460.19125366]
[307.65225220 -458.39794922]
[322.23071289 -454.78570557]
[336.25473022 -449.40927124]
[349.51174927 -442.35015869]
[361.80078125 -433.71536255]
[372.93551636 -423.63583374]
[382.74716187 -412.26431274]
[391.08697510 -399.77322388]
[397.82852173 -386.35192871]
[402.86962891 -372.20388794]
[406.13381958 -357.54360962]
[407.57168579 -342.59326172]
[407.16134644 -327.57955933]
[404.90908813 -312.73010254]
[400.84902954 -298.26995850]
[395.04269409 -284.41836548]
[387.57815552 -271.38534546]
[378.56854248 -259.36840820]
[368.15045166 -248.54977417]
[356.48178101 -239.09344482]
[343.73950195 -231.14276123]
[330.11669922 -224.81826782]
[315.81994629 -220.21583557]
[301.06594849 -217.40522766]
[286.07839966 -216.42907715]
[271.08450317 -217.30215454]
[256.31152344 -220.01124573]
[241.98347473 -224.51525879]
[228.31752014 -230.74594116]
[220.46575928 -217.96510315]
[212.61399841 -205.18424988]
[204.76225281 -192.40341187]
[196.91049194 -179.62257385]
[189.05873108 -166.84173584]
[181.20698547 -154.06088257]
[173.35522461 -141.28004456]
[166.67503357 -127.84967041]
[161.21968079 -113.87686920]
[155.76431274 -99.90407562]
[150.72740173 -85.77503967]
[146.11338806 -71.50231171]
[141.49938965 -57.22957611]
[137.41972351 -42.79502106]
[133.88005066 -28.21864700]
[130.34037781 -13.64227200]
[126.80069733 0.93410343]
[123.26102448 15.51047897]
[119.72135162 30.08685493]
[116.72657776 44.78485870]
[114.28085327 59.58412933]
[111.83512878 74.38339996]
[109.38939667 89.18267059]
[114.13226318 102.33549500]
[105.40987396 113.26305389]
[102.96414948 128.06233215]
[100.51841736 142.86160278]
[98.07269287 157.66087341]
[95.62696075 172.46014404]
[93.84449768 187.35385132]
[92.72885132 202.31231689]
[91.61319733 217.27076721]
[90.49755096 232.22921753]
[100.53388214 244.14179993]
[99.18936920 259.29589844]
[87.77069092 268.79061890]
[86.65503693 283.74905396]
[85.53939056 298.70751953]
[84.42374420 313.66595459]
[83.30809021 328.62442017]
[82.19244385 343.58288574]
[81.41112518 358.56250000]
[80.96451569 373.55587769]
[80.51791382 388.54922485]
[95.27851105 391.39892578]
[109.39078522 396.57965088]
[122.48919678 403.95715332]
[134.23446655 413.34039307]
[144.32237244 424.48626709]
[152.49159241 437.10607910]
[158.53053284 450.87298584]
[162.28277588 465.43032837]
[163.65112305 480.40109253]
[162.60014343 495.39749146]
[159.15704346 510.03106689]
[153.41101074 523.92272949]
[145.51089478 536.71276855]
[135.66131592 548.06976318]
[124.11740112 557.69964600]
[111.17816925 565.35290527]
[97.17877960 570.83135986]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 193]
[21 192]
[22 191]
[26 190]
[27 189]
[28 188]
[29 187]
[30 186]
[31 185]
[34 182]
[35 181]
[36 180]
[37 179]
[44 178]
[45 177]
[46 176]
[47 175]
[48 174]
[50 172]
[51 171]
[52 170]
[53 169]
[59 168]
[60 167]
[61 166]
[62 165]
[63 164]
[64 163]
[70 162]
[71 161]
[72 160]
[77 159]
[78 158]
[79 157]
[92 156]
[93 155]
[94 154]
[95 153]
[96 152]
[97 151]
[98 150]
[99 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
