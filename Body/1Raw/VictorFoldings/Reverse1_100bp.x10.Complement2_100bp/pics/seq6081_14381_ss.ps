%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[129.32347107 472.52996826]
[127.85131073 457.58883667]
[127.92323303 442.57556152]
[129.53848267 427.64923096]
[132.67993164 412.96810913]
[137.31427002 398.68783569]
[143.39239502 384.95971680]
[150.84985352 371.92938232]
[159.60760498 359.73486328]
[169.57279968 348.50549316]
[180.63981628 338.36029053]
[192.69132996 329.40679932]
[185.03073120 316.51046753]
[177.37013245 303.61413574]
[169.70953369 290.71780396]
[162.04893494 277.82147217]
[160.04304504 292.68676758]
[150.40011597 304.17648315]
[136.10812378 308.73046875]
[121.59557343 304.93756104]
[111.35935211 293.97308350]
[108.57126617 279.23446655]
[114.09523010 265.28866577]
[126.21958160 256.45690918]
[141.18746948 255.47579956]
[154.36109924 262.64956665]
[148.49212646 248.84538269]
[142.62316895 235.04121399]
[136.75421143 221.23703003]
[128.80776978 233.95922852]
[113.92492676 235.83026123]
[103.07674408 225.47087097]
[104.26010132 210.51762390]
[116.60267639 201.99348450]
[131.00474548 206.18104553]
[126.17874908 191.97859192]
[121.35275269 177.77613831]
[116.52675629 163.57368469]
[111.38479614 149.48254395]
[105.92943573 135.50975037]
[100.47408295 121.53694916]
[95.01872253 107.56414795]
[91.74185944 105.53079224]
[89.37717438 102.06291962]
[88.54524994 97.60030365]
[89.64710236 92.84365082]
[84.82110596 78.64118958]
[79.99510956 64.43873596]
[75.16911316 50.23628235]
[70.34311676 36.03382492]
[65.51712036 21.83137131]
[60.69112015 7.62891483]
[48.92523575 -2.94816136]
[52.15636063 -17.48807526]
[48.79106522 -20.23193550]
[46.68569946 -23.56839371]
[45.87184906 -27.02860260]
[46.22557831 -30.18161583]
[47.49329376 -32.68182373]
[43.52119827 -47.14634705]
[39.54910278 -61.61087036]
[34.61750793 -75.77700806]
[28.74854660 -89.58118439]
[22.87958527 -103.38536072]
[17.01062584 -117.18953705]
[2.61177492 -112.92680359]
[-12.17914104 -110.33324432]
[-27.16929054 -109.44264984]
[-42.16324997 -110.26665497]
[-56.96553802 -112.79449463]
[-71.38317871 -116.99323273]
[-85.22821045 -122.80812073]
[-98.32012939 -130.16334534]
[-110.48826599 -138.96302795]
[-121.57396698 -149.09243774]
[-131.43272400 -160.41950989]
[-139.93600464 -172.79658508]
[-146.97293091 -186.06230164]
[-152.45179749 -200.04371643]
[-156.30114746 -214.55854797]
[-158.47080994 -229.41757202]
[-158.93247986 -244.42704773]
[-157.68017578 -259.39132690]
[-154.73019409 -274.11529541]
[-150.12100220 -288.40701294]
[-143.91268921 -302.08013916]
[-136.18618774 -314.95645142]
[-127.04224396 -326.86804199]
[-116.60005951 -337.65963745]
[-104.99576569 -347.19052124]
[-92.38065338 -355.33648682]
[-78.91918182 -361.99130249]
[-64.78684998 -367.06823730]
[-50.16790771 -370.50103760]
[-35.25294113 -372.24502563]
[-20.23639297 -372.27743530]
[-5.31403685 -370.59783936]
[9.31958294 -367.22811890]
[23.47368813 -362.21224976]
[36.96374893 -355.61557007]
[49.61389923 -347.52410889]
[61.25921249 -338.04339600]
[71.74787140 -327.29696655]
[80.94313049 -315.42492676]
[88.72512054 -302.58209229]
[94.99237823 -288.93588257]
[99.66320038 -274.66418457]
[102.67669678 -259.95309448]
[103.99357605 -244.99435425]
[103.59666443 -229.98301697]
[101.49114227 -215.11477661]
[97.70446777 -200.58346558]
[92.28599548 -186.57855225]
[85.30636597 -173.28257751]
[76.85658264 -160.86892700]
[67.04679871 -149.49940491]
[56.00490570 -139.32225037]
[43.87486267 -130.47015381]
[30.81480217 -123.05849457]
[36.68376160 -109.25431824]
[42.55272293 -95.45014191]
[48.42168427 -81.64596558]
[52.39560318 -96.10999298]
[63.48712158 -106.20841980]
[78.25941467 -108.81213379]
[92.13512421 -103.11436462]
[100.81471252 -90.88060760]
[101.60871887 -75.90163422]
[94.27110291 -62.81884766]
[81.07550812 -55.68608093]
[66.11073303 -56.71350861]
[54.01362610 -65.58296967]
[57.98572159 -51.11844254]
[61.95781708 -36.65391922]
[66.35881805 -22.31407356]
[77.77951050 -12.75285149]
[74.89357758 2.80291724]
[79.71957397 17.00537300]
[84.54557037 31.20782852]
[89.37156677 45.41028595]
[94.19756317 59.61273956]
[99.02355957 73.81519318]
[103.84956360 88.01765442]
[108.99152374 102.10879517]
[114.44687653 116.08158875]
[119.90223694 130.05438232]
[125.35758972 144.02719116]
[129.43397522 147.28758240]
[131.63229370 151.37667847]
[131.95137024 155.44032288]
[130.72920227 158.74768066]
[135.55520630 172.95013428]
[140.38121033 187.15260315]
[145.20719910 201.35505676]
[150.55838013 215.36807251]
[156.42735291 229.17225647]
[162.29631042 242.97642517]
[168.16526794 256.78060913]
[174.94526672 270.16088867]
[182.60586548 283.05722046]
[190.26644897 295.95352173]
[197.92704773 308.84985352]
[205.58764648 321.74618530]
[219.21524048 315.44595337]
[233.41839600 310.58032227]
[248.04656982 307.20089722]
[262.94470215 305.34347534]
[277.95483398 305.02777100]
[292.91787720 306.25711060]
[307.67520142 309.01849365]
[322.07040405 313.28259277]
[335.95083618 319.00427246]
[349.16937256 326.12283325]
[361.58593750 334.56283569]
[373.06884766 344.23480225]
[383.49639893 355.03619385]
[392.75802612 366.85253906]
[400.75561523 379.55853271]
[407.40435791 393.01953125]
[412.63372803 407.09283447]
[416.38836670 421.62921143]
[418.62841797 436.47463989]
[419.33016968 451.47167969]
[418.48614502 466.46139526]
[416.10531616 481.28488159]
[412.21295166 495.78500366]
[406.85025024 509.80804443]
[400.07409668 523.20532227]
[391.95629883 535.83489990]
[382.58294678 547.56280518]
[372.05337524 558.26477051]
[360.47918701 567.82733154]
[347.98312378 576.14916992]
[334.69763184 583.14196777]
[320.76351929 588.73168945]
[306.32852173 592.85900879]
[291.54565430 595.48022461]
[276.57162476 596.56750488]
[261.56515503 596.10937500]
[246.68531799 594.11071777]
[232.08987427 590.59265137]
[217.93351746 585.59246826]
[204.36633301 579.16320801]
[191.53213501 571.37298584]
[179.56695557 562.30444336]
[168.59765625 552.05364990]
[158.74050903 540.72930908]
[150.10000610 528.45147705]
[142.76773071 515.35021973]
[136.82142639 501.56454468]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 163]
[13 162]
[14 161]
[15 160]
[16 159]
[26 158]
[27 157]
[28 156]
[29 155]
[35 154]
[36 153]
[37 152]
[38 151]
[39 147]
[40 146]
[41 145]
[42 144]
[46 143]
[47 142]
[48 141]
[49 140]
[50 139]
[51 138]
[52 137]
[54 135]
[59 134]
[60 133]
[61 132]
[62 122]
[63 121]
[64 120]
[65 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
