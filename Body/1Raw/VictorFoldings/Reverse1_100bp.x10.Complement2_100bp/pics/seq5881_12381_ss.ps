%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[181.24470520 509.74850464]
[184.96411133 495.15469360]
[191.73420715 481.70181274]
[201.23834229 470.01910400]
[213.03199768 460.65301514]
[226.56355286 454.04159546]
[223.02388000 439.46520996]
[219.48420715 424.88882446]
[215.94453430 410.31246948]
[212.40486145 395.73608398]
[208.43276978 381.27154541]
[197.30180359 371.37454224]
[200.64962769 355.91159058]
[196.24862671 341.57174683]
[191.21170044 327.44271851]
[185.54891968 313.55267334]
[179.88613892 299.66265869]
[174.22334290 285.77264404]
[168.56056213 271.88259888]
[162.89778137 257.99258423]
[157.02880859 244.18840027]
[150.95498657 230.47312927]
[144.88114929 216.75787354]
[138.80731201 203.04260254]
[132.73347473 189.32733154]
[126.55770874 175.65766907]
[120.28034973 162.03434753]
[114.00299072 148.41102600]
[101.64956665 140.08984375]
[102.90149689 124.31824493]
[96.62413788 110.69493103]
[91.51219940 124.79698944]
[78.59506989 132.42247009]
[63.77830124 130.08509827]
[53.83591080 118.85350037]
[53.31343079 103.86260223]
[62.44972610 91.96604156]
[77.06781006 88.60277557]
[90.48577118 95.31176758]
[85.65977478 81.10931396]
[80.83377838 66.90686035]
[76.00778198 52.70440292]
[71.18178558 38.50194931]
[66.35578156 24.29949188]
[61.21382523 10.20835114]
[55.75846863 -3.76444626]
[50.30311203 -17.73724365]
[44.84775543 -31.71004295]
[42.44934845 -16.90302849]
[34.63259506 -4.10074759]
[22.55706787 4.79765892]
[8.01409817 8.47216511]
[-6.83895350 6.37767935]
[-19.79872322 -1.17509317]
[-28.94270706 -13.06574345]
[-32.91444778 -27.53036499]
[-31.12476349 -42.42321777]
[-23.83914185 -55.53503418]
[-12.13836098 -64.92075348]
[2.24183679 -69.18806458]
[17.16823387 -67.70392609]
[30.42658997 -60.68851852]
[40.04918671 -49.18419647]
[37.60345840 -63.98346710]
[35.15773010 -78.78273773]
[32.71200180 -93.58200836]
[20.93240547 -100.11313629]
[15.14954662 -112.06173706]
[17.27292252 -124.96807098]
[26.30623436 -134.15658569]
[24.08111572 -148.99063110]
[21.85599899 -163.82466125]
[19.63088226 -178.65870667]
[17.40576553 -193.49275208]
[14.15274143 -197.57502747]
[12.91469288 -202.04945374]
[13.50357723 -206.08285522]
[15.42791176 -209.03738403]
[6.29689741 -221.95771790]
[12.66813278 -235.42088318]
[11.10760975 -250.33949280]
[9.32514381 -265.23321533]
[7.32112980 -280.09872437]
[5.31711626 -294.96426392]
[3.31310272 -309.82980347]
[1.30908895 -324.69531250]
[-0.69492465 -339.56085205]
[-4.94279432 -347.64746094]
[-2.61640596 -354.66241455]
[-4.39887190 -369.55615234]
[-19.33553696 -371.69119263]
[-33.21026993 -377.62030029]
[-45.07707214 -386.93917847]
[-54.12684631 -399.01245117]
[-59.74255753 -413.01696777]
[-61.54132462 -427.99783325]
[-59.40049744 -442.93368530]
[-53.46604919 -456.80612183]
[-44.14259338 -468.66931152]
[-32.06582260 -477.71444702]
[-18.05914688 -483.32473755]
[-3.07757115 -485.11770630]
[11.85743999 -482.97113037]
[25.72759247 -477.03131104]
[37.58719254 -467.70327759]
[46.62763977 -455.62301636]
[52.23253632 -441.61419678]
[54.01973343 -426.63192749]
[51.86737442 -411.69772339]
[45.92221451 -397.82986450]
[36.58959961 -385.97387695]
[24.50584602 -376.93811035]
[10.49484539 -371.33862305]
[12.27731133 -356.44488525]
[14.17060375 -341.56484985]
[16.17461777 -326.69934082]
[18.17863083 -311.83380127]
[20.18264389 -296.96826172]
[22.18665886 -282.10275269]
[24.19067192 -267.23721313]
[27.37809372 -263.68063354]
[28.36512375 -258.08395386]
[26.02621460 -251.90000916]
[27.58673668 -236.98139954]
[36.60613251 -225.12814331]
[30.34651566 -210.59790039]
[32.23980713 -195.71788025]
[34.46492767 -180.88383484]
[36.69004440 -166.04978943]
[38.91516113 -151.21574402]
[41.14027786 -136.38169861]
[55.07954407 -126.97236633]
[57.95729446 -110.05983734]
[47.51127243 -96.02773285]
[49.95700073 -81.22846222]
[52.40272903 -66.42919159]
[54.84845734 -51.62992477]
[58.82055283 -37.16539764]
[64.27590942 -23.19260216]
[69.73126984 -9.21980381]
[75.18662262 4.75299454]
[78.25167084 6.49592590]
[80.62479401 9.81003666]
[81.57672882 14.35394764]
[80.55824280 19.47349548]
[85.38423920 33.67594910]
[90.21023560 47.87840652]
[95.03623199 62.08086014]
[99.86222839 76.28331757]
[104.68823242 90.48577118]
[110.24745178 104.41757202]
[116.52481842 118.04088593]
[129.32723999 127.33650970]
[127.62630463 142.13366699]
[133.90367126 155.75698853]
[140.18103027 169.38031006]
[146.61456299 175.86470032]
[146.44874573 183.25349426]
[152.52258301 196.96876526]
[158.59642029 210.68403625]
[164.67024231 224.39930725]
[170.74407959 238.11456299]
[175.85119629 242.31324768]
[177.78149414 247.65843201]
[176.78779602 252.32978821]
[182.45059204 266.21981812]
[188.11337280 280.10983276]
[193.77616882 293.99987793]
[199.43894958 307.88989258]
[205.10173035 321.77993774]
[211.90242004 308.41015625]
[226.12178040 303.63418579]
[239.61431885 310.18792725]
[244.65089417 324.31707764]
[238.34632874 337.92782593]
[224.31216431 343.22332764]
[210.58847046 337.17074585]
[214.98947144 351.51058960]
[226.43521118 362.43328857]
[222.77261353 376.87054443]
[226.05471802 379.71340942]
[228.05981445 383.11105347]
[228.77029419 386.59396362]
[228.32283020 389.73504639]
[226.98124695 392.19641113]
[230.52091980 406.77279663]
[234.06059265 421.34915161]
[237.60026550 435.92553711]
[241.13993835 450.50192261]
[256.19665527 450.17108154]
[270.97238159 453.08517456]
[284.77603149 459.10787964]
[296.96200562 467.95755005]
[306.96029663 479.22021484]
[314.30331421 492.36914062]
[318.64758301 506.78930664]
[319.78994751 521.80627441]
[317.67694092 536.71765137]
[312.40737915 550.82598877]
[304.22778320 563.47149658]
[293.52069092 574.06262207]
[280.78689575 582.10406494]
[266.62200928 587.21966553]
[251.68849182 589.17022705]
[236.68486023 587.86444092]
[222.31285095 583.36340332]
[209.24465942 575.87768555]
[198.09150696 565.75732422]
[189.37504578 553.47570801]
[183.50297546 539.60729980]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 189]
[7 188]
[8 187]
[9 186]
[10 185]
[11 180]
[13 178]
[14 177]
[15 170]
[16 169]
[17 168]
[18 167]
[19 166]
[20 165]
[21 162]
[22 161]
[23 160]
[24 159]
[25 158]
[26 156]
[27 155]
[28 154]
[30 152]
[31 151]
[39 150]
[40 149]
[41 148]
[42 147]
[43 146]
[44 145]
[45 141]
[46 140]
[47 139]
[48 138]
[63 137]
[64 136]
[65 135]
[66 134]
[70 131]
[71 130]
[72 129]
[73 128]
[74 127]
[78 126]
[80 124]
[81 123]
[82 120]
[83 119]
[84 118]
[85 117]
[86 116]
[87 115]
[89 114]
[90 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
