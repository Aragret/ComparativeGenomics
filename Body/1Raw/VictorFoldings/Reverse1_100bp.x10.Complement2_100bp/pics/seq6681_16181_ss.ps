%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[65.42805481 698.90435791]
[64.58195496 683.87542725]
[66.77881622 668.98388672]
[71.92868042 654.83947754]
[79.82067108 642.02148438]
[90.13160706 631.05474854]
[102.43926239 622.38836670]
[116.23965454 616.37719727]
[113.13554382 601.70190430]
[110.03143311 587.02655029]
[106.92733002 572.35125732]
[102.46768188 566.45776367]
[103.88796234 557.43444824]
[101.00269318 542.71453857]
[98.11741638 527.99462891]
[93.12569427 542.13970947]
[83.15815735 553.34899902]
[69.69343567 559.95971680]
[54.72894287 560.99114990]
[40.48456573 556.29028320]
[29.07337570 546.55456543]
[22.18815804 533.22814941]
[20.85029030 518.28790283]
[25.25823784 503.95019531]
[34.75811005 492.34191895]
[47.94065475 485.18505859]
[62.85031891 483.54132080]
[77.27534485 487.65454102]
[89.07586670 496.91455078]
[96.50074005 509.94586182]
[88.95378876 497.10479736]
[96.89569092 483.42135620]
[97.11901855 468.42303467]
[97.34234619 453.42468262]
[83.89822388 444.00485229]
[78.66553497 428.27017212]
[83.89445496 412.35916138]
[97.71246338 402.60424805]
[97.71246338 387.60424805]
[97.71246338 372.60424805]
[97.71246338 357.60424805]
[97.71246338 342.60424805]
[97.71246338 327.60424805]
[97.71246338 312.60424805]
[97.71246338 297.60424805]
[97.71246338 282.60424805]
[97.48913574 267.60589600]
[89.37632751 255.11463928]
[96.69931793 241.09020996]
[96.25271606 226.09686279]
[95.80610657 211.10351562]
[95.35949707 196.11016846]
[94.91289520 181.11682129]
[94.46628571 166.12345886]
[86.35347748 153.63220215]
[93.67646790 139.60777283]
[93.22985840 124.61443329]
[92.78325653 109.62107849]
[92.11347198 94.63603973]
[83.56848907 81.32086945]
[90.53453064 68.15563202]
[89.64171600 53.18222427]
[78.10382080 42.71729279]
[77.41168213 27.51941109]
[87.45949554 16.58428574]
[86.56668091 1.61087966]
[85.67386627 -13.36252594]
[83.89139557 -28.25624275]
[81.22560120 -43.01745987]
[78.55980682 -57.77867889]
[75.89401245 -72.53989410]
[63.19431305 -81.55961609]
[60.70109558 -96.56756592]
[69.37828827 -108.61920166]
[66.71249390 -123.38041687]
[62.74040222 -128.66567993]
[62.12597275 -134.31541443]
[64.19393921 -138.62037659]
[61.96881866 -153.45440674]
[59.74370193 -168.28845215]
[53.57460022 -154.61576843]
[42.13991547 -144.90763855]
[27.64750481 -141.03852844]
[12.89562416 -143.75550842]
[0.73263192 -152.53398132]
[-6.49298954 -165.67897034]
[-7.38608503 -180.65235901]
[-1.77421212 -194.56303406]
[9.25906467 -204.72505188]
[23.58339119 -209.17631531]
[38.43296814 -207.05731201]
[50.94057083 -198.77722168]
[58.69158173 -185.93357849]
[59.13818741 -200.92694092]
[59.58479309 -215.92028809]
[60.03139877 -230.91363525]
[52.70841217 -244.93806458]
[60.82122040 -257.42932129]
[61.26782608 -272.42266846]
[47.38910294 -278.62344360]
[36.94340134 -289.66680908]
[31.52361298 -303.86871338]
[31.95621300 -319.06347656]
[38.17523575 -332.93405151]
[49.23232651 -343.36520386]
[63.44135666 -348.76629639]
[78.63555145 -348.31372070]
[92.49790955 -342.07644653]
[102.91452026 -331.00564575]
[108.29692841 -316.78952026]
[107.82435608 -301.59594727]
[101.56886292 -287.74179077]
[90.48436737 -277.33975220]
[76.26117706 -271.97607422]
[75.81456757 -256.98272705]
[83.16950226 -244.03071594]
[75.02474976 -230.46702576]
[74.57814026 -215.47367859]
[74.13153839 -200.48033142]
[73.68492889 -185.48698425]
[74.57774353 -170.51358032]
[76.80286407 -155.67953491]
[79.02797699 -140.84548950]
[81.47370911 -126.04621887]
[84.13950348 -111.28499603]
[96.48400116 -103.02976227]
[99.39778137 -88.09776306]
[90.65522766 -75.20568848]
[93.32102203 -60.44447327]
[95.98682404 -45.68325806]
[98.65261841 -30.92203903]
[106.36384583 -43.78815460]
[120.11928558 -49.77045059]
[134.78849792 -46.63767624]
[144.90022278 -35.55828094]
[146.68304443 -20.66460800]
[139.47201538 -7.51162386]
[125.95665741 -1.00506926]
[111.17787933 -3.57172775]
[100.64727020 -14.25534153]
[101.54008484 0.71806377]
[102.43289948 15.69146919]
[113.70895386 25.35512161]
[114.82769775 40.52756500]
[104.61511993 52.28940582]
[105.50793457 67.26280975]
[113.98905945 79.50698853]
[107.08687592 93.74322510]
[110.12003326 98.02270508]
[110.53955841 103.69697571]
[107.77660370 109.17447662]
[108.22321320 124.16782379]
[108.66981506 139.16117859]
[116.81456757 152.72485352]
[109.45964050 165.67686462]
[109.90624237 180.67021179]
[110.35285187 195.66355896]
[110.79945374 210.65690613]
[111.24606323 225.65025330]
[111.69266510 240.64360046]
[119.83741760 254.20729065]
[112.48249054 267.15930176]
[115.62660980 272.97531128]
[115.39614868 278.65368652]
[112.71246338 282.60424805]
[112.71246338 297.60424805]
[112.71246338 312.60424805]
[112.71246338 327.60424805]
[112.71246338 342.60424805]
[112.71246338 357.60424805]
[112.71246338 372.60424805]
[112.71246338 387.60424805]
[112.71246338 402.60424805]
[124.43564606 409.85391235]
[130.99374390 421.85433960]
[130.76765442 435.41967773]
[123.92335510 447.00845337]
[112.34068298 453.64801025]
[112.11735535 468.64636230]
[111.89402771 483.64468384]
[119.42501068 497.55853271]
[111.49907684 510.16918945]
[112.83731079 525.10937500]
[115.72257996 539.82928467]
[118.60785675 554.54913330]
[121.60263062 569.24713135]
[124.70674133 583.92248535]
[127.81085205 598.59777832]
[130.91496277 613.27307129]
[145.96742249 613.18127441]
[160.73014832 616.12176514]
[174.59864807 621.97412109]
[187.00498962 630.49859619]
[197.44116211 641.34625244]
[205.47978210 654.07281494]
[210.79170227 668.15716553]
[213.15939331 683.02252197]
[212.48588562 698.06018066]
[208.79876709 712.65435791]
[202.24903870 726.20745850]
[193.10488892 738.16442871]
[181.74076843 748.03570557]
[168.62203979 755.41699219]
[154.28588867 760.00610352]
[139.31938171 761.61505127]
[124.33540344 760.17803955]
[109.94751740 755.75378418]
[96.74490356 748.52362061]
[85.26820374 738.78344727]
[75.98738098 726.93225098]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 189]
[9 188]
[10 187]
[11 186]
[13 185]
[14 184]
[15 183]
[30 182]
[32 180]
[33 179]
[34 178]
[38 173]
[39 172]
[40 171]
[41 170]
[42 169]
[43 168]
[44 167]
[45 166]
[46 165]
[47 162]
[49 160]
[50 159]
[51 158]
[52 157]
[53 156]
[54 155]
[56 153]
[57 152]
[58 151]
[59 148]
[61 146]
[62 145]
[65 142]
[66 141]
[67 140]
[68 131]
[69 130]
[70 129]
[71 128]
[74 125]
[75 124]
[78 123]
[79 122]
[80 121]
[93 120]
[94 119]
[95 118]
[96 117]
[98 115]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
