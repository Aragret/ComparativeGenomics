%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[153.82926941 428.11804199]
[153.95085144 413.09841919]
[155.95396423 398.21249390]
[159.80703735 383.69503784]
[165.44929504 369.77496338]
[172.79174805 356.67184448]
[181.71861267 344.59234619]
[192.08908081 333.72695923]
[203.73959351 324.24703979]
[216.48641968 316.30212402]
[210.20906067 302.67880249]
[203.93170166 289.05551147]
[197.65434265 275.43218994]
[191.37698364 261.80886841]
[185.09960938 248.18554688]
[178.82225037 234.56224060]
[171.35450745 221.55328369]
[162.75595093 209.26245117]
[154.15737915 196.97160339]
[145.55882263 184.68077087]
[136.96025085 172.38993835]
[128.36169434 160.09909058]
[114.72608185 154.10581970]
[113.15516663 138.36279297]
[111.53601074 153.27514648]
[101.54656982 164.46492004]
[86.91264343 167.75859070]
[73.09233856 161.92771912]
[65.24028015 149.14706421]
[66.28508759 134.18350220]
[75.83708191 122.61805725]
[90.33360291 118.76437378]
[104.36872101 124.06049347]
[97.29161835 110.83496094]
[90.11624908 97.66249084]
[82.84301758 84.54379272]
[75.56979370 71.42510223]
[68.29656219 58.30640793]
[60.92587280 45.24222183]
[53.45812988 32.23326874]
[45.99039078 19.22431755]
[32.40970230 11.10794163]
[32.78371811 -3.78196716]
[24.36909866 -16.19946289]
[15.05421543 -27.95671463]
[5.73933220 -39.71396637]
[-3.66281891 -51.40154648]
[-13.15171719 -63.01881027]
[-22.64061546 -74.63607025]
[-32.12951279 -86.25333405]
[-44.60540390 -77.90486908]
[-57.81837845 -70.78012085]
[-71.64878845 -64.94362640]
[-85.97136688 -60.44824219]
[-100.65640259 -57.33467484]
[-115.57091522 -55.63112259]
[-130.57983398 -55.35301590]
[-145.54721069 -56.50287628]
[-160.33752441 -59.07028198]
[-174.81680298 -63.03199005]
[-188.85392761 -68.35211182]
[-202.32177734 -74.98248291]
[-215.09838867 -82.86303711]
[-227.06802368 -91.92241669]
[-238.12231445 -102.07857513]
[-248.16113281 -113.23953247]
[-257.09356689 -125.30421448]
[-264.83871460 -138.16334534]
[-271.32641602 -151.70050049]
[-276.49795532 -165.79304504]
[-280.30648804 -180.31336975]
[-282.71749878 -195.12997437]
[-283.70919800 -210.10867310]
[-283.27255249 -225.11380005]
[-281.41152954 -240.00949097]
[-278.14300537 -254.66081238]
[-273.49658203 -268.93511963]
[-267.51431274 -282.70309448]
[-260.25036621 -295.84005737]
[-251.77056885 -308.22705078]
[-242.15170288 -319.75189209]
[-231.48086548 -330.31021118]
[-219.85470581 -339.80639648]
[-207.37850952 -348.15438843]
[-194.16526794 -355.27865601]
[-180.33465576 -361.11465454]
[-166.01191711 -365.60952759]
[-151.32675171 -368.72253418]
[-136.41218567 -370.42556763]
[-121.40325928 -370.70312500]
[-106.43592072 -369.55270386]
[-91.64570618 -366.98477173]
[-77.16656494 -363.02252197]
[-63.12963104 -357.70190430]
[-49.66202164 -351.07104492]
[-36.88570404 -343.19000244]
[-24.91639137 -334.13018799]
[-13.86247635 -323.97363281]
[-3.82406950 -312.81231689]
[5.10791826 -300.74731445]
[12.85259533 -287.88787842]
[19.33982277 -274.35049438]
[24.51085091 -260.25778198]
[28.31884956 -245.73730469]
[30.72932816 -230.92060852]
[31.72046089 -215.94187927]
[31.28327179 -200.93676758]
[29.42171669 -186.04113770]
[26.15265656 -171.38993835]
[21.50569725 -157.11581421]
[15.52292252 -143.34805298]
[8.25851536 -130.21134949]
[-0.22173555 -117.82465363]
[-9.84102917 -106.30016327]
[-20.51225090 -95.74223328]
[-11.02335262 -84.12496948]
[-1.53445399 -72.50770569]
[7.95444441 -60.89044571]
[14.62033272 -57.69862366]
[17.49658394 -49.02884674]
[26.81146622 -37.27159500]
[36.12635040 -25.51434517]
[35.54146194 -40.50293732]
[42.44161987 -53.82164001]
[55.02313614 -61.98897552]
[69.99723816 -62.87002182]
[83.44972992 -56.23447418]
[91.86416626 -43.81685257]
[93.04102325 -28.86308861]
[86.67267609 -15.28206444]
[74.42380524 -6.62382603]
[59.49622726 -5.15161514]
[45.79266739 -11.24970818]
[58.83921051 -4.06382036]
[58.99934006 11.75657558]
[66.46707916 24.76552773]
[73.93482208 37.77447891]
[79.99108887 42.01045227]
[81.41525269 51.03317642]
[88.68848419 64.15187073]
[95.96171570 77.27056885]
[103.23493958 90.38925934]
[109.58694458 95.35157776]
[110.51714325 103.75785828]
[117.59424591 116.98338318]
[125.44600677 129.76423645]
[139.69664001 136.63662720]
[140.65252686 151.50053406]
[149.25109863 163.79136658]
[157.84965515 176.08219910]
[166.44822693 188.37304688]
[175.04678345 200.66387939]
[183.64535522 212.95472717]
[183.07983398 197.96537781]
[188.99449158 184.18072510]
[200.24729919 174.26234436]
[214.66551208 170.12532043]
[229.46520996 172.56846619]
[241.78880310 181.12002563]
[249.25679016 194.12882996]
[250.42721558 209.08309937]
[245.07409668 223.09538269]
[234.23104858 233.46014404]
[219.99166870 238.17608643]
[205.10537720 236.33265686]
[192.44557190 228.28488159]
[198.72293091 241.90818787]
[205.00028992 255.53150940]
[211.27764893 269.15481567]
[217.55500793 282.77813721]
[223.83238220 296.40145874]
[230.10974121 310.02478027]
[244.43118286 305.49716187]
[259.20718384 302.80023193]
[274.20468140 301.97656250]
[289.18713379 303.03912354]
[303.91827393 305.97113037]
[318.16574097 310.72637939]
[331.70486450 317.22988892]
[344.32211304 325.37902832]
[355.81845093 335.04531860]
[366.01263428 346.07629395]
[374.74380493 358.29797363]
[381.87429810 371.51763916]
[387.29168701 385.52673340]
[390.91049194 400.10437012]
[392.67361450 415.02062988]
[392.55331421 430.04025269]
[390.55145264 444.92633057]
[386.69961548 459.44415283]
[381.05853271 473.36468506]
[373.71716309 486.46841431]
[364.79132080 498.54867554]
[354.42178345 509.41491699]
[342.77206421 518.89581299]
[330.02590942 526.84179688]
[316.38433838 533.12756348]
[302.06250000 537.65399170]
[287.28628540 540.34967041]
[272.28872681 541.17205811]
[257.30633545 540.10827637]
[242.57545471 537.17498779]
[228.32836914 532.41851807]
[214.78979492 525.91394043]
[202.17324829 517.76373291]
[190.67770386 508.09643555]
[180.48448181 497.06460571]
[171.75431824 484.84219360]
[164.62493896 471.62194824]
[159.20874023 457.61236572]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 172]
[11 171]
[12 170]
[13 169]
[14 168]
[15 167]
[16 166]
[17 153]
[18 152]
[19 151]
[20 150]
[21 149]
[22 148]
[24 146]
[33 145]
[34 144]
[35 142]
[36 141]
[37 140]
[38 139]
[39 137]
[40 136]
[41 135]
[43 133]
[44 122]
[45 121]
[46 120]
[47 118]
[48 117]
[49 116]
[50 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
