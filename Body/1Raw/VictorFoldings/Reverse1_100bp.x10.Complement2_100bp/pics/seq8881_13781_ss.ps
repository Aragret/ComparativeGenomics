%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[54.59623718 682.67797852]
[42.23679733 674.09655762]
[31.72495079 663.33099365]
[23.44068718 650.77044678]
[17.68348122 636.86895752]
[14.66145134 622.12908936]
[14.48383999 607.08361816]
[17.15707016 592.27655029]
[22.58450508 578.24304199]
[30.56994629 565.49041748]
[40.82472610 554.47967529]
[52.97814178 545.60888672]
[66.59085083 539.19866943]
[81.17076874 535.48083496]
[80.27794647 520.50744629]
[71.79682922 508.26324463]
[78.69900513 494.02700806]
[77.80619049 479.05358887]
[76.91337585 464.08020020]
[76.02056122 449.10678101]
[75.12774658 434.13339233]
[66.29141235 425.87228394]
[65.42504883 413.40499878]
[73.53720093 403.37725830]
[72.86741638 388.39221191]
[62.80995178 399.52087402]
[47.96990967 401.70562744]
[35.13195419 393.94760132]
[30.16542625 379.79367065]
[35.34095764 365.71484375]
[48.29236221 358.14773560]
[63.09843445 360.55194092]
[72.99071503 371.83001709]
[73.88352966 356.85662842]
[74.77634430 341.88320923]
[75.66916656 326.90982056]
[72.92935944 320.04574585]
[76.68837738 311.72064209]
[77.80402374 296.76217651]
[71.03476715 283.49468994]
[79.77704620 270.30819702]
[80.89269257 255.34974670]
[69.42682648 245.88021851]
[65.69141388 231.30247498]
[71.32199860 217.15504456]
[84.35401917 208.94085693]
[85.46966553 193.98240662]
[86.58531189 179.02395630]
[87.70095825 164.06550598]
[80.93170166 150.79800415]
[89.67398071 137.61154175]
[90.78962708 122.65308380]
[91.90528107 107.69462585]
[92.90953827 92.72828674]
[93.80235291 77.75487518]
[83.58977509 65.99303436]
[84.70851898 50.82059097]
[95.98457336 41.15694046]
[96.87738800 26.18353462]
[94.26431274 17.43083954]
[97.89659882 10.99435711]
[99.01225281 -3.96409631]
[100.12789917 -18.92255020]
[88.81926727 -9.06786537]
[73.82475281 -8.66205883]
[61.99965668 -17.89065933]
[58.75024796 -32.53447342]
[65.56211090 -45.89854813]
[79.32095337 -51.87300873]
[93.73642731 -47.72641373]
[102.21842957 -35.35272980]
[104.88422394 -50.11394882]
[107.32994843 -64.91322327]
[109.55506897 -79.74726105]
[111.78018188 -94.58130646]
[114.00530243 -109.41535187]
[116.23041534 -124.24939728]
[108.01322937 -142.65701294]
[120.70386505 -157.24588013]
[122.48632812 -172.13958740]
[116.44374084 -186.76141357]
[125.63861084 -198.47908020]
[127.42107391 -213.37278748]
[129.20353699 -228.26651001]
[130.98600769 -243.16023254]
[132.76847839 -258.05395508]
[134.10670471 -272.99414062]
[127.20452881 -287.23037720]
[135.68565369 -299.47454834]
[136.57846069 -314.44793701]
[137.47128296 -329.42135620]
[138.36410522 -344.39474487]
[139.25691223 -359.36816406]
[124.74054718 -363.36425781]
[111.37241364 -370.29150391]
[99.73691559 -379.84707642]
[90.34270477 -391.61322021]
[83.60044861 -405.07562256]
[79.80490112 -419.64569092]
[79.12197876 -434.68655396]
[81.58153534 -449.54064941]
[87.07605743 -463.55862427]
[95.36534882 -476.12771606]
[106.08702087 -486.69839478]
[118.77238464 -494.80856323]
[132.86688232 -500.10372925]
[147.75437927 -502.35238647]
[162.78402710 -501.45620728]
[177.29882812 -497.45440674]
[190.66423035 -490.52191162]
[202.29597473 -480.96176147]
[211.68556213 -469.19189453]
[218.42251587 -455.72686768]
[222.21232605 -441.15530396]
[222.88932800 -426.11416626]
[220.42393494 -411.26104736]
[214.92388916 -397.24520874]
[206.62966919 -384.67941284]
[195.90382385 -374.11294556]
[183.21527100 -366.00775146]
[169.11869812 -360.71813965]
[154.23031616 -358.47534180]
[153.33750916 -343.50195312]
[152.44468689 -328.52853394]
[151.55187988 -313.55514526]
[150.65905762 -298.58172607]
[157.62509155 -285.41647339]
[149.08010864 -272.10131836]
[150.83778381 -269.91757202]
[151.83634949 -266.90600586]
[151.75616455 -263.35229492]
[150.38682556 -259.65234375]
[147.66218567 -256.27148438]
[145.87973022 -241.37776184]
[144.09725952 -226.48403931]
[142.31478882 -211.59033203]
[140.53233337 -196.69660950]
[146.70240784 -183.14009094]
[137.38005066 -170.35713196]
[135.59757996 -155.46340942]
[142.61012268 -148.03123474]
[144.41201782 -137.75010681]
[140.17050171 -127.97310638]
[131.06446838 -122.02427673]
[128.83934021 -107.19023132]
[126.61422729 -92.35619354]
[124.38910675 -77.52214813]
[122.16399384 -62.68810272]
[124.23195648 -58.38315582]
[123.61753082 -52.73342133]
[119.64543915 -47.44815445]
[116.97964478 -32.68693542]
[115.08634949 -17.80690002]
[113.97070312 -2.84844756]
[112.85505676 12.11000538]
[111.85079193 27.07634926]
[110.95797729 42.04975510]
[121.00579071 52.98488235]
[120.31365204 68.18276215]
[108.77576447 78.64769745]
[107.88294220 93.62110138]
[110.58491516 101.21530151]
[106.86373138 108.81027985]
[105.74808502 123.76873016]
[104.63243866 138.72718811]
[111.32189178 153.06460571]
[102.65941620 165.18115234]
[101.54376984 180.13960266]
[100.42811584 195.09805298]
[99.31246948 210.05651855]
[110.98180389 220.11299133]
[114.45143890 234.93916321]
[108.59487915 248.80149841]
[95.85115051 256.46539307]
[94.73549652 271.42385864]
[101.42495728 285.76129150]
[92.76248169 297.87783813]
[91.64682770 312.83627319]
[90.64257050 327.80261230]
[89.74975586 342.77603149]
[88.85694122 357.74942017]
[87.96411896 372.72283936]
[87.85245514 387.72241211]
[88.52223969 402.70745850]
[98.78971863 417.99340820]
[90.10115051 433.24057007]
[90.99396515 448.21395874]
[91.88677979 463.18737793]
[92.77959442 478.16079712]
[93.67241669 493.13418579]
[102.21739960 506.44937134]
[95.25135803 519.61462402]
[96.14417267 534.58801270]
[111.06257629 536.54699707]
[125.34056854 541.29412842]
[138.46199036 548.65789795]
[149.95252991 558.37200928]
[159.39678955 570.08532715]
[166.45338440 583.37451172]
[170.86721802 597.75903320]
[172.47872925 612.71893311]
[171.22967529 627.71350098]
[167.16519165 642.20062256]
[160.43220520 655.65655518]
[151.27412415 667.59503174]
[140.02200317 677.58428955]
[127.08258820 685.26336670]
[112.92364502 690.35461426]
[98.05700684 692.67401123]
[83.02009583 692.13769531]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 193]
[15 192]
[17 190]
[18 189]
[19 188]
[20 187]
[21 186]
[24 184]
[25 183]
[33 182]
[34 181]
[35 180]
[36 179]
[38 178]
[39 177]
[41 175]
[42 174]
[46 170]
[47 169]
[48 168]
[49 167]
[51 165]
[52 164]
[53 163]
[54 161]
[55 160]
[58 157]
[59 156]
[61 155]
[62 154]
[63 153]
[71 152]
[72 151]
[73 148]
[74 147]
[75 146]
[76 145]
[77 144]
[79 140]
[80 139]
[82 137]
[83 136]
[84 135]
[85 134]
[86 133]
[87 128]
[89 126]
[90 125]
[91 124]
[92 123]
[93 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
