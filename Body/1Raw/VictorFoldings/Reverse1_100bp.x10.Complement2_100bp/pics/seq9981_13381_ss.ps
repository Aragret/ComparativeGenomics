%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUUUAAUUCCGCUUCAAAUAAUGAGAAAAAACUUACAACAGUUUUGAUCAAUUAACCUUCAAUUGCCAUGAUAAAUAUGAUUUUCUCAUUCUGGGAGxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[164.85421753 633.88256836]
[162.31500244 619.07263184]
[161.90937805 604.05212402]
[163.64561462 589.12677002]
[167.48835754 574.60046387]
[173.35937500 560.76892090]
[181.13914490 547.91369629]
[190.66928101 536.29656982]
[201.75575256 526.15405273]
[214.17286682 517.69262695]
[227.66781616 511.08450317]
[223.05380249 496.81176758]
[218.43978882 482.53903198]
[213.82577515 468.26629639]
[209.10565186 454.02832031]
[204.27964783 439.82586670]
[199.45365906 425.62341309]
[194.62765503 411.42092896]
[189.80165100 397.21847534]
[174.89010620 398.53536987]
[160.08781433 396.24368286]
[146.25584412 390.47232056]
[134.19993591 381.55273438]
[124.62344360 369.99996948]
[118.08638000 356.48272705]
[114.97265625 341.78494263]
[115.46749878 326.76000977]
[119.54649353 312.28146362]
[126.97670746 299.19210815]
[137.33001709 288.25497437]
[150.00773621 280.10876465]
[145.18174744 265.90631104]
[140.35574341 251.70384216]
[135.52975464 237.50138855]
[130.70375061 223.29893494]
[125.87775421 209.09648132]
[122.06573486 206.21940613]
[120.02060699 200.91708374]
[121.12635040 194.39874268]
[116.72535706 180.05889893]
[105.59439850 170.16188049]
[108.94220734 154.69892883]
[104.54120636 140.35908508]
[100.14021301 126.01923370]
[87.32165527 122.72179413]
[77.78379822 113.54476166]
[73.99469757 100.86283875]
[76.93483734 87.95764160]
[85.84341431 78.16857147]
[81.65640259 63.76478958]
[77.46939087 49.36100769]
[71.70335388 35.51352310]
[64.43012238 22.39482880]
[57.15689468 9.27613544]
[43.69855499 0.95846373]
[44.29421616 -13.92422581]
[37.02098846 -27.04291916]
[29.74775696 -40.16161346]
[25.94839668 -42.26371765]
[23.28359222 -45.17289734]
[21.86774826 -48.43338776]
[21.65549660 -51.59907150]
[22.45869255 -54.28477859]
[15.97919750 -67.81312561]
[9.49970150 -81.34146881]
[3.02020597 -94.86981201]
[-3.45929003 -108.39816284]
[-9.98865318 -114.78605652]
[-9.93286514 -122.17649841]
[-16.21022606 -135.79981995]
[-22.48758698 -149.42312622]
[-36.93770599 -145.28857422]
[-51.84962463 -143.40840149]
[-66.87378693 -143.82664490]
[-81.65800476 -146.53353882]
[-95.85572052 -151.46562195]
[-109.13411713 -158.50726318]
[-121.18192291 -167.49340820]
[-131.71672058 -178.21340942]
[-140.49157715 -190.41596985]
[-147.30076599 -203.81503296]
[-151.98469543 -218.09654236]
[-154.43356323 -232.92568970]
[-154.58996582 -247.95484924]
[-152.45022583 -262.83175659]
[-148.06449890 -277.20764160]
[-141.53561401 -290.74551392]
[-133.01660156 -303.12802124]
[-122.70716095 -314.06494141]
[-110.84896851 -323.29983521]
[-97.71998596 -330.61627197]
[-83.62798309 -335.84274292]
[-68.90329742 -338.85671997]
[-53.89109039 -339.58752441]
[-38.94327164 -338.01806641]
[-24.41024399 -334.18511963]
[-10.63267803 -328.17852783]
[2.06645870 -320.13909912]
[13.38948059 -310.25531006]
[23.07096100 -298.75878906]
[30.88394928 -285.91912842]
[36.64530182 -272.03720093]
[40.21995926 -257.43850708]
[41.52412796 -242.46520996]
[40.52724075 -227.46832275]
[37.25266266 -212.79939270]
[31.77715302 -198.80227661]
[24.22906876 -185.80508423]
[14.78534508 -174.11250305]
[3.66735840 -163.99861145]
[-8.86427116 -155.70050049]
[-2.58691025 -142.07717896]
[3.69045067 -128.45385742]
[10.06905556 -114.87765503]
[16.54855156 -101.34931183]
[23.02804756 -87.82096100]
[29.50754356 -74.29261780]
[35.98703766 -60.76427460]
[42.86645126 -47.43484497]
[50.13968277 -34.31615067]
[57.41291046 -21.19745636]
[70.35102081 -13.81812096]
[70.27558899 2.00290608]
[77.54882050 15.12160015]
[84.82205200 28.24029350]
[84.99380493 13.24127769]
[90.50451660 -0.70978230]
[100.62915039 -11.77738380]
[114.03563690 -18.50539207]
[128.96012878 -20.00862503]
[143.43904114 -16.08930397]
[155.56742859 -7.26308393]
[163.74958801 5.30879450]
[166.90904236 19.97228432]
[164.63006592 34.79814911]
[157.21253967 47.83579636]
[145.63233948 57.36989594]
[131.41305542 62.14607239]
[116.42546844 61.53593826]
[102.64145660 55.61977005]
[91.87316895 45.17399979]
[96.06018066 59.57778168]
[100.24719238 73.98155975]
[115.64253235 79.20742035]
[124.93062592 92.55123901]
[124.48516083 108.80324554]
[114.48005676 121.61823273]
[118.88105774 135.95808411]
[123.28205109 150.29792786]
[134.72779846 161.22062683]
[131.06520081 175.65789795]
[135.46620178 189.99774170]
[140.08021545 204.27047729]
[144.90620422 218.47293091]
[149.73220825 232.67538452]
[154.55819702 246.87783813]
[159.38420105 261.08029175]
[164.21020508 275.28274536]
[179.22644043 274.01855469]
[194.09985352 276.38366699]
[207.96656799 282.23629761]
[220.02220154 291.23229980]
[229.56860352 302.84521484]
[236.05416870 316.39724731]
[239.10585022 331.09881592]
[238.55050659 346.09439087]
[234.42474365 360.51251221]
[226.97256470 373.51623535]
[216.63092041 384.35183716]
[204.00410461 392.39248657]
[208.83010864 406.59494019]
[213.65611267 420.79739380]
[218.48210144 434.99984741]
[223.30810547 449.20230103]
[229.03211975 456.32083130]
[228.09851074 463.65228271]
[232.71252441 477.92501831]
[237.32653809 492.19775391]
[241.94053650 506.47048950]
[256.74996948 503.92852783]
[271.77041626 503.52011108]
[286.69610596 505.25357056]
[301.22314453 509.09362793]
[315.05578613 514.96209717]
[327.91241455 522.73944092]
[339.53131104 532.26745605]
[349.67587280 543.35205078]
[358.13964844 555.76757812]
[364.75024414 569.26129150]
[369.37313843 583.55847168]
[371.91421509 598.36804199]
[372.32168579 613.38854980]
[370.58728027 628.31408691]
[366.74633789 642.84088135]
[360.87704468 656.67315674]
[353.09887695 669.52935791]
[343.57015991 681.14764404]
[332.48495483 691.29150391]
[320.06887817 699.75451660]
[306.57476807 706.36431885]
[292.27728271 710.98632812]
[277.46752930 713.52642822]
[262.44705200 713.93298340]
[247.52157593 712.19769287]
[232.99501038 708.35583496]
[219.16310120 702.48565674]
[206.30741882 694.70672607]
[194.68971252 685.17730713]
[184.54650879 674.09143066]
[176.08428955 661.67486572]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 179]
[12 178]
[13 177]
[14 176]
[15 174]
[16 173]
[17 172]
[18 171]
[19 170]
[31 158]
[32 157]
[33 156]
[34 155]
[35 154]
[36 153]
[39 152]
[40 151]
[42 149]
[43 148]
[44 147]
[49 143]
[50 142]
[51 141]
[52 125]
[53 124]
[54 123]
[56 121]
[57 120]
[58 119]
[63 118]
[64 117]
[65 116]
[66 115]
[67 114]
[69 113]
[70 112]
[71 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
