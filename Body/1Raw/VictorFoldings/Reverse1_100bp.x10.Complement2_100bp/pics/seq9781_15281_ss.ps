%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[34.59646225 608.01611328]
[27.25851822 621.12994385]
[18.08931160 633.03552246]
[7.28428221 643.47912598]
[-4.92625904 652.23815918]
[-18.28204346 659.12591553]
[-32.49839401 663.99554443]
[-47.27228546 666.74328613]
[-62.28881073 667.31048584]
[-77.22789764 665.68518066]
[-91.77111053 661.90197754]
[-105.60846710 656.04150391]
[-118.44501495 648.22863770]
[-130.00715637 638.62994385]
[-140.04841614 627.45001221]
[-148.35479736 614.92712402]
[-154.74923706 601.32830811]
[-159.09542847 586.94329834]
[-161.30073547 572.07873535]
[-161.31816101 557.05151367]
[-159.14732361 542.18188477]
[-154.83450317 527.78686523]
[-148.47161865 514.17321777]
[-140.19430542 501.63110352]
[-130.17898560 490.42794800]
[-118.63913727 480.80245972]
[-105.82073975 472.95986938]
[-91.99700928 467.06729126]
[-77.46260834 463.25033569]
[-62.52733231 461.59039307]
[-47.50953293 462.12283325]
[-32.72930908 464.83630371]
[-27.90331078 450.63385010]
[-23.07731247 436.43139648]
[-30.33384514 425.78375244]
[-30.12970924 412.70550537]
[-22.31540680 401.97482300]
[-9.56261539 397.64114380]
[-4.52569962 383.51211548]
[0.51121670 369.38308716]
[5.54813290 355.25405884]
[-7.53695297 347.03182983]
[-18.47527885 336.10513306]
[-26.71883774 323.01699829]
[-31.85365677 308.41888428]
[-33.62059021 293.03823853]
[-31.92839622 277.64218140]
[-26.85844040 262.99929810]
[-18.66079140 249.84130859]
[-7.74188519 238.82643127]
[5.35561848 230.50646973]
[19.97981262 225.29920959]
[35.40198898 223.46740723]
[50.85293961 225.10554504]
[55.67893600 210.90309143]
[60.50493622 196.70063782]
[65.33093262 182.49816895]
[70.05106354 168.26019287]
[74.66507721 153.98745728]
[79.27908325 139.71472168]
[72.28979492 126.61183929]
[76.76573944 112.07153320]
[90.55662537 104.82936096]
[94.63629150 90.39480591]
[98.17596436 75.81843567]
[101.71563721 61.24205780]
[105.25531006 46.66568375]
[108.79498291 32.08930969]
[112.33465576 17.51293182]
[110.86348724 12.50466537]
[111.40623474 7.89394712]
[113.47422791 4.38133240]
[116.37155914 2.37190056]
[120.55857086 -12.03188133]
[124.74558258 -26.43566322]
[128.28524780 -41.01203918]
[131.17051697 -55.73192978]
[134.05580139 -70.45182037]
[136.94107056 -85.17171478]
[139.82633972 -99.89160156]
[142.71160889 -114.61149597]
[145.59689331 -129.33139038]
[148.48216248 -144.05128479]
[141.94728088 -155.17144775]
[144.65347290 -167.37228394]
[154.61750793 -174.23118591]
[157.72161865 -188.90649414]
[160.82572937 -203.58180237]
[163.92984009 -218.25709534]
[155.57501221 -231.40376282]
[158.93206787 -246.24238586]
[171.51689148 -254.12641907]
[174.62100220 -268.80172729]
[177.72511292 -283.47702026]
[180.82922363 -298.15231323]
[166.87852478 -303.76919556]
[154.11523438 -311.72341919]
[142.92720032 -321.77325439]
[133.65443420 -333.61328125]
[126.57870483 -346.88375854]
[121.91504669 -361.18136597]
[119.80517578 -376.07159424]
[120.31321716 -391.10202026]
[123.42372894 -405.81579590]
[129.04217529 -419.76586914]
[136.99784851 -432.52825928]
[147.04895020 -443.71514893]
[158.89004517 -452.98657227]
[172.16131592 -460.06079102]
[186.45944214 -464.72283936]
[201.34992981 -466.83102417]
[216.38027954 -466.32125854]
[231.09371948 -463.20907593]
[245.04313660 -457.58905029]
[257.80462646 -449.63195801]
[268.99038696 -439.57958984]
[278.26046753 -427.73742676]
[285.33319092 -414.46536255]
[289.99359131 -400.16668701]
[292.10009766 -385.27597046]
[291.58865356 -370.24566650]
[288.47479248 -355.53259277]
[282.85317993 -341.58380127]
[274.89462280 -328.82321167]
[264.84097290 -317.63861084]
[252.99777222 -308.36987305]
[239.72489929 -301.29864502]
[225.42572021 -296.63986206]
[210.53474426 -294.53506470]
[195.50451660 -295.04821777]
[192.40040588 -280.37292480]
[189.29629517 -265.69760132]
[186.19218445 -251.02230835]
[194.50671387 -238.71765137]
[191.56776428 -223.79058838]
[178.60513306 -215.15298462]
[175.50102234 -200.47769165]
[172.39691162 -185.80238342]
[169.29280090 -171.12709045]
[175.62347412 -154.75975037]
[163.20205688 -141.16600037]
[160.31677246 -126.44611359]
[157.43150330 -111.72622681]
[154.54623413 -97.00633240]
[151.66096497 -82.28643799]
[148.77568054 -67.56655121]
[145.89041138 -52.84665680]
[143.00514221 -38.12676620]
[156.02563477 -45.57437134]
[170.53437805 -41.76696014]
[178.22010803 -28.88559341]
[174.68008423 -14.30930328]
[161.94219971 -6.38804913]
[147.30328369 -9.65948582]
[139.14936829 -22.24865150]
[134.96235657 -7.84487009]
[130.77534485 6.55891180]
[126.91103363 21.05260468]
[123.37136078 35.62897873]
[119.83168793 50.20535660]
[116.29201508 64.78173065]
[112.75234222 79.35810852]
[109.21266937 93.93447876]
[123.18536377 88.47885132]
[136.23851013 95.86907196]
[138.74981689 110.65735626]
[128.86804199 121.94232941]
[113.87766266 121.40512848]
[104.82936096 109.44337463]
[111.77114105 123.38788605]
[106.88855743 137.79673767]
[93.55181885 144.32873535]
[88.93781281 158.60145569]
[84.32379913 172.87419128]
[84.66176605 182.00236511]
[79.53338623 187.32417297]
[74.70738983 201.52662659]
[69.88139343 215.72908020]
[65.05539703 229.93153381]
[77.54105377 237.45901489]
[88.17892456 247.41960144]
[96.50338745 259.37384033]
[102.15079498 272.79510498]
[104.87537384 287.09280396]
[104.55990601 301.63827515]
[101.22077942 315.79257202]
[95.00716400 328.93444824]
[86.19432831 340.48754883]
[75.17145538 349.94595337]
[62.42446899 356.89593506]
[48.51459122 361.03445435]
[34.05364990 362.18209839]
[19.67716217 360.29095459]
[14.64024639 374.42001343]
[9.60332966 388.54904175]
[4.56641388 402.67807007]
[12.35236359 418.34326172]
[6.51473808 434.47512817]
[-8.87485790 441.25738525]
[-13.70085526 455.45983887]
[-18.52685356 469.66229248]
[-5.15331316 476.51547241]
[7.07982254 485.24291992]
[17.91180420 495.65859985]
[27.11174774 507.54046631]
[34.48355484 520.63531494]
[39.87009430 534.66394043]
[43.15655518 549.32739258]
[44.27288437 564.31311035]
[43.19528580 579.30163574]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 201]
[33 200]
[34 199]
[38 196]
[39 195]
[40 194]
[41 193]
[54 179]
[55 178]
[56 177]
[57 176]
[58 174]
[59 173]
[60 172]
[63 169]
[64 163]
[65 162]
[66 161]
[67 160]
[68 159]
[69 158]
[73 157]
[74 156]
[75 155]
[76 148]
[77 147]
[78 146]
[79 145]
[80 144]
[81 143]
[82 142]
[83 141]
[86 139]
[87 138]
[88 137]
[89 136]
[92 133]
[93 132]
[94 131]
[95 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
