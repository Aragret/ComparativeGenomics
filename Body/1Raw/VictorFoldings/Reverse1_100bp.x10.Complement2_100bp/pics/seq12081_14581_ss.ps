%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACAGUCUAAGUGUUAGACUACAAAACCAAUUUGAUAUAAAUGUUCUCCUUUUGGGCCAUUACUACAGCCCCAACUCCCUAUCCUCCUCUUACCCCCUAxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[116.79530334 569.55322266]
[103.54187012 576.69744873]
[89.09256744 580.92962646]
[74.07907104 582.06475830]
[59.15769577 580.05322266]
[44.98074722 574.98291016]
[32.16797638 567.07556152]
[21.27950478 556.67675781]
[12.79132938 544.24114990]
[7.07451534 530.31231689]
[4.37897873 515.49926758]
[4.82255602 500.44943237]
[8.38585663 485.82080078]
[14.91310787 472.25286865]
[24.11896515 460.33877563]
[35.60099030 450.59933472]
[48.85723877 443.46029663]
[63.30820084 439.23379517]
[78.32214355 438.10458374]
[80.32615662 423.23904419]
[82.33016968 408.37350464]
[84.33418274 393.50799561]
[86.33820343 378.64245605]
[88.34221649 363.77694702]
[89.90273285 348.85833740]
[91.01838684 333.89987183]
[92.13403320 318.94140625]
[93.24967957 303.98297119]
[93.80789185 288.99334717]
[93.80789185 273.99334717]
[93.80789185 258.99334717]
[93.80789185 243.99336243]
[78.94620514 238.79534912]
[66.74209595 228.80561829]
[58.68277359 215.21777344]
[55.75847244 199.66529846]
[58.34081650 184.02522278]
[66.13571930 170.19149780]
[78.21673584 159.84574890]
[93.13514709 154.25282288]
[92.91181946 139.25448608]
[92.68849182 124.25614166]
[92.46516418 109.25780487]
[85.23708344 122.40142822]
[73.79606628 132.10211182]
[59.64738846 137.08355713]
[44.65254211 136.69038391]
[30.78435898 130.97430420]
[19.86743927 120.68738556]
[13.33808804 107.18302917]
[12.05535603 92.23797607]
[16.18800735 77.81850433]
[25.19232178 65.82174683]
[37.88362885 57.82607269]
[52.59216309 54.88345718]
[67.38276672 57.38105392]
[80.30948639 64.99025726]
[89.67158508 76.70994568]
[94.23761749 91.00055695]
[97.34172821 76.32525635]
[100.44583893 61.64995193]
[103.54994202 46.97465134]
[106.65405273 32.29934692]
[109.75816345 17.62404633]
[112.86227417 2.94874382]
[108.14827728 -12.15386486]
[118.35188293 -23.00447464]
[121.45599365 -37.67977524]
[124.23160553 -52.42073822]
[126.67733002 -67.22000885]
[129.12306213 -82.01927948]
[131.56878662 -96.81855011]
[134.01451111 -111.61782074]
[136.46023560 -126.41709137]
[138.90597534 -141.21636963]
[140.35539246 -156.14617920]
[126.50023651 -159.28091431]
[113.46719360 -164.92095947]
[101.70479584 -172.87049866]
[91.61753082 -182.85421753]
[83.55194092 -194.52694702]
[77.78469849 -207.48550415]
[74.51310730 -221.28262329]
[73.84838867 -235.44245911]
[75.81187439 -249.47692871]
[80.33433533 -262.90255737]
[87.25839996 -275.25717163]
[96.34406281 -286.11575317]
[107.27700043 -295.10510254]
[119.67940521 -301.91659546]
[133.12309265 -306.31692505]
[147.14424133 -308.15588379]
[148.03704834 -323.12927246]
[148.92987061 -338.10269165]
[149.82267761 -353.07608032]
[150.71549988 -368.04949951]
[151.60832214 -383.02291870]
[152.50112915 -397.99630737]
[138.41069031 -403.50219727]
[126.71258545 -413.09436035]
[118.55287170 -425.83303833]
[114.73094940 -440.47024536]
[115.62126160 -455.57199097]
[121.13658142 -469.65875244]
[130.73657227 -481.35043335]
[143.48072815 -489.50158691]
[158.12051392 -493.31372070]
[173.22164917 -492.41326904]
[187.30468750 -486.88851929]
[198.98992920 -477.28070068]
[207.13256836 -464.53106689]
[210.93487549 -449.88876343]
[210.02432251 -434.78820801]
[204.49012756 -420.70886230]
[194.87448120 -409.03005981]
[182.11941528 -400.89599609]
[167.47453308 -397.10348511]
[166.58172607 -382.13009644]
[165.68890381 -367.15667725]
[164.79609680 -352.18328857]
[163.90327454 -337.20986938]
[163.01045227 -322.23648071]
[162.11764526 -307.26306152]
[177.41525269 -303.18301392]
[191.54393005 -296.02633667]
[203.89230347 -286.10021973]
[213.92555237 -273.83166504]
[221.20851135 -259.74920654]
[225.42456055 -244.46015930]
[226.38938904 -228.62434387]
[224.05908203 -212.92570496]
[218.53204346 -198.04272461]
[210.04493713 -184.61911011]
[198.96244812 -173.23591614]
[185.76170349 -164.38645935]
[171.01168823 -158.45491028]
[155.34873962 -155.69956970]
[165.01098633 -167.17304993]
[179.31063843 -171.70295715]
[193.81678772 -167.88563538]
[204.03453064 -156.90394592]
[206.79780579 -142.16065979]
[201.25036621 -128.22416687]
[189.11117554 -119.41282654]
[174.14166260 -118.45693207]
[160.98030090 -125.65267944]
[153.70524597 -138.77062988]
[151.25950623 -123.97136688]
[148.81378174 -109.17209625]
[146.36805725 -94.37282562]
[143.92233276 -79.57355499]
[141.47660828 -64.77428436]
[139.03086853 -49.97500992]
[140.77593994 -46.91117477]
[141.12370300 -42.84988403]
[139.62153625 -38.45707321]
[136.13130188 -34.57566452]
[133.02719116 -19.90036392]
[137.96321106 -5.84743071]
[127.53757477 6.05285406]
[124.43347168 20.72815704]
[121.32936096 35.40345764]
[118.22525024 50.07876205]
[115.12113953 64.75406647]
[112.01702881 79.42936707]
[108.91291809 94.10466766]
[107.46350098 109.03447723]
[107.68682861 124.03281403]
[107.91015625 139.03115845]
[108.13348389 154.02949524]
[121.77401733 158.41552734]
[133.37577820 166.78729248]
[141.81224060 178.31553650]
[146.26924133 191.86532593]
[146.32362366 206.10777283]
[141.98330688 219.65034485]
[133.68528748 231.17304993]
[122.25157928 239.55705261]
[108.80789185 243.99336243]
[108.80789185 258.99334717]
[108.80789185 273.99334717]
[108.80789185 288.99334717]
[121.09856415 280.39456177]
[135.52699280 284.49581909]
[141.45709229 298.27383423]
[134.51739502 311.57199097]
[119.82360840 314.58734131]
[108.20813751 305.09860229]
[107.09248352 320.05706787]
[105.97683716 335.01553345]
[104.86119080 349.97396851]
[106.88462067 353.81579590]
[107.51670837 357.71002197]
[106.91182709 361.21282959]
[105.35263062 363.97607422]
[103.20774078 365.78094482]
[101.20372772 380.64648438]
[99.19971466 395.51199341]
[97.19570160 410.37753296]
[95.19168854 425.24307251]
[93.18767548 440.10858154]
[107.36661530 445.17327881]
[120.18249512 453.07562256]
[131.07505798 463.47012329]
[139.56813049 475.90240479]
[145.29042053 489.82897949]
[147.99177551 504.64099121]
[147.55412292 519.69097900]
[143.99658203 534.32104492]
[137.47467041 547.89154053]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 201]
[20 200]
[21 199]
[22 198]
[23 197]
[24 196]
[25 191]
[26 190]
[27 189]
[28 188]
[29 182]
[30 181]
[31 180]
[32 179]
[40 170]
[41 169]
[42 168]
[43 167]
[59 166]
[60 165]
[61 164]
[62 163]
[63 162]
[64 161]
[65 160]
[67 158]
[68 157]
[69 153]
[70 152]
[71 151]
[72 150]
[73 149]
[74 148]
[75 147]
[76 137]
[92 123]
[93 122]
[94 121]
[95 120]
[96 119]
[97 118]
[98 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
