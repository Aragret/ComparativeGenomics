%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGGCAGCCUUUACCACUUCCCUCUGAGCUUCAUGAGACUCCGAACAUCCUCCCAUUUUAUCUCUGGGUCAUUUUAACAUUAUUCGUCACGAACUUAAUxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[84.13174438 606.59997559]
[79.11245728 620.90319824]
[69.50148010 632.62518311]
[56.45938110 640.35040283]
[41.56105042 643.14605713]
[26.60554123 640.67449951]
[13.39880180 633.23419189]
[3.53561044 621.72363281]
[-1.79300499 607.53277588]
[-1.94358802 592.37512207]
[3.10204506 578.08117676]
[12.73460960 566.37695312]
[25.79092598 558.67572021]
[40.69438171 555.90753174]
[43.14011002 541.10827637]
[45.58583450 526.30902100]
[40.02723694 512.49047852]
[49.91109467 500.13653564]
[44.35249710 486.31805420]
[54.23635483 473.96408081]
[56.68208313 459.16482544]
[59.12781143 444.36553955]
[61.57353973 429.56628418]
[63.68816376 414.71609497]
[65.47062683 399.82235718]
[67.25309753 384.92864990]
[69.03556061 370.03494263]
[70.81802368 355.14120483]
[64.64794159 341.58468628]
[73.97030640 328.80172729]
[66.74280548 319.10174561]
[68.10591125 306.67895508]
[77.87105560 298.25253296]
[79.87506866 283.38699341]
[81.87908173 268.52148438]
[83.32850647 253.59165955]
[84.22132111 238.61825562]
[85.11413574 223.64485168]
[86.00695038 208.67144775]
[75.95913696 197.73631287]
[76.65127563 182.53843689]
[88.18917084 172.07350159]
[89.08198547 157.10009766]
[89.97480011 142.12669373]
[90.86761475 127.15328979]
[78.53789520 118.97576141]
[71.93244934 105.73709869]
[72.81307220 90.96825409]
[80.94487000 78.60832977]
[94.15898132 71.95389557]
[95.05179596 56.98048782]
[95.94461060 42.00708389]
[96.27958679 27.01082420]
[96.05625916 12.01248646]
[95.83293152 -2.98585129]
[95.60960388 -17.98418808]
[95.38627625 -32.98252487]
[83.22499084 -24.20168304]
[68.73709869 -28.08766747]
[62.60252380 -41.77587509]
[69.34345245 -55.17586899]
[83.99072266 -58.40967178]
[95.74618530 -49.09492874]
[96.63899994 -64.06833649]
[97.53181458 -79.04174042]
[98.42462921 -94.01514435]
[99.31744385 -108.98854828]
[100.21025848 -123.96195984]
[101.10308075 -138.93536377]
[88.32238770 -131.08335876]
[74.16365051 -136.03613281]
[69.06414795 -150.14270020]
[76.78305817 -163.00421143]
[91.63027191 -165.13964844]
[102.66037750 -154.97636414]
[104.66439056 -169.84190369]
[106.66840363 -184.70742798]
[108.67241669 -199.57295227]
[110.67642975 -214.43847656]
[104.85221100 -229.14865112]
[114.22052002 -240.72811890]
[115.89205933 -255.63468933]
[117.23029327 -270.57485962]
[107.37243652 -282.63555908]
[108.94242096 -297.76797485]
[120.50119781 -307.09161377]
[121.83943176 -322.03179932]
[114.18313599 -332.41177368]
[115.60533142 -344.82794189]
[124.80172729 -352.68624878]
[126.36225128 -367.60482788]
[127.92277527 -382.52343750]
[129.48329163 -397.44204712]
[115.08393097 -401.80725098]
[101.77103424 -408.81887817]
[90.02584076 -418.22351074]
[80.27294159 -429.68115234]
[72.86489868 -442.77761841]
[68.06951141 -457.03948975]
[66.06011963 -471.95117188]
[66.90936279 -486.97366333]
[70.58654785 -501.56390381]
[76.95874786 -515.19445801]
[85.79560852 -527.37255859]
[96.77767944 -537.65802002]
[109.50796509 -545.67901611]
[123.52628326 -551.14556885]
[138.32586670 -553.86010742]
[153.37173462 -553.72442627]
[168.11997986 -550.74353027]
[182.03747559 -545.02514648]
[194.62107849 -536.77593994]
[205.41593933 -526.29418945]
[214.03181458 -513.95874023]
[220.15722656 -500.21551514]
[223.57078552 -485.56137085]
[224.14906311 -470.52600098]
[221.87115479 -455.65295410]
[216.81942749 -441.47985840]
[209.17646790 -428.51910400]
[199.21859741 -417.23913574]
[187.30577087 -408.04779053]
[173.86862183 -401.27731323]
[159.39289856 -397.17242432]
[144.40190125 -395.88153076]
[142.84136963 -380.96292114]
[141.28085327 -366.04431152]
[139.72033691 -351.12570190]
[147.71942139 -335.50579834]
[136.77961731 -320.69357300]
[135.44139099 -305.75338745]
[145.15916443 -294.52392578]
[144.01483154 -279.35339355]
[132.17048645 -269.23663330]
[130.83224487 -254.29644775]
[132.80035400 -251.37089539]
[133.44921875 -247.34672546]
[132.27793884 -242.85435486]
[129.08604431 -238.72410583]
[135.05360413 -225.07720947]
[125.54195404 -212.43446350]
[123.53794098 -197.56893921]
[121.53392792 -182.70341492]
[119.52991486 -167.83789062]
[117.52590179 -152.97235107]
[116.07648468 -138.04254150]
[115.18367004 -123.06914520]
[114.29085541 -108.09573364]
[113.39803314 -93.12232971]
[112.50521851 -78.14892578]
[111.61240387 -63.17551804]
[110.71958923 -48.20211411]
[110.38461304 -33.20585251]
[110.60794067 -18.20751572]
[110.83126831 -3.20917916]
[111.05459595 11.78915882]
[111.27792358 26.78749657]
[123.43920898 18.00665283]
[137.92710876 21.89263535]
[144.06167603 35.58084488]
[137.32073975 48.98083878]
[122.67346954 52.21464157]
[110.91801453 42.89989853]
[110.02519989 57.87330246]
[109.13238525 72.84671021]
[121.46210480 81.02423859]
[128.06755066 94.26290131]
[127.18692780 109.03174591]
[119.05513000 121.39167023]
[105.84101868 128.04611206]
[104.94820404 143.01951599]
[104.05538940 157.99291992]
[103.16257477 172.96632385]
[113.37516022 184.72816467]
[112.25640869 199.90060425]
[100.98035431 209.56425476]
[100.08753967 224.53767395]
[99.19472504 239.51107788]
[98.30191040 254.48448181]
[111.08259583 246.63247681]
[125.24134064 251.58525085]
[130.34083557 265.69180298]
[122.62193298 278.55331421]
[107.77471161 280.68875122]
[96.74461365 270.52548218]
[94.74060059 285.39102173]
[92.73658752 300.25653076]
[100.12400818 317.12390137]
[88.86402893 330.58419800]
[94.90661621 345.20602417]
[85.71174622 356.92367554]
[83.92927551 371.81741333]
[82.14681244 386.71112061]
[80.36434174 401.60482788]
[78.58187866 416.49856567]
[80.63776398 421.29650879]
[80.64675903 425.93905640]
[79.01082611 429.67251587]
[76.37281036 432.01202393]
[73.92707825 446.81127930]
[71.48135376 461.61056519]
[69.03562927 476.40982056]
[74.41928864 491.28686523]
[64.71036530 502.58227539]
[70.09403229 517.45935059]
[60.38510895 528.75476074]
[57.93938065 543.55401611]
[55.49365234 558.35327148]
[68.71408081 565.76922607]
[78.59846497 577.26159668]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 208]
[15 207]
[16 206]
[18 204]
[20 202]
[21 201]
[22 200]
[23 199]
[24 195]
[25 194]
[26 193]
[27 192]
[28 191]
[30 189]
[33 187]
[34 186]
[35 185]
[36 179]
[37 178]
[38 177]
[39 176]
[42 173]
[43 172]
[44 171]
[45 170]
[50 165]
[51 164]
[52 163]
[53 157]
[54 156]
[55 155]
[56 154]
[57 153]
[63 152]
[64 151]
[65 150]
[66 149]
[67 148]
[68 147]
[69 146]
[75 145]
[76 144]
[77 143]
[78 142]
[79 141]
[81 139]
[82 135]
[83 134]
[86 131]
[87 130]
[90 128]
[91 127]
[92 126]
[93 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
