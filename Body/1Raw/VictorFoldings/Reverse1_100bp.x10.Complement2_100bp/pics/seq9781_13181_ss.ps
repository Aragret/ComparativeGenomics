%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[-16.41154671 589.97772217]
[-20.46155357 604.44152832]
[-26.29246140 618.28363037]
[-33.81230927 631.28570557]
[-42.90250015 643.24279785]
[-53.41966629 653.96624756]
[-65.19793701 663.28698730]
[-78.05155945 671.05792236]
[-91.77780151 677.15655518]
[-106.16018677 681.48675537]
[-120.97187805 683.98010254]
[-135.97927856 684.59735107]
[-150.94570923 683.32879639]
[-165.63511658 680.19433594]
[-179.81582642 675.24353027]
[-193.26419067 668.55438232]
[-205.76812744 660.23242188]
[-217.13040161 650.40887451]
[-227.17181396 639.23870850]
[-235.73402405 626.89807129]
[-242.68197632 613.58154297]
[-247.90609741 599.49920654]
[-251.32398987 584.87316895]
[-252.88175964 569.93408203]
[-252.55482483 554.91754150]
[-250.34834290 540.06042480]
[-246.29711914 525.59698486]
[-240.46504211 511.75537109]
[-232.94410706 498.75387573]
[-223.85290527 486.79754639]
[-213.33483887 476.07498169]
[-201.55578613 466.75527954]
[-188.70150757 458.98541260]
[-174.97474670 452.88790894]
[-160.59201050 448.55895996]
[-145.78010559 446.06683350]
[-130.77264404 445.45083618]
[-115.80632019 446.72067261]
[-101.11717987 449.85635376]
[-86.93688202 454.80834961]
[-80.25669098 441.37799072]
[-73.57649231 427.94760132]
[-66.89630127 414.51724243]
[-60.31627274 401.03750610]
[-53.83677673 387.50915527]
[-62.28007126 376.77471924]
[-65.28907013 363.38537598]
[-62.22094727 349.94158936]
[-53.61886597 339.07962036]
[-41.11685562 332.95458984]
[-27.12961769 332.81301880]
[-20.44942474 319.38265991]
[-13.76922894 305.95227051]
[-7.08903456 292.52191162]
[-8.34864807 277.68066406]
[4.72486496 268.77032471]
[11.40505981 255.33995056]
[18.08525467 241.90957642]
[24.76544952 228.47920227]
[31.44564247 215.04882812]
[38.12583923 201.61845398]
[34.57519531 190.05473328]
[40.03065872 178.81098938]
[52.05834198 174.15292358]
[48.68025970 162.53762817]
[54.30252075 151.37635803]
[66.39822388 146.89787292]
[73.47532654 133.67234802]
[80.55243683 120.44682312]
[87.62953949 107.22129822]
[87.37055206 93.24185944]
[99.14493561 85.70159912]
[103.97093201 71.49914551]
[106.41665649 56.69987488]
[108.86238861 41.90060043]
[111.30811310 27.10133171]
[112.20092773 12.12792587]
[111.53114319 -2.85711336]
[110.86135864 -17.84215164]
[110.19157410 -32.82719040]
[109.52178955 -47.81222916]
[108.85200500 -62.79726791]
[108.18222046 -77.78231049]
[107.51243591 -92.76734924]
[99.16664124 -106.20826721]
[106.32791901 -119.26833344]
[94.43346405 -110.12929535]
[79.83629608 -113.58219910]
[73.29689026 -127.08168793]
[79.63586426 -140.67643738]
[94.18035889 -144.34492493]
[106.20793915 -135.38430786]
[106.65454865 -150.37765503]
[107.10115051 -165.37100220]
[107.54776001 -180.36434937]
[100.22476959 -194.38877869]
[108.33757782 -206.88003540]
[108.78418732 -221.87339783]
[94.69149780 -227.45657349]
[83.36033630 -237.52536011]
[76.15897369 -250.86389160]
[73.95703125 -265.86148071]
[77.02039337 -280.70706177]
[84.97914124 -293.60800171]
[96.87222290 -303.00640869]
[111.26349640 -307.76742554]
[126.41513062 -307.31610107]
[140.49749756 -301.70693970]
[151.81008911 -291.61730957]
[158.98686218 -278.26553345]
[161.16116333 -263.26391602]
[158.07044983 -248.42399597]
[150.08793640 -235.53775024]
[138.17755127 -226.16127014]
[123.77753448 -221.42678833]
[123.33093262 -206.43344116]
[130.68586731 -193.48143005]
[122.54110718 -179.91775513]
[122.09450531 -164.92440796]
[121.64789581 -149.93104553]
[121.20129395 -134.93769836]
[121.31295776 -119.93811798]
[129.61083984 -107.56903076]
[122.49747467 -93.43713379]
[123.16725922 -78.45209503]
[123.83704376 -63.46705246]
[124.50682831 -48.48201370]
[125.17661285 -33.49697495]
[125.84639740 -18.51193810]
[126.51618195 -3.52689838]
[127.18596649 11.45814037]
[134.22076416 -1.78994274]
[145.74081421 -11.39662266]
[160.03720093 -15.93680668]
[174.98913574 -14.73698425]
[188.37860107 -7.97514248]
[198.21931458 3.34563971]
[203.05151367 17.54599190]
[202.15832520 32.51937485]
[195.67227173 46.04457855]
[184.55551147 56.11521912]
[170.45716858 61.23737335]
[155.46862793 60.65120316]
[141.81335449 54.44366455]
[131.51702881 43.53560638]
[126.10738373 29.54705811]
[123.66165924 44.34632874]
[121.21592712 59.14559937]
[118.77020264 73.94487000]
[127.58662415 61.80936050]
[139.21002197 52.32797241]
[152.86944580 46.12957382]
[167.65892029 43.62528229]
[182.59750366 44.98120117]
[196.69439697 50.10739136]
[209.01457214 58.66385651]
[218.74090576 70.08307648]
[225.22827148 83.60765076]
[228.04637146 98.34055328]
[227.00831604 113.30458832]
[222.18293762 127.50725555]
[213.89030457 140.00654602]
[202.68041992 149.97341919]
[189.29681396 156.74681091]
[174.62715149 159.87745667]
[159.64442444 159.15773010]
[145.34239197 154.63536072]
[132.66964722 146.61030579]
[122.46673584 135.61482239]
[115.41037750 122.37821198]
[111.96858978 107.77841187]
[112.37046051 92.77870178]
[112.62944794 106.75814056]
[100.85506439 114.29840088]
[93.77796173 127.52392578]
[86.70085907 140.74945068]
[79.62374878 153.97497559]
[80.64463806 172.36082458]
[65.38777161 181.03233337]
[66.68228149 199.40093994]
[51.55621338 208.29864502]
[44.87601852 221.72901917]
[38.19582367 235.15939331]
[31.51563072 248.58976746]
[24.83543587 262.02014160]
[18.15524101 275.45053101]
[18.93704224 291.25241089]
[6.34134150 299.20208740]
[-0.33885321 312.63247681]
[-7.01904774 326.06283569]
[-13.69924259 339.49322510]
[-4.41855431 353.17755127]
[-3.31162691 369.58090210]
[-10.58610153 384.21984863]
[-24.17170334 393.14102173]
[-40.30842972 393.98864746]
[-46.78792572 407.51699829]
[-47.67252731 416.60848999]
[-53.46592331 421.19741821]
[-60.14611816 434.62780762]
[-66.82631683 448.05816650]
[-73.50650787 461.48855591]
[-61.00188446 469.80947876]
[-49.63878250 479.63204956]
[-39.59641647 490.80139160]
[-31.03317070 503.14132690]
[-24.08409500 516.45727539]
[-18.85879135 530.53912354]
[-15.43966579 545.16491699]
[-13.88064575 560.10388184]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 202]
[41 201]
[42 200]
[43 199]
[44 197]
[45 196]
[51 191]
[52 190]
[53 189]
[54 188]
[56 186]
[57 185]
[58 184]
[59 183]
[60 182]
[61 181]
[64 179]
[67 177]
[68 176]
[69 175]
[70 174]
[72 172]
[73 149]
[74 148]
[75 147]
[76 146]
[77 131]
[78 130]
[79 129]
[80 128]
[81 127]
[82 126]
[83 125]
[84 124]
[86 122]
[92 121]
[93 120]
[94 119]
[95 118]
[97 116]
[98 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
