%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxGUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUA\
) } def
/len { sequence length } bind def

/coor [
[204.32655334 770.84912109]
[190.56118774 764.88195801]
[177.10775757 758.24133301]
[163.99919128 750.94354248]
[151.26756287 743.00640869]
[138.94404602 734.44934082]
[127.05878448 725.29327393]
[115.64086151 715.56066895]
[104.71823120 705.27532959]
[94.31761169 694.46240234]
[84.46445465 683.14831543]
[75.18288422 671.36083984]
[66.49560547 659.12878418]
[58.42387772 646.48205566]
[50.98745728 633.45159912]
[44.20453644 620.06933594]
[38.09172058 606.36804199]
[32.66396332 592.38122559]
[27.93455505 578.14306641]
[23.91506195 563.68841553]
[20.61532211 549.05267334]
[18.04341316 534.27172852]
[16.20562744 519.38159180]
[15.10646248 504.41885376]
[14.74860764 489.42001343]
[15.13293839 474.42187500]
[16.25851631 459.46105957]
[18.12258339 444.57421875]
[20.72058105 429.79779053]
[24.04615211 415.16793823]
[28.09115410 400.72042847]
[32.84569168 386.49063110]
[38.29813004 372.51339722]
[44.43512344 358.82290649]
[51.24165344 345.45263672]
[58.70106888 332.43536377]
[66.79510498 319.80288696]
[75.50396729 307.58618164]
[84.80633545 295.81509399]
[94.67944336 284.51843262]
[105.09913635 273.72387695]
[116.03990936 263.45782471]
[127.47499084 253.74539185]
[139.37638855 244.61035156]
[151.71499634 236.07505798]
[164.46061707 228.16040039]
[157.18737793 215.04170227]
[149.91415405 201.92300415]
[142.64093018 188.80430603]
[135.36769104 175.68562317]
[128.09446716 162.56692505]
[110.83535004 153.84857178]
[111.49524689 133.70092773]
[103.83464813 120.80461121]
[96.17405701 107.90827942]
[93.29486847 106.90839386]
[90.71585846 104.83878326]
[88.83394623 101.80863190]
[88.00014496 98.07218170]
[88.46772003 94.00839996]
[81.58831024 80.67897034]
[74.70890045 67.34954071]
[67.82948303 54.02011490]
[60.95007324 40.69068527]
[55.60210037 36.80343628]
[53.35708237 31.58261871]
[54.07096100 26.86039162]
[47.59146500 13.33204651]
[41.11196899 -0.19629903]
[26.77491379 4.30143499]
[11.94368172 6.71292925]
[-3.07978296 6.98908949]
[-17.98962212 5.12429285]
[-32.48228836 1.15650392]
[-46.26273346 -4.83349752]
[-59.05040359 -12.72376347]
[-70.58495331 -22.35365677]
[-80.63156128 -33.52712631]
[-88.98568726 -46.01669693]
[-95.47725677 -59.56809235]
[-99.97410583 -73.90542603]
[-102.38468170 -88.73680878]
[-102.65991211 -103.76029205]
[-100.79418945 -118.67001343]
[-96.82550812 -133.16242981]
[-90.83464813 -146.94250488]
[-82.94359589 -159.72969055]
[-73.31298828 -171.26364136]
[-62.13889313 -181.30955505]
[-49.64880753 -189.66291809]
[-36.09701157 -196.15364075]
[-21.75939941 -200.64959717]
[-6.92786884 -203.05926514]
[8.09562969 -203.33355713]
[23.00523758 -201.46691895]
[37.49741364 -197.49732971]
[51.27711868 -191.50563049]
[64.06381226 -183.61378479]
[75.59716797 -173.98245239]
[85.64239502 -162.80773926]
[93.99497223 -150.31713867]
[100.48486328 -136.76493835]
[104.97993469 -122.42705536]
[107.38867950 -107.59537506]
[107.66204834 -92.57186127]
[105.79448700 -77.66236877]
[101.82400513 -63.17043686]
[95.83144379 -49.39110565]
[87.93880463 -36.60490036]
[78.30677032 -25.07213593]
[67.13143158 -15.02760315]
[54.64031601 -6.67579508]
[61.11981201 6.85255051]
[67.59930420 20.38089561]
[74.27950287 33.81127167]
[81.15891266 47.14070129]
[88.03833008 60.47013092]
[94.91773987 73.79956055]
[101.79714966 87.12899017]
[109.07038116 100.24768066]
[116.73097992 113.14401245]
[124.39157867 126.04033661]
[135.06959534 128.11125183]
[142.68824768 135.56352234]
[144.90100098 145.76411438]
[141.21316528 155.29368591]
[148.48638916 168.41238403]
[155.75961304 181.53108215]
[163.03285217 194.64978027]
[170.30607605 207.76846313]
[177.57931519 220.88716125]
[191.04437256 214.27017212]
[204.82019043 208.32717896]
[218.87306213 203.07272339]
[233.16859436 198.51966858]
[247.67179871 194.67915344]
[262.34719849 191.56056213]
[277.15884399 189.17155457]
[292.07052612 187.51795959]
[307.04571533 186.60382080]
[322.04782104 186.43139648]
[337.04006958 187.00108337]
[351.98583984 188.31149292]
[366.84848022 190.35943604]
[381.59167480 193.13987732]
[396.17932129 196.64602661]
[410.57571411 200.86929321]
[424.74563599 205.79936218]
[438.65441895 211.42414856]
[452.26803589 217.72988892]
[465.55313110 224.70117188]
[478.47720337 232.32090759]
[491.00866699 240.57048035]
[503.11679077 249.42967224]
[514.77203369 258.87683105]
[525.94573975 268.88882446]
[536.61071777 279.44113159]
[546.74072266 290.50796509]
[556.31109619 302.06222534]
[565.29833984 314.07565308]
[573.68048096 326.51879883]
[581.43695068 339.36126709]
[588.54888916 352.57162476]
[594.99877930 366.11752319]
[600.77093506 379.96578979]
[605.85113525 394.08261108]
[610.22698975 408.43334961]
[613.88781738 422.98297119]
[616.82458496 437.69580078]
[619.03021240 452.53588867]
[620.49920654 467.46685791]
[621.22802734 482.45223999]
[621.21484375 497.45532227]
[620.45971680 512.43939209]
[618.96453857 527.36779785]
[616.73291016 542.20397949]
[613.77026367 556.91162109]
[610.08392334 571.45477295]
[605.68286133 585.79785156]
[600.57788086 599.90570068]
[594.78149414 613.74383545]
[588.30780029 627.27838135]
[581.17272949 640.47619629]
[573.39367676 653.30505371]
[564.98974609 665.73352051]
[555.98144531 677.73114014]
[546.39080811 689.26855469]
[536.24133301 700.31756592]
[525.55792236 710.85119629]
[514.36657715 720.84356689]
[502.69482422 730.27020264]
[490.57116699 739.10815430]
[478.02526855 747.33569336]
[465.08782959 754.93273926]
[451.79049683 761.88073730]
[438.16586304 768.16253662]
[424.24722290 773.76293945]
[410.06866455 778.66809082]
[395.66488647 782.86608887]
[381.07110596 786.34667969]
[366.32305908 789.10119629]
[351.45681763 791.12304688]
[336.50878906 792.40722656]
[321.51556396 792.95062256]
[306.51379395 792.75183105]
[291.54022217 791.81146240]
[276.63146973 790.13165283]
[261.82403564 787.71667480]
[247.15414429 784.57232666]
[232.65769958 780.70635986]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 131]
[47 130]
[48 129]
[49 128]
[50 127]
[51 126]
[53 122]
[54 121]
[55 120]
[60 119]
[61 118]
[62 117]
[63 116]
[64 115]
[67 114]
[68 113]
[69 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
