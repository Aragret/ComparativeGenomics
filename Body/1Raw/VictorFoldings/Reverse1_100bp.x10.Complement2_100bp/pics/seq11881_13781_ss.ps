%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUCAUAUCCCGACACUGAUCAUACAACUCAGGACAUUCAUCCUCUCACUAUAAACUAGUCCUCUUGCACCAAUGAUCGUGUCUCUCAAGAGGGUCAUCxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[243.37786865 555.33782959]
[253.93788147 544.63568115]
[266.11547852 535.81774902]
[259.43527222 522.38739014]
[252.75508118 508.95700073]
[236.59733582 504.29159546]
[228.65681458 489.08428955]
[234.28007507 472.51931763]
[227.40066528 459.18988037]
[220.52125549 445.86044312]
[213.64184570 432.53100586]
[206.76243591 419.20159912]
[199.88301086 405.87216187]
[193.00360107 392.54272461]
[186.12419128 379.21328735]
[179.24478149 365.88388062]
[172.16767883 352.65835571]
[164.89443970 339.53964233]
[163.50407410 354.47506714]
[155.40966797 367.10363770]
[142.41954041 374.60409546]
[127.43572998 375.30081177]
[113.80564880 369.03814697]
[104.57429504 357.21517944]
[101.80397797 342.47323608]
[106.11359406 328.10565186]
[116.54035950 317.32220459]
[130.75491333 312.53195190]
[145.58168030 314.80505371]
[157.70834351 323.63366699]
[152.67143250 309.50463867]
[147.63450623 295.37561035]
[142.59759521 281.24658203]
[137.56068420 267.11755371]
[132.52375793 252.98852539]
[125.13286591 266.04129028]
[110.71443176 270.17755127]
[97.52799225 263.02789307]
[93.12733459 248.68792725]
[100.03336334 235.37226868]
[114.28998566 230.70872498]
[127.72973633 237.36805725]
[123.97343445 222.84599304]
[120.21713257 208.32394409]
[116.46083069 193.80187988]
[105.78289795 183.41770935]
[109.81782532 168.11967468]
[106.06152344 153.59761047]
[102.30522919 139.07554626]
[98.54892731 124.55349731]
[94.79262543 110.03143311]
[88.05969238 123.43544769]
[74.78729248 130.42425537]
[59.92570496 128.39120483]
[49.01793671 118.09457397]
[46.13231659 103.37475586]
[52.34510422 89.72187042]
[65.33908844 82.22811127]
[80.26782990 83.68846130]
[91.56388092 93.55925751]
[89.55986786 78.69372559]
[87.55585480 63.82820129]
[85.44123077 48.97800064]
[83.21611786 34.14395905]
[80.99099731 19.30991554]
[78.76587677 4.47587109]
[76.54076385 -10.35817242]
[74.31564331 -25.19221687]
[71.98015594 -40.00928497]
[69.53443146 -54.80855560]
[67.08870697 -69.60782623]
[64.53287506 -84.38848114]
[61.86707687 -99.14969635]
[59.20127869 -113.91091156]
[49.06961441 -121.89290619]
[47.15315628 -134.24243164]
[53.94033051 -144.25547791]
[51.49460220 -159.05474854]
[49.04887390 -173.85401917]
[39.03717422 -181.98596191]
[37.30479431 -194.36265564]
[44.24029160 -204.27352905]
[42.01517487 -219.10757446]
[39.79005814 -233.94161987]
[37.56494141 -248.77566528]
[35.33982468 -263.60971069]
[33.11470795 -278.44375610]
[30.88958931 -293.27780151]
[15.87837601 -294.66592407]
[1.63579345 -299.60681152]
[-11.01011372 -307.81317139]
[-21.32412910 -318.80792236]
[-28.70660973 -331.95184326]
[-32.72834778 -346.48074341]
[-33.15552139 -361.54995728]
[-29.96329880 -376.28335571]
[-23.33727264 -389.82437134]
[-13.66266823 -401.38574219]
[-1.50195622 -410.29531860]
[12.43785572 -416.03509521]
[27.34632683 -418.27139282]
[42.35669708 -416.87414551]
[56.59627914 -411.92462158]
[69.23721313 -403.71060181]
[79.54455566 -392.70959473]
[86.91906738 -379.56121826]
[90.93199921 -365.02987671]
[91.35003662 -349.96041870]
[88.14888000 -335.22894287]
[81.51464844 -321.69195557]
[71.83303070 -310.13644409]
[59.66692352 -301.23425293]
[45.72363281 -295.50289917]
[47.94874954 -280.66888428]
[50.17386627 -265.83483887]
[52.39898682 -251.00077820]
[54.62410355 -236.16673279]
[56.84922028 -221.33268738]
[59.07433701 -206.49865723]
[70.73008728 -193.37956238]
[63.84814453 -176.29974365]
[66.29387665 -161.50047302]
[68.73960114 -146.70120239]
[80.58938599 -133.75709534]
[73.96250153 -116.57670593]
[76.62829590 -101.81549072]
[79.29409027 -87.05427551]
[83.57627869 -81.03060150]
[81.88797760 -72.05355072]
[84.33370209 -57.25428391]
[86.77942657 -42.45501328]
[90.97146606 -36.36825180]
[89.14968872 -27.41733360]
[91.37480927 -12.58329010]
[93.59992218 2.25075412]
[95.82504272 17.08479691]
[98.05015564 31.91884232]
[100.27527618 46.75288391]
[104.37622070 52.90138245]
[102.42138672 61.82418442]
[104.42539978 76.68971252]
[106.42941284 91.55524445]
[109.31468201 106.27513123]
[113.07098389 120.79719543]
[116.82728577 135.31925964]
[120.58358765 149.84130859]
[124.33988953 164.36337280]
[135.28649902 175.78625488]
[130.98289490 190.04557800]
[134.73919678 204.56764221]
[138.49549866 219.08969116]
[142.25178528 233.61175537]
[146.65278625 247.95159912]
[151.68971252 262.08062744]
[156.72662354 276.20965576]
[161.76353455 290.33868408]
[166.80046082 304.46771240]
[171.83737183 318.59674072]
[178.01313782 332.26641846]
[185.28636169 345.38510132]
[190.74771118 349.11141968]
[193.14717102 354.26306152]
[192.57420349 359.00445557]
[199.45362854 372.33389282]
[206.33303833 385.66333008]
[213.21244812 398.99273682]
[220.09185791 412.32217407]
[226.97126770 425.65161133]
[233.85067749 438.98104858]
[240.73010254 452.31045532]
[247.60951233 465.63989258]
[260.82696533 468.23095703]
[270.00482178 477.82141113]
[271.95440674 490.75515747]
[266.18545532 502.27682495]
[272.86566162 515.70721436]
[279.54583740 529.13757324]
[293.92520142 524.74621582]
[308.83126831 522.78167725]
[323.85736084 523.29754639]
[338.59359741 526.27972412]
[352.63793945 531.64691162]
[365.60723877 539.25262451]
[377.14770508 548.88940430]
[386.94448853 560.29437256]
[394.73034668 573.15631104]
[400.29284668 587.12445068]
[403.48028564 601.81762695]
[404.20565796 616.83508301]
[402.44918823 631.76708984]
[398.25881958 646.20629883]
[391.74884033 659.75878906]
[383.09683228 672.05487061]
[372.53887939 682.75903320]
[360.36300659 691.57928467]
[346.90130615 698.27508545]
[332.52111816 702.66363525]
[317.61468506 704.62530518]
[302.58868408 704.10656738]
[287.85302734 701.12152100]
[273.80972290 695.75164795]
[260.84188843 688.14343262]
[249.30326843 678.50439453]
[239.50868225 667.09759521]
[231.72531128 654.23413086]
[226.16548157 640.26495361]
[222.98089600 625.57110596]
[222.25842285 610.55352783]
[224.01776123 595.62188721]
[228.21092224 581.18347168]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 177]
[4 176]
[5 175]
[8 171]
[9 170]
[10 169]
[11 168]
[12 167]
[13 166]
[14 165]
[15 164]
[16 163]
[17 160]
[18 159]
[30 158]
[31 157]
[32 156]
[33 155]
[34 154]
[35 153]
[42 152]
[43 151]
[44 150]
[45 149]
[47 147]
[48 146]
[49 145]
[50 144]
[51 143]
[60 142]
[61 141]
[62 140]
[63 138]
[64 137]
[65 136]
[66 135]
[67 134]
[68 133]
[69 131]
[70 130]
[71 129]
[72 127]
[73 126]
[74 125]
[77 123]
[78 122]
[79 121]
[82 119]
[83 118]
[84 117]
[85 116]
[86 115]
[87 114]
[88 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
