%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAACUAACAAUCGCCACACCAGCCCACACAAUAAUAAGACUUAAAACCCCCUCCAAUAUACCCAAAUUAUCAAAAAAAUUAAAUAAAUCCCCCUUACUACxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[98.92985535 394.08850098]
[90.50299072 406.62503052]
[78.88463593 416.27853394]
[65.01664734 422.26651001]
[50.02324295 424.10348511]
[35.11986542 421.64053345]
[21.51466751 415.07736206]
[10.31056118 404.94598389]
[2.41581297 392.06774902]
[-1.52958536 377.48657227]
[-1.20579791 362.38452148]
[3.36092734 347.98583984]
[11.80038643 335.45779419]
[23.42843056 325.81594849]
[37.30242538 319.84191895]
[52.29766846 318.02001953]
[54.74339676 303.22073364]
[57.18912506 288.42147827]
[59.63484955 273.62219238]
[62.08057785 258.82293701]
[64.41606903 244.00585938]
[66.64118195 229.17181396]
[68.86630249 214.33776855]
[71.09141541 199.50372314]
[73.31653595 184.66969299]
[75.54164886 169.83564758]
[62.86669922 177.85720825]
[48.20241928 174.70144653]
[39.94917297 162.17611694]
[42.83479691 147.45629883]
[55.20627594 138.97416687]
[69.97666168 141.58868408]
[78.68459320 153.80119324]
[82.22426605 139.22482300]
[80.74795532 131.98310852]
[85.92666626 124.45857239]
[89.68296814 109.93651581]
[86.13245392 96.41299438]
[95.79496765 86.30718994]
[99.55126953 71.78512573]
[87.99311829 64.58075714]
[78.94301605 54.42537308]
[73.12654877 42.14742661]
[71.00605774 28.74495697]
[72.74385071 15.30446434]
[78.18984985 2.91283607]
[86.89450836 -7.43054962]
[98.14585876 -14.89442158]
[111.02780914 -18.88241768]
[124.49466705 -19.08072662]
[128.68167114 -33.48450851]
[125.10401154 -48.89589691]
[136.08639526 -58.95754242]
[140.27340698 -73.36132812]
[144.46041870 -87.76510620]
[148.21670532 -102.28717041]
[151.53897095 -116.91462708]
[154.64308167 -131.58993530]
[157.52835083 -146.30981445]
[160.41362000 -161.02970886]
[163.29890442 -175.74960327]
[166.18417358 -190.46949768]
[151.66737366 -194.26541138]
[137.41464233 -198.95648193]
[123.48112488 -204.52458191]
[109.92073059 -210.94815063]
[96.78591919 -218.20233154]
[84.12750244 -226.25907898]
[71.99446869 -235.08720398]
[60.43374252 -244.65257263]
[49.49005890 -254.91815186]
[39.20575333 -265.84426880]
[29.62061501 -277.38858032]
[20.77172852 -289.50650024]
[12.69332886 -302.15109253]
[5.41666842 -315.27346802]
[-1.03009999 -328.82284546]
[-6.62203503 -342.74682617]
[-11.33750248 -356.99148560]
[-15.15825844 -371.50177002]
[-18.06952095 -386.22152710]
[-20.06002808 -401.09381104]
[-21.12207985 -416.06106567]
[-21.25156403 -431.06536865]
[-20.44798088 -446.04873657]
[-18.71443939 -460.95312500]
[-16.05764771 -475.72094727]
[-12.48788357 -490.29501343]
[-8.01895809 -504.61892700]
[-2.66815972 -518.63732910]
[3.54380941 -532.29595947]
[10.59291649 -545.54193115]
[18.45188904 -558.32409668]
[27.09032249 -570.59289551]
[36.47479630 -582.30096436]
[46.56900406 -593.40289307]
[57.33389282 -603.85583496]
[68.72781372 -613.61932373]
[80.70668793 -622.65551758]
[93.22416687 -630.92950439]
[106.23182678 -638.40930176]
[119.67934418 -645.06597900]
[133.51469421 -650.87365723]
[147.68434143 -655.81005859]
[162.13346863 -659.85589600]
[176.80618286 -662.99566650]
[191.64570618 -665.21716309]
[206.59463501 -666.51177979]
[221.59512329 -666.87451172]
[236.58915710 -666.30395508]
[251.51872253 -664.80236816]
[266.32604980 -662.37548828]
[280.95382690 -659.03271484]
[295.34552002 -654.78704834]
[309.44540405 -649.65484619]
[323.19897461 -643.65594482]
[336.55294800 -636.81359863]
[349.45571899 -629.15429688]
[361.85736084 -620.70770264]
[373.70989990 -611.50634766]
[384.96743774 -601.58599854]
[395.58645630 -590.98492432]
[405.52587891 -579.74414062]
[414.74722290 -567.90722656]
[423.21484375 -555.51989746]
[430.89596558 -542.63006592]
[437.76086426 -529.28765869]
[443.78298950 -515.54431152]
[448.93905640 -501.45309448]
[453.20907593 -487.06860352]
[456.57656860 -472.44647217]
[459.02847290 -457.64328003]
[460.55535889 -442.71630859]
[461.15124512 -427.72323608]
[460.81390381 -412.72216797]
[459.54455566 -397.77105713]
[457.34817505 -382.92779541]
[454.23324585 -368.24978638]
[450.21182251 -353.79385376]
[445.29943848 -339.61587524]
[439.51510620 -325.77072144]
[432.88122559 -312.31195068]
[425.42346191 -299.29165649]
[417.17062378 -286.76022339]
[408.15469360 -274.76608276]
[398.41052246 -263.35565186]
[387.97583008 -252.57310486]
[376.89096069 -242.46012878]
[365.19879150 -233.05586243]
[352.94461060 -224.39668274]
[340.17578125 -216.51611328]
[326.94171143 -209.44461060]
[313.29364014 -203.20954895]
[299.28430176 -197.83503723]
[284.96792603 -193.34188843]
[270.39993286 -189.74748230]
[255.63664246 -187.06571960]
[240.73519897 -185.30696106]
[225.75321960 -184.47804260]
[210.74870300 -184.58213806]
[195.77967834 -185.61888123]
[180.90406799 -187.58422852]
[178.01879883 -172.86433411]
[175.13351440 -158.14443970]
[172.24824524 -143.42454529]
[169.36297607 -128.70465088]
[171.23664856 -124.31166077]
[170.37055969 -118.69499969]
[166.16642761 -113.59236908]
[162.84417725 -98.96490479]
[164.22225952 -96.52379608]
[164.71643066 -93.38972473]
[164.05789185 -89.89662933]
[162.10360718 -86.46949005]
[158.86419678 -83.57809448]
[154.67718506 -69.17431641]
[150.49017334 -54.77053452]
[154.36730957 -40.38940048]
[143.08546448 -29.29749870]
[138.89845276 -14.89371586]
[152.36628723 -5.43266010]
[161.79583740 8.08856773]
[166.03302002 24.04581070]
[164.54869080 40.51494980]
[157.50477600 55.50390244]
[145.73669434 67.19358826]
[130.65437317 74.15869141]
[114.07333374 75.54142761]
[110.31703186 90.06348419]
[113.86754608 103.58700562]
[104.20503235 113.69281006]
[100.44873047 128.21487427]
[96.80064392 142.76449585]
[93.26097107 157.34086609]
[90.37569427 172.06076050]
[88.15058136 186.89480591]
[85.92546082 201.72885132]
[83.70034027 216.56289673]
[81.47522736 231.39694214]
[79.25010681 246.23097229]
[81.07188416 255.18190002]
[76.87985229 261.26864624]
[74.43412018 276.06793213]
[71.98839569 290.86718750]
[69.54267120 305.66647339]
[67.09693909 320.46572876]
[80.70872498 327.01525879]
[91.92300415 337.13534546]
[99.83068848 350.00567627]
[103.79073334 364.58288574]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 206]
[17 205]
[18 204]
[19 203]
[20 202]
[21 200]
[22 199]
[23 198]
[24 197]
[25 196]
[26 195]
[33 194]
[34 193]
[36 192]
[37 191]
[39 189]
[40 188]
[50 180]
[51 179]
[53 177]
[54 176]
[55 175]
[56 170]
[57 169]
[58 166]
[59 165]
[60 164]
[61 163]
[62 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
