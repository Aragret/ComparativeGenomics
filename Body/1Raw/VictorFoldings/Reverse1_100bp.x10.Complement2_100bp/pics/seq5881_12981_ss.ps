%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[84.97514343 596.49176025]
[74.39709473 585.65740967]
[67.91236877 571.97430420]
[66.22437286 556.92675781]
[69.51620483 542.14697266]
[77.43080139 529.23809814]
[89.10964203 519.60052490]
[103.28589630 514.27954102]
[95.17308807 501.78829956]
[102.49607086 487.76385498]
[102.04946899 472.77050781]
[101.60285950 457.77716064]
[101.15625763 442.78381348]
[100.70964813 427.79046631]
[86.72255707 422.56643677]
[75.77146912 412.35766602]
[69.54640961 398.69702148]
[69.02430725 383.65322876]
[74.31584930 369.51770020]
[84.64384460 358.45535278]
[98.45724487 352.17318726]
[98.01063538 337.17984009]
[97.56403351 322.18649292]
[97.11742401 307.19314575]
[83.45045471 301.21990967]
[73.69212341 289.85836792]
[69.81856537 275.32714844]
[72.64984131 260.49459839]
[81.67699432 248.31275940]
[95.15257263 241.22967529]
[94.70597076 226.23632812]
[94.25936127 211.24298096]
[85.67291260 202.72244263]
[85.17813110 190.23489380]
[93.58525085 180.45312500]
[93.36192322 165.45478821]
[93.13859558 150.45645142]
[85.21266174 137.84577942]
[92.74364471 123.93194580]
[92.52031708 108.93360138]
[84.57983398 121.65951538]
[71.95064545 129.75294495]
[57.07123566 131.65116882]
[42.81459427 126.98767090]
[31.93345261 116.66290283]
[26.52878952 102.67042542]
[27.64415741 87.71194458]
[35.06420135 74.67572784]
[47.35622406 66.07885742]
[62.14682770 63.58125305]
[76.58017731 67.66516113]
[87.86942291 77.54205322]
[93.83502960 91.30609894]
[96.28075409 76.50682831]
[98.72648621 61.70755386]
[101.17221069 46.90828323]
[103.61793518 32.10901260]
[98.23427582 17.23195839]
[107.94319916 5.93655777]
[110.38892365 -8.86271286]
[112.83465576 -23.66198349]
[115.28038025 -38.46125412]
[117.72610474 -53.26052475]
[120.17183685 -68.05979919]
[114.78816986 -82.93685150]
[124.49709320 -94.23225403]
[126.94282532 -109.03152466]
[129.38854980 -123.83079529]
[127.70024109 -132.80784607]
[131.98243713 -138.83151245]
[134.64822388 -153.59272766]
[129.48666382 -168.54829407]
[139.36268616 -179.69789124]
[142.02847290 -194.45910645]
[129.82812500 -201.80775452]
[120.88772583 -212.85630798]
[116.26534271 -226.26475525]
[116.49694061 -240.41584778]
[121.53431702 -253.61004639]
[130.75332642 -264.26974487]
[143.03115845 -271.12783813]
[156.88304138 -273.37829590]
[159.76832581 -288.09820557]
[162.65359497 -302.81808472]
[165.53886414 -317.53799438]
[159.00399780 -328.65814209]
[161.71017456 -340.85897827]
[171.67420959 -347.71789551]
[174.77832031 -362.39318848]
[177.88243103 -377.06851196]
[163.74359131 -382.14855957]
[150.42820740 -389.10659790]
[138.18434143 -397.81301880]
[127.24009705 -408.10559082]
[117.79933929 -419.79257202]
[110.03794861 -432.65628052]
[104.10052490 -446.45703125]
[100.09766388 -460.93774414]
[98.10395813 -475.82864380]
[98.15652466 -490.85232544]
[100.25440216 -505.72891235]
[104.35850525 -520.18121338]
[110.39236450 -533.94012451]
[118.24359131 -546.74914551]
[127.76590729 -558.36981201]
[138.78192139 -568.58551025]
[151.08642578 -577.20605469]
[164.45016479 -584.07073975]
[178.62422180 -589.05169678]
[193.34449768 -592.05621338]
[208.33679199 -593.02819824]
[223.32180786 -591.94970703]
[238.02037048 -588.84063721]
[252.15864563 -583.75903320]
[265.47326660 -576.79956055]
[277.71621704 -568.09185791]
[288.65933228 -557.79809570]
[298.09884644 -546.11004639]
[305.85882568 -533.24554443]
[311.79476929 -519.44415283]
[315.79605103 -504.96298218]
[317.78814697 -490.07186890]
[317.73394775 -475.04821777]
[315.63446045 -460.17184448]
[311.52880859 -445.71997070]
[305.49343872 -431.96176147]
[297.64083862 -419.15353394]
[288.11724854 -407.53393555]
[277.10012817 -397.31939697]
[264.79470825 -388.70022583]
[251.43022156 -381.83697510]
[237.25563049 -376.85751343]
[222.53501892 -373.85461426]
[207.54261780 -372.88421631]
[192.55773926 -373.96438599]
[189.45362854 -359.28909302]
[186.34951782 -344.61376953]
[192.68017578 -328.24645996]
[180.25875854 -314.65270996]
[177.37348938 -299.93283081]
[174.48820496 -285.21292114]
[171.60293579 -270.49304199]
[184.93696594 -261.92974854]
[193.98590088 -248.87348938]
[197.33982849 -233.30667114]
[194.45625305 -217.60670471]
[185.74763489 -204.18299866]
[172.52267456 -195.10716248]
[156.78968811 -191.79330444]
[154.12390137 -177.03208923]
[159.47613525 -163.13235474]
[149.40945435 -150.92694092]
[146.74365234 -136.16572571]
[144.18782043 -121.38506317]
[141.74209595 -106.58579254]
[139.29637146 -91.78652191]
[144.85496521 -77.96800995]
[134.97109985 -65.61406708]
[132.52537537 -50.81479645]
[130.07965088 -36.01552582]
[127.63392639 -21.21625710]
[125.18819427 -6.41698551]
[122.74246979 8.38228512]
[128.30107117 22.20079613]
[118.41720581 34.55474091]
[115.97148132 49.35401154]
[113.52575684 64.15328217]
[111.08002472 78.95255280]
[108.63430023 93.75182343]
[107.51865387 108.71027374]
[107.74198151 123.70861816]
[115.68388367 137.39205933]
[108.13693237 150.23312378]
[108.36026001 165.23146057]
[108.58358765 180.22979736]
[118.39139557 195.81466675]
[109.25271606 210.79637146]
[109.69931793 225.78971863]
[110.14592743 240.78306580]
[124.01921082 247.05151367]
[133.75543213 258.67446899]
[137.46453857 273.31216431]
[134.46276855 288.04818726]
[125.39797974 299.97042847]
[112.11077118 306.74652100]
[112.55738068 321.73986816]
[113.00399017 336.73321533]
[113.45059204 351.72656250]
[127.61341858 357.17541504]
[138.58154297 367.60342407]
[144.70506287 381.39892578]
[145.07931519 396.44711304]
[139.67839050 410.45407104]
[129.35435486 421.29656982]
[115.70300293 427.34387207]
[116.14960480 442.33721924]
[116.59621429 457.33056641]
[117.04281616 472.32391357]
[117.48942566 487.31726074]
[125.63417816 500.88095093]
[118.27924347 513.83294678]
[132.74707031 518.30065918]
[144.97885132 527.22607422]
[153.64775085 539.64093018]
[157.81346130 554.19860840]
[157.02410889 569.31994629]
[151.36531067 583.36474609]
[141.45089722 594.80957031]
[128.35629272 602.41284180]
[113.50193024 605.34991455]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 201]
[10 199]
[11 198]
[12 197]
[13 196]
[14 195]
[21 188]
[22 187]
[23 186]
[24 185]
[30 179]
[31 178]
[32 177]
[35 175]
[36 174]
[37 173]
[39 171]
[40 170]
[53 169]
[54 168]
[55 167]
[56 166]
[57 165]
[59 163]
[60 162]
[61 161]
[62 160]
[63 159]
[64 158]
[66 156]
[67 155]
[68 154]
[70 153]
[71 152]
[73 150]
[74 149]
[82 142]
[83 141]
[84 140]
[85 139]
[88 137]
[89 136]
[90 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
