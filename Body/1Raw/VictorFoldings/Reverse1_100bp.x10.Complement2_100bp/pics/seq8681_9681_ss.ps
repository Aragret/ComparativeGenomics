%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxAUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUA\
) } def
/len { sequence length } bind def

/coor [
[76.34284210 576.95935059]
[64.64109039 586.40606689]
[51.47661591 593.67706299]
[37.24948120 598.55145264]
[22.39203072 600.88110352]
[7.35576153 600.59521484]
[-7.40238857 597.70245361]
[-21.43393707 592.29071045]
[-34.31247711 584.52447510]
[-45.64665222 574.63977051]
[-55.09202194 562.93695068]
[-62.36155701 549.77166748]
[-67.23434448 535.54394531]
[-69.56230164 520.68621826]
[-69.27468872 505.64999390]
[-66.38024139 490.89218140]
[-60.96692276 476.86126709]
[-53.19923782 463.98358154]
[-43.31323624 452.65054321]
[-31.60934067 443.20648193]
[-18.44322205 435.93844604]
[-4.21498156 431.06729126]
[10.64299870 428.74099731]
[25.67920113 429.03033447]
[28.56447411 414.31042480]
[31.44974709 399.59054565]
[34.33501816 384.87066650]
[37.22029114 370.15075684]
[40.10556412 355.43087769]
[42.99083710 340.71096802]
[37.84613419 326.73309326]
[48.09343338 314.67889404]
[50.97870255 299.95901489]
[53.86397552 285.23913574]
[56.74924850 270.51922607]
[59.63452148 255.79934692]
[53.06087494 239.52807617]
[65.27852631 225.75090027]
[67.94432068 210.98968506]
[70.61012268 196.22846985]
[72.94560242 181.41140747]
[74.94962311 166.54586792]
[76.95363617 151.68034363]
[78.95764923 136.81481934]
[70.24373627 149.02413940]
[58.22090149 157.99362183]
[44.03509140 162.86833191]
[29.03840828 163.18365479]
[14.66023445 158.90953064]
[2.27100849 150.45335388]
[-6.94840765 138.62109375]
[-12.11927795 124.54052734]
[-12.74874783 109.55374146]
[-8.77682018 95.08917236]
[-0.58207476 82.52548981]
[11.05441856 73.06018066]
[25.02354240 67.59542847]
[39.99385071 66.65208435]
[54.53846741 70.32007599]
[67.27109528 78.24977875]
[76.97813416 89.68540192]
[82.73437500 103.53695679]
[83.99109650 118.48534393]
[89.86005402 104.68116760]
[95.62609100 90.83367920]
[93.67116547 75.13372040]
[105.64070892 66.26921844]
[111.30348969 52.37919235]
[105.41808319 37.95699692]
[111.35882568 23.95120430]
[125.14445496 18.42924690]
[130.80723572 4.53921890]
[136.47003174 -9.35080814]
[142.13281250 -23.24083519]
[147.69203186 -37.17263412]
[145.50358582 -52.84175110]
[157.33981323 -61.88347244]
[155.15135193 -77.55258942]
[166.98759460 -86.59431458]
[172.44294739 -100.56711578]
[177.89831543 -114.53990936]
[164.42288208 -121.14893341]
[151.54772949 -128.86238098]
[139.36320496 -137.62615967]
[127.95473480 -147.37876892]
[117.40236664 -158.05181885]
[107.78012085 -169.57044983]
[99.15547180 -181.85386658]
[91.58893585 -194.81588745]
[85.13357544 -208.36560059]
[79.83467865 -222.40797424]
[75.72941589 -236.84449768]
[72.84657288 -251.57391357]
[71.20637512 -266.49291992]
[70.82032776 -281.49682617]
[71.69113922 -296.48043823]
[73.81270599 -311.33859253]
[77.17013550 -325.96713257]
[81.73989105 -340.26342773]
[87.48990631 -354.12719727]
[94.37985992 -367.46118164]
[102.36141205 -380.17184448]
[111.37858582 -392.17007446]
[121.36812592 -403.37167358]
[132.25996399 -413.69805908]
[143.97769165 -423.07681274]
[156.43913269 -431.44216919]
[169.55686951 -438.73544312]
[183.23887634 -444.90545654]
[197.38920593 -449.90890503]
[211.90859985 -453.71075439]
[226.69519043 -456.28433228]
[241.64527893 -457.61154175]
[256.65399170 -457.68307495]
[271.61605835 -456.49847412]
[286.42651367 -454.06604004]
[300.98147583 -450.40280151]
[315.17886353 -445.53445435]
[328.91909790 -439.49520874]
[342.10577393 -432.32733154]
[354.64639282 -424.08120728]
[366.45303345 -414.81457520]
[377.44284058 -404.59249878]
[387.53872681 -393.48666382]
[396.66989136 -381.57498169]
[404.77227783 -368.94097900]
[411.78903198 -355.67330933]
[417.67098999 -341.86499023]
[422.37683105 -327.61291504]
[425.87359619 -313.01705933]
[428.13674927 -298.17977905]
[429.15039062 -283.20516968]
[428.90740967 -268.19824219]
[427.40954590 -253.26429749]
[424.66726685 -238.50807190]
[420.69982910 -224.03305054]
[415.53506470 -209.94079590]
[409.20919800 -196.33013916]
[401.76660156 -183.29656982]
[393.25946045 -170.93147278]
[383.74746704 -159.32162476]
[373.29736328 -148.54844666]
[361.98239136 -138.68750000]
[349.88198853 -129.80793762]
[337.08096313 -121.97208405]
[323.66915894 -115.23487854]
[309.74063110 -109.64357758]
[295.39309692 -105.23740387]
[280.72717285 -102.04726410]
[265.84570312 -100.09553528]
[250.85314941 -99.39591217]
[235.85462952 -99.95330048]
[220.95533752 -101.76378632]
[206.25981140 -104.81466675]
[191.87110901 -109.08455658]
[186.41575623 -95.11175537]
[180.96038818 -81.13896179]
[183.53906250 -66.46926880]
[171.31262207 -56.42811584]
[173.89128113 -41.75842667]
[161.66484070 -31.71727562]
[162.16041565 -24.34325409]
[156.02284241 -17.57804871]
[150.36004639 -3.68802118]
[144.69726562 10.20200539]
[139.03448486 24.09203339]
[145.02986145 37.67845917]
[139.48486328 51.84558868]
[125.19351959 58.04198074]
[119.53073120 71.93200684]
[121.89070129 86.63846588]
[109.51611328 96.49646759]
[109.63111877 104.55620575]
[103.66423035 110.55012512]
[97.79527283 124.35430145]
[93.82317352 138.81883240]
[91.81916046 153.68435669]
[89.81514740 168.54988098]
[87.81113434 183.41542053]
[89.79535675 188.24345398]
[89.73522949 192.88562012]
[88.04389191 196.59431458]
[85.37133789 198.89425659]
[82.70554352 213.65548706]
[80.03974915 228.41670227]
[86.73945618 239.43833923]
[84.21521759 251.67811584]
[74.35441589 258.68460083]
[71.46913910 273.40451050]
[68.58386993 288.12438965]
[65.69859314 302.84429932]
[62.81332397 317.56417847]
[67.75165558 332.59494019]
[57.71072769 343.59625244]
[54.82545471 358.31613159]
[51.94018555 373.03604126]
[49.05491257 387.75592041]
[46.16963959 402.47583008]
[43.28436661 417.19570923]
[40.39909363 431.91558838]
[54.43186951 437.32415771]
[67.31217194 445.08746338]
[78.64859009 454.96960449]
[88.09661102 466.67028809]
[95.36913300 479.83392334]
[100.24514771 494.06051636]
[102.57647705 508.91769409]
[102.29226685 523.95397949]
[99.40116882 538.71246338]
[93.99103546 552.74462891]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 200]
[25 199]
[26 198]
[27 197]
[28 196]
[29 195]
[30 194]
[32 192]
[33 191]
[34 190]
[35 189]
[36 188]
[38 185]
[39 184]
[40 183]
[41 179]
[42 178]
[43 177]
[44 176]
[63 175]
[64 174]
[65 172]
[67 170]
[68 169]
[71 166]
[72 165]
[73 164]
[74 163]
[75 161]
[77 159]
[79 157]
[80 156]
[81 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
