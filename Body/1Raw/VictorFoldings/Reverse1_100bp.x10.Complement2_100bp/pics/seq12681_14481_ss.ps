%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGAUGCGGGAGAGUCGGCUACUUGUCAACCUUAUCCAACAAUCGCCAUUGAUUCUAAUCAUACCAUUAAUCCUUCUACUCAUCUAUAAACUUCUUGACxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[37.80933380 390.71170044]
[37.61102295 405.73416138]
[35.36893082 420.58969116]
[31.12482834 435.00152588]
[24.95777702 448.70120239]
[16.98266602 461.43350220]
[7.34806824 472.96121216]
[-3.76653075 483.06961060]
[-16.15407372 491.57034302]
[-29.58378601 498.30508423]
[-43.80548096 503.14834595]
[-58.55421829 506.00988770]
[-73.55523682 506.83642578]
[-88.52908325 505.61257935]
[-103.19679260 502.36111450]
[-117.28511810 497.14260864]
[-130.53160095 490.05429077]
[-142.68948364 481.22817993]
[-153.53224182 470.82876587]
[-162.85791016 459.04971313]
[-170.49275208 446.11050415]
[-176.29452515 432.25219727]
[-180.15513611 417.73291016]
[-182.00270081 402.82318115]
[-181.80276489 387.80072021]
[-179.55906677 372.94543457]
[-175.31340027 358.53405762]
[-169.14486694 344.83505249]
[-161.16838074 332.10360718]
[-151.53253174 320.57693481]
[-140.41683960 310.46975708]
[-128.02836609 301.97036743]
[-114.59793091 295.23709106]
[-100.37570953 290.39535522]
[-85.62666321 287.53540039]
[-70.62555695 286.71047974]
[-55.65184784 287.93597412]
[-40.98448944 291.18902588]
[-26.89672661 296.40905762]
[-19.81962204 283.18353271]
[-12.74251556 269.95800781]
[-5.66541052 256.73248291]
[1.41169488 243.50694275]
[8.48880005 230.28141785]
[15.56590557 217.05589294]
[22.64301109 203.83036804]
[29.72011757 190.60484314]
[36.79722214 177.37930298]
[43.87432861 164.15377808]
[50.95143127 150.92825317]
[37.99808884 158.49205017]
[23.09728622 160.21426392]
[8.76007080 155.80470276]
[-2.59748626 146.00645447]
[-9.06143570 132.47067261]
[-9.54248905 117.47838593]
[-3.95957971 103.55606079]
[6.74647379 93.04985046]
[20.77151299 87.73023987]
[35.75207138 88.49367523]
[49.16366577 95.21149445]
[58.74620056 106.75164032]
[62.88485718 121.16939545]
[60.88164139 136.03666687]
[70.37053680 124.41940308]
[79.85943604 112.80213928]
[89.34833527 101.18487549]
[97.10472870 88.34593964]
[102.97368622 74.54176331]
[108.84265137 60.73758316]
[114.71160889 46.93340683]
[112.05448914 28.71195602]
[126.47688293 18.71387672]
[132.13966370 4.82385015]
[137.80245972 -9.06617641]
[143.46524048 -22.95620346]
[149.12802124 -36.84622955]
[154.79081726 -50.73625565]
[152.83589172 -66.43621826]
[164.80543518 -75.30072021]
[151.40864563 -82.06623840]
[138.59968567 -89.88781738]
[126.46165466 -98.71473694]
[115.07326508 -108.48974609]
[104.50836182 -119.14944458]
[94.83547974 -130.62471008]
[86.11734009 -142.84111023]
[78.41049957 -155.71942139]
[71.76492310 -169.17611694]
[66.22371674 -183.12391663]
[61.82282257 -197.47238159]
[58.59077835 -212.12844849]
[56.54854584 -226.99705505]
[55.70937347 -241.98179626]
[56.07869720 -256.98544312]
[57.65412521 -271.91073608]
[60.42544174 -286.66085815]
[64.37467194 -301.14016724]
[69.47620392 -315.25473022]
[75.69694519 -328.91299438]
[82.99655914 -342.02642822]
[91.32770538 -354.50994873]
[100.63634491 -366.28262329]
[110.86211395 -377.26806641]
[121.93869019 -387.39505005]
[133.79423523 -396.59786987]
[146.35186768 -404.81689453]
[159.53013611 -411.99877930]
[173.24357605 -418.09698486]
[187.40325928 -423.07189941]
[201.91732788 -426.89129639]
[216.69168091 -429.53042603]
[231.63047791 -430.97213745]
[246.63685608 -431.20709229]
[261.61346436 -430.23376465]
[276.46319580 -428.05844116]
[291.08972168 -424.69528198]
[305.39819336 -420.16607666]
[319.29583740 -414.50018311]
[332.69247437 -407.73437500]
[345.50125122 -399.91250610]
[357.63909912 -391.08532715]
[369.02728271 -381.31005859]
[379.59194946 -370.65014648]
[389.26455688 -359.17465210]
[397.98242188 -346.95806885]
[405.68899536 -334.07958984]
[412.33425903 -320.62274170]
[417.87518311 -306.67480469]
[422.27575684 -292.32626343]
[425.50747681 -277.67013550]
[427.54937744 -262.80145264]
[428.38821411 -247.81671143]
[428.01855469 -232.81306458]
[426.44281006 -217.88780212]
[423.67117310 -203.13774109]
[419.72161865 -188.65853882]
[414.61978149 -174.54409790]
[408.39874268 -160.88594055]
[401.09881592 -147.77268982]
[392.76739502 -135.28933716]
[383.45849609 -123.51689148]
[373.23248291 -112.53166962]
[362.15570068 -102.40493011]
[350.29995728 -93.20234680]
[337.74212646 -84.98360443]
[324.56372070 -77.80200958]
[310.85012817 -71.70412445]
[296.69033813 -66.72950745]
[282.17617798 -62.91042328]
[267.40176392 -60.27163315]
[252.46293640 -58.83025360]
[237.45657349 -58.59563446]
[222.47998047 -59.56929398]
[207.63029480 -61.74492264]
[193.00384521 -65.10840607]
[178.69546509 -69.63793182]
[181.05541992 -54.93147659]
[168.68084717 -45.07347107]
[163.01805115 -31.18344307]
[157.35527039 -17.29341698]
[151.69248962 -3.40338993]
[146.02969360 10.48663712]
[140.36691284 24.37666321]
[144.76779175 35.64426422]
[140.16371155 47.26261902]
[128.51579285 52.80236816]
[122.64682770 66.60654449]
[116.77786255 80.41072083]
[110.90890503 94.21489716]
[122.47678375 84.66585541]
[136.32237244 78.89527893]
[151.24789429 77.40237427]
[165.96214294 80.31629944]
[179.19218445 87.38496399]
[189.79348755 97.99686432]
[196.84893799 111.23395538]
[199.74816895 125.95110321]
[198.24035645 140.87512207]
[192.45594788 154.71495056]
[182.89537048 166.27328491]
[170.38568115 174.55023193]
[156.00910950 178.82972717]
[141.00936890 178.74157715]
[126.68408203 174.29341125]
[114.27254486 165.87001038]
[104.84846497 154.20010376]
[99.22711945 140.29324341]
[97.89482117 125.35253143]
[100.96559906 110.67377472]
[91.47669983 122.29103851]
[81.98780060 133.90830994]
[72.49890137 145.52557373]
[64.17696381 158.00535583]
[57.09985352 171.23088074]
[50.02275085 184.45642090]
[42.94564438 197.68194580]
[35.86853790 210.90747070]
[28.79143333 224.13299561]
[21.71432877 237.35852051]
[14.63722229 250.58404541]
[7.56011677 263.80957031]
[0.48301154 277.03509521]
[-6.59409380 290.26062012]
[-13.67119884 303.48617554]
[-1.51236880 312.31094360]
[9.33152485 322.70919800]
[18.65846825 334.48721313]
[26.29470253 347.42559814]
[32.09797287 361.28329468]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 205]
[40 204]
[41 203]
[42 202]
[43 201]
[44 200]
[45 199]
[46 198]
[47 197]
[48 196]
[49 195]
[50 194]
[64 193]
[65 192]
[66 191]
[67 190]
[68 170]
[69 169]
[70 168]
[71 167]
[73 164]
[74 163]
[75 162]
[76 161]
[77 160]
[78 159]
[80 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
