%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACGAUUACGAUCCGACGGUUACCACUCCCUCCAACUUCACUCUCCAUACCAAAACUCAUCAGGAGGAUAAAAAGCUUAUAGAACAAGUAACAAUUCCAxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[82.62498474 729.53326416]
[67.61698914 729.88946533]
[52.64634705 728.77288818]
[37.85723877 726.19433594]
[23.39209366 722.17852783]
[9.39022350 716.76428223]
[-4.01352358 710.00360107]
[-16.69005775 701.96173096]
[-28.51729584 692.71600342]
[-39.38132858 682.35552979]
[-49.17753220 670.98004150]
[-57.81155777 658.69915771]
[-65.20025635 645.63110352]
[-71.27246094 631.90173340]
[-75.96969604 617.64331055]
[-79.24672699 602.99316406]
[-81.07199097 588.09228516]
[-81.42790985 573.08428955]
[-80.31105042 558.11370850]
[-77.73217773 543.32464600]
[-73.71611786 528.85955811]
[-68.30155945 514.85778809]
[-61.54064560 501.45419312]
[-53.49848557 488.77780151]
[-44.25253296 476.95077515]
[-33.89183807 466.08694458]
[-22.51617622 456.29095459]
[-10.23510742 447.65716553]
[2.83309221 440.26873779]
[16.56256485 434.19680786]
[30.82108688 429.49984741]
[45.47133636 426.22311401]
[60.37221909 424.39816284]
[75.38022614 424.04254150]
[76.49587250 409.08407593]
[77.61152649 394.12564087]
[78.72717285 379.16717529]
[79.84281921 364.20874023]
[77.20552063 357.30462646]
[81.08806610 349.03640747]
[82.42630005 334.09622192]
[83.76453400 319.15603638]
[77.19355774 305.78924561]
[86.13119507 292.73437500]
[83.59697723 285.79177856]
[87.60219574 277.58227539]
[89.16271973 262.66366577]
[90.72324371 247.74507141]
[91.61605835 232.77166748]
[91.83938599 217.77333069]
[92.06271362 202.77499390]
[92.28604126 187.77665710]
[82.92531586 172.93267822]
[92.50000000 157.20350647]
[92.50000000 142.20350647]
[92.50000000 127.20349884]
[92.50000000 112.20349884]
[85.67605591 100.00000000]
[92.50000000 87.79650116]
[84.76270294 73.99633026]
[92.50000000 61.26905823]
[92.50000000 46.26905823]
[92.50000000 31.26905632]
[90.93947601 16.35045242]
[87.83536530 1.67514920]
[84.73125458 -13.00015354]
[81.62714386 -27.67545509]
[78.52303314 -42.35075760]
[75.41893005 -57.02606201]
[72.31481934 -71.70136261]
[69.21070862 -86.37666321]
[66.10659790 -101.05196381]
[63.00248718 -115.72727203]
[52.57685471 -127.62755585]
[57.51287842 -141.68048096]
[47.08724594 -153.58076477]
[52.02326965 -167.63371277]
[48.91916275 -182.30900574]
[44.91443634 -167.85348511]
[36.87741852 -155.18832397]
[25.50339317 -145.40917969]
[11.77632904 -139.36206055]
[-3.11624765 -137.57008362]
[-17.88598061 -140.18829346]
[-31.25513840 -146.99017334]
[-42.06715393 -157.38731384]
[-49.38668442 -170.48022461]
[-52.58051682 -185.13626099]
[-51.37234497 -200.08752441]
[-45.86669922 -214.04058838]
[-36.53986359 -225.78836060]
[-24.19870567 -234.31454468]
[-9.91086102 -238.88154602]
[5.08763027 -239.09426880]
[19.49924850 -234.93431091]
[32.07724380 -226.76155090]
[41.73349762 -215.28302002]
[47.63175201 -201.49511719]
[48.74739838 -216.45356750]
[49.86304855 -231.41201782]
[36.14462662 -237.90580750]
[25.70124245 -248.91944885]
[19.94528389 -262.96343994]
[19.65519142 -278.13842773]
[24.87020111 -292.39212036]
[34.88502121 -303.79684448]
[48.34523773 -310.81018066]
[63.43045807 -312.48367310]
[78.10053253 -308.59094238]
[90.37145996 -299.65847778]
[98.58369446 -286.89434814]
[101.62659454 -272.02471924]
[99.08863831 -257.06066895]
[91.31305695 -244.02590942]
[79.35144043 -234.68330383]
[64.82150269 -230.29637146]
[63.70585251 -215.33792114]
[62.59020233 -200.37945557]
[63.59446335 -185.41311646]
[66.69857025 -170.73780823]
[76.90217590 -159.88720703]
[72.18817902 -144.78459167]
[82.39178467 -133.93399048]
[77.67778778 -118.83138275]
[80.78189850 -104.15607452]
[83.88600922 -89.48077393]
[86.99011993 -74.80547333]
[90.09423065 -60.13016891]
[93.19834137 -45.45486832]
[96.30245209 -30.77956581]
[99.40656281 -16.10426331]
[102.51066589 -1.42896092]
[105.61477661 13.24634171]
[110.39535522 -0.97146869]
[120.19489288 -12.32792091]
[133.55969238 -19.13835335]
[148.50717163 -20.39247704]
[162.81996155 -15.90425205]
[174.37483215 -6.33947945]
[181.45770264 6.88296366]
[183.01786804 21.80160713]
[178.82386780 36.20335770]
[169.49787903 47.95180130]
[156.42335510 55.30412674]
[141.53981018 57.16966248]
[127.05514526 53.27166367]
[115.11806488 44.18837738]
[107.50000000 31.26905632]
[107.50000000 46.26905823]
[107.50000000 61.26905823]
[115.23729706 73.99633026]
[107.50000000 87.79650116]
[114.32394409 100.00000000]
[107.50000000 112.20349884]
[107.50000000 127.20349884]
[107.50000000 142.20350647]
[107.50000000 157.20350647]
[116.05182648 166.85902405]
[115.74301910 179.35255432]
[107.28437805 187.99998474]
[107.06105042 202.99832153]
[106.83772278 217.99665833]
[106.61439514 232.99499512]
[118.10402679 223.35194397]
[133.05845642 224.52026367]
[142.91111755 235.83065796]
[142.01794434 250.80404663]
[130.89059448 260.86297607]
[115.90331268 260.24523926]
[105.64184570 249.30558777]
[104.08132172 264.22421265]
[102.52079773 279.14279175]
[101.07138062 294.07260132]
[107.54663849 308.50805664]
[98.70471954 320.49426270]
[97.36648560 335.43444824]
[96.02825165 350.37463379]
[94.80127716 365.32437134]
[93.68562317 380.28283691]
[92.56997681 395.24127197]
[91.45433044 410.19973755]
[90.33867645 425.15820312]
[105.12789154 427.73617554]
[119.59319305 431.75137329]
[133.59527588 437.16510010]
[146.99929810 443.92520142]
[159.67616272 451.96658325]
[171.50376892 461.21185303]
[182.36820984 471.57189941]
[192.16487122 482.94696045]
[200.79939270 495.22750854]
[208.18859863 508.29525757]
[214.26136780 522.02435303]
[218.95916748 536.28259277]
[222.23678589 550.93267822]
[224.06263733 565.83343506]
[224.41915894 580.84143066]
[223.30290222 595.81207275]
[220.72462463 610.60125732]
[216.70913696 625.06646729]
[211.29513550 639.06848145]
[204.53475952 652.47235107]
[196.49310303 665.14904785]
[187.24763489 676.97644043]
[176.88737488 687.84069824]
[165.51210022 697.63714600]
[153.23136902 706.27142334]
[140.16346741 713.66033936]
[126.43424225 719.73284912]
[112.17591095 724.43035889]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 182]
[35 181]
[36 180]
[37 179]
[38 178]
[40 177]
[41 176]
[42 175]
[44 173]
[46 172]
[47 171]
[48 170]
[49 163]
[50 162]
[51 161]
[52 160]
[54 157]
[55 156]
[56 155]
[57 154]
[59 152]
[61 150]
[62 149]
[63 148]
[64 133]
[65 132]
[66 131]
[67 130]
[68 129]
[69 128]
[70 127]
[71 126]
[72 125]
[73 124]
[75 122]
[77 120]
[78 119]
[98 118]
[99 117]
[100 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
