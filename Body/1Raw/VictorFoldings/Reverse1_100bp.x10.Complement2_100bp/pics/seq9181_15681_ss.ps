%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[107.54614258 624.05102539]
[95.95548248 614.50909424]
[85.38964844 603.84356689]
[75.95706177 592.16375732]
[67.75450897 579.58966064]
[60.86616135 566.25018311]
[55.36271286 552.28222656]
[51.30062866 537.82916260]
[48.72159958 523.03930664]
[47.65208817 508.06445312]
[48.10306931 493.05819702]
[50.06991577 478.17456055]
[53.53244400 463.56628418]
[58.45512009 449.38323975]
[64.78743744 435.77102661]
[72.46440125 422.86926270]
[81.40724945 410.81039429]
[91.52420807 399.71813965]
[102.71145630 389.70632935]
[114.85419464 380.87768555]
[127.82782745 373.32281494]
[141.49922180 367.11926270]
[155.72807312 362.33065796]
[152.40580750 347.70321655]
[149.08355713 333.07574463]
[145.65249634 318.47341919]
[142.11282349 303.89703369]
[138.57315063 289.32067871]
[135.03347778 274.74429321]
[130.40034485 268.98617554]
[131.55133057 259.92456055]
[128.22906494 245.29710388]
[124.79800415 230.69477844]
[121.25833130 216.11839294]
[117.71866608 201.54202271]
[114.17899323 186.96565247]
[110.53089905 172.41603088]
[106.77460480 157.89396667]
[102.91029358 143.40028381]
[98.93820190 128.93574524]
[96.57140350 127.43361664]
[94.65702057 124.90345001]
[93.58958435 121.51287842]
[93.69572449 117.56911469]
[95.18775177 113.49139404]
[85.98612213 102.96421051]
[90.13694763 89.61271667]
[87.03283691 74.93741608]
[83.92872620 60.26211548]
[76.60398865 73.35211945]
[63.03276062 79.74131012]
[48.27677917 77.04668427]
[37.83966064 66.27326202]
[35.61418915 51.43927383]
[42.43041611 38.07742310]
[55.74605179 31.17135048]
[70.59469604 33.29685211]
[81.43872833 43.66219330]
[72.50109100 30.60733986]
[79.07206726 17.24053192]
[77.73383331 2.30034757]
[76.39559937 -12.63983727]
[75.05736542 -27.58002281]
[73.71913147 -42.52020645]
[72.38089752 -57.46039200]
[71.04266357 -72.40058136]
[69.70442963 -87.34075928]
[67.81113434 -102.22079468]
[65.36540985 -117.02006531]
[62.91968155 -131.81933594]
[60.47395325 -146.61860657]
[55.98719788 -154.57516479]
[58.10369110 -161.65629578]
[55.87857437 -176.49032593]
[53.10296631 -191.23129272]
[49.78070450 -205.85874939]
[46.45844650 -220.48622131]
[43.13618469 -235.11367798]
[39.81392670 -249.74113464]
[26.72414207 -258.18478394]
[23.56327248 -273.06643677]
[31.69367218 -285.49349976]
[28.37141418 -300.12097168]
[25.04915428 -314.74844360]
[21.72689438 -329.37588501]
[6.65775919 -329.50961304]
[-7.97420216 -333.11550903]
[-21.37990761 -339.99908447]
[-32.83640289 -349.78915405]
[-41.72585297 -361.95773315]
[-47.56886292 -375.84860229]
[-50.05032349 -390.71261597]
[-49.03641891 -405.74819946]
[-44.58182144 -420.14450073]
[-36.92676544 -433.12512207]
[-26.48407555 -443.99008179]
[-13.81691551 -452.15338135]
[0.39159152 -457.17483521]
[15.37519932 -458.78366089]
[30.32585907 -456.89303589]
[44.43730164 -451.60491943]
[56.94851685 -443.20455933]
[67.18478394 -432.14492798]
[74.59408569 -419.02246094]
[78.77683258 -404.54486084]
[79.50746918 -389.49285889]
[76.74658203 -374.67819214]
[70.64306641 -360.89981079]
[61.52608109 -348.90075684]
[49.88728714 -339.32812500]
[36.35435486 -332.69815063]
[39.67661285 -318.07070923]
[42.99887466 -303.44323730]
[46.32113266 -288.81576538]
[59.02193832 -281.11999512]
[62.59955215 -266.33297729]
[54.44138718 -253.06340027]
[57.76364517 -238.43592834]
[61.08590698 -223.80847168]
[64.40816498 -209.18101501]
[67.73042297 -194.55355835]
[77.81134796 -205.66098022]
[92.78979492 -204.85725403]
[101.62422180 -192.73484802]
[97.80221558 -178.22993469]
[84.14121246 -172.03501892]
[70.71261597 -178.71545410]
[72.93773651 -163.88140869]
[75.27322388 -149.06433105]
[77.71894836 -134.26506042]
[80.16468048 -119.46579742]
[82.61040497 -104.66652679]
[93.33457947 -115.15423584]
[108.23863220 -113.46039581]
[116.33586121 -100.83364105]
[111.65727997 -86.58194733]
[97.65177155 -81.21112823]
[84.64461517 -88.67899323]
[85.98284912 -73.73881531]
[87.32108307 -58.79862595]
[88.65931702 -43.85844040]
[89.99755096 -28.91825676]
[91.33578491 -13.97807121]
[92.67401886 0.96211338]
[94.01225281 15.90229893]
[102.85417175 27.88853073]
[96.37891388 42.32395935]
[98.60402679 57.15800476]
[101.70813751 71.83330536]
[104.81224823 86.50860596]
[114.01387787 97.03578949]
[109.86305237 110.38728333]
[113.40272522 124.96365356]
[117.37481689 139.42817688]
[122.66498566 146.87478638]
[121.29666138 154.13766479]
[125.05296326 168.65972900]
[130.23167419 176.18426514]
[128.75537109 183.42597961]
[132.29504395 198.00234985]
[135.83471680 212.57873535]
[139.37438965 227.15510559]
[144.44049072 234.75592041]
[142.85652161 241.97483826]
[146.17878723 256.60229492]
[149.60984802 271.20462036]
[153.14952087 285.78100586]
[156.68919373 300.35736084]
[160.22886658 314.93374634]
[165.29498291 322.53454590]
[163.71101379 329.75347900]
[167.03327942 344.38095093]
[170.35552979 359.00839233]
[185.25689697 357.18081665]
[200.26672363 356.87014771]
[215.23094177 358.07962036]
[229.99603271 360.79684448]
[244.41046143 364.99386597]
[258.32632446 370.62768555]
[271.60083008 377.64044189]
[284.09771729 385.96020508]
[295.68878174 395.50158691]
[306.25509644 406.16668701]
[315.68820190 417.84603882]
[323.89132690 430.41983032]
[330.78024292 443.75900269]
[336.28430176 457.72668457]
[340.34701538 472.17956543]
[342.92669678 486.96929932]
[343.99688721 501.94415283]
[343.54656982 516.95043945]
[341.58035278 531.83410645]
[338.11846924 546.44256592]
[333.19644165 560.62579346]
[326.86471558 574.23834229]
[319.18832397 587.14038086]
[310.24600220 599.19964600]
[300.12951660 610.29235840]
[288.94271851 620.30468750]
[276.80035400 629.13385010]
[263.82705688 636.68927002]
[250.15596008 642.89343262]
[235.92730713 647.68267822]
[221.28713989 651.00781250]
[206.38569641 652.83477783]
[191.37586975 653.14477539]
[176.41168213 651.93463135]
[161.64671326 649.21679688]
[147.23246765 645.01910400]
[133.31686401 639.38470459]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 173]
[24 172]
[25 171]
[26 169]
[27 168]
[28 167]
[29 166]
[31 165]
[32 164]
[33 162]
[34 161]
[35 160]
[36 159]
[37 157]
[38 156]
[39 154]
[40 153]
[45 152]
[47 150]
[48 149]
[49 148]
[58 147]
[60 145]
[61 144]
[62 143]
[63 142]
[64 141]
[65 140]
[66 139]
[67 138]
[68 132]
[69 131]
[70 130]
[71 129]
[73 128]
[74 127]
[75 121]
[76 120]
[77 119]
[78 118]
[79 117]
[82 114]
[83 113]
[84 112]
[85 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
