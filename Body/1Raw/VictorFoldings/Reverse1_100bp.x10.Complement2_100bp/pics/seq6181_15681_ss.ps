%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[62.25019073 540.20495605]
[54.18543243 553.02050781]
[42.39487839 562.52111816]
[28.15747452 567.67620850]
[13.01759338 567.92663574]
[-1.38250637 563.24517822]
[-13.48081017 554.13970947]
[-21.96498299 541.59790039]
[-25.91472816 526.98016357]
[-24.90160370 511.87213135]
[-19.03550720 497.91262817]
[-8.95274830 486.61587524]
[4.25296974 479.20724487]
[19.14918900 476.49038696]
[21.37430763 461.65634155]
[23.59942436 446.82229614]
[25.60343742 431.95678711]
[27.38590431 417.06304932]
[29.16836929 402.16934204]
[30.95083618 387.27563477]
[32.28907013 372.33544922]
[33.18188477 357.36203003]
[34.07470322 342.38864136]
[34.96751785 327.41522217]
[26.59263611 339.85955811]
[14.13566208 348.21560669]
[-0.55548656 351.24383545]
[-15.30146599 348.49499512]
[-27.91479683 340.37689209]
[-36.52436829 328.09375000]
[-39.85300064 313.46774292]
[-37.40690994 298.66854858]
[-29.54895973 285.89151001]
[-17.44483185 277.03204346]
[-2.89009905 273.40438843]
[11.95612812 275.54672241]
[24.89150238 283.14120483]
[33.99713516 295.06124878]
[37.92212677 309.53668213]
[41.89422226 295.07214355]
[45.86631775 280.60763550]
[40.52108002 263.89251709]
[53.72959137 251.06219482]
[57.48589325 236.54013062]
[61.24219513 222.01808167]
[64.99849701 207.49601746]
[59.13170624 196.91738892]
[62.14229202 184.78808594]
[72.94567108 177.74182129]
[76.91777039 163.27729797]
[80.88986969 148.81277466]
[84.53795624 134.26315308]
[87.86021423 119.63569641]
[91.18247223 105.00823975]
[89.75488281 97.07511139]
[94.66461945 90.18849945]
[98.20429230 75.61212158]
[101.74396515 61.03575134]
[105.28363800 46.45937347]
[108.49691010 31.80758667]
[103.55857849 16.77683640]
[113.59950256 5.77551413]
[116.48477936 -8.94437695]
[119.26039124 -23.68534088]
[121.92618561 -38.44655609]
[124.59197998 -53.20777512]
[127.25777435 -67.96899414]
[129.92356873 -82.73020935]
[132.58937073 -97.49142456]
[135.25515747 -112.25263977]
[137.92095947 -127.01386261]
[140.58674622 -141.77508545]
[142.48004150 -156.65510559]
[143.59568787 -171.61357117]
[144.48851013 -186.58697510]
[145.15829468 -201.57200623]
[145.82807922 -216.55705261]
[146.49786377 -231.54208374]
[147.16764832 -246.52713013]
[147.83743286 -261.51217651]
[138.45610046 -249.80787659]
[124.51566315 -244.27033997]
[109.66011810 -246.34707642]
[97.77267456 -255.49522400]
[91.96067810 -269.32348633]
[93.74337006 -284.21716309]
[102.65475464 -296.28311157]
[116.36542511 -302.36730957]
[131.29144287 -300.87936401]
[143.53118896 -292.20822144]
[149.88505554 -278.62136841]
[152.77032471 -293.34124756]
[155.65559387 -308.06115723]
[158.54086304 -322.78103638]
[161.42613220 -337.50094604]
[164.20175171 -352.24191284]
[166.86753845 -367.00311279]
[169.53334045 -381.76434326]
[172.19914246 -396.52554321]
[158.43267822 -402.66949463]
[146.53700256 -411.92996216]
[137.20373535 -423.76861572]
[130.97549438 -437.49713135]
[128.21437073 -452.31738281]
[129.08088684 -467.36770630]
[133.52468872 -481.77313232]
[141.28741455 -494.69610596]
[151.91772461 -505.38534546]
[164.79762268 -513.21936035]
[179.17825317 -517.74273682]
[194.22357178 -518.69244385]
[209.05885315 -516.01324463]
[222.82159424 -509.86099243]
[234.71163940 -500.59329224]
[244.03771973 -488.74899292]
[250.25764465 -475.01669312]
[253.00978088 -460.19476318]
[252.13414001 -445.14495850]
[247.68159485 -430.74224854]
[239.91105652 -417.82397461]
[229.27424622 -407.14117432]
[216.38961792 -399.31497192]
[202.00624084 -394.80032349]
[186.96035767 -393.85974121]
[184.29455566 -379.09854126]
[181.62876892 -364.33731079]
[178.96296692 -349.57611084]
[180.86769104 -342.43511963]
[176.14602661 -334.61566162]
[173.26075745 -319.89578247]
[170.37548828 -305.17587280]
[167.49021912 -290.45599365]
[164.60493469 -275.73608398]
[162.82247925 -260.84237671]
[162.15269470 -245.85734558]
[161.48291016 -230.87229919]
[160.81312561 -215.88726807]
[160.14332581 -200.90222168]
[159.47354126 -185.91719055]
[161.97814941 -181.85073853]
[161.95483398 -176.16773987]
[158.55415344 -170.49792480]
[157.43849182 -155.53945923]
[168.74713135 -165.39414978]
[183.74163818 -165.79995728]
[195.56674194 -156.57135010]
[198.81614685 -141.92753601]
[192.00428772 -128.56346130]
[178.24543762 -122.58900452]
[163.82997131 -126.73560333]
[155.34797668 -139.10928345]
[152.68217468 -124.34806824]
[150.01637268 -109.58684540]
[147.35058594 -94.82563019]
[144.68478394 -80.06441498]
[142.01899719 -65.30319977]
[139.35319519 -50.54198074]
[136.68740845 -35.78076172]
[134.02160645 -21.01954460]
[135.92633057 -13.87854958]
[131.20466614 -6.05910492]
[128.31939697 8.66078663]
[133.46409607 22.63867188]
[123.21680450 34.69285965]
[124.86987305 37.80729294]
[125.09656525 41.87714005]
[123.46426392 46.22327805]
[119.86001587 49.99904633]
[116.32034302 64.57542419]
[112.78067017 79.15179443]
[109.24099731 93.72817230]
[105.80993652 108.33049774]
[102.48767090 122.95795441]
[99.16541290 137.58541870]
[100.71099091 142.57122803]
[100.23694611 147.18951416]
[98.22148132 150.73252869]
[95.35439301 152.78486633]
[91.38229370 167.24938965]
[87.41020203 181.71392822]
[92.47789764 199.41702271]
[79.52055359 211.25231934]
[75.76425171 225.77438354]
[72.00794983 240.29643250]
[68.25165558 254.81849670]
[74.11305237 266.30792236]
[70.68545532 278.32604980]
[60.33084488 284.57971191]
[56.35874557 299.04425049]
[52.38665009 313.50875854]
[49.94092178 328.30804443]
[49.04810715 343.28143311]
[48.15529251 358.25485229]
[47.26247406 373.22827148]
[49.34288406 377.03955078]
[50.03287888 380.92391968]
[49.48021317 384.43533325]
[47.96233368 387.22149658]
[45.84455109 389.05810547]
[44.06208801 403.95181274]
[42.27962112 418.84552002]
[40.49715424 433.73925781]
[42.74373627 439.95730591]
[41.67348862 445.53866577]
[38.43346786 449.04742432]
[36.20835114 463.88146973]
[33.98323441 478.71551514]
[47.42674255 485.68334961]
[57.87758255 496.64047241]
[64.20213318 510.39834595]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 207]
[15 206]
[16 205]
[17 202]
[18 201]
[19 200]
[20 199]
[21 194]
[22 193]
[23 192]
[24 191]
[39 190]
[40 189]
[41 188]
[43 185]
[44 184]
[45 183]
[46 182]
[49 180]
[50 179]
[51 178]
[52 174]
[53 173]
[54 172]
[56 171]
[57 170]
[58 169]
[59 168]
[60 164]
[62 162]
[63 161]
[64 159]
[65 158]
[66 157]
[67 156]
[68 155]
[69 154]
[70 153]
[71 152]
[72 151]
[73 143]
[74 142]
[75 139]
[76 138]
[77 137]
[78 136]
[79 135]
[80 134]
[91 133]
[92 132]
[93 131]
[94 130]
[95 129]
[96 127]
[97 126]
[98 125]
[99 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
