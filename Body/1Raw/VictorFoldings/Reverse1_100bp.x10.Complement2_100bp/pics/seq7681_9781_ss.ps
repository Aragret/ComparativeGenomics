%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[53.09488678 290.51513672]
[56.03739548 305.24902344]
[56.90062714 320.24905396]
[55.66778183 335.22323608]
[52.36285400 349.88009644]
[47.05017853 363.93435669]
[39.83316422 377.11239624]
[30.85229301 389.15771484]
[20.28238297 399.83587646]
[8.32917786 408.93902588]
[-4.77464771 416.28991699]
[-18.77402496 421.74551392]
[-33.39645004 425.19961548]
[-48.35729980 426.58496094]
[-63.36534882 425.87463379]
[-78.12846375 423.08239746]
[-92.35927582 418.26263428]
[-105.78077698 411.50915527]
[-118.13172150 402.95343018]
[-129.17169189 392.76199341]
[-138.68577576 381.13323975]
[-146.48880005 368.29348755]
[-152.42886353 354.49270630]
[-156.39035034 339.99951172]
[-158.29614258 325.09600830]
[-158.10914612 310.07232666]
[-155.83300781 295.22088623]
[-151.51202393 280.83078003]
[-145.23030090 267.18212891]
[-137.11010742 254.54057312]
[-127.30953217 243.15220642]
[-116.01932526 233.23870850]
[-103.45925903 224.99305725]
[-89.87382507 218.57572937]
[-75.52745819 214.11166382]
[-60.69941711 211.68774414]
[-45.67833710 211.35116577]
[-30.75660706 213.10845947]
[-16.22467995 216.92543030]
[-2.36542821 222.72778320]
[5.29516935 209.83145142]
[12.95576668 196.93511963]
[20.61636353 184.03880310]
[28.27696228 171.14247131]
[35.93755722 158.24613953]
[43.59815598 145.34982300]
[51.25875473 132.45349121]
[38.68741989 140.63648987]
[24.62629700 145.85998535]
[9.76145458 147.86907959]
[-5.18181705 146.56575012]
[-19.47440147 142.01361084]
[-32.41893387 134.43475342]
[-43.38381958 124.19897461]
[-51.83406067 111.80568695]
[-57.35734940 97.85960388]
[-59.68419266 83.04117584]
[-58.70105362 68.07343292]
[-54.45590973 53.68667221]
[-47.15588760 40.58287048]
[-37.15716934 29.40138245]
[-24.94761848 20.68778038]
[-11.12296486 14.86721992]
[3.64225817 12.22369957]
[18.62762070 12.88620186]
[33.10195541 16.82240295]
[46.35902405 23.84024429]
[57.75198746 33.59731293]
[66.72496033 45.61753845]
[72.84012604 59.31442642]
[75.79911041 74.01967621]
[75.45754242 89.01578522]
[71.83209229 103.57106781]
[65.10325623 116.96977234]
[77.06558990 107.91977692]
[89.02792358 98.86977386]
[74.75510406 94.25605011]
[69.32065582 80.27510071]
[76.73065186 67.23317719]
[91.52272797 64.74428558]
[102.79270935 74.64315796]
[102.23355103 89.63123322]
[114.83586121 81.49601746]
[127.43817139 73.36080170]
[140.04048157 65.22558594]
[142.42137146 60.58032990]
[145.98924255 57.60987854]
[149.90737915 56.48591232]
[153.39216614 57.02314758]
[166.34516907 49.45876694]
[179.29815674 41.89439011]
[192.25115967 34.33000946]
[205.20416260 26.76563072]
[218.15715027 19.20125198]
[231.11015320 11.63687325]
[244.06315613 4.07249403]
[257.01614380 -3.49188495]
[269.96914673 -11.05626392]
[263.36727905 -24.53282356]
[257.76675415 -38.45533752]
[253.19743347 -52.74952698]
[249.68373108 -67.33912659]
[247.24438477 -82.14628601]
[245.89239502 -97.09200287]
[245.63499451 -112.09654236]
[246.47354126 -127.07984161]
[248.40356445 -141.96195984]
[251.41477966 -156.66348267]
[255.49110413 -171.10598755]
[260.61077881 -185.21241760]
[266.74652100 -198.90748596]
[273.86557007 -212.11814880]
[281.92996216 -224.77391052]
[290.89663696 -236.80723572]
[300.71780396 -248.15393066]
[311.34100342 -258.75344849]
[322.70959473 -268.54925537]
[334.76287842 -277.48907471]
[347.43661499 -285.52517700]
[360.66311646 -292.61474609]
[374.37185669 -298.71990967]
[388.48968506 -303.80810547]
[402.94122314 -307.85217285]
[417.64944458 -310.83056641]
[432.53582764 -312.72738647]
[447.52096558 -313.53250122]
[462.52490234 -313.24160767]
[477.46755981 -311.85629272]
[492.26925659 -309.38388062]
[506.85095215 -305.83764648]
[521.13488770 -301.23645020]
[535.04492188 -295.60485840]
[548.50671387 -288.97293091]
[561.44848633 -281.37603760]
[573.80120850 -272.85470581]
[585.49890137 -263.45443726]
[596.47924805 -253.22534180]
[606.68365479 -242.22201538]
[616.05761719 -230.50317383]
[624.55114746 -218.13134766]
[632.11895752 -205.17251587]
[638.72058105 -191.69584656]
[644.32086182 -177.77323914]
[648.88995361 -163.47897339]
[652.40344238 -148.88932800]
[654.84252930 -134.08212280]
[656.19427490 -119.13638306]
[656.45141602 -104.13184357]
[655.61260986 -89.14855957]
[653.68237305 -74.26647186]
[650.67089844 -59.56498718]
[646.59436035 -45.12255096]
[641.47442627 -31.01621056]
[635.33843994 -17.32123566]
[628.21917725 -4.11069489]
[620.15460205 8.54492760]
[611.18774414 20.57810783]
[601.36639404 31.92464256]
[590.74298096 42.52399445]
[579.37426758 52.31960678]
[567.32080078 61.25921631]
[554.64697266 69.29512787]
[541.42034912 76.38446808]
[527.71148682 82.48940277]
[513.59362793 87.57736969]
[499.14196777 91.62122345]
[484.43371582 94.59937286]
[469.54727173 96.49594116]
[454.56213379 97.30080414]
[439.55822754 97.00966644]
[424.61557007 95.62408447]
[409.81393433 93.15145874]
[395.23226929 89.60496521]
[380.94839478 85.00353241]
[367.03851318 79.37171936]
[353.57681274 72.73956299]
[340.63516235 65.14246368]
[328.28259277 56.62093735]
[316.58502197 47.22046280]
[305.60482788 36.99119186]
[295.40063477 25.98770714]
[286.02685547 14.26871109]
[277.53353882 1.89673471]
[264.58053589 9.46111393]
[251.62753296 17.02549171]
[238.67453003 24.58987045]
[225.72154236 32.15425110]
[212.76853943 39.71862793]
[199.81553650 47.28300858]
[186.86253357 54.84738541]
[173.90954590 62.41176605]
[160.95654297 69.97614288]
[148.17570496 77.82790375]
[135.57339478 85.96311951]
[122.97107697 94.09833527]
[110.36876678 102.23355103]
[98.07792664 110.83211517]
[86.11559296 119.88211060]
[74.15325165 128.93211365]
[64.15508270 140.11408997]
[56.49448395 153.01040649]
[48.83388519 165.90673828]
[41.17329025 178.80307007]
[33.51269150 191.69938660]
[25.85209274 204.59571838]
[18.19149590 217.49205017]
[10.53089905 230.38838196]
[22.25600052 239.78349304]
[32.55939102 250.71903992]
[41.24050903 262.98217773]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 207]
[41 206]
[42 205]
[43 204]
[44 203]
[45 202]
[46 201]
[47 200]
[74 199]
[75 198]
[76 197]
[82 196]
[83 195]
[84 194]
[85 193]
[89 192]
[90 191]
[91 190]
[92 189]
[93 188]
[94 187]
[95 186]
[96 185]
[97 184]
[98 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
