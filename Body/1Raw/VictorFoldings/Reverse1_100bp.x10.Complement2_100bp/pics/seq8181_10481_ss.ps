%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxAUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[13.73600101 423.62249756]
[9.40718746 437.99407959]
[3.85893607 451.94033813]
[-2.86767411 465.35803223]
[-10.72284126 478.14779663]
[-19.64840698 490.21493530]
[-29.57828903 501.47009277]
[-40.43896866 511.82995605]
[-52.15003586 521.21783447]
[-64.62478638 529.56420898]
[-77.77085114 536.80731201]
[-91.49091339 542.89349365]
[-105.68338776 547.77764893]
[-120.24318695 551.42370605]
[-135.06253052 553.80462646]
[-150.03167725 554.90270996]
[-165.03982544 554.70996094]
[-179.97583008 553.22772217]
[-194.72912598 550.46704102]
[-209.19049072 546.44824219]
[-223.25282288 541.20117188]
[-236.81204224 534.76458740]
[-249.76776123 527.18627930]
[-262.02401733 518.52227783]
[-273.49011230 508.83666992]
[-284.08111572 498.20129395]
[-293.71865845 486.69479370]
[-302.33135986 474.40240479]
[-309.85543823 461.41510010]
[-316.23522949 447.82910156]
[-321.42346191 433.74493408]
[-325.38171387 419.26690674]
[-328.08071899 404.50216675]
[-329.50048828 389.56008911]
[-329.63049316 374.55126953]
[-328.46975708 359.58685303]
[-326.02691650 344.77758789]
[-322.32003784 330.23318481]
[-317.37652588 316.06124878]
[-311.23303223 302.36676025]
[-303.93505859 289.25109863]
[-295.53656006 276.81137085]
[-286.09979248 265.13964844]
[-275.69458008 254.32240295]
[-264.39797974 244.43966675]
[-252.29364014 235.56465149]
[-239.47114563 227.76303101]
[-226.02545166 221.09259033]
[-212.05610657 215.60270691]
[-197.66653442 211.33403015]
[-182.96327209 208.31817627]
[-168.05517578 206.57743835]
[-153.05262756 206.12474060]
[-138.06669617 206.96342468]
[-123.20833588 209.08726501]
[-108.58756256 212.48056030]
[-94.31262207 217.11816406]
[-80.48919678 222.96575928]
[-67.21963501 229.98005676]
[-54.60218430 238.10910034]
[-42.73025894 247.29270935]
[-32.56671143 236.26083374]
[-22.40316582 225.22895813]
[-12.23961926 214.19708252]
[-2.07607269 203.16520691]
[8.08747387 192.13333130]
[18.25102043 181.10145569]
[11.57051659 165.58273315]
[12.34803486 148.64964294]
[20.47549248 133.71118164]
[34.36024857 123.79589081]
[51.23698044 120.93800354]
[67.71836853 125.76020813]
[77.54894257 114.43061066]
[87.37952423 103.10102081]
[96.86842346 91.48375702]
[106.00722504 79.58912659]
[115.14602661 67.69448853]
[124.28482819 55.79985809]
[133.42362976 43.90522385]
[142.56243896 32.01059341]
[141.66371155 19.14377022]
[149.52030945 9.42484474]
[161.49627686 7.72110605]
[170.81117249 -4.03614569]
[180.12605286 -15.79339695]
[189.44093323 -27.55064774]
[178.41632080 -37.73275757]
[168.19335938 -48.71949005]
[158.83058167 -60.44791031]
[150.38162231 -72.85083771]
[142.89489746 -85.85723114]
[136.41328430 -99.39259338]
[130.97389221 -113.37938690]
[126.60788727 -127.73749542]
[123.34027863 -142.38468933]
[121.18978119 -157.23706055]
[120.16872406 -172.20951843]
[120.28293610 -187.21632385]
[121.53178406 -202.17152405]
[123.90809631 -216.98944092]
[127.39827728 -231.58518982]
[131.98231506 -245.87518311]
[137.63397217 -259.77755737]
[144.32087708 -273.21270752]
[152.00471497 -286.10363770]
[160.64146423 -298.37652588]
[170.18168640 -309.96105957]
[180.57069397 -320.79092407]
[191.74900818 -330.80404663]
[203.65260315 -339.94308472]
[216.21327209 -348.15567017]
[229.35908508 -355.39480591]
[243.01473999 -361.61898804]
[257.10202026 -366.79260254]
[271.54022217 -370.88598633]
[286.24664307 -373.87567139]
[301.13705444 -375.74456787]
[316.12619019 -376.48196411]
[331.12814331 -376.08364868]
[346.05700684 -374.55187988]
[360.82727051 -371.89544678]
[375.35433960 -368.12954712]
[389.55496216 -363.27575684]
[403.34783936 -357.36187744]
[416.65396118 -350.42181396]
[429.39709473 -342.49530029]
[441.50427246 -333.62771606]
[452.90612793 -323.86987305]
[463.53732300 -313.27767944]
[473.33700562 -301.91177368]
[482.24902344 -289.83731079]
[490.22235107 -277.12338257]
[497.21130371 -263.84286499]
[503.17581177 -250.07182312]
[508.08175659 -235.88911438]
[511.90103149 -221.37600708]
[514.61175537 -206.61560059]
[516.19842529 -191.69245911]
[516.65185547 -176.69207764]
[515.96960449 -161.70034790]
[514.15545654 -146.80316162]
[511.21981812 -132.08584595]
[507.17953491 -117.63268280]
[502.05776978 -103.52648926]
[495.88381958 -89.84805298]
[488.69305420 -76.67571259]
[480.52670288 -64.08493805]
[471.43145752 -52.14783478]
[461.45950317 -40.93278503]
[450.66790771 -30.50402451]
[439.11853027 -20.92129135]
[426.87747192 -12.23947525]
[414.01486206 -4.50830507]
[400.60440063 2.22793579]
[386.72290039 7.93066216]
[372.44985962 12.56720829]
[357.86703491 16.11101723]
[343.05795288 18.54178810]
[328.10745239 19.84560013]
[313.10116577 20.01498413]
[298.12503052 19.04896927]
[283.26486206 16.95308876]
[268.60577393 13.73934841]
[254.23170471 9.42615700]
[240.22500610 4.03821850]
[226.66592407 -2.39360332]
[213.63209534 -9.83246803]
[201.19818115 -18.23576546]
[191.88330078 -6.47851372]
[182.56842041 5.27873755]
[173.25354004 17.03598785]
[171.63261414 34.50995636]
[154.45707703 41.14939499]
[145.31826782 53.04402924]
[136.17945862 64.93865967]
[127.04066467 76.83329010]
[117.90186310 88.72792816]
[108.76306152 100.62255859]
[108.90144348 103.66728210]
[107.93504333 106.82965851]
[105.81813812 109.70057678]
[102.65679932 111.85978699]
[98.70912170 112.93160248]
[88.87854004 124.26119232]
[79.04795837 135.59078979]
[85.13819885 147.31727600]
[86.87677765 160.38386536]
[84.07827759 173.23245239]
[77.09700012 184.33833313]
[66.78226471 192.39117432]
[54.37515259 196.44960022]
[41.35917282 196.05116272]
[29.28289795 191.26499939]
[19.11935234 202.29687500]
[8.95580482 213.32875061]
[-1.20774221 224.36062622]
[-11.37128925 235.39250183]
[-21.53483582 246.42437744]
[-31.69838333 257.45626831]
[-21.57443428 268.53720093]
[-12.44054413 280.44741821]
[-4.36433411 293.09875488]
[2.59439993 306.39752197]
[8.38413715 320.24530029]
[12.96201134 334.53948975]
[16.29412842 349.17434692]
[18.35581970 364.04144287]
[19.13182068 379.03076172]
[18.61638451 394.03128052]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[61 200]
[62 199]
[63 198]
[64 197]
[65 196]
[66 195]
[67 194]
[73 186]
[74 185]
[75 184]
[76 179]
[77 178]
[78 177]
[79 176]
[80 175]
[81 174]
[84 172]
[85 171]
[86 170]
[87 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
