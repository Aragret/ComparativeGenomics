%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[-41.33508301 682.44250488]
[-38.17866135 697.20532227]
[-39.12338638 712.27215576]
[-44.09915543 726.52502441]
[-52.73673248 738.90625000]
[-64.39515686 748.49707031]
[-78.20928955 754.58575439]
[-93.15402985 756.72058105]
[-108.12038422 754.74298096]
[-121.99774933 748.79980469]
[-133.75633240 739.33203125]
[-142.52355957 727.04229736]
[-147.64884949 712.84246826]
[-148.75187683 697.78637695]
[-145.75079346 682.99127197]
[-138.86828613 669.55499268]
[-128.61508179 658.47460938]
[-115.75205231 650.57238770]
[-101.23371124 646.43475342]
[-86.13741302 646.36865234]
[-82.16531372 631.90411377]
[-78.19322205 617.43963623]
[-74.22112274 602.97509766]
[-70.24903107 588.51055908]
[-66.27693176 574.04602051]
[-62.30483627 559.58148193]
[-58.33274078 545.11700439]
[-54.36064529 530.65246582]
[-50.38854599 516.18792725]
[-58.26597214 505.99108887]
[-58.84062958 492.92388916]
[-51.67888260 481.74713135]
[-39.20664597 476.66207886]
[-35.01963425 462.25827026]
[-30.83262444 447.85449219]
[-26.64561272 433.45071411]
[-22.45860291 419.04693604]
[-23.93288040 414.50430298]
[-22.56915283 408.98730469]
[-17.92655563 404.28009033]
[-13.31254578 390.00735474]
[-8.69853687 375.73461914]
[-4.08452749 361.46188354]
[-16.82965660 353.61013794]
[-27.33147430 342.92968750]
[-34.97642899 330.03836060]
[-39.31640244 315.68325806]
[-40.09495163 300.69760132]
[-37.26249313 285.95227051]
[-30.97940445 272.30514526]
[-21.60697174 260.55139160]
[-9.68660355 251.37690735]
[4.09143305 245.31846619]
[18.92798996 242.73217773]
[33.96138382 243.77265930]
[38.57539368 229.49993896]
[43.18940353 215.22720337]
[29.37616348 221.07479858]
[15.42265987 215.57026672]
[9.32209587 201.86686707]
[14.56915092 187.81452942]
[28.15807343 181.46305847]
[42.30451202 186.45086670]
[48.90467834 199.91976929]
[54.77363968 186.11560059]
[60.64260101 172.31141663]
[66.51155853 158.50724792]
[72.38052368 144.70306396]
[78.24948120 130.89889526]
[77.97367859 123.51338196]
[84.30995941 116.93391418]
[90.38378906 103.21865082]
[90.50880432 95.15906525]
[96.65151215 89.34545135]
[102.92887115 75.72213745]
[101.67693329 59.95053864]
[114.03035736 51.62935257]
[120.30771637 38.00603485]
[115.07216644 23.33542633]
[121.63237000 9.60887051]
[135.65081787 4.70798063]
[141.92817688 -8.91533566]
[135.71917725 -19.05362701]
[135.18060303 -30.80993843]
[140.33070374 -41.25840378]
[149.78627014 -47.85446167]
[161.13204956 -49.05429840]
[167.81224060 -62.48467255]
[174.49243164 -75.91504669]
[181.17262268 -89.34542847]
[187.85282898 -102.77580261]
[184.49592590 -115.22947693]
[190.33636475 -126.27814484]
[201.76098633 -130.25366211]
[202.91587830 -139.31478882]
[208.84333801 -143.72920227]
[215.92044067 -156.95472717]
[222.99754333 -170.18025208]
[230.07464600 -183.40579224]
[217.89109802 -192.19467163]
[206.98774719 -202.52909851]
[197.55917358 -214.22462463]
[189.77363586 -227.07254028]
[183.77009583 -240.84355164]
[179.65567017 -255.29191589]
[177.50381470 -270.15975952]
[177.35289001 -285.18176270]
[179.20562744 -300.08984375]
[183.02894592 -314.61795044]
[188.75462341 -328.50680542]
[196.28047180 -341.50851440]
[205.47216797 -353.39111328]
[216.16571045 -363.94250488]
[228.17022705 -372.97439575]
[241.27149963 -380.32559204]
[255.23573303 -385.86489868]
[269.81369019 -389.49346924]
[284.74520874 -391.14654541]
[299.76385498 -390.79464722]
[314.60159302 -388.44403076]
[328.99359131 -384.13662720]
[342.68304443 -377.94934082]
[355.42562866 -369.99258423]
[366.99395752 -360.40835571]
[377.18154907 -349.36770630]
[385.80661011 -337.06762695]
[392.71524048 -323.72769165]
[397.78411865 -309.58590698]
[400.92276001 -294.89468384]
[402.07522583 -279.91616821]
[401.22088623 -264.91772461]
[398.37500000 -250.16697693]
[393.58837891 -235.92718506]
[386.94641113 -222.45248413]
[378.56765747 -209.98332214]
[368.60165405 -198.74223328]
[357.22622681 -188.92984009]
[344.64440918 -180.72123718]
[331.08071899 -174.26293945]
[316.77722168 -169.67018127]
[301.98916626 -167.02494812]
[286.98049927 -166.37442017]
[272.01904297 -167.73023987]
[257.37179565 -171.06817627]
[243.30018616 -176.32867432]
[236.22306824 -163.10314941]
[229.14596558 -149.87762451]
[222.06886292 -136.65209961]
[215.09040833 -123.37425232]
[216.86090088 -105.91480255]
[201.28320312 -96.09560394]
[194.60301208 -82.66522980]
[187.92280579 -69.23485565]
[181.24261475 -55.80447769]
[174.56242371 -42.37410355]
[181.42161560 -25.40155983]
[173.56170654 -8.51562595]
[155.55149841 -2.63797474]
[149.27413940 10.98534107]
[154.65687561 24.82592392]
[148.48480225 38.73132706]
[133.93103027 44.28339386]
[127.65367126 57.90671158]
[129.35461426 72.70388031]
[116.55218506 81.99949646]
[110.27482605 95.62281036]
[104.09906006 109.29248047]
[98.02522278 123.00775146]
[92.05365753 136.76785278]
[86.18470001 150.57202148]
[80.31573486 164.37620544]
[74.44677734 178.18038940]
[68.57781982 191.98455811]
[62.70885468 205.78874207]
[57.46213913 219.84120178]
[52.84812927 234.11393738]
[48.23411942 248.38667297]
[61.03172684 256.34323120]
[71.54672241 267.12503052]
[79.17099762 280.10229492]
[83.46510315 294.51849365]
[84.18359375 309.53439331]
[81.28903198 324.27694702]
[74.95394897 337.88998413]
[65.55052185 349.58407593]
[53.62874603 358.68212891]
[39.88424683 364.65881348]
[25.11770439 367.17065430]
[10.18820572 366.07589722]
[5.57419634 380.34863281]
[0.96018720 394.62136841]
[-3.65382218 408.89410400]
[-8.05482006 423.23394775]
[-12.24183178 437.63772583]
[-16.42884254 452.04150391]
[-20.61585426 466.44528198]
[-24.80286598 480.84906006]
[-16.09831047 496.02307129]
[-20.96540070 512.47381592]
[-35.92402267 520.16003418]
[-39.89611816 534.62457275]
[-43.86821747 549.08911133]
[-47.84031296 563.55358887]
[-51.81240845 578.01812744]
[-55.78450394 592.48266602]
[-59.75659943 606.94720459]
[-63.72869873 621.41168213]
[-67.70079041 635.87622070]
[-71.67288971 650.34075928]
[-58.72751617 658.10736084]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 209]
[21 208]
[22 207]
[23 206]
[24 205]
[25 204]
[26 203]
[27 202]
[28 201]
[29 200]
[33 197]
[34 196]
[35 195]
[36 194]
[37 193]
[40 192]
[41 191]
[42 190]
[43 189]
[55 177]
[56 176]
[57 175]
[64 174]
[65 173]
[66 172]
[67 171]
[68 170]
[69 169]
[71 168]
[72 167]
[74 166]
[75 165]
[77 163]
[78 162]
[81 159]
[82 158]
[87 155]
[88 154]
[89 153]
[90 152]
[91 151]
[94 149]
[96 148]
[97 147]
[98 146]
[99 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
