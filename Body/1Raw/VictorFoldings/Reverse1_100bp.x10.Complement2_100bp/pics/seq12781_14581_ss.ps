%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUGGCUAUAGCGGCUAUGCCAACAUAUCCUAACGAACUUACCGACGACACAACCGUAGACGAGCCCGCAUAGUAGUUGACUACUCGUUCUUCCUAUAUUxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[124.40595245 588.72784424]
[110.83676147 595.20745850]
[96.36764526 599.30047607]
[81.41491699 600.88916016]
[66.40879059 599.92779541]
[51.78102875 596.44403076]
[37.95249176 590.53814697]
[25.32105827 582.38000488]
[14.25016212 572.20440674]
[5.05833197 560.30407715]
[-1.98996282 547.02136230]
[-6.69192982 532.73852539]
[-8.91228390 517.86645508]
[-8.58714008 502.83309937]
[-5.72585535 488.07095337]
[-0.41075286 474.00476074]
[7.20524073 461.03924561]
[16.90299797 449.54745483]
[28.40349388 439.86001587]
[41.37583923 432.25564575]
[55.44679260 426.95315552]
[70.21150208 424.10513306]
[85.24516296 423.79345703]
[87.47027588 408.95941162]
[89.69539642 394.12536621]
[91.92050934 379.29135132]
[79.24555969 387.31289673]
[64.58127594 384.15713501]
[56.32803345 371.63180542]
[59.21365738 356.91198730]
[71.58513641 348.42987061]
[86.35552216 351.04437256]
[95.06345367 363.25689697]
[98.60312653 348.68051147]
[102.14279938 334.10412598]
[105.68247223 319.52777100]
[109.22214508 304.95138550]
[112.65320587 290.34906006]
[113.43452454 275.36941528]
[111.65206146 260.47570801]
[109.86959076 245.58200073]
[108.08712769 230.68827820]
[106.30466461 215.79455566]
[92.55831146 210.05841064]
[83.46833038 198.13246155]
[81.55561829 183.15888977]
[87.43318176 169.14636230]
[99.61487579 159.89685059]
[97.83241272 145.00312805]
[96.04994202 130.10940552]
[94.26747894 115.21569061]
[85.56227875 107.47872162]
[84.26443481 95.90474701]
[91.03981781 86.43186951]
[89.47929382 71.51325989]
[87.91877747 56.59465790]
[76.75965881 41.94693756]
[84.52529907 26.20966339]
[82.74283600 11.31594658]
[80.96036530 -3.57777047]
[71.63800049 -16.36072922]
[77.80808258 -29.91725349]
[76.02561951 -44.81097031]
[72.37753296 -59.36059189]
[66.92217255 -73.33338928]
[61.46681595 -87.30619049]
[56.01145935 -101.27898407]
[43.78501892 -111.32013702]
[46.36368179 -125.98983002]
[40.90832520 -139.96263123]
[26.31129646 -136.41154480]
[11.37119007 -134.83779907]
[-3.64537072 -135.26947021]
[-18.47039795 -137.69888306]
[-32.83932114 -142.08265686]
[-46.49570847 -148.34257507]
[-59.19585037 -156.36689758]
[-70.71309662 -166.01245117]
[-80.84190369 -177.10707092]
[-89.40151215 -189.45277405]
[-96.23916626 -202.82925415]
[-101.23284912 -216.99775696]
[-104.29343414 -231.70544434]
[-105.36629486 -246.68984985]
[-104.43229675 -261.68356323]
[-101.50810242 -276.41897583]
[-96.64590454 -290.63314819]
[-89.93246460 -304.07238770]
[-81.48759460 -316.49685669]
[-71.46201324 -327.68484497]
[-60.03462219 -337.43667603]
[-47.40936661 -345.57830811]
[-33.81156158 -351.96447754]
[-19.48386574 -356.48120117]
[-4.68198299 -359.04785156]
[10.32993412 -359.61862183]
[25.28397942 -358.18334961]
[39.91328049 -354.76766968]
[53.95675659 -349.43246460]
[67.16379547 -342.27304077]
[79.29869080 -333.41708374]
[90.14488220 -323.02270508]
[99.50881958 -311.27532959]
[107.22337341 -298.38467407]
[113.15088654 -284.58078003]
[117.18556213 -270.10995483]
[119.25540161 -255.23045349]
[119.32346344 -240.20783997]
[117.38854218 -225.31021118]
[113.48516083 -210.80342102]
[107.68297577 -196.94635010]
[100.08554840 -183.98632812]
[90.82844543 -172.15460205]
[80.07688904 -161.66235352]
[68.02273560 -152.69680786]
[54.88112259 -145.41798401]
[60.33647919 -131.44519043]
[72.17271423 -122.40345764]
[69.98426056 -106.73434448]
[75.43961334 -92.76154327]
[80.89497375 -78.78874969]
[86.35032654 -64.81594849]
[88.18091583 -79.70382690]
[94.68711853 -93.21934509]
[105.18232727 -103.93618774]
[118.55895996 -110.72336578]
[133.40533447 -112.86461639]
[148.15469360 -110.13397217]
[161.25050354 -102.81961060]
[171.31071472 -91.69342041]
[177.27366638 -77.92958069]
[178.51005554 -62.98062134]
[174.88941956 -48.42414474]
[166.79385376 -35.79632950]
[155.07769775 -26.42981720]
[140.97737122 -21.31307983]
[125.98094177 -20.98609734]
[111.67099762 -25.48337746]
[99.55770874 -34.33031464]
[90.91933441 -46.59343719]
[92.70180511 -31.69972038]
[101.89667511 -19.98205948]
[95.85408783 -5.36023617]
[97.63655090 9.53348064]
[99.41902161 24.42719841]
[108.73139191 32.14770508]
[110.33828735 44.54131699]
[102.83737946 55.03413391]
[104.39790344 69.95273590]
[105.95842743 84.87134552]
[116.15846252 98.18807983]
[109.16119385 113.43322754]
[110.94366455 128.32695007]
[112.72612762 143.22065735]
[114.50859070 158.11437988]
[128.52894592 164.22805786]
[137.54716492 176.45787048]
[139.22190857 191.45993042]
[133.20291138 205.19410706]
[121.19837952 214.01210022]
[122.98084259 228.90580750]
[124.76331329 243.79953003]
[126.54577637 258.69323730]
[128.32824707 273.58697510]
[133.36756897 259.45880127]
[141.71969604 246.99917603]
[152.87390137 236.97004700]
[166.14811707 229.98466492]
[180.73059082 226.47019958]
[195.72961426 226.64157104]
[210.22798157 230.48829651]
[223.33912659 237.77513123]
[234.26127625 248.05648804]
[242.32656860 260.70367432]
[247.04177856 274.94329834]
[248.11857605 289.90460205]
[245.49113464 304.67266846]
[239.32009888 318.34448242]
[229.98283386 330.08398438]
[218.05032349 339.17327881]
[204.25224304 345.05654907]
[189.43235779 347.37405396]
[174.49690247 345.98410034]
[160.35917664 340.97161865]
[147.88372803 332.64315796]
[137.83340454 321.50802612]
[130.82283020 308.24713135]
[127.28066254 293.67132568]
[128.43165588 302.73294067]
[123.79851532 308.49105835]
[120.25884247 323.06744385]
[116.71916962 337.64379883]
[113.17950439 352.22018433]
[109.63983154 366.79656982]
[106.75455475 381.51644897]
[104.52944183 396.35049438]
[102.30432129 411.18453979]
[100.07920074 426.01858521]
[114.35978699 430.72738647]
[127.63908386 437.78207397]
[139.53501892 446.97958374]
[149.70533752 458.05535889]
[157.85740662 470.69070435]
[163.75666809 484.52209473]
[167.23339844 499.15151978]
[168.18756104 514.15808105]
[166.59170532 529.11004639]
[162.49174500 543.57720947]
[156.00566101 557.14331055]
[147.32003784 569.41796875]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 198]
[24 197]
[25 196]
[26 195]
[33 194]
[34 193]
[35 192]
[36 191]
[37 190]
[38 188]
[39 164]
[40 163]
[41 162]
[42 161]
[43 160]
[48 155]
[49 154]
[50 153]
[51 152]
[54 150]
[55 149]
[56 148]
[58 145]
[59 144]
[60 143]
[62 141]
[63 140]
[64 122]
[65 121]
[66 120]
[67 119]
[69 117]
[70 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
