%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUAUCACCCCCCAUUCCGCUCCAAUCGCUCCGAACGAUCUUCAGUAGUUUUUCGAUAAUCACCCUCAUCUCAAACUUCAGGAACUCUCUCCUAAUACxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[178.16625977 523.68798828]
[180.27580261 508.80676270]
[184.63233948 494.42202759]
[191.13372803 480.87091064]
[199.62759399 468.47113037]
[209.91482544 457.51333618]
[221.75424194 448.25436401]
[234.86834717 440.91128540]
[229.62162781 426.85882568]
[224.37492371 412.80636597]
[219.12820435 398.75387573]
[213.88148499 384.70141602]
[207.80764771 370.98614502]
[195.10505676 368.82431030]
[185.82847595 359.60327148]
[183.52261353 346.53067017]
[189.24992371 334.33999634]
[182.56973267 320.90960693]
[175.88954163 307.47924805]
[169.20935059 294.04885864]
[162.52914429 280.61846924]
[155.84895325 267.18811035]
[151.68673706 264.84609985]
[148.95155334 259.86456299]
[149.17651367 253.25692749]
[142.89915466 239.63360596]
[136.62179565 226.01029968]
[133.45845032 224.45289612]
[130.89227295 221.28590393]
[129.67156982 216.80671692]
[130.38352966 211.63562012]
[124.72074127 197.74559021]
[119.05795288 183.85556030]
[113.39516449 169.96554565]
[107.73237610 156.07551575]
[103.54355621 170.47875977]
[92.30291748 180.41093445]
[77.49349213 182.79443359]
[63.70415115 176.89070129]
[55.20766830 164.52906799]
[54.63676834 149.53994751]
[62.16835403 136.56784058]
[75.46868134 129.63233948]
[90.41649628 130.88244629]
[102.38021088 139.93103027]
[98.62390900 125.40897369]
[94.86761475 110.88691711]
[91.12816620 125.41332245]
[82.70307159 137.82371521]
[70.58210754 146.66014099]
[56.18923187 150.88447571]
[41.21530533 150.00048828]
[27.41944504 144.11199951]
[16.42237854 133.91079712]
[9.51603031 120.59530640]
[7.51175022 105.72981262]
[10.64499950 91.06070709]
[18.54768753 78.31129456]
[30.29141426 68.97936249]
[44.49653625 64.16122437]
[59.49425507 64.42290497]
[73.52265167 69.73366547]
[84.93367767 79.46960449]
[92.38732147 92.48841858]
[92.16399384 77.49008179]
[91.94066620 62.49174118]
[91.60569000 47.49548340]
[91.15908051 32.50213242]
[90.71247864 17.50878334]
[90.26586914 2.51543283]
[89.81926727 -12.47791767]
[89.37265778 -27.47126770]
[81.22790527 -41.03495407]
[88.58283997 -53.98694992]
[77.36164093 -64.79077148]
[77.12230682 -80.00251770]
[87.49124908 -90.63363647]
[87.04463959 -105.62698364]
[86.59803009 -120.62033844]
[85.25979614 -135.56051636]
[83.03468323 -150.39456177]
[80.80956268 -165.22860718]
[78.58444977 -180.06265259]
[76.35932922 -194.89669800]
[74.13421631 -209.73074341]
[71.79872894 -224.54780579]
[69.35299683 -239.34707642]
[54.31853867 -240.37750244]
[39.92714691 -244.84790039]
[26.95492744 -252.51721191]
[16.10145950 -262.97183228]
[7.95205688 -275.64794922]
[2.94620466 -289.86193848]
[1.35386360 -304.84732056]
[3.26090622 -319.79589844]
[8.56448841 -333.90151978]
[16.97859383 -346.40350342]
[28.04946136 -356.62762451]
[41.18005371 -364.02249146]
[55.66225052 -368.18936157]
[70.71504974 -368.90344238]
[85.52667236 -366.12631226]
[99.29834747 -360.00765991]
[111.28737640 -350.87750244]
[120.84722137 -339.22821045]
[127.46231842 -325.68798828]
[130.77592468 -310.98709106]
[130.60935974 -295.91827393]
[126.97158051 -281.29421997]
[120.05878448 -267.90356445]
[110.24376678 -256.46841431]
[98.05583191 -247.60551453]
[84.15226746 -241.79280090]
[86.59799957 -226.99353027]
[90.79003143 -220.90676880]
[88.96825409 -211.95585632]
[91.19337463 -197.12181091]
[93.41849518 -182.28776550]
[95.64360809 -167.45372009]
[97.86872864 -152.61967468]
[100.09384155 -137.78564453]
[108.18473053 -150.41645813]
[122.11218262 -155.98654175]
[136.68162537 -152.41841125]
[146.45898438 -141.04286194]
[147.79757690 -126.10270691]
[140.19812012 -113.17025757]
[126.49504089 -107.06899261]
[111.79923248 -110.07453156]
[101.59138489 -121.06694031]
[102.03798676 -106.07359314]
[102.48459625 -91.08024597]
[113.46792603 -81.08514404]
[114.13443756 -65.88611603]
[103.57618713 -54.43355560]
[111.68899536 -41.94229507]
[104.36600494 -27.91787338]
[104.81261444 -12.92452335]
[105.25922394 2.06882668]
[105.70582581 17.06217766]
[106.15243530 32.05552673]
[106.59903717 47.04887772]
[109.94029236 53.64112854]
[106.93900299 62.26841354]
[107.16233063 77.26675415]
[107.38565826 92.26509094]
[109.38967133 107.13061523]
[113.14597321 121.65267944]
[116.90227509 136.17472839]
[121.62240601 150.41271973]
[127.28519440 164.30274963]
[132.94798279 178.19277954]
[138.61076355 192.08280945]
[144.27355957 205.97283936]
[150.24511719 219.73294067]
[156.52247620 233.35624695]
[162.79983521 246.97956848]
[169.27932739 260.50790405]
[175.95953369 273.93829346]
[182.63972473 287.36865234]
[189.31991577 300.79904175]
[196.00010681 314.22943115]
[202.68031311 327.65979004]
[219.36358643 332.92169189]
[226.93055725 348.31829834]
[221.13706970 364.10671997]
[224.73402405 349.54437256]
[236.12887573 339.78952026]
[251.07164001 338.48046875]
[263.98904419 346.10549927]
[270.06320190 359.82061768]
[267.02862549 374.51043701]
[256.01708984 384.69604492]
[241.13568115 386.57843018]
[227.93394470 379.45468140]
[233.18066406 393.50717163]
[238.42738342 407.55963135]
[243.67410278 421.61212158]
[248.92082214 435.66458130]
[263.63842773 432.61624146]
[278.64889526 431.85034180]
[293.60034180 433.38488770]
[308.14227295 437.18389893]
[321.93383789 443.15826416]
[334.65170288 451.16802979]
[345.99780273 461.02536011]
[355.70608521 472.49920654]
[363.54907227 485.32058716]
[369.34280396 499.18902588]
[372.95156860 513.77935791]
[374.29071045 528.74951172]
[373.32885742 543.74871826]
[370.08853149 558.42523193]
[364.64575195 572.43511963]
[357.12805176 585.44989014]
[347.71163940 597.16448975]
[336.61730957 607.30432129]
[324.10510254 615.63171387]
[310.46832275 621.95141602]
[296.02661133 626.11529541]
[281.11856079 628.02569580]
[266.09356689 627.63793945]
[251.30387878 624.96105957]
[237.09619141 620.05780029]
[223.80354309 613.04315186]
[211.73751831 604.08148193]
[201.18098450 593.38287354]
[192.38139343 581.19812012]
[185.54501343 567.81292725]
[180.83210754 553.54095459]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 179]
[9 178]
[10 177]
[11 176]
[12 175]
[13 166]
[17 163]
[18 162]
[19 161]
[20 160]
[21 159]
[22 158]
[25 157]
[26 156]
[27 155]
[31 154]
[32 153]
[33 152]
[34 151]
[35 150]
[45 149]
[46 148]
[47 147]
[64 146]
[65 145]
[66 144]
[67 142]
[68 141]
[69 140]
[70 139]
[71 138]
[72 137]
[74 135]
[77 132]
[78 131]
[79 130]
[80 121]
[81 120]
[82 119]
[83 118]
[84 117]
[85 116]
[86 114]
[87 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
