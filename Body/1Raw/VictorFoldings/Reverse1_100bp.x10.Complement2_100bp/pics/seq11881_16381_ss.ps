%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUCAUAUCCCGACACUGAUCAUACAACUCAGGACAUUCAUCCUCUCACUAUAAACUAGUCCUCUUGCACCAAUGAUCGUGUCUCUCAAGAGGGUCAUCxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[34.19455719 574.97698975]
[29.44238472 560.70068359]
[27.47816849 545.78295898]
[28.37291336 530.76312256]
[32.09427643 516.18408203]
[38.50772858 502.57290649]
[47.38143158 490.42160034]
[58.39460754 480.16946411]
[71.14913177 472.18707275]
[85.18394470 466.76300049]
[82.51815033 452.00177002]
[79.85234833 437.24057007]
[77.18655396 422.47933960]
[72.75321198 436.80920410]
[64.34266663 449.22946167]
[52.68252563 458.66561890]
[38.78150177 464.30136108]
[23.84217262 465.64913940]
[9.15694141 462.59234619]
[-4.00377178 455.39541626]
[-14.50143528 444.68099976]
[-21.42789459 431.37594604]
[-24.18394470 416.63131714]
[-22.53115654 401.72265625]
[-16.61251259 387.93969727]
[-6.94003820 376.47482300]
[5.64950323 368.31985474]
[20.06698990 364.18029785]
[35.06516647 364.41421509]
[49.34653854 369.00143433]
[61.67562485 377.54504395]
[70.98583984 389.30599976]
[76.47095490 403.26339722]
[78.03147888 388.34481812]
[71.66024780 374.88165283]
[80.79125977 361.96130371]
[78.53313446 357.75299072]
[78.89467621 352.08145142]
[82.62680054 346.62411499]
[84.63081360 331.75857544]
[77.10034180 315.90740967]
[88.47630310 301.42745972]
[90.25876617 286.53375244]
[92.04122925 271.64004517]
[93.82369995 256.74630737]
[95.60616302 241.85260010]
[97.38863373 226.95887756]
[99.17109680 212.06517029]
[100.95355988 197.17144775]
[101.06523132 182.17185974]
[99.50470734 167.25326538]
[97.94418335 152.33465576]
[96.38365936 137.41604614]
[94.82313538 122.49744415]
[93.26261139 107.57884216]
[89.35857391 100.52681732]
[91.79161835 92.42674255]
[90.45338440 77.48655701]
[88.89286041 62.56795502]
[87.11038971 47.67423630]
[85.32792664 32.78051758]
[83.43463135 17.90048409]
[81.43061829 3.03495550]
[79.42660522 -11.83057308]
[77.42259216 -26.69610023]
[75.41857910 -41.56163025]
[61.31527328 -51.91131973]
[59.10423660 -68.92385101]
[69.66934204 -82.00885773]
[67.44422150 -96.84289551]
[65.21910858 -111.67694092]
[62.99398804 -126.51098633]
[60.76887131 -141.34503174]
[51.00527191 -129.95765686]
[36.06047058 -128.67204285]
[24.49551964 -138.22462463]
[22.93535423 -153.14326477]
[32.27370453 -164.88189697]
[47.16114426 -166.71607971]
[59.06898499 -157.59593201]
[58.17617035 -172.56933594]
[54.54151917 -180.94950867]
[57.38321304 -187.77200317]
[56.71342850 -202.75704956]
[56.04364395 -217.74208069]
[55.37385941 -232.72712708]
[54.70407486 -247.71215820]
[42.80961990 -238.57313538]
[28.21244812 -242.02603149]
[21.67304611 -255.52552795]
[28.01202202 -269.12026978]
[42.55651474 -272.78875732]
[54.58409500 -263.82815552]
[55.03070068 -278.82150269]
[55.47730637 -293.81484985]
[41.02261734 -298.14199829]
[28.18091583 -306.06369019]
[17.82777786 -317.03979492]
[10.66909409 -330.32196045]
[7.19295645 -345.00454712]
[7.63637352 -360.08651733]
[11.96911240 -374.53955078]
[19.89575958 -387.37817383]
[30.87586403 -397.72708130]
[44.16078186 -404.88064575]
[58.84473038 -408.35110474]
[73.92652893 -407.90185547]
[88.37786865 -403.56353760]
[101.21344757 -395.63195801]
[111.55811310 -384.64785767]
[118.70653534 -371.36016846]
[122.17133331 -356.67486572]
[121.71627045 -341.59326172]
[117.37236786 -327.14358521]
[109.43581390 -314.31106567]
[98.44771576 -303.97064209]
[85.15727997 -296.82736206]
[70.47065735 -293.36822510]
[70.02404785 -278.37487793]
[69.57744598 -263.38153076]
[69.68910980 -248.38195801]
[70.35889435 -233.39691162]
[71.02868652 -218.41188049]
[71.69847107 -203.42683411]
[72.36825562 -188.44180298]
[73.14957428 -173.46215820]
[74.04238892 -158.48875427]
[75.60291290 -143.57014465]
[77.82803345 -128.73609924]
[80.05314636 -113.90206146]
[82.27826691 -99.06801605]
[84.50337982 -84.23397064]
[95.83504486 -78.10021973]
[101.65168762 -66.38489532]
[99.62905121 -53.26546860]
[90.28411102 -43.56564331]
[92.28812408 -28.70011520]
[94.29213715 -13.83458614]
[96.29615021 1.03094184]
[98.30016327 15.89647007]
[102.30911255 22.10534286]
[100.22164154 30.99805260]
[102.00411224 45.89176941]
[103.78657532 60.78548813]
[106.92069244 64.38914490]
[107.82428741 69.99990082]
[105.39356232 76.14832306]
[106.73179626 91.08850861]
[108.18122101 106.01831818]
[109.74174500 120.93692017]
[111.30226135 135.85552979]
[112.86278534 150.77413940]
[114.42330933 165.69273376]
[115.98383331 180.61134338]
[122.01047516 166.87527466]
[132.54040527 156.19255066]
[146.18824768 149.96868896]
[161.15837097 149.02252197]
[175.48121643 153.47854614]
[187.27236938 162.75048828]
[194.98048401 175.61846924]
[197.59143066 190.38948059]
[194.76168823 205.12016296]
[186.86358643 217.87240601]
[174.93623352 226.96846008]
[160.54887390 231.21156311]
[145.59442139 230.04348755]
[132.04039001 223.61788940]
[121.67005157 212.78018188]
[115.84728241 198.95391846]
[114.06481171 213.84762573]
[112.28234863 228.74134827]
[110.49987793 243.63507080]
[108.71741486 258.52877808]
[106.93495178 273.42251587]
[105.15248108 288.31622314]
[103.37001801 303.20993042]
[110.71387482 313.81326294]
[108.92263794 326.18157959]
[99.49634552 333.76257324]
[97.49233246 348.62811279]
[95.70986176 363.52182007]
[101.96948242 378.05206299]
[92.95008850 389.90533447]
[91.38956451 404.82394409]
[91.94777679 419.81353760]
[94.61357117 434.57476807]
[97.27936554 449.33596802]
[99.94515991 464.09719849]
[114.99065399 464.26953125]
[129.73158264 467.28637695]
[143.63507080 473.03872681]
[156.19853210 481.31857300]
[166.96778870 491.82666016]
[175.55355835 504.18307495]
[181.64543152 517.94116211]
[185.02323914 532.60363770]
[185.56483459 547.64031982]
[183.25067139 562.50781250]
[178.16438293 576.66851807]
[170.48985291 589.61059570]
[160.50450134 600.86627197]
[148.56927490 610.02850342]
[135.11566162 616.76623535]
[120.62997437 620.83575439]
[105.63587189 622.09008789]
[90.67537689 620.48382568]
[76.28929901 616.07507324]
[62.99769592 609.02313232]
[51.28104782 599.58294678]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 189]
[11 188]
[12 187]
[13 186]
[33 185]
[34 184]
[36 182]
[39 181]
[40 180]
[42 177]
[43 176]
[44 175]
[45 174]
[46 173]
[47 172]
[48 171]
[49 170]
[50 154]
[51 153]
[52 152]
[53 151]
[54 150]
[55 149]
[57 148]
[58 147]
[59 144]
[60 143]
[61 142]
[62 140]
[63 139]
[64 138]
[65 137]
[66 136]
[69 132]
[70 131]
[71 130]
[72 129]
[73 128]
[80 127]
[81 126]
[83 125]
[84 124]
[85 123]
[86 122]
[87 121]
[93 120]
[94 119]
[95 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
