%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[165.95364380 482.51330566]
[164.35253906 467.58453369]
[164.34736633 452.57012939]
[165.93817139 437.64025879]
[169.10694885 422.96405029]
[173.81777954 408.70782471]
[180.01728821 395.03308105]
[187.63523865 382.09481812]
[196.58531189 370.03958130]
[206.76608276 359.00399780]
[218.06219482 349.11312866]
[230.34568787 340.47900391]
[223.07244873 327.36029053]
[210.13433838 319.98095703]
[210.20977783 304.15994263]
[202.93653870 291.04122925]
[195.66331482 277.92254639]
[188.39009094 264.80386353]
[181.11685181 251.68516541]
[173.84362793 238.56646729]
[156.65890503 241.06015015]
[139.80010986 236.75436401]
[125.85945129 226.28317261]
[116.99118805 211.23083496]
[114.57873535 193.89208984]
[119.01889801 176.92230225]
[129.65692139 162.93090820]
[121.80516815 150.15007019]
[113.95341492 137.36921692]
[106.10166168 124.58837891]
[98.24990845 111.80753326]
[98.74806213 126.79926300]
[93.86579132 140.98246765]
[84.24545288 152.49111938]
[71.15275574 159.81105042]
[56.31027985 161.97920227]
[41.67080307 158.71031189]
[29.16039848 150.43444824]
[20.42502785 138.24046326]
[16.61397743 123.73267365]
[18.22865868 108.81983185]
[25.05663109 95.46398163]
[36.19955826 85.42230988]
[50.19139481 80.01597595]
[65.19127655 79.95626831]
[79.22570801 85.25104523]
[90.44968414 95.20557404]
[85.62368774 81.00311279]
[80.79769135 66.80065918]
[75.97169495 52.59820557]
[71.14569855 38.39574814]
[66.31970215 24.19329262]
[61.49370193 9.99083710]
[45.24350739 6.93746376]
[32.82168961 -3.83258581]
[27.55657578 -19.30822754]
[30.79556465 -35.23508453]
[41.56182098 -47.28499222]
[36.52490234 -61.41402054]
[31.48798752 -75.54305267]
[29.73274231 -60.64609909]
[24.50958443 -46.58485413]
[16.11390495 -34.15454865]
[5.02052069 -24.05817032]
[-8.14318275 -16.86672211]
[-22.63273430 -12.98691559]
[-37.62868118 -12.63817310]
[-52.28292465 -15.84021568]
[-65.76670074 -22.41195488]
[-77.31743622 -31.98172379]
[-86.28188324 -44.00830841]
[-92.15305328 -57.81154633]
[-94.59890747 -72.61079407]
[-93.48111725 -87.56909180]
[-88.86290741 -101.84046173]
[-81.00544739 -114.61779785]
[-70.35311890 -125.17848206]
[-57.50837326 -132.92524719]
[-43.19763184 -137.41998291]
[-28.23023796 -138.40849304]
[-13.45267200 -135.83485413]
[0.29932243 -129.84465027]
[12.24800396 -120.77662659]
[21.71761703 -109.14363861]
[28.17295074 -95.60256195]
[28.39627838 -110.60089874]
[28.61960793 -125.59924316]
[28.84293556 -140.59757996]
[19.73789406 -146.15834045]
[13.80772781 -154.92990112]
[12.06693745 -165.29199219]
[14.76353264 -175.36380005]
[21.34619522 -183.34529114]
[30.57542038 -187.83888245]
[31.46823692 -202.81228638]
[32.36105347 -217.78569031]
[33.25386810 -232.75909424]
[19.03456879 -237.85696411]
[6.82829809 -246.75547791]
[-2.37543654 -258.73327637]
[-7.83052969 -272.81939697]
[-9.09476089 -287.87191772]
[-6.06564522 -302.67062378]
[1.01126039 -316.01580811]
[11.56226349 -326.82565308]
[24.73204041 -334.22387695]
[39.45298004 -337.61071777]
[54.53171539 -336.71160889]
[68.74588776 -331.59945679]
[80.94321442 -322.68869019]
[90.13491058 -310.70162964]
[95.57585144 -296.61004639]
[96.82495880 -281.55627441]
[93.78097534 -266.76065063]
[86.69066620 -253.42256165]
[76.12880707 -242.62330627]
[62.95160675 -235.23832703]
[48.22727203 -231.86627197]
[47.33445740 -216.89286804]
[46.44164276 -201.91946411]
[45.54882431 -186.94606018]
[59.51416779 -173.36358643]
[58.97971344 -153.58436584]
[43.84127045 -140.37425232]
[43.61794281 -125.37591553]
[43.39461517 -110.37757111]
[43.17128754 -95.37923431]
[45.61701584 -80.57996368]
[50.65393448 -66.45093536]
[55.69084930 -52.32190704]
[69.25747681 -50.75231934]
[80.88010406 -43.45552063]
[88.26022339 -31.80721664]
[89.90943146 -18.05009460]
[85.44927216 -4.86210155]
[75.69615936 5.16483974]
[80.52215576 19.36729622]
[85.34815216 33.56975174]
[90.17414856 47.77220535]
[95.00014496 61.97466278]
[99.82614136 76.17711639]
[104.65214539 90.37957001]
[111.03074646 103.95578003]
[118.88249969 116.73662567]
[126.73426056 129.51747131]
[134.58601379 142.29830933]
[142.43777466 155.07914734]
[154.82995605 152.10095215]
[167.54182434 152.72421265]
[179.54940796 156.88867188]
[189.88829041 164.24922180]
[197.73110962 174.20443726]
[202.45368958 185.94583130]
[203.68476868 198.52337646]
[201.33514404 210.92248535]
[195.60404968 222.14573669]
[186.96232605 231.29322815]
[194.23554993 244.41192627]
[201.50877380 257.53060913]
[208.78201294 270.64932251]
[216.05523682 283.76800537]
[223.32846069 296.88671875]
[236.78680420 305.20437622]
[236.19114685 320.08706665]
[243.46437073 333.20574951]
[257.29483032 327.36187744]
[271.66809082 323.02120972]
[286.42132568 320.23297119]
[301.38732910 319.02868652]
[316.39657593 319.42205811]
[331.27896118 321.40863037]
[345.86590576 324.96585083]
[359.99206543 330.05343628]
[373.49740601 336.61376953]
[386.22891235 344.57244873]
[398.04229736 353.83935547]
[408.80374146 364.30947876]
[418.39129639 375.86416626]
[426.69635010 388.37252808]
[433.62475586 401.69277954]
[439.09802246 415.67401123]
[443.05413818 430.15783691]
[445.44827271 444.98013306]
[446.25332642 459.97293091]
[445.46014404 474.96636963]
[443.07775879 489.79052734]
[439.13308716 504.27749634]
[433.67089844 518.26306152]
[426.75302124 531.58880615]
[418.45791626 544.10369873]
[408.87951660 555.66601562]
[398.12634277 566.14465332]
[386.32028198 575.42089844]
[373.59509277 583.38964844]
[360.09494019 589.96069336]
[345.97280884 595.05944824]
[331.38870239 598.62823486]
[316.50790405 600.62658691]
[301.49896240 601.03179932]
[286.53198242 599.83941650]
[271.77658081 597.06280518]
[257.39987183 592.73352051]
[243.56480408 586.90063477]
[230.42813110 579.63012695]
[218.13870239 571.00445557]
[206.83575439 561.12139893]
[196.64738464 550.09283447]
[187.68901062 538.04376221]
[180.06213379 525.11077881]
[173.85319519 511.44030762]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 165]
[13 164]
[15 162]
[16 161]
[17 160]
[18 159]
[19 158]
[20 157]
[27 147]
[28 146]
[29 145]
[30 144]
[31 143]
[47 142]
[48 141]
[49 140]
[50 139]
[51 138]
[52 137]
[53 136]
[58 130]
[59 129]
[60 128]
[85 127]
[86 126]
[87 125]
[88 124]
[94 121]
[95 120]
[96 119]
[97 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
