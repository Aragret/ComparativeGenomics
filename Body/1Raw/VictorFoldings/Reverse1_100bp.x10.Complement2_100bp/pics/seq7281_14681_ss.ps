%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[91.73709106 596.27606201]
[82.80480957 609.11151123]
[67.69837952 613.15252686]
[53.55060577 606.49108887]
[47.04162598 592.27258301]
[51.24478531 577.21044922]
[64.17547607 568.41662598]
[65.51371002 553.47644043]
[66.85194397 538.53625488]
[68.19017792 523.59606934]
[69.52841187 508.65588379]
[70.64405823 493.69741821]
[71.53688049 478.72402954]
[68.79707336 471.85995483]
[72.55609131 463.53485107]
[73.67173767 448.57638550]
[74.78738403 433.61795044]
[75.90303802 418.65948486]
[77.01868439 403.70104980]
[68.55808258 388.32620239]
[79.05200958 373.19482422]
[79.94482422 358.22140503]
[80.83764648 343.24801636]
[81.73046112 328.27459717]
[82.62327576 313.30120850]
[83.51609039 298.32778931]
[84.29741669 283.34814453]
[84.96720123 268.36312866]
[85.63698578 253.37808228]
[86.30677032 238.39303589]
[86.97655487 223.40800476]
[87.64633942 208.42295837]
[88.31612396 193.43792725]
[88.98590851 178.45288086]
[89.65569305 163.46784973]
[79.44618225 152.68353271]
[79.91197205 137.47702026]
[91.29277802 126.84147644]
[91.96256256 111.85643768]
[85.69034576 99.36040497]
[93.05239868 87.47377777]
[93.27572632 72.47544098]
[93.05239868 57.47710419]
[92.82907104 42.47876740]
[89.57223511 33.94466782]
[92.71573639 27.25585556]
[84.97843933 13.45568371]
[92.71573639 0.72841150]
[92.71573639 -14.27158833]
[91.48876190 -29.22132111]
[89.04303741 -44.02059174]
[86.59730530 -58.81986237]
[76.71344757 -71.17380524]
[82.27204895 -84.99231720]
[79.82631683 -99.79158783]
[77.38059235 -114.59085846]
[74.93486786 -129.39013672]
[72.48913574 -144.18940735]
[70.04341125 -158.98867798]
[67.59768677 -173.78794861]
[65.15195465 -188.58721924]
[62.70623016 -203.38648987]
[52.82237244 -215.74043274]
[58.38097000 -229.55894470]
[55.93524170 -244.35821533]
[53.48951340 -259.15747070]
[51.04378510 -273.95675659]
[48.59806061 -288.75601196]
[33.62004852 -287.74868774]
[18.61474037 -288.19168091]
[3.72223783 -290.08084106]
[-10.91840649 -293.39852905]
[-25.17049599 -298.11376953]
[-38.90095520 -304.18252563]
[-51.98159027 -311.54815674]
[-64.29026031 -320.14190674]
[-75.71204376 -329.88348389]
[-86.14029694 -340.68194580]
[-95.47764587 -352.43649292]
[-103.63691711 -365.03735352]
[-110.54192352 -378.36688232]
[-116.12818909 -392.30062866]
[-120.34356689 -406.70849609]
[-123.14868164 -421.45593262]
[-124.51735687 -436.40524292]
[-124.43680573 -451.41687012]
[-122.90777588 -466.35064697]
[-119.94455719 -481.06713867]
[-115.57480621 -495.42892456]
[-109.83932495 -509.30191040]
[-102.79167175 -522.55657959]
[-94.49764252 -535.06915283]
[-85.03468323 -546.72277832]
[-74.49114227 -557.40875244]
[-62.96547699 -567.02716064]
[-50.56528854 -575.48834229]
[-37.40636444 -582.71313477]
[-23.61156464 -588.63421631]
[-9.30969429 -593.19622803]
[5.36571121 -596.35662842]
[20.27762985 -598.08587646]
[35.28682709 -598.36779785]
[50.25316620 -597.19976807]
[65.03690338 -594.59277344]
[79.50000763 -590.57104492]
[93.50743103 -585.17218018]
[106.92839813 -578.44659424]
[119.63758850 -570.45715332]
[131.51634216 -561.27832031]
[142.45373535 -550.99584961]
[152.34765625 -539.70574951]
[161.10572815 -527.51348877]
[168.64617920 -514.53283691]
[174.89860535 -500.88504028]
[179.80461121 -486.69747925]
[183.31840515 -472.10266113]
[185.40716553 -457.23684692]
[186.05140686 -442.23883057]
[185.24510193 -427.24865723]
[182.99578857 -412.40628052]
[179.32446289 -397.85028076]
[174.26541138 -383.71658325]
[167.86584473 -370.13714600]
[160.18554688 -357.23876953]
[151.29620361 -345.14184570]
[141.28083801 -333.95938110]
[130.23294067 -323.79574585]
[118.25568390 -314.74584961]
[105.46088409 -306.89416504]
[91.96801758 -300.31405640]
[77.90305328 -295.06692505]
[63.39733124 -291.20175171]
[65.84305573 -276.40249634]
[68.28878784 -261.60321045]
[70.73451233 -246.80393982]
[73.18023682 -232.00466919]
[82.88916016 -220.70927429]
[77.50550079 -205.83221436]
[79.95122528 -191.03294373]
[82.39695740 -176.23367310]
[84.84268188 -161.43440247]
[87.28840637 -146.63513184]
[89.73413849 -131.83586121]
[92.17986298 -117.03659058]
[94.62559509 -102.23731995]
[97.07131958 -87.43804932]
[106.78024292 -76.14264679]
[101.39657593 -61.26559067]
[103.84230804 -46.46632004]
[106.28803253 -31.66704941]
[112.61291504 -45.26837158]
[124.47792053 -54.44560242]
[139.23237610 -57.14853287]
[153.58010864 -52.77331543]
[164.31579590 -42.29738617]
[169.04106140 -28.06109619]
[166.70025635 -13.24486732]
[157.81632996 -1.15868390]
[144.37396240 5.49737024]
[129.37623596 5.23631573]
[116.17366791 -1.88352740]
[107.71573639 -14.27158833]
[107.71573639 0.72841150]
[115.45304108 13.45568371]
[107.71573639 27.25585556]
[107.82740784 42.25543976]
[108.05073547 57.25377655]
[108.27406311 72.25211334]
[110.18927765 74.29907990]
[111.40906525 77.22802734]
[111.59342194 80.77787781]
[110.50305939 84.56939697]
[108.03743744 88.14356232]
[114.30965424 100.63959503]
[106.94760132 112.52622223]
[106.27781677 127.51126099]
[116.66438293 139.11975098]
[115.77165985 154.30715942]
[104.64073181 164.13763428]
[103.97094727 179.12266541]
[103.30116272 194.10771179]
[102.63137817 209.09274292]
[101.96159363 224.07778931]
[101.29180908 239.06282043]
[100.62202454 254.04786682]
[99.95223999 269.03289795]
[99.28245544 284.01794434]
[102.02555084 292.73077393]
[98.48949432 299.22061157]
[97.59667969 314.19400024]
[96.70386505 329.16741943]
[95.81105042 344.14083862]
[94.91823578 359.11422729]
[94.02542114 374.08764648]
[101.98737335 384.23504639]
[100.93548584 396.68804932]
[91.97713470 404.81668091]
[90.86148834 419.77514648]
[89.74584198 434.73358154]
[88.63018799 449.69204712]
[87.51454163 464.65048218]
[86.51028442 479.61685181]
[85.61746979 494.59024048]
[88.23017120 500.66357422]
[87.49403381 506.29873657]
[84.46859741 509.99411011]
[83.13036346 524.93432617]
[81.79212952 539.87451172]
[80.45389557 554.81469727]
[79.11566162 569.75488281]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 210]
[8 209]
[9 208]
[10 207]
[11 206]
[12 203]
[13 202]
[15 201]
[16 200]
[17 199]
[18 198]
[19 197]
[21 194]
[22 193]
[23 192]
[24 191]
[25 190]
[26 189]
[27 187]
[28 186]
[29 185]
[30 184]
[31 183]
[32 182]
[33 181]
[34 180]
[35 179]
[38 176]
[39 175]
[41 173]
[42 168]
[43 167]
[44 166]
[46 165]
[48 163]
[49 162]
[50 150]
[51 149]
[52 148]
[54 146]
[55 145]
[56 144]
[57 143]
[58 142]
[59 141]
[60 140]
[61 139]
[62 138]
[64 136]
[65 135]
[66 134]
[67 133]
[68 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
