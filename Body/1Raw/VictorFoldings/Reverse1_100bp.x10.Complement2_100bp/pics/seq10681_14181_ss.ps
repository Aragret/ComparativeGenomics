%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCCUGCUAAUCAAAAUCGUAACCUCAUCCAAAUCCAAUACAUGCAUCAGAUCCGGUAUACACAACCUCUAACUCUGAUCAUCCCGAUCCGGGUGGCGAxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[271.07067871 339.64508057]
[280.88360596 328.27828979]
[270.72006226 317.24639893]
[260.55651855 306.21453857]
[250.39297485 295.18264771]
[243.54891968 292.39324951]
[240.16174316 283.91003418]
[230.16355896 272.72805786]
[219.91816711 261.77215576]
[209.43067932 251.04777527]
[198.94317627 240.32339478]
[188.45567322 229.59901428]
[177.96817017 218.87463379]
[167.48066711 208.15025330]
[170.09492493 222.92070007]
[165.63359070 237.24188232]
[155.09336853 247.91444397]
[140.82894897 252.55410767]
[126.02705383 250.12434387]
[113.99445343 241.16796875]
[107.41926575 227.68588257]
[107.77040100 212.68998718]
[114.96942139 199.53042603]
[127.40804291 191.14706421]
[142.30744934 189.41278076]
[156.33909607 194.71502686]
[147.74052429 182.42417908]
[139.14196777 170.13334656]
[130.54339600 157.84251404]
[121.94483185 145.55166626]
[115.53480530 141.87290955]
[113.31134796 133.01321411]
[104.89672852 120.59571838]
[88.62271118 117.85269928]
[79.26317596 104.25980377]
[82.50633240 88.07803345]
[73.90776825 75.78719330]
[65.30920410 63.49635696]
[56.71064377 51.20551682]
[58.10023499 66.14101410]
[54.07082748 80.58967590]
[45.15254974 92.65053558]
[32.51875687 100.73677826]
[17.83164597 103.78452301]
[3.02355433 101.39277649]
[-9.95725727 93.87622833]
[-19.40293884 82.22380066]
[-24.07075119 67.96857452]
[-23.34656143 52.98606491]
[-17.32564926 39.24748230]
[-6.80016851 28.56037521]
[6.84507084 22.33081245]
[21.81480408 21.37840462]
[36.13950729 25.82845306]
[47.93608856 35.09726334]
[33.13184738 24.14664841]
[36.19601059 6.86724424]
[30.32704926 -6.93693256]
[24.45808792 -20.74110985]
[18.22047234 -27.41418648]
[18.60620499 -34.79476929]
[12.94341850 -48.68479538]
[7.28063202 -62.57482147]
[1.41167104 -76.37899780]
[-4.66216278 -90.09426880]
[-10.73599720 -103.80953217]
[-16.80983162 -117.52480316]
[-22.88366508 -131.24006653]
[-37.29493332 -127.00093079]
[-52.13624191 -124.67916107]
[-67.15363312 -124.31449890]
[-82.09014130 -125.91317749]
[-96.69017792 -129.44784546]
[-110.70392609 -134.85800171]
[-123.89158630 -142.05110168]
[-136.02749634 -150.90403748]
[-146.90400696 -161.26535034]
[-156.33500671 -172.95771790]
[-164.15910339 -185.78106689]
[-170.24241638 -199.51599121]
[-174.48088074 -213.92745972]
[-176.80194092 -228.76889038]
[-177.16589355 -243.78630066]
[-175.56649780 -258.72271729]
[-172.03114319 -273.32260132]
[-166.62030029 -287.33609009]
[-159.42657471 -300.52340698]
[-150.57305908 -312.65890503]
[-140.21124268 -323.53491211]
[-128.51843262 -332.96536255]
[-115.69469452 -340.78884888]
[-101.95948029 -346.87149048]
[-87.54780579 -351.10928345]
[-72.70627594 -353.42962646]
[-57.68885422 -353.79284668]
[-42.75249863 -352.19274902]
[-28.15279388 -348.65670776]
[-14.13956261 -343.24520874]
[-0.95258749 -336.05084229]
[11.18248463 -327.19674683]
[22.05800819 -316.83441162]
[31.48788643 -305.14114380]
[39.31076431 -292.31704712]
[45.39277649 -278.58154297]
[49.62985992 -264.16967773]
[51.94950485 -249.32803345]
[52.31202698 -234.31059265]
[50.71121597 -219.37431335]
[47.17446518 -204.77478027]
[41.76229858 -190.76179504]
[34.56731796 -177.57516479]
[25.71264458 -165.44052124]
[15.34978962 -154.56549072]
[3.65607738 -145.13616943]
[-9.16839790 -137.31390381]
[-3.09456420 -123.59863281]
[2.97926998 -109.88336945]
[9.05310345 -96.16809845]
[15.12693787 -82.45283508]
[19.18043518 -79.92732239]
[21.69045448 -74.82861328]
[21.17065811 -68.23760986]
[26.83344460 -54.34758377]
[32.49623108 -40.45755768]
[38.26226425 -26.61007118]
[44.13122559 -12.80589390]
[50.00018692 0.99828339]
[61.09747314 5.81251478]
[66.09997559 17.26497078]
[61.82611465 29.43447876]
[69.00148010 42.60695267]
[77.60004425 54.89779282]
[86.19860840 67.18862915]
[94.79717255 79.47946930]
[107.45242310 80.18527985]
[117.43618774 87.99412537]
[121.16956329 100.10675049]
[117.31422424 112.18109894]
[125.72884369 124.59859467]
[134.23567200 136.95310974]
[142.83422852 149.24394226]
[151.43280029 161.53477478]
[160.03135681 173.82562256]
[168.62992859 186.11645508]
[178.20504761 197.66276550]
[188.69255066 208.38714600]
[199.18005371 219.11152649]
[209.66755676 229.83589172]
[220.15504456 240.56027222]
[230.64254761 251.28465271]
[235.66963196 252.69018555]
[239.29261780 255.59317017]
[241.17620850 259.20800781]
[241.34553528 262.72988892]
[251.34370422 273.91186523]
[261.42483521 285.01910400]
[271.58840942 296.05099487]
[281.75195312 307.08285522]
[291.91549683 318.11474609]
[304.04687500 309.26446533]
[317.10806274 301.85479736]
[330.92874146 295.98229980]
[345.32879639 291.72357178]
[360.12042236 289.13412476]
[375.11080933 288.24768066]
[390.10455322 289.07583618]
[404.90612793 291.60778809]
[419.32260132 295.81054688]
[433.16601562 301.62927246]
[446.25588989 308.98812866]
[458.42160034 317.79116821]
[469.50448608 327.92367554]
[479.36010742 339.25347900]
[487.85992432 351.63293457]
[494.89318848 364.90060425]
[500.36816406 378.88351440]
[504.21350098 393.39941406]
[506.37902832 408.25903320]
[506.83654785 423.26864624]
[505.58007812 438.23257446]
[502.62600708 452.95571899]
[498.01284790 467.24615479]
[491.80072021 480.91757202]
[484.07067871 493.79171753]
[474.92340088 505.70077515]
[464.47824097 516.48950195]
[452.87127686 526.01715088]
[440.25390625 534.15960693]
[426.79058838 540.81066895]
[412.65686035 545.88366699]
[398.03695679 549.31243896]
[383.12152100 551.05230713]
[368.10494995 551.08050537]
[353.18307495 549.39678955]
[338.55038452 546.02301025]
[324.39767456 541.00317383]
[310.90945435 534.40277100]
[298.26153564 526.30780029]
[286.61886597 516.82385254]
[276.13317871 506.07452393]
[266.94122314 494.19995117]
[259.16278076 481.35494995]
[252.89932251 467.70700073]
[248.23246765 453.43399048]
[245.22305298 438.72204590]
[243.91032410 423.76296997]
[244.31140137 408.75173950]
[246.42105103 393.88409424]
[250.21176147 379.35382080]
[255.63412476 365.35040283]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 159]
[3 158]
[4 157]
[5 156]
[7 155]
[8 154]
[9 150]
[10 149]
[11 148]
[12 147]
[13 146]
[14 145]
[26 144]
[27 143]
[28 142]
[29 141]
[30 140]
[32 139]
[33 138]
[36 134]
[37 133]
[38 132]
[39 131]
[55 130]
[57 127]
[58 126]
[59 125]
[61 124]
[62 123]
[63 122]
[64 119]
[65 118]
[66 117]
[67 116]
[68 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
