%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACCUCCUAGUCCGUCCGCGGUUCCUCACUCGGCUUCAAAGUAGUACGCCUCUACAACCUACCCCACCCCUCCAGCUACUUACUCACCAAUUAAUUAxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[84.79911804 579.48370361]
[69.81970215 583.97271729]
[55.47986603 577.73553467]
[48.55043411 563.71704102]
[52.30327225 548.53643799]
[64.96640778 539.36157227]
[65.85922241 524.38812256]
[66.75203705 509.41473389]
[67.64485168 494.44134521]
[68.53766632 479.46792603]
[69.43048859 464.49453735]
[70.32330322 449.52111816]
[71.21611786 434.54769897]
[72.10893250 419.57431030]
[62.06111526 408.63919067]
[62.75325775 393.44131470]
[74.29115295 382.97637939]
[75.18396759 368.00296021]
[75.96528625 353.02331543]
[76.63507080 338.03829956]
[69.47379303 324.97821045]
[77.81958771 311.53729248]
[70.65830231 298.47723389]
[79.00409698 285.03631592]
[79.67388153 270.05126953]
[80.34366608 255.06623840]
[81.01345062 240.08120728]
[73.85217285 227.02113342]
[82.19796753 213.58021545]
[82.86775208 198.59516907]
[75.70647430 185.53511047]
[84.05226135 172.09419250]
[84.72204590 157.10914612]
[73.71183777 167.29617310]
[58.73606110 168.14823914]
[46.64143372 159.27580261]
[42.95746231 144.73522949]
[49.36840820 131.17427063]
[62.94327164 124.79280090]
[77.47580719 128.50836182]
[86.32246399 140.62400818]
[88.54757690 125.78997040]
[90.77269745 110.95592499]
[85.83453369 97.87516785]
[94.39325714 86.81896210]
[96.28655243 71.93892670]
[90.02693176 57.40868759]
[99.04633331 45.55542755]
[100.60685730 30.63682175]
[102.16737366 15.71821690]
[103.72789764 0.79961210]
[105.28842163 -14.11899281]
[95.65882111 -23.53628540]
[93.24646759 -36.58967590]
[98.71172333 -48.47298813]
[109.85573578 -54.94140625]
[111.63819885 -69.83512115]
[113.42066956 -84.72884369]
[115.20313263 -99.62255859]
[107.56540680 -116.37805176]
[118.62373352 -130.00451660]
[120.18424988 -144.92311096]
[121.41123199 -159.87284851]
[122.30404663 -174.84625244]
[123.19686127 -189.81965637]
[124.08967590 -204.79306030]
[122.30721283 -219.68678284]
[117.90621185 -234.02662659]
[113.50521088 -248.36647034]
[109.10421753 -262.70632935]
[104.70321655 -277.04617310]
[100.30222321 -291.38601685]
[88.85646820 -302.30871582]
[92.51907349 -316.74597168]
[88.11807251 -331.08584595]
[83.71707153 -345.42568970]
[79.31607819 -359.76553345]
[64.41313934 -357.77746582]
[49.38624191 -358.26965332]
[34.64532852 -361.22857666]
[20.59254456 -366.57357788]
[7.61125612 -374.15884399]
[-3.94439554 -383.77740479]
[-13.75916386 -395.16687012]
[-21.56529617 -408.01654053]
[-27.14983368 -421.97589111]
[-30.36042595 -436.66403198]
[-31.10948753 -451.68032837]
[-29.37658119 -466.61508179]
[-25.20898438 -481.06088257]
[-18.72039032 -494.62362671]
[-10.08781242 -506.93331909]
[0.45324433 -517.65411377]
[12.61521339 -526.49359131]
[26.06630707 -533.21057129]
[40.43957138 -537.62182617]
[55.34289169 -539.60699463]
[70.36968994 -539.11193848]
[85.11003876 -536.15020752]
[99.16178894 -530.80249023]
[112.14161682 -523.21472168]
[123.69541931 -513.59393311]
[133.50799561 -502.20257568]
[141.31164551 -489.35137939]
[146.89349365 -475.39099121]
[150.10125732 -460.70220947]
[150.84742737 -445.68579102]
[149.11164856 -430.75134277]
[144.94126892 -416.30636597]
[138.45005798 -402.74487305]
[129.81510925 -390.43685913]
[119.27198792 -379.71804810]
[107.10831451 -370.88092041]
[93.65592194 -364.16653442]
[98.05692291 -349.82669067]
[102.45792389 -335.48681641]
[106.85891724 -321.14697266]
[117.98987579 -311.24996948]
[114.64206696 -295.78701782]
[119.04306793 -281.44717407]
[123.44406128 -267.10733032]
[127.84506226 -252.76747131]
[132.24606323 -238.42762756]
[136.64706421 -224.08778381]
[139.06573486 -238.89149475]
[144.91154480 -252.70549011]
[153.85389709 -264.74850464]
[165.38703918 -274.33947754]
[178.85873413 -280.93597412]
[193.50708008 -284.16491699]
[208.50363159 -283.84368896]
[223.00028992 -279.99050903]
[236.17716980 -272.82324219]
[247.28907776 -262.74725342]
[255.70756531 -250.33236694]
[260.95654297 -236.28073120]
[262.73913574 -221.38703918]
[260.95452881 -206.49357605]
[255.70367432 -192.44264221]
[247.28350830 -180.02891541]
[236.17025757 -169.95440674]
[222.99240112 -162.78892517]
[208.49523926 -158.93768311]
[193.49862671 -158.61848450]
[178.85072327 -161.84939575]
[165.37991333 -168.44769287]
[153.84806824 -178.04020691]
[144.90733337 -190.08444214]
[139.06307983 -203.90025330]
[138.17027283 -188.92684937]
[137.27745056 -173.95344543]
[136.38462830 -158.98002625]
[138.43898010 -156.11436462]
[139.20736694 -152.11129761]
[138.17034912 -147.58604431]
[135.10285950 -143.36259460]
[133.54232788 -128.44398499]
[140.91345215 -118.85268402]
[139.73545837 -106.41098022]
[130.09684753 -97.84009552]
[128.31439209 -82.94637299]
[126.53192139 -68.05265808]
[124.74945068 -53.15893936]
[135.69946289 -40.39429855]
[133.99592590 -23.32347870]
[120.20702362 -12.55846977]
[118.64650726 2.36013508]
[117.08598328 17.27873993]
[115.52545929 32.19734573]
[113.96493530 47.11594772]
[120.33617401 60.57910919]
[111.20515442 73.49944305]
[113.12949371 76.45397949]
[113.71837616 80.48737335]
[112.48032379 84.96180725]
[109.22730255 89.04407501]
[114.16546631 102.12483215]
[105.60674286 113.18103790]
[103.38162231 128.01509094]
[101.15650940 142.84913635]
[99.70708466 157.77893066]
[99.03730011 172.76397705]
[106.15067291 186.89587402]
[97.85279083 199.26496887]
[97.18300629 214.25000000]
[104.29637909 228.38189697]
[95.99848938 240.75099182]
[95.32870483 255.73602295]
[94.65892029 270.72106934]
[93.98913574 285.70611572]
[101.10250854 299.83801270]
[92.80462646 312.20709229]
[99.91799927 326.33898926]
[91.62010956 338.70806885]
[90.95032501 353.69311523]
[93.69342041 362.40594482]
[90.15737152 368.89578247]
[89.26455688 383.86917114]
[99.47713470 395.63104248]
[98.35839081 410.80346680]
[87.08233643 420.46713257]
[86.18952179 435.44052124]
[85.29670715 450.41394043]
[84.40389252 465.38732910]
[83.51107788 480.36074829]
[82.61825562 495.33416748]
[81.72544098 510.30755615]
[80.83262634 525.28094482]
[79.93981171 540.25439453]
[91.42295837 550.86901855]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 209]
[7 208]
[8 207]
[9 206]
[10 205]
[11 204]
[12 203]
[13 202]
[14 201]
[17 198]
[18 197]
[19 195]
[20 194]
[22 192]
[24 190]
[25 189]
[26 188]
[27 187]
[29 185]
[30 184]
[32 182]
[33 181]
[41 180]
[42 179]
[43 178]
[45 176]
[46 172]
[48 170]
[49 169]
[50 168]
[51 167]
[52 166]
[56 163]
[57 162]
[58 161]
[59 160]
[61 157]
[62 156]
[63 152]
[64 151]
[65 150]
[66 149]
[67 124]
[68 123]
[69 122]
[70 121]
[71 120]
[72 119]
[74 117]
[75 116]
[76 115]
[77 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
