%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUACAAACCCAGACUCAAAUAUAUAGUGUCACUCUUAAGAUACUACCUGGUACAUUGCUUGUUACGAUGUCCCUACUUAUAAUACCUCUUCAUCAGAxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[84.34835052 503.47225952]
[74.66860962 491.67117310]
[71.07611084 476.83685303]
[74.28413391 461.91470337]
[83.65573120 449.86746216]
[97.33016968 443.08715820]
[97.10684204 428.08880615]
[96.88351440 413.09048462]
[96.66018677 398.09213257]
[95.87886810 383.11248779]
[94.54063416 368.17230225]
[93.09120941 353.24249268]
[91.53069305 338.32391357]
[89.97016907 323.40530396]
[88.40964508 308.48669434]
[79.39025116 296.63342285]
[85.64986420 282.10317993]
[81.82755280 275.77770996]
[84.17886353 266.95108032]
[82.84062958 252.01091003]
[75.86865234 265.29214478]
[63.87640381 274.30249023]
[49.17939377 277.30212402]
[34.61538696 273.71191406]
[22.99646187 264.22503662]
[16.56605339 250.67329407]
[16.56577492 235.67329407]
[22.99567604 222.12130737]
[34.61424637 212.63401794]
[49.17811966 209.04324341]
[63.87524414 212.04234314]
[75.86782837 221.05221558]
[82.84062958 234.33444214]
[84.17886353 219.39425659]
[85.51709747 204.45407104]
[71.68743896 193.47172546]
[67.17908478 176.23439026]
[73.97983551 159.59619141]
[89.54138947 150.29051208]
[90.43420410 135.31710815]
[91.32701874 120.34370422]
[92.21984100 105.37030029]
[89.71671295 100.76071167]
[89.97443390 95.07679749]
[93.36870575 89.96643066]
[94.70693970 75.02624512]
[96.04517365 60.08605957]
[96.93798828 45.11265182]
[97.38459778 30.11930275]
[97.83120728 15.12595367]
[90.75184631 28.35027695]
[80.64384460 39.43307114]
[68.12531281 47.69661713]
[53.96175003 52.63560104]
[39.01927185 53.94799805]
[24.21161842 51.55355453]
[10.44427872 45.59869385]
[-1.44086623 36.44755554]
[-10.71703625 24.65973854]
[-16.81698990 10.95606804]
[-19.36771393 -3.82546782]
[-18.21322823 -18.78097343]
[-13.42413044 -32.99591446]
[-5.29327774 -45.60104370]
[5.68212700 -55.82554626]
[18.83093262 -63.04419708]
[33.34908676 -66.81556702]
[48.34879303 -66.90904236]
[62.91282272 -63.31889725]
[76.15057373 -56.26467896]
[87.25254822 -46.17775345]
[95.53986359 -33.67493820]
[100.50574493 -19.52078629]
[101.84652710 -4.58080196]
[107.30188751 -18.55360031]
[112.75724792 -32.52639771]
[118.21260071 -46.49919510]
[116.02414703 -62.16831207]
[127.86038208 -71.21003723]
[124.66191864 -89.34429932]
[138.78024292 -99.76734924]
[144.02694702 -113.81982422]
[149.27366638 -127.87229156]
[151.71940613 -142.67156982]
[151.27279663 -157.66491699]
[150.82618713 -172.65826416]
[142.68144226 -186.22195435]
[150.03636169 -199.17395020]
[149.58976746 -214.16729736]
[149.14315796 -229.16064453]
[148.69654846 -244.15399170]
[148.24993896 -259.14733887]
[147.80334473 -274.14068604]
[133.11671448 -277.59982300]
[119.82627869 -284.74313354]
[108.83818817 -295.08352661]
[100.90162659 -307.91604614]
[96.55772400 -322.36572266]
[96.10266113 -337.44735718]
[99.56745911 -352.13262939]
[106.71588898 -365.42031860]
[117.06054688 -376.40441895]
[129.89611816 -384.33599854]
[144.34747314 -388.67431641]
[159.42926025 -389.12356567]
[174.11320496 -385.65310669]
[187.39813232 -378.49954224]
[198.37823486 -368.15063477]
[206.30488586 -355.31201172]
[210.63761902 -340.85897827]
[211.08103943 -325.77700806]
[207.60490417 -311.09442139]
[200.44621277 -297.81225586]
[190.09307861 -286.83615112]
[177.25137329 -278.91445923]
[162.79669189 -274.58731079]
[163.24328613 -259.59396362]
[163.68989563 -244.60060120]
[164.13650513 -229.60725403]
[164.58311462 -214.61390686]
[165.02972412 -199.62055969]
[173.14253235 -187.12928772]
[165.81953430 -173.10487366]
[166.26614380 -158.11152649]
[166.71275330 -143.11816406]
[172.93833923 -156.76522827]
[182.00810242 -168.71258545]
[193.47949219 -178.37731934]
[206.79281616 -185.28785706]
[221.29846191 -189.10702515]
[236.28869629 -189.64848328]
[251.03207397 -186.88578796]
[264.80926514 -180.95376587]
[276.94805908 -172.14183044]
[286.85614014 -160.87995911]
[294.05007935 -147.71762085]
[298.17889404 -133.29704285]
[299.04110718 -118.32184601]
[296.59466553 -103.52269745]
[290.95892334 -89.62167358]
[282.40884399 -77.29704285]
[271.36166382 -67.15015411]
[258.35632324 -59.67609406]
[244.02745056 -55.23953247]
[229.07414246 -54.05694962]
[214.22601318 -56.18603516]
[200.20753479 -61.52291489]
[187.70269775 -69.80718994]
[177.32165527 -80.63464355]
[169.57090759 -93.47699738]
[164.82862854 -107.70762634]
[163.32614136 -122.62557220]
[158.07942200 -108.57310486]
[152.83270264 -94.52062988]
[157.56710815 -83.38906097]
[153.31098938 -71.63877106]
[141.83317566 -65.75467682]
[144.41183472 -51.08499146]
[132.18539429 -41.04383850]
[126.73004150 -27.07104111]
[121.27468872 -13.09824276]
[115.81932831 0.87455517]
[112.82455444 15.57255936]
[112.37794495 30.56590843]
[111.93134308 45.55925751]
[113.75325012 47.68970490]
[114.84103394 50.67019653]
[114.86669922 54.22473526]
[113.60812378 57.96378708]
[110.98535919 61.42429352]
[109.64712524 76.36447906]
[108.30889130 91.30466461]
[107.19324493 106.26311493]
[106.30043030 121.23651886]
[105.40761566 136.20993042]
[104.51479340 151.18333435]
[115.13478851 157.77754211]
[121.90412903 168.20080566]
[123.58965302 180.44166565]
[119.93228912 192.16876221]
[111.68468475 201.17486572]
[100.45728302 205.79231262]
[99.11904907 220.73248291]
[97.78081512 235.67266846]
[97.78081512 250.67266846]
[99.11904907 265.61285400]
[100.56846619 280.54266357]
[109.69948578 293.46301270]
[103.32824707 306.92617798]
[104.88877106 321.84475708]
[106.44929504 336.76336670]
[108.00981903 351.68197632]
[112.01503754 359.89147949]
[109.48081970 366.83407593]
[110.81905365 381.77426147]
[122.29355621 372.11322021]
[137.03034973 374.91088867]
[144.16601562 388.10491943]
[138.44039917 401.96914673]
[124.07421875 406.28341675]
[111.65852356 397.86880493]
[111.88185120 412.86715698]
[112.10517883 427.86547852]
[112.32850647 442.86383057]
[126.19875336 449.23397827]
[135.92489624 460.99685669]
[139.57579041 475.81689453]
[136.42654419 490.75158691]
[127.10246277 502.83563232]
[113.45483398 509.66973877]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 204]
[7 203]
[8 202]
[9 201]
[10 195]
[11 194]
[12 192]
[13 191]
[14 190]
[15 189]
[17 187]
[19 186]
[20 185]
[33 184]
[34 183]
[35 182]
[39 176]
[40 175]
[41 174]
[42 173]
[45 172]
[46 171]
[47 170]
[48 165]
[49 164]
[50 163]
[74 162]
[75 161]
[76 160]
[77 159]
[79 157]
[81 154]
[82 153]
[83 152]
[84 125]
[85 124]
[86 123]
[88 121]
[89 120]
[90 119]
[91 118]
[92 117]
[93 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
