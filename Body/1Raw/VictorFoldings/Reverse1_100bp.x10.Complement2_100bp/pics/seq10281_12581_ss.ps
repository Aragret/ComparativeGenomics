%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCAGUGAGUAUCCGGUCUGAAUCCCGAUCCUACUACUAAUUAUUCUCCCUACUGUAUUGAUAAUCACCGUCCAAUCAACAAACAUCCCGAGUACCAUxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[181.04071045 846.00659180]
[166.85809326 841.11248779]
[152.94387817 835.50061035]
[139.33435059 829.18560791]
[126.06503296 822.18389893]
[113.17053223 814.51379395]
[100.68448639 806.19531250]
[88.63948059 797.25012207]
[77.06694031 787.70153809]
[65.99704742 777.57458496]
[55.45868301 766.89550781]
[45.47934723 755.69232178]
[36.08507156 743.99420166]
[27.30036354 731.83166504]
[19.14814186 719.23645020]
[11.64967728 706.24139404]
[4.82453060 692.88037109]
[-1.30949247 679.18835449]
[-6.73638821 665.20092773]
[-11.44199848 650.95465088]
[-15.41404629 636.48669434]
[-18.64216995 621.83483887]
[-21.11794662 607.03723145]
[-22.83491898 592.13250732]
[-23.78860664 577.15954590]
[-23.97652054 562.15747070]
[-23.39817238 547.16534424]
[-22.05506897 532.22229004]
[-19.95071411 517.36730957]
[-17.09060097 502.63912964]
[-13.48218822 488.07623291]
[-9.13489151 473.71658325]
[-4.06005144 459.59765625]
[1.72909164 445.75625610]
[8.21743488 432.22848511]
[15.38805008 419.04968262]
[23.22223091 406.25421143]
[31.69953728 393.87542725]
[40.79785538 381.94567871]
[50.49344635 370.49603271]
[60.76101685 359.55639648]
[71.57377625 349.15530396]
[82.90351868 339.31988525]
[94.72068787 330.07580566]
[106.99445343 321.44717407]
[119.69278717 313.45648193]
[132.78257751 306.12463379]
[146.22964478 299.47070312]
[159.99893188 293.51205444]
[154.75221252 279.45959473]
[149.50549316 265.40713501]
[144.25878906 251.35464478]
[139.01206970 237.30218506]
[133.76535034 223.24971008]
[128.51863098 209.19723511]
[123.27191162 195.14476013]
[117.98735809 189.97801208]
[118.05339050 180.84382629]
[113.01647186 166.71479797]
[107.97956085 152.58576965]
[105.50759125 151.26382446]
[103.41032410 148.88305664]
[102.09366608 145.58125305]
[101.90619659 141.64053345]
[103.09079742 137.46311951]
[98.90378571 123.05934143]
[94.71677399 108.65556335]
[89.62160492 102.40962219]
[90.57636261 94.00609589]
[86.60427094 79.54156494]
[82.63217163 65.07704163]
[77.34200287 57.63043976]
[78.71033478 50.36755753]
[74.95403290 35.84549713]
[59.72079086 27.24505234]
[55.50380325 10.61580276]
[64.43914032 -3.63195205]
[60.46704483 -18.09647560]
[56.49494934 -32.56100082]
[52.52285385 -47.02552414]
[37.53145599 -45.77146912]
[22.56490707 -47.29366684]
[8.13296413 -51.54027176]
[-5.27282858 -58.36664581]
[-17.19587326 -67.54028320]
[-27.23007774 -78.74873352]
[-35.03367996 -91.61024475]
[-40.34088898 -105.68675995]
[-42.97094727 -120.49882507]
[-42.83427048 -135.54196167]
[-39.93552399 -150.30380249]
[-34.37342834 -164.28155518]
[-26.33742905 -176.99916077]
[-16.10123062 -188.02345276]
[-4.01347446 -196.97894287]
[9.51413631 -203.56060791]
[24.02085686 -207.54429626]
[39.01259232 -208.79431152]
[53.97872925 -207.26808167]
[68.40952301 -203.01757812]
[81.81347656 -196.18759155]
[93.73405457 -187.01074219]
[103.76523590 -175.79959106]
[111.56536865 -162.93597412]
[116.86878204 -148.85803223]
[119.49485016 -134.04525757]
[119.35411835 -119.00215149]
[116.45139313 -104.24109650]
[110.88552856 -90.26483917]
[102.84609985 -77.54940033]
[92.60693359 -66.52787781]
[80.51676178 -57.57564545]
[66.98737335 -50.99761963]
[70.95947266 -36.53309631]
[74.93157196 -22.06857300]
[78.90366364 -7.60404825]
[90.88391876 -2.86030960]
[98.05149078 8.08080578]
[97.60218048 21.34762764]
[89.47608948 32.08919525]
[93.23239136 46.61125565]
[97.09669495 61.10494995]
[101.06879425 75.56947327]
[105.04089355 90.03399658]
[109.12055969 104.46855164]
[113.30757141 118.87232971]
[117.49457550 133.27610779]
[122.10858917 147.54884338]
[127.14550781 161.67787170]
[132.18241882 175.80690002]
[137.32438660 189.89804077]
[142.57110596 203.95051575]
[147.81781006 218.00299072]
[153.06452942 232.05546570]
[158.31124878 246.10792542]
[163.55796814 260.16040039]
[168.80468750 274.21286011]
[174.05140686 288.26535034]
[188.35655212 283.74194336]
[202.87402344 279.95483398]
[217.56590271 276.91397095]
[232.39390564 274.62722778]
[247.31932068 273.10061646]
[262.30322266 272.33810425]
[277.30651855 272.34164429]
[292.29003906 273.11129761]
[307.21472168 274.64498901]
[322.04165649 276.93875122]
[336.73208618 279.98657227]
[351.24774170 283.78054810]
[365.55075073 288.31076050]
[379.60379028 293.56536865]
[393.37017822 299.53067017]
[406.81402588 306.19113159]
[419.90023804 313.52935791]
[432.59469604 321.52618408]
[444.86428833 330.16079712]
[456.67697144 339.41061401]
[468.00192261 349.25152588]
[478.80963135 359.65786743]
[489.07189941 370.60250854]
[498.76193237 382.05685425]
[507.85446167 393.99102783]
[516.32574463 406.37390137]
[524.15368652 419.17318726]
[531.31793213 432.35546875]
[537.79968262 445.88635254]
[543.58215332 459.73059082]
[548.65008545 473.85198975]
[552.99041748 488.21374512]
[556.59179688 502.77838135]
[559.44476318 517.50793457]
[561.54187012 532.36395264]
[562.87774658 547.30761719]
[563.44879150 562.30004883]
[563.25360107 577.30206299]
[562.29266357 592.27453613]
[560.56842041 607.17840576]
[558.08551025 621.97485352]
[554.85021973 636.62512207]
[550.87115479 651.09118652]
[546.15863037 665.33514404]
[540.72497559 679.31988525]
[534.58428955 693.00897217]
[527.75268555 706.36663818]
[520.24786377 719.35809326]
[512.08953857 731.94934082]
[503.29895020 744.10760498]
[493.89898682 755.80120850]
[483.91421509 766.99951172]
[473.37066650 777.67346191]
[462.29586792 787.79504395]
[450.71868896 797.33801270]
[438.66934204 806.27734375]
[426.17926025 814.58978271]
[413.28103638 822.25360107]
[400.00833130 829.24890137]
[386.39572144 835.55731201]
[372.47879028 841.16241455]
[358.29379272 846.04962158]
[343.87777710 850.20611572]
[329.26831055 853.62115479]
[314.50354004 856.28570557]
[299.62194824 858.19293213]
[284.66241455 859.33782959]
[269.66394043 859.71734619]
[254.66563416 859.33050537]
[239.70664978 858.17840576]
[224.82600403 856.26397705]
[210.06251526 853.59222412]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 138]
[50 137]
[51 136]
[52 135]
[53 134]
[54 133]
[55 132]
[56 131]
[58 130]
[59 129]
[60 128]
[65 127]
[66 126]
[67 125]
[69 124]
[70 123]
[71 122]
[73 121]
[74 120]
[77 116]
[78 115]
[79 114]
[80 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
