%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUAGGAAAUUUUCAACUCUUUCGGUACAACAAUCUGUACCCCCGUACUCAAUCGUCAAGAACACUCGAAAGAGCCAUUUAUUCCCCAGCAUUCGGAGAxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[117.83702087 793.86364746]
[103.85930634 788.40045166]
[90.34081268 781.88330078]
[77.36087036 774.35046387]
[64.99565125 765.84613037]
[53.31772232 756.42016602]
[42.39561462 746.12792969]
[32.29342270 735.02978516]
[23.07043076 723.19091797]
[14.78076363 710.68072510]
[7.47307062 697.57269287]
[1.19023573 683.94372559]
[-4.03087044 669.87384033]
[-8.15960789 655.44549561]
[-11.17174721 640.74346924]
[-13.04961109 625.85400391]
[-13.78218079 610.86444092]
[-13.36515617 595.86285400]
[-11.80098534 580.93713379]
[-9.09884739 566.17498779]
[-5.27459860 551.66302490]
[-0.35068262 537.48632812]
[5.64400482 523.72821045]
[12.67428493 510.46932983]
[20.69889832 497.78750610]
[29.67075729 485.75720215]
[39.53720474 474.44897461]
[50.24034500 463.92919922]
[61.71736526 454.25961304]
[73.90090942 445.49697876]
[86.71949005 437.69268799]
[100.09786987 430.89254761]
[113.95754242 425.13650513]
[128.21716309 420.45828247]
[142.79307556 416.88534546]
[140.34735107 402.08609009]
[137.90161133 387.28680420]
[135.45588684 372.48754883]
[133.01016235 357.68826294]
[130.56443787 342.88900757]
[128.11871338 328.08972168]
[125.67298126 313.29046631]
[123.22724915 298.49118042]
[111.00702667 290.05307007]
[108.31589508 275.07934570]
[117.24941254 262.31887817]
[114.80368805 247.51960754]
[110.61165619 241.43284607]
[112.43342590 232.48191833]
[110.20831299 217.64787292]
[107.87282562 202.83081055]
[105.42709351 188.03153992]
[102.13519287 184.57142639]
[100.98196411 179.00660706]
[103.13571930 172.75578308]
[101.13170624 157.89025879]
[99.12769318 143.02473450]
[97.12368011 128.15919495]
[94.78819275 113.34213257]
[85.90407562 102.54564667]
[90.45059204 89.32366180]
[87.78479004 74.56244659]
[75.56713867 60.78527451]
[82.14078522 44.51400757]
[79.25551605 29.79411697]
[76.37023926 15.07422543]
[66.12294006 3.02003741]
[71.26764679 -10.95784760]
[61.02035141 -23.01203537]
[66.16505432 -36.98992157]
[63.27978134 -51.70981216]
[58.50264359 -37.49084854]
[48.96776199 -25.91129494]
[35.92961502 -18.49464417]
[21.10359573 -16.21668243]
[6.44031858 -19.37711525]
[-6.13100672 -27.56013107]
[-14.95640755 -39.68911743]
[-18.87475014 -54.16829681]
[-17.37051010 -69.09268188]
[-10.64159393 -82.49871063]
[0.42669123 -92.62259674]
[14.37812328 -98.13236237]
[29.37715149 -98.30310822]
[43.45039749 -93.11236572]
[54.74627686 -83.24307251]
[61.77934647 -69.99142456]
[62.22595215 -84.98477173]
[62.67256165 -99.97812653]
[63.11916733 -114.97147369]
[63.56577301 -129.96482849]
[53.26241684 -138.63981628]
[49.88587952 -151.47763062]
[54.45215607 -163.73451233]
[65.08420563 -171.01387024]
[65.75399017 -185.99891663]
[66.42377472 -200.98394775]
[52.18743134 -206.06509399]
[40.08226013 -215.11805725]
[31.18464088 -227.33786011]
[26.28574562 -241.63793945]
[25.82118034 -256.74673462]
[29.83225250 -271.32077026]
[37.96230316 -284.06414795]
[49.48841476 -293.84375000]
[63.38568497 -299.78991699]
[78.41838837 -301.37399292]
[93.24982452 -298.45510864]
[106.56118774 -291.29275513]
[117.16883850 -280.52386475]
[124.12956238 -267.10598755]
[126.82440948 -252.23220825]
[125.01375580 -237.22509766]
[118.85860443 -223.41911316]
[108.90626526 -212.04183960]
[96.04170227 -204.10493469]
[81.40881348 -200.31416321]
[80.73902893 -185.32911682]
[80.06924438 -170.34408569]
[91.93830872 -158.42921448]
[91.50917053 -141.27897644]
[78.55912018 -129.51821899]
[78.11251831 -114.52487183]
[77.66590881 -99.53151703]
[77.21930695 -84.53816986]
[76.77269745 -69.54481506]
[77.99967194 -54.59508514]
[80.88494873 -39.87519455]
[90.92587280 -28.87387085]
[85.98754120 -13.84312057]
[96.02846527 -2.84179783]
[91.09013367 12.18895245]
[93.97540283 26.90884399]
[96.86067963 41.62873459]
[106.72148895 48.63523483]
[109.24571991 60.87500763]
[102.54601288 71.89665222]
[105.21180725 86.65786743]
[114.09592438 97.45435333]
[109.54940796 110.67633820]
[112.92253876 114.65994263]
[114.29325867 119.09552765]
[113.82472229 123.14466858]
[111.98921204 126.15518188]
[113.99322510 141.02072144]
[115.99723816 155.88624573]
[118.00125122 170.75177002]
[120.22636414 185.58581543]
[122.67209625 200.38508606]
[127.15885162 208.34164429]
[125.04235077 215.42276001]
[127.26747131 230.25680542]
[129.60295105 245.07386780]
[132.04869080 259.87313843]
[144.61268616 269.08093262]
[146.88218689 284.12435913]
[138.02651978 296.04547119]
[140.47224426 310.84472656]
[142.91798401 325.64401245]
[145.36370850 340.44326782]
[147.80943298 355.24255371]
[150.25515747 370.04180908]
[152.70088196 384.84109497]
[155.14662170 399.64035034]
[157.59234619 414.43963623]
[172.54278564 413.13302612]
[187.54936218 412.97470093]
[202.52404785 413.96560669]
[217.37892151 416.09991455]
[232.02684021 419.36508179]
[246.38182068 423.74197388]
[260.35964966 429.20489502]
[273.87826538 435.72177124]
[286.85833740 443.25436401]
[299.22372437 451.75848389]
[310.90182495 461.18423462]
[321.82412720 471.47628784]
[331.92654419 482.57421875]
[341.14974976 494.41293335]
[349.43966675 506.92291260]
[356.74758911 520.03082275]
[363.03070068 533.65966797]
[368.25207520 547.72949219]
[372.38107300 562.15771484]
[375.39349365 576.85968018]
[377.27163696 591.74914551]
[378.00448608 606.73864746]
[377.58773804 621.74029541]
[376.02386475 636.66601562]
[373.32199097 651.42822266]
[369.49801636 665.94024658]
[364.57437134 680.11700439]
[358.57995605 693.87530518]
[351.54992676 707.13427734]
[343.52554321 719.81628418]
[334.55392456 731.84674072]
[324.68768311 743.15515137]
[313.98474121 753.67510986]
[302.50790405 763.34490967]
[290.32452393 772.10778809]
[277.50610352 779.91235352]
[264.12786865 786.71270752]
[250.26829529 792.46905518]
[236.00875854 797.14752197]
[221.43292236 800.72070312]
[206.62632751 803.16766357]
[191.67585754 804.47399902]
[176.66926575 804.63201904]
[161.69461060 803.64080811]
[146.83976746 801.50622559]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 165]
[36 164]
[37 163]
[38 162]
[39 161]
[40 160]
[41 159]
[42 158]
[43 157]
[46 154]
[47 153]
[49 152]
[50 151]
[51 149]
[52 148]
[55 147]
[56 146]
[57 145]
[58 144]
[59 140]
[61 138]
[62 137]
[64 134]
[65 133]
[66 132]
[68 130]
[70 128]
[71 127]
[87 126]
[88 125]
[89 124]
[90 123]
[91 122]
[95 119]
[96 118]
[97 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
