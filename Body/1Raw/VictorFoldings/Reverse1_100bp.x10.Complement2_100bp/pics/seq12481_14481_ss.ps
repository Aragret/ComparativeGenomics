%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUUCGAAUCCCUCUCGACCCAACAAACCCAACACCGAGUCACAGUCAAGCUCUAUUAUUGAAGAACCAGAUCCGUGUACUUAUAACAACACCCCUxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[27.97897339 592.42388916]
[24.25598717 607.00250244]
[17.84101486 620.61297607]
[8.96595669 632.76324463]
[-2.04836130 643.01416016]
[-14.80377769 650.99511719]
[-28.83919144 656.41766357]
[-43.64723206 659.08569336]
[-58.69260025 658.90283203]
[-73.43141174 655.87561035]
[-87.33086395 650.11352539]
[-99.88851166 641.82482910]
[-110.65039825 631.30920410]
[-119.22748566 618.94677734]
[-125.30972290 605.18438721]
[-128.67723083 590.51959229]
[-129.20828247 575.48248291]
[-126.88368988 560.61669922]
[-121.78747559 546.45953369]
[-114.10386658 533.52282715]
[-104.11061096 522.27416992]
[-92.16897583 513.12030029]
[-78.71063232 506.39202881]
[-64.22209167 502.33264160]
[-49.22711182 501.08883667]
[-34.26774597 502.70559692]
[-29.86674881 488.36575317]
[-25.46575165 474.02587891]
[-21.06475258 459.68603516]
[-16.66375542 445.34619141]
[-20.32635498 430.90893555]
[-8.88060665 419.98623657]
[-4.58648300 405.61401367]
[-0.39947167 391.21023560]
[3.78753948 376.80645752]
[2.63606191 369.50604248]
[8.14559841 362.22024536]
[12.54659653 347.88040161]
[16.94759369 333.54055786]
[21.34859276 319.20071411]
[25.74958992 304.86087036]
[18.56599236 291.86349487]
[22.82495308 277.25814819]
[36.50649261 269.81146240]
[40.90748978 255.47161865]
[45.30848694 241.13177490]
[49.70948792 226.79193115]
[54.11048508 212.45208740]
[52.70400238 207.88800049]
[54.14971924 202.39192200]
[58.86188507 197.75434875]
[63.68788147 183.55189514]
[68.51387787 169.34944153]
[56.23959732 162.33576965]
[45.47297287 153.17446899]
[36.58494568 142.18116760]
[29.88172722 129.73461914]
[25.59426117 116.26364136]
[23.87026405 102.23234558]
[24.76913071 88.12413025]
[28.25989151 74.42507172]
[34.22228241 61.60713577]
[42.45088577 50.11193085]
[52.66220093 40.33549881]
[64.50442505 32.61465836]
[77.56956482 27.21541786]
[91.40748596 24.32378960]
[105.54144287 24.03940201]
[119.48448181 26.37204933]
[124.73120117 12.31957817]
[129.97792053 -1.73289311]
[135.22463989 -15.78536415]
[126.82624054 -28.69943428]
[127.63299561 -43.90477753]
[137.12623596 -55.58135986]
[151.50268555 -59.38342667]
[156.74940491 -73.43589783]
[161.99610901 -87.48836517]
[167.24282837 -101.54084015]
[163.77473450 -119.62546539]
[177.73629761 -130.25756836]
[182.77322388 -144.38659668]
[187.81013489 -158.51562500]
[192.84704590 -172.64465332]
[197.35467529 -186.95133972]
[201.32678223 -201.41586304]
[205.29887390 -215.88038635]
[209.27096558 -230.34490967]
[207.97163391 -236.82745361]
[209.85798645 -242.18830872]
[213.58265686 -245.17759705]
[217.98365784 -259.51745605]
[222.38465881 -273.85729980]
[225.16026306 -288.59826660]
[222.67779541 -297.38888550]
[226.40550232 -303.77056885]
[227.74374390 -318.71075439]
[229.08197021 -333.65093994]
[230.42021179 -348.59112549]
[231.75843811 -363.53131104]
[218.02305603 -369.94342041]
[207.31129456 -380.66879272]
[200.91662598 -394.41229248]
[199.61125183 -409.51434326]
[203.55281067 -424.15130615]
[212.26531982 -436.55563354]
[224.69673157 -445.22952271]
[239.34585571 -449.12548828]
[254.44377136 -447.77313232]
[268.16732788 -441.33572388]
[278.85931396 -430.59063721]
[285.22863770 -416.83535767]
[286.50616455 -401.73092651]
[282.53765869 -387.10128784]
[273.80227661 -374.71301270]
[261.35491943 -366.06207275]
[246.69862366 -362.19308472]
[245.36039734 -347.25289917]
[244.02215576 -332.31271362]
[242.68392944 -317.37252808]
[241.34568787 -302.43234253]
[240.11871338 -287.48260498]
[248.49058533 -299.92895508]
[260.75143433 -308.57025146]
[275.28811646 -312.26956177]
[290.18807983 -310.54016113]
[303.49099731 -303.60961914]
[313.44665527 -292.38977051]
[318.74514771 -278.35675049]
[318.68945312 -263.35684204]
[313.28683472 -249.36357117]
[303.24810791 -238.21797180]
[289.89407349 -231.38644409]
[274.98168945 -229.76779175]
[260.47286987 -233.57498169]
[248.27656555 -242.30711365]
[239.99737549 -254.81530762]
[236.72450256 -269.45629883]
[232.32350159 -255.11645508]
[227.92250061 -240.77659607]
[223.73548889 -226.37281799]
[219.76339722 -211.90829468]
[215.79130554 -197.44377136]
[211.81919861 -182.97924805]
[225.94813538 -188.01644897]
[238.77545166 -180.24085999]
[240.84535217 -165.38435364]
[230.63195801 -154.39860535]
[215.66421509 -155.38189697]
[206.97607422 -167.60774231]
[201.93916321 -153.47871399]
[196.90225220 -139.34968567]
[191.86532593 -125.22064972]
[196.76495361 -114.16080475]
[192.68424988 -102.34844971]
[181.29530334 -96.29412079]
[176.04858398 -82.24165344]
[170.80186462 -68.18917847]
[165.55514526 -54.13670731]
[173.92199707 -41.84305954]
[173.43980408 -26.80206680]
[164.08398438 -14.78865051]
[149.27709961 -10.53864670]
[144.03039551 3.51382494]
[138.78367615 17.56629562]
[133.53695679 31.61876678]
[146.94596863 40.02670288]
[158.32768250 51.02448654]
[167.19062805 64.13720703]
[173.15203857 78.79859924]
[175.95449829 94.37554169]
[175.47697449 110.19537354]
[171.74011230 125.57492828]
[164.90525818 139.85006714]
[155.26756287 152.40435791]
[143.24324036 162.69563293]
[129.35151672 170.27951050]
[114.19229889 174.82846069]
[98.42020416 176.14607239]
[82.71633911 174.17543030]
[77.89033508 188.37788391]
[73.06433868 202.58035278]
[68.45033264 216.85307312]
[64.04933167 231.19293213]
[59.64833450 245.53277588]
[55.24733734 259.87261963]
[50.84634018 274.21246338]
[57.99496460 288.05209351]
[53.32744980 302.53204346]
[40.08943558 309.26187134]
[35.68843842 323.60171509]
[31.28744125 337.94155884]
[26.88644409 352.28140259]
[22.48544502 366.62124634]
[18.19132233 380.99346924]
[14.00431061 395.39724731]
[9.81729889 409.80102539]
[10.42689133 418.91510010]
[5.45924044 424.38723755]
[8.80705166 439.85018921]
[-2.32390809 449.74719238]
[-6.72490597 464.08703613]
[-11.12590408 478.42687988]
[-15.52690220 492.76672363]
[-19.92790031 507.10659790]
[-6.63708353 514.15997314]
[5.07851458 523.60144043]
[14.79538155 535.08966064]
[22.16226006 548.20935059]
[26.91283989 562.48620605]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 205]
[27 204]
[28 203]
[29 202]
[30 201]
[32 199]
[33 197]
[34 196]
[35 195]
[37 194]
[38 193]
[39 192]
[40 191]
[41 190]
[44 187]
[45 186]
[46 185]
[47 184]
[48 183]
[51 182]
[52 181]
[53 180]
[69 166]
[70 165]
[71 164]
[72 163]
[76 159]
[77 158]
[78 157]
[79 156]
[81 153]
[82 152]
[83 151]
[84 150]
[85 144]
[86 143]
[87 142]
[88 141]
[91 140]
[92 139]
[93 138]
[94 122]
[96 121]
[97 120]
[98 119]
[99 118]
[100 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
