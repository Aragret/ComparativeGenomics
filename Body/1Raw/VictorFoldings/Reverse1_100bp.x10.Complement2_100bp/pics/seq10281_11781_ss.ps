%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCAGUGAGUAUCCGGUCUGAAUCCCGAUCCUACUACUAAUUAUUCUCCCUACUGUAUUGAUAAUCACCGUCCAAUCAACAAACAUCCCGAGUACCAUxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[53.87958527 801.75970459]
[44.53133774 789.99859619]
[36.87169266 777.07403564]
[31.04334450 763.22686768]
[27.15487480 748.71502686]
[25.27872086 733.80883789]
[25.44983482 718.78607178]
[27.66502953 703.92651367]
[31.88303566 689.50695801]
[38.02527618 675.79614258]
[45.97732544 663.04943848]
[55.59103775 651.50433350]
[66.68732452 641.37585449]
[79.05945587 632.85266113]
[92.47695160 626.09362793]
[106.68985748 621.22467041]
[103.80458832 606.50476074]
[93.76366425 595.50341797]
[98.70199585 580.47271729]
[95.81671906 565.75280762]
[92.93144989 551.03289795]
[90.04617310 536.31298828]
[87.16090393 521.59313965]
[84.27562714 506.87322998]
[81.56912231 504.61331177]
[79.82276154 500.93020630]
[79.69352722 496.28945923]
[81.60564423 491.43243408]
[79.38052368 476.59838867]
[77.15541077 461.76434326]
[74.93029022 446.93029785]
[72.70517731 432.09625244]
[66.83558655 445.90014648]
[55.91458511 456.18273926]
[41.78255081 461.21124268]
[26.82097816 460.13821411]
[13.55115795 453.14450073]
[4.20928621 441.40869141]
[0.36963332 426.90844727]
[2.67924762 412.08731079]
[10.74891853 399.44293213]
[23.21876526 391.10607910]
[37.98740005 388.48168945]
[52.56604385 392.01199341]
[64.49794769 401.10208130]
[71.77285767 414.22171021]
[72.44264221 399.23666382]
[73.11242676 384.25161743]
[59.75142670 380.45944214]
[47.56834412 373.77456665]
[37.18062592 364.53179932]
[29.11562729 353.19570923]
[23.78383064 340.33715820]
[21.45795441 326.60476685]
[22.25901413 312.69198608]
[26.15002060 299.30224609]
[32.93767929 287.11322021]
[42.28198624 276.74270630]
[53.71326065 268.71719360]
[66.65574646 263.44519043]
[80.45663452 261.19641113]
[81.57228088 246.23796082]
[82.68792725 231.27949524]
[83.80358124 216.32104492]
[84.91922760 201.36259460]
[86.03487396 186.40414429]
[87.15052032 171.44569397]
[88.26617432 156.48722839]
[89.38182068 141.52877808]
[90.49746704 126.57032776]
[91.61312103 111.61187744]
[85.71572876 98.93463135]
[93.42842865 87.27247620]
[94.54407501 72.31402588]
[92.02208710 66.20246887]
[92.84204102 60.57888412]
[95.92215729 56.92896271]
[97.48268127 42.01036072]
[99.04320526 27.09175491]
[91.54229736 16.59893990]
[93.14919281 4.20532513]
[102.46156311 -3.51518130]
[104.24403381 -18.40889931]
[106.02649689 -33.30261612]
[107.80896759 -48.19633484]
[109.59143066 -63.09004974]
[103.54884338 -77.71187592]
[112.74371338 -89.42953491]
[114.52617645 -104.32324982]
[115.08438873 -119.31285858]
[114.41460419 -134.29789734]
[106.06880951 -147.73881531]
[113.23009491 -160.79888916]
[112.56031036 -175.78392029]
[111.89052582 -190.76896667]
[111.22074127 -205.75399780]
[110.55094910 -220.73904419]
[96.36056519 -226.26651001]
[85.64984131 -237.09240723]
[80.27446747 -251.34109497]
[81.16577148 -266.54391479]
[88.16932678 -280.06686401]
[100.07171631 -289.56701660]
[114.81079102 -293.39840698]
[129.83291626 -290.89724731]
[142.53540039 -282.49685669]
[150.71748352 -269.65264893]
[152.96156311 -254.58999634]
[148.87882996 -239.91854858]
[139.17665100 -228.18025208]
[125.53598785 -221.40882874]
[126.20578003 -206.42378235]
[126.87556458 -191.43875122]
[127.54534912 -176.45370483]
[128.21513367 -161.46867371]
[136.51301575 -149.09957886]
[129.39964294 -134.96768188]
[130.06942749 -119.98264313]
[137.96575928 -132.73600769]
[150.83723450 -140.43827820]
[165.80834961 -141.36877441]
[179.53450012 -135.31959534]
[188.94924927 -123.64215851]
[191.94931030 -108.94523621]
[187.86447144 -94.51214600]
[177.60726929 -83.56728363]
[163.46922302 -78.55576324]
[148.60877991 -80.59716797]
[136.34580994 -89.23543549]
[129.41989136 -102.54078674]
[127.63742828 -87.64707184]
[133.80751038 -74.09054565]
[124.48514557 -61.30758286]
[122.70268250 -46.41386795]
[120.92021179 -31.52014923]
[119.13774872 -16.62643242]
[117.35528564 -1.73271537]
[125.12092590 14.00455761]
[113.96180725 28.65227699]
[112.40129089 43.57088089]
[110.84076691 58.48948669]
[109.50253296 73.42967224]
[108.38687897 88.38812256]
[114.28427124 101.06536865]
[106.57157135 112.72752380]
[105.45592499 127.68597412]
[104.34027100 142.64442444]
[103.22462463 157.60289001]
[102.10897827 172.56134033]
[100.99333191 187.51979065]
[99.87767792 202.47824097]
[98.76203156 217.43669128]
[97.64638519 232.39515686]
[96.53073120 247.35360718]
[95.41508484 262.31204224]
[110.72815704 267.52703857]
[124.16941071 276.50878906]
[134.83258057 288.64505005]
[142.00042725 303.11114502]
[145.19297791 318.92593384]
[144.19967651 335.01837158]
[139.09324646 350.30010986]
[130.22438049 363.73907471]
[118.19773102 374.42907715]
[103.83060455 381.65109253]
[88.09746552 384.92141724]
[87.42768097 399.90646362]
[86.75789642 414.89147949]
[87.53922272 429.87112427]
[89.76433563 444.70516968]
[91.98945618 459.53921509]
[94.21456909 474.37326050]
[96.43968964 489.20730591]
[98.99552155 503.98794556]
[101.88079071 518.70782471]
[104.76606750 533.42773438]
[107.65133667 548.14764404]
[110.53661346 562.86755371]
[113.42188263 577.58740234]
[123.66918182 589.64160156]
[118.52447510 603.61950684]
[121.40975189 618.33935547]
[136.40905762 617.48242188]
[151.38536072 618.67596436]
[166.05961609 621.89770508]
[180.15849304 627.08764648]
[193.41932678 634.14910889]
[205.59506226 642.95050049]
[216.45889282 653.32794189]
[225.80841064 665.08807373]
[233.46945190 678.01177979]
[239.29930115 691.85827637]
[243.18934631 706.36968994]
[245.06710815 721.27569580]
[244.89761353 736.29852295]
[242.68403625 751.15832520]
[238.46759033 765.57824707]
[232.32682800 779.28973389]
[224.37615967 792.03735352]
[214.76370239 803.58349609]
[203.66851807 813.71319580]
[191.29730225 822.23767090]
[177.88053894 828.99816895]
[163.66815186 833.86871338]
[148.92494202 836.75854492]
[133.92552185 837.61389160]
[118.94936371 836.41876221]
[104.27544403 833.19543457]
[90.17713165 828.00396729]
[76.91706848 820.94104004]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 182]
[17 181]
[19 179]
[20 178]
[21 177]
[22 176]
[23 175]
[24 174]
[28 173]
[29 172]
[30 171]
[31 170]
[32 169]
[46 168]
[47 167]
[48 166]
[61 155]
[62 154]
[63 153]
[64 152]
[65 151]
[66 150]
[67 149]
[68 148]
[69 147]
[70 146]
[71 145]
[73 143]
[74 142]
[77 141]
[78 140]
[79 139]
[82 137]
[83 136]
[84 135]
[85 134]
[86 133]
[88 131]
[89 130]
[90 118]
[91 117]
[93 115]
[94 114]
[95 113]
[96 112]
[97 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
