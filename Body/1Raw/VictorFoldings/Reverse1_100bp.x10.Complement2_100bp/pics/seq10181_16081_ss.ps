%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCAUUUUCCUCCCGUUAAAGAUCUAGUUUAUUAUUCUUCCAUUAUCGAUGAUUCUUCUUAAAAUACCUCUUUCCCUGCGCCCGCCCCCUAUAUCCCAGxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[201.40472412 226.65806580]
[207.81071472 213.08378601]
[215.39132690 200.12878418]
[203.16484070 191.43896484]
[190.93835449 182.74914551]
[188.15507507 183.08297729]
[185.07183838 182.33442688]
[182.10028076 180.38374329]
[179.68768311 177.26220703]
[178.26368713 173.16023254]
[166.57611084 163.75808716]
[151.84197998 165.61309814]
[139.85517883 156.24447632]
[138.00936890 140.77738953]
[126.32179260 131.37522888]
[114.63420868 121.97308350]
[102.94663239 112.57093048]
[109.24887848 126.18275452]
[112.15881348 140.89778137]
[111.51187134 155.88383484]
[107.34464264 170.29335022]
[99.89279175 183.31140137]
[89.57776642 194.20178223]
[76.98292542 202.34855652]
[62.82057571 207.29101562]
[47.89166260 208.74960327]
[33.04048538 206.64186096]
[19.10695648 201.08699036]
[6.87907982 192.39912415]
[-2.95159745 181.06961060]
[-9.82910252 167.73919678]
[-13.36448002 153.16177368]
[-13.35778618 138.16177368]
[-9.80939960 123.58752441]
[-2.91999984 110.26325226]
[6.92078543 98.94252014]
[19.15641022 90.26557159]
[33.09489441 84.72312164]
[47.94794464 82.62863922]
[62.87555313 84.10055542]
[77.03348541 89.05564880]
[89.62187195 97.21435547]
[81.96127319 84.31802368]
[74.30067444 71.42169952]
[66.64008331 58.52537155]
[58.97948456 45.62904358]
[51.31888580 32.73271942]
[45.74901962 29.17067719]
[43.19723511 24.09274292]
[43.62877655 19.33639908]
[36.35554886 6.21770430]
[29.08231926 -6.90099001]
[29.38772583 8.09590054]
[25.10409927 22.47124481]
[16.63972282 34.85487747]
[4.80137110 44.06646729]
[-9.28260231 49.22803116]
[-24.26980209 49.84759140]
[-38.73174286 45.86610031]
[-51.29000473 37.66305161]
[-60.74761581 26.02030373]
[-66.20314026 12.04756927]
[-67.13658142 -2.92335844]
[-63.45897675 -17.46554756]
[-55.52085495 -30.19292641]
[-44.07882309 -39.89240646]
[-30.22346306 -45.63949203]
[-15.27537918 -46.88640594]
[-0.65932828 -43.51430511]
[12.23158073 -35.84459305]
[22.16928101 -24.60734558]
[18.62960815 -39.18371964]
[15.08993530 -53.76009369]
[11.55026245 -68.33647156]
[-4.38779736 -71.60941315]
[-17.25692749 -81.46990204]
[-24.51156807 -95.90355682]
[-24.74466705 -111.99794006]
[-17.96030617 -126.53018951]
[-5.56271744 -136.61236572]
[-9.31901836 -151.13442993]
[-13.07531929 -165.65649414]
[-16.83161926 -180.17854309]
[-31.88173866 -179.62358093]
[-46.69921494 -182.31735229]
[-60.59101105 -188.13388062]
[-72.90737915 -196.80113220]
[-83.07226562 -207.91369629]
[-90.61023712 -220.95184326]
[-95.16872406 -235.30574036]
[-96.53452301 -250.30401611]
[-94.64375305 -265.24520874]
[-89.58485413 -279.43048096]
[-81.59442902 -292.19631958]
[-71.04621124 -302.94570923]
[-58.43355560 -311.17584229]
[-44.34638596 -316.50177002]
[-29.44357872 -318.67443848]
[-14.42216778 -317.59219360]
[0.01526910 -313.30563354]
[13.19346619 -306.01528931]
[24.49605560 -296.06210327]
[33.39439774 -283.91165161]
[39.47229385 -270.13220215]
[42.44547653 -255.36825562]
[42.17488098 -240.31034851]
[38.67316437 -225.66275024]
[32.10411072 -212.11056519]
[22.77496338 -200.28765869]
[11.12206364 -190.74700928]
[-2.30956030 -183.93484497]
[1.44674039 -169.41279602]
[5.20304108 -154.89073181]
[8.95934200 -140.36866760]
[22.68406677 -138.34378052]
[34.63812256 -131.21830750]
[42.99979019 -120.03967285]
[46.48019028 -106.47584534]
[44.52188110 -92.56647491]
[37.38782120 -80.41619110]
[26.12663841 -71.87614441]
[29.66631126 -57.29976654]
[33.20598221 -42.72339249]
[36.74565506 -28.14701653]
[42.20101166 -14.17421913]
[49.47424316 -1.05552530]
[56.74747086 12.06316853]
[64.21520996 25.07212067]
[71.87580872 37.96844864]
[79.53640747 50.86477661]
[87.19700623 63.76110077]
[94.85760498 76.65742493]
[102.51819611 89.55375671]
[112.34877777 100.88334656]
[124.03636169 110.28549957]
[135.72393799 119.68765259]
[147.41152954 129.08979797]
[162.91496277 127.57942200]
[174.63389587 137.28103638]
[175.97825623 152.07049561]
[187.66584778 161.47265625]
[199.62817383 170.52265930]
[211.85466003 179.21247864]
[224.08114624 187.90229797]
[233.82366943 176.48384094]
[244.53721619 165.97113037]
[256.13796997 156.44642639]
[268.53515625 147.98426819]
[281.63168335 140.65090942]
[295.32510376 134.50373840]
[309.50823975 129.59085083]
[324.07006836 125.95070648]
[338.89663696 123.61179352]
[353.87191772 122.59242249]
[368.87866211 122.90056610]
[383.79943848 124.53382111]
[398.51751709 127.47939301]
[412.91763306 131.71423340]
[426.88714600 137.20520020]
[440.31668091 143.90931702]
[453.10113525 151.77410889]
[465.14047241 160.73803711]
[476.34048462 170.73092651]
[486.61346436 181.67457581]
[495.87902832 193.48333740]
[504.06466675 206.06478882]
[511.10629272 219.32046509]
[516.94885254 233.14662170]
[521.54656982 247.43502808]
[524.86346436 262.07388306]
[526.87359619 276.94857788]
[527.56121826 291.94274902]
[526.92089844 306.93899536]
[524.95776367 321.81997681]
[521.68707275 336.46923828]
[517.13452148 350.77209473]
[511.33566284 364.61660767]
[504.33590698 377.89443970]
[496.19003296 390.50167847]
[486.96179199 402.33963013]
[476.72341919 413.31567383]
[465.55502319 423.34387207]
[453.54403687 432.34576416]
[440.78445435 440.25085449]
[427.37615967 446.99734497]
[413.42407227 452.53237915]
[399.03738403 456.81268311]
[384.32870483 459.80468750]
[369.41314697 461.48504639]
[354.40744019 461.84057617]
[339.42901611 460.86846924]
[324.59515381 458.57638550]
[310.02188110 454.98223877]
[295.82333374 450.11416626]
[282.11056519 444.01025391]
[268.99093628 436.71826172]
[256.56710815 428.29528809]
[244.93634033 418.80725098]
[234.18963623 408.32843018]
[224.41113281 396.94079590]
[215.67733765 384.73345947]
[208.05661011 371.80203247]
[201.60859680 358.24765015]
[196.38377380 344.17645264]
[192.42301941 329.69854736]
[189.75732422 314.92724609]
[188.40757751 299.97811890]
[188.38432312 284.96823120]
[189.68774414 270.01501465]
[192.30764771 255.23550415]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 144]
[4 143]
[5 142]
[10 141]
[11 140]
[14 137]
[15 136]
[16 135]
[17 134]
[42 133]
[43 132]
[44 131]
[45 130]
[46 129]
[47 128]
[50 127]
[51 126]
[52 125]
[71 124]
[72 123]
[73 122]
[74 121]
[80 114]
[81 113]
[82 112]
[83 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
