%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[150.90162659 365.75607300]
[158.70791626 352.83459473]
[169.71168518 342.49923706]
[183.09637451 335.51693726]
[179.99226379 320.84164429]
[176.88815308 306.16635132]
[173.78405762 291.49102783]
[170.67994690 276.81573486]
[167.57583618 262.14044189]
[162.12046814 248.16763306]
[154.45986938 235.27131653]
[146.79927063 222.37498474]
[139.13868713 209.47865295]
[125.98659515 202.48780823]
[125.59094238 186.67155457]
[117.93034363 173.77522278]
[110.26974487 160.87889099]
[102.60915375 147.98257446]
[103.77762604 162.93698120]
[101.85401917 177.81314087]
[96.92011261 191.97846985]
[89.18571472 204.83067322]
[78.97968292 215.82325745]
[66.73599243 224.48881531]
[52.97524261 230.45889282]
[38.28255081 233.47962952]
[23.28266144 233.42257690]
[8.61337090 230.29017639]
[-5.10157061 224.21560669]
[-17.27899742 215.45716858]
[-27.40112114 204.38726807]
[-35.03754425 191.47660828]
[-39.86355591 177.27416992]
[-41.67396164 162.38381958]
[-40.39177322 147.43872070]
[-36.07151413 133.07434082]
[-28.89688492 119.90146637]
[-19.17295265 108.48020935]
[-7.31318378 99.29620361]
[6.17813826 92.73996735]
[20.72735596 89.09027100]
[35.71582794 88.50230408]
[50.50623703 91.00106049]
[64.46968842 96.48029327]
[77.01245117 104.70703125]
[87.60119629 115.33145905]
[95.78575897 127.90198517]
[94.00329590 113.00826263]
[85.77754974 101.70213318]
[91.10298920 88.77420044]
[89.32051849 73.88048553]
[87.53805542 58.98676682]
[85.75559235 44.09304810]
[82.62554932 39.91573715]
[81.52127075 35.40642548]
[82.22998810 31.39235497]
[84.24143219 28.49642372]
[83.12578583 13.53797054]
[82.01013947 -1.42048287]
[80.89448547 -16.37893677]
[79.77883911 -31.33738899]
[78.66319275 -46.29584122]
[72.76309204 -32.50494385]
[63.10604858 -21.02707481]
[50.52748871 -12.85518265]
[36.11558533 -8.69621944]
[21.11710739 -8.90997696]
[6.82957792 -13.47796249]
[-5.51099062 -22.00499916]
[-14.83701515 -33.75341415]
[-20.34170151 -47.70685196]
[-21.54883957 -62.65820312]
[-18.35399818 -77.31401825]
[-11.03356552 -90.40643311]
[-0.22083092 -100.80281067]
[13.14879608 -107.60377502]
[27.91870880 -110.22096252]
[42.81116104 -108.42796326]
[56.53781128 -102.37989807]
[67.91115570 -92.59997559]
[75.94730377 -79.93425751]
[79.95059967 -65.48194885]
[83.05471039 -80.15724945]
[86.15882111 -94.83255005]
[89.26293182 -109.50785065]
[92.36704254 -124.18315887]
[83.76942444 -134.55116272]
[82.72816467 -147.78468323]
[89.40003967 -159.03494263]
[101.15652466 -164.30889893]
[104.47878265 -178.93635559]
[107.80104828 -193.56381226]
[111.12330627 -208.19126892]
[114.44556427 -222.81874084]
[100.50875092 -228.45446777]
[87.65652466 -236.25296021]
[76.22178650 -246.01220703]
[66.50072479 -257.47943115]
[58.74513245 -270.35757446]
[53.15590668 -284.31311035]
[49.87781525 -298.98452759]
[48.99577332 -313.99179077]
[50.53262329 -328.94619751]
[54.44855881 -343.46038818]
[60.64215088 -357.15838623]
[68.95296478 -369.68542480]
[79.16574097 -380.71697998]
[91.01593018 -389.96734619]
[104.19658661 -397.19689941]
[118.36631012 -402.21835327]
[133.15806580 -404.90167236]
[148.18870544 -405.17736816]
[163.06890869 -403.03823853]
[177.41323853 -398.53973389]
[190.85012817 -391.79840088]
[203.03155518 -382.98880005]
[213.64196777 -372.33914185]
[222.40655518 -360.12527466]
[229.09828186 -346.66357422]
[233.54380798 -332.30276489]
[235.62799072 -317.41476440]
[235.29684448 -302.38525391]
[232.55894470 -287.60348511]
[227.48521423 -273.45239258]
[220.20707703 -260.29852295]
[210.91304016 -248.48254395]
[199.84385681 -238.31056213]
[187.28623962 -230.04603577]
[173.56546021 -223.90303040]
[159.03691101 -220.04069519]
[144.07693481 -218.55905151]
[129.07302856 -219.49647522]
[125.75076294 -204.86901855]
[122.42850494 -190.24154663]
[119.10624695 -175.61408997]
[115.78398895 -160.98663330]
[125.34661102 -147.15206909]
[121.87636566 -130.35112000]
[107.04234314 -121.07904816]
[103.93823242 -106.40373993]
[100.83412170 -91.72843933]
[97.73001099 -77.05313873]
[94.62590790 -62.37783432]
[93.62164307 -47.41149139]
[94.73728943 -32.45303726]
[95.85294342 -17.49458504]
[96.96858978 -2.53613162]
[98.08423615 12.42232132]
[99.19989014 27.38077545]
[100.64930725 42.31058502]
[102.43177032 57.20429993]
[104.21424103 72.09801483]
[105.99670410 86.99173737]
[114.22245026 98.29786682]
[108.89701080 111.22579956]
[110.67948151 126.11951447]
[115.50547791 140.32197571]
[123.16607666 153.21829224]
[130.82667542 166.11462402]
[138.48727417 179.01095581]
[152.18728638 186.92422485]
[152.03500366 201.81805420]
[159.69560242 214.71438599]
[167.35620117 227.61071777]
[175.01679993 240.50703430]
[173.94526672 225.54536438]
[176.73040771 210.80619812]
[183.18748474 197.26713562]
[192.88824463 185.82618713]
[205.18923950 177.24217224]
[219.27462769 172.08445740]
[234.21014404 170.69511414]
[249.00518799 173.16630554]
[262.67843628 179.33412170]
[274.32302856 188.78948975]
[283.16656494 200.90524292]
[288.62255859 214.87779236]
[290.32907104 229.78041077]
[288.17294312 244.62463379]
[282.29714966 258.42590332]
[273.09146118 270.26885986]
[261.16644287 279.36798096]
[247.31303406 285.11972046]
[232.45005798 287.14263916]
[217.56335449 285.30255127]
[203.64028931 279.72149658]
[191.60433960 270.76962280]
[182.25112915 259.03631592]
[185.35523987 273.71163940]
[188.45935059 288.38693237]
[191.56346130 303.06222534]
[194.66757202 317.73751831]
[197.77168274 332.41284180]
[212.83728027 333.37734985]
[227.08360291 338.37182617]
[239.45349121 347.02563477]
[249.02899170 358.69665527]
[255.09954834 372.51876831]
[257.21469116 387.46630859]
[255.21746826 402.43005371]
[249.25607300 416.29959106]
[239.77288818 428.04571533]
[227.47163391 436.79681396]
[213.26512146 441.90347290]
[198.20759583 442.98672485]
[183.41641235 439.96621704]
[169.98918152 433.06607056]
[158.92228699 422.79833984]
[151.03697205 409.92492676]
[146.91836548 395.40118408]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 193]
[5 192]
[6 191]
[7 190]
[8 189]
[9 188]
[10 165]
[11 164]
[12 163]
[13 162]
[15 160]
[16 159]
[17 158]
[18 157]
[47 156]
[48 155]
[50 153]
[51 152]
[52 151]
[53 150]
[57 149]
[58 148]
[59 147]
[60 146]
[61 145]
[62 144]
[82 143]
[83 142]
[84 141]
[85 140]
[86 139]
[90 136]
[91 135]
[92 134]
[93 133]
[94 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
