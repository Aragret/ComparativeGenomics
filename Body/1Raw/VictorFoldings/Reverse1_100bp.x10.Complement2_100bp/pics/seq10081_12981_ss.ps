%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCGGCGUGAGCAUUCCCCACCUAAAAAGAUACAUCGGCAACUCAACACCAUCAGUUUUACAUUAUUAAUAAUCAUCAUUCCGAUCCUCCCACAACUAAxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[93.86627960 590.57098389]
[98.98940277 576.28399658]
[108.93058014 564.81506348]
[122.34535980 557.71514893]
[120.56288910 542.82147217]
[118.78042603 527.92773438]
[116.99796295 513.03399658]
[105.73798370 499.57369995]
[113.12540436 482.70635986]
[111.12139130 467.84082031]
[109.11737823 452.97528076]
[98.08570099 463.13906860]
[83.23867798 461.00222778]
[75.52098846 448.13998413]
[80.62182617 434.03390503]
[94.78103638 429.08245850]
[107.56008148 436.93429565]
[106.66725922 421.96087646]
[105.77444458 406.98748779]
[104.88162994 392.01406860]
[103.98881531 377.04067993]
[103.09600067 362.06726074]
[102.20318604 347.09384155]
[101.31036377 332.12045288]
[88.68215179 324.26766968]
[83.03263092 310.31967163]
[86.72262573 295.54681396]
[98.54039001 285.66516113]
[97.64757538 270.69177246]
[96.75476074 255.71835327]
[95.86193848 240.74494934]
[94.96912384 225.77154541]
[94.07630920 210.79814148]
[93.18349457 195.82473755]
[90.26942444 192.04092407]
[89.70139313 186.38633728]
[92.49376678 180.39349365]
[92.04715729 165.40013123]
[89.74534607 162.72918701]
[88.62287903 158.81062317]
[89.25203705 154.21089172]
[91.93050385 149.73062134]
[92.15383148 134.73228455]
[92.37715912 119.73394012]
[92.60048676 104.73560333]
[90.67064667 102.37653351]
[89.55652618 99.26313019]
[89.53916931 95.69618225]
[90.78456116 92.07606506]
[93.31015778 88.85824585]
[94.42580414 73.89979553]
[87.73634338 59.56237030]
[96.39882660 47.44582367]
[97.51447296 32.48736954]
[98.63011932 17.52891731]
[99.74577332 2.57046390]
[100.86141968 -12.38798904]
[101.97706604 -27.34644318]
[90.32082367 -40.39064407]
[91.67823029 -57.49246597]
[104.72245789 -68.10787964]
[105.61527252 -83.08128357]
[98.71308899 -97.31752014]
[107.19421387 -109.56169891]
[108.08702850 -124.53510284]
[108.64524078 -139.52471924]
[108.86856842 -154.52305603]
[109.09189606 -169.52139282]
[109.31522369 -184.51972961]
[109.53855133 -199.51806641]
[109.09194183 -214.51141357]
[107.97629547 -229.46986389]
[106.86064911 -244.42831421]
[90.88986969 -247.69769287]
[76.49397278 -255.31726074]
[64.82975006 -266.66586304]
[56.83199310 -280.82308960]
[53.13857269 -296.64382935]
[54.03956985 -312.85098267]
[59.45452881 -328.13851929]
[68.93954468 -341.27673340]
[81.72366333 -351.21112061]
[96.77153015 -357.14706421]
[95.21100616 -372.06567383]
[93.65048218 -386.98428345]
[92.08995819 -401.90289307]
[90.52943420 -416.82147217]
[88.96891022 -431.74008179]
[87.40839386 -446.65869141]
[85.84786987 -461.57730103]
[84.28734589 -476.49591064]
[69.40383911 -479.02252197]
[55.75441742 -485.47201538]
[44.35196304 -495.36578369]
[36.04261398 -507.96963501]
[31.44297218 -522.34832764]
[30.89436722 -537.43475342]
[34.43750763 -552.10955811]
[41.80947113 -565.28363037]
[52.46320343 -575.97943115]
[65.60813141 -583.40325928]
[80.26881409 -587.00427246]
[95.35733032 -586.51513672]
[109.75401306 -581.97222900]
[122.39053345 -573.71258545]
[132.32917786 -562.34924316]
[138.83242798 -548.72534180]
[141.41769409 -533.85192871]
[139.89315796 -518.83264160]
[134.37191772 -504.78210449]
[125.26371765 -492.74285889]
[113.24442291 -483.60836792]
[99.20594788 -478.05642700]
[100.76647186 -463.13781738]
[102.32699585 -448.21920776]
[103.88751984 -433.30062866]
[105.44804382 -418.38201904]
[107.00856781 -403.46340942]
[108.56908417 -388.54479980]
[110.12960815 -373.62619019]
[111.69013214 -358.70758057]
[125.31740570 -356.70260620]
[138.07437134 -351.48196411]
[149.21353149 -343.34637451]
[158.08096313 -332.76757812]
[164.15469360 -320.36090088]
[167.07539368 -306.84945679]
[166.66770935 -293.02206421]
[162.95071411 -279.68707275]
[156.13710022 -267.62530518]
[146.62100220 -257.54409790]
[134.95523071 -250.03602600]
[121.81909943 -245.54397583]
[122.93475342 -230.58551025]
[124.05039978 -215.62705994]
[134.63391113 -226.25671387]
[149.63293457 -226.42723083]
[160.45536804 -216.04093933]
[160.90161133 -201.04757690]
[150.71604919 -190.03602600]
[135.73342896 -189.31419373]
[124.53688812 -199.29473877]
[124.31356049 -184.29640198]
[124.09023285 -169.29806519]
[123.86690521 -154.29972839]
[123.64357758 -139.30139160]
[125.82382965 -136.53031921]
[126.77021027 -132.56553650]
[125.93628693 -127.99849701]
[123.06043243 -123.64228821]
[122.16761780 -108.66888428]
[129.13366699 -95.50363922]
[120.58867645 -82.18846893]
[119.69586182 -67.21506500]
[129.51290894 -58.86910248]
[132.77926636 -46.20367813]
[128.08546448 -33.78680420]
[116.93552399 -26.23079491]
[115.81987000 -11.27234077]
[114.70422363 3.68611264]
[113.58857727 18.64456558]
[112.47293091 33.60301971]
[111.35727692 48.56147385]
[118.12654114 61.82896805]
[109.38425446 75.01544189]
[108.26860809 89.97389221]
[107.59882355 104.95893097]
[107.37549591 119.95727539]
[107.15216827 134.95561218]
[106.92884064 149.95394897]
[107.04050446 164.95353699]
[107.48711395 179.94688416]
[108.15689850 194.93191528]
[109.04971313 209.90531921]
[109.94252777 224.87873840]
[110.83535004 239.85214233]
[111.72816467 254.82554626]
[112.62097931 269.79895020]
[113.51379395 284.77233887]
[126.42206573 293.17965698]
[131.84140015 307.40936279]
[127.88935089 321.92987061]
[116.28377533 331.22763062]
[117.17658997 346.20104980]
[118.06940460 361.17443848]
[118.96221924 376.14785767]
[119.85503387 391.12124634]
[120.74784851 406.09466553]
[121.64067078 421.06805420]
[122.53348541 436.04147339]
[123.98290253 450.97128296]
[125.98691559 465.83682251]
[127.99092865 480.70233154]
[137.75607300 489.12878418]
[139.11918640 501.55154419]
[131.89167786 511.25155640]
[133.67414856 526.14526367]
[135.45660400 541.03900146]
[137.23907471 555.93267822]
[151.95040894 559.66644287]
[164.31726074 568.46563721]
[172.66711426 581.14019775]
[175.87072754 595.97601318]
[173.49482727 610.96667480]
[165.86073303 624.08477783]
[154.00090027 633.55627441]
[139.51927185 638.10015869]
[124.37437439 637.10192871]
[110.61442566 630.69659424]
[100.10034180 619.75042725]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 199]
[5 198]
[6 197]
[7 196]
[9 193]
[10 192]
[11 191]
[17 190]
[18 189]
[19 188]
[20 187]
[21 186]
[22 185]
[23 184]
[24 183]
[28 179]
[29 178]
[30 177]
[31 176]
[32 175]
[33 174]
[34 173]
[37 172]
[38 171]
[42 170]
[43 169]
[44 168]
[45 167]
[50 166]
[51 165]
[53 163]
[54 162]
[55 161]
[56 160]
[57 159]
[58 158]
[61 154]
[62 153]
[64 151]
[65 150]
[66 146]
[67 145]
[68 144]
[69 143]
[70 142]
[71 135]
[72 134]
[73 133]
[83 121]
[84 120]
[85 119]
[86 118]
[87 117]
[88 116]
[89 115]
[90 114]
[91 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
