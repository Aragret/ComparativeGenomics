%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[117.70300293 707.76855469]
[107.32275391 696.89666748]
[98.77114105 684.53479004]
[92.25874329 670.98730469]
[87.94594574 656.58776855]
[85.93894958 641.69085693]
[86.28718567 626.66333008]
[88.98206329 611.87536621]
[93.95723724 597.69110107]
[101.09017181 584.45977783]
[110.20522308 572.50726318]
[121.07792664 562.12792969]
[133.44052124 553.57733154]
[146.98857117 547.06604004]
[161.38845825 542.75445557]
[152.02014160 531.17498779]
[157.84436035 516.46478271]
[155.84034729 501.59927368]
[153.83633423 486.73373413]
[144.46801758 475.15426636]
[150.29225159 460.44412231]
[147.84651184 445.64483643]
[144.96124268 430.92495728]
[142.07597351 416.20504761]
[132.03504944 405.20373535]
[136.97337341 390.17297363]
[134.08810425 375.45309448]
[131.38160706 373.19317627]
[129.63523865 369.51007080]
[129.50599670 364.86932373]
[131.41812134 360.01229858]
[129.19300842 345.17825317]
[119.65332794 333.73953247]
[125.25789642 318.94430542]
[123.03277588 304.11026001]
[120.80766296 289.27621460]
[118.58254242 274.44216919]
[116.35742188 259.60812378]
[114.13230896 244.77407837]
[111.90718842 229.94003296]
[98.62874603 223.24519348]
[91.75736237 209.85682678]
[94.11467743 194.81367493]
[105.00372314 183.91712952]
[95.46405029 172.47842407]
[101.06861115 157.68316650]
[98.84349060 142.84913635]
[96.61837769 128.01509094]
[94.39325714 113.18103790]
[85.83453369 102.12483215]
[90.77269745 89.04407501]
[81.07386780 76.54434204]
[86.83758545 62.81012344]
[74.41206360 53.41628265]
[72.36679840 38.34075546]
[81.39896393 26.55281448]
[79.17384338 11.71877098]
[76.94873047 -3.11527276]
[73.69570923 -7.19754219]
[72.45765686 -11.67197323]
[73.04653931 -15.70536709]
[74.97087860 -18.65990257]
[73.41035461 -33.57850647]
[71.84983063 -48.49711227]
[70.28930664 -63.41571808]
[68.72878265 -78.33432007]
[59.59777069 -91.25466156]
[65.96900177 -104.71781921]
[64.40847778 -119.63642120]
[62.84795761 -134.55502319]
[61.28743362 -149.47363281]
[55.26079178 -135.73756409]
[44.73085785 -125.05484772]
[31.08302116 -118.83097839]
[16.11289215 -117.88481140]
[1.79004753 -122.34083557]
[-10.00109482 -131.61277771]
[-17.70920753 -144.48075867]
[-20.32015610 -159.25178528]
[-17.49042702 -173.98245239]
[-9.59231663 -186.73469543]
[2.33504081 -195.83074951]
[16.72239685 -200.07385254]
[31.67684746 -198.90577698]
[45.23087692 -192.48017883]
[55.60121918 -181.64247131]
[61.42398834 -167.81620789]
[55.38140106 -182.43803406]
[64.57627106 -194.15568542]
[66.35874176 -209.04940796]
[68.14120483 -223.94313049]
[69.03401947 -238.91653442]
[69.03401947 -253.91653442]
[69.03401947 -268.91653442]
[68.92235565 -283.91610718]
[68.69902802 -298.91445923]
[68.47570038 -313.91278076]
[68.25237274 -328.91113281]
[54.23284912 -334.85864258]
[43.84919739 -345.99865723]
[38.90044785 -360.40106201]
[40.24400330 -375.57058716]
[47.64707565 -388.87902832]
[59.82704926 -398.02059937]
[74.67366028 -401.41146851]
[89.61465454 -398.46414185]
[102.06140137 -389.68927002]
[109.85743713 -376.60714722]
[111.65204620 -361.48434448]
[107.13430023 -346.94097900]
[97.08693695 -335.49673462]
[83.25070953 -329.13446045]
[83.47403717 -314.13610840]
[83.69736481 -299.13778687]
[83.92069244 -284.13943481]
[87.16342926 -277.49816895]
[84.03401947 -268.91653442]
[84.03401947 -253.91653442]
[84.03401947 -238.91653442]
[93.90906525 -250.20739746]
[108.50870514 -253.64984131]
[122.38764191 -247.95993042]
[130.36936951 -235.25985718]
[129.47691345 -220.28643799]
[120.04312897 -208.62437439]
[105.58657837 -204.62333679]
[91.49921417 -209.77561951]
[83.03491974 -222.16065979]
[81.25245667 -207.26693726]
[79.46999359 -192.37322998]
[85.64007568 -178.81669617]
[76.31771088 -166.03373718]
[76.20603943 -151.03414917]
[77.76656342 -136.11555481]
[79.32708740 -121.19694519]
[80.88761139 -106.27834320]
[89.90700531 -94.42507935]
[83.64738464 -79.89484406]
[85.20790863 -64.97624207]
[86.76843262 -50.05763626]
[88.32895660 -35.13903046]
[89.88948059 -20.22042465]
[91.78277588 -5.34039021]
[94.00788879 9.49365330]
[96.23300934 24.32769775]
[108.32624817 32.94681549]
[110.79414368 47.95894623]
[101.67163086 60.58500671]
[111.21130371 72.02370453]
[105.60674286 86.81896210]
[114.16546631 97.87516785]
[109.22730255 110.95592499]
[111.45242310 125.78997040]
[113.67753601 140.62400818]
[115.90265656 155.45805359]
[125.60148621 167.95777893]
[119.83776855 181.69200134]
[133.44462585 188.91415405]
[140.11186218 202.60362244]
[137.47102356 217.41882324]
[126.74123383 227.71490479]
[128.96635437 242.54895020]
[131.19146729 257.38299561]
[133.41658020 272.21704102]
[135.64170837 287.05108643]
[137.86682129 301.88513184]
[140.09193420 316.71917725]
[149.79077148 329.21890259]
[144.02705383 342.95312500]
[146.25216675 357.78717041]
[148.80799866 372.56781006]
[151.69326782 387.28771973]
[161.94056702 399.34188843]
[156.79586792 413.31979370]
[159.68113708 428.03967285]
[162.56640625 442.75958252]
[165.53495789 445.92843628]
[167.17568970 449.51626587]
[167.51995850 453.05419922]
[166.74815369 456.13168335]
[165.15777588 458.44009399]
[174.66943359 471.08285522]
[168.70185852 484.72973633]
[170.70587158 499.59524536]
[172.70989990 514.46081543]
[182.22154236 527.10351562]
[176.25398254 540.75042725]
[191.28155518 541.09490967]
[206.07019043 543.78613281]
[220.25570679 548.75781250]
[233.48880005 555.88745117]
[245.44355774 564.99957275]
[255.82559204 575.86968994]
[264.37924194 588.23016357]
[270.89389038 601.77661133]
[275.20904541 616.17541504]
[277.21850586 631.07202148]
[276.87274170 646.09954834]
[274.18029785 660.88800049]
[269.20748901 675.07312012]
[262.07672119 688.30560303]
[252.96365356 700.25958252]
[242.09266663 710.64074707]
[229.73147583 719.19335938]
[216.18449402 725.70690918]
[201.78532410 730.02087402]
[186.88856506 732.02911377]
[171.86105347 731.68212891]
[157.07286072 728.98846436]
[142.88815308 724.01446533]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 187]
[17 185]
[18 184]
[19 183]
[21 181]
[22 176]
[23 175]
[24 174]
[26 172]
[27 171]
[31 170]
[32 169]
[34 167]
[35 166]
[36 165]
[37 164]
[38 163]
[39 162]
[40 161]
[44 157]
[46 155]
[47 154]
[48 153]
[49 152]
[51 150]
[53 148]
[56 145]
[57 144]
[58 143]
[62 142]
[63 141]
[64 140]
[65 139]
[66 138]
[68 136]
[69 135]
[70 134]
[71 133]
[87 132]
[89 130]
[90 129]
[91 128]
[92 119]
[93 118]
[94 117]
[95 115]
[96 114]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
