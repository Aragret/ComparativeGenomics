%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCACAUACUUGUACUCCCACAAAAGAGCACACUUACUCCCAAAAUACAACAAUUACACCACCCACUCACUCGGGGUAACACAACACCAUUUAUACAUCUxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[171.17091370 544.80767822]
[168.28564453 530.08776855]
[165.40036011 515.36791992]
[162.51509094 500.64801025]
[159.62982178 485.92810059]
[155.25842285 479.96887207]
[156.81288147 470.96768188]
[154.14709473 456.20645142]
[151.48129272 441.44525146]
[148.81549072 426.68402100]
[146.14294434 424.38406372]
[144.45159912 420.67538452]
[144.39147949 416.03320312]
[146.37570190 411.20516968]
[144.37168884 396.33963013]
[132.40811157 387.54144287]
[130.16400146 372.49423218]
[139.47348022 360.00537109]
[137.46946716 345.13986206]
[135.46545410 330.27432251]
[133.46144104 315.40878296]
[131.01571655 300.60952759]
[128.13044739 285.88961792]
[125.24517059 271.16973877]
[113.65092468 265.54809570]
[107.31697083 254.10418701]
[108.75177002 240.90751648]
[117.65427399 230.80009460]
[114.98847961 216.03887939]
[112.21286774 201.29791260]
[109.32759857 186.57803345]
[106.44232178 171.85813904]
[103.55705261 157.13824463]
[100.67177582 142.41835022]
[97.78650665 127.69846344]
[86.26074982 124.15237427]
[77.32263184 116.05744171]
[72.65557098 104.93825531]
[73.13854218 92.88899994]
[78.68058777 82.17903137]
[88.23793030 74.82544708]
[85.79219818 60.02618027]
[83.34647369 45.22690964]
[80.90074921 30.42763710]
[78.45501709 15.62836647]
[76.00929260 0.82909590]
[66.12543488 -11.52484798]
[71.68402863 -25.34335899]
[69.23830414 -40.14263153]
[66.36542511 -43.39847946]
[64.83223724 -47.03356552]
[64.59346008 -50.58016968]
[65.45655060 -53.63331223]
[67.11495972 -55.89336395]
[65.55443573 -70.81196594]
[63.99391174 -85.73057556]
[61.32811356 -100.49179077]
[57.57181549 -115.01384735]
[53.59971619 -129.47837830]
[49.41270828 -143.88215637]
[45.22569656 -158.28593445]
[31.64103317 -170.71728516]
[36.48622894 -187.58415222]
[32.08523178 -201.92399597]
[27.68423462 -216.26383972]
[22.85823631 -230.46629333]
[17.61151886 -244.51876831]
[12.36480045 -258.57122803]
[6.43137360 -265.51617432]
[7.14628220 -272.87219238]
[2.10936594 -287.00122070]
[-2.92755008 -301.13024902]
[-7.96446657 -315.25927734]
[-22.70265198 -312.32604980]
[-37.71086121 -311.57009888]
[-52.66919708 -313.00747681]
[-67.25881195 -316.60760498]
[-81.16873932 -322.29370117]
[-94.10248566 -329.94461060]
[-105.78436279 -339.39718628]
[-115.96537018 -350.45001221]
[-124.42850494 -362.86749268]
[-130.99336243 -376.38488770]
[-135.52003479 -390.71414185]
[-137.91201782 -405.54977417]
[-138.11833191 -420.57559204]
[-136.13456726 -435.47131348]
[-132.00303650 -449.91943359]
[-125.81177521 -463.61199951]
[-117.69276428 -476.25714111]
[-107.81905365 -487.58532715]
[-96.40111542 -497.35510254]
[-83.68230438 -505.35821533]
[-69.93373871 -511.42407227]
[-55.44846344 -515.42340088]
[-40.53523254 -517.27093506]
[-25.51192474 -516.92730713]
[-10.69876194 -514.39990234]
[3.58851337 -509.74243164]
[17.04536629 -503.05432129]
[29.38496208 -494.47805786]
[40.34428406 -484.19647217]
[49.68973160 -472.42871094]
[57.22210693 -459.42556763]
[62.78085327 -445.46426392]
[66.24748993 -430.84234619]
[67.54812622 -415.87152100]
[66.65503693 -400.87084961]
[63.58726120 -386.16006470]
[58.41018295 -372.05276489]
[51.23415375 -358.84967041]
[42.21213531 -346.83212280]
[31.53642845 -336.25634766]
[19.43458748 -327.34774780]
[6.16456318 -320.29620361]
[11.20147896 -306.16714478]
[16.23839569 -292.03811646]
[21.27531242 -277.90908813]
[26.41727066 -263.81796265]
[31.66399002 -249.76548767]
[36.91070938 -235.71301270]
[39.40208054 -234.42802429]
[41.53456116 -232.07873535]
[42.90023422 -228.79692078]
[43.14635468 -224.85942078]
[42.02408218 -220.66484070]
[46.42507935 -206.32499695]
[50.82607651 -191.98515320]
[61.36229706 -186.04254150]
[65.14620209 -174.13179016]
[59.62947845 -162.47294617]
[63.81649017 -148.06916809]
[68.00350189 -133.66539001]
[71.68325043 -130.62095642]
[73.48957062 -125.23262024]
[72.09387207 -118.77014923]
[75.85017395 -104.24809265]
[81.38459778 -118.18975830]
[93.08679962 -127.57369995]
[107.89786530 -129.94697571]
[121.94620514 -124.68921661]
[131.55963135 -113.17478180]
[134.22520447 -98.41352844]
[129.24615479 -84.26399994]
[117.92398834 -74.42485809]
[103.21830750 -71.46803284]
[88.97312164 -76.16641998]
[78.91251373 -87.29109192]
[80.47303772 -72.37248993]
[82.03356171 -57.45388794]
[84.03757477 -42.58835602]
[86.48329926 -27.78908730]
[96.19222260 -16.49368668]
[90.80856323 -1.61663151]
[93.25428772 13.18263912]
[95.70001984 27.98191071]
[98.14574432 42.78118134]
[100.59146881 57.58045197]
[103.03720093 72.37972260]
[118.95730591 79.68436432]
[127.34442902 95.06174469]
[124.86582184 112.40141296]
[112.50640106 124.81318665]
[115.39167023 139.53308105]
[118.27693939 154.25297546]
[121.16221619 168.97286987]
[124.04748535 183.69274902]
[126.93276215 198.41264343]
[131.65441895 206.23208618]
[129.74969482 213.37309265]
[132.41549683 228.13430786]
[146.96687317 237.84391785]
[149.93534851 254.74075317]
[139.96505737 268.28445435]
[142.85034180 283.00436401]
[145.73561096 297.72424316]
[148.70414734 300.89312744]
[150.34487915 304.48095703]
[150.68916321 308.01885986]
[149.91735840 311.09634399]
[148.32696533 313.40478516]
[150.33097839 328.27032471]
[152.33499146 343.13583374]
[154.33901978 358.00137329]
[166.62329102 367.57916260]
[168.44387817 382.68347168]
[159.23721313 394.33563232]
[161.24122620 409.20117188]
[163.57672119 424.01821899]
[166.24250793 438.77944946]
[168.90830994 453.54064941]
[171.57409668 468.30187988]
[174.34971619 483.04284668]
[177.23498535 497.76272583]
[180.12025452 512.48260498]
[183.00552368 527.20251465]
[185.89080811 541.92242432]
[200.79820251 544.89526367]
[213.43040466 553.35076904]
[221.86108398 565.99957275]
[224.80462646 580.91278076]
[221.81216431 595.81628418]
[213.34002686 608.43731689]
[200.68014526 616.85137939]
[185.76307678 619.77532959]
[170.86354065 616.76324463]
[158.25363159 608.27447510]
[149.85626221 595.60357666]
[146.95196533 580.68267822]
[149.98362732 565.78710938]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 197]
[2 196]
[3 195]
[4 194]
[5 193]
[7 192]
[8 191]
[9 190]
[10 189]
[14 188]
[15 187]
[18 184]
[19 183]
[20 182]
[21 181]
[22 176]
[23 175]
[24 174]
[28 171]
[29 170]
[30 168]
[31 167]
[32 166]
[33 165]
[34 164]
[35 163]
[41 159]
[42 158]
[43 157]
[44 156]
[45 155]
[46 154]
[48 152]
[49 151]
[54 150]
[55 149]
[56 148]
[57 137]
[58 136]
[59 133]
[60 132]
[61 131]
[63 128]
[64 127]
[65 126]
[66 121]
[67 120]
[68 119]
[70 118]
[71 117]
[72 116]
[73 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
