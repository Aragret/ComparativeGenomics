%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCCCCCAAACCUACUCUUACCGACAAUGAUGCUCCCGAUACACCGACUAACUUCUCAUACGUUACUCGCUAAAAUCCAGACAAACAGCAUCCGUCUAxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[142.71697998 426.63653564]
[127.88771820 423.40274048]
[115.23017883 415.02713013]
[106.45618439 402.64239502]
[102.75235748 387.92349243]
[104.61960602 372.86102295]
[111.80539703 359.49206543]
[123.33790588 349.62466431]
[137.65747070 344.59332275]
[138.10408020 329.59997559]
[138.55068970 314.60662842]
[138.99728394 299.61328125]
[139.44389343 284.61993408]
[139.89050293 269.62655640]
[140.33711243 254.63322449]
[138.55464172 239.73950195]
[134.58255005 225.27497864]
[130.61044312 210.81045532]
[126.63835144 196.34593201]
[122.66625214 181.88140869]
[118.69416046 167.41688538]
[113.86816406 153.21443176]
[108.20537567 139.32440186]
[102.54258728 125.43437195]
[96.77655792 111.58689117]
[90.70272064 97.87162018]
[84.42536163 84.24830627]
[78.14800262 70.62499237]
[70.97263336 57.45251465]
[62.93146133 44.78998947]
[54.89028549 32.12746429]
[46.84911346 19.46493912]
[38.80794144 6.80241394]
[30.76676941 -5.86011124]
[23.52458763 -11.42685509]
[22.70176697 -18.77156448]
[14.85001087 -31.55240822]
[6.99825573 -44.33324814]
[-0.85349989 -57.11409378]
[-14.97084236 -51.90904617]
[-29.82766342 -49.55908203]
[-44.85266495 -50.15266800]
[-59.46846008 -53.66511917]
[-73.11374664 -59.95961380]
[-85.26486206 -68.79253387]
[-95.45590210 -79.82289124]
[-103.29656982 -92.62545776]
[-108.48710632 -106.70722198]
[-110.82978058 -121.52632141]
[-110.23641205 -136.51289368]
[-106.73166656 -151.09104919]
[-100.45207214 -164.70091248]
[-91.64067841 -176.82020569]
[-80.63764954 -186.98423767]
[-88.48940277 -199.76507568]
[-96.34115601 -212.54592896]
[-104.19291687 -225.32676697]
[-112.13959503 -238.04879761]
[-120.18077087 -250.71131897]
[-128.22193909 -263.37384033]
[-141.74745178 -256.84872437]
[-155.93904114 -251.93798828]
[-170.60478210 -248.70802307]
[-185.54632568 -247.20252991]
[-200.56163025 -247.44184875]
[-215.44761658 -249.42277527]
[-230.00296021 -253.11848450]
[-244.03083801 -258.47903442]
[-257.34152222 -265.43188477]
[-269.75500488 -273.88302612]
[-281.10339355 -283.71817017]
[-291.23324585 -294.80432129]
[-300.00756836 -306.99154663]
[-307.30764771 -320.11499023]
[-313.03482056 -333.99722290]
[-317.11157227 -348.45046997]
[-319.48281860 -363.27929688]
[-320.11648560 -378.28311157]
[-319.00399780 -393.25906372]
[-316.16036987 -408.00457764]
[-311.62408447 -422.32025146]
[-305.45651245 -436.01251221]
[-297.74102783 -448.89611816]
[-288.58197021 -460.79690552]
[-278.10324097 -471.55386353]
[-266.44653320 -481.02157593]
[-253.76947021 -489.07199097]
[-240.24353027 -495.59619141]
[-226.05160522 -500.50601196]
[-211.38566589 -503.73498535]
[-196.44400024 -505.23947144]
[-181.42872620 -504.99914551]
[-166.54287720 -503.01724243]
[-151.98776245 -499.32055664]
[-137.96025085 -493.95907593]
[-124.65003204 -487.00534058]
[-112.23711395 -478.55334473]
[-100.88936615 -468.71743774]
[-90.76025391 -457.63061523]
[-81.98676300 -445.44284058]
[-74.68754578 -432.31887817]
[-68.96131134 -418.43627930]
[-64.88550568 -403.98275757]
[-62.51524734 -389.15377808]
[-61.88259125 -374.14990234]
[-62.99609375 -359.17404175]
[-65.84069824 -344.42871094]
[-70.37792969 -330.11334229]
[-76.54643250 -316.42150879]
[-84.26277924 -303.53839111]
[-93.42261505 -291.63824463]
[-103.90206909 -280.88195801]
[-115.55941772 -271.41500854]
[-107.51824188 -258.75250244]
[-99.47707367 -246.08998108]
[-93.23770142 -242.12864685]
[-91.41207123 -233.17851257]
[-83.56031799 -220.39767456]
[-75.70855713 -207.61683655]
[-67.85680389 -194.83599854]
[-53.81694412 -200.05676270]
[-39.02356720 -202.43876648]
[-24.04494476 -201.88864136]
[-9.45682621 -198.42561340]
[4.17968082 -192.18098450]
[16.33969498 -183.39305115]
[26.55476570 -172.39805603]
[34.43091583 -159.61727905]
[39.66384506 -145.54096985]
[42.05067444 -130.70947266]
[41.49781799 -115.69252777]
[38.02465820 -101.06734467]
[31.76285362 -87.39646912]
[22.95136833 -75.20610046]
[11.92734241 -64.96585083]
[19.77909851 -52.18500519]
[27.63085365 -39.40416336]
[35.48260880 -26.62331963]
[43.42929459 -13.90128422]
[51.47046661 -1.23875916]
[59.51163864 11.42376614]
[67.55281067 24.08629036]
[75.59398651 36.74881744]
[83.63515472 49.41133881]
[85.19756317 34.49293137]
[94.49411774 22.72118759]
[108.64419556 17.74370956]
[123.26323700 21.10282516]
[133.82138062 31.75767326]
[137.04704285 46.40673447]
[131.94075012 60.51084137]
[120.08473206 69.69967651]
[105.15269470 71.12598419]
[91.77131653 64.34762573]
[98.04867554 77.97094727]
[104.32603455 91.59426117]
[108.70788574 94.47755432]
[111.16236115 99.61066437]
[110.58073425 105.71792603]
[116.81835175 112.39100647]
[116.43261719 119.77159119]
[122.09540558 133.66162109]
[127.75818634 147.55163574]
[132.63996887 133.36827087]
[144.85968018 124.66890717]
[159.85964966 124.69821167]
[172.04527283 133.44525146]
[176.87161255 147.64758301]
[172.53855896 162.00810242]
[160.66223145 171.17070007]
[145.67221069 171.71792603]
[133.15867615 163.44479370]
[137.13078308 177.90931702]
[141.10287476 192.37384033]
[145.07496643 206.83836365]
[149.04707336 221.30288696]
[153.01916504 235.76741028]
[156.07061768 221.08106995]
[163.08522034 207.82228088]
[173.50976562 197.03669739]
[186.52212524 189.57490540]
[201.09611511 186.02537537]
[216.08233643 186.66804504]
[230.29893494 191.45222473]
[242.62472534 200.00061035]
[252.08763123 211.63905334]
[257.94140625 225.44967651]
[259.72433472 240.34333801]
[257.29586792 255.14544678]
[250.84750366 268.68865967]
[240.88778687 279.90490723]
[228.20216370 287.90957642]
[213.79109192 292.07147217]
[198.79110718 292.06228638]
[184.38513184 287.88281250]
[171.70930481 279.86260986]
[161.76330566 268.63421631]
[155.33045959 255.07981873]
[154.88385010 270.07318115]
[154.43724060 285.06652832]
[153.99063110 300.05987549]
[153.54403687 315.05322266]
[153.09742737 330.04656982]
[152.65081787 345.03991699]
[166.64552307 350.91467285]
[177.57026672 361.45101929]
[183.94758606 375.22396851]
[184.91499329 390.37088013]
[180.34164429 404.84323120]
[170.84605408 416.68374634]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 204]
[10 203]
[11 202]
[12 201]
[13 200]
[14 199]
[15 198]
[16 177]
[17 176]
[18 175]
[19 174]
[20 173]
[21 172]
[22 163]
[23 162]
[24 161]
[25 159]
[26 156]
[27 155]
[28 154]
[29 144]
[30 143]
[31 142]
[32 141]
[33 140]
[34 139]
[36 138]
[37 137]
[38 136]
[39 135]
[54 120]
[55 119]
[56 118]
[57 117]
[58 115]
[59 114]
[60 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
