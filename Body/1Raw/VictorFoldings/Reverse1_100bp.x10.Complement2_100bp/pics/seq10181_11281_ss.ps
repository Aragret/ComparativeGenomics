%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCAUUUUCCUCCCGUUAAAGAUCUAGUUUAUUAUUCUUCCAUUAUCGAUGAUUCUUCUUAAAAUACCUCUUUCCCUGCGCCCGCCCCCUAUAUCCCAGxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[79.40985870 640.60339355]
[65.28073120 645.66510010]
[50.78604126 649.55822754]
[36.02225113 652.25701904]
[21.08761024 653.74340820]
[6.08150911 654.00750732]
[-8.89618683 653.04754639]
[-23.74580193 650.86999512]
[-38.36851120 647.48931885]
[-52.66700745 642.92797852]
[-66.54612732 637.21636963]
[-79.91351318 630.39245605]
[-92.68020630 622.50164795]
[-104.76123810 613.59649658]
[-116.07621765 603.73626709]
[-126.54983521 592.98657227]
[-136.11239624 581.41894531]
[-144.70027161 569.11035156]
[-152.25628662 556.14276123]
[-158.73017883 542.60235596]
[-164.07884216 528.57934570]
[-168.26670837 514.16705322]
[-171.26588440 499.46136475]
[-173.05642700 484.56011963]
[-173.62641907 469.56253052]
[-172.97206116 454.56835938]
[-171.09770203 439.67745972]
[-168.01582336 424.98886108]
[-163.74693298 410.60034180]
[-158.31944275 396.60766602]
[-151.76947021 383.10394287]
[-144.14060974 370.17901611]
[-135.48362732 357.91894531]
[-125.85612488 346.40530396]
[-115.32218170 335.71469116]
[-103.95191193 325.91830444]
[-91.82096100 317.08126831]
[-79.01007843 309.26245117]
[-65.60450745 302.51385498]
[-51.69346619 296.88040161]
[-37.36953354 292.39959717]
[-22.72803116 289.10122681]
[-7.86639977 287.00726318]
[7.11645985 286.13162231]
[22.12083626 286.48016357]
[37.04687881 288.05053711]
[51.79524994 290.83233643]
[55.76734543 276.36779785]
[59.73944473 261.90328979]
[63.71154022 247.43875122]
[67.68363190 232.97422791]
[71.00589752 218.34677124]
[73.67169189 203.58555603]
[76.33748627 188.82434082]
[79.00328064 174.06311035]
[81.66907501 159.30189514]
[68.01248932 153.19338989]
[56.21414566 143.99473572]
[46.95944595 132.24031067]
[40.78601456 118.61294556]
[38.05248642 103.90431213]
[38.91766357 88.96886444]
[43.33127975 74.67424011]
[51.03693771 61.85086441]
[61.58699417 51.24367523]
[74.36856842 43.46887589]
[88.63914490 38.97812653]
[103.56970215 38.03230667]
[106.23550415 23.27108765]
[108.90129852 8.50987053]
[111.56709290 -6.25134659]
[96.41035461 -13.16893864]
[83.55141449 -23.74637985]
[73.85251617 -37.26750946]
[67.96223450 -52.81901550]
[66.27208710 -69.35211945]
[68.89054871 -85.75332642]
[75.63610077 -100.91938782]
[86.04975891 -113.83152771]
[99.42636871 -123.62390137]
[114.86230469 -129.64160156]
[131.31651306 -131.48449707]
[133.32052612 -146.35002136]
[135.32453918 -161.21554565]
[137.32855225 -176.08108521]
[122.80300903 -179.90051270]
[108.85693359 -185.47604370]
[95.70175934 -192.72319031]
[83.53691101 -201.53204346]
[72.54679871 -211.76908875]
[62.89803314 -223.27912903]
[54.73688889 -235.88766479]
[48.18708801 -249.40357971]
[43.34792328 -263.62194824]
[40.29275131 -278.32723999]
[39.06789017 -293.29650879]
[39.69190979 -308.30285645]
[42.15534973 -323.11877441]
[46.42086411 -337.51962280]
[52.42378998 -351.28713989]
[60.07312393 -364.21258545]
[69.25289917 -376.10003662]
[79.82395935 -386.76925659]
[91.62605286 -396.05853271]
[104.48024750 -403.82699585]
[118.19169617 -409.95690918]
[132.55252075 -414.35534668]
[147.34503174 -416.95562744]
[162.34495544 -417.71832275]
[177.32492065 -416.63186646]
[192.05781555 -413.71273804]
[206.32031250 -409.00518799]
[219.89617920 -402.58059692]
[232.57962036 -394.53634644]
[244.17834473 -384.99435425]
[254.51652527 -374.09933472]
[263.43743896 -362.01641846]
[270.80584717 -348.92880249]
[276.51007080 -335.03485107]
[280.46359253 -320.54522705]
[282.60647583 -305.67956543]
[282.90628052 -290.66326904]
[281.35842896 -275.72390747]
[277.98641968 -261.08804321]
[272.84130859 -246.97749329]
[266.00115967 -233.60618591]
[257.56961060 -221.17683411]
[247.67453003 -209.87785339]
[236.46591187 -199.88053894]
[224.11366272 -191.33644104]
[210.80503845 -184.37509155]
[196.74180603 -179.10203552]
[182.13716125 -175.59718323]
[167.21250916 -173.91368103]
[152.19409180 -174.07707214]
[150.19007874 -159.21153259]
[148.18606567 -144.34600830]
[146.18205261 -129.48048401]
[158.77249146 -124.81427002]
[170.11332703 -117.61318207]
[179.70092773 -108.19374847]
[187.10881042 -96.97106171]
[192.00666809 -84.44054413]
[194.17506409 -71.15601349]
[193.51522827 -57.70524597]
[190.05364990 -44.68395996]
[183.94091797 -32.66943359]
[175.44522095 -22.19490433]
[164.94061279 -13.72591400]
[152.89047241 -7.63960695]
[139.82713318 -4.20794535]
[126.32830811 -3.58555102]
[123.66251373 11.17566586]
[120.99671936 25.93688393]
[118.33092499 40.69810104]
[131.98750305 46.80660629]
[143.78585815 56.00526047]
[153.04055786 67.75968933]
[159.21398926 81.38705444]
[161.94750977 96.09568787]
[161.08233643 111.03113556]
[156.66871643 125.32575989]
[148.96305847 138.14913940]
[138.41300964 148.75631714]
[125.63143158 156.53112793]
[111.36085510 161.02186584]
[96.43029785 161.96769714]
[93.76449585 176.72891235]
[91.09870148 191.49012756]
[88.43290710 206.25134277]
[85.76711273 221.01255798]
[98.67527771 213.37193298]
[113.23909760 216.96290588]
[121.11576080 229.72840881]
[117.79315186 244.35578918]
[105.17461395 252.46582031]
[90.48861694 249.41268921]
[82.14816284 236.94631958]
[78.17606354 251.41084290]
[74.20396423 265.87536621]
[70.23187256 280.33990479]
[66.25977325 294.80441284]
[80.36043549 299.94485474]
[93.99517822 306.21755981]
[107.07327271 313.58071899]
[119.50767517 321.98538208]
[131.21563721 331.37561035]
[142.11924744 341.68890381]
[152.14593506 352.85665894]
[161.22898865 364.80450439]
[169.30793762 377.45294189]
[176.32904053 390.71783447]
[182.24555969 404.51083374]
[187.01812744 418.74023438]
[190.61497498 433.31127930]
[193.01217651 448.12701416]
[194.19375610 463.08886719]
[194.15188599 478.09722900]
[192.88681030 493.05224609]
[190.40696716 507.85437012]
[186.72885132 522.40515137]
[181.87695312 536.60766602]
[175.88356018 550.36743164]
[168.78852844 563.59295654]
[160.63911438 576.19610596]
[151.48953247 588.09307861]
[141.40066528 599.20465088]
[130.43968201 609.45697021]
[118.67948914 618.78167725]
[106.19837952 627.11682129]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 182]
[48 181]
[49 180]
[50 179]
[51 178]
[52 171]
[53 170]
[54 169]
[55 168]
[56 167]
[68 155]
[69 154]
[70 153]
[71 152]
[82 138]
[83 137]
[84 136]
[85 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
