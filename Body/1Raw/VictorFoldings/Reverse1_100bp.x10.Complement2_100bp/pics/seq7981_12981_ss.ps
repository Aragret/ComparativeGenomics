%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[107.21707916 405.61618042]
[94.65791321 414.10400391]
[79.95240021 417.78143311]
[64.87629700 416.20443726]
[51.25011826 409.56344604]
[40.71929169 398.66033936]
[34.55546570 384.81176758]
[33.50295258 369.69000244]
[37.68885040 355.12103271]
[46.60768509 342.86419678]
[59.18247223 334.39953613]
[73.89473724 330.74920654]
[75.45526123 315.83059692]
[77.01578522 300.91198730]
[78.57630920 285.99337769]
[79.80328369 271.04364014]
[80.69609833 256.07025146]
[72.00753021 240.82308960]
[82.27500916 225.53713989]
[82.94479370 210.55209351]
[83.61457825 195.56706238]
[84.28436279 180.58201599]
[82.49437714 178.42468262]
[81.45108795 175.42832947]
[81.47834778 171.87379456]
[82.79245758 168.15390015]
[85.46644592 164.73283386]
[87.02696991 149.81422424]
[80.65573120 136.35107422]
[89.78675079 123.43072510]
[91.34727478 108.51212311]
[82.89257050 120.90235901]
[70.91237640 129.92871094]
[56.67100143 134.63861084]
[41.67136002 134.53500366]
[27.49640083 129.62882996]
[15.64204597 120.43783569]
[7.35931206 107.93198395]
[3.52229476 93.43103790]
[4.53592443 78.46533203]
[10.29323006 64.61421204]
[20.18662834 53.33943176]
[33.17204666 45.83084488]
[47.87910461 42.88084793]
[62.75572968 44.80076218]
[76.23195648 51.38797379]
[86.88560486 61.94732285]
[93.59236908 75.36444855]
[95.64446259 90.22360229]
[100.89118195 76.17113495]
[106.13790131 62.11866379]
[111.38462067 48.06619263]
[116.63134003 34.01372147]
[114.20983124 18.37892342]
[125.91014099 9.16197777]
[131.15686035 -4.89049387]
[136.40357971 -18.94296455]
[141.65029907 -32.99543762]
[139.22879028 -48.63023376]
[150.92909241 -57.84717941]
[156.17581177 -71.89965057]
[153.75430298 -87.53444672]
[165.45462036 -96.75139618]
[161.98651123 -114.83602142]
[175.94808960 -125.46812439]
[180.98500061 -139.59715271]
[186.02191162 -153.72618103]
[175.18911743 -143.35070801]
[162.06573486 -136.08595276]
[147.52217102 -132.41378784]
[132.52307129 -132.57774353]
[118.06325531 -136.56695557]
[105.10179901 -144.11683655]
[94.49839020 -154.72662354]
[86.95631409 -167.69262695]
[82.97581482 -182.15484619]
[82.82089233 -197.15403748]
[86.50182343 -211.69538879]
[93.77447510 -224.81439209]
[104.15647888 -235.64094543]
[116.95922089 -243.45693970]
[131.33354187 -247.74397278]
[146.32606506 -248.21769714]
[160.94236755 -244.84671021]
[174.21301270 -237.85456848]
[185.25781250 -227.70506287]
[193.34419250 -215.07136536]
[197.93582153 -200.79141235]
[198.72813416 -185.81234741]
[195.66693115 -171.12284851]
[204.98181152 -182.88009644]
[214.29669189 -194.63734436]
[223.61157227 -206.39459229]
[232.92645264 -218.15185547]
[242.24133301 -229.90910339]
[251.55622864 -241.66635132]
[240.74395752 -252.08030701]
[230.98727417 -263.48919678]
[222.37727356 -275.78646851]
[214.99432373 -288.85736084]
[208.90739441 -302.57977295]
[204.17329407 -316.82559204]
[200.83624268 -331.46185303]
[198.92738342 -346.35183716]
[198.46453857 -361.35653687]
[199.45204163 -376.33587646]
[201.88067627 -391.14996338]
[205.72773743 -405.66049194]
[210.95733643 -419.73199463]
[217.52062988 -433.23306274]
[225.35633850 -446.03762817]
[234.39129639 -458.02618408]
[244.54115295 -469.08673096]
[255.71113586 -479.11602783]
[267.79693604 -488.02044678]
[280.68576050 -495.71682739]
[294.25720215 -502.13330078]
[308.38458252 -507.20999146]
[322.93597412 -510.89947510]
[337.77554321 -513.16729736]
[352.76470947 -513.99230957]
[367.76351929 -513.36676025]
[382.63192749 -511.29650879]
[397.23110962 -507.80093384]
[411.42477417 -502.91259766]
[425.08035278 -496.67721558]
[438.07040405 -489.15295410]
[450.27359009 -480.41009521]
[461.57598877 -470.53024292]
[471.87207031 -459.60568237]
[481.06570435 -447.73840332]
[489.07104492 -435.03918457]
[495.81332397 -421.62661743]
[501.22964478 -407.62591553]
[505.26937866 -393.16784668]
[507.89483643 -378.38735962]
[509.08151245 -363.42251587]
[508.81829834 -348.41296387]
[507.10766602 -333.49890137]
[503.96560669 -318.81954956]
[499.42141724 -304.51202393]
[493.51754761 -290.70983887]
[486.30914307 -277.54193115]
[477.86346436 -265.13119507]
[468.25939941 -253.59353638]
[457.58660889 -243.03668213]
[445.94476318 -233.55920410]
[433.44253540 -225.24957275]
[420.19665527 -218.18539429]
[406.33084106 -212.43263245]
[391.97451782 -208.04496765]
[377.26174927 -205.06340027]
[362.32989502 -203.51576233]
[347.31835938 -203.41648865]
[332.36734009 -204.76652527]
[317.61642456 -207.55323792]
[303.20333862 -211.75065613]
[289.26263428 -217.31953430]
[275.92449951 -224.20791626]
[263.31347656 -232.35147095]
[253.99859619 -220.59422302]
[244.68371582 -208.83695984]
[235.36882019 -197.07971191]
[226.05393982 -185.32246399]
[216.73905945 -173.56521606]
[207.42417908 -161.80796814]
[200.15095520 -148.68927002]
[195.11402893 -134.56024170]
[190.07711792 -120.43120575]
[194.97673035 -109.37135315]
[190.89602661 -97.55900574]
[179.50708008 -91.50467682]
[182.30387878 -76.87500763]
[170.22828674 -66.65293121]
[164.98156738 -52.60046005]
[167.77835083 -37.97079086]
[155.70275879 -27.74871826]
[150.45605469 -13.69624710]
[145.20933533 0.35622433]
[139.96261597 14.40869522]
[142.75939941 29.03836632]
[130.68380737 39.26043701]
[125.43709564 53.31290817]
[120.19037628 67.36537933]
[114.94365692 81.41785431]
[109.69693756 95.47032166]
[106.26587677 110.07264709]
[104.70535278 124.99124908]
[110.96496582 139.52148438]
[101.94557190 151.37474060]
[100.38504791 166.29335022]
[99.26940155 181.25180054]
[98.59961700 196.23684692]
[97.92983246 211.22187805]
[97.26004791 226.20692444]
[105.37220001 236.23468018]
[104.50583649 248.70196533]
[95.66950226 256.96307373]
[94.77668762 271.93646240]
[97.11450958 276.60354614]
[97.39981079 281.23733521]
[95.98900604 285.06155396]
[93.49491119 287.55389404]
[91.93438721 302.47250366]
[90.37386322 317.39111328]
[88.81333923 332.30972290]
[102.45173645 338.92559814]
[113.00263977 349.80929565]
[119.19197083 363.64648438]
[120.27235413 378.76629639]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 206]
[13 205]
[14 204]
[15 203]
[16 199]
[17 198]
[19 195]
[20 194]
[21 193]
[22 192]
[27 191]
[28 190]
[30 188]
[31 187]
[49 186]
[50 185]
[51 184]
[52 183]
[53 182]
[55 180]
[56 179]
[57 178]
[58 177]
[60 175]
[61 174]
[63 172]
[65 169]
[66 168]
[67 167]
[90 166]
[91 165]
[92 164]
[93 163]
[94 162]
[95 161]
[96 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
