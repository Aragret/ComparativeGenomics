%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[51.44363785 507.25228882]
[52.82783508 522.31677246]
[49.48712158 537.07128906]
[41.74878311 550.07025146]
[30.37094688 560.04022217]
[16.46829796 566.00439453]
[1.40287220 567.37847900]
[-13.34937000 564.02789307]
[-26.34315681 556.28088379]
[-36.30548477 544.89636230]
[-42.26035309 530.98968506]
[-43.62435913 515.92333984]
[-40.26387405 501.17337036]
[-32.50812531 488.18478394]
[-21.11693764 478.23007202]
[-7.20630693 472.28451538]
[7.86094618 470.93060303]
[11.18320560 456.30316162]
[6.45695543 442.17828369]
[17.05860901 430.43453979]
[20.38086891 415.80706787]
[23.70312881 401.17962646]
[27.02538872 386.55215454]
[30.34764671 371.92471313]
[24.16849518 361.52545166]
[26.81661224 349.31185913]
[37.40541077 341.94708252]
[40.94508362 327.37069702]
[36.42965698 313.17703247]
[47.20497894 301.59243774]
[50.74465179 287.01605225]
[54.28432465 272.43969727]
[57.82399750 257.86331177]
[61.36367035 243.28694153]
[59.88735962 236.04522705]
[65.06607056 228.52069092]
[68.82237244 213.99862671]
[72.57867432 199.47657776]
[75.90093231 184.84910583]
[70.75623322 170.87123108]
[81.00353241 158.81703186]
[75.85882568 144.83915710]
[86.10612488 132.78495789]
[88.99139404 118.06507111]
[91.87667084 103.34518433]
[90.39680481 100.68069458]
[89.85372925 97.41885376]
[90.47056580 93.90559387]
[92.33950043 90.56443787]
[95.39675903 87.84669495]
[99.15306091 73.32463074]
[102.90936279 58.80257416]
[97.57865143 41.17688370]
[110.35834503 29.14998627]
[113.89801788 14.57361031]
[109.63577271 -0.66265655]
[120.15792084 -11.20465565]
[123.69759369 -25.78103065]
[126.36338806 -40.54224777]
[128.14585876 -55.43596649]
[129.92831421 -70.32968140]
[131.71078491 -85.22339630]
[133.49325562 -100.11711884]
[135.27571106 -115.01083374]
[137.05818176 -129.90455627]
[138.72972107 -144.81112671]
[140.29025269 -159.72973633]
[141.85076904 -174.64833069]
[143.07774353 -189.59806824]
[143.97056580 -204.57147217]
[144.86337280 -219.54487610]
[145.75619507 -234.51828003]
[143.14349365 -240.59161377]
[143.87962341 -246.22677612]
[146.90505981 -249.92216492]
[148.24330139 -264.86233521]
[149.58152771 -279.80252075]
[150.91976929 -294.74270630]
[152.25799561 -309.68289185]
[153.59623718 -324.62307739]
[154.93446350 -339.56326294]
[140.69244385 -344.48776245]
[128.05061340 -352.67288208]
[117.74143219 -363.63919067]
[110.36101532 -376.74627686]
[106.33459473 -391.23010254]
[105.89202881 -406.24758911]
[109.05470276 -420.92565918]
[115.63452911 -434.41201782]
[125.24514008 -445.92462158]
[137.32455444 -454.79702759]
[151.16801453 -460.51702881]
[165.96919250 -462.75613403]
[167.30743408 -477.69631958]
[168.64566040 -492.63650513]
[169.98390198 -507.57669067]
[171.32212830 -522.51684570]
[172.66036987 -537.45703125]
[173.99859619 -552.39721680]
[160.07833862 -558.32019043]
[148.67100525 -568.25640869]
[140.89419556 -581.23236084]
[137.50976562 -595.97692871]
[138.84931946 -611.04547119]
[144.78161621 -624.96173096]
[154.72546387 -636.36242676]
[167.70664978 -644.13055420]
[182.45343018 -647.50506592]
[197.52107239 -646.15539551]
[211.43338013 -640.21380615]
[222.82739258 -630.26232910]
[230.58680725 -617.27593994]
[233.95146179 -602.52685547]
[232.59172058 -587.46014404]
[226.64077759 -573.55181885]
[216.68167114 -562.16448975]
[203.69007874 -554.41375732]
[188.93878174 -551.05902100]
[187.60055542 -536.11883545]
[186.26231384 -521.17864990]
[184.92408752 -506.23843384]
[183.58584595 -491.29824829]
[182.24761963 -476.35806274]
[180.90937805 -461.41787720]
[195.07701111 -456.58398438]
[207.68354797 -448.49478149]
[217.99386597 -437.61685181]
[225.40547180 -424.57952881]
[229.48376465 -410.13848877]
[229.98750305 -395.13201904]
[226.88308716 -380.43222046]
[220.34669495 -366.89453125]
[210.75437927 -355.30773926]
[198.66038513 -346.34814453]
[184.76513672 -340.54003906]
[169.87464905 -338.22503662]
[168.53642273 -323.28485107]
[167.19818115 -308.34466553]
[165.85995483 -293.40447998]
[164.52171326 -278.46429443]
[163.18348694 -263.52410889]
[161.84524536 -248.58392334]
[160.72959900 -233.62547302]
[159.83677673 -218.65206909]
[158.94396973 -203.67866516]
[158.05114746 -188.70524597]
[160.10549927 -185.83958435]
[160.87388611 -181.83651733]
[159.83686829 -177.31126404]
[156.76937866 -173.08781433]
[155.20884705 -158.16920471]
[153.64833069 -143.25061035]
[156.07890320 -136.27105713]
[151.95190430 -128.12208557]
[150.16943359 -113.22837067]
[148.38696289 -98.33464813]
[146.60450745 -83.44093323]
[144.82203674 -68.54721832]
[143.03956604 -53.65349960]
[141.25711060 -38.75978088]
[152.40388489 -48.79718399]
[167.30914307 -50.48035049]
[180.41360474 -43.18150711]
[186.82962036 -29.62294006]
[184.16416931 -14.86166000]
[173.41142273 -4.40325832]
[158.58184814 -2.14846134]
[145.20655823 -8.93825245]
[138.27397156 -22.24135780]
[134.73429871 -7.66498327]
[139.24972534 6.52868366]
[128.47439575 18.11328316]
[124.93472290 32.68965912]
[130.95835876 43.17976379]
[128.12869263 55.35255432]
[117.43141937 62.55887604]
[113.67511749 77.08093262]
[109.91881561 91.60299683]
[106.59655762 106.23045349]
[103.71128845 120.95034790]
[100.82601166 135.67024231]
[105.76434326 150.70098877]
[95.72341919 161.70231628]
[100.66175079 176.73306274]
[90.62082672 187.73439026]
[92.17339325 191.78944397]
[92.33824921 195.73118591]
[91.32141113 199.13728333]
[89.44490051 201.69566345]
[87.10073853 203.23286438]
[83.34443665 217.75492859]
[79.58813477 232.27699280]
[75.94004822 246.82661438]
[72.40037537 261.40298462]
[68.86070251 275.97937012]
[65.32102966 290.55572510]
[61.78135681 305.13211060]
[66.04360199 320.36837769]
[55.52145767 330.91036987]
[51.98178482 345.48675537]
[57.57432556 363.03112793]
[44.97510910 375.24694824]
[41.65284729 389.87442017]
[38.33058929 404.50189209]
[35.00832748 419.12933350]
[31.68606949 433.75680542]
[36.17469025 448.92791748]
[25.81066513 459.62539673]
[22.48840714 474.25286865]
[35.49256134 481.98248291]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 209]
[18 208]
[20 206]
[21 205]
[22 204]
[23 203]
[24 202]
[27 200]
[28 199]
[30 197]
[31 196]
[32 195]
[33 194]
[34 193]
[36 192]
[37 191]
[38 190]
[39 185]
[41 183]
[43 181]
[44 180]
[45 179]
[50 178]
[51 177]
[52 176]
[54 173]
[55 172]
[57 170]
[58 169]
[59 160]
[60 159]
[61 158]
[62 157]
[63 156]
[64 155]
[65 154]
[66 152]
[67 151]
[68 150]
[69 146]
[70 145]
[71 144]
[72 143]
[75 142]
[76 141]
[77 140]
[78 139]
[79 138]
[80 137]
[81 136]
[93 124]
[94 123]
[95 122]
[96 121]
[97 120]
[98 119]
[99 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
