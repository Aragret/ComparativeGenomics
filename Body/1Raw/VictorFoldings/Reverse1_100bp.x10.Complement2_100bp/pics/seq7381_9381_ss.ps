%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxCGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAA\
) } def
/len { sequence length } bind def

/coor [
[87.44100189 532.92602539]
[78.48210144 520.87463379]
[70.95538330 507.88055420]
[64.95897675 494.11318970]
[60.57104874 479.75198364]
[57.84881210 464.98422241]
[56.82775116 450.00238037]
[57.52117920 435.00180054]
[59.92005920 420.17807007]
[63.99311066 405.72442627]
[69.68724060 391.82928467]
[76.92820740 378.67382812]
[85.62161255 366.42956543]
[95.65412903 355.25607300]
[106.89494324 345.29907227]
[119.19752502 336.68838501]
[132.40147400 329.53622437]
[146.33465576 323.93585205]
[142.36256409 309.47131348]
[138.39047241 295.00680542]
[134.41836548 280.54226685]
[123.42398071 278.65173340]
[113.88558197 272.76809692]
[107.20129395 263.70880127]
[104.36759186 252.75987244]
[105.83094025 241.49353027]
[111.41790009 231.54232788]
[120.35470581 224.36265564]
[117.03244781 209.73518372]
[113.71018219 195.10772705]
[110.38792419 180.48027039]
[107.06566620 165.85281372]
[103.74340820 151.22535706]
[100.42115021 136.59788513]
[90.05712128 125.90039825]
[94.54574585 110.72927856]
[90.37545013 125.13790894]
[81.58458710 137.29196167]
[69.20590973 145.76356506]
[54.69363403 149.55751038]
[39.75266647 148.22808838]
[26.13824463 141.93145752]
[15.44978046 131.40734863]
[8.94294548 117.89212799]
[7.38215542 102.97355652]
[10.95077038 88.40423584]
[19.22955132 75.89576721]
[31.24591827 66.91763306]
[45.58819962 62.52457047]
[60.57147598 63.23267365]
[74.43553162 68.95875549]
[85.55162048 79.03012085]
[92.61434174 92.26509094]
[92.83766937 77.26675415]
[85.30669403 63.35291290]
[93.23262787 50.74224854]
[93.45595551 35.74391174]
[93.67928314 20.74557304]
[82.18964386 30.38861656]
[67.23521423 29.22030640]
[57.38256073 17.90990067]
[58.27573395 2.93651700]
[69.40308380 -7.12241268]
[84.39035797 -6.50467634]
[94.65182495 4.43497181]
[96.21234894 -10.48363304]
[97.77287292 -25.40223694]
[99.33339691 -40.32084274]
[100.89392090 -55.23944855]
[102.45444489 -70.15805054]
[104.01496887 -85.07666016]
[105.57549286 -99.99526215]
[107.13600922 -114.91386414]
[108.69653320 -129.83247375]
[98.20768738 -119.10941315]
[83.61072540 -115.65560913]
[69.42868042 -120.54126740]
[60.05601501 -132.25251770]
[58.39694977 -147.16047668]
[64.96556854 -160.64578247]
[77.72650146 -168.52984619]
[92.72564697 -168.36970520]
[105.31535339 -160.21499634]
[111.59459686 -146.59226990]
[115.13426971 -161.16865540]
[118.67394257 -175.74502563]
[104.57022095 -180.89915466]
[91.13227081 -187.60002136]
[78.52909851 -195.76335144]
[66.91918945 -205.28648376]
[56.44856262 -216.04965210]
[47.24888611 -227.91751099]
[39.43586349 -240.74079895]
[33.10774994 -254.35824585]
[28.34412575 -268.59860229]
[25.20490074 -283.28280640]
[23.72955513 -298.22613525]
[23.93663979 -313.24069214]
[25.82355118 -328.13766479]
[29.36656189 -342.72967529]
[34.52111053 -356.83325195]
[41.22237778 -370.27099609]
[49.38608551 -382.87393188]
[58.90956879 -394.48355103]
[69.67305756 -404.95385742]
[81.54118347 -414.15316772]
[94.36470795 -421.96582031]
[107.98234558 -428.29351807]
[122.22285461 -433.05673218]
[136.90713501 -436.19552612]
[151.85050964 -437.67041016]
[166.86506653 -437.46289062]
[181.76197815 -435.57553101]
[196.35389709 -432.03207397]
[210.45730591 -426.87710571]
[223.89485168 -420.17544556]
[236.49754333 -412.01135254]
[248.10687256 -402.48751831]
[258.57687378 -391.72372437]
[267.77581787 -379.85531616]
[275.58807373 -367.03155518]
[281.91537476 -353.41372681]
[286.67816162 -339.17309570]
[289.81649780 -324.48870850]
[291.29095459 -309.54528809]
[291.08297729 -294.53073120]
[289.19515991 -279.63388062]
[285.65127563 -265.04208374]
[280.49588013 -250.93881226]
[273.79382324 -237.50146484]
[265.62936401 -224.89901733]
[256.10519409 -213.28997803]
[245.34107971 -202.82031250]
[233.47239685 -193.62170410]
[220.64840698 -185.80982971]
[207.03038025 -179.48292542]
[192.78959656 -174.72058105]
[178.10513306 -171.58267212]
[163.16165161 -170.10867310]
[148.14710999 -170.31710815]
[133.25032043 -172.20535278]
[129.71064758 -157.62898254]
[126.17097473 -143.05259705]
[123.61514282 -128.27194214]
[122.05461884 -113.35334015]
[120.49409485 -98.43473816]
[118.93357086 -83.51613617]
[117.37304688 -68.59752655]
[115.81252289 -53.67892456]
[114.25199890 -38.76031876]
[112.69148254 -23.84171486]
[111.13095856 -8.92311001]
[109.57043457 5.99549484]
[108.67761993 20.96890068]
[108.45429230 35.96723938]
[108.23096466 50.96557617]
[115.77791595 63.80663300]
[107.83600616 77.49008179]
[107.61267853 92.48841858]
[109.17320251 107.40702057]
[119.77485657 119.15076447]
[115.04860687 133.27563477]
[118.37086487 147.90309143]
[121.69312286 162.53054810]
[125.01538849 177.15800476]
[128.33764648 191.78547668]
[131.65989685 206.41293335]
[134.98216248 221.04039001]
[152.87828064 227.82745361]
[162.98805237 243.90235901]
[161.37947083 262.67309570]
[148.88288879 276.57015991]
[152.85499573 291.03469849]
[156.82708740 305.49920654]
[160.79917908 319.96374512]
[175.63845825 317.66293335]
[190.64328003 317.06869507]
[205.61802673 318.18878174]
[220.36747742 321.00860596]
[234.69934082 325.49139404]
[248.42678833 331.57870483]
[261.37081909 339.19116211]
[273.36270142 348.22955322]
[284.24612427 358.57601929]
[293.87915039 370.09567261]
[302.13619995 382.63833618]
[308.90966797 396.04049683]
[314.11120605 410.12744141]
[317.67300415 424.71548462]
[319.54867554 439.61447144]
[319.71368408 454.63015747]
[318.16595459 469.56677246]
[314.92562866 484.22958374]
[310.03494263 498.42742920]
[303.55770874 511.97521973]
[295.57830811 524.69635010]
[286.20077515 536.42492676]
[275.54742432 547.00811768]
[263.75708008 556.30786133]
[250.98347473 564.20300293]
[237.39314270 570.59051514]
[223.16325378 575.38720703]
[208.47933960 578.53051758]
[193.53282166 579.97949219]
[178.51856995 579.71520996]
[163.63230896 577.74108887]
[149.06813049 574.08288574]
[135.01589966 568.78833008]
[121.65880585 561.92639160]
[109.17099762 553.58660889]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 175]
[19 174]
[20 173]
[21 172]
[28 168]
[29 167]
[30 166]
[31 165]
[32 164]
[33 163]
[34 162]
[36 160]
[53 159]
[54 158]
[56 156]
[57 155]
[58 154]
[65 153]
[66 152]
[67 151]
[68 150]
[69 149]
[70 148]
[71 147]
[72 146]
[73 145]
[74 144]
[84 143]
[85 142]
[86 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
