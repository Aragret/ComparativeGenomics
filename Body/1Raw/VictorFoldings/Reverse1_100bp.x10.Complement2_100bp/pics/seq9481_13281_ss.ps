%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAUCGCCCCACUACGGACAACCCCCGGUCACGGGAGGAUUAACCCCCCAUCCCCGAUCCGACCUCACCAUUUUCCGAGUCUUUUUAGGACGCUUCUUUxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[166.75242615 336.13967896]
[172.24291992 322.16281128]
[179.29089355 308.90298462]
[187.80447388 296.53298950]
[197.67266846 285.21411133]
[208.76679993 275.09393311]
[199.98620605 262.93249512]
[191.20559692 250.77102661]
[182.33470154 238.67527771]
[173.37400818 226.64590454]
[164.41331482 214.61651611]
[155.45260620 202.58714294]
[146.22550964 190.76087952]
[136.73661804 179.14361572]
[127.24771881 167.52635193]
[129.74430847 182.31712341]
[126.80070496 197.02545166]
[118.80417633 209.71621704]
[106.80680084 218.71972656]
[92.38705444 222.85140991]
[77.44208527 221.56765747]
[63.93817139 215.03739929]
[53.65198517 204.11978149]
[47.93684769 190.25122070]
[47.54468536 175.25634766]
[52.52709198 161.10800171]
[62.22854614 149.66764832]
[75.37265778 142.44044495]
[90.23009491 140.37727356]
[104.84609985 143.74958801]
[117.29938507 152.11532593]
[110.61919403 138.68495178]
[103.93899536 125.25457764]
[97.25880432 111.82420349]
[96.76374817 126.81603241]
[91.48928070 140.85810852]
[81.99203491 152.46855164]
[69.27426910 160.42207336]
[54.67812347 163.87931824]
[39.74396515 162.47543335]
[26.04782867 156.35858154]
[15.03510094 146.17428589]
[7.86798286 132.99732971]
[5.30283642 118.21828461]
[7.61036777 103.39683533]
[14.54705715 90.09712219]
[25.38085938 79.72269440]
[38.96846008 73.36839294]
[53.87592316 71.70479584]
[68.53002930 74.90747833]
[81.38430023 82.63843536]
[91.08228302 94.08198547]
[87.97817230 79.40668488]
[84.87406158 64.73137665]
[70.73730469 50.36076355]
[77.52337646 32.25451279]
[73.98370361 17.67813873]
[70.44403076 3.10176396]
[66.90435791 -11.47461128]
[63.36468887 -26.05098724]
[59.82501602 -40.62736130]
[46.80899429 -53.65290070]
[52.40250015 -70.28659058]
[48.64620209 -84.80864716]
[44.88990021 -99.33071136]
[34.19262314 -106.53703308]
[31.36295891 -118.70981598]
[37.38659668 -129.19992065]
[33.84692383 -143.77630615]
[30.30725288 -158.35267639]
[26.76758003 -172.92904663]
[11.86187077 -171.10247803]
[-3.15510297 -171.01873779]
[-18.08025551 -172.67897034]
[-32.71173859 -176.06071472]
[-46.85168076 -181.11822510]
[-60.30885696 -187.78314209]
[-72.90126801 -195.96528625]
[-84.45862579 -205.55404663]
[-94.82461548 -216.41970825]
[-103.85906982 -228.41534424]
[-111.43978882 -241.37872314]
[-117.46425629 -255.13453674]
[-121.85100555 -269.49673462]
[-124.54070282 -284.27111816]
[-125.49697876 -299.25784302]
[-124.70690155 -314.25424194]
[-122.18114471 -329.05752563]
[-117.95388031 -343.46746826]
[-112.08227539 -357.28921509]
[-104.64572144 -370.33584595]
[-95.74481201 -382.43090820]
[-85.49990845 -393.41079712]
[-74.04956055 -403.12707520]
[-61.54862213 -411.44833374]
[-48.16616058 -418.26202393]
[-34.08314896 -423.47598267]
[-19.49005318 -427.01971436]
[-4.58422327 -428.84527588]
[10.43275642 -428.92800903]
[25.35779762 -427.26678467]
[39.98905563 -423.88406372]
[54.12866211 -418.82562256]
[67.58538818 -412.15982056]
[80.17726135 -403.97680664]
[91.73397064 -394.38729858]
[102.09924316 -383.52093506]
[111.13288879 -371.52468872]
[118.71274567 -358.56082153]
[124.73629761 -344.80459595]
[129.12208557 -330.44210815]
[131.81079102 -315.66754150]
[132.76606750 -300.68075562]
[131.97499084 -285.68438721]
[129.44825745 -270.88128662]
[125.22002411 -256.47161865]
[119.34749603 -242.65026855]
[111.91007233 -229.60414124]
[103.00835419 -217.50968933]
[92.76271820 -206.53045654]
[81.31172180 -196.81494141]
[68.81022644 -188.49453735]
[55.42731094 -181.68174744]
[41.34395599 -176.46871948]
[44.88362885 -161.89234924]
[48.42330170 -147.31597900]
[51.96297073 -132.73959351]
[64.74266815 -120.71269989]
[59.41196060 -103.08700562]
[63.16825867 -88.56494904]
[66.92456055 -74.04289246]
[77.18492126 -67.63573456]
[80.43320465 -55.56791306]
[74.40139008 -44.16703415]
[77.94106293 -29.59066010]
[81.48073578 -15.01428413]
[85.02040863 -0.43790853]
[88.56008148 14.13846684]
[92.09975433 28.71484184]
[101.26895905 33.22468185]
[106.55318451 42.22608948]
[105.99941254 52.86909485]
[99.54936981 61.62726974]
[102.65347290 76.30257416]
[105.75758362 90.97787476]
[110.68917847 105.14401245]
[117.36937714 118.57438660]
[124.04956818 132.00476074]
[130.72976685 145.43513489]
[138.86497498 158.03744507]
[148.35388184 169.65470886]
[157.84277344 181.27197266]
[162.72442627 183.12039185]
[166.07395935 186.33502197]
[167.62754822 190.10350037]
[167.48199463 193.62644958]
[176.44268799 205.65582275]
[185.40338135 217.68519592]
[194.36407471 229.71458435]
[202.00022888 234.72726440]
[203.36705017 241.99043274]
[212.14765930 254.15188599]
[220.92825317 266.31332397]
[234.02537537 258.96734619]
[247.87451172 253.16226196]
[262.29510498 248.97370911]
[277.09918213 246.45632935]
[292.09371948 245.64291382]
[307.08325195 246.54409790]
[321.87231445 249.14811707]
[336.26815796 253.42102051]
[350.08306885 259.30709839]
[363.13693237 266.72961426]
[375.25961304 275.59182739]
[386.29302979 285.77816772]
[396.09335327 297.15585327]
[404.53277588 309.57653809]
[411.50134277 322.87832642]
[416.90814209 336.88775635]
[420.68270874 351.42221069]
[422.77584839 366.29217529]
[423.16024780 381.30386353]
[421.83093262 396.26147461]
[418.80517578 410.97006226]
[414.12246704 425.23785400]
[407.84387207 438.87884521]
[400.05117798 451.71520996]
[390.84603882 463.57955933]
[380.34841919 474.31726074]
[368.69522095 483.78829956]
[356.03833008 491.86920166]
[342.54278564 498.45465088]
[328.38452148 503.45874023]
[313.74807739 506.81625366]
[298.82434082 508.48342896]
[283.80783081 508.43850708]
[268.89431763 506.68212891]
[254.27822876 503.23712158]
[240.15013123 498.14843750]
[226.69421387 491.48242188]
[214.08589172 483.32595825]
[202.48953247 473.78536987]
[192.05633545 462.98510742]
[182.92231750 451.06588745]
[175.20654297 438.18316650]
[169.00962830 424.50488281]
[164.41233826 410.20932007]
[161.47460938 395.48291016]
[160.23477173 380.51757812]
[160.70895386 365.50848389]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 163]
[7 162]
[8 161]
[9 159]
[10 158]
[11 157]
[12 156]
[13 152]
[14 151]
[15 150]
[31 149]
[32 148]
[33 147]
[34 146]
[52 145]
[53 144]
[54 143]
[56 139]
[57 138]
[58 137]
[59 136]
[60 135]
[61 134]
[63 131]
[64 130]
[65 129]
[68 127]
[69 126]
[70 125]
[71 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
