%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[131.41650391 362.96603394]
[139.98861694 350.57183838]
[151.18835449 340.48907471]
[164.41174316 333.26144409]
[160.43965149 318.79690552]
[156.46755981 304.33239746]
[152.49545288 289.86785889]
[148.30844116 275.46408081]
[137.17749023 265.56704712]
[140.52529907 250.10411072]
[136.01766968 235.79742432]
[131.40365601 221.52468872]
[126.78964996 207.25196838]
[122.17564392 192.97923279]
[117.56163025 178.70649719]
[112.94762421 164.43376160]
[95.98772430 165.59918213]
[79.29627228 162.37551880]
[63.99005508 154.97848511]
[51.09317017 143.90298462]
[41.46850967 129.89004517]
[35.76004028 113.87725067]
[34.34969711 96.93595886]
[37.33184433 80.19967651]
[44.50695419 64.78817749]
[55.39495850 51.73261261]
[69.26737213 41.90649033]
[63.81201172 27.93369293]
[58.35665512 13.96089458]
[43.71709442 2.79107904]
[47.03818130 -14.44079018]
[41.37539673 -28.33081627]
[35.71260834 -42.22084427]
[30.04982185 -56.11087036]
[24.38703537 -70.00090027]
[21.61861610 -55.25858307]
[12.79777336 -43.12628174]
[-0.37232375 -35.94654846]
[-15.34873676 -35.10568237]
[-29.23975372 -40.76603699]
[-39.36323929 -51.83469009]
[-43.76450729 -66.17445374]
[-41.59373856 -81.01654816]
[-33.27007675 -93.49519348]
[-20.40068817 -101.20096588]
[-5.47045422 -102.64599609]
[8.63783360 -97.55126953]
[19.20076180 -86.89942169]
[16.09665108 -101.57472229]
[12.99254131 -116.25002289]
[9.88843155 -130.92532349]
[6.78432131 -145.60063171]
[3.68021131 -160.27593994]
[0.57610124 -174.95123291]
[-2.52800894 -189.62654114]
[-7.30858135 -175.40872192]
[-17.10812187 -164.05227661]
[-30.47292709 -157.24183655]
[-45.42040634 -155.98771667]
[-59.73319244 -160.47593689]
[-71.28807068 -170.04071045]
[-78.37093353 -183.26315308]
[-79.93109131 -198.18180847]
[-75.73709869 -212.58355713]
[-66.41110992 -224.33200073]
[-53.33658218 -231.68432617]
[-38.45304108 -233.54986572]
[-23.96837425 -229.65185547]
[-12.03129292 -220.56857300]
[-4.41322947 -207.64924622]
[-4.41322947 -222.64924622]
[-4.41322947 -237.64924622]
[-4.41322947 -252.64924622]
[-7.02469349 -257.16891479]
[-7.58530235 -261.77749634]
[-6.40461540 -265.67889404]
[-4.06329203 -268.31530762]
[-3.39350700 -283.30032349]
[-2.72372198 -298.28536987]
[-2.05393672 -313.27041626]
[-1.38415158 -328.25546265]
[-16.20259094 -330.69476318]
[-30.62850380 -334.86959839]
[-44.45937729 -340.72140503]
[-57.50104141 -348.16796875]
[-69.57041168 -357.10476685]
[-80.49806213 -367.40637207]
[-90.13057709 -378.92813110]
[-98.33273315 -391.50830078]
[-104.98938751 -404.97030640]
[-110.00708771 -419.12512207]
[-113.31539154 -433.77407837]
[-114.86785889 -448.71148682]
[-114.64270020 -463.72766113]
[-112.64306641 -478.61181641]
[-108.89703369 -493.15496826]
[-103.45719147 -507.15298462]
[-96.39990234 -520.40936279]
[-87.82424927 -532.73797607]
[-77.85060883 -543.96569824]
[-66.61901093 -553.93505859]
[-54.28710938 -562.50598145]
[-41.02804184 -569.55816650]
[-27.02793694 -574.99261475]
[-12.48333549 -578.73309326]
[2.40157843 -580.72698975]
[17.41784286 -580.94641113]
[32.35465622 -579.38818359]
[47.00232315 -576.07421875]
[61.15522003 -571.05108643]
[74.61466217 -564.38928223]
[87.19168854 -556.18231201]
[98.70975494 -546.54534912]
[109.00714874 -535.61376953]
[117.93932343 -523.54095459]
[125.38087463 -510.49642944]
[131.22734070 -496.66329956]
[135.39665222 -482.23577881]
[137.83027649 -467.41641235]
[138.49403381 -452.41323853]
[137.37861633 -437.43682861]
[134.49969482 -422.69750977]
[129.89765930 -408.40213013]
[123.63714600 -394.75140381]
[115.80601501 -381.93695068]
[106.51421356 -370.13870239]
[95.89218903 -359.52224731]
[84.08905792 -350.23666382]
[71.27050781 -342.41226196]
[57.61649704 -336.15890503]
[43.31871033 -331.56439209]
[28.57785988 -328.69320679]
[13.60088730 -327.58566284]
[12.93110180 -312.60061646]
[12.26131725 -297.61560059]
[11.59153175 -282.63055420]
[10.92174625 -267.64550781]
[10.58677006 -252.64924622]
[10.58677006 -237.64924622]
[10.58677006 -222.64924622]
[10.58677006 -207.64924622]
[12.14729309 -192.73065186]
[15.25140381 -178.05534363]
[18.35551453 -163.38005066]
[21.45962334 -148.70474243]
[24.56373405 -134.02943420]
[27.66784477 -119.35413361]
[30.77195358 -104.67883301]
[33.87606430 -90.00353241]
[38.27706146 -75.66368103]
[43.93984985 -61.77365875]
[49.60263443 -47.88362885]
[55.26542282 -33.99360275]
[60.92820740 -20.10357666]
[71.95258331 -15.12465668]
[76.78402710 -3.59899068]
[72.32945251 8.50553703]
[77.78481293 22.47833443]
[83.24016571 36.45113373]
[96.07881165 34.39531326]
[109.07092285 34.90723038]
[121.70800781 37.96683884]
[133.49545288 43.45439529]
[143.97189331 51.15511703]
[152.72731018 60.76760101]
[159.41900635 71.91561890]
[163.78506470 84.16284943]
[165.65461731 97.02993011]
[164.95448303 110.01326752]
[161.71206665 122.60468292]
[156.05426025 134.31137085]
[148.20252991 144.67512512]
[138.46417236 153.29031372]
[127.22035980 159.81974792]
[131.83436584 174.09248352]
[136.44837952 188.36521912]
[141.06237793 202.63795471]
[145.67639160 216.91069031]
[150.29040527 231.18342590]
[155.90780640 238.38638306]
[154.86514282 245.70310974]
[166.31089783 256.62582397]
[162.64830017 271.06307983]
[167.22029114 275.83889771]
[168.50172424 281.37557983]
[166.95997620 285.89575195]
[170.93208313 300.36029053]
[174.90417480 314.82482910]
[178.87626648 329.28933716]
[193.93634033 328.75006104]
[208.71472168 331.69900513]
[222.41442871 337.97711182]
[234.29664612 347.24588013]
[243.72058105 359.00537109]
[250.17802429 372.62149048]
[253.32072449 387.35986328]
[252.97920227 402.42572021]
[249.17187500 417.00656128]
[242.10408020 430.31607056]
[232.15695190 441.63647461]
[219.86692810 450.35726929]
[205.89682007 456.00814819]
[190.99998474 458.28439331]
[175.97982788 457.06323242]
[161.64633179 452.41052246]
[148.77249146 444.57720947]
[138.05259705 433.98565674]
[130.06474304 421.20712280]
[125.23970032 406.93072510]
[123.83769226 391.92636108]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 189]
[5 188]
[6 187]
[7 186]
[8 183]
[10 181]
[11 179]
[12 178]
[13 177]
[14 176]
[15 175]
[16 174]
[27 159]
[28 158]
[29 157]
[31 154]
[32 153]
[33 152]
[34 151]
[35 150]
[48 149]
[49 148]
[50 147]
[51 146]
[52 145]
[53 144]
[54 143]
[55 142]
[70 141]
[71 140]
[72 139]
[73 138]
[77 137]
[78 136]
[79 135]
[80 134]
[81 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
