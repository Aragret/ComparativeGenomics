%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAGAAAUGAUAUUUUCGAUAACACAUUCGAUCAGUAUAAUUCAACAACCGAGUCCUCAAACUAUCAAGAACCCGUCACUCUCACUCAUCAUCUUACAAxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[50.42160797 746.32110596]
[38.42444229 755.47149658]
[24.46739197 761.20416260]
[9.50207615 763.12817383]
[-5.45114517 761.11230469]
[-19.37273598 755.29406738]
[-31.31350136 746.07019043]
[-40.45929718 734.06945801]
[-46.18655014 720.11022949]
[-48.10476685 705.14416504]
[-46.08315659 690.19171143]
[-40.25955963 676.27239990]
[-31.03103828 664.33514404]
[-19.02680779 655.19403076]
[-5.06533480 649.47216797]
[9.90146160 647.55969238]
[11.90547562 632.69415283]
[13.90948868 617.82867432]
[15.91350269 602.96313477]
[17.91751671 588.09759521]
[8.74840260 579.04461670]
[6.43310595 566.17132568]
[12.03742695 554.13793945]
[23.71848106 547.43212891]
[17.95476151 533.69793701]
[27.65359116 521.19818115]
[18.62142563 509.41024780]
[20.66669464 494.33471680]
[33.09221268 484.94088745]
[35.31732941 470.10684204]
[37.54244995 455.27279663]
[39.76756668 440.43875122]
[41.99268341 425.60470581]
[44.21780014 410.77066040]
[31.82995415 402.46362305]
[24.24612808 389.54873657]
[23.01671982 374.56039429]
[28.43895912 360.46716309]
[39.48736572 350.08352661]
[54.00723267 345.50808716]
[56.23234940 330.67404175]
[58.45746994 315.83999634]
[60.68258667 301.00595093]
[62.90770340 286.17190552]
[65.13282013 271.33786011]
[67.35794067 256.50381470]
[69.58305359 241.66978455]
[71.80817413 226.83573914]
[69.69167328 219.75462341]
[74.17842865 211.79806519]
[76.62416077 196.99879456]
[79.06988525 182.19952393]
[81.51560974 167.40025330]
[83.96134186 152.60098267]
[86.40706635 137.80171204]
[88.85279846 123.00243378]
[91.18828583 108.18536377]
[93.19229889 93.31983948]
[94.97476196 78.42611694]
[96.75722504 63.53240204]
[98.53969574 48.63868713]
[92.49710846 34.01686478]
[101.69197845 22.29920197]
[103.47444153 7.40548515]
[104.70141602 -7.54424858]
[105.37120819 -22.52928734]
[96.50841522 -38.67030334]
[106.52262115 -53.08150101]
[106.96922302 -68.07485199]
[107.41583252 -83.06819916]
[107.86244202 -98.06155396]
[108.30904388 -113.05490112]
[108.75565338 -128.04824829]
[109.20225525 -143.04159546]
[109.09059143 -158.04118347]
[108.42080688 -173.02622986]
[107.75102234 -188.01126099]
[97.48353577 -203.29721069]
[106.17211151 -218.54437256]
[105.27929688 -233.51777649]
[104.38647461 -248.49118042]
[102.93705750 -263.42098999]
[91.34677887 -277.72998047]
[98.64041138 -293.69146729]
[96.41529846 -308.52551270]
[94.19017792 -323.35955811]
[91.96506500 -338.19360352]
[89.73994446 -353.02764893]
[74.72872925 -354.41577148]
[60.48614883 -359.35665894]
[47.84024429 -367.56301880]
[37.52622604 -378.55776978]
[30.14374733 -391.70169067]
[26.12201118 -406.23059082]
[25.69483566 -421.29980469]
[28.88705635 -436.03320312]
[35.51308441 -449.57421875]
[45.18768692 -461.13558960]
[57.34840012 -470.04516602]
[71.28821564 -475.78494263]
[86.19668579 -478.02124023]
[101.20705414 -476.62399292]
[115.44664001 -471.67449951]
[128.08757019 -463.46044922]
[138.39491272 -452.45944214]
[145.76942444 -439.31106567]
[149.78234863 -424.77972412]
[150.20039368 -409.71026611]
[146.99923706 -394.97879028]
[140.36500549 -381.44180298]
[130.68339539 -369.88629150]
[118.51728058 -360.98410034]
[104.57398987 -355.25277710]
[106.79911041 -340.41873169]
[109.02422333 -325.58468628]
[111.24934387 -310.75064087]
[113.47445679 -295.91659546]
[123.01257324 -288.47677612]
[124.98776245 -276.13650513]
[117.80258942 -265.42498779]
[128.83425903 -275.58877563]
[143.68127441 -273.45193481]
[151.39897156 -260.58969116]
[146.29814148 -246.48361206]
[132.13893127 -241.53216553]
[119.35988617 -249.38398743]
[120.25270081 -234.41058350]
[121.14551544 -219.43717957]
[129.98184204 -211.17608643]
[130.84820557 -198.70880127]
[122.73606110 -188.68104553]
[123.40584564 -173.69601440]
[124.07563019 -158.71096802]
[135.97007751 -167.85000610]
[150.56726074 -164.39710999]
[157.10665894 -150.89761353]
[150.76768494 -137.30285645]
[136.22319031 -133.63438416]
[124.19561005 -142.59500122]
[123.74900055 -127.60164642]
[123.30239105 -112.60829163]
[122.85578918 -97.61494446]
[122.40917969 -82.62159729]
[121.96257782 -67.62824249]
[121.51596832 -52.63489532]
[129.58004761 -43.61839676]
[129.33067322 -31.12353516]
[120.35624695 -21.85950279]
[119.68645477 -6.87446356]
[132.34883118 -14.91588593]
[146.57974243 -10.17445755]
[151.88870239 3.85461807]
[144.36213684 16.82962799]
[129.54835510 19.18587685]
[118.36816406 9.18795109]
[116.58569336 24.08166885]
[122.75577545 37.63819122]
[113.43341064 50.42115021]
[111.65094757 65.31487274]
[109.86847687 80.20858765]
[108.08601379 95.10230255]
[110.31033325 99.85270691]
[109.71475220 105.51120758]
[106.02232361 110.41048431]
[107.84410095 119.36140442]
[103.65206909 125.44815826]
[101.20633698 140.24743652]
[98.76061249 155.04670715]
[96.31488800 169.84597778]
[93.86915588 184.64524841]
[91.42343140 199.44451904]
[88.97769928 214.24378967]
[86.64221191 229.06085205]
[84.41709900 243.89489746]
[82.19197845 258.72894287]
[79.96686554 273.56298828]
[77.74174500 288.39703369]
[75.51663208 303.23107910]
[73.29151154 318.06512451]
[71.06639862 332.89916992]
[68.84127808 347.73321533]
[81.37969208 356.36743164]
[88.89529419 369.53564453]
[89.94394684 384.59954834]
[84.37107086 398.56750488]
[73.33177948 408.68893433]
[59.05184555 412.99578857]
[56.82672501 427.82983398]
[54.60160828 442.66387939]
[52.37649155 457.49792480]
[50.15137482 472.33197021]
[47.92625809 487.16601562]
[57.04877472 499.79205322]
[54.58087540 514.80419922]
[42.48763657 523.42333984]
[48.09219742 538.21856689]
[38.55252457 549.65728760]
[49.20630264 563.53228760]
[46.58067703 580.48577881]
[32.78304291 590.10162354]
[30.77903175 604.96716309]
[28.77501678 619.83264160]
[26.77100372 634.69818115]
[24.76699066 649.56372070]
[38.69306946 655.37121582]
[50.64095306 664.58587646]
[59.79601669 676.57952881]
[65.53404236 690.53436279]
[67.46382141 705.49890137]
[65.45375824 720.45294189]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 204]
[17 203]
[18 202]
[19 201]
[20 200]
[24 197]
[26 195]
[29 192]
[30 191]
[31 190]
[32 189]
[33 188]
[34 187]
[40 181]
[41 180]
[42 179]
[43 178]
[44 177]
[45 176]
[46 175]
[47 174]
[48 173]
[50 172]
[51 171]
[52 170]
[53 169]
[54 168]
[55 167]
[56 166]
[57 164]
[58 161]
[59 160]
[60 159]
[61 158]
[63 156]
[64 155]
[65 149]
[66 148]
[68 145]
[69 144]
[70 143]
[71 142]
[72 141]
[73 140]
[74 139]
[75 133]
[76 132]
[77 131]
[79 128]
[80 127]
[81 126]
[82 120]
[84 117]
[85 116]
[86 115]
[87 114]
[88 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
