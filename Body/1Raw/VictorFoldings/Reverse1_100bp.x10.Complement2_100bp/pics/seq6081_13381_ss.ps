%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[61.56959152 495.19842529]
[53.10737228 507.61502075]
[42.96415710 518.70086670]
[31.34645462 528.23028564]
[18.49078178 536.00921631]
[4.65886450 541.87939453]
[-9.86769676 545.72125244]
[-24.79315948 547.45654297]
[-39.81366348 547.04998779]
[-54.62340546 544.50988770]
[-68.92088318 539.88787842]
[-82.41500854 533.27807617]
[-94.83106995 524.81512451]
[-105.91629028 514.67120361]
[-115.44498444 503.05291748]
[-123.22315979 490.19674683]
[-129.09246826 476.36447144]
[-132.93341064 461.83767700]
[-134.66780090 446.91210938]
[-134.26033020 431.89163208]
[-131.71926880 417.08203125]
[-127.09638214 402.78485107]
[-120.48576355 389.29113770]
[-112.02201080 376.87557983]
[-101.87741852 365.79101562]
[-90.25853729 356.26303101]
[-77.40190125 348.48565674]
[-63.56925964 342.61718750]
[-49.04222107 338.77713013]
[-34.11654282 337.04367065]
[-19.09609222 337.45208740]
[-4.28666496 339.99404907]
[0.32734430 325.72131348]
[4.94135380 311.44857788]
[9.55536270 297.17587280]
[6.10811806 282.68566895]
[17.71522141 271.93457031]
[16.44395447 268.64578247]
[16.70249176 264.57781982]
[18.83968163 260.45645142]
[22.86707687 257.13574219]
[28.11379433 243.08326721]
[33.36051178 229.03079224]
[38.60723114 214.97833252]
[43.85395050 200.92585754]
[49.10066605 186.87338257]
[34.57868195 190.62997437]
[22.49621391 181.74098206]
[21.76000977 166.75906372]
[32.91277313 156.72831726]
[47.73309708 159.04304504]
[55.29585648 171.99525452]
[53.59492111 157.19808960]
[66.39734650 147.90246582]
[65.55425262 145.22901917]
[65.71934509 142.06053162]
[67.08649445 138.77932739]
[69.70768738 135.83078003]
[73.47532654 133.67234802]
[80.55243683 120.44682312]
[87.62953949 107.22129822]
[87.37055206 93.24185944]
[99.14493561 85.70159912]
[106.22203827 72.47607422]
[113.10144806 59.14664459]
[119.78164673 45.71626663]
[105.58950043 50.57249832]
[91.55135345 45.28755951]
[84.08526611 32.27766037]
[86.60462952 17.49074554]
[97.95761871 7.68719673]
[112.95381165 7.34906292]
[124.73713684 16.63093567]
[127.92018890 31.29110336]
[135.96136475 18.62857819]
[144.00253296 5.96605349]
[152.04370117 -6.69647169]
[160.08488464 -19.35899734]
[158.04180908 -32.09432983]
[165.00001526 -42.47542953]
[176.77621460 -45.24081802]
[185.00503540 -57.78221893]
[170.55455017 -53.75932312]
[156.45941162 -58.89028931]
[147.97673035 -71.26139069]
[148.27035522 -86.25852203]
[157.23075867 -98.28810883]
[171.51594543 -102.86342621]
[185.79788208 -98.27798462]
[194.74977112 -86.24205017]
[195.03242493 -71.24359894]
[204.69323730 -82.71829987]
[207.66241455 -98.25839233]
[221.77835083 -103.01126099]
[231.43914795 -114.48596191]
[241.09996033 -125.96066284]
[250.76077271 -137.43536377]
[260.42160034 -148.91006470]
[270.08239746 -160.38476562]
[259.65200806 -171.18342590]
[250.38725281 -182.99732971]
[242.38635254 -195.70124817]
[235.73408508 -209.16050720]
[230.50100708 -223.23242188]
[226.74256897 -237.76783752]
[224.49861145 -252.61265564]
[223.79293823 -267.60952759]
[224.63302612 -282.59945679]
[227.00996399 -297.42358398]
[230.89854431 -311.92471313]
[236.25756836 -325.94915771]
[243.03021240 -339.34823608]
[251.14468384 -351.97991943]
[260.51495361 -363.71029663]
[271.04171753 -374.41500854]
[282.61337280 -383.98062134]
[295.10726929 -392.30569458]
[308.39093018 -399.30200195]
[322.32357788 -404.89535522]
[336.75750732 -409.02645874]
[351.53967285 -411.65155029]
[366.51342773 -412.74279785]
[381.52001953 -412.28860474]
[396.40036011 -410.29382324]
[410.99673462 -406.77957153]
[425.15438843 -401.78311157]
[438.72326660 -395.35739136]
[451.55950928 -387.57055664]
[463.52706909 -378.50515747]
[474.49905396 -368.25723267]
[484.35919189 -356.93548584]
[493.00289917 -344.65991211]
[500.33862305 -331.56060791]
[506.28854370 -317.77648926]
[510.78961182 -303.45361328]
[513.79412842 -288.74386597]
[515.27020264 -273.80313110]
[515.20220947 -258.78982544]
[513.59088135 -243.86308289]
[510.45327759 -229.18113708]
[505.82266235 -214.89962769]
[499.74813843 -201.16993713]
[492.29409790 -188.13761902]
[483.53955078 -175.94082642]
[473.57730103 -164.70883179]
[462.51293945 -154.56072998]
[450.46377563 -145.60406494]
[437.55755615 -137.93380737]
[423.93103027 -131.63125610]
[409.72869873 -126.76321411]
[395.10110474 -123.38129425]
[380.20327759 -121.52135468]
[365.19320679 -121.20309448]
[350.22994995 -122.42990112]
[335.47213745 -125.18876648]
[321.07623291 -129.45043945]
[307.19482422 -135.16975403]
[293.97506714 -142.28607178]
[281.55709839 -150.72395325]
[271.89627075 -139.24925232]
[262.23547363 -127.77455139]
[252.57466125 -116.29985809]
[242.91384888 -104.82515717]
[233.25303650 -93.35045624]
[230.97486877 -78.63110352]
[216.16793823 -73.05748749]
[206.50712585 -61.58279037]
[197.54643250 -49.55341339]
[189.31762695 -37.01201248]
[189.26211548 -19.46311378]
[172.74740601 -11.31782341]
[164.70622253 1.34470129]
[156.66505432 14.00722599]
[148.62388611 26.66975212]
[140.58271790 39.33227539]
[133.21202087 52.39646149]
[126.53182983 65.82683563]
[127.17532349 70.55916595]
[124.85282135 75.74597931]
[119.44756317 79.55317688]
[112.37046051 92.77870178]
[112.62944794 106.75814056]
[100.85506439 114.29840088]
[93.77796173 127.52392578]
[86.70085907 140.74945068]
[80.02066040 154.17982483]
[81.27259827 169.95143127]
[68.91917419 178.27261353]
[63.15313721 192.12010193]
[57.90642166 206.17257690]
[52.65970230 220.22503662]
[47.41298294 234.27751160]
[42.16626740 248.32998657]
[36.91954803 262.38244629]
[31.98795509 276.54858398]
[35.10517502 292.05966187]
[23.82809639 301.78985596]
[19.21408653 316.06259155]
[14.60007763 330.33532715]
[9.98606873 344.60806274]
[23.48101616 351.21618652]
[35.89812469 359.67764282]
[46.98460007 369.82015991]
[56.51473236 381.43728638]
[64.29450226 394.29244995]
[70.16551971 408.12402344]
[74.00826263 422.65032959]
[75.74449921 437.57568359]
[75.33888245 452.59622192]
[72.79965973 467.40612793]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 200]
[33 199]
[34 198]
[35 197]
[37 195]
[41 194]
[42 193]
[43 192]
[44 191]
[45 190]
[46 189]
[52 188]
[54 186]
[59 185]
[60 184]
[61 183]
[63 181]
[64 180]
[65 177]
[66 176]
[74 175]
[75 174]
[76 173]
[77 172]
[78 171]
[81 169]
[82 168]
[91 167]
[92 166]
[94 164]
[95 163]
[96 162]
[97 161]
[98 160]
[99 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
