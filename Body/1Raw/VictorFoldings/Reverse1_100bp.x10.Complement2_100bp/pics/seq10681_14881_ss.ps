%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCCUGCUAAUCAAAAUCGUAACCUCAUCCAAAUCCAAUACAUGCAUCAGAUCCGGUAUACACAACCUCUAACUCUGAUCAUCCCGAUCCGGGUGGCGAxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[57.66395950 545.34704590]
[47.17640686 556.09014893]
[35.63980484 565.69799805]
[23.17644691 574.06872559]
[9.91845036 581.11352539]
[-3.99364161 586.75781250]
[-18.41235352 590.94171143]
[-33.18483734 593.62084961]
[-48.15449905 594.76678467]
[-63.16265106 594.36749268]
[-78.05019379 592.42712402]
[-92.65931702 588.96624756]
[-106.83515930 584.02160645]
[-120.42743683 577.64556885]
[-133.29206848 569.90570068]
[-145.29269409 560.88415527]
[-156.30207825 550.67639160]
[-166.20353699 539.39080811]
[-174.89208984 527.14691162]
[-182.27565002 514.07452393]
[-188.27593994 500.31222534]
[-192.82934570 486.00592041]
[-195.88761902 471.30725098]
[-197.41831970 456.37203979]
[-197.40522766 441.35858154]
[-195.84849548 426.42602539]
[-192.76460266 411.73272705]
[-188.18626404 397.43435669]
[-182.16198730 383.68255615]
[-174.75564575 370.62307739]
[-166.04576111 358.39434814]
[-156.12463379 347.12600708]
[-145.09747314 336.93750000]
[-133.08114624 327.93682861]
[-120.20303345 320.21945190]
[-106.59965515 313.86709595]
[-92.41522217 308.94717407]
[-77.80008698 305.51177979]
[-62.90917969 303.59738159]
[-47.90035629 303.22424316]
[-32.93271637 304.39630127]
[-18.16492462 307.10119629]
[-3.75352907 311.31018066]
[1.90925753 297.42016602]
[7.57204390 283.53015137]
[13.23483086 269.64010620]
[18.89761734 255.75009155]
[14.49673748 244.48248291]
[19.10082245 232.86413574]
[30.74873924 227.32438660]
[36.61770248 213.52020264]
[34.47695541 198.78024292]
[46.99693680 189.10757446]
[52.86589813 175.30339050]
[38.58604050 179.89530945]
[25.17926979 173.16787720]
[20.32559013 158.97485352]
[26.80541039 145.44665527]
[40.90679550 140.33287048]
[54.55183029 146.56286621]
[59.92404175 160.56690979]
[67.00114441 147.34136963]
[73.97959900 134.06353760]
[80.85900879 120.73410034]
[87.73842621 107.40467072]
[87.27133179 93.43064117]
[98.93214417 85.71591187]
[105.81156158 72.38648224]
[105.26511383 56.57471848]
[117.97777557 48.81343842]
[124.85718536 35.48400879]
[131.73660278 22.15458107]
[138.61601257 8.82515240]
[145.49542236 -4.50427723]
[152.37483215 -17.83370590]
[159.15483093 -31.21397972]
[165.83502197 -44.64435577]
[170.34265137 -58.95104218]
[164.73808289 -73.74629211]
[174.27775574 -85.18498993]
[176.50288391 -100.01903534]
[178.72799683 -114.85308075]
[180.95310974 -129.68711853]
[183.17823792 -144.52116394]
[184.84977722 -159.42774963]
[185.96542358 -174.38619995]
[187.08106995 -189.34465027]
[188.19671631 -204.30310059]
[189.31236267 -219.26155090]
[190.42800903 -234.22001648]
[191.54367065 -249.17846680]
[176.98397827 -252.95410156]
[163.33253479 -259.26898193]
[151.02815247 -267.92010498]
[140.46638489 -278.62939453]
[131.98674011 -291.05258179]
[125.86180878 -304.79028320]
[122.28847504 -319.40093994]
[121.38160706 -334.41485596]
[123.17036438 -349.34936523]
[127.59723663 -363.72445679]
[134.51992798 -377.07794189]
[143.71589661 -388.98065186]
[154.88952637 -399.04989624]
[167.68164062 -406.96200562]
[181.68101501 -412.46264648]
[196.43763733 -415.37500000]
[211.47714233 -415.60546875]
[226.31607056 -413.14657593]
[240.47741699 -408.07742310]
[253.50593567 -400.56094360]
[264.98281860 -390.83877563]
[274.53915405 -379.22341919]
[281.86770630 -366.08828735]
[286.73294067 -351.85559082]
[288.97842407 -336.98287964]
[288.53198242 -321.94824219]
[285.40795898 -307.23498535]
[279.70681763 -293.31604004]
[271.61178589 -280.63891602]
[261.38308716 -269.61105347]
[249.34953308 -260.58700562]
[235.89796448 -253.85681152]
[221.46080017 -249.63687134]
[206.50212097 -248.06282043]
[205.38647461 -233.10435486]
[204.27081299 -218.14590454]
[203.15516663 -203.18745422]
[202.03952026 -188.22900391]
[200.92387390 -173.27055359]
[199.80822754 -158.31208801]
[212.70440674 -165.97294617]
[226.78784180 -160.80990601]
[231.67674255 -146.62898254]
[223.76719666 -133.88381958]
[208.88983154 -131.96968079]
[198.01226807 -142.29605103]
[195.78715515 -127.46200562]
[193.56204224 -112.62796021]
[191.33692932 -97.79392242]
[189.11180115 -82.95987701]
[194.87551880 -69.22565460]
[185.17669678 -56.72592545]
[193.85647583 -68.95954132]
[205.48013306 -78.44061279]
[219.20854187 -84.48468018]
[234.05064392 -86.65542603]
[248.93496704 -84.79613495]
[262.78698730 -79.04103851]
[274.60675049 -69.80559540]
[283.54095459 -57.75652695]
[288.94464111 -43.76366043]
[290.42767334 -28.83715630]
[287.88305664 -14.05457020]
[281.49444580 -0.48306891]
[271.72305298 10.89760780]
[259.27426147 19.26588058]
[245.04679871 24.01763535]
[230.06773376 24.80983734]
[215.41842651 21.58530045]
[202.15641785 14.57680416]
[191.23908997 4.29029942]
[183.45460510 -8.53162384]
[179.36491394 -22.96333885]
[179.26539612 -37.96416092]
[172.58520508 -24.53378487]
[172.42092896 -17.14495468]
[165.70426941 -10.95429325]
[158.82485962 2.37513542]
[151.94543457 15.70456505]
[145.06602478 29.03399467]
[138.18661499 42.36342239]
[131.30720520 55.69285202]
[132.34571838 70.55120850]
[119.14099121 79.26589966]
[112.26157379 92.59532928]
[112.72866821 106.56935883]
[101.06785583 114.28408813]
[94.18843842 127.61351776]
[87.30902863 140.94294739]
[86.15413666 150.00407410]
[80.22667694 154.41848755]
[73.14956665 167.64401245]
[66.67007446 181.17236328]
[60.80111313 194.97653198]
[62.52207184 210.70385742]
[50.42187881 219.38917542]
[44.55291748 233.19334412]
[47.21003342 251.41479492]
[32.78764343 261.41287231]
[27.12485695 275.30288696]
[21.46207047 289.19293213]
[15.79928398 303.08294678]
[10.13649750 316.97299194]
[23.38284492 324.03967285]
[35.83236694 332.43096924]
[47.35309219 342.05783081]
[57.82289124 352.81829834]
[67.13078308 364.59823608]
[75.17810059 377.27282715]
[81.87952423 390.70764160]
[87.16403198 404.76034546]
[90.97559357 419.28192139]
[93.27381134 434.11843872]
[94.03432465 449.11260986]
[93.24906158 464.10552979]
[90.92634583 478.93823242]
[87.09081268 493.45349121]
[81.78311920 507.49743652]
[75.05951691 520.92120361]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 194]
[44 193]
[45 192]
[46 191]
[47 190]
[50 188]
[51 187]
[53 185]
[54 184]
[61 183]
[62 182]
[63 180]
[64 179]
[65 178]
[67 176]
[68 175]
[70 173]
[71 172]
[72 171]
[73 170]
[74 169]
[75 168]
[76 166]
[77 165]
[78 143]
[80 141]
[81 140]
[82 139]
[83 138]
[84 137]
[85 131]
[86 130]
[87 129]
[88 128]
[89 127]
[90 126]
[91 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
