%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[202.36305237 508.69689941]
[210.78994751 496.19686890]
[221.96389771 486.07727051]
[235.23527527 478.92645264]
[231.47897339 464.40438843]
[227.72267151 449.88235474]
[223.96636963 435.36029053]
[220.21006775 420.83822632]
[215.91593933 406.46600342]
[211.08995056 392.26354980]
[206.26394653 378.06109619]
[201.43795776 363.85864258]
[196.61195374 349.65618896]
[185.19125366 340.09497070]
[188.07719421 324.53918457]
[182.62184143 310.56640625]
[176.54800415 296.85113525]
[161.83433533 287.28689575]
[163.94775391 268.99441528]
[158.29354858 264.23501587]
[157.68002319 255.12121582]
[151.60620117 241.40594482]
[145.53236389 227.69067383]
[139.45852661 213.97541809]
[128.29080200 209.32693481]
[123.11833954 197.95022583]
[127.21054077 185.71844482]
[121.34157562 171.91426086]
[115.83158875 166.98863220]
[115.48969269 157.86061096]
[109.82690430 143.97058105]
[104.16412354 130.08055115]
[98.50133514 116.19052124]
[88.05809784 111.03494263]
[83.74172211 100.21781921]
[87.76675415 89.28894043]
[86.38447571 104.22511292]
[81.23340607 118.31292725]
[72.65521240 130.61799622]
[61.21884155 140.32414246]
[47.68283463 146.78762817]
[32.94498825 149.57972717]
[17.98280334 148.51525879]
[3.78867531 143.66482544]
[-8.69595432 135.35014343]
[-18.64302444 124.12268066]
[-25.39278221 110.72713470]
[-28.49753952 96.05196381]
[-27.75136757 81.07053375]
[-23.20376015 66.77650452]
[-15.15634155 54.11795044]
[-4.14286947 43.93446350]
[9.10617256 36.90147781]
[23.71202278 33.48546600]
[38.70592880 33.91300583]
[53.09339905 38.15573120]
[65.92015839 45.93224335]
[76.33546448 56.72675323]
[83.65040588 69.82806396]
[82.98062134 54.84302902]
[82.31083679 39.85799026]
[72.04335022 24.57203674]
[80.73192596 9.32488346]
[79.83911133 -5.64852238]
[78.94628906 -20.62192726]
[77.49687195 -35.55173492]
[75.49285889 -50.41726303]
[73.48884583 -65.28279114]
[71.48483276 -80.14832306]
[69.48081970 -95.01384735]
[67.47680664 -109.87937927]
[65.36218262 -124.72957611]
[63.13706589 -139.56361389]
[51.45600891 -146.26940918]
[45.85168839 -158.30278015]
[48.16698456 -171.17607117]
[57.33610153 -180.22906494]
[55.33208847 -195.09458923]
[53.32807159 -209.96012878]
[51.32405853 -224.82565308]
[39.03977966 -234.40344238]
[37.21918869 -249.50775146]
[46.42585754 -261.15991211]
[44.42184448 -276.02545166]
[42.41783142 -290.89096069]
[34.13978577 -278.38201904]
[20.13094330 -273.01989746]
[5.61624956 -276.80456543]
[-3.99067140 -288.32440186]
[-5.10667562 -303.28283691]
[2.68447828 -316.10070801]
[16.47688293 -321.99728394]
[31.12631226 -318.77328491]
[41.16937256 -307.63009644]
[40.94604492 -322.62844849]
[40.72271729 -337.62680054]
[40.49938965 -352.62512207]
[40.27606201 -367.62347412]
[26.25654030 -373.57098389]
[15.87288857 -384.71096802]
[10.92413902 -399.11340332]
[12.26769066 -414.28292847]
[19.67076683 -427.59136963]
[31.85073662 -436.73294067]
[46.69734955 -440.12377930]
[61.63834000 -437.17648315]
[74.08509064 -428.40161133]
[81.88112640 -415.31948853]
[83.67573547 -400.19668579]
[79.15798950 -385.65328979]
[69.11062622 -374.20907593]
[55.27439880 -367.84680176]
[55.49772644 -352.84844971]
[55.72105408 -337.85012817]
[55.94438171 -322.85177612]
[56.16770935 -307.85342407]
[57.28335953 -292.89498901]
[59.28737259 -278.02944946]
[61.29138565 -263.16394043]
[73.25495911 -254.36572266]
[75.49907684 -239.31851196]
[66.18959045 -226.82966614]
[68.19360352 -211.96414185]
[70.19761658 -197.09860229]
[72.20162964 -182.23307800]
[85.99925995 -172.61724854]
[88.62488556 -155.66375732]
[77.97110748 -141.78874207]
[80.19622803 -126.95468903]
[84.29717255 -120.80619812]
[82.34233093 -111.88339233]
[84.34634399 -97.01786041]
[86.35035706 -82.15233612]
[88.35437775 -67.28680420]
[90.35839081 -52.42127991]
[92.36240387 -37.55575180]
[103.39408112 -47.71951294]
[118.24109650 -45.58267593]
[125.95878601 -32.72043610]
[120.85795593 -18.61435509]
[106.69874573 -13.66291332]
[93.91970062 -21.51474380]
[94.81251526 -6.54133797]
[95.70532990 8.43206787]
[104.54166412 16.69316864]
[105.40802765 29.16045380]
[97.29587555 39.18820190]
[97.96566010 54.17324066]
[98.63544464 69.15827942]
[101.73955536 83.83358002]
[115.10182190 93.97389984]
[112.39135742 110.52774048]
[118.05414581 124.41776276]
[123.71693420 138.30778503]
[129.37971497 152.19781494]
[135.14575195 166.04530334]
[141.01470947 179.84948730]
[155.98034668 190.57847595]
[153.17379761 207.90158081]
[159.24763489 221.61685181]
[165.32145691 235.33210754]
[171.39529419 249.04737854]
[177.57106018 262.71704102]
[189.37875366 267.90753174]
[194.32672119 279.38366699]
[190.26327515 290.77731323]
[196.33711243 304.49255371]
[202.73670959 290.92623901]
[216.80757141 285.72903442]
[230.48925781 291.87814331]
[235.94427490 305.85107422]
[230.04774475 319.64349365]
[216.17747498 325.35449219]
[202.27964783 319.71319580]
[214.04553223 330.29028320]
[210.81440735 344.83020020]
[215.64041138 359.03265381]
[220.46640015 373.23510742]
[225.29240417 387.43756104]
[230.11840820 401.64001465]
[238.98905945 389.54409790]
[253.96984863 388.78518677]
[264.01748657 399.92272949]
[261.72525024 414.74655151]
[248.78285217 422.32907104]
[234.73213196 417.08190918]
[238.48843384 431.60397339]
[242.24473572 446.12603760]
[246.00103760 460.64810181]
[249.75732422 475.17016602]
[264.83151245 474.98907471]
[279.51083374 478.42141724]
[292.94186401 485.26763916]
[304.34375000 495.12969971]
[313.05358887 507.43426514]
[318.56500244 521.46594238]
[320.55758667 536.40893555]
[318.91549683 551.39447021]
[313.73416138 565.55133057]
[305.31481934 578.05651855]
[294.14700317 588.18286133]
[280.87997437 595.34173584]
[266.28506470 599.11688232]
[251.21078491 599.28881836]
[236.53353882 595.84759521]
[223.10665894 588.99322510]
[211.71075439 579.12420654]
[203.00837708 566.81439209]
[197.50544739 552.77941895]
[195.52192688 537.83520508]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 190]
[5 189]
[6 188]
[7 187]
[8 186]
[9 180]
[10 179]
[11 178]
[12 177]
[13 176]
[15 174]
[16 167]
[17 166]
[19 163]
[21 162]
[22 161]
[23 160]
[24 159]
[27 157]
[28 156]
[30 155]
[31 154]
[32 153]
[33 152]
[36 150]
[59 149]
[60 148]
[61 147]
[63 144]
[64 143]
[65 142]
[66 136]
[67 135]
[68 134]
[69 133]
[70 132]
[71 131]
[72 129]
[73 128]
[77 125]
[78 124]
[79 123]
[80 122]
[83 119]
[84 118]
[85 117]
[94 116]
[95 115]
[96 114]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
