%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAUUCCUCUAAACAUCCCUCUAAUCAUAUCUCUCCAUCUCAAAAAAAGCACUAUCACCAAGUGACCUAUUCACCGCAACCGAACGGUACUAACACUCxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[40.56482697 605.55175781]
[32.59249115 618.27728271]
[23.22149277 630.01110840]
[12.57399654 640.60015869]
[0.78881949 649.90649414]
[-11.98039627 657.80871582]
[-25.56717682 664.20379639]
[-39.79439163 669.00836182]
[-54.47655869 672.15985107]
[-69.42227173 673.61706543]
[-84.43666840 673.36108398]
[-99.32402039 671.39526367]
[-113.89023590 667.74517822]
[-127.94540405 662.45837402]
[-141.30630493 655.60388184]
[-153.79873657 647.27099609]
[-165.25984192 637.56842041]
[-175.54020691 626.62255859]
[-184.50578308 614.57611084]
[-192.03971863 601.58624268]
[-198.04377747 587.82214355]
[-202.43966675 573.46343994]
[-205.17010498 558.69714355]
[-206.19949341 543.71588135]
[-205.51438904 528.71496582]
[-203.12373352 513.88989258]
[-199.05871582 499.43395996]
[-193.37229919 485.53567505]
[-186.13862610 472.37619019]
[-177.45202637 460.12710571]
[-167.42572021 448.94805908]
[-156.19042969 438.98480225]
[-143.89263916 430.36727905]
[-130.69265747 423.20779419]
[-116.76258850 417.59967041]
[-102.28402710 413.61605835]
[-87.44574738 411.30889893]
[-72.44117737 410.70822144]
[-57.46595001 411.82189941]
[-42.71529007 414.63537598]
[-28.38150024 419.11199951]
[-22.30766487 405.39675903]
[-16.23383141 391.68148804]
[-10.15999794 377.96621704]
[-4.08616352 364.25094604]
[1.98767042 350.53567505]
[8.06150436 336.82040405]
[14.13533878 323.10513306]
[10.07188892 311.71151733]
[15.01985264 300.23538208]
[26.82754707 295.04489136]
[33.10490799 281.42156982]
[39.38226700 267.79827881]
[33.99952698 253.95768738]
[40.17159653 240.05227661]
[54.72536850 234.50021362]
[61.00272751 220.87689209]
[66.97428894 207.11679077]
[72.63707733 193.22676086]
[78.29986572 179.33673096]
[83.96265411 165.44671631]
[89.62543488 151.55668640]
[92.51071167 136.83679199]
[92.51071167 121.83679199]
[92.51071167 106.83679199]
[89.36151123 99.41687775]
[92.62403870 91.61387634]
[92.84736633 76.61553955]
[93.07069397 61.61720657]
[80.65336609 70.03206635]
[66.28759003 65.71644592]
[60.56328964 51.85166168]
[67.70020294 38.65830994]
[82.43725586 35.86204147]
[93.91017151 45.52266312]
[95.24840546 30.58247566]
[96.58663940 15.64229107]
[97.92487335 0.70210636]
[95.49414825 -5.44631910]
[96.39774323 -11.05707169]
[99.53186035 -14.66073036]
[101.31433105 -29.55444717]
[103.09679413 -44.44816589]
[104.87925720 -59.34188080]
[97.53540802 -69.94521332]
[99.32664490 -82.31352997]
[108.75293732 -89.89453125]
[110.75695038 -104.76006317]
[104.93272400 -119.47023010]
[114.30104065 -131.04969788]
[116.30505371 -145.91522217]
[118.30906677 -160.78074646]
[103.95996094 -165.27642822]
[90.57709503 -172.13259888]
[78.54553986 -181.15199280]
[68.21145630 -192.07511902]
[59.87217331 -204.58769226]
[53.76763535 -218.32969666]
[50.07347870 -232.90574646]
[48.89599228 -247.89645386]
[50.26905823 -262.87051392]
[54.15316391 -277.39712524]
[60.43656158 -291.05825806]
[68.93846130 -303.46090698]
[79.41425323 -314.24819946]
[91.56251526 -323.10980225]
[105.03372955 -329.79067993]
[119.44029999 -334.09866333]
[134.36772156 -335.90982056]
[149.38648987 -335.17196655]
[164.06451416 -331.90640259]
[177.97944641 -326.20706177]
[190.73094177 -318.23788452]
[201.95210266 -308.22824097]
[211.32009888 -296.46606445]
[218.56536865 -283.28979492]
[223.47946167 -269.07852173]
[225.92098999 -254.24118042]
[225.81971741 -239.20463562]
[223.17852783 -224.40151978]
[218.07344055 -210.25776672]
[210.65133667 -197.18028259]
[201.12574768 -185.54537964]
[189.77075195 -175.68777466]
[176.91305542 -167.89112854]
[162.92262268 -162.37973022]
[148.20195007 -159.31217957]
[133.17459106 -158.77673340]
[131.17057800 -143.91120911]
[129.16656494 -129.04568481]
[135.13412476 -115.39879608]
[125.62247467 -102.75604248]
[123.61846161 -87.89051819]
[131.14894104 -72.03936768]
[119.77297974 -57.55941772]
[117.99050903 -42.66569901]
[116.20804596 -27.77198219]
[114.42558289 -12.87826443]
[112.86505890 2.04034042]
[111.52682495 16.98052597]
[110.18859100 31.92071152]
[108.85035706 46.86089706]
[108.06903076 61.84053421]
[107.84570312 76.83886719]
[107.62237549 91.83721161]
[107.51071167 106.83679199]
[107.51071167 121.83679199]
[107.51071167 136.83679199]
[114.13986206 123.38114929]
[123.56131744 111.70912170]
[135.31538391 102.39022064]
[148.82855225 95.87913513]
[163.44148254 92.49354553]
[178.44119263 92.39865112]
[193.09577942 95.59907532]
[206.69024658 101.93867493]
[218.56127930 111.10811615]
[228.12966919 122.65999603]
[234.92852783 136.03068542]
[238.62615967 150.56779480]
[239.04212952 165.56202698]
[236.15612793 180.28178406]
[230.10900879 194.00885010]
[221.19578552 206.07344055]
[209.85136414 215.88691711]
[196.62928772 222.97044373]
[182.17465210 226.97840881]
[167.19276428 227.71525574]
[152.41461182 225.14503479]
[138.56124878 219.39314270]
[126.30860901 210.74021912]
[116.25453949 199.60847473]
[108.88958740 186.54106140]
[104.57312012 172.17553711]
[103.51546478 157.21946716]
[97.85267639 171.10949707]
[92.18988800 184.99952698]
[86.52710724 198.88955688]
[80.86431885 212.77957153]
[81.57627869 217.95066833]
[80.35557556 222.42987061]
[77.78939819 225.59684753]
[74.62604523 227.15425110]
[68.34868622 240.77757263]
[73.58423615 255.44818115]
[67.02403259 269.17474365]
[53.00558472 274.07562256]
[46.72822189 287.69894409]
[40.45086288 301.32226562]
[42.56428146 319.61474609]
[27.85060501 329.17898560]
[21.77677155 342.89425659]
[15.70293713 356.60952759]
[9.62910366 370.32476807]
[3.55526924 384.04003906]
[-2.51856470 397.75531006]
[-8.59239864 411.47058105]
[-14.66623306 425.18585205]
[-1.71796930 432.79113770]
[10.27893639 441.82284546]
[21.16808128 452.16326904]
[30.80750275 463.67758179]
[39.07152939 476.21566772]
[45.85242462 489.61407471]
[51.06178284 503.69812012]
[54.63169479 518.28417969]
[56.51561356 533.18212891]
[56.68898392 548.19769287]
[55.14953995 563.13519287]
[51.91735458 577.79980469]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 198]
[42 197]
[43 196]
[44 195]
[45 194]
[46 193]
[47 192]
[48 191]
[51 189]
[52 188]
[53 187]
[56 184]
[57 183]
[58 179]
[59 178]
[60 177]
[61 176]
[62 175]
[63 148]
[64 147]
[65 146]
[67 145]
[68 144]
[69 143]
[75 142]
[76 141]
[77 140]
[78 139]
[81 138]
[82 137]
[83 136]
[84 135]
[87 133]
[88 132]
[90 130]
[91 129]
[92 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
