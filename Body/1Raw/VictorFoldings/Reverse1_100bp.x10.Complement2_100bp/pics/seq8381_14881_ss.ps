%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[278.22003174 290.79074097]
[267.73251343 280.06634521]
[257.24502563 269.34197998]
[246.67796326 258.69595337]
[236.03196716 248.12892151]
[225.38595581 237.56185913]
[214.73994446 226.99481201]
[201.90591431 232.26321411]
[187.98933411 232.24206543]
[175.09133911 226.90153503]
[165.17192078 217.01742554]
[159.75198364 204.05865479]
[159.68029785 189.96897888]
[165.00068665 176.87547302]
[154.51319885 166.15109253]
[144.02569580 155.42671204]
[133.53819275 144.70233154]
[122.97114563 134.05632019]
[112.32513428 123.48927307]
[101.67912292 112.92222595]
[106.54950714 127.10951996]
[108.06409454 142.03285217]
[106.14345551 156.90939331]
[100.88832855 170.95870972]
[92.57438660 183.44384766]
[81.63777161 193.70982361]
[68.65218353 201.21812439]
[54.29883194 205.57489014]
[39.33066177 206.55154419]
[24.53287315 204.09687805]
[10.68172550 198.33964539]
[-1.49617469 189.58186340]
[-11.36199951 178.28294373]
[-18.39820862 165.03561401]
[-22.23569489 150.53479004]
[-22.67315292 135.54116821]
[-19.68763542 120.84128571]
[-13.43575287 107.20626068]
[-4.24547005 95.35135651]
[7.40111017 85.89846802]
[20.89303207 79.34346008]
[35.52253723 76.03021240]
[50.52218628 76.13252258]
[65.10513306 79.64501953]
[78.50638580 86.38345337]
[90.02407837 95.99553680]
[83.95024109 82.28027344]
[77.87641144 68.56501007]
[71.70064545 54.89533615]
[65.42327881 41.27202225]
[59.14591980 27.64870453]
[52.56589127 14.16897011]
[45.68648148 0.83954072]
[38.80706787 -12.48988819]
[31.92765617 -25.81931686]
[25.04824257 -39.14874649]
[18.16883087 -52.47817612]
[11.28941822 -65.80760193]
[4.41000509 -79.13703156]
[-2.46940732 -92.46646118]
[-2.20573187 -77.46878052]
[-4.92550945 -62.71741486]
[-10.52041245 -48.79990768]
[-18.76759720 -36.27058411]
[-29.33858299 -25.62848473]
[-41.81233215 -17.29748154]
[-55.69201660 -11.60939312]
[-70.42481995 -8.79077530]
[-85.42392731 -8.95389175]
[-100.09194946 -12.09224606]
[-113.84465027 -18.08083916]
[-126.13426208 -26.68114662]
[-136.47131348 -37.55062103]
[-144.44406128 -50.25633621]
[-149.73497009 -64.29222870]
[-152.13330078 -79.09925842]
[-151.54351807 -94.08766174]
[-147.98913574 -108.66045380]
[-141.61169434 -122.23720551]
[-132.66523743 -134.27717590]
[-121.50606537 -144.30079651]
[-108.57866669 -151.90884399]
[-94.39792633 -156.79827881]
[-79.52866364 -158.77438354]
[-64.56311035 -157.75842285]
[-50.09733582 -153.79087830]
[-36.70751190 -147.02975464]
[-24.92695045 -137.74438477]
[-15.22486305 -126.30455780]
[-7.98932219 -113.16978455]
[-8.65910721 -128.15481567]
[-12.16858578 -136.58816528]
[-9.22562981 -143.36761475]
[-9.67223549 -158.36096191]
[-10.11884117 -173.35430908]
[-10.56544781 -188.34765625]
[-11.01205349 -203.34101868]
[-11.45865917 -218.33436584]
[-25.42221260 -224.49731445]
[-35.32240295 -236.11405945]
[-39.19353867 -250.87811279]
[-36.26700592 -265.85803223]
[-27.12386703 -278.07955933]
[-13.57950020 -285.11611938]
[1.67685103 -285.57055664]
[15.61602688 -279.35266113]
[25.47039223 -267.69699097]
[29.28335953 -252.91783142]
[26.29785728 -237.94953918]
[17.10666275 -225.76411438]
[3.53469062 -218.78097534]
[3.98129654 -203.78761292]
[4.42790270 -188.79426575]
[4.87450838 -173.80091858]
[5.32111454 -158.80757141]
[5.76772022 -143.81422424]
[6.32593107 -128.82461548]
[6.99571657 -113.83956909]
[10.86002159 -99.34587860]
[17.73943520 -86.01644897]
[24.61884689 -72.68701935]
[31.49826050 -59.35758972]
[38.37767029 -46.02816010]
[45.25708389 -32.69873047]
[52.13649750 -19.36930084]
[59.01591110 -6.03987169]
[65.89532471 7.28955746]
[69.12506866 8.70415878]
[71.83009338 11.75339890]
[73.24958801 16.17361832]
[72.76923370 21.37134361]
[79.04660034 34.99465942]
[85.32395935 48.61797714]
[90.97815704 53.37736893]
[91.59167480 62.49117279]
[97.66551208 76.20643616]
[103.73934174 89.92170715]
[112.24617004 102.27621460]
[122.89218140 112.84326172]
[133.53819275 123.41030884]
[141.83345032 127.23477173]
[144.26257324 134.21482849]
[154.75007629 144.93920898]
[165.23756409 155.66358948]
[175.72506714 166.38796997]
[191.09941101 161.06222534]
[207.19952393 162.96748352]
[220.80810547 171.67190552]
[229.22802734 185.39009094]
[230.81684875 201.34907532]
[225.30699158 216.34881592]
[235.95300293 226.91586304]
[246.59901428 237.48291016]
[257.24502563 248.04995728]
[265.54028320 251.87442017]
[267.96939087 258.85446167]
[278.45690918 269.57885742]
[288.94439697 280.30322266]
[300.80688477 271.09567261]
[313.64166260 263.30041504]
[327.28140259 257.01904297]
[341.54824829 252.33345032]
[356.25622559 249.30473328]
[371.21359253 247.97238159]
[386.22534180 248.35375977]
[401.09573364 250.44389343]
[415.63095093 254.21553040]
[429.64147949 259.61950684]
[442.94464111 266.58538818]
[455.36703491 275.02230835]
[466.74670410 284.82031250]
[476.93527222 295.85168457]
[485.79992676 307.97256470]
[493.22509766 321.02493286]
[499.11398315 334.83865356]
[503.38977051 349.23364258]
[505.99679565 364.02218628]
[506.90100098 379.01153564]
[506.09060669 394.00622559]
[503.57620239 408.81079102]
[499.39056396 423.23226929]
[493.58825684 437.08255005]
[486.24493408 450.18115234]
[477.45632935 462.35726929]
[467.33697510 473.45217896]
[456.01885986 483.32122803]
[443.64950562 491.83575439]
[430.39019775 498.88473511]
[416.41375732 504.37628174]
[401.90243530 508.23883057]
[387.04541016 510.42196655]
[372.03634644 510.89727783]
[357.07095337 509.65856934]
[342.34429932 506.72195435]
[328.04840088 502.12576294]
[314.36962891 495.92987061]
[301.48632812 488.21508789]
[289.56643677 479.08197021]
[278.76535034 468.64956665]
[269.22390747 457.05395508]
[261.06649780 444.44622803]
[254.39944458 430.99081421]
[249.30969238 416.86309814]
[245.86358643 402.24728394]
[244.10606384 387.33392334]
[244.06002808 372.31741333]
[245.72605896 357.39352417]
[249.08247375 342.75683594]
[254.08549500 328.59820557]
[260.66992188 315.10214233]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 158]
[2 157]
[3 156]
[4 154]
[5 153]
[6 152]
[7 151]
[14 145]
[15 144]
[16 143]
[17 142]
[18 140]
[19 139]
[20 138]
[46 137]
[47 136]
[48 135]
[49 133]
[50 132]
[51 131]
[52 127]
[53 126]
[54 125]
[55 124]
[56 123]
[57 122]
[58 121]
[59 120]
[60 119]
[90 118]
[91 117]
[93 116]
[94 115]
[95 114]
[96 113]
[97 112]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
