%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxGGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAU\
) } def
/len { sequence length } bind def

/coor [
[135.19213867 650.62402344]
[123.09551239 641.69830322]
[112.58740997 630.94769287]
[103.94002533 618.65057373]
[97.37733459 605.12548828]
[93.06933594 590.72283936]
[91.12760925 575.81561279]
[91.60246277 560.78991699]
[94.48158264 546.03503418]
[99.69039917 531.93310547]
[107.09399414 518.84942627]
[116.50058746 507.12286377]
[127.66653442 497.05718994]
[140.30261230 488.91311646]
[154.08149719 482.90161133]
[168.64631653 479.17837524]
[167.30807495 464.23818970]
[165.96984863 449.29800415]
[164.40931702 434.37939453]
[162.62686157 419.48568726]
[160.84439087 404.59194946]
[151.64952087 392.87429810]
[157.69210815 378.25247192]
[155.90963745 363.35876465]
[154.12716675 348.46502686]
[144.93229675 336.74737549]
[150.97488403 322.12554932]
[141.78001404 310.40789795]
[147.82260132 295.78607178]
[146.04014587 280.89236450]
[144.25767517 265.99862671]
[141.04440308 251.34684753]
[136.43038940 237.07411194]
[131.81637573 222.80137634]
[127.20236969 208.52865601]
[122.58836365 194.25592041]
[111.31128693 184.52571106]
[114.42850494 169.01463318]
[109.81449127 154.74191284]
[105.20048523 140.46917725]
[100.58647919 126.19644165]
[95.97246552 111.92370605]
[91.04087067 97.75756836]
[85.79415131 83.70510101]
[80.54743958 69.65262604]
[75.30072021 55.60015869]
[60.82908249 44.21361923]
[64.40635681 27.03310585]
[58.64032745 13.18562126]
[52.56649017 -0.52964580]
[46.49265671 -14.24491215]
[34.76355362 -19.61062622]
[29.98699760 -31.15914536]
[34.21963120 -42.49102020]
[21.69964981 -52.16369247]
[23.84039688 -66.90365601]
[17.97143555 -80.70783234]
[12.10247517 -94.51200867]
[5.86485863 -101.18508911]
[6.25059175 -108.56566620]
[-6.12399101 -118.42367554]
[-3.76402521 -133.13012695]
[-9.42681217 -147.02015686]
[-15.08959866 -160.91018677]
[-20.75238419 -174.80021667]
[-26.41517258 -188.69023132]
[-28.86157227 -173.89108276]
[-37.04767990 -161.32176208]
[-49.59399414 -153.10044861]
[-64.38623810 -150.61256409]
[-78.93165588 -154.27735901]
[-90.77909088 -163.47726440]
[-97.93205261 -176.66192627]
[-99.18511963 -191.60949707]
[-94.32714844 -205.80104065]
[-84.17678833 -216.84504700]
[-70.44454193 -222.88040161]
[-55.44454575 -222.89004517]
[-41.70455933 -216.87234497]
[-31.53915977 -205.83996582]
[-34.42443085 -220.55986023]
[-37.30970383 -235.27975464]
[-40.19497681 -249.99963379]
[-43.08024979 -264.71954346]
[-58.13240433 -264.85186768]
[-72.84973145 -268.01184082]
[-86.62955475 -274.06997681]
[-98.90760803 -282.77828979]
[-109.18110657 -293.78009033]
[-117.02936554 -306.62493896]
[-122.13099670 -320.78677368]
[-124.27709961 -335.68576050]
[-123.37977600 -350.71173096]
[-119.47579193 -365.24938965]
[-112.72499847 -378.70343018]
[-103.40383911 -390.52294922]
[-91.89400482 -400.22390747]
[-78.66683197 -407.40908813]
[-64.26395416 -411.78424072]
[-49.27515793 -413.17019653]
[-34.31422806 -411.51025391]
[-19.99380684 -406.87231445]
[-6.90030527 -399.44631958]
[4.43010616 -389.53640747]
[13.53345394 -377.54833984]
[20.03696251 -363.97302246]
[23.67431641 -349.36636353]
[24.29656792 -334.32647705]
[21.87823677 -319.46926880]
[16.51835251 -305.40313721]
[8.43639851 -292.70404053]
[-2.03667378 -281.89202881]
[-14.47199917 -273.40982056]
[-28.36035919 -267.60479736]
[-25.47508621 -252.88491821]
[-22.58981323 -238.16502380]
[-19.70454025 -223.44512939]
[-16.81926918 -208.72523499]
[-12.52514458 -194.35302734]
[-6.86235809 -180.46299744]
[-1.19957161 -166.57296753]
[4.46321487 -152.68293762]
[10.12600136 -138.79292297]
[22.09554482 -129.92842102]
[20.14061928 -114.22845459]
[25.90665245 -100.38096619]
[31.77561378 -86.57678986]
[37.64457321 -72.77261353]
[49.74477005 -64.08731079]
[48.02380753 -48.35998154]
[62.59345627 -38.57773590]
[60.20792389 -20.31874657]
[66.28176117 -6.60347986]
[72.35559082 7.11178684]
[75.49541473 8.71611881]
[78.01415253 11.92095852]
[79.16802979 16.41782951]
[78.37915802 21.57774925]
[89.32818604 26.72025490]
[93.98748779 38.31657410]
[89.35318756 50.35343933]
[94.59990692 64.40591431]
[99.84662628 78.45838165]
[105.09334564 92.51085663]
[108.33956909 94.59277344]
[110.65235901 98.09546661]
[111.41774750 102.56997681]
[110.24520111 107.30970001]
[114.85920715 121.58242798]
[119.47322083 135.85516357]
[124.08722687 150.12789917]
[128.70123291 164.40063477]
[140.30833435 175.15171814]
[136.86109924 189.64190674]
[141.47509766 203.91464233]
[146.08911133 218.18737793]
[150.70312500 232.46011353]
[155.31713867 246.73283386]
[158.85746765 232.15663147]
[167.95576477 220.23098755]
[181.07879639 212.96559143]
[196.01510620 211.58479309]
[210.24766541 216.32127380]
[221.37803650 226.37687683]
[227.53054810 240.05702209]
[227.66841125 255.05639648]
[221.76837158 268.84732056]
[210.82470703 279.10577393]
[196.68161011 284.10305786]
[181.72244263 282.99703979]
[168.46807861 275.97406006]
[159.15139771 264.21615601]
[160.93385315 279.10989380]
[162.71632385 294.00360107]
[172.03869629 306.78656006]
[165.86860657 320.34307861]
[175.19097900 333.12603760]
[169.02088928 346.68258667]
[170.80335999 361.57629395]
[172.58581543 376.47000122]
[181.90818787 389.25296021]
[175.73811340 402.80947876]
[177.52056885 417.70321655]
[179.30303955 432.59692383]
[182.95350647 438.10925293]
[183.23056030 443.78552246]
[180.91003418 447.95974731]
[182.24826050 462.89993286]
[183.58650208 477.84011841]
[198.58114624 478.91564941]
[213.20906067 482.38269043]
[227.09133911 488.15142822]
[239.86840820 496.07244873]
[251.20930481 505.94058228]
[260.82028198 517.50024414]
[268.45236206 530.45196533]
[273.90786743 544.46032715]
[277.04553223 559.16241455]
[277.78402710 574.17742920]
[276.10424805 589.11645508]
[272.04971313 603.59252930]
[265.72540283 617.23071289]
[257.29516602 629.67767334]
[246.97738647 640.61108398]
[235.03927612 649.74768066]
[221.79008484 656.85089111]
[207.57299805 661.73663330]
[192.75627136 664.27838135]
[177.72367859 664.41027832]
[162.86460876 662.12896729]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 189]
[17 188]
[18 187]
[19 184]
[20 183]
[21 182]
[23 180]
[24 179]
[25 178]
[27 176]
[29 174]
[30 173]
[31 172]
[32 158]
[33 157]
[34 156]
[35 155]
[36 154]
[38 152]
[39 151]
[40 150]
[41 149]
[42 148]
[43 144]
[44 143]
[45 142]
[46 141]
[48 138]
[49 134]
[50 133]
[51 132]
[54 130]
[56 128]
[57 127]
[58 126]
[60 125]
[62 123]
[63 122]
[64 121]
[65 120]
[66 119]
[80 118]
[81 117]
[82 116]
[83 115]
[84 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
