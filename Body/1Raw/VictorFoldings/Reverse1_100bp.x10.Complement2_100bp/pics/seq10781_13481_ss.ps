%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUCAUCUCCCUACUACGAUUAUUAAUCCGACACCCACCAACACAACUAAGUUUAAUACACAAAAAACCUUUCAGUACAGUCACCAUCAUUAUAUUAACxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[77.16294098 622.63006592]
[66.64885712 633.57617188]
[52.88890839 639.98150635]
[37.74400711 640.97973633]
[23.26238251 636.43585205]
[11.40255260 626.96435547]
[3.76846147 613.84625244]
[1.39255869 598.85559082]
[4.59616518 584.01977539]
[12.94602013 571.34521484]
[25.31287193 562.54608154]
[40.02420807 558.81231689]
[41.80667496 543.91857910]
[43.58914185 529.02484131]
[45.37160873 514.13116455]
[47.15407181 499.23742676]
[39.38843155 483.50015259]
[50.54754639 468.85244751]
[48.11697388 461.87289429]
[52.24397278 453.72390747]
[54.02643967 438.83020020]
[55.80890656 423.93649292]
[57.59137344 409.04275513]
[59.37383652 394.14904785]
[61.15630341 379.25534058]
[54.98622131 365.69882202]
[64.30858612 352.91586304]
[66.09105682 338.02212524]
[67.87351990 323.12841797]
[69.65598297 308.23471069]
[71.32752991 293.32812500]
[72.88804626 278.40951538]
[63.33853531 267.03665161]
[64.70860291 251.88482666]
[76.70227051 241.94552612]
[78.26279449 227.02691650]
[79.71221924 212.09710693]
[81.05045319 197.15692139]
[78.72991943 192.98269653]
[79.00698090 187.30641174]
[82.65744019 181.79409790]
[84.43990326 166.90037537]
[86.22237396 152.00665283]
[88.00483704 137.11294556]
[89.78730774 122.21922302]
[91.56977081 107.32550812]
[93.24131012 92.41893005]
[94.80183411 77.50032806]
[96.36235809 62.58172226]
[96.58568573 47.58338547]
[95.47003937 32.62493134]
[94.35438538 17.66647720]
[85.10810852 8.67375374]
[84.48683167 -3.80814433]
[92.27887726 -13.06074142]
[91.38606262 -28.03414726]
[82.84107971 -41.34931946]
[89.80712128 -54.51456070]
[88.91430664 -69.48796844]
[88.02148438 -84.46137238]
[87.12866974 -99.43477631]
[86.23585510 -114.40818024]
[73.32758331 -122.81548309]
[67.90825653 -137.04518127]
[71.86029816 -151.56568909]
[83.46587372 -160.86346436]
[82.57305908 -175.83686829]
[81.68024445 -190.81027222]
[80.78742981 -205.78367615]
[79.89461517 -220.75708008]
[79.00180054 -235.73048401]
[68.50786591 -250.86187744]
[76.96846771 -266.23669434]
[75.85282135 -281.19515991]
[60.15443802 -290.26812744]
[53.10672760 -306.80322266]
[57.35794067 -324.10574341]
[71.02256012 -335.29278564]
[69.46203613 -350.21139526]
[67.90151215 -365.13000488]
[58.77050018 -378.05035400]
[65.14173889 -391.51348877]
[63.58121109 -406.43209839]
[49.28012848 -411.65133667]
[38.70639801 -422.51794434]
[33.91886520 -436.83923340]
[35.81631088 -451.75772095]
[43.96925354 -464.32110596]
[56.71567154 -472.06671143]
[55.15514755 -486.98532104]
[53.59462357 -501.90393066]
[38.71111679 -504.43054199]
[25.06169891 -510.88003540]
[13.65924358 -520.77380371]
[5.34989166 -533.37768555]
[0.75025129 -547.75634766]
[0.20164664 -562.84277344]
[3.74478769 -577.51757812]
[11.11674976 -590.69165039]
[21.77048492 -601.38745117]
[34.91541290 -608.81127930]
[49.57609558 -612.41229248]
[64.66461182 -611.92315674]
[79.06129456 -607.38024902]
[91.69781494 -599.12060547]
[101.63645172 -587.75726318]
[108.13970184 -574.13336182]
[110.72498322 -559.25994873]
[109.20043182 -544.24066162]
[103.67919922 -530.19012451]
[94.57099152 -518.15087891]
[82.55169678 -509.01638794]
[68.51322937 -503.46444702]
[70.07375336 -488.54583740]
[71.63427734 -473.62722778]
[85.70765686 -468.68704224]
[96.28399658 -458.08279419]
[101.22760773 -443.87991333]
[99.50736237 -428.87786865]
[91.41126251 -416.05834961]
[78.49981689 -407.99261475]
[80.06034088 -393.07403564]
[89.07973480 -381.22076416]
[82.82012177 -366.69052124]
[84.38064575 -351.77191162]
[85.94116211 -336.85330200]
[97.23606873 -332.40353394]
[105.61684418 -323.52124023]
[109.44840240 -311.84988403]
[107.94531250 -299.58529663]
[101.33190918 -289.06240845]
[90.81127167 -282.31079102]
[91.92692566 -267.35235596]
[100.88526917 -259.22372437]
[101.93715668 -246.77072144]
[93.97520447 -236.62330627]
[94.86801910 -221.64990234]
[95.76083374 -206.67649841]
[96.65364838 -191.70309448]
[97.54646301 -176.72969055]
[98.43928528 -161.75627136]
[111.06749725 -153.90348816]
[116.71702576 -139.95549011]
[113.02702332 -125.18263245]
[101.20925903 -115.30100250]
[102.10207367 -100.32759094]
[102.99489594 -85.35418701]
[103.88771057 -70.38078308]
[104.78052521 -55.40737534]
[113.26165009 -43.16320038]
[106.35946655 -28.92696381]
[107.25228119 -13.95355797]
[117.69112396 0.15308891]
[109.31284332 16.55082893]
[110.42848969 31.50928116]
[111.54413605 46.46773529]
[118.71308136 33.29175949]
[130.83815002 24.46098328]
[145.57818604 21.68048668]
[160.08712769 25.48714256]
[171.56352234 35.14594269]
[177.79145813 48.79192734]
[177.56840515 63.79027176]
[170.93745422 77.24502563]
[159.17890930 86.55828857]
[144.56318665 89.93181610]
[129.91235352 86.71423340]
[118.05523682 77.52680969]
[111.28096008 64.14224243]
[109.72043610 79.06085205]
[108.15991211 93.97945404]
[110.52009583 101.68672943]
[106.46348572 109.10797119]
[104.68102264 124.00168610]
[102.89855194 138.89540100]
[101.11608887 153.78912354]
[99.33362579 168.68284607]
[97.55115509 183.57655334]
[95.99063110 198.49516296]
[94.65239716 213.43534851]
[97.00371552 222.26196289]
[93.18140411 228.58744812]
[91.62088013 243.50604248]
[101.29808044 255.71217346]
[99.50296783 270.81951904]
[87.80665588 279.97003174]
[86.24613190 294.88864136]
[88.46576691 303.74929810]
[84.54970551 310.01715088]
[82.76723480 324.91088867]
[80.98477173 339.80459595]
[79.20230865 354.69830322]
[85.24489594 369.32012939]
[76.05001831 381.03781128]
[74.26755524 395.93151855]
[72.48509216 410.82522583]
[70.70262146 425.71896362]
[68.92015839 440.61267090]
[67.13769531 455.50637817]
[65.46614838 470.41296387]
[72.96705627 480.90579224]
[71.36016846 493.29937744]
[62.04779053 501.01989746]
[60.26532364 515.91363525]
[58.48285675 530.80731201]
[56.70039368 545.70104980]
[54.91792679 560.59478760]
[68.33270264 567.69464111]
[78.27388763 579.16363525]
[83.39700317 593.45062256]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 207]
[13 206]
[14 205]
[15 204]
[16 203]
[18 200]
[20 199]
[21 198]
[22 197]
[23 196]
[24 195]
[25 194]
[27 192]
[28 191]
[29 190]
[30 189]
[31 187]
[32 186]
[35 183]
[36 182]
[37 180]
[38 179]
[41 178]
[42 177]
[43 176]
[44 175]
[45 174]
[46 173]
[47 171]
[48 170]
[49 169]
[50 156]
[51 155]
[52 154]
[55 152]
[56 151]
[58 149]
[59 148]
[60 147]
[61 146]
[62 145]
[66 141]
[67 140]
[68 139]
[69 138]
[70 137]
[71 136]
[73 133]
[74 132]
[78 126]
[79 125]
[80 124]
[82 122]
[83 121]
[89 115]
[90 114]
[91 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
