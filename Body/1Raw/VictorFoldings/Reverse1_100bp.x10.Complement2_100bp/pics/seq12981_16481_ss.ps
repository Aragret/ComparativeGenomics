%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCACCUCAUCCCGACUCUGACCCCACCCCGGAAGAUACCGACUCCCCUCAGUCCCCACCUCUGGAUUAACCCGACUAAACGGACGACGACGAUCCUCCUCxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[35.66480255 793.70220947]
[20.86474800 796.19580078]
[5.90932465 797.45861816]
[-9.09930611 797.48217773]
[-24.05861664 796.26623535]
[-38.86642075 793.81909180]
[-53.42156219 790.15747070]
[-67.62461853 785.30645752]
[-81.37855530 779.29907227]
[-94.58943176 772.17639160]
[-107.16699219 763.98712158]
[-119.02532196 754.78710938]
[-130.08341980 744.63928223]
[-140.26573181 733.61297607]
[-149.50273132 721.78344727]
[-157.73127747 709.23156738]
[-164.89520264 696.04296875]
[-170.94552612 682.30792236]
[-175.84095764 668.12005615]
[-179.54803467 653.57647705]
[-182.04144287 638.77636719]
[-183.30413818 623.82092285]
[-183.32749939 608.81231689]
[-182.11137390 593.85302734]
[-179.66404724 579.04522705]
[-176.00227356 564.49011230]
[-171.15103149 550.28710938]
[-165.14349365 536.53326416]
[-158.02067566 523.32244873]
[-149.83123779 510.74499512]
[-140.63111877 498.88677979]
[-130.48316956 487.82879639]
[-119.45672607 477.64663696]
[-107.62709045 468.40979004]
[-95.07508850 460.18136597]
[-81.88645172 453.01760864]
[-68.15127563 446.96743774]
[-53.96339417 442.07217407]
[-39.41972351 438.36526489]
[-24.61960983 435.87203979]
[-9.66415691 434.60952759]
[5.34447432 434.58636475]
[20.30375671 435.80267334]
[22.74948502 421.00338745]
[25.19521141 406.20413208]
[27.64093971 391.40484619]
[30.08666611 376.60559082]
[32.53239441 361.80630493]
[34.75751114 346.97225952]
[36.76152420 332.10671997]
[23.43223190 338.98641968]
[9.68107700 332.99426270]
[5.64490080 318.54748535]
[14.29902172 306.29571533]
[29.26394463 305.27047729]
[39.50758362 316.22598267]
[42.61169434 301.55068970]
[45.71580124 286.87536621]
[48.81991196 272.20007324]
[51.92402267 257.52478027]
[50.31750488 254.38607788]
[50.15143204 250.31330872]
[51.84825897 245.99195862]
[55.50832748 242.27026367]
[59.26462936 227.74819946]
[63.02092743 213.22615051]
[58.71732330 198.96682739]
[69.66393280 187.54393005]
[73.42023468 173.02188110]
[69.11663055 158.76255798]
[80.06324005 147.33967590]
[83.81953430 132.81761169]
[87.57583618 118.29554749]
[91.33213806 103.77349091]
[89.76241302 98.76850128]
[91.10863495 93.24029541]
[95.42251587 88.87825775]
[99.60951996 74.47447205]
[103.68919373 60.03992081]
[107.66128540 45.57539749]
[111.52558899 31.08170319]
[115.28189087 16.55964470]
[113.88619232 10.09717178]
[115.69252014 4.70883179]
[119.37226868 1.66441023]
[123.55928040 -12.73937130]
[127.74629211 -27.14315414]
[120.39240265 -40.87480164]
[124.84381866 -55.42263794]
[137.98016357 -62.34881973]
[137.37057495 -71.46288300]
[142.33822632 -76.93502045]
[146.73922729 -91.27486420]
[151.14021301 -105.61471558]
[155.54121399 -119.95455933]
[159.94221497 -134.29440308]
[163.26448059 -148.92187500]
[165.48959351 -163.75590515]
[167.71470642 -178.58995056]
[153.87663269 -184.60412598]
[142.06727600 -193.99566650]
[133.09179688 -206.12428284]
[127.56216431 -220.16300964]
[125.85540771 -235.15464783]
[128.08789062 -250.07705688]
[134.10739136 -263.91281128]
[143.50350952 -275.71853638]
[155.63558960 -284.68933105]
[169.67643738 -290.21356201]
[184.66873169 -291.91452026]
[199.59028625 -289.67626953]
[213.42370605 -283.65142822]
[225.22581482 -274.25076294]
[234.19192505 -262.11523438]
[239.71072388 -248.07223511]
[241.40589905 -233.07928467]
[239.16189575 -218.15859985]
[233.13169861 -204.32749939]
[223.72647095 -192.52902222]
[211.58747864 -183.56759644]
[197.54235840 -178.05422974]
[182.54875183 -176.36483765]
[180.32363892 -161.53079224]
[178.09852600 -146.69674683]
[188.64660645 -157.36155701]
[203.08749390 -161.41873169]
[217.64636230 -157.80776978]
[228.51757812 -147.47256470]
[232.85942078 -133.11468506]
[229.53694153 -118.48727417]
[219.41862488 -107.41389465]
[205.14938354 -102.78910065]
[190.45916748 -105.82180023]
[179.18794250 -115.71925354]
[174.28205872 -129.89341736]
[169.88105774 -115.55356598]
[165.48007202 -101.21371460]
[161.07907104 -86.87387085]
[156.67807007 -72.53401947]
[152.38394165 -58.16180801]
[159.76025391 -45.27283859]
[155.71922302 -30.60570908]
[142.15007019 -22.95614243]
[137.96305847 -8.55236053]
[133.77604675 5.85142136]
[129.80395508 20.31594467]
[126.04765320 34.83800507]
[127.41597748 42.10088730]
[122.12580872 49.54749298]
[118.15371704 64.01201630]
[119.41375732 71.29446411]
[114.01330566 78.66148376]
[109.82629395 93.06526947]
[105.85419464 107.52979279]
[102.09790039 122.05184937]
[98.34159851 136.57391357]
[94.58529663 151.09596252]
[98.62022400 166.39401245]
[87.94229126 176.77818298]
[84.18598938 191.30023193]
[88.22092438 206.59826660]
[77.54299164 216.98243713]
[73.78668976 231.50450134]
[70.03038788 246.02656555]
[66.59932709 260.62887573]
[63.49521637 275.30419922]
[60.39110565 289.97949219]
[57.28699493 304.65478516]
[54.18288422 319.33010864]
[51.62705231 334.11074829]
[49.62303925 348.97628784]
[51.77679443 355.22711182]
[50.62356567 360.79190063]
[47.33166504 364.25204468]
[44.88593674 379.05130005]
[42.44020844 393.85058594]
[39.99448395 408.64984131]
[37.54875565 423.44912720]
[35.10302734 438.24838257]
[49.65825653 441.90963745]
[63.86142731 446.76037598]
[77.61550903 452.76742554]
[90.82655334 459.88977051]
[103.40431213 468.07876587]
[115.26286316 477.27847290]
[126.32119751 487.42599487]
[136.50378418 498.45208740]
[145.74104309 510.28140259]
[153.96990967 522.83312988]
[161.13414001 536.02148438]
[167.18479919 549.75646973]
[172.08056641 563.94415283]
[175.78797913 578.48767090]
[178.28173828 593.28771973]
[179.54478455 608.24310303]
[179.56851196 623.25177002]
[178.35273743 638.21105957]
[175.90577698 653.01892090]
[172.24433899 667.57409668]
[167.39344788 681.77722168]
[161.38623047 695.53118896]
[154.26371765 708.74218750]
[146.07458496 721.31982422]
[136.87475586 733.17828369]
[126.72707367 744.23651123]
[115.70086670 754.41894531]
[103.87145233 763.65606689]
[91.31964111 771.88476562]
[78.13117981 779.04882812]
[64.39614868 785.09936523]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 179]
[44 178]
[45 177]
[46 176]
[47 175]
[48 174]
[49 171]
[50 170]
[56 169]
[57 168]
[58 167]
[59 166]
[60 165]
[64 164]
[65 163]
[66 162]
[68 160]
[69 159]
[71 157]
[72 156]
[73 155]
[74 154]
[77 153]
[78 152]
[79 150]
[80 149]
[81 147]
[82 146]
[85 145]
[86 144]
[87 143]
[90 140]
[92 139]
[93 138]
[94 137]
[95 136]
[96 135]
[97 124]
[98 123]
[99 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
