%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxCGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAA\
) } def
/len { sequence length } bind def

/coor [
[-0.65516138 476.20889282]
[-3.51340270 490.94821167]
[-7.89668989 505.30804443]
[-13.75699806 519.13104248]
[-21.03011703 532.26568604]
[-29.63636017 544.56811523]
[-39.48143387 555.90356445]
[-50.45746613 566.14782715]
[-62.44419861 575.18859863]
[-75.31030273 582.92687988]
[-88.91480255 589.27789307]
[-103.10864258 594.17205811]
[-117.73631287 597.55566406]
[-132.63754272 599.39172363]
[-147.64906311 599.66009521]
[-162.60639954 598.35784912]
[-177.34567261 595.49926758]
[-191.70538330 591.11566162]
[-205.52821350 585.25500488]
[-218.66270447 577.98156738]
[-230.96493530 569.37500000]
[-242.30014038 559.52966309]
[-252.54411316 548.55340576]
[-261.58462524 536.56646729]
[-269.32260132 523.70013428]
[-275.67327881 510.09548950]
[-280.56704712 495.90151978]
[-283.95034790 481.27377319]
[-285.78604126 466.37249756]
[-286.05404663 451.36099243]
[-284.75146484 436.40368652]
[-281.89248657 421.66448975]
[-277.50851440 407.30487061]
[-271.64752197 393.48217773]
[-264.37377930 380.34786987]
[-255.76693726 368.04583740]
[-245.92131042 356.71087646]
[-234.94477844 346.46716309]
[-222.95761108 337.42694092]
[-210.09112549 329.68930054]
[-196.48632812 323.33895874]
[-182.29223633 318.44549561]
[-167.66441345 315.06259155]
[-152.76309204 313.22723389]
[-137.75155640 312.95959473]
[-122.79428864 314.26254272]
[-108.05515289 317.12185669]
[-93.69564819 321.50619507]
[-79.87310791 327.36752319]
[-66.73897552 334.64160156]
[-58.14040756 322.35076904]
[-49.54184341 310.05990601]
[-40.94327927 297.76907349]
[-32.34471893 285.47824097]
[-23.83789062 273.12371826]
[-15.42327118 260.70623779]
[-7.00865316 248.28874207]
[1.40596557 235.87124634]
[-4.36851740 225.19273376]
[-5.05895329 213.00027466]
[-0.47304657 201.60418701]
[8.57584763 193.19009399]
[20.41228294 189.39967346]
[32.80875015 191.01071167]
[41.58935547 178.84924316]
[50.36995697 166.68778992]
[59.15056229 154.52633667]
[67.28577423 141.92402649]
[74.75351715 128.91506958]
[82.22126007 115.90612030]
[89.68900299 102.89717102]
[95.35178375 89.00714111]
[99.10808563 74.48508453]
[95.07315826 59.18704605]
[105.75109100 48.80287552]
[109.50739288 34.28081512]
[113.26369476 19.75875473]
[117.01999664 5.23669577]
[115.62429047 -1.22577691]
[117.43061829 -6.61411667]
[121.11036682 -9.65853882]
[125.29737854 -24.06232071]
[129.48439026 -38.46610260]
[133.67140198 -52.86988449]
[137.85841370 -67.27366638]
[142.04542542 -81.67745209]
[146.23243713 -96.08123016]
[150.41944885 -110.48501587]
[149.80986023 -119.59908295]
[154.77751160 -125.07121277]
[159.17849731 -139.41105652]
[151.67068481 -148.62893677]
[149.56628418 -160.20790100]
[153.27427673 -171.25076294]
[161.76383972 -179.05094910]
[172.84761047 -181.75584412]
[177.67359924 -195.95829773]
[182.49960327 -210.16075134]
[187.32560730 -224.36320496]
[174.14122009 -231.59805298]
[162.41355896 -241.01258850]
[152.49903870 -252.32069397]
[144.69892883 -265.17874146]
[139.25028992 -279.19598389]
[136.31866455 -293.94647217]
[135.99317932 -308.98193359]
[138.28369141 -323.84548950]
[143.12062073 -338.08538818]
[150.35696411 -351.26895142]
[159.77282715 -362.99554443]
[171.08206177 -372.90878296]
[183.94099426 -380.70742798]
[197.95886230 -386.15447998]
[212.70968628 -389.08444214]
[227.74517822 -389.40823364]
[242.60845947 -387.11602783]
[256.84783936 -382.27746582]
[270.03057861 -375.03964233]
[281.75607300 -365.62243652]
[291.66802979 -354.31210327]
[299.46524048 -341.45227051]
[304.91070557 -327.43377686]
[307.83895874 -312.68264771]
[308.16104126 -297.64709473]
[305.86715698 -282.78408813]
[301.02700806 -268.54525757]
[293.78765869 -255.36334229]
[284.36914062 -243.63888550]
[273.05767822 -233.72821045]
[260.19696045 -225.93249512]
[246.17785645 -220.48860168]
[231.42637634 -217.56201172]
[216.39080811 -217.24163818]
[201.52806091 -219.53720093]
[196.70205688 -205.33474731]
[191.87606812 -191.13229370]
[187.05006409 -176.92984009]
[196.11531067 -161.02584839]
[190.58183289 -143.24119568]
[173.51835632 -135.01005554]
[169.11735535 -120.67021179]
[164.82322693 -106.29800415]
[160.63621521 -91.89421844]
[156.44920349 -77.49044037]
[152.26219177 -63.08665466]
[148.07518005 -48.68287277]
[143.88816833 -34.27909088]
[139.70115662 -19.87530899]
[135.51414490 -5.47152710]
[131.54205322 8.99299622]
[127.78575134 23.51505661]
[124.02944946 38.03711700]
[120.27314758 52.55917358]
[124.57675934 66.81849670]
[113.63014984 78.24137878]
[109.87384796 92.76344299]
[119.97686768 81.67610931]
[132.98036194 74.19886780]
[147.64492798 71.04441071]
[162.57281494 72.51338959]
[176.34121704 78.46580505]
[187.63780212 88.33429718]
[195.38584900 101.17827606]
[198.84687805 115.77352142]
[197.69099426 130.72892761]
[192.02836609 144.61901855]
[182.39872742 156.11988831]
[169.71990967 164.13534546]
[155.20039368 167.90142822]
[140.22406006 167.05914307]
[126.21836090 161.68879700]
[114.51824951 152.30224609]
[106.23889923 139.79414368]
[102.16943359 125.35671997]
[102.69795227 110.36490631]
[95.23020935 123.37386322]
[87.76247406 136.38281250]
[80.29473114 149.39176941]
[94.75076294 145.38887024]
[108.44944763 151.50001526]
[115.12793732 164.93122864]
[111.73291016 179.54197693]
[99.81653595 188.65240479]
[84.82680511 188.09735107]
[73.61683655 178.13056946]
[71.31201935 163.30694580]
[62.53141403 175.46839905]
[53.75081253 187.62985229]
[44.97020721 199.79130554]
[51.13568115 216.84254456]
[45.87754440 234.03067017]
[31.48167801 244.52876282]
[13.82346153 244.28585815]
[5.40884256 256.70336914]
[-3.00577617 269.12084961]
[-11.42039490 281.53836060]
[-13.64385128 290.39804077]
[-20.05387878 294.07681274]
[-28.65244293 306.36764526]
[-37.25100708 318.65847778]
[-45.84957123 330.94931030]
[-54.44813538 343.24014282]
[-43.11245346 353.08496094]
[-32.86794662 364.06072998]
[-23.82686424 376.04724121]
[-16.08826256 388.91317749]
[-9.73692799 402.51751709]
[-4.84245253 416.71124268]
[-1.45846093 431.33883667]
[0.37796926 446.24002075]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[50 202]
[51 201]
[52 200]
[53 199]
[54 198]
[55 196]
[56 195]
[57 194]
[58 193]
[64 189]
[65 188]
[66 187]
[67 186]
[68 178]
[69 177]
[70 176]
[71 175]
[72 156]
[73 155]
[75 153]
[76 152]
[77 151]
[78 150]
[81 149]
[82 148]
[83 147]
[84 146]
[85 145]
[86 144]
[87 143]
[88 142]
[90 141]
[91 140]
[96 137]
[97 136]
[98 135]
[99 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
