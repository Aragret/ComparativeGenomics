%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCGGCGUGAGCAUUCCCCACCUAAAAAGAUACAUCGGCAACUCAACACCAUCAGUUUUACAUUAUUAAUAAUCAUCAUUCCGAUCCUCCCACAACUAAxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[65.61406708 488.70513916]
[50.72616196 486.20455933]
[37.06548309 479.77893066]
[25.64573669 469.90515137]
[17.31435013 457.31582642]
[12.68956375 442.94525146]
[12.11456871 427.85974121]
[15.63203335 413.17880249]
[22.98093796 399.99185181]
[33.61594772 389.27740479]
[46.74786758 381.83056641]
[61.40222931 378.20397949]
[61.84883499 363.21063232]
[54.49390411 350.25863647]
[62.63865662 336.69494629]
[63.08526230 321.70159912]
[63.53186798 306.70825195]
[63.97847366 291.71490479]
[64.42507935 276.72152710]
[64.87168884 261.72817993]
[62.30681610 257.69949341]
[62.24552536 252.01676941]
[65.56141663 246.29693604]
[66.45423126 231.32353210]
[67.34704590 216.35012817]
[58.16677856 228.21278381]
[44.56384277 234.53419495]
[29.57716560 233.90211487]
[16.55481148 226.45776367]
[8.40600777 213.86422729]
[6.95121861 198.93495178]
[12.51544666 185.00514221]
[23.85562897 175.18678284]
[38.43833923 171.67330933]
[53.00576401 175.24963379]
[64.30350494 185.11680603]
[69.80761719 199.07049561]
[73.12987518 184.44302368]
[68.40362549 170.31816101]
[79.00527954 158.57441711]
[70.87487793 146.14733887]
[74.03575134 131.26570129]
[87.12553406 122.82204437]
[90.44779205 108.19458008]
[93.44256592 93.49657440]
[96.10836029 78.73535919]
[98.77416229 63.97414017]
[101.43995667 49.21292496]
[104.10575104 34.45170593]
[95.19078827 46.51502228]
[83.84496307 56.32686234]
[70.62185669 63.40848923]
[56.16665649 67.41437531]
[41.18465805 68.14906311]
[26.40687180 65.57670593]
[12.55433655 59.82281113]
[0.30294907 51.16812897]
[-9.74951935 40.03494263]
[-17.11258507 26.96645737]
[-21.42698860 12.60031986]
[-22.48222160 -2.36251688]
[-20.22679520 -17.19198227]
[-14.77075672 -31.16451454]
[-6.38031960 -43.59836197]
[4.53512859 -53.88684845]
[17.44299889 -61.52798080]
[31.71348763 -66.14892578]
[46.65030670 -67.52422333]
[61.52465439 -65.58676147]
[75.61077881 -60.43107605]
[88.22138977 -52.30872726]
[98.74118042 -41.61602020]
[106.65687561 -28.87467957]
[111.58224487 -14.70637894]
[113.27696991 0.19757695]
[111.65979767 15.10353184]
[119.70097351 2.44100714]
[127.74214172 -10.22151756]
[135.78332520 -22.88404274]
[143.82449341 -35.54656601]
[151.86566162 -48.20909119]
[157.42489624 -62.14089203]
[160.31016541 -76.86077881]
[163.19543457 -91.58067322]
[166.08070374 -106.30056763]
[168.63653564 -121.08122253]
[170.86166382 -135.91526794]
[173.08677673 -150.74931335]
[174.42500305 -165.68949890]
[174.87161255 -180.68284607]
[175.31822205 -195.67619324]
[175.76483154 -210.66954041]
[176.21142578 -225.66288757]
[176.32310486 -240.66247559]
[176.09977722 -255.66081238]
[161.58622742 -259.88558960]
[148.96368408 -268.20199585]
[139.35450745 -279.87054443]
[133.61314392 -293.85366821]
[132.25010681 -308.90802002]
[135.38659668 -323.69497681]
[142.74374390 -336.89965820]
[153.66732788 -347.34796143]
[167.18603516 -354.11077881]
[182.09779358 -356.58682251]
[197.07667542 -354.55584717]
[210.79074097 -348.19854736]
[222.02056885 -338.08010864]
[229.76759338 -325.10031128]
[233.34297180 -310.41333008]
[232.42875671 -295.32504272]
[227.10627747 -281.17718506]
[217.84877014 -269.22769165]
[205.47943115 -260.53915405]
[191.09811401 -255.88414001]
[191.32144165 -240.88580322]
[193.58322144 -238.18087769]
[194.64723206 -234.24603271]
[193.94966125 -229.65618896]
[191.20478821 -225.21627808]
[190.75817871 -210.22293091]
[190.31156921 -195.22958374]
[189.86495972 -180.23623657]
[189.41836548 -165.24288940]
[199.62519836 -176.23472595]
[214.32086182 -179.24096680]
[228.02423096 -173.14035034]
[235.62429810 -160.20825195]
[234.28642273 -145.26803589]
[224.50958252 -133.89202881]
[209.94032288 -130.32319641]
[196.01260376 -135.89262390]
[187.92082214 -148.52418518]
[185.69569397 -133.69013977]
[183.47058105 -118.85610199]
[185.26107788 -115.81858826]
[185.66926575 -111.76292419]
[184.23266602 -107.34823608]
[180.80059814 -103.41529083]
[177.91532898 -88.69540405]
[175.03005981 -73.97550964]
[172.14477539 -59.25561905]
[181.24635315 -71.17876434]
[192.82206726 -80.71829987]
[206.26470947 -87.37379456]
[220.86907959 -90.79611206]
[235.86907959 -90.80573273]
[250.47782898 -87.40214539]
[263.92898560 -80.76389313]
[275.51693726 -71.23921967]
[284.63378906 -59.32775116]
[290.80130005 -45.65435028]
[293.69592285 -30.93629646]
[293.16580200 -15.94566536]
[289.23880005 -1.46883845]
[282.12084961 11.73476028]
[272.18539429 22.97249413]
[259.95361328 31.65485764]
[246.06715393 37.32638931]
[231.25448608 39.68957138]
[216.29263306 38.62043762]
[201.96647644 34.17507172]
[189.02754211 26.58666992]
[178.15455627 16.25330353]
[169.91793823 3.71703887]
[164.74972534 -10.36449432]
[162.92103577 -25.25260735]
[164.52818298 -40.16791916]
[156.48701477 -27.50539398]
[148.44584656 -14.84286976]
[140.40466309 -2.18034482]
[132.36349487 10.48217964]
[124.32232666 23.14470482]
[118.86696625 37.11750412]
[116.20117188 51.87871933]
[113.53537750 66.63993835]
[110.86958313 81.40115356]
[108.20378113 96.16236877]
[109.93149567 99.61018372]
[110.13108063 103.80279541]
[108.50396729 108.04066467]
[105.07525635 111.51683807]
[101.75299072 126.14430237]
[109.91116333 139.41389465]
[106.33354187 154.20088196]
[93.63274384 161.89668274]
[98.12136078 177.06779480]
[87.75733948 187.76528931]
[84.43507385 202.39274597]
[82.32044983 217.24295044]
[81.42763519 232.21635437]
[80.53482056 247.18975830]
[79.86503601 262.17480469]
[79.41843414 277.16815186]
[78.97182465 292.16149902]
[78.52521515 307.15484619]
[78.07861328 322.14819336]
[77.63200378 337.14154053]
[84.95499420 351.16595459]
[76.84218597 363.65722656]
[76.39557648 378.65057373]
[90.80809784 383.14300537]
[103.47349548 391.35824585]
[113.45191956 402.68670654]
[120.00289154 416.28768921]
[122.64028931 431.15197754]
[121.16841125 446.17648315]
[115.69647217 460.24633789]
[106.63053131 472.31741333]
[94.64333344 481.49401855]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 201]
[13 200]
[15 198]
[16 197]
[17 196]
[18 195]
[19 194]
[20 193]
[23 192]
[24 191]
[25 190]
[37 189]
[38 188]
[40 186]
[43 183]
[44 182]
[45 178]
[46 177]
[47 176]
[48 175]
[49 174]
[76 173]
[77 172]
[78 171]
[79 170]
[80 169]
[81 168]
[82 142]
[83 141]
[84 140]
[85 139]
[86 135]
[87 134]
[88 133]
[89 124]
[90 123]
[91 122]
[92 121]
[93 120]
[94 116]
[95 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
