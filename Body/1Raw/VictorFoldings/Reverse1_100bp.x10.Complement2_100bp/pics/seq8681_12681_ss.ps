%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[79.11963654 540.91058350]
[66.87704468 549.59350586]
[53.94219208 557.20684814]
[40.40827179 563.69586182]
[26.37279892 569.01367188]
[11.93690395 573.12207031]
[-2.79540300 575.99139404]
[-17.71797180 577.60095215]
[-32.72328568 577.93920898]
[-47.70322800 577.00366211]
[-62.54986572 574.80114746]
[-77.15622711 571.34741211]
[-91.41706848 566.66748047]
[-105.22964478 560.79492188]
[-118.49443054 553.77215576]
[-131.11584473 545.64971924]
[-143.00296021 536.48620605]
[-154.07012939 526.34759521]
[-164.23759460 515.30688477]
[-173.43211365 503.44375610]
[-181.58743286 490.84356689]
[-188.64479065 477.59713745]
[-194.55334473 463.79995728]
[-199.27052307 449.55136108]
[-202.76232910 434.95407104]
[-205.00360107 420.11322021]
[-205.97821045 405.13577271]
[-205.67910767 390.12963867]
[-204.10847473 375.20291138]
[-201.27760315 360.46316528]
[-197.20690918 346.01660156]
[-191.92572021 331.96728516]
[-185.47207642 318.41650391]
[-177.89248657 305.46182251]
[-169.24156189 293.19659424]
[-159.58163452 281.70922852]
[-148.98229980 271.08248901]
[-137.51992798 261.39291382]
[-125.27710724 252.71032715]
[-112.34205627 245.09729004]
[-98.80796814 238.60865784]
[-84.77236176 233.29118347]
[-70.33635712 229.18318176]
[-55.60397720 226.31425476]
[-40.68136597 224.70504761]
[-25.67604256 224.36718750]
[-10.69612503 225.30308533]
[4.15045547 227.50602722]
[18.75672722 230.96009827]
[33.01744843 235.64044189]
[38.88640976 221.83627319]
[36.74566269 207.09631348]
[49.26564407 197.42362976]
[55.13460541 183.61946106]
[61.00356674 169.81527710]
[60.72776413 162.42977905]
[67.06404114 155.85031128]
[73.13787079 142.13504028]
[71.21681976 127.36483765]
[83.87942505 117.87963867]
[77.93715668 109.63251495]
[75.92835236 99.66806793]
[78.21115112 89.76279449]
[84.37856293 81.68265533]
[93.33103943 76.86821747]
[103.47248840 76.17781830]
[110.15267944 62.74744415]
[116.83287811 49.31707001]
[117.85273743 40.23974991]
[123.71381378 35.73757935]
[130.59323120 22.40814972]
[137.47264099 9.07871914]
[144.35205078 -4.25070953]
[151.23146057 -17.58013916]
[156.26838684 -31.70916748]
[159.37248230 -46.38447189]
[162.47659302 -61.05977249]
[165.58070374 -75.73507690]
[168.68481445 -90.41037750]
[171.78892517 -105.08567810]
[174.89303589 -119.76098633]
[161.72923279 -125.94462585]
[150.28192139 -134.90362549]
[141.12564087 -146.18408203]
[134.71897888 -159.21566772]
[131.38163757 -173.34053040]
[131.27845764 -187.84642029]
[134.41127014 -202.00265503]
[140.61901855 -215.09690857]
[149.58598328 -226.47105408]
[160.85786438 -235.55427551]
[173.86479187 -241.89163208]
[187.95016479 -245.16696167]
[202.40370178 -245.21852112]
[205.72596741 -259.84597778]
[209.04823303 -274.47344971]
[212.37048340 -289.10089111]
[198.59187317 -295.14624023]
[186.20649719 -303.69018555]
[175.66209412 -314.42388916]
[167.33982849 -326.95928955]
[161.54054260 -340.84326172]
[158.47387695 -355.57391357]
[158.25070190 -370.61874390]
[160.87905884 -385.43386841]
[166.26396179 -399.48376465]
[174.21075439 -412.26049805]
[184.43212891 -423.30224609]
[196.55862427 -432.20980835]
[210.15185547 -438.66119385]
[224.72044373 -442.42321777]
[239.73773193 -443.35986328]
[254.66087341 -441.43725586]
[268.95040894 -436.72494507]
[282.08975220 -429.39321899]
[293.60394287 -419.70715332]
[303.07675171 -408.01687622]
[310.16574097 -394.74499512]
[314.61462402 -380.37127686]
[316.26263428 -365.41534424]
[315.05014038 -350.41778564]
[311.02099609 -335.92080688]
[304.32086182 -322.44845581]
[295.19192505 -310.48770142]
[283.96420288 -300.47100830]
[271.04354858 -292.76037598]
[256.89706421 -287.63461304]
[242.03613281 -285.27899170]
[226.99795532 -285.77862549]
[223.67568970 -271.15118408]
[220.35342407 -256.52371216]
[217.03117371 -241.89625549]
[230.92602539 -235.04064941]
[242.78807068 -225.05923462]
[251.92807007 -212.52653503]
[257.81359863 -198.16551208]
[260.10015869 -182.80578613]
[258.65127563 -167.33576965]
[253.54667664 -152.65126038]
[245.07786560 -139.60354614]
[233.73152161 -128.95013428]
[220.16149902 -121.31064606]
[205.15121460 -117.13091278]
[189.56834412 -116.65687561]
[186.46423340 -101.98156738]
[183.36012268 -87.30626678]
[180.25601196 -72.63096619]
[177.15190125 -57.95566177]
[174.04779053 -43.28036118]
[170.94367981 -28.60505867]
[180.54154968 -40.13245773]
[193.19819641 -48.18287659]
[207.70727539 -51.98899460]
[222.68588257 -51.18804169]
[236.70632935 -45.85635757]
[248.43229675 -36.50212479]
[256.74615479 -24.01692963]
[260.85543823 -9.59078026]
[260.36849976 5.40131378]
[255.33174133 19.53040314]
[246.22525024 31.44979095]
[233.91697693 40.02339554]
[219.58009338 44.43404388]
[204.58110046 44.26132965]
[190.34957886 39.52172470]
[178.24200439 30.66697121]
[169.41238403 18.54104996]
[164.70231628 4.29972887]
[164.56089783 -10.70072651]
[157.68147278 2.62870288]
[150.80206299 15.95813179]
[143.92265320 29.28756142]
[137.04324341 42.61698914]
[130.26324463 55.99726486]
[123.58305359 69.42764282]
[116.90286255 82.85801697]
[124.06403351 100.69029236]
[115.89242554 118.08273315]
[97.59469604 123.95347595]
[99.08130646 139.70468140]
[86.85314178 148.20887756]
[80.77930450 161.92413330]
[74.80774689 175.68423462]
[68.93878174 189.48841858]
[63.06982422 203.29258728]
[64.79077911 219.01992798]
[52.69058609 227.70523071]
[46.82162476 241.50939941]
[60.08659363 248.53182983]
[72.70822144 256.65393066]
[84.59557343 265.81713867]
[95.66300201 275.95550537]
[105.83075714 286.99591064]
[115.02558136 298.85882568]
[123.18122864 311.45880127]
[130.23892212 324.70501709]
[136.14784241 338.50207520]
[140.86537170 352.75054932]
[144.35755920 367.34774780]
[146.59922791 382.18853760]
[147.57420349 397.16595459]
[147.27549744 412.17211914]
[145.70524597 427.09887695]
[142.87477112 441.83868408]
[138.80444336 456.28536987]
[133.52360535 470.33477783]
[127.07032013 483.88577271]
[119.49106598 496.84063721]
[110.84045410 509.10607910]
[101.18081665 520.59368896]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[50 188]
[51 187]
[53 185]
[54 184]
[55 183]
[57 182]
[58 181]
[60 179]
[66 176]
[67 175]
[68 174]
[70 173]
[71 172]
[72 171]
[73 170]
[74 169]
[75 150]
[76 149]
[77 148]
[78 147]
[79 146]
[80 145]
[81 144]
[94 132]
[95 131]
[96 130]
[97 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
