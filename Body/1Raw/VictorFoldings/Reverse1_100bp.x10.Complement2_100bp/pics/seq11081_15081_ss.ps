%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACCGACCAACGGAGUAGCCCACUACUAUCGGUUCCACCCCUAUUCACACCAAAGCUUCUUCUAUAUUUUAUACUAAUCAAGACACCGACACUUACAAUxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[100.87039185 522.45098877]
[95.67304230 508.34820557]
[92.68948364 493.61730957]
[91.98965454 478.60363770]
[93.58998108 463.65908813]
[97.45292664 449.13400269]
[103.48794556 435.36886597]
[111.55357361 422.68637085]
[121.46073151 411.38375854]
[132.97718811 401.72604370]
[145.83297729 393.93957520]
[159.72674561 388.20690918]
[156.18707275 373.63052368]
[152.64741516 359.05413818]
[149.10774231 344.47778320]
[145.56806946 329.90139771]
[142.02839661 315.32501221]
[137.39524841 309.56692505]
[138.54624939 300.50527954]
[135.22398376 285.87783813]
[131.90171814 271.25036621]
[128.57946777 256.62292480]
[115.98024750 244.40707397]
[121.57278442 226.86270142]
[118.03311157 212.28633118]
[107.86928558 205.72712708]
[104.80103302 193.61227417]
[111.00192261 182.30245972]
[107.67965698 167.67500305]
[104.35739899 153.04754639]
[101.03514099 138.42008972]
[97.71288300 123.79262543]
[94.39062500 109.16516113]
[88.52165985 95.36098480]
[80.29285431 82.81958771]
[72.06404877 70.27819061]
[56.84769440 66.94646454]
[48.68116760 54.11048126]
[51.95122528 39.62454605]
[43.72241974 27.08314705]
[35.40047455 14.60335255]
[26.98585701 2.18585730]
[18.57123756 -10.23163795]
[10.15662003 -22.64913368]
[1.74200106 -35.06662750]
[-6.67261744 -47.48412323]
[-11.36988926 -49.76068497]
[-14.41927624 -53.26133347]
[-15.63045788 -57.15338516]
[-15.17118073 -60.64929962]
[-23.02293587 -73.43014526]
[-31.34487915 -85.90993500]
[-40.12548447 -98.07138824]
[-48.90608597 -110.23284912]
[-57.68668747 -122.39430237]
[-66.46729279 -134.55575562]
[-79.51937866 -127.13346863]
[-93.29744720 -121.16589355]
[-107.63996887 -116.72299957]
[-122.37878418 -113.85687256]
[-137.34107971 -112.60112762]
[-152.35144043 -112.97047424]
[-167.23385620 -114.96058655]
[-181.81387329 -118.54814148]
[-195.92051697 -123.69106293]
[-209.38842773 -130.32905579]
[-222.05966187 -138.38430786]
[-233.78567505 -147.76235962]
[-244.42898560 -158.35325623]
[-253.86480713 -170.03282166]
[-261.98251343 -182.66413879]
[-268.68692017 -196.09910583]
[-273.89941406 -210.18019104]
[-277.55889893 -224.74230957]
[-279.62246704 -239.61474609]
[-280.06591797 -254.62309265]
[-278.88403320 -269.59140015]
[-276.09072876 -284.34417725]
[-271.71868896 -298.70846558]
[-265.81921387 -312.51583862]
[-258.46142578 -325.60440063]
[-249.73165894 -337.82070923]
[-239.73222351 -349.02151489]
[-228.58035278 -359.07553101]
[-216.40682983 -367.86486816]
[-203.35433960 -375.28646851]
[-189.57594299 -381.25329590]
[-175.23318481 -385.69540405]
[-160.49421692 -388.56076050]
[-145.53186035 -389.81570435]
[-130.52151489 -389.44552612]
[-115.63919830 -387.45462036]
[-101.05937958 -383.86627197]
[-86.95301056 -378.72259521]
[-73.48546600 -372.08386230]
[-60.81466293 -364.02795410]
[-49.08914948 -354.64926147]
[-38.44640732 -344.05780029]
[-29.01121330 -332.37771606]
[-20.89419174 -319.74597168]
[-14.19051075 -306.31063843]
[-8.97876644 -292.22927856]
[-5.32006407 -277.66696167]
[-3.25730038 -262.79443359]
[-2.81466055 -247.78604126]
[-3.99733400 -232.81779480]
[-6.79145432 -218.06517029]
[-11.16426182 -203.70112610]
[-17.06448936 -189.89407349]
[-24.42295647 -176.80590820]
[-33.15339279 -164.59005737]
[-43.15343475 -153.38977051]
[-54.30583572 -143.33636475]
[-45.52523422 -131.17491150]
[-36.74462891 -119.01345062]
[-27.96402740 -106.85199738]
[-19.18342400 -94.69053650]
[-14.25210953 -108.85677338]
[-0.15329234 -113.97764587]
[12.71990490 -106.27824402]
[14.87784004 -91.43428040]
[4.72976303 -80.38816833]
[-10.24209309 -81.28189850]
[-2.39033794 -68.50105286]
[5.74487782 -55.89874268]
[14.15949631 -43.48124695]
[22.57411575 -31.06375122]
[30.98873329 -18.64625740]
[39.40335083 -6.22876120]
[47.81797028 6.18873453]
[54.17251587 9.96252918]
[56.26382065 18.85433960]
[64.49263000 31.39573860]
[79.08298492 34.16289520]
[87.60681915 46.76443481]
[84.60544586 62.04937744]
[92.83425140 74.59078217]
[101.06306458 87.13217926]
[99.25337982 72.24174500]
[101.01087952 57.34506226]
[106.23617554 43.28460693]
[114.63373566 30.85557175]
[125.72865295 20.76087761]
[138.89344788 13.57142544]
[153.38359070 9.69381523]
[168.37957764 9.34734535]
[183.03334045 12.55160999]
[196.51612854 19.12539291]
[208.06541443 28.69691277]
[217.02803040 40.72485352]
[222.89710999 54.52898407]
[225.34071350 69.32860565]
[224.22065735 84.28672791]
[219.60028076 98.55740356]
[211.74089050 111.33354950]
[201.08695984 121.89260864]
[188.24104309 129.63743591]
[173.92961121 134.13000488]
[158.96206665 135.11624146]
[144.18490601 132.54035950]
[130.43380737 126.54807281]
[118.48650360 117.47823334]
[109.01808167 105.84290314]
[112.34033966 120.47036743]
[115.66260529 135.09782410]
[118.98486328 149.72528076]
[122.30712128 164.35275269]
[125.62937927 178.98020935]
[138.45002747 192.19808960]
[132.60949707 208.74665833]
[136.14916992 223.32302856]
[146.73796082 230.68782043]
[149.38607788 242.90138245]
[143.20692444 253.30064392]
[146.52919006 267.92810059]
[149.85144043 282.55557251]
[153.17370605 297.18304443]
[156.60476685 311.78533936]
[160.14443970 326.36172485]
[163.68411255 340.93811035]
[167.22378540 355.51446533]
[170.76345825 370.09085083]
[174.30313110 384.66723633]
[189.27868652 383.38937378]
[204.27380371 384.41262817]
[218.93695068 387.71301270]
[232.92442322 393.21310425]
[245.90832520 400.78405762]
[257.58428955 410.24832153]
[267.67861938 421.38406372]
[275.95468140 433.93026733]
[282.21847534 447.59280396]
[286.32318115 462.05142212]
[288.17257690 476.96719360]
[287.72332764 491.99047852]
[284.98590088 506.76907349]
[280.02453613 520.95654297]
[272.95550537 534.22039795]
[263.94448853 546.24963379]
[253.20275879 556.76226807]
[240.98211670 565.51190186]
[227.56901550 572.29345703]
[213.27786255 576.94787598]
[198.44369507 579.36608887]
[183.41424561 579.49145508]
[168.54179382 577.32104492]
[154.17500305 572.90563965]
[140.65063477 566.34881592]
[128.28572083 557.80426025]
[117.37012482 547.47222900]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 183]
[13 182]
[14 181]
[15 180]
[16 179]
[17 178]
[19 177]
[20 176]
[21 175]
[22 174]
[24 171]
[25 170]
[28 168]
[29 167]
[30 166]
[31 165]
[32 164]
[33 163]
[34 138]
[35 137]
[36 136]
[39 133]
[40 132]
[41 130]
[42 129]
[43 128]
[44 127]
[45 126]
[46 125]
[50 124]
[51 123]
[52 117]
[53 116]
[54 115]
[55 114]
[56 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
