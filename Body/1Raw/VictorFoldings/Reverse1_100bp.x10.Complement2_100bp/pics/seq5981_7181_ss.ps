%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxGGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGU\
) } def
/len { sequence length } bind def

/coor [
[99.88174438 621.38806152]
[103.26634979 606.65594482]
[110.84439850 593.57678223]
[121.94206238 583.31353760]
[135.57254028 576.77893066]
[133.34741211 561.94488525]
[131.12229919 547.11083984]
[128.89718628 532.27679443]
[126.67206573 517.44274902]
[124.44695282 502.60870361]
[122.22183228 487.77465820]
[119.99671936 472.94061279]
[108.66505432 466.80685425]
[102.84841156 455.09152222]
[104.87104797 441.97210693]
[114.21598816 432.27227783]
[112.21197510 417.40673828]
[110.20796204 402.54122925]
[96.41033173 392.92538452]
[93.78470612 375.97189331]
[104.43848419 362.09686279]
[102.21336365 347.26281738]
[99.98825073 332.42880249]
[97.76313019 317.59475708]
[95.53801727 302.76071167]
[93.31289673 287.92666626]
[91.08778381 273.09262085]
[85.21819305 286.89651489]
[74.29718781 297.17910767]
[60.16515350 302.20758057]
[45.20358276 301.13458252]
[31.93376350 294.14086914]
[22.59189224 282.40505981]
[18.75223923 267.90481567]
[21.06185341 253.08367920]
[29.13152504 240.43930054]
[41.60137177 232.10246277]
[56.37000275 229.47805786]
[70.94865417 233.00836182]
[82.88055420 242.09844971]
[90.15546417 255.21807861]
[90.82524872 240.23303223]
[91.38346100 225.24342346]
[91.83006287 210.25007629]
[92.27667236 195.25672913]
[92.50000000 180.25839233]
[84.76270294 167.53111267]
[92.50000000 153.73094177]
[92.50000000 138.73094177]
[84.76270294 126.00366974]
[92.50000000 112.20349884]
[85.67605591 100.00000000]
[92.50000000 87.79650116]
[92.38833618 72.79691315]
[92.16500854 57.79858017]
[84.22309875 44.11513138]
[91.77005005 31.27407455]
[91.54672241 16.27573776]
[91.32339478 1.27740014]
[90.65361023 -13.70763874]
[89.53796387 -28.66609192]
[88.42230988 -43.62454605]
[87.30666351 -58.58300018]
[73.25942230 -61.73984146]
[60.68537140 -68.72023010]
[50.59972382 -78.95032501]
[43.81388474 -91.59429932]
[40.87017441 -105.62269592]
[41.99850082 -119.89617157]
[47.09843063 -133.25807190]
[55.74805069 -144.62814331]
[67.23886871 -153.08988953]
[80.63383484 -157.96440125]
[79.74101257 -172.93780518]
[78.84819794 -187.91120911]
[77.73255157 -202.86965942]
[76.39431763 -217.80984497]
[75.05608368 -232.75003052]
[63.21172714 -242.86680603]
[62.06739426 -258.03732300]
[71.78517914 -269.26678467]
[70.44694519 -284.20697021]
[69.10871124 -299.14715576]
[67.32624054 -314.04086304]
[65.10112762 -328.87490845]
[62.87600708 -343.70895386]
[60.65089035 -358.54299927]
[58.42577362 -373.37704468]
[56.20065689 -388.21109009]
[41.20704651 -389.90048218]
[27.16193199 -395.41384888]
[15.02293205 -404.37524414]
[5.61770582 -416.17373657]
[-0.41248384 -430.00482178]
[-2.65648842 -444.92550659]
[-0.96130794 -459.91848755]
[4.55747747 -473.96145630]
[13.52358723 -486.09701538]
[25.32569885 -495.49768066]
[39.15912247 -501.52252197]
[54.08067322 -503.76077271]
[69.07297516 -502.05978394]
[83.11383057 -496.53558350]
[95.24590302 -487.56478882]
[104.64201355 -475.75906372]
[110.66152191 -461.92330933]
[112.89400482 -447.00088501]
[111.18724823 -432.00924683]
[105.65761566 -417.97052002]
[96.68213654 -405.84191895]
[84.87277222 -396.45034790]
[71.03469849 -390.43618774]
[73.25981903 -375.60214233]
[75.48493195 -360.76809692]
[77.71005249 -345.93405151]
[79.93516541 -331.10003662]
[82.16028595 -316.26599121]
[84.33181000 -314.49322510]
[85.93196869 -311.75350952]
[86.58894348 -308.26013184]
[86.01490021 -304.35690308]
[84.04889679 -300.48538208]
[85.38713074 -285.54519653]
[86.72536469 -270.60501099]
[98.28414154 -261.28137207]
[99.85412598 -246.14895630]
[89.99626923 -234.08827209]
[91.33450317 -219.14808655]
[92.67273712 -204.20790100]
[95.69817352 -200.51252747]
[96.43431091 -194.87734985]
[93.82160950 -188.80403137]
[94.71442413 -173.83062744]
[95.60723877 -158.85720825]
[110.80588531 -155.07205200]
[124.10742188 -146.76513672]
[134.20339966 -134.73948669]
[140.09634399 -120.16452026]
[141.19824219 -104.46250916]
[137.38925171 -89.16965485]
[129.03059387 -75.78588867]
[116.93028259 -65.62768555]
[102.26512146 -59.69864655]
[103.38076782 -44.74019241]
[104.49641418 -29.78174019]
[105.61206055 -14.82328701]
[107.64572144 -12.89394379]
[109.03768158 -10.04279232]
[109.43300629 -6.51021147]
[108.57025146 -2.66051292]
[106.32173157 1.05407238]
[106.54505920 16.05241013]
[106.76838684 31.05074692]
[114.69432068 43.66141129]
[107.16334534 57.57525253]
[107.38667297 72.57358551]
[110.62940979 79.21485901]
[107.50000000 87.79650116]
[114.32394409 100.00000000]
[107.50000000 112.20349884]
[115.23729706 126.00366974]
[107.50000000 138.73094177]
[107.50000000 153.73094177]
[115.23729706 167.53111267]
[107.50000000 180.25839233]
[110.46956635 186.16543579]
[110.07013702 191.83442688]
[107.27001953 195.70333862]
[106.82341766 210.69668579]
[106.37680817 225.69003296]
[109.24932098 234.36103821]
[105.81028748 240.90281677]
[105.14050293 255.88786316]
[105.92182159 270.86749268]
[108.14694214 285.70153809]
[110.37206268 300.53558350]
[112.59717560 315.36962891]
[114.82229614 330.20367432]
[117.04740906 345.03771973]
[119.27252960 359.87176514]
[130.95358276 366.57754517]
[136.55790710 378.61093140]
[134.24259949 391.48419189]
[125.07349396 400.53720093]
[127.07750702 415.40274048]
[129.08151245 430.26824951]
[143.18482971 440.61795044]
[145.39585876 457.63049316]
[134.83076477 470.71548462]
[137.05587769 485.54953003]
[139.28099060 500.38357544]
[141.50610352 515.21759033]
[143.73123169 530.05163574]
[145.95634460 544.88568115]
[148.18145752 559.71972656]
[150.40658569 574.55377197]
[165.35443115 576.80169678]
[178.97491455 583.35711670]
[190.05686951 593.63726807]
[197.61492920 606.72802734]
[200.97702026 621.46533203]
[199.84419250 636.53875732]
[194.31716919 650.60797119]
[184.88740540 662.42199707]
[172.39341736 670.93029785]
[157.94613647 675.37634277]
[142.83020020 675.36480713]
[128.38972473 670.89666748]
[115.90874481 662.36926270]
[106.49705505 650.54089355]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 196]
[6 195]
[7 194]
[8 193]
[9 192]
[10 191]
[11 190]
[12 189]
[16 186]
[17 185]
[18 184]
[21 180]
[22 179]
[23 178]
[24 177]
[25 176]
[26 175]
[27 174]
[41 173]
[42 172]
[43 170]
[44 169]
[45 168]
[46 165]
[48 163]
[49 162]
[51 160]
[53 158]
[54 156]
[55 155]
[57 153]
[58 152]
[59 151]
[60 146]
[61 145]
[62 144]
[63 143]
[73 134]
[74 133]
[75 132]
[76 129]
[77 128]
[78 127]
[81 124]
[82 123]
[83 122]
[84 117]
[85 116]
[86 115]
[87 114]
[88 113]
[89 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
