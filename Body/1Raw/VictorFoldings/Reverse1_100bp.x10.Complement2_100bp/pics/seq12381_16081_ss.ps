%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCUGACUAUUAUUUCCACCUACGCUGUUACCUAAAAUGUAUUACCCCCAUACUCAAAAAAAACAAUCCCAAUUGCUCCCACCAUUCCUACCCCCCUUAxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[12.96221733 432.23669434]
[4.22089386 444.52651978]
[-7.30269384 454.25573730]
[-20.88416481 460.81274414]
[-35.66977310 463.78540039]
[-50.73008728 462.98678589]
[-65.11840057 458.46713257]
[-77.93025208 450.51052856]
[-88.36027527 439.61718750]
[-95.75283813 426.47180176]
[-99.64323425 411.90075684]
[-99.78690338 396.81994629]
[-96.17481995 382.17742920]
[-89.03404236 368.89361572]
[-78.81344604 357.80349731]
[-66.15550995 349.60427856]
[-51.85591507 344.81130981]
[-36.81354904 343.72592163]
[-34.14775467 328.96472168]
[-31.48195839 314.20349121]
[-28.81616211 299.44229126]
[-26.15036774 284.68106079]
[-23.48457146 269.91983032]
[-32.41287231 281.97329712]
[-43.55691147 292.01373291]
[-56.47282410 299.64126587]
[-70.64617157 304.55206299]
[-85.51244354 306.55059814]
[-100.47951508 305.55718994]
[-114.95124817 301.61145020]
[-128.35125732 294.87054443]
[-140.14579773 285.60293579]
[-149.86512756 274.17776489]
[-157.12211609 261.05007935]
[-161.62771606 246.74273682]
[-163.20246887 231.82563782]
[-161.78366089 216.89288330]
[-157.42781067 202.53926086]
[-150.30839539 189.33645630]
[-140.70896912 177.81034851]
[-129.01190186 168.42001343]
[-115.68307495 161.53944397]
[-101.25334930 157.44271851]
[-86.29747772 156.29298401]
[-71.41114044 158.13604736]
[-57.18725204 162.89851379]
[-44.19234467 170.39067078]
[-32.94400406 180.31411743]
[-23.89024162 192.27360535]
[-17.39167213 205.79280090]
[-13.70712566 220.33322144]
[-12.98335838 235.31575012]
[-15.24815845 250.13958740]
[-6.64959478 237.84875488]
[1.94896924 225.55790710]
[10.54753304 213.26707458]
[19.14609718 200.97624207]
[27.74466133 188.68539429]
[36.34322357 176.39456177]
[44.94178772 164.10372925]
[53.54035187 151.81288147]
[51.74436569 139.85040283]
[58.80738449 129.54032898]
[71.39298248 126.71799469]
[80.17358398 114.55654144]
[88.95418549 102.39508057]
[74.33848572 105.76872253]
[60.48651123 100.01348877]
[52.56469345 87.27595520]
[53.52768326 72.30690002]
[63.01630402 60.68940735]
[77.49153900 56.75652313]
[91.55448151 61.97510910]
[99.95999908 74.39876556]
[99.57266235 89.39487457]
[109.73620605 78.36299896]
[106.18328857 61.82598495]
[113.11843872 46.58115387]
[127.62821960 38.55445099]
[143.89840698 40.73588943]
[153.89657593 29.55391312]
[163.89474487 18.37193871]
[173.89291382 7.18996477]
[183.89108276 -3.99200988]
[193.88926697 -15.17398453]
[203.80390930 -26.43008041]
[213.63449097 -37.75967407]
[223.46507263 -49.08926773]
[212.89663696 -59.74385834]
[203.15397644 -71.15844727]
[194.29158020 -83.26918793]
[186.35899353 -96.00835419]
[179.40060425 -109.30471039]
[173.45530701 -123.08388519]
[168.55636597 -137.26882935]
[164.73117065 -151.78021240]
[162.00111389 -166.53686523]
[160.38146973 -181.45628357]
[159.88128662 -196.45501709]
[160.50335693 -211.44918823]
[162.24421692 -226.35494995]
[165.09413147 -241.08892822]
[169.03713989 -255.56874084]
[174.05120850 -269.71337891]
[180.10830688 -283.44378662]
[187.17453003 -296.68313599]
[195.21038818 -309.35742188]
[204.17092896 -321.39572144]
[214.00605774 -332.73074341]
[224.66073608 -343.29910278]
[236.07540894 -353.04165649]
[248.18623352 -361.90396118]
[260.92547607 -369.83642578]
[274.22189331 -376.79467773]
[288.00109863 -382.73986816]
[302.18609619 -387.63867188]
[316.69750977 -391.46374512]
[331.45419312 -394.19366455]
[346.37362671 -395.81320190]
[361.37237549 -396.31323242]
[376.36651611 -395.69104004]
[391.27227783 -393.95004272]
[406.00622559 -391.10000610]
[420.48599243 -387.15686035]
[434.63061523 -382.14266968]
[448.36096191 -376.08544922]
[461.60025024 -369.01910400]
[474.27444458 -360.98312378]
[486.31268311 -352.02249146]
[497.64761353 -342.18728638]
[508.21588135 -331.53250122]
[517.95831299 -320.11773682]
[526.82049561 -308.00683594]
[534.75286865 -295.26751709]
[541.71105957 -281.97106934]
[547.65606689 -268.19177246]
[552.55474854 -254.00674438]
[556.37969971 -239.49530029]
[559.10949707 -224.73858643]
[560.72888184 -209.81915283]
[561.22882080 -194.82040405]
[560.60644531 -179.82624817]
[558.86535645 -164.92051697]
[556.01519775 -150.18658447]
[552.07189941 -135.70684814]
[547.05761719 -121.56227875]
[541.00024414 -107.83198547]
[533.93377686 -94.59275055]
[525.89770508 -81.91861725]
[516.93695068 -69.88047028]
[507.10165405 -58.54561996]
[496.44677734 -47.97746658]
[485.03192139 -38.23510742]
[472.92095947 -29.37302589]
[460.18157959 -21.44078445]
[446.88504028 -14.48274422]
[433.10571289 -8.53781700]
[418.92062378 -3.63925052]
[404.40914917 0.18556100]
[389.65240479 2.91522717]
[374.73297119 4.53448248]
[359.73422241 5.03427124]
[344.74005127 4.41179848]
[329.83435059 2.67054534]
[315.10043335 -0.17975049]
[300.62072754 -4.12314844]
[286.47619629 -9.13759613]
[272.74597168 -15.19504929]
[259.50680542 -22.26163101]
[246.83273315 -30.29782486]
[234.79466248 -39.25868607]
[224.96408081 -27.92909241]
[215.13349915 -16.59949875]
[213.12414551 -9.48723602]
[205.07124329 -5.17581224]
[195.07305908 6.00616217]
[185.07489014 17.18813705]
[175.07672119 28.37011147]
[165.07855225 39.55208588]
[155.08038330 50.73406219]
[159.10017395 63.46525574]
[156.28167725 76.62580872]
[147.25648499 86.75574493]
[134.30216980 91.13797760]
[120.76808929 88.52655029]
[110.60453796 99.55842590]
[101.11563873 111.17568970]
[92.33503723 123.33714294]
[83.55443573 135.49859619]
[82.10980225 153.85600281]
[65.83119202 160.41145325]
[57.23262787 172.70228577]
[48.63406372 184.99311829]
[40.03549957 197.28396606]
[31.43693542 209.57479858]
[22.83837128 221.86564636]
[14.23980713 234.15647888]
[5.64124346 246.44731140]
[-2.95732069 258.73815918]
[-8.72335434 272.58563232]
[-11.38914967 287.34686279]
[-14.05494499 302.10806274]
[-16.72074127 316.86929321]
[-19.38653564 331.63049316]
[-22.05233192 346.39172363]
[-8.33981991 352.67007446]
[3.38000345 362.16201782]
[12.37042141 374.27081299]
[18.06628990 388.23535156]
[20.10955811 403.17776489]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 205]
[19 204]
[20 203]
[21 202]
[22 201]
[23 200]
[53 199]
[54 198]
[55 197]
[56 196]
[57 195]
[58 194]
[59 193]
[60 192]
[61 191]
[64 189]
[65 188]
[66 187]
[75 186]
[76 185]
[80 180]
[81 179]
[82 178]
[83 177]
[84 176]
[85 175]
[86 173]
[87 172]
[88 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
