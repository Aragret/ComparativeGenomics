%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[109.24486542 580.37573242]
[99.41432953 568.99981689]
[91.59041595 556.16094971]
[85.98654938 542.20941162]
[82.75562286 527.52569580]
[81.98577118 512.51049805]
[83.69799042 497.57333374]
[87.84558105 483.12176514]
[94.31539154 469.55004883]
[102.93090820 457.22842407]
[113.45711517 446.49301147]
[125.60682678 437.63671875]
[139.04861450 430.90109253]
[153.41575623 426.46994019]
[151.41174316 411.60443115]
[149.40773010 396.73889160]
[147.18260193 381.90484619]
[144.73687744 367.10559082]
[142.29115295 352.30630493]
[139.84542847 337.50704956]
[130.13650513 326.21163940]
[135.52015686 311.33459473]
[133.07443237 296.53530884]
[123.36551666 285.23989868]
[128.74917603 270.36285400]
[126.30345154 255.56358337]
[123.85771942 240.76431274]
[121.41199493 225.96504211]
[118.19872284 211.31326294]
[114.22662354 196.84873962]
[110.25453186 182.38421631]
[107.88773346 180.88206482]
[105.97334290 178.35191345]
[104.90590668 174.96133423]
[105.01205444 171.01757812]
[106.50407410 166.93984985]
[103.39997101 152.26454163]
[100.29586029 137.58924866]
[97.19174957 122.91394043]
[94.08763885 108.23863983]
[89.47113037 101.63103485]
[91.04827118 93.32180023]
[86.99793243 88.09625244]
[86.29946136 82.45629120]
[88.30310059 78.12103271]
[85.85736847 63.32176208]
[83.41164398 48.52249146]
[80.85581207 33.74184036]
[78.19001770 18.98062134]
[62.45703506 15.66676807]
[49.23207092 6.59093046]
[40.52345657 -6.83276987]
[37.63988495 -22.53273201]
[40.99380875 -38.09955978]
[50.04274750 -51.15581131]
[63.37677002 -59.71910095]
[60.49150085 -74.43898773]
[57.60622787 -89.15888214]
[54.72095490 -103.87877655]
[49.72922897 -89.73371124]
[39.76169586 -78.52442169]
[26.29697227 -71.91372681]
[11.33247757 -70.88228607]
[-2.91189885 -75.58311462]
[-14.32308769 -85.31885529]
[-21.20830536 -98.64528656]
[-22.54617310 -113.58551025]
[-18.13822556 -127.92321777]
[-8.63835430 -139.53150940]
[4.54419041 -146.68836975]
[19.45385551 -148.33209229]
[33.87888336 -144.21887207]
[45.67940521 -134.95886230]
[53.10427475 -121.92755890]
[53.32760239 -136.92590332]
[53.55093002 -151.92424011]
[53.77425766 -166.92257690]
[42.28462219 -157.27952576]
[27.33019066 -158.44784546]
[17.47753716 -169.75823975]
[18.37071228 -184.73162842]
[29.49806213 -194.79055786]
[44.48533630 -194.17282104]
[54.74680710 -183.23316956]
[56.30732727 -198.15177917]
[57.86785126 -213.07038879]
[59.42837524 -227.98898315]
[60.98889923 -242.90759277]
[62.54941940 -257.82620239]
[63.77639771 -272.77593994]
[64.66921234 -287.74932861]
[65.56202698 -302.72274780]
[66.45484161 -317.69613647]
[67.34765625 -332.66955566]
[68.24047852 -347.64294434]
[53.84146118 -352.10748291]
[40.92964935 -359.88876343]
[30.25571442 -370.53445435]
[22.44022179 -383.42559814]
[17.93755722 -397.81271362]
[17.00949860 -412.85937500]
[19.71000099 -427.69079590]
[25.88206291 -441.44467163]
[35.16684723 -453.32138062]
[47.02455139 -462.63043213]
[60.76577759 -468.83059692]
[75.59163666 -471.56140137]
[90.64016724 -470.66412354]
[105.03646851 -466.19085693]
[117.94356537 -458.40176392]
[128.61103821 -447.74960327]
[136.41871643 -434.85372925]
[140.91265869 -420.46386719]
[141.83160400 -405.41665649]
[139.12210083 -390.58688354]
[132.94169617 -376.83673096]
[123.64971924 -364.96566772]
[111.78637695 -355.66381836]
[98.04138947 -349.47198486]
[83.21388245 -346.75015259]
[82.32106781 -331.77673340]
[81.42824554 -316.80334473]
[80.53543091 -301.82992554]
[79.64261627 -286.85650635]
[78.74980164 -271.88311768]
[80.80414581 -269.01745605]
[81.57254028 -265.01437378]
[80.53552246 -260.48913574]
[77.46802521 -256.26568604]
[75.90750122 -241.34706116]
[74.34697723 -226.42846680]
[72.78645325 -211.50985718]
[71.22593689 -196.59124756]
[69.66541290 -181.67265320]
[68.77259064 -166.69924927]
[68.54926300 -151.70091248]
[68.32593536 -136.70257568]
[68.10260773 -121.70423126]
[69.44084167 -106.76404572]
[72.32611847 -92.04415131]
[75.21138763 -77.32426453]
[78.09666443 -62.60437012]
[91.94854736 -60.35390472]
[104.22637939 -53.49581909]
[113.44539642 -42.83611679]
[118.48277283 -29.64191055]
[118.71437073 -15.49082756]
[114.09197998 -2.08237338]
[105.15158081 8.96617222]
[92.95123291 16.31482697]
[95.61702728 31.07604408]
[99.89922333 37.09971619]
[98.21091461 46.07676697]
[100.65663910 60.87603760]
[103.10237122 75.67530823]
[105.76816559 90.43652344]
[108.76293945 105.13452911]
[111.86705017 119.80982971]
[114.97116089 134.48513794]
[118.07527161 149.16043091]
[121.17938232 163.83573914]
[124.71905518 178.41210938]
[128.69114685 192.87663269]
[132.66323853 207.34115601]
[140.00610352 194.26130676]
[153.99368286 188.84399414]
[168.23107910 193.56593323]
[176.20912170 206.26832581]
[174.28036499 221.14381409]
[163.32661438 231.39151001]
[148.35577393 232.32630920]
[136.21127319 223.51931763]
[138.65699768 238.31858826]
[141.10272217 253.11785889]
[143.54844666 267.91714478]
[153.43231201 280.27108765]
[147.87370300 294.08959961]
[150.31944275 308.88885498]
[160.20329285 321.24279785]
[154.64469910 335.06130981]
[157.09042358 349.86059570]
[159.53614807 364.65985107]
[161.98187256 379.45913696]
[165.87483215 384.80294800]
[166.40507507 390.46121216]
[164.27325439 394.73489380]
[166.27726746 409.60040283]
[168.28128052 424.46594238]
[183.30892944 424.93438721]
[198.05448914 427.87008667]
[212.11569214 433.19290161]
[225.10893250 440.75769043]
[236.67974854 450.35800171]
[246.51246643 461.73199463]
[254.33885193 474.56933594]
[259.94540405 488.51983643]
[263.17916870 503.20291138]
[263.95190430 518.21795654]
[262.24255371 533.15545654]
[258.09774780 547.60778809]
[251.63056946 561.18078613]
[243.01742554 573.50408936]
[232.49328613 584.24151611]
[220.34527588 593.10015869]
[206.90480042 599.83831787]
[192.53851318 604.27227783]
[177.63833618 606.28094482]
[162.61077881 605.80957031]
[147.86578369 602.87109375]
[133.80560303 597.54553223]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 188]
[15 187]
[16 186]
[17 183]
[18 182]
[19 181]
[20 180]
[22 178]
[23 177]
[25 175]
[26 174]
[27 173]
[28 172]
[29 164]
[30 163]
[31 162]
[36 161]
[37 160]
[38 159]
[39 158]
[40 157]
[42 156]
[45 155]
[46 154]
[47 153]
[48 151]
[49 150]
[56 142]
[57 141]
[58 140]
[59 139]
[74 138]
[75 137]
[76 136]
[77 135]
[84 134]
[85 133]
[86 132]
[87 131]
[88 130]
[89 129]
[90 125]
[91 124]
[92 123]
[93 122]
[94 121]
[95 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
