%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUACUCUCAUUAUCUAUCCCGAGUCCGCAAACACAUACUAUACAAACGCCAAAGCUACUACACCAGAAACCUCAUCUUUGGACACUCCUUUCCAUAAxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[5.82433224 343.74514771]
[11.96059132 357.46243286]
[16.03411484 371.92703247]
[17.95807648 386.83059692]
[17.69146538 401.85546875]
[15.23996449 416.68136597]
[10.65582943 430.99234009]
[4.03676987 444.48330688]
[-4.47612858 456.86669922]
[-14.70141220 467.87857056]
[-26.42112923 477.28421021]
[-39.38547134 484.88311768]
[-53.31810760 490.51336670]
[-67.92205811 494.05490112]
[-82.88603973 495.43225098]
[-97.89109802 494.61605835]
[-112.61739349 491.62371826]
[-126.75102997 486.51904297]
[-139.99076843 479.41076660]
[-152.05438232 470.45046997]
[-162.68473816 459.82910156]
[-171.65525818 447.77307129]
[-178.77473450 434.53936768]
[-183.89140320 420.41006470]
[-186.89622498 405.68630981]
[-187.72511292 390.68194580]
[-186.36044312 375.71679688]
[-182.83128357 361.10986328]
[-177.21284485 347.17245483]
[-169.62490845 334.20169067]
[-160.22920227 322.47399902]
[-149.22598267 312.23941040]
[-136.84980774 303.71600342]
[-123.36446381 297.08554077]
[-109.05739594 292.48925781]
[-94.23355103 290.02520752]
[-79.20890808 289.74588013]
[-64.30372620 291.65719604]
[-49.83568954 295.71847534]
[-36.11320114 301.84310913]
[-28.07202911 289.18057251]
[-20.03085709 276.51806641]
[-11.98968410 263.85552979]
[-3.94851089 251.19300842]
[4.09266233 238.53048706]
[12.13383484 225.86796570]
[11.92805767 208.32019043]
[28.31966972 199.92991638]
[36.17142487 187.14907837]
[44.02318192 174.36822510]
[44.84600067 167.02352905]
[52.08818436 161.45677185]
[60.12935638 148.79425049]
[68.17053223 136.13172913]
[76.21170044 123.46920013]
[84.25287628 110.80667877]
[81.19881439 96.64267731]
[88.96633148 84.41107941]
[103.08460236 81.15214539]
[111.12577057 68.48962402]
[119.16694641 55.82709885]
[126.63468933 42.81814575]
[126.08824158 27.00638008]
[138.80090332 19.24510002]
[145.68031311 5.91567135]
[152.55972290 -7.41375780]
[159.43914795 -20.74318695]
[166.31855774 -34.07261658]
[173.19796753 -47.40204620]
[160.29560852 -55.06117249]
[147.86964417 -63.47119141]
[135.96372986 -72.60256195]
[124.61966705 -82.42321777]
[113.87731171 -92.89865112]
[103.77439117 -103.99207306]
[94.34640503 -115.66452026]
[85.62645721 -127.87498474]
[77.64517975 -140.58058167]
[70.43061829 -153.73667908]
[64.00809479 -167.29707336]
[58.40018463 -181.21412659]
[53.62658310 -195.43894958]
[49.70405197 -209.92158508]
[46.64637375 -224.61116028]
[44.46428680 -239.45606995]
[43.16545868 -254.40419006]
[42.75444794 -269.40298462]
[43.23270035 -284.39981079]
[44.59853363 -299.34191895]
[46.84715271 -314.17691040]
[49.97066116 -328.85263062]
[53.95808411 -343.31753540]
[58.79541397 -357.52081299]
[64.46566772 -371.41259766]
[70.94891357 -384.94403076]
[78.22239685 -398.06765747]
[86.26055145 -410.73736572]
[95.03515625 -422.90859985]
[104.51538086 -434.53866577]
[114.66793060 -445.58666992]
[125.45714569 -456.01385498]
[136.84512329 -465.78353882]
[148.79187012 -474.86145020]
[161.25541687 -483.21566772]
[174.19197083 -490.81686401]
[187.55612183 -497.63833618]
[201.30090332 -503.65615845]
[215.37805176 -508.84912109]
[229.73809814 -513.19903564]
[244.33062744 -516.69061279]
[259.10437012 -519.31158447]
[274.00744629 -521.05273438]
[288.98748779 -521.90795898]
[303.99188232 -521.87426758]
[318.96792603 -520.95178223]
[333.86300659 -519.14367676]
[348.62481689 -516.45635986]
[363.20153809 -512.89929199]
[377.54190063 -508.48489380]
[391.59558105 -503.22872925]
[405.31317139 -497.14926147]
[418.64654541 -490.26779175]
[431.54882812 -482.60855103]
[443.97473145 -474.19842529]
[455.88055420 -465.06695557]
[467.22454834 -455.24621582]
[477.96679688 -444.77069092]
[488.06961060 -433.67715454]
[497.49749756 -422.00463867]
[506.21734619 -409.79409790]
[514.19848633 -397.08843994]
[521.41296387 -383.93225098]
[527.83538818 -370.37182617]
[533.44317627 -356.45471191]
[538.21661377 -342.22985840]
[542.13903809 -327.74719238]
[545.19659424 -313.05758667]
[547.37854004 -298.21264648]
[548.67724609 -283.26452637]
[549.08813477 -268.26571655]
[548.60974121 -253.26892090]
[547.24377441 -238.32678223]
[544.99499512 -223.49182129]
[541.87139893 -208.81613159]
[537.88385010 -194.35127258]
[533.04638672 -180.14802551]
[527.37603760 -166.25631714]
[520.89263916 -152.72491455]
[513.61901855 -139.60134888]
[505.58078003 -126.93173218]
[496.80606079 -114.76055908]
[487.32574463 -103.13058472]
[477.17309570 -92.08265686]
[466.38378906 -81.65558624]
[454.99572754 -71.88598633]
[443.04888916 -62.80819321]
[430.58529663 -54.45407486]
[417.64865112 -46.85298920]
[404.28445435 -40.03162384]
[390.53961182 -34.01394653]
[376.46243286 -28.82109451]
[362.10232544 -24.47130585]
[347.50976562 -20.97986031]
[332.73602295 -18.35902023]
[317.83291626 -16.61799431]
[302.85287476 -15.76289463]
[287.84848022 -15.79672718]
[272.87246704 -16.71937180]
[257.97738647 -18.52758980]
[243.21557617 -21.21502686]
[228.63891602 -24.77224541]
[214.29858398 -29.18675041]
[200.24494934 -34.44303131]
[186.52738953 -40.52263260]
[179.64797974 -27.19320297]
[172.76856995 -13.86377430]
[165.88916016 -0.53434545]
[159.00975037 12.79508400]
[152.13032532 26.12451363]
[153.16883850 40.98286819]
[139.96411133 49.69755936]
[154.54594421 46.18044662]
[167.41522217 53.88640213]
[171.19982910 68.40110779]
[163.73178101 81.40988159]
[149.28910828 85.46070862]
[136.14523315 78.23308563]
[131.82946777 63.86827087]
[123.78829956 76.53079987]
[115.74712372 89.19332123]
[118.80118561 103.35732269]
[111.03366852 115.58892059]
[96.91539764 118.84785461]
[88.87422943 131.51037598]
[80.83305359 144.17289734]
[72.79187775 156.83541870]
[64.75070953 169.49795532]
[56.80402374 182.21998596]
[48.95226669 195.00082397]
[41.10051346 207.78167725]
[43.33295822 220.48516846]
[36.53009415 230.96871948]
[24.79636002 233.90913391]
[16.75518799 246.57165527]
[8.71401405 259.23419189]
[0.67284119 271.89669800]
[-7.36833191 284.55923462]
[-15.40950489 297.22177124]
[-23.45067787 309.88427734]
[-12.07203293 319.69979858]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 209]
[41 208]
[42 207]
[43 206]
[44 205]
[45 204]
[46 203]
[48 200]
[49 199]
[50 198]
[52 197]
[53 196]
[54 195]
[55 194]
[56 193]
[59 190]
[60 189]
[61 188]
[62 181]
[64 179]
[65 178]
[66 177]
[67 176]
[68 175]
[69 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
