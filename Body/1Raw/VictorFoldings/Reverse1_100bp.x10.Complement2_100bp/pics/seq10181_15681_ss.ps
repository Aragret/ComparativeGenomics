%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCAUUUUCCUCCCGUUAAAGAUCUAGUUUAUUAUUCUUCCAUUAUCGAUGAUUCUUCUUAAAAUACCUCUUUCCCUGCGCCCGCCCCCUAUAUCCCAGxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[83.02657318 713.28839111]
[68.23191833 710.75012207]
[53.73457718 706.85754395]
[39.65824509 701.64398193]
[26.12301636 695.15380859]
[13.24436951 687.44244385]
[1.13218522 678.57568359]
[-10.11019897 668.62915039]
[-20.38686371 657.68774414]
[-29.61013222 645.84472656]
[-37.70130920 633.20129395]
[-44.59136963 619.86517334]
[-50.22151947 605.95019531]
[-54.54372787 591.57513428]
[-57.52112198 576.86254883]
[-59.12829208 561.93798828]
[-59.35153198 546.92883301]
[-58.18893433 531.96313477]
[-55.65041733 517.16851807]
[-51.75764084 502.67123413]
[-46.54381561 488.59500122]
[-40.05342865 475.05987549]
[-32.34185028 462.18136597]
[-23.47487640 450.06933594]
[-13.52816010 438.82711792]
[-2.58656287 428.55062866]
[9.25656223 419.32754517]
[21.90017319 411.23657227]
[35.23639297 404.34674072]
[49.15144348 398.71682739]
[63.52660370 394.39486694]
[78.23922729 391.41769409]
[93.16378784 389.81079102]
[92.94046021 374.81243896]
[92.71713257 359.81411743]
[92.49380493 344.81576538]
[92.27047729 329.81744385]
[92.04714966 314.81909180]
[91.82382202 299.82077026]
[91.60049438 284.82241821]
[91.37716675 269.82409668]
[91.15383911 254.82574463]
[90.93051147 239.82740784]
[81.21615601 233.84429932]
[75.53755951 223.81089783]
[75.40612793 212.16285706]
[80.97019196 201.79261780]
[90.94942474 195.33106995]
[91.17275238 180.33273315]
[83.62580109 167.49166870]
[91.56770325 153.80822754]
[91.79103088 138.80989075]
[92.01435852 123.81155396]
[92.23768616 108.81321716]
[84.19593811 121.47537994]
[71.74452209 129.83972168]
[56.98171234 132.49668884]
[42.39530945 128.99856567]
[30.44337845 119.93482971]
[23.14002800 106.83288574]
[21.71599960 91.90063477]
[26.41126823 77.65441895]
[36.43459702 66.49499512]
[50.09688568 60.30290604]
[65.09578705 60.12163162]
[78.90373230 65.98171997]
[89.19384003 76.89564514]
[94.23226166 91.02586365]
[97.33637238 76.35055542]
[100.44048309 61.67525482]
[103.54459381 46.99995422]
[106.10042572 32.21929932]
[108.10443878 17.35377121]
[110.10845184 2.48824358]
[112.11246490 -12.37728500]
[106.28824615 -27.08745193]
[115.65655518 -38.66691589]
[117.66056824 -53.53244400]
[119.66458130 -68.39797211]
[120.89156342 -83.34770966]
[121.33816528 -98.34105682]
[121.78477478 -113.33440399]
[122.23137665 -128.32775879]
[122.67798615 -143.32110596]
[123.12458801 -158.31445312]
[123.57119751 -173.30780029]
[108.78340912 -175.98715210]
[94.56015015 -180.84068298]
[81.21918488 -187.75994873]
[69.05855560 -196.59039307]
[58.34992981 -207.13473511]
[49.33253860 -219.15739441]
[42.20784378 -232.38978577]
[37.13500595 -246.53630066]
[34.22735596 -261.28091431]
[33.54985428 -276.29418945]
[35.11763382 -291.24075317]
[38.89566803 -305.78668213]
[44.79956055 -319.60702515]
[52.69741058 -332.39300537]
[62.41278076 -343.85900879]
[73.72862244 -353.74887085]
[86.39214325 -361.84164429]
[100.12042236 -367.95654297]
[114.60677338 -371.95693970]
[129.52757263 -373.75347900]
[144.54946899 -373.30603027]
[159.33688354 -370.62457275]
[173.55943298 -365.76901245]
[186.89941406 -358.84783936]
[199.05879211 -350.01568604]
[209.76591492 -339.46981812]
[218.78160095 -327.44586182]
[225.90440369 -314.21246338]
[230.97523499 -300.06521606]
[233.88078308 -285.32019043]
[234.55613708 -270.30682373]
[232.98623657 -255.36048889]
[229.20613098 -240.81509399]
[223.30026245 -226.99560547]
[215.40058899 -214.21073914]
[205.68359375 -202.74610901]
[194.36634827 -192.85786438]
[181.70167542 -184.76689148]
[167.97251892 -178.65396118]
[153.48559570 -174.65560913]
[138.56454468 -172.86120605]
[138.11793518 -157.86784363]
[137.67134094 -142.87449646]
[137.22473145 -127.88114929]
[136.77812195 -112.88780212]
[136.33151245 -97.89444733]
[135.88490295 -82.90110016]
[146.74223328 -93.25091553]
[161.70365906 -94.32585144]
[173.92904663 -85.63447571]
[177.82910156 -71.15036011]
[171.62075806 -57.49544907]
[158.14241028 -50.91258240]
[143.55616760 -54.41136169]
[134.53010559 -66.39395905]
[132.52609253 -51.52843094]
[130.52207947 -36.66290283]
[136.48965454 -23.01601791]
[126.97799683 -10.37327099]
[124.97398376 4.49225712]
[122.96997070 19.35778618]
[120.96595764 34.22331238]
[134.29524231 27.34363747]
[148.04640198 33.33578110]
[152.08258057 47.78255463]
[143.42845154 60.03433609]
[128.46353149 61.05957031]
[118.21989441 50.10406494]
[115.11578369 64.77936554]
[112.01167297 79.45466614]
[108.90756226 94.12997437]
[107.23602295 109.03654480]
[107.01269531 124.03488159]
[106.78936768 139.03321838]
[106.56604004 154.03155518]
[114.09702301 167.94540405]
[106.17108917 180.55606079]
[105.94776154 195.55439758]
[119.65203094 208.63519287]
[119.44664764 227.25965881]
[105.92884827 239.60408020]
[106.15217590 254.60241699]
[106.37550354 269.60076904]
[106.59883118 284.59909058]
[106.82215881 299.59744263]
[107.04548645 314.59576416]
[107.26881409 329.59411621]
[107.49214172 344.59243774]
[107.71546936 359.59078979]
[107.93879700 374.58911133]
[108.16212463 389.58746338]
[123.12790680 390.74929810]
[137.92265320 393.28707886]
[152.42012024 397.17913818]
[166.49662781 402.39227295]
[180.03207397 408.88195801]
[192.91096497 416.59289551]
[205.02345276 425.45925903]
[216.26615906 435.40542603]
[226.54319763 446.34649658]
[235.76686096 458.18917847]
[243.85845947 470.83236694]
[250.74896240 484.16827393]
[256.37957764 498.08303833]
[260.70227051 512.45794678]
[263.68014526 527.17047119]
[265.28781128 542.09490967]
[265.51156616 557.10406494]
[264.34945679 572.06982422]
[261.81143188 586.86456299]
[257.91912842 601.36193848]
[252.70578003 615.43835449]
[246.21585083 628.97369385]
[238.50469971 641.85247803]
[229.63812256 653.96478271]
[219.69178772 665.20733643]
[208.75053406 675.48419189]
[196.90771484 684.70764160]
[184.26437378 692.79907227]
[170.92837524 699.68933105]
[157.01351929 705.31970215]
[142.63850403 709.64215088]
[127.92597961 712.61981201]
[113.00147247 714.22723389]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 177]
[34 176]
[35 175]
[36 174]
[37 173]
[38 172]
[39 171]
[40 170]
[41 169]
[42 168]
[43 167]
[48 164]
[49 163]
[51 161]
[52 160]
[53 159]
[54 158]
[68 157]
[69 156]
[70 155]
[71 154]
[72 148]
[73 147]
[74 146]
[75 145]
[77 143]
[78 142]
[79 141]
[80 133]
[81 132]
[82 131]
[83 130]
[84 129]
[85 128]
[86 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
