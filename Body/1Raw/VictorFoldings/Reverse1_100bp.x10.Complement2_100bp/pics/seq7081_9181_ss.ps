%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxCGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAG\
) } def
/len { sequence length } bind def

/coor [
[180.22758484 662.71386719]
[178.36073303 647.76965332]
[179.75053406 632.77355957]
[184.33198547 618.42700195]
[191.89080811 605.40093994]
[202.07347107 594.30462646]
[214.40368652 585.65710449]
[228.30477905 579.86279297]
[225.63897705 565.10162354]
[222.97319031 550.34039307]
[220.30738831 535.57916260]
[217.64160156 520.81793213]
[214.97579956 506.05673218]
[210.68167114 491.68450928]
[204.81271362 477.88034058]
[198.94375610 464.07617188]
[193.07479858 450.27200317]
[187.20584106 436.46780396]
[183.19038391 433.88223267]
[180.75656128 428.74673462]
[181.37442017 422.16418457]
[173.05273438 434.64413452]
[158.12077332 436.07122803]
[147.58583069 425.39343262]
[149.21388245 410.48205566]
[161.80477905 402.32919312]
[176.07579041 406.94369507]
[171.67478943 392.60385132]
[167.27378845 378.26400757]
[162.87278748 363.92416382]
[158.47178650 349.58428955]
[154.07078552 335.24444580]
[149.66979980 320.90460205]
[145.26879883 306.56475830]
[140.86779785 292.22491455]
[135.90014648 286.75277710]
[136.50973511 277.63870239]
[126.06316376 271.53988647]
[122.45701599 259.57412720]
[128.14671326 247.99871826]
[124.17461395 233.53419495]
[120.20251465 219.06967163]
[116.12284851 204.63511658]
[111.93583679 190.23133850]
[107.74882507 175.82756042]
[103.56181335 161.42376709]
[97.23094940 175.02230835]
[84.17252350 182.40318298]
[69.25699615 180.81352234]
[58.04749298 170.84622192]
[54.72488403 156.21884155]
[60.52842331 142.38702393]
[73.29352570 134.50971985]
[88.25913239 135.52493286]
[99.84407043 145.05502319]
[97.39833832 130.25575256]
[94.95261383 115.45648193]
[85.91062164 108.11593628]
[84.09726715 96.61145782]
[90.44290924 86.84548950]
[88.21778870 72.01145172]
[85.99267578 57.17740631]
[83.76755524 42.34336090]
[68.31869507 36.45061493]
[58.00866318 23.64441109]
[55.57769394 7.47940922]
[61.59563828 -7.61827946]
[74.33200836 -17.56298828]
[71.88628387 -32.36225891]
[69.44055939 -47.16152954]
[66.99482727 -61.96080017]
[57.11096954 -74.31474304]
[62.66956711 -88.13325500]
[60.11373520 -102.91390991]
[50.04704285 -115.11933136]
[55.39928818 -129.01907349]
[52.73348999 -143.78028870]
[49.95788193 -158.52125549]
[47.07260895 -173.24113464]
[34.65118790 -186.83488464]
[40.98184967 -203.20222473]
[30.55621910 -215.10250854]
[35.49224472 -229.15544128]
[32.38813400 -243.83073425]
[29.28402328 -258.50604248]
[14.22104836 -258.73956299]
[-0.41217551 -262.31958008]
[-13.88165283 -269.06649780]
[-25.51176071 -278.64190674]
[-34.71913528 -290.56549072]
[-41.04194260 -304.23919678]
[-44.16303253 -318.97711182]
[-43.92584610 -334.04003906]
[-40.34228897 -348.67239380]
[-33.59210968 -362.14022827]
[-24.01388741 -373.76800537]
[-12.08806801 -382.97250366]
[1.58715546 -389.29199219]
[16.32584000 -392.40951538]
[31.38870049 -392.16867065]
[46.02018738 -388.58157349]
[59.48639297 -381.82812500]
[71.11186218 -372.24710083]
[80.31345367 -360.31906128]
[86.62963867 -346.64230347]
[89.74358368 -331.90286255]
[89.49909973 -316.84005737]
[85.90844727 -302.20944214]
[79.15174103 -288.74487305]
[69.56788635 -277.12173462]
[57.63761139 -267.92300415]
[43.95932388 -261.61013794]
[47.06343460 -246.93484497]
[50.16754532 -232.25955200]
[60.37115097 -221.40893555]
[55.65715408 -206.30632019]
[65.62118530 -199.44741821]
[68.32736969 -187.24658203]
[61.79249954 -176.12641907]
[64.67777252 -161.40652466]
[69.04917145 -155.44726562]
[67.49470520 -146.44607544]
[70.16050720 -131.68486023]
[80.03652191 -120.53526306]
[74.87495422 -105.57970428]
[79.15715027 -99.55603790]
[77.46884155 -90.57898712]
[87.17776489 -79.28358459]
[81.79409790 -64.40653229]
[84.23983002 -49.60725784]
[86.68555450 -34.80798721]
[89.13127899 -20.00871658]
[102.20300293 -16.05305672]
[112.34382629 -6.80684376]
[117.53632355 5.96762419]
[116.71436310 19.79884338]
[109.98144531 31.98424149]
[98.60160065 40.11824417]
[100.82672119 54.95228958]
[103.05183411 69.78633118]
[105.27695465 84.62037659]
[116.06143951 97.46837616]
[109.75188446 113.01075745]
[112.19760895 127.81002808]
[114.64334106 142.60929871]
[117.96559906 157.23675537]
[122.15261078 171.64054871]
[126.33962250 186.04432678]
[130.52662659 200.44810486]
[135.92707825 207.81512451]
[134.66703796 215.09757996]
[138.63912964 229.56210327]
[142.61123657 244.02662659]
[156.00930786 256.65884399]
[150.91352844 273.45169067]
[155.20764160 287.82391357]
[159.60864258 302.16375732]
[164.00964355 316.50360107]
[168.41064453 330.84344482]
[172.81164551 345.18331909]
[177.21263123 359.52316284]
[181.61363220 373.86300659]
[186.01463318 388.20285034]
[190.41563416 402.54269409]
[195.34722900 416.70883179]
[201.01000977 430.59884644]
[206.87896729 444.40304565]
[212.74792480 458.20721436]
[218.61689758 472.01138306]
[224.48585510 485.81555176]
[226.21710205 470.91580200]
[233.14930725 457.61376953]
[244.37042236 447.65951538]
[258.40411377 442.36276245]
[273.40399170 442.42034912]
[287.39657593 447.82473755]
[298.54092407 457.86483765]
[305.37078857 471.21972656]
[306.98757935 486.13232422]
[303.17855835 500.64065552]
[294.44491577 512.83587646]
[281.93566895 521.11346436]
[267.29666138 524.38446045]
[252.45387268 522.21838379]
[239.36015320 514.90032959]
[229.73701477 503.39093018]
[232.40281677 518.15216064]
[235.06860352 532.91339111]
[237.73440552 547.67462158]
[240.40019226 562.43579102]
[243.06599426 577.19702148]
[258.11569214 577.76293945]
[272.69180298 581.55133057]
[286.11248779 588.38500977]
[297.75012207 597.94427490]
[307.06033325 609.78210449]
[313.60766602 623.34478760]
[317.08593750 637.99798584]
[317.33245850 653.05627441]
[314.33563232 667.81549072]
[308.23568726 681.58520508]
[299.31793213 693.72137451]
[287.99942017 703.65643311]
[274.80957031 710.92572021]
[260.36529541 715.18914795]
[245.34217834 716.24737549]
[230.44285583 714.05084229]
[216.36422729 708.70239258]
[203.76477051 700.45208740]
[193.23376465 689.68579102]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 191]
[9 190]
[10 189]
[11 188]
[12 187]
[13 186]
[14 170]
[15 169]
[16 168]
[17 167]
[18 166]
[21 165]
[27 164]
[28 163]
[29 162]
[30 161]
[31 160]
[32 159]
[33 158]
[34 157]
[35 156]
[37 155]
[40 153]
[41 152]
[42 151]
[43 149]
[44 148]
[45 147]
[46 146]
[55 145]
[56 144]
[57 143]
[60 141]
[61 140]
[62 139]
[63 138]
[68 132]
[69 131]
[70 130]
[71 129]
[73 127]
[74 125]
[76 123]
[77 122]
[78 120]
[79 119]
[81 116]
[83 114]
[84 113]
[85 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
