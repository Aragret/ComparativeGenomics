%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[80.86799622 649.16180420]
[66.23341370 645.73699951]
[52.29316711 640.11828613]
[39.37405014 632.43737793]
[27.77890205 622.87426758]
[17.77952766 611.65313721]
[9.61032963 599.03710938]
[3.46280265 585.32183838]
[-0.51894486 570.82885742]
[-2.24157524 555.89794922]
[-1.66470742 540.87902832]
[1.19813585 526.12420654]
[6.27984524 511.97937012]
[13.46129894 498.77606201]
[22.57415199 486.82382202]
[33.40478897 476.40280151]
[45.69931793 467.75729370]
[59.16954422 461.08993530]
[73.49970245 456.55706787]
[88.35388184 454.26492310]
[88.35388184 439.26492310]
[88.35388184 424.26492310]
[88.35388184 409.26492310]
[88.35388184 394.26492310]
[80.61657715 381.53762817]
[88.35388184 367.73745728]
[80.61657715 355.01019287]
[88.35388184 341.21002197]
[77.00908661 351.02307129]
[62.03891754 350.07751465]
[52.01896286 338.91506958]
[52.68910980 323.93005371]
[63.66546249 313.70657349]
[78.66027069 314.10110474]
[89.08348083 324.88674927]
[90.42171478 309.94656372]
[91.75994873 295.00637817]
[93.09818268 280.06619263]
[94.43641663 265.12600708]
[95.77465057 250.18582153]
[97.11288452 235.24563599]
[98.45111847 220.30545044]
[99.78935242 205.36526489]
[99.90101624 190.36569214]
[98.78536987 175.40722656]
[97.66972351 160.44877625]
[87.02201080 146.49911499]
[95.15522766 129.97845459]
[93.81699371 115.03826904]
[85.34600830 107.04553986]
[84.39334106 95.43805695]
[91.44776917 86.17110443]
[90.33211517 71.21265411]
[89.21646881 56.25419617]
[75.56461334 52.19490433]
[64.14229584 43.73725128]
[56.30944443 31.91356468]
[52.98994827 18.15537643]
[54.56272507 4.12011385]
[60.81859207 -8.50856781]
[70.98781586 -18.22275162]
[83.83478546 -23.87030220]
[82.94197083 -38.84370804]
[82.04914856 -53.81711578]
[81.15633392 -68.79051971]
[80.26351929 -83.76392365]
[79.37070465 -98.73733521]
[78.36644745 -113.70367432]
[77.25079346 -128.66212463]
[76.13514709 -143.62057495]
[74.90817261 -158.57031250]
[73.56993866 -173.51049805]
[64.19078827 -182.36456299]
[63.38374710 -194.83583069]
[71.03717041 -204.20341492]
[69.92152405 -219.16186523]
[68.80587769 -234.12031555]
[67.69022369 -249.07876587]
[52.83586502 -251.61521912]
[39.02862549 -257.62957764]
[27.06936455 -266.76824951]
[17.65062523 -278.49655151]
[11.31651592 -292.13006592]
[8.43129253 -306.87442017]
[9.15840721 -321.87173462]
[13.45125866 -336.25045776]
[21.05614662 -349.17599487]
[31.52727127 -359.89923096]
[44.25285339 -367.79983521]
[58.49087906 -372.42227173]
[57.37523270 -387.38070679]
[56.25958252 -402.33917236]
[55.14393234 -417.29763794]
[54.02828598 -432.25607300]
[39.37539673 -436.07333374]
[26.75728226 -444.44363403]
[17.54266357 -456.45904541]
[12.73107529 -470.81616211]
[12.84444046 -485.95770264]
[17.87046242 -500.24118042]
[27.26395416 -512.11724854]
[40.00598145 -520.29766846]
[54.71438599 -523.89514160]
[69.79370880 -522.51934814]
[83.60826111 -516.31958008]
[94.65953064 -505.96835327]
[101.74877930 -492.58847046]
[104.10699463 -477.63128662]
[101.47840118 -462.71923828]
[94.14810181 -449.46987915]
[82.91125488 -439.32037354]
[68.98674011 -433.37173462]
[70.10238647 -418.41326904]
[71.21803284 -403.45483398]
[72.33368683 -388.49636841]
[73.44933319 -373.53790283]
[88.21553040 -371.07870483]
[101.97230530 -365.15322876]
[113.91827393 -356.10195923]
[123.35641479 -344.44754028]
[129.73472595 -330.86471558]
[132.67851257 -316.14117432]
[132.01240540 -301.13195801]
[127.77079010 -286.70965576]
[120.19604492 -273.71392822]
[109.72474670 -262.90231323]
[96.96244049 -254.90631104]
[82.64868164 -250.19442749]
[83.76432800 -235.23596191]
[84.87997437 -220.27751160]
[85.99562836 -205.31906128]
[96.64334106 -191.36940002]
[88.51012421 -174.84873962]
[89.84835815 -159.90855408]
[93.57606506 -153.52685547]
[91.09359741 -144.73623657]
[92.20925140 -129.77777100]
[93.32489777 -114.81932068]
[96.95718384 -108.38284302]
[94.34410858 -99.63014984]
[95.23692322 -84.65673828]
[96.12973785 -69.68333435]
[97.02256012 -54.70993042]
[97.91537476 -39.73652267]
[98.80818939 -24.76311874]
[113.86177063 -19.81178856]
[125.89193726 -9.43757915]
[133.03724670 4.79335690]
[134.17713928 20.71518135]
[129.10755920 35.89197540]
[118.57675171 47.99042892]
[104.17491913 55.13854980]
[105.29057312 70.09700012]
[106.40621948 85.05545807]
[116.20524597 98.66998291]
[108.75717926 113.70003510]
[110.09541321 128.64021301]
[119.47455597 137.49427795]
[120.28160095 149.96554565]
[112.62817383 159.33312988]
[113.74382019 174.29158020]
[114.85947418 189.25003052]
[122.37258148 176.26722717]
[135.00901794 168.18513489]
[149.94580078 166.80931091]
[163.84597778 172.44712830]
[173.60423279 183.83908081]
[177.04055786 198.44015503]
[173.38723755 212.98846436]
[163.46046448 224.23387146]
[149.47789001 229.66412354]
[134.56324768 228.06607056]
[122.04853058 219.79673767]
[114.72953796 206.70350647]
[113.39130402 221.64369202]
[112.05307007 236.58387756]
[110.71483612 251.52406311]
[109.37660217 266.46423340]
[108.03836823 281.40441895]
[106.70013428 296.34460449]
[105.36190033 311.28479004]
[104.02366638 326.22497559]
[103.35388184 341.21002197]
[111.09117889 355.01019287]
[103.35388184 367.73745728]
[111.09117889 381.53762817]
[103.35388184 394.26492310]
[103.35388184 409.26492310]
[103.35388184 424.26492310]
[103.35388184 439.26492310]
[103.35388184 454.26492310]
[118.20805359 456.55706787]
[132.53820801 461.08993530]
[146.00843811 467.75729370]
[158.30296326 476.40280151]
[169.13360596 486.82382202]
[178.24645996 498.77606201]
[185.42791748 511.97937012]
[190.50962830 526.12420654]
[193.37246704 540.87902832]
[193.94932556 555.89794922]
[192.22669983 570.82885742]
[188.24494934 585.32183838]
[182.09742737 599.03710938]
[173.92822266 611.65313721]
[163.92884827 622.87426758]
[152.33370972 632.43737793]
[139.41459656 640.11828613]
[125.47434998 645.73699951]
[110.83975983 649.16180420]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 191]
[21 190]
[22 189]
[23 188]
[24 187]
[26 185]
[28 183]
[35 182]
[36 181]
[37 180]
[38 179]
[39 178]
[40 177]
[41 176]
[42 175]
[43 174]
[44 162]
[45 161]
[46 160]
[48 157]
[49 156]
[52 154]
[53 153]
[54 152]
[62 145]
[63 144]
[64 143]
[65 142]
[66 141]
[67 140]
[68 138]
[69 137]
[70 136]
[71 134]
[72 133]
[75 131]
[76 130]
[77 129]
[78 128]
[90 116]
[91 115]
[92 114]
[93 113]
[94 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
