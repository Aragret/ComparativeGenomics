%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAACUAACAAUCGCCACACCAGCCCACACAAUAAUAAGACUUAAAACCCCCUCCAAUAUACCCAAAUUAUCAAAAAAAUUAAAUAAAUCCCCCUUACUACxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[115.03157043 517.16680908]
[110.46952057 502.79187012]
[109.62651825 487.73397827]
[112.55555725 472.93966675]
[119.07250977 459.33892822]
[128.76771545 447.78671265]
[141.03172302 439.00918579]
[155.09362793 433.55813599]
[153.31115723 418.66442871]
[144.11628723 406.94677734]
[150.15887451 392.32495117]
[148.37640381 377.43124390]
[139.18153381 365.71356201]
[145.22412109 351.09173584]
[143.44165039 336.19802856]
[141.65919495 321.30432129]
[139.87672424 306.41058350]
[126.13037109 300.67443848]
[117.04039764 288.74850464]
[115.12768555 273.77493286]
[121.00524902 259.76239014]
[133.18693542 250.51287842]
[131.40447998 235.61915588]
[129.62200928 220.72544861]
[126.40873718 206.07365417]
[121.79472351 191.80091858]
[117.18071747 177.52818298]
[112.56670380 163.25546265]
[107.95269775 148.98272705]
[96.67562103 139.25251770]
[99.79283905 123.74144745]
[95.17883301 109.46871185]
[89.61960602 95.53691101]
[76.68019867 86.43293762]
[78.16063690 71.61208344]
[71.68114471 58.08374023]
[65.20164490 44.55539322]
[58.62162018 31.07566071]
[51.94142532 17.64528465]
[45.26123047 4.21490765]
[32.18771744 -4.69541454]
[33.44733047 -19.53666306]
[21.49033356 -24.37329292]
[16.20287514 -35.69701004]
[19.92529297 -47.20657730]
[13.44579697 -60.73492432]
[6.96630096 -74.26326752]
[-0.59807777 -87.21627045]
[-9.19664192 -99.50710297]
[-17.79520607 -111.79794312]
[-26.39377022 -124.08878326]
[-34.99233246 -136.37962341]
[-43.59089661 -148.67045593]
[-52.18946075 -160.96128845]
[-55.86005783 -146.41734314]
[-68.66846466 -138.61062622]
[-83.27745056 -142.01321411]
[-91.31832123 -154.67593384]
[-88.18489838 -169.34500122]
[-75.67215729 -177.61732483]
[-60.94874954 -174.75463867]
[-68.41648865 -187.76359558]
[-75.88423157 -200.77255249]
[-83.35197449 -213.78149414]
[-90.81971741 -226.79045105]
[-104.72846985 -221.11331177]
[-119.26983643 -217.34074402]
[-134.18429565 -215.54008484]
[-149.20567322 -215.74345398]
[-164.06591797 -217.94721985]
[-178.49981689 -222.11207581]
[-192.24978638 -228.16366577]
[-205.07043457 -235.99401855]
[-216.73297119 -245.46337891]
[-227.02926636 -256.40274048]
[-235.77554321 -268.61691284]
[-242.81575012 -281.88790894]
[-248.02423096 -295.97885132]
[-251.30802917 -310.63833618]
[-252.60855103 -325.60470581]
[-251.90257263 -340.61087036]
[-249.20271301 -355.38903809]
[-244.55714417 -369.67547607]
[-238.04876709 -383.21520996]
[-229.79374695 -395.76660156]
[-219.93937683 -407.10571289]
[-208.66154480 -417.03012085]
[-196.16151428 -425.36273193]
[-182.66235352 -431.95486450]
[-168.40496826 -436.68884277]
[-153.64381409 -439.48019409]
[-138.64230347 -440.27911377]
[-123.66817474 -439.07131958]
[-108.98863983 -435.87841797]
[-94.86568451 -430.75732422]
[-81.55134583 -423.79946899]
[-69.28323364 -415.12899780]
[-58.28028870 -404.90066528]
[-48.73886490 -393.29702759]
[-40.82925034 -380.52511597]
[-34.69259262 -366.81289673]
[-30.43841171 -352.40509033]
[-28.14262772 -337.55877686]
[-27.84621239 -322.53894043]
[-29.55445480 -307.61361694]
[-33.23686981 -293.04916382]
[-38.82773972 -279.10549927]
[-46.22728729 -266.03146362]
[-55.30346298 -254.06040955]
[-65.89428711 -243.40592957]
[-77.81076050 -234.25819397]
[-70.34301758 -221.24923706]
[-62.87527847 -208.24029541]
[-55.40753937 -195.23133850]
[-47.93979645 -182.22238159]
[-39.89862442 -169.55986023]
[-31.30006027 -157.26902771]
[-22.70149612 -144.97817993]
[-14.10293198 -132.68734741]
[-5.50436783 -120.39650726]
[3.09419608 -108.10566711]
[11.69276047 -95.81483459]
[11.52178955 -110.81385803]
[18.25846100 -124.21599579]
[30.39778519 -133.02716064]
[45.22780609 -135.27894592]
[59.43545914 -130.46826172]
[69.84671783 -119.66985321]
[74.13568115 -105.29610443]
[71.34418488 -90.55813599]
[62.09585190 -78.74846649]
[48.45678711 -72.50539398]
[33.47399139 -73.22364044]
[20.49464607 -80.74276733]
[26.97414207 -67.21441650]
[33.45363998 -53.68607330]
[48.44555283 -44.56415558]
[46.87770844 -26.21685600]
[59.47340775 -18.26716614]
[58.69160843 -2.46528697]
[65.37180328 10.96508884]
[72.05199432 24.39546585]
[77.84539032 28.98440170]
[78.72999573 38.07589722]
[85.20948792 51.60424423]
[91.68898773 65.13259125]
[104.16493225 73.26892853]
[103.14794922 89.05741882]
[106.47205353 74.43037415]
[117.10159302 63.84675980]
[131.74288940 60.58602142]
[145.85917664 65.65853119]
[155.07637024 77.49251556]
[156.53843689 92.42109680]
[149.79231262 105.81847382]
[136.92837524 113.53334045]
[121.93264771 113.17515564]
[109.45156097 104.85470581]
[114.06557465 119.12743378]
[125.67267609 129.87850952]
[122.22543335 144.36871338]
[126.83943939 158.64144897]
[131.45344543 172.91418457]
[136.06745911 187.18692017]
[140.68147278 201.45964050]
[144.22180176 186.88343811]
[153.32009888 174.95779419]
[166.44313049 167.69239807]
[181.37944031 166.31159973]
[195.61199951 171.04808044]
[206.74237061 181.10368347]
[212.89488220 194.78382874]
[213.03274536 209.78320312]
[207.13270569 223.57412720]
[196.18904114 233.83259583]
[182.04594421 238.82986450]
[167.08677673 237.72383118]
[153.83241272 230.70086670]
[144.51573181 218.94297791]
[146.29818726 233.83670044]
[148.08065796 248.73040771]
[162.10099792 254.84410095]
[171.11923218 267.07391357]
[172.79397583 282.07595825]
[166.77497864 295.81015015]
[154.77044678 304.62814331]
[156.55290222 319.52185059]
[158.33537292 334.41555786]
[160.11784363 349.30929565]
[169.44020081 362.09225464]
[163.27012634 375.64877319]
[165.05259705 390.54248047]
[174.37495422 403.32543945]
[168.20487976 416.88195801]
[169.98733521 431.77569580]
[184.93843079 433.75448608]
[198.92739868 439.39007568]
[211.07485962 448.32818604]
[220.61724854 460.00695801]
[226.95469666 473.69226074]
[229.68882751 488.52383423]
[228.64779663 503.56933594]
[223.89701843 517.88299561]
[215.73513794 530.56506348]
[204.67521667 540.81829834]
[191.41249084 547.99816895]
[176.78067017 551.65344238]
[161.69952393 551.55419922]
[147.11706543 547.70678711]
[133.94995117 540.35302734]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 195]
[9 194]
[11 192]
[12 191]
[14 189]
[15 188]
[16 187]
[17 186]
[22 181]
[23 180]
[24 179]
[25 165]
[26 164]
[27 163]
[28 162]
[29 161]
[31 159]
[32 158]
[33 148]
[35 146]
[36 145]
[37 144]
[38 142]
[39 141]
[40 140]
[42 138]
[45 136]
[46 135]
[47 134]
[48 122]
[49 121]
[50 120]
[51 119]
[52 118]
[53 117]
[54 116]
[61 115]
[62 114]
[63 113]
[64 112]
[65 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
