%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[4.73407793 500.90194702]
[9.85758781 515.06402588]
[11.81644154 529.99639893]
[10.51902008 545.00079346]
[6.02600574 559.37530518]
[-1.45245481 572.44763184]
[-11.56657982 583.60644531]
[-23.84331512 592.32971191]
[-37.70845413 598.20953369]
[-52.51349640 600.97082520]
[-67.56598663 600.48443604]
[-82.16189575 596.77319336]
[-95.61854553 590.01055908]
[-107.30653381 580.51293945]
[-116.67920685 568.72454834]
[-123.29817200 555.19665527]
[-126.85386658 540.56207275]
[-127.17996979 525.50524902]
[-124.26123810 510.73043823]
[-118.23417664 496.92868042]
[-109.38069153 484.74551392]
[-98.11486816 474.75073242]
[-84.96363831 467.41186523]
[-70.54209900 463.07211304]
[-55.52478027 461.93447876]
[-40.61406708 464.05218506]
[-35.36734772 449.99972534]
[-30.12063026 435.94723511]
[-24.87391090 421.89477539]
[-19.62719345 407.84228516]
[-14.38047504 393.78982544]
[-9.13375664 379.73736572]
[-17.50849724 369.33996582]
[-19.66937256 356.05557251]
[-14.94639683 343.33697510]
[-4.47295904 334.54345703]
[9.08405495 332.05386353]
[14.53941154 318.08105469]
[19.99476814 304.10824585]
[25.45012665 290.13546753]
[30.90548325 276.16265869]
[27.32820511 258.98214722]
[41.79984283 247.59561157]
[47.04656219 233.54313660]
[52.29327774 219.49066162]
[57.22487259 205.32453918]
[61.83888245 191.05180359]
[66.45288849 176.77906799]
[71.06690216 162.50633240]
[65.84016418 151.59725952]
[69.56735992 139.66865540]
[80.77098846 133.27790833]
[85.59699249 119.07546234]
[90.42298889 104.87300110]
[92.64810181 90.03896332]
[92.20149994 75.04560852]
[91.75489044 60.05226135]
[83.61013794 46.48857498]
[90.96507263 33.53657532]
[90.51846313 18.54322624]
[90.07186127 3.54987693]
[87.95723724 -11.30032063]
[84.20093536 -25.82238007]
[80.44463348 -40.34444046]
[76.47253418 -54.80896378]
[72.28553009 -69.21274567]
[68.09851837 -83.61652374]
[63.91150284 -98.02030945]
[59.72449112 -112.42408752]
[55.53748322 -126.82787323]
[44.25562286 -137.91976929]
[48.13276672 -152.30090332]
[43.94575500 -166.70469666]
[39.75874710 -181.10847473]
[35.57173538 -195.51225281]
[31.38472366 -209.91603088]
[27.89518738 -195.32757568]
[19.43140602 -182.94354248]
[7.10693121 -174.39324951]
[-7.45673847 -170.80166626]
[-22.34350204 -172.64129639]
[-35.59474945 -179.67013550]
[-45.46705246 -190.96339417]
[-50.66154099 -205.03524780]
[-50.49478531 -220.03431702]
[-44.98873138 -233.98721313]
[-34.86779022 -245.05819702]
[-21.46354866 -251.79067993]
[-6.53956509 -253.29888916]
[7.94065523 -249.38439941]
[20.07198906 -240.56222534]
[28.25926590 -227.99089050]
[27.36645126 -242.96429443]
[26.47363472 -257.93768311]
[11.82876492 -261.73019409]
[-0.92630261 -269.86428833]
[-10.54195499 -281.54309082]
[-16.07614708 -295.62240601]
[-16.98669815 -310.72296143]
[-13.18440056 -325.36526489]
[-5.04176378 -338.11489868]
[6.64347887 -347.72271729]
[20.72652626 -353.24746704]
[35.82766724 -354.14791870]
[50.46744156 -350.33578491]
[63.21159744 -342.18463135]
[72.81158447 -330.49295044]
[78.32691193 -316.40618896]
[79.21722412 -301.30444336]
[75.39530182 -286.66723633]
[67.23558807 -273.92855835]
[55.53747940 -264.33639526]
[41.44704056 -258.83050537]
[42.33985519 -243.85710144]
[43.23267365 -228.88369751]
[45.78850555 -214.10304260]
[49.97551727 -199.69926453]
[54.16252899 -185.29548645]
[58.34953690 -170.89170837]
[62.53654861 -156.48791504]
[73.51892090 -146.42626953]
[69.94126129 -131.01487732]
[74.12827301 -116.61109924]
[78.31528473 -102.20732117]
[82.50229645 -87.80353546]
[86.68930817 -73.39975739]
[90.87631989 -58.99597549]
[94.55606842 -55.95155334]
[96.36239624 -50.56321335]
[94.96669006 -44.10073853]
[98.72299194 -29.57868004]
[102.47929382 -15.05662155]
[106.40163422 -29.53471756]
[115.23038483 -41.66126633]
[127.80397034 -49.84081268]
[142.46810913 -52.99719620]
[157.29350281 -50.71514130]
[170.32960510 -43.29488754]
[179.86129761 -31.71270370]
[184.63450623 -17.49242210]
[184.02124023 -2.50496292]
[178.10220337 11.27781296]
[167.65612793 22.04254532]
[154.05737305 28.37294960]
[139.09509277 29.43614960]
[124.73784637 25.09226418]
[112.87456512 15.91280746]
[105.06520844 3.10327101]
[105.51181793 18.09662056]
[105.95841980 33.08996964]
[114.07122803 45.58123016]
[106.74824524 59.60565567]
[107.19484711 74.59900665]
[107.64145660 89.59235382]
[113.89390564 75.95758820]
[123.18907166 64.18474579]
[135.00126648 54.93962860]
[148.66244507 48.74509811]
[163.40000916 45.95148849]
[178.38046265 46.71678543]
[192.75662231 50.99771500]
[205.71540833 58.55216217]
[216.52395630 68.95289612]
[224.57099915 81.61169434]
[229.40142822 95.81264496]
[230.74205017 110.75260925]
[228.51705933 125.58667755]
[222.85227966 139.47589111]
[214.06809998 151.63476562]
[202.66128540 161.37564087]
[189.27696228 168.14762878]
[174.67207336 171.56774902]
[159.67259216 171.44256592]
[145.12683105 167.77915955]
[131.85739136 160.78472900]
[120.61474609 150.85482788]
[112.03472137 138.55104065]
[106.60255432 124.56920624]
[104.62544250 109.69900513]
[99.79944611 123.90145874]
[94.97344971 138.10391235]
[98.97845459 156.07727051]
[85.33963013 167.12034607]
[80.72562408 181.39308167]
[76.11161804 195.66580200]
[71.49760437 209.93853760]
[72.59220123 215.04235840]
[71.70803070 219.59994507]
[69.38451385 222.94902039]
[66.34574890 224.73738098]
[61.09903336 238.78985596]
[55.85231400 252.84233093]
[60.48661041 264.87918091]
[55.82730865 276.47552490]
[44.87828064 281.61801147]
[39.42292404 295.59082031]
[33.96756744 309.56362915]
[28.51220894 323.53640747]
[23.05685234 337.50921631]
[32.38082504 351.62161255]
[31.46499634 368.34472656]
[20.86808014 381.09881592]
[4.91871405 384.98406982]
[-0.32800397 399.03656006]
[-5.57472229 413.08901978]
[-10.82144070 427.14147949]
[-16.06815910 441.19396973]
[-21.31487656 455.24642944]
[-26.56159401 469.29888916]
[-13.91155815 477.47146606]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 209]
[27 208]
[28 207]
[29 206]
[30 205]
[31 204]
[32 203]
[37 199]
[38 198]
[39 197]
[40 196]
[41 195]
[43 192]
[44 191]
[45 190]
[46 186]
[47 185]
[48 184]
[49 183]
[52 181]
[53 180]
[54 179]
[55 154]
[56 153]
[57 152]
[59 150]
[60 149]
[61 148]
[62 132]
[63 131]
[64 130]
[65 127]
[66 126]
[67 125]
[68 124]
[69 123]
[70 122]
[72 120]
[73 119]
[74 118]
[75 117]
[76 116]
[92 115]
[93 114]
[94 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
