%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxAAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUA\
) } def
/len { sequence length } bind def

/coor [
[54.93311310 489.84121704]
[50.22021103 504.11315918]
[43.38383484 517.49841309]
[34.58423996 529.68310547]
[24.02770233 540.38171387]
[11.96168518 549.34338379]
[-1.33097064 556.35809326]
[-15.53866482 561.26135254]
[-30.32834816 563.93823242]
[-45.35332870 564.32598877]
[-60.26140213 562.41552734]
[-74.70310211 558.25164795]
[-88.33988953 551.93194580]
[-100.85209656 543.60461426]
[-111.94643402 533.46478271]
[-121.36281586 521.75018311]
[-128.88052368 508.73538208]
[-134.32331848 494.72552490]
[-137.56362915 480.04898071]
[-138.52548218 465.04980469]
[-137.18634033 450.07958984]
[-133.57759094 435.48928833]
[-127.78383636 421.62084961]
[-119.94087982 408.79946899]
[-110.23257446 397.32562256]
[-98.88648987 387.46829224]
[-86.16860962 379.45852661]
[-72.37705231 373.48416138]
[-57.83511353 369.68515015]
[-42.88367081 368.15060425]
[-27.87321091 368.91650391]
[-13.15560341 371.96484375]
[-7.90888500 357.91238403]
[-2.66216683 343.85989380]
[2.58455133 329.80743408]
[7.83126974 315.75494385]
[13.07798767 301.70248413]
[8.34358120 290.57092285]
[12.59970188 278.82061768]
[24.07751656 272.93652344]
[29.53287506 258.96374512]
[25.95559692 241.78321838]
[40.42723465 230.39668274]
[45.67395020 216.34420776]
[50.92066956 202.29174805]
[56.16738892 188.23927307]
[61.41410828 174.18679810]
[66.66082764 160.13432312]
[71.90753937 146.08186340]
[70.86794281 143.47851562]
[70.79692078 140.30651855]
[71.91622925 136.93272400]
[74.31086731 133.79739380]
[77.90753174 131.36471558]
[83.98136902 117.64944458]
[90.05519867 103.93418121]
[94.45619965 89.59432983]
[97.12199402 74.83311462]
[99.78778839 60.07189941]
[102.45358276 45.31068039]
[105.11938477 30.54946327]
[107.78517914 15.78824711]
[110.45097351 1.02702975]
[97.83125305 -4.13727617]
[86.47740173 -11.67854595]
[76.83129883 -21.30074310]
[69.26785278 -32.62689590]
[64.08044434 -45.21386337]
[61.46954727 -58.56967163]
[61.53495789 -72.17275238]
[64.27201080 -85.49229431]
[69.57183838 -98.00897217]
[77.22566986 -109.23518372]
[86.93309784 -118.73406982]
[98.31384277 -126.13645935]
[110.92265320 -131.15528870]
[124.26673126 -133.59666443]
[137.82498169 -133.36740112]
[141.14724731 -147.99487305]
[132.98907471 -161.26446533]
[136.56669617 -176.05145264]
[149.26750183 -183.74725342]
[152.58975220 -198.37471008]
[155.91201782 -213.00216675]
[159.23426819 -227.62962341]
[162.55653381 -242.25709534]
[158.06791687 -257.42822266]
[168.43194580 -268.12570190]
[171.75419617 -282.75314331]
[175.07646179 -297.38061523]
[161.18653870 -291.71755981]
[148.02481079 -298.91262817]
[145.29360962 -313.66186523]
[155.00627136 -325.09271240]
[170.00299072 -324.77874756]
[179.22837830 -312.95306396]
[183.62937927 -327.29290771]
[188.03036499 -341.63275146]
[192.43136597 -355.97259521]
[179.10383606 -362.95053101]
[167.28556824 -372.25875854]
[157.37908936 -383.58026123]
[149.72181702 -396.52941895]
[144.57453918 -410.66519165]
[142.11259460 -425.50613403]
[142.41981506 -440.54675293]
[145.48574829 -455.27478027]
[151.20596313 -469.18856812]
[159.38563538 -481.81423950]
[169.74617004 -492.72177124]
[181.93469238 -501.53961182]
[195.53605652 -507.96749878]
[210.08700562 -511.78643799]
[225.09194946 -512.86639404]
[240.03982544 -511.17059326]
[254.42149353 -506.75674438]
[267.74716187 -499.77523804]
[279.56292725 -490.46380615]
[289.46633911 -479.13964844]
[297.12011719 -466.18841553]
[302.26358032 -452.05126953]
[304.72152710 -437.20965576]
[304.41024780 -422.16912842]
[301.34036255 -407.44192505]
[295.61639404 -393.52966309]
[287.43331909 -380.90618896]
[277.06982422 -370.00146484]
[264.87893677 -361.18688965]
[251.27584839 -354.76269531]
[236.72386169 -350.94766235]
[221.71862793 -349.87173462]
[206.77122498 -351.57159424]
[202.37022400 -337.23175049]
[197.96922302 -322.89190674]
[193.56822205 -308.55206299]
[189.70391846 -294.05834961]
[186.38165283 -279.43090820]
[183.05940247 -264.80343628]
[187.78564453 -250.67857361]
[177.18399048 -238.93482971]
[173.86174011 -224.30737305]
[170.53947449 -209.67990112]
[167.21722412 -195.05244446]
[163.89495850 -180.42498779]
[172.02536011 -167.99790955]
[168.86448669 -153.11625671]
[155.77470398 -144.67260742]
[152.45243835 -130.04515076]
[167.24008179 -122.88883209]
[179.91032410 -112.41886139]
[189.73507690 -99.23185730]
[196.14859009 -84.08068848]
[198.78001404 -67.83154297]
[197.47483826 -51.41435623]
[192.30392456 -35.76962280]
[183.55975342 -21.79450798]
[171.73977661 -10.29139423]
[157.51823425 -1.92182267]
[141.70759583 2.83155942]
[125.21218872 3.69282508]
[122.54639435 18.45404243]
[119.88059998 33.21525955]
[117.21480560 47.97647858]
[114.54901123 62.73769379]
[111.88320923 77.49890900]
[109.21741486 92.26013184]
[118.69283295 80.63186646]
[131.53831482 72.88630676]
[146.24478149 69.93339539]
[161.08454895 72.12004089]
[174.31423950 79.18935394]
[184.37965393 90.31083679]
[190.09831238 104.17795563]
[190.79838562 119.16160583]
[186.39765930 133.50154114]
[177.41308594 145.51309204]
[164.90017700 153.78517151]
[150.32896423 157.34599304]
[135.41122437 155.77720642]
[121.89949036 149.26313782]
[111.38111115 138.56904602]
[105.09176636 124.95125580]
[103.77046967 110.00801086]
[97.69663239 123.72328186]
[91.62280273 137.43855286]
[85.96001434 151.32856750]
[80.71329498 165.38104248]
[75.46657562 179.43351746]
[70.21985626 193.48599243]
[64.97314453 207.53845215]
[59.72642136 221.59092712]
[54.47970581 235.64340210]
[59.11400223 247.68026733]
[54.45470047 259.27658081]
[43.50567245 264.41909790]
[38.05031586 278.39187622]
[41.24877548 296.52615356]
[27.13045883 306.94921875]
[21.88374138 321.00167847]
[16.63702202 335.05413818]
[11.39030457 349.10662842]
[6.14358616 363.15908813]
[0.89686811 377.21154785]
[14.01097298 384.55462646]
[25.85040283 393.81359863]
[36.13762283 404.77139282]
[44.63148880 417.17117310]
[51.13288879 430.72229004]
[55.48942184 445.10702515]
[57.59896469 459.98825073]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 203]
[33 202]
[34 201]
[35 200]
[36 199]
[37 198]
[40 196]
[41 195]
[43 192]
[44 191]
[45 190]
[46 189]
[47 188]
[48 187]
[49 186]
[54 185]
[55 184]
[56 183]
[57 166]
[58 165]
[59 164]
[60 163]
[61 162]
[62 161]
[63 160]
[78 148]
[79 147]
[82 144]
[83 143]
[84 142]
[85 141]
[86 140]
[88 138]
[89 137]
[90 136]
[96 135]
[97 134]
[98 133]
[99 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
