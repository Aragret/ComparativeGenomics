%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[152.04013062 482.66134644]
[160.83206177 470.43368530]
[172.04731750 460.38220215]
[185.16137695 452.97708130]
[180.76037598 438.63723755]
[176.35937500 424.29739380]
[171.95837402 409.95755005]
[158.72036743 403.22772217]
[154.05285645 388.74777222]
[161.20147705 374.90814209]
[156.80047607 360.56829834]
[152.39947510 346.22845459]
[147.99848938 331.88861084]
[136.86752319 321.99157715]
[140.21533203 306.52865601]
[130.98846436 318.35510254]
[115.99172211 318.66763306]
[106.28014374 307.23587036]
[109.01274109 292.48687744]
[122.17514801 285.29306030]
[136.06341553 290.95620728]
[132.74114990 276.32873535]
[129.41889954 261.70129395]
[126.09663391 247.07382202]
[115.73261261 236.37634277]
[120.22122955 221.20521545]
[116.89897156 206.57775879]
[113.57671356 191.95030212]
[110.25445557 177.32284546]
[106.93219757 162.69537354]
[103.60993195 148.06791687]
[100.28767395 133.44046021]
[96.85661316 118.83813477]
[84.53751373 111.21016693]
[81.11830139 97.12985229]
[88.56700897 84.70153809]
[85.02733612 70.12516022]
[81.45478058 84.69351196]
[73.79841614 97.59235382]
[62.72059631 107.70580292]
[49.17966461 114.15895081]
[34.34704208 116.39353180]
[19.50590515 114.21623993]
[5.94015598 107.81542206]
[-5.17663002 97.74481201]
[-12.88274002 84.87563324]
[-16.51151848 70.32118225]
[-15.74904060 55.34057617]
[-10.66126728 41.22977829]
[-1.68834174 29.20952034]
[10.39348698 20.31967163]
[24.53902054 15.32929420]
[39.52452850 14.67010498]
[54.05361557 18.39912987]
[66.86936951 26.19377327]
[76.86309814 37.37971878]
[83.16925812 50.98589325]
[83.83904266 36.00085449]
[84.50882721 21.01581764]
[85.17861176 6.03077793]
[85.84839630 -8.95426083]
[86.51818085 -23.93930054]
[87.18796539 -38.92433929]
[87.85774994 -53.90937805]
[88.08107758 -68.90771484]
[87.85774994 -83.90605164]
[78.04994202 -99.49092865]
[87.18862915 -114.47263336]
[86.74201965 -129.46598816]
[86.29541779 -144.45933533]
[85.84880829 -159.45268250]
[85.40219879 -174.44602966]
[76.56668854 -183.84265137]
[76.50337982 -196.33984375]
[84.70080566 -205.23527527]
[84.47747803 -220.23361206]
[84.25415039 -235.23194885]
[76.31224060 -248.91540527]
[83.85919189 -261.75646973]
[83.63586426 -276.75479126]
[68.70444489 -278.37722778]
[54.08558655 -281.82229614]
[40.00090790 -287.03781128]
[26.66392708 -293.94467163]
[14.27683258 -302.43814087]
[3.02740812 -312.38952637]
[-6.91380787 -323.64794922]
[-15.39610863 -336.04272461]
[-22.29090500 -349.38592529]
[-27.49367332 -363.47531128]
[-30.92554092 -378.09729004]
[-32.53448486 -393.03018188]
[-32.29610825 -408.04757690]
[-30.21402550 -422.92187500]
[-26.31980515 -437.42755127]
[-20.67247963 -451.34472656]
[-13.35766125 -464.46237183]
[-4.48624086 -476.58166504]
[5.80729389 -487.51889038]
[17.36689377 -497.10821533]
[30.01732063 -505.20428467]
[43.56679535 -511.68435669]
[57.80991364 -516.45019531]
[72.53074646 -519.42956543]
[87.50614166 -520.57727051]
[102.50906372 -519.87597656]
[117.31208038 -517.33618164]
[131.69078064 -512.99652100]
[145.42718506 -506.92276001]
[158.31304932 -499.20693970]
[170.15304565 -489.96603394]
[180.76765442 -479.34014893]
[189.99597168 -467.49035645]
[197.69812012 -454.59628296]
[203.75729370 -440.85342407]
[208.08168030 -426.47012329]
[210.60569763 -411.66442871]
[211.29109192 -396.66076660]
[210.12747192 -381.68661499]
[207.13247681 -366.96893311]
[202.35151672 -352.73089600]
[195.85705566 -339.18832397]
[187.74754333 -326.54647827]
[178.14595032 -314.99707031]
[167.19779968 -304.71517944]
[155.06907654 -295.85662842]
[141.94364929 -288.55575562]
[128.02050781 -282.92321777]
[113.51069641 -279.04440308]
[98.63420105 -276.97811890]
[98.85752869 -261.97979736]
[106.78346252 -249.36912537]
[99.25248718 -235.45527649]
[99.47581482 -220.45693970]
[99.69914246 -205.45860291]
[109.49768066 -190.89991760]
[100.39555359 -174.89263916]
[100.84215546 -159.89929199]
[101.28876495 -144.90592957]
[101.73536682 -129.91258240]
[102.18197632 -114.91923523]
[110.76842499 -106.39870453]
[111.26320648 -93.91115570]
[102.85608673 -84.12937927]
[103.07941437 -69.13104248]
[104.99463654 -67.08407593]
[106.21441650 -64.15512848]
[106.39878082 -60.60527802]
[105.30841827 -56.81375885]
[102.84278870 -53.23959351]
[102.17300415 -38.25455475]
[101.50321960 -23.26951408]
[100.83343506 -8.28447533]
[100.16365051 6.70056295]
[99.49386597 21.68560219]
[98.82408142 36.67063904]
[98.15429688 51.65567780]
[99.60371399 66.58548737]
[103.14338684 81.16186523]
[115.46248627 88.78983307]
[118.88169861 102.87014771]
[111.43299103 115.29846191]
[116.49909973 122.89927673]
[114.91513824 130.11819458]
[118.23739624 144.74566650]
[121.55965424 159.37312317]
[124.88191223 174.00057983]
[128.20417786 188.62803650]
[131.52642822 203.25549316]
[134.84869385 217.88296509]
[145.45034790 229.62670898]
[140.72409058 243.75157166]
[144.04635620 258.37902832]
[147.36862183 273.00650024]
[150.69087219 287.63394165]
[154.55517578 302.12765503]
[166.00093079 313.05035400]
[162.33833313 327.48760986]
[166.73933411 341.82745361]
[171.14031982 356.16729736]
[175.54132080 370.50714111]
[189.22286987 377.95385742]
[193.48182678 392.55917358]
[186.29821777 405.55654907]
[190.69921875 419.89639282]
[195.10021973 434.23623657]
[199.50122070 448.57608032]
[214.51155090 447.34963989]
[229.43452454 449.37908936]
[243.57218933 454.56954956]
[256.26327515 462.67819214]
[266.91424561 473.32577515]
[275.02685547 486.01431274]
[280.22174072 500.15036011]
[282.25588989 515.07269287]
[281.03417969 530.08343506]
[276.61370850 544.48040771]
[269.20129395 557.59033203]
[259.14358521 568.79998779]
[246.91099548 577.58508301]
[233.07569885 583.53472900]
[218.28475952 586.37066650]
[203.23001099 585.96026611]
[188.61557007 582.32263184]
[175.12498474 575.62799072]
[163.38923645 566.18945312]
[153.95722961 554.44842529]
[147.27011108 540.95410156]
[143.64064026 526.33764648]
[143.23860168 511.28268433]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 187]
[5 186]
[6 185]
[7 184]
[10 181]
[11 180]
[12 179]
[13 178]
[15 176]
[21 175]
[22 174]
[23 173]
[24 172]
[26 170]
[27 169]
[28 168]
[29 167]
[30 166]
[31 165]
[32 164]
[33 162]
[36 159]
[37 158]
[57 157]
[58 156]
[59 155]
[60 154]
[61 153]
[62 152]
[63 151]
[64 150]
[65 145]
[66 144]
[68 141]
[69 140]
[70 139]
[71 138]
[72 137]
[75 135]
[76 134]
[77 133]
[79 131]
[80 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
