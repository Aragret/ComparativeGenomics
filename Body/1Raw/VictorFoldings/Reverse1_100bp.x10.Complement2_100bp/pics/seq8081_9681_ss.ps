%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxAUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUA\
) } def
/len { sequence length } bind def

/coor [
[31.59212494 433.76434326]
[38.68684006 447.07281494]
[42.24817657 461.72778320]
[42.05226517 476.80798340]
[38.11141968 491.36547852]
[30.67336655 504.48516846]
[20.20566559 515.34234619]
[7.36632824 523.25445557]
[-7.03755522 527.72424316]
[-22.10054398 528.47070312]
[-36.87576675 525.44683838]
[-50.43444061 518.84283447]
[-61.92425919 509.07376099]
[-70.62295532 496.75369263]
[-75.98372650 482.65713501]
[-77.66958618 467.67019653]
[-75.57456970 452.73495483]
[-69.83036041 438.79025269]
[-60.79804993 426.71264648]
[-49.04541397 417.26138306]
[-35.31123352 411.03054810]
[-20.45885468 408.41186523]
[-5.42190742 409.56988525]
[-0.59590989 395.36743164]
[4.23008776 381.16497803]
[9.05608559 366.96249390]
[13.88208294 352.76004028]
[10.65095806 338.22012329]
[22.41684151 327.64306641]
[27.24283981 313.44061279]
[32.06883621 299.23815918]
[36.89483643 285.03570557]
[41.40246201 270.72900391]
[37.52531815 256.34786987]
[48.80717850 245.25596619]
[52.99419022 230.85218811]
[57.18119812 216.44841003]
[53.30405426 202.06727600]
[64.58591461 190.97537231]
[68.77292633 176.57159424]
[67.62144470 169.27119446]
[73.13098145 161.98539734]
[77.53198242 147.64553833]
[73.86938477 133.20828247]
[85.31513214 122.28557587]
[89.71612549 107.94573212]
[93.68822479 93.48120880]
[97.22789764 78.90483093]
[100.76757050 64.32846069]
[104.30724335 49.75208282]
[105.75666046 34.82227325]
[105.08687592 19.83723450]
[104.41709137 4.85219574]
[89.98933411 0.26250583]
[78.02484894 -8.96912289]
[69.95586395 -21.71321106]
[66.73995972 -36.42130280]
[68.74641418 -51.31410980]
[75.71393585 -64.59673309]
[86.78450012 -74.67501831]
[100.60895538 -80.34684753]
[99.93917084 -95.33188629]
[99.26938629 -110.31692505]
[98.59960175 -125.30196381]
[89.62516022 -134.56599426]
[89.37579346 -147.06086731]
[97.43987274 -156.07736206]
[89.29512024 -169.64103699]
[96.65005493 -182.59304810]
[83.70000458 -194.35380554]
[83.27085876 -211.50404358]
[95.13993073 -223.41891479]
[94.47014618 -238.40394592]
[93.80036163 -253.38899231]
[93.13057709 -268.37402344]
[92.46079254 -283.35906982]
[82.40332794 -272.23037720]
[67.56328583 -270.04565430]
[54.72532654 -277.80368042]
[49.75880051 -291.95758057]
[54.93433380 -306.03643799]
[67.88573456 -313.60354614]
[82.69181061 -311.19934082]
[92.58409119 -299.92126465]
[82.37150574 -311.68310547]
[83.49024963 -326.85552979]
[94.76630402 -336.51919556]
[95.65912628 -351.49258423]
[96.55194092 -366.46600342]
[97.44475555 -381.43939209]
[98.33757019 -396.41281128]
[83.73979187 -400.04867554]
[70.05874634 -406.30517578]
[57.76041794 -414.96920776]
[47.26367950 -425.74572754]
[38.92604065 -438.26763916]
[33.03148270 -452.10845947]
[29.78077126 -466.79681396]
[29.28462410 -481.83239746]
[31.55994034 -496.70309448]
[36.52922440 -510.90240479]
[44.02322006 -523.94677734]
[53.78668976 -535.39178467]
[65.48709106 -544.84777832]
[78.72591400 -551.99255371]
[93.05224609 -556.58288574]
[107.97814178 -558.46234131]
[122.99523163 -557.56689453]
[137.59202576 -553.92712402]
[151.27137756 -547.66693115]
[163.56738281 -538.99957275]
[174.06121826 -528.22021484]
[182.39547729 -515.69604492]
[188.28630066 -501.85363770]
[191.53305054 -487.16439819]
[192.02514648 -472.12869263]
[189.74581909 -457.25860596]
[184.77270508 -443.06063843]
[177.27519226 -430.01831055]
[167.50865173 -418.57589722]
[155.80569458 -409.12307739]
[142.56494141 -401.98184204]
[128.23738098 -397.39541626]
[113.31097412 -395.51998901]
[112.41815948 -380.54660034]
[111.52534485 -365.57318115]
[110.63253021 -350.59979248]
[109.73971558 -335.62637329]
[119.78752899 -324.69125366]
[119.09539032 -309.49337769]
[107.55749512 -299.02844238]
[107.44583130 -284.02883911]
[108.11561584 -269.04382324]
[108.78540039 -254.05877686]
[109.45518494 -239.07373047]
[110.12496948 -224.08869934]
[120.75701904 -216.80934143]
[125.32329559 -204.55245972]
[121.94675446 -191.71464539]
[111.64340210 -183.03964233]
[119.75621033 -170.54838562]
[112.43321991 -156.52397156]
[122.44743347 -142.11276245]
[113.58464050 -125.97174835]
[114.25442505 -110.98670959]
[114.92420959 -96.00167084]
[115.59399414 -81.01663208]
[129.86933899 -76.60077667]
[141.79489136 -67.55034637]
[149.91964722 -54.94230270]
[153.24678040 -40.28789139]
[151.35588074 -25.35154152]
[144.45605469 -11.93839359]
[133.36288452 -1.67615807]
[119.40213013 4.18241072]
[120.07191467 19.16744995]
[120.74169922 34.15248871]
[127.04978943 20.54337311]
[137.04428101 9.35811710]
[149.86058044 1.56435823]
[164.38992310 -2.16366506]
[179.37538147 -1.50344229]
[193.52056885 3.48791122]
[205.60179138 12.37859249]
[214.57388306 24.39947128]
[219.66069031 38.51061630]
[220.42213440 53.49127960]
[216.79235840 68.04547882]
[209.08535767 80.91413116]
[197.96788025 90.98396301]
[184.40168762 97.38385010]
[169.56039429 99.56011963]
[154.72793579 97.32451630]
[141.18743896 90.87042999]
[130.11032104 80.75621796]
[122.45484161 67.85684967]
[118.88361359 53.29175568]
[115.34394836 67.86812592]
[111.80427551 82.44450378]
[108.26460266 97.02088165]
[109.62400818 99.74879456]
[110.02089691 103.03163147]
[109.24780273 106.51383972]
[107.23153687 109.76821136]
[104.05597687 112.34673309]
[99.65497589 126.68657684]
[103.00279236 142.14952087]
[91.87182617 152.04653931]
[87.47083282 166.38638306]
[83.17670441 180.75860596]
[78.98969269 195.16238403]
[82.56735992 210.57377625]
[71.58498383 220.63542175]
[67.39797211 235.03919983]
[63.21096039 249.44297791]
[66.78862000 264.85437012]
[55.80624390 274.91601562]
[57.05231857 279.98498535]
[56.30423355 284.56686401]
[54.08145905 287.98364258]
[51.09729004 289.86169434]
[46.27129364 304.06414795]
[41.44529343 318.26660156]
[36.61929703 332.46905518]
[39.50523376 348.02484131]
[28.08453941 357.58605957]
[23.25854111 371.78851318]
[18.43254280 385.99096680]
[13.60654545 400.19342041]
[8.78054810 414.39587402]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 210]
[24 209]
[25 208]
[26 207]
[27 206]
[29 204]
[30 203]
[31 202]
[32 201]
[33 197]
[35 195]
[36 194]
[37 193]
[39 191]
[40 190]
[42 189]
[43 188]
[45 186]
[46 185]
[47 180]
[48 179]
[49 178]
[50 177]
[51 157]
[52 156]
[53 155]
[61 147]
[62 146]
[63 145]
[64 144]
[67 142]
[69 140]
[72 136]
[73 135]
[74 134]
[75 133]
[76 132]
[84 131]
[87 128]
[88 127]
[89 126]
[90 125]
[91 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
