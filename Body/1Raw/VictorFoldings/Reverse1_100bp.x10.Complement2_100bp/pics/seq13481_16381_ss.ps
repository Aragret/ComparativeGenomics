%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUACUCUCAUUAUCUAUCCCGAGUCCGCAAACACAUACUAUACAAACGCCAAAGCUACUACACCAGAAACCUCAUCUUUGGACACUCCUUUCCAUAAxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[226.48997498 507.00994873]
[220.21261597 493.38662720]
[213.93525696 479.76333618]
[207.65788269 466.14001465]
[201.38052368 452.51669312]
[189.02709961 444.19549561]
[190.27903748 428.42391968]
[184.00167847 414.80059814]
[177.72431946 401.17727661]
[171.44696045 387.55395508]
[165.16960144 373.93063354]
[158.89224243 360.30731201]
[152.61486816 346.68402100]
[151.32801819 361.62869263]
[144.79493713 375.13125610]
[133.87518311 385.41516113]
[120.00541687 391.12741089]
[105.01045990 391.51644897]
[90.86315918 386.53109741]
[79.42482758 376.82723999]
[72.20037079 363.68164062]
[70.14030457 348.82376099]
[73.51565552 334.20846558]
[81.88233185 321.75863647]
[94.13957214 313.11221313]
[108.67471313 309.40686035]
[123.57540131 311.13003540]
[136.88121033 318.05502319]
[146.84275818 329.27276611]
[143.73864746 314.59747314]
[127.82247925 305.55358887]
[123.49717712 287.43719482]
[133.96389771 271.64599609]
[130.42422485 257.06961060]
[126.88455963 242.49324036]
[123.34488678 227.91685486]
[119.80521393 213.34048462]
[105.98242950 207.85699463]
[97.94400024 195.13505554]
[98.94982910 179.94157410]
[108.82331085 168.11700439]
[105.28363800 153.54061890]
[101.74396515 138.96424866]
[98.20429230 124.38787842]
[94.66461945 109.81150055]
[91.01653290 95.26187897]
[87.15222931 80.76818848]
[83.18013000 66.30366516]
[79.20803070 51.83913803]
[65.80995941 39.20690918]
[70.90574646 22.41405487]
[66.71873474 8.01027393]
[62.53172302 -6.39350843]
[51.19767380 -9.98182011]
[43.08612823 -18.50846863]
[40.12839508 -29.77548790]
[42.94737244 -40.95444489]
[50.73056793 -49.29639435]
[46.97426605 -63.81845093]
[43.21796417 -78.34051514]
[39.46166611 -92.86257172]
[35.10747528 -97.83776855]
[34.07454300 -103.42615509]
[35.81658936 -107.87298584]
[32.49433136 -122.50045013]
[29.17207146 -137.12791443]
[25.84981155 -151.75537109]
[22.52755356 -166.38282776]
[19.20529366 -181.01028442]
[5.09895992 -187.20040894]
[-2.56797528 -200.35606384]
[-1.03636897 -215.32664490]
[8.89791965 -226.39225769]
[5.57566023 -241.01972961]
[2.25340056 -255.64718628]
[-12.70890141 -254.30072021]
[-27.71716499 -254.96063232]
[-42.50355148 -257.61511230]
[-56.80417633 -262.21679688]
[-70.36383057 -268.68356323]
[-82.94052887 -276.90002441]
[-94.30981445 -286.71954346]
[-104.26880646 -297.96685791]
[-112.63976288 -310.44125366]
[-119.27329254 -323.92010498]
[-124.05101776 -338.16287231]
[-126.88768005 -352.91540527]
[-127.73264313 -367.91439819]
[-126.57083130 -382.89215088]
[-123.42298889 -397.58142090]
[-118.34527588 -411.72003174]
[-111.42832947 -425.05566406]
[-102.79557037 -437.35034180]
[-92.60107422 -448.38464355]
[-81.02677155 -457.96163940]
[-68.27921295 -465.91043091]
[-54.58589935 -472.08914185]
[-40.19120407 -476.38754272]
[-25.35201454 -478.72888184]
[-10.33315563 -479.07141113]
[4.59734440 -477.40899658]
[19.17303276 -473.77130127]
[33.13378906 -468.22326660]
[46.23046875 -460.86389160]
[58.22934341 -451.82452393]
[68.91628265 -441.26644897]
[78.10056305 -429.37811279]
[85.61827850 -416.37167358]
[91.33526611 -402.47924805]
[95.14950562 -387.94876099]
[96.99292755 -373.03952026]
[96.83262634 -358.01763916]
[94.67147064 -343.15112305]
[90.54801941 -328.70535278]
[84.53586578 -314.93807983]
[76.74230957 -302.09503174]
[67.30642700 -290.40539551]
[56.39661789 -280.07778931]
[44.20757675 -271.29650879]
[30.95683098 -264.21829224]
[16.88086128 -258.96945190]
[20.20311928 -244.34197998]
[23.52537918 -229.71452332]
[37.26498795 -224.02583313]
[45.11311340 -211.18562317]
[43.88118744 -196.00881958]
[33.83275223 -184.33255005]
[37.15501404 -169.70509338]
[40.47727203 -155.07762146]
[43.79953384 -140.45016479]
[47.12179184 -125.82270813]
[50.44404984 -111.19524384]
[53.98372269 -96.61887360]
[57.74002457 -82.09680939]
[61.49632645 -67.57475281]
[65.25262451 -53.05269241]
[81.55673981 -44.72854614]
[86.68667603 -26.82333183]
[76.93550110 -10.58051968]
[81.12251282 3.82326221]
[85.30952454 18.22704506]
[95.75610352 24.32586670]
[99.36225128 36.29162979]
[93.67256165 47.86704254]
[97.64465332 62.33156586]
[101.61675262 76.79608917]
[106.41927338 82.41370392]
[105.53858948 91.50557709]
[110.44554138 97.90045166]
[109.24099731 106.27182770]
[112.78067017 120.84820557]
[116.32034302 135.42457581]
[119.86001587 150.00094604]
[123.39968109 164.57733154]
[137.59661865 170.55673218]
[145.45857239 183.59678650]
[144.15002441 198.58851624]
[134.38159180 209.80081177]
[137.92126465 224.37718201]
[141.46093750 238.95356750]
[145.00061035 253.52993774]
[148.54028320 268.10632324]
[159.70278931 272.19714355]
[167.42550659 281.07748413]
[169.87719727 292.46533203]
[166.56185913 303.50726318]
[158.41394043 311.49334717]
[161.51805115 326.16867065]
[166.23818970 340.40664673]
[172.51554871 354.02996826]
[178.79290771 367.65328979]
[185.07026672 381.27658081]
[191.34764099 394.89990234]
[197.62500000 408.52322388]
[203.90235901 422.14654541]
[216.70477295 431.44216919]
[215.00384521 446.23931885]
[221.28120422 459.86264038]
[227.55856323 473.48596191]
[233.83592224 487.10928345]
[240.11328125 500.73260498]
[254.74652100 497.21765137]
[269.78430176 496.62533569]
[284.64868164 498.97845459]
[298.76824951 504.18652344]
[311.60031128 512.04937744]
[322.65161133 522.26477051]
[331.49743652 534.44012451]
[337.79769897 548.10729980]
[341.31027222 562.74108887]
[341.90014648 577.77899170]
[339.54461670 592.64300537]
[334.33425903 606.76171875]
[326.46932983 619.59246826]
[316.25213623 630.64215088]
[304.07540894 639.48602295]
[290.40716553 645.78405762]
[275.77279663 649.29425049]
[260.73480225 649.88171387]
[245.87121582 647.52374268]
[231.75332642 642.31109619]
[218.92381287 634.44409180]
[207.87580872 624.22515869]
[199.03395081 612.04699707]
[192.73809814 598.37768555]
[189.23025513 583.74279785]
[188.64526367 568.70471191]
[191.00558472 553.84149170]
[196.22052002 539.72442627]
[204.08959961 526.89617920]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 181]
[2 180]
[3 179]
[4 178]
[5 177]
[7 175]
[8 174]
[9 173]
[10 172]
[11 171]
[12 170]
[13 169]
[29 168]
[30 167]
[33 162]
[34 161]
[35 160]
[36 159]
[37 158]
[41 154]
[42 153]
[43 152]
[44 151]
[45 150]
[46 148]
[47 146]
[48 145]
[49 144]
[51 141]
[52 140]
[53 139]
[58 136]
[59 135]
[60 134]
[61 133]
[64 132]
[65 131]
[66 130]
[67 129]
[68 128]
[69 127]
[73 123]
[74 122]
[75 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
