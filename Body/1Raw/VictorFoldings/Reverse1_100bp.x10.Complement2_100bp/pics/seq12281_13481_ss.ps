%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCCUUCAGUCCCAAUCCCACCAAUAUCAUCACACGUACCAAUAAUGAAAAUAAACCUCAACGUGGUUUUAAAAACCCCGGAUUCUGGUUACCUAUCGAxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[163.55673218 394.97348022]
[159.58462524 380.50894165]
[155.61253357 366.04443359]
[151.64044189 351.57989502]
[147.66835022 337.11538696]
[138.36892700 332.88052368]
[132.81904602 324.04046631]
[133.05569458 313.38568115]
[139.24211121 304.43933105]
[135.70243835 289.86297607]
[132.16276550 275.28659058]
[128.62309265 260.71020508]
[125.08341980 246.13383484]
[121.43533325 231.58422852]
[117.67903137 217.06216431]
[113.92272949 202.54010010]
[111.57855988 201.00289917]
[109.70205688 198.44450378]
[108.68521881 195.03842163]
[108.85006714 191.09667969]
[110.40263367 187.04161072]
[107.51736450 172.32171631]
[104.52259064 157.62371826]
[101.41847992 142.94841003]
[86.65288544 140.84645081]
[73.49510193 133.82408142]
[63.53012466 122.72722626]
[57.95835495 108.89262390]
[57.45096970 93.98680115]
[62.06908798 79.80532837]
[71.25640869 68.05654144]
[83.90621948 60.15569305]
[80.80210876 45.48039246]
[70.37647247 33.58010483]
[75.31250000 19.52717400]
[72.20838928 4.85187101]
[69.10427856 -9.82343102]
[64.97659302 -14.98809052]
[64.19422150 -20.61702728]
[66.13309479 -24.98163795]
[63.46729660 -39.74285507]
[60.80150223 -54.50407028]
[58.13570786 -69.26528931]
[41.06434631 -70.40965271]
[24.86748505 -75.89229584]
[10.62773132 -85.34132385]
[-0.70451289 -98.11990356]
[-8.37449074 -113.36918640]
[-11.87335205 -130.06604004]
[-10.97191334 -147.09165955]
[-5.73565912 -163.30659485]
[3.47998142 -177.62696838]
[16.05376053 -189.09689331]
[31.14048958 -196.95236206]
[27.60081673 -211.52873230]
[24.06114388 -226.10511780]
[20.52147102 -240.68148804]
[16.98180008 -255.25785828]
[13.44212723 -269.83422852]
[9.90245438 -284.41061401]
[6.36278200 -298.98699951]
[-4.41254377 -310.57159424]
[0.10288442 -324.76525879]
[-12.91313839 -337.79080200]
[-7.31963015 -354.42446899]
[-11.07593060 -368.94653320]
[-14.83223152 -383.46859741]
[-29.67675781 -381.22271729]
[-44.67353439 -380.51507568]
[-59.66358185 -381.35317993]
[-74.48800659 -383.72817993]
[-88.98964691 -387.61483765]
[-103.01479340 -392.97201538]
[-116.41476440 -399.74291992]
[-129.04750061 -407.85574341]
[-140.77911377 -417.22448730]
[-151.48522949 -427.74984741]
[-161.05233765 -439.32025146]
[-169.37905884 -451.81304932]
[-176.37709045 -465.09579468]
[-181.97227478 -479.02767944]
[-186.10528564 -493.46105957]
[-188.73231506 -508.24288940]
[-189.82553101 -523.21649170]
[-189.37330627 -538.22314453]
[-187.38046265 -553.10375977]
[-183.86811829 -567.70062256]
[-178.87351990 -581.85894775]
[-172.44958496 -595.42864990]
[-164.66444397 -608.26593018]
[-155.60058594 -620.23461914]
[-145.35412598 -631.20794678]
[-134.03367615 -641.06958008]
[-121.75921631 -649.71490479]
[-108.66088867 -657.05236816]
[-94.87753296 -663.00408936]
[-80.55525970 -667.50701904]
[-65.84589386 -670.51342773]
[-50.90536499 -671.99145508]
[-35.89204788 -671.92547607]
[-20.96509361 -670.31610107]
[-6.28273773 -667.18041992]
[7.99938059 -662.55169678]
[21.72986221 -656.47894287]
[34.76315689 -649.02661133]
[46.96110153 -640.27368164]
[58.19439697 -630.31292725]
[68.34395599 -619.24987793]
[77.30220032 -607.20190430]
[84.97415161 -594.29669189]
[91.27848816 -580.67095947]
[96.14839172 -566.46929932]
[99.53222656 -551.84210205]
[101.39411926 -536.94458008]
[101.71434784 -521.93450928]
[100.48950195 -506.97109985]
[97.73257446 -492.21295166]
[93.47278595 -477.81646729]
[87.75529480 -463.93432617]
[80.64071655 -450.71362305]
[72.20445251 -438.29455566]
[62.53594971 -426.80871582]
[51.73768997 -416.37792969]
[39.92414474 -407.11270142]
[27.22053909 -399.11129761]
[13.76154327 -392.45852661]
[-0.31017211 -387.22491455]
[3.44612861 -372.70285034]
[7.20242929 -358.18078613]
[17.46278763 -351.77362061]
[20.71107292 -339.70581055]
[14.67926025 -328.30493164]
[25.20140457 -317.76293945]
[20.93915749 -302.52667236]
[24.47883034 -287.95028687]
[28.01850128 -273.37390137]
[31.55817413 -258.79754639]
[35.09784698 -244.22116089]
[38.63751984 -229.64477539]
[42.17719269 -215.06840515]
[45.71686554 -200.49203491]
[58.72041702 -200.84228516]
[71.54388428 -198.62411499]
[83.68472290 -193.92219543]
[94.66670990 -186.91857910]
[104.05860138 -177.88566589]
[111.49108887 -167.17558289]
[116.67130280 -155.20645142]
[119.39434814 -142.44610596]
[119.55142975 -129.39375305]
[117.13417053 -116.56051636]
[112.23506927 -104.44931793]
[105.04389954 -93.53527069]
[95.84041595 -84.24697876]
[84.98345947 -76.94971466]
[72.89692688 -71.93108368]
[75.56272125 -57.16986847]
[78.22851562 -42.40864944]
[80.89431000 -27.64743233]
[83.77957916 -12.92754173]
[86.88368988 1.74776089]
[89.98780060 16.42306328]
[100.19140625 27.27367210]
[95.47740936 42.37628174]
[98.58152008 57.05158234]
[113.34711456 59.15354156]
[126.50489807 66.17591095]
[136.46987915 77.27277374]
[142.04164124 91.10737610]
[142.54902649 106.01319885]
[137.93090820 120.19467163]
[128.74359131 131.94346619]
[116.09378052 139.84429932]
[119.19789124 154.51960754]
[124.03545380 162.26788330]
[122.23725891 169.43644714]
[125.12252808 184.15634155]
[128.44479370 198.78379822]
[132.20109558 213.30586243]
[135.95738220 227.82792664]
[141.13610840 235.35246277]
[139.65979004 242.59416199]
[143.19946289 257.17053223]
[146.73913574 271.74691772]
[150.27880859 286.32330322]
[153.81848145 300.89965820]
[168.37683105 314.84301758]
[162.13287354 333.14328003]
[166.10496521 347.60781860]
[170.07705688 362.07232666]
[174.04914856 376.53686523]
[178.02125549 391.00137329]
[193.13031006 391.45706177]
[207.43327332 396.34753418]
[219.65830994 405.23794556]
[228.71839905 417.33779907]
[233.80792236 431.57116699]
[234.47430420 446.67239380]
[230.65830994 461.29870605]
[222.69923401 474.14959717]
[211.30482483 484.08227539]
[197.48823547 490.21362305]
[182.47802734 491.99838257]
[167.60893250 489.27789307]
[154.20306396 482.29406738]
[143.45246887 471.66784668]
[136.31309509 458.34414673]
[133.41976929 443.50772095]
[135.02976990 428.47775269]
[140.99990845 414.59075928]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 192]
[2 191]
[3 190]
[4 189]
[5 188]
[9 186]
[10 185]
[11 184]
[12 183]
[13 182]
[14 180]
[15 179]
[16 178]
[21 177]
[22 176]
[23 174]
[24 173]
[32 165]
[33 164]
[35 162]
[36 161]
[37 160]
[40 159]
[41 158]
[42 157]
[43 156]
[54 141]
[55 140]
[56 139]
[57 138]
[58 137]
[59 136]
[60 135]
[61 134]
[63 132]
[65 129]
[66 128]
[67 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
