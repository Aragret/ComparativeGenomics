%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[68.05344391 745.62670898]
[64.69455719 729.93920898]
[74.97632599 717.62396240]
[74.97632599 702.62396240]
[74.97632599 687.62396240]
[74.97632599 672.62396240]
[66.64736938 663.85156250]
[66.52461243 651.35485840]
[75.21923828 641.82769775]
[75.44256592 626.82934570]
[75.66589355 611.83105469]
[75.88922119 596.83270264]
[76.11254883 581.83435059]
[64.73270416 574.85290527]
[58.23647690 563.06549072]
[58.41437531 549.49938965]
[65.32686615 537.69958496]
[77.26069641 530.80212402]
[77.70730591 515.80877686]
[78.15390778 500.81546021]
[78.48888397 485.81918335]
[78.71221161 470.82086182]
[78.93553925 455.82250977]
[79.15886688 440.82418823]
[79.38219452 425.82583618]
[66.68362427 420.23883057]
[57.04318237 410.20220947]
[51.94018555 397.20843506]
[52.17581940 383.20718384]
[57.74751282 370.31292725]
[67.84436798 360.48553467]
[80.96500397 355.23236084]
[81.41161346 340.23901367]
[81.85821533 325.24566650]
[82.30482483 310.25231934]
[82.75142670 295.25897217]
[83.19803619 280.26562500]
[75.13395691 271.24911499]
[75.38332367 258.75427246]
[84.35776520 249.49023438]
[85.02754974 234.50518799]
[85.69733429 219.52015686]
[86.36711884 204.53511047]
[83.52542114 197.71261597]
[87.16007233 189.33244324]
[88.05288696 174.35903931]
[78.00507355 163.42391968]
[78.69721222 148.22602844]
[90.23510742 137.76110840]
[91.12792206 122.78769684]
[92.02073669 107.81429291]
[92.80206299 92.83465576]
[85.68869019 78.70275879]
[93.98657227 66.33367157]
[94.65635681 51.34863281]
[85.79356384 35.20761490]
[95.80777740 20.79641914]
[96.25437927 5.80306911]
[96.70098877 -9.19028091]
[85.06905365 0.28063041]
[70.13367462 -1.11020041]
[60.45050812 -12.56604195]
[61.56651688 -27.52446938]
[72.84239197 -37.41661453]
[87.81880951 -36.57580948]
[97.91626740 -25.48459435]
[99.69873047 -40.37831116]
[101.48120117 -55.27202988]
[103.26366425 -70.16574860]
[105.04612732 -85.05946350]
[106.82859802 -99.95317841]
[107.94424438 -114.91163635]
[108.39085388 -129.90498352]
[108.83745575 -144.89833069]
[95.68198395 -150.35586548]
[85.20154572 -159.95594788]
[78.64127350 -172.53036499]
[76.77111816 -186.55923462]
[79.79551697 -200.35472107]
[87.33126068 -212.26403809]
[98.45592499 -220.86755371]
[111.82071686 -225.14793396]
[112.49050140 -240.13296509]
[105.37712860 -254.26486206]
[113.67501068 -266.63397217]
[114.34479523 -281.61898804]
[103.62780762 -288.05435181]
[96.70402527 -298.37567139]
[94.83644104 -310.59008789]
[98.31880188 -322.37033081]
[106.43140411 -331.49822998]
[117.58881378 -336.28231812]
[118.70446014 -351.24078369]
[119.82011414 -366.19921875]
[120.93576050 -381.15768433]
[122.05140686 -396.11614990]
[107.76013947 -400.93386841]
[95.11641693 -409.15499878]
[84.91504669 -420.26278687]
[77.79729462 -433.55895996]
[74.21057892 -448.20773315]
[74.38037109 -463.28823853]
[78.29598999 -477.85253906]
[85.71131134 -490.98507690]
[96.16018677 -501.86038208]
[108.98580170 -509.79473877]
[123.38192749 -514.28948975]
[138.44360352 -515.06201172]
[153.22402954 -512.06378174]
[166.79412842 -505.48321533]
[178.30084229 -495.73406982]
[187.02087402 -483.42910767]
[192.40605164 -469.34185791]
[194.11787415 -454.35784912]
[192.04872131 -439.41897583]
[186.32867432 -425.46435547]
[177.31729126 -413.37112427]
[165.58105469 -403.89953613]
[151.85768127 -397.64492798]
[137.00985718 -395.00048828]
[135.89421082 -380.04202271]
[134.77856445 -365.08358765]
[133.66291809 -350.12512207]
[132.54727173 -335.16668701]
[146.53890991 -324.39144897]
[151.30340576 -307.22314453]
[144.75112915 -290.48553467]
[129.32983398 -280.94921875]
[128.66004944 -265.96417236]
[135.82133484 -252.90411377]
[127.47554016 -239.46318054]
[126.80575562 -224.47814941]
[141.26254272 -217.98759460]
[152.14814758 -206.41812134]
[157.77416992 -191.52104187]
[157.25144958 -175.56703186]
[150.63046265 -161.00000000]
[138.89814758 -150.06275940]
[123.83081055 -144.45172119]
[123.38420105 -129.45837402]
[122.93759155 -114.46502686]
[134.56953430 -123.93594360]
[149.50491333 -122.54511261]
[159.18807983 -111.08926392]
[158.07206726 -96.13084412]
[146.79618835 -86.23869324]
[131.81976318 -87.07949829]
[121.72231293 -98.17071533]
[119.93984985 -83.27700043]
[118.15737915 -68.38327789]
[116.37491608 -53.48956299]
[114.59245300 -38.59584427]
[112.80998230 -23.70212936]
[111.69433594 -8.74367523]
[111.24772644 6.24967480]
[110.80112457 21.24302483]
[118.86520386 30.25952148]
[118.61582947 42.75438309]
[109.64139557 52.01841736]
[108.97161102 67.00345612]
[116.13288879 80.06352234]
[107.78710175 93.50444031]
[110.60183716 101.05757141]
[106.99414062 108.70710754]
[106.10132599 123.68051147]
[105.20851135 138.65391541]
[115.42109680 150.41575623]
[114.30235291 165.58821106]
[103.02629852 175.25186157]
[102.13347626 190.22526550]
[101.35215759 205.20489502]
[100.68237305 220.18994141]
[100.01258850 235.17497253]
[99.34280396 250.16001892]
[108.20559692 266.30102539]
[98.19138336 280.71221924]
[97.74478149 295.70556641]
[97.29817200 310.69894409]
[96.85157013 325.69229126]
[96.40496063 340.68563843]
[95.95835876 355.67898560]
[110.46075439 363.05557251]
[120.25936127 375.97189331]
[123.43289185 391.81137085]
[119.39577484 407.39294434]
[109.00537872 419.60986328]
[94.38053131 426.04916382]
[94.15720367 441.04751587]
[93.93387604 456.04583740]
[93.71054840 471.04418945]
[93.48722076 486.04251099]
[96.48851776 494.66979980]
[93.14726257 501.26205444]
[92.70065308 516.25543213]
[92.25405121 531.24877930]
[105.77548981 541.41076660]
[110.52836609 557.47039795]
[104.82951355 573.04229736]
[91.11089325 582.05767822]
[90.88756561 597.05603027]
[90.66423798 612.05438232]
[90.44091034 627.05267334]
[90.21758270 642.05102539]
[99.55702209 657.92102051]
[89.97632599 672.62396240]
[89.97632599 687.62396240]
[89.97632599 702.62396240]
[89.97632599 717.62396240]
[100.25809479 729.93920898]
[96.89921570 745.62670898]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 208]
[4 207]
[5 206]
[6 205]
[9 203]
[10 202]
[11 201]
[12 200]
[13 199]
[18 195]
[19 194]
[20 193]
[21 191]
[22 190]
[23 189]
[24 188]
[25 187]
[32 181]
[33 180]
[34 179]
[35 178]
[36 177]
[37 176]
[40 174]
[41 173]
[42 172]
[43 171]
[45 170]
[46 169]
[49 166]
[50 165]
[51 164]
[52 162]
[54 160]
[55 159]
[57 156]
[58 155]
[59 154]
[66 153]
[67 152]
[68 151]
[69 150]
[70 149]
[71 148]
[72 141]
[73 140]
[74 139]
[82 132]
[83 131]
[85 129]
[86 128]
[92 124]
[93 123]
[94 122]
[95 121]
[96 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
