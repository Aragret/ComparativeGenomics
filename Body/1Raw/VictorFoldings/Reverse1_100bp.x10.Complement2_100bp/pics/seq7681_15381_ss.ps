%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[99.07727051 600.73657227]
[90.99441528 588.08612061]
[84.19046783 574.70428467]
[78.73094177 560.72003174]
[74.66842651 546.26794434]
[72.04204559 531.48724365]
[70.87709045 516.52026367]
[71.18478394 501.51119995]
[72.96215820 486.60458374]
[76.19209290 471.94393921]
[80.84349060 457.67050171]
[86.87155151 443.92169189]
[94.21821594 430.82998657]
[102.81273651 418.52139282]
[112.57234192 407.11453247]
[123.40302277 396.71917725]
[135.20050049 387.43551636]
[147.85112000 379.35290527]
[161.23307800 372.54922485]
[155.77772522 358.57644653]
[141.50578308 348.36474609]
[144.43389893 330.18487549]
[138.77111816 316.29483032]
[133.10832214 302.40481567]
[127.44554138 288.51477051]
[121.78275299 274.62475586]
[116.11996460 260.73474121]
[110.45717621 246.84471130]
[104.79439545 232.95468140]
[103.63464355 247.90977478]
[98.69389343 262.07272339]
[90.29985046 274.50411987]
[79.00926208 284.37948608]
[65.57098389 291.04379272]
[50.87633896 294.05499268]
[35.89996719 293.21340942]
[21.63519669 288.57482910]
[9.02815628 280.44696045]
[-1.08497119 269.36883545]
[-8.03341961 256.07525635]
[-11.35632420 241.44795227]
[-10.83328724 226.45707703]
[-6.49900007 212.09692383]
[1.35905921 199.31996155]
[12.21969318 188.97361755]
[25.36255646 181.74415588]
[39.91592789 178.11106873]
[54.91453934 178.31532288]
[69.36357880 182.34336853]
[82.30470276 189.92805481]
[92.87957001 200.56629944]
[100.38875580 213.55725098]
[99.49594116 198.58384705]
[98.60311890 183.61042786]
[97.59886169 168.64408875]
[96.48321533 153.68563843]
[95.36756134 138.72718811]
[94.25191498 123.76873016]
[93.13626862 108.81027985]
[91.90929413 93.86054230]
[90.57106018 78.92035675]
[89.23282623 63.98017120]
[80.40447998 76.10701752]
[66.17018127 80.83825684]
[51.83895874 76.40925598]
[42.75600815 64.47191620]
[42.30904388 49.47858047]
[50.66477585 37.02138519]
[64.70671844 31.74655533]
[79.19757843 35.62147522]
[88.73305511 47.20198441]
[89.17965698 32.20863342]
[89.62626648 17.21528244]
[90.07286835 2.22193313]
[90.51947784 -12.77141666]
[90.96607971 -27.76476669]
[82.14308167 -15.63403606]
[68.73438263 -8.91042995]
[53.73553085 -9.09601879]
[40.49730682 -16.14934158]
[31.97715950 -28.49466896]
[30.07851410 -43.37402344]
[35.22553253 -57.46331406]
[46.26835632 -67.61496735]
[60.73999405 -71.56106567]
[75.40744019 -68.42005157]
[86.99395752 -58.89363098]
[92.91107941 -45.11000824]
[95.79635620 -59.82989883]
[98.68162537 -74.54978943]
[101.56690216 -89.26968384]
[104.45217133 -103.98957062]
[95.90253448 -117.01038361]
[99.03830719 -131.89733887]
[111.50434113 -139.96786499]
[114.38961792 -154.68775940]
[117.27488708 -169.40765381]
[103.38652802 -175.21267700]
[90.95120239 -183.69487000]
[80.47813416 -194.50688171]
[72.39617920 -207.20597839]
[67.03629303 -221.27212524]
[64.61796570 -236.12933350]
[65.24021149 -251.16920471]
[68.87757111 -265.77587891]
[75.38107300 -279.35119629]
[84.48442078 -291.33926392]
[95.81483459 -301.24917603]
[108.90834045 -308.67517090]
[123.22875977 -313.31307983]
[138.18968201 -314.97305298]
[153.17848206 -313.58709717]
[167.58135986 -309.21194458]
[180.80853271 -302.02676392]
[192.31835938 -292.32580566]
[201.63952637 -280.50628662]
[208.39031982 -267.05224609]
[212.29431152 -252.51457214]
[213.19161987 -237.48860168]
[211.04553223 -222.58964539]
[205.94389343 -208.42778015]
[198.09564209 -195.58294678]
[187.82214355 -184.58113098]
[175.54408264 -175.87283325]
[161.76425171 -169.81468201]
[147.04693604 -166.65472412]
[131.99478149 -166.52238464]
[129.10951233 -151.80249023]
[126.22423553 -137.08259583]
[134.72103882 -124.90310669]
[132.00463867 -109.93394470]
[119.17206573 -101.10430145]
[116.28678894 -86.38440704]
[113.40151978 -71.66452026]
[110.51624298 -56.94462585]
[107.63097382 -42.22473526]
[105.95943451 -27.31816101]
[105.51282501 -12.32481098]
[105.06622314 2.66853905]
[104.61961365 17.66188812]
[104.17301178 32.65523911]
[103.72640228 47.64859009]
[104.17301178 62.64193726]
[105.51124573 77.58212280]
[106.84947968 92.52230835]
[110.64808655 99.63167572]
[108.09471893 107.69462585]
[109.21037292 122.65308380]
[110.32601929 137.61154175]
[111.44166565 152.56999207]
[112.55731201 167.52844238]
[116.31632996 175.85356140]
[113.57653046 182.71762085]
[114.46934509 197.69102478]
[115.36215973 212.66442871]
[118.68441772 227.29188538]
[124.34720612 241.18191528]
[130.00999451 255.07194519]
[135.67277527 268.96197510]
[141.33557129 282.85198975]
[146.99835205 296.74203491]
[152.66113281 310.63204956]
[158.32392883 324.52206421]
[169.88807678 330.23461914]
[174.31866455 341.92025757]
[169.75051880 353.12106323]
[175.20587158 367.09387207]
[189.65771484 363.03048706]
[204.43824768 360.40322876]
[219.40513611 359.23736572]
[234.41421509 359.54415894]
[249.32096863 361.32064819]
[263.98178101 364.54971313]
[278.25552368 369.20025635]
[292.00466919 375.22747803]
[305.09683228 382.57336426]
[317.40594482 391.16714478]
[328.81338501 400.92605591]
[339.20938110 411.75613403]
[348.49377441 423.55303955]
[356.57711792 436.20318604]
[363.38159180 449.58471680]
[368.84167480 463.56878662]
[372.90478516 478.02072144]
[375.53173828 492.80130005]
[376.69729614 507.76821899]
[376.39022827 522.77728271]
[374.61343384 537.68402100]
[371.38409424 552.34478760]
[366.73324585 566.61840820]
[360.70574951 580.36743164]
[353.35961914 593.45947266]
[344.76556396 605.76837158]
[335.00643921 617.17565918]
[324.17617798 627.57141113]
[312.37905884 636.85552979]
[299.72875977 644.93865967]
[286.34707642 651.74285889]
[272.36288452 657.20269775]
[257.91088867 661.26550293]
[243.13024902 663.89215088]
[228.16333008 665.05743408]
[213.15425110 664.75000000]
[198.24757385 662.97296143]
[183.58688354 659.74328613]
[169.31333923 655.09216309]
[155.56442261 649.06439209]
[142.47254944 641.71801758]
[130.16380310 633.12371826]
[118.75672150 623.36437988]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 167]
[20 166]
[22 163]
[23 162]
[24 161]
[25 160]
[26 159]
[27 158]
[28 157]
[29 156]
[52 155]
[53 154]
[54 153]
[55 151]
[56 150]
[57 149]
[58 148]
[59 147]
[60 145]
[61 144]
[62 143]
[71 142]
[72 141]
[73 140]
[74 139]
[75 138]
[76 137]
[88 136]
[89 135]
[90 134]
[91 133]
[92 132]
[95 129]
[96 128]
[97 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
