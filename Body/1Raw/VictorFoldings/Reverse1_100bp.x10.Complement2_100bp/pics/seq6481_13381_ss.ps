%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[-76.06850433 324.09860229]
[-72.96001434 338.78436279]
[-71.24040222 353.69668579]
[-70.92477417 368.70452881]
[-72.01590729 383.67596436]
[-74.50420380 398.47943115]
[-78.36780548 412.98483276]
[-83.57274628 427.06472778]
[-90.07329559 440.59533691]
[-97.81232452 453.45776367]
[-106.72181702 465.53897095]
[-116.72347260 476.73275757]
[-127.72939301 486.94082642]
[-139.64285278 496.07336426]
[-152.35917664 504.05020142]
[-165.76658630 510.80120850]
[-179.74725342 516.26702881]
[-194.17832947 520.39965820]
[-208.93298340 523.16271973]
[-223.88154602 524.53204346]
[-238.89265442 524.49548340]
[-253.83436584 523.05340576]
[-268.57537842 520.21850586]
[-282.98617554 516.01568604]
[-296.94006348 510.48184204]
[-310.31445312 503.66564941]
[-322.99176025 495.62698364]
[-334.86062622 486.43652344]
[-345.81671143 476.17501831]
[-355.76376343 464.93264771]
[-364.61431885 452.80819702]
[-372.29061890 439.90823364]
[-378.72518921 426.34616089]
[-383.86154175 412.24108887]
[-387.65444946 397.71704102]
[-390.07064819 382.90161133]
[-391.08886719 367.92504883]
[-390.70016479 352.91894531]
[-388.90795898 338.01516724]
[-385.72799683 323.34469604]
[-381.18823242 309.03649902]
[-375.32858276 295.21624756]
[-368.20050049 282.00546265]
[-359.86663818 269.52023315]
[-350.40026855 257.87023926]
[-339.88455200 247.15791321]
[-328.41189575 237.47735596]
[-316.08316040 228.91368103]
[-303.00665283 221.54212952]
[-289.29733276 215.42747498]
[-275.07565308 210.62347412]
[-260.46661377 207.17233276]
[-245.59860229 205.10438538]
[-230.60226440 204.43780518]
[-215.60940552 205.17843628]
[-200.75177002 207.31979370]
[-186.15995789 210.84304810]
[-171.96218872 215.71722412]
[-158.28323364 221.89950562]
[-145.24330139 229.33555603]
[-132.95700073 237.96002197]
[-121.53231049 247.69711304]
[-111.06962585 258.46124268]
[-99.38204956 249.05909729]
[-87.69446564 239.65695190]
[-76.00688171 230.25480652]
[-64.31930542 220.85264587]
[-64.73706818 207.97418213]
[-57.55378723 197.04338074]
[-45.20472336 192.17396545]
[-32.11602402 195.35209656]
[-20.28975296 186.12500000]
[-8.46348286 176.89788818]
[3.36278725 167.67079163]
[15.18905735 158.44369507]
[27.01532745 149.21659851]
[30.35521317 142.62365723]
[39.08705902 139.94172668]
[51.04939651 130.89172363]
[63.01173019 121.84172821]
[74.62899780 112.35282898]
[85.88509369 102.43817902]
[90.53220367 89.25122070]
[104.20025635 86.30572510]
[115.45635223 76.39107513]
[126.71244812 66.47641754]
[137.96855164 56.56176758]
[143.21011353 41.63405609]
[157.87490845 39.02774429]
[169.13101196 29.11309433]
[180.38710022 19.19844246]
[185.86172485 1.61691928]
[203.18797302 -1.17025757]
[214.29519653 -11.25139618]
[225.40243530 -21.33253479]
[236.50967407 -31.41367340]
[247.61689758 -41.49481201]
[258.49624634 -51.82147980]
[269.14224243 -62.38853073]
[279.78823853 -72.95557404]
[270.29010010 -84.58057404]
[261.95828247 -97.06801605]
[254.87057495 -110.30130768]
[249.09317017 -124.15689087]
[244.68002319 -138.50540161]
[241.67231750 -153.21286011]
[240.09814453 -168.14193726]
[239.97219849 -183.15325928]
[241.29566956 -198.10664368]
[244.05618286 -212.86248779]
[248.22798157 -227.28302002]
[253.77207947 -241.23359680]
[260.63674927 -254.58393860]
[268.75790405 -267.20941162]
[278.05966187 -278.99215698]
[288.45520020 -289.82211304]
[299.84750366 -299.59817505]
[312.13012695 -308.22906494]
[325.18841553 -315.63421631]
[338.90048218 -321.74447632]
[353.13824463 -326.50280762]
[367.76876831 -329.86474609]
[382.65551758 -331.79891968]
[397.65939331 -332.28726196]
[412.64038086 -331.32522583]
[427.45858765 -328.92181396]
[441.97564697 -325.09942627]
[456.05599976 -319.89373779]
[469.56820679 -313.35342407]
[482.38610840 -305.53948975]
[494.38998413 -296.52493286]
[505.46777344 -286.39389038]
[515.51605225 -275.24099731]
[524.44104004 -263.17034912]
[532.15930176 -250.29463196]
[538.59887695 -236.73411560]
[543.69952393 -222.61538696]
[547.41375732 -208.07028198]
[549.70678711 -193.23460388]
[550.55731201 -178.24687195]
[549.95727539 -163.24702454]
[547.91229248 -148.37510681]
[544.44152832 -133.76998901]
[539.57739258 -119.56804657]
[533.36523438 -105.90186310]
[525.86303711 -92.89905548]
[517.14093018 -80.68101501]
[507.28033447 -69.36183167]
[496.37329102 -59.04718781]
[484.52163696 -49.83339310]
[471.83605957 -41.80647659]
[458.43496704 -35.04138184]
[444.44351196 -29.60127831]
[429.99234009 -25.53695679]
[415.21633911 -22.88636780]
[400.25350952 -21.67425919]
[385.24356079 -21.91194916]
[370.32659912 -23.59721565]
[355.64193726 -26.71432686]
[341.32669067 -31.23417473]
[327.51449585 -37.11456299]
[314.33435059 -44.30057907]
[301.90927124 -52.72513580]
[290.35531616 -62.30956650]
[279.70928955 -51.74251938]
[269.06329346 -41.17547226]
[268.68463135 -37.66991043]
[266.58920288 -34.17358780]
[262.79986572 -31.49139214]
[257.69802856 -30.38757896]
[246.59080505 -20.30644035]
[235.48356628 -10.22530174]
[224.37634277 -0.14416265]
[213.26910400 9.93697643]
[212.37098694 22.00014114]
[203.19987488 30.48980713]
[190.30175781 30.45453835]
[179.04565430 40.36919022]
[167.78956604 50.28384018]
[163.35310364 64.50238800]
[147.88319397 67.81786346]
[136.62710571 77.73251343]
[125.37100220 87.64717102]
[114.11490631 97.56182098]
[109.46779633 110.74877930]
[95.79974365 113.69427490]
[84.54364777 123.60892487]
[99.12009430 127.14831543]
[105.57933807 140.68634033]
[99.15988159 154.24327087]
[84.59388733 157.82545471]
[72.61888123 148.79222107]
[72.06172943 133.80406189]
[60.09939575 142.85406494]
[48.13705826 151.90406799]
[36.24242401 161.04287720]
[24.41615486 170.26997375]
[12.58988571 179.49707031]
[0.76361561 188.72416687]
[-11.06265450 197.95126343]
[-22.88892365 207.17835999]
[-24.71404076 224.57629395]
[-38.28992081 235.06488037]
[-54.91715240 232.54023743]
[-66.60473633 241.94238281]
[-78.29231262 251.34452820]
[-89.97989655 260.74667358]
[-101.66748047 270.14883423]
[-93.39451599 282.67449951]
[-86.33084106 295.91986084]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[63 208]
[64 207]
[65 206]
[66 205]
[67 204]
[71 201]
[72 200]
[73 199]
[74 198]
[75 197]
[76 196]
[78 195]
[79 194]
[80 193]
[81 187]
[82 186]
[84 184]
[85 183]
[86 182]
[87 181]
[89 179]
[90 178]
[91 177]
[93 174]
[94 173]
[95 172]
[96 171]
[97 170]
[98 166]
[99 165]
[100 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
