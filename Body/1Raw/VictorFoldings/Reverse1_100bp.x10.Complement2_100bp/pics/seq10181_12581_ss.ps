%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCAUUUUCCUCCCGUUAAAGAUCUAGUUUAUUAUUCUUCCAUUAUCGAUGAUUCUUCUUAAAAUACCUCUUUCCCUGCGCCCGCCCCCUAUAUCCCAGxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[132.36354065 642.69616699]
[122.87626648 631.06018066]
[114.63571930 618.51037598]
[107.72924805 605.17980957]
[102.23006439 591.20971680]
[98.19647217 576.74822998]
[95.67121887 561.94866943]
[94.68107605 546.96789551]
[95.23654938 531.96472168]
[97.33174133 517.09820557]
[100.94444275 502.52587891]
[106.03635406 488.40225220]
[112.55351257 474.87707520]
[120.42681122 462.09368896]
[129.57279968 450.18759155]
[139.89453125 439.28503418]
[151.28259277 429.50155640]
[163.61624146 420.94088745]
[176.76475525 413.69375610]
[190.58872986 407.83703613]
[186.18774414 393.49716187]
[181.78674316 379.15731812]
[177.38574219 364.81747437]
[172.98474121 350.47763062]
[168.47711182 336.17095947]
[163.86309814 321.89822388]
[159.24909973 307.62548828]
[147.97201538 297.89529419]
[151.08923340 282.38421631]
[136.21389771 284.14443970]
[121.27620697 282.96826172]
[106.85042572 278.89901733]
[93.49150085 272.09133911]
[81.71370697 262.80514526]
[71.97087097 251.39590454]
[64.63887024 238.30087280]
[60.00113678 224.02246094]
[58.23769760 209.10882568]
[59.41818619 194.13296509]
[63.49909973 179.67057800]
[70.32539368 166.27803040]
[79.63638306 154.47088623]
[91.07567596 144.70411682]
[104.20484161 137.35449219]
[99.59083557 123.08175659]
[94.97682190 108.80902100]
[89.69794464 102.71755981]
[90.40208435 94.28932953]
[86.00108337 79.94947815]
[81.60009003 65.60963440]
[77.19908905 51.26978683]
[72.79808807 36.92993927]
[61.35234070 26.00723648]
[65.01493835 11.56997204]
[60.61394501 -2.76987553]
[56.21294785 -17.10972214]
[51.81194687 -31.44956970]
[40.36619949 -42.37227249]
[44.02880096 -56.80953598]
[39.62779999 -71.14938354]
[35.22680283 -85.48922729]
[30.82580566 -99.82907867]
[19.38005638 -110.75177765]
[23.04265594 -125.18904114]
[18.64165878 -139.52888489]
[14.24066067 -153.86874390]
[9.83966255 -168.20858765]
[5.43866396 -182.54843140]
[1.03766608 -196.88827515]
[-3.36333203 -211.22813416]
[-7.76432991 -225.56797791]
[-12.16532803 -239.90782166]
[-16.56632614 -254.24766541]
[-31.39509583 -251.83491516]
[-46.41428757 -251.46389771]
[-61.34410095 -253.14151001]
[-75.90640259 -256.83651733]
[-89.82991028 -262.48007202]
[-102.85523987 -269.96704102]
[-114.73972321 -279.15792847]
[-125.26197052 -289.88156128]
[-134.22596741 -301.93811035]
[-141.46469116 -315.10302734]
[-146.84332275 -329.13101196]
[-150.26164246 -343.76071167]
[-151.65596008 -358.71966553]
[-151.00033569 -373.72912598]
[-148.30694580 -388.50949097]
[-143.62597656 -402.78543091]
[-137.04464722 -416.29098511]
[-128.68554688 -428.77453613]
[-118.70441437 -440.00354004]
[-107.28717804 -449.76879883]
[-94.64653778 -457.88842773]
[-81.01798248 -464.21109009]
[-66.65541077 -468.61907959]
[-51.82638168 -471.03021240]
[-36.80715179 -471.39959717]
[-21.87751770 -469.72036743]
[-7.31561327 -466.02380371]
[6.60728312 -460.37875366]
[19.63179779 -452.89035034]
[31.51528931 -443.69818115]
[42.03637695 -432.97341919]
[50.99906158 -420.91589355]
[58.23637009 -407.75021362]
[63.61347580 -393.72164917]
[67.03021240 -379.09155273]
[68.42292023 -364.13247681]
[67.76565552 -349.12307739]
[65.07067108 -334.34298706]
[60.38816452 -320.06756592]
[53.80537033 -306.56274414]
[45.44491959 -294.08007812]
[35.46256638 -282.85214233]
[24.04427338 -273.08810425]
[11.40275669 -264.96987915]
[-2.22647905 -258.64868164]
[2.17451906 -244.30882263]
[6.57551718 -229.96897888]
[10.97651482 -215.62911987]
[15.37751293 -201.28927612]
[19.77851105 -186.94943237]
[24.17951012 -172.60958862]
[28.58050728 -158.26972961]
[32.98150635 -143.92988586]
[37.38250351 -129.59004211]
[48.51346207 -119.69302368]
[45.16565323 -104.23007202]
[49.56665039 -89.89022827]
[53.96764755 -75.55038452]
[58.36864471 -61.21053314]
[69.49960327 -51.31351471]
[66.15179443 -35.85056686]
[70.55279541 -21.51072121]
[74.95378876 -7.17087364]
[79.35478973 7.16897345]
[90.48574829 17.06599236]
[87.13793945 32.52893829]
[91.53893280 46.86878586]
[95.93993378 61.20863342]
[100.34093475 75.54848480]
[104.74192810 89.88832855]
[109.24955750 104.19501495]
[113.86357117 118.46775055]
[118.47757721 132.74047852]
[133.42449951 131.01382446]
[148.41627502 132.23611450]
[162.87687683 136.35850525]
[176.25103760 143.22076416]
[188.02558899 152.55747986]
[197.74916077 164.00834656]
[205.04946899 177.13204956]
[209.64758301 191.42327881]
[211.36854553 206.33219910]
[210.14807129 221.28559875]
[206.03495789 235.70890808]
[199.18905640 249.04830933]
[189.87518311 260.79196167]
[178.45274353 270.48968506]
[165.36196899 277.77020264]
[176.96907043 288.52127075]
[173.52183533 303.01147461]
[178.13583374 317.28421021]
[182.74984741 331.55694580]
[188.36724854 338.75988770]
[187.32458496 346.07662964]
[191.72558594 360.41647339]
[196.12658691 374.75631714]
[200.52758789 389.09619141]
[204.92858887 403.43603516]
[219.65802002 400.52954102]
[234.60823059 399.15295410]
[249.62075806 399.32089233]
[264.53643799 401.03155518]
[279.19717407 404.26684570]
[293.44754028 408.99243164]
[307.13647461 415.15820312]
[320.11886597 422.69885254]
[332.25711060 431.53442383]
[343.42254639 441.57122803]
[353.49676514 452.70288086]
[362.37298584 464.81143188]
[369.95715332 477.76843262]
[376.16885376 491.43661499]
[380.94223022 505.67105103]
[384.22668457 520.32086182]
[385.98739624 535.23071289]
[386.20571899 550.24255371]
[384.87933350 565.19732666]
[382.02227783 579.93640137]
[377.66485596 594.30364990]
[371.85324097 608.14666748]
[364.64907837 621.31878662]
[356.12869263 633.68029785]
[346.38244629 645.10021973]
[335.51361084 655.45745850]
[323.63745117 664.64227295]
[310.87982178 672.55725098]
[297.37594604 679.11846924]
[283.26904297 684.25646973]
[268.70858765 687.91668701]
[253.84895325 690.06036377]
[238.84767151 690.66479492]
[223.86373901 689.72357178]
[209.05601501 687.24664307]
[194.58145142 683.26025391]
[180.59350586 677.80670166]
[167.24044800 670.94372559]
[154.66383362 662.74420166]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 171]
[21 170]
[22 169]
[23 168]
[24 167]
[25 165]
[26 164]
[27 163]
[29 161]
[44 146]
[45 145]
[46 144]
[48 143]
[49 142]
[50 141]
[51 140]
[52 139]
[54 137]
[55 136]
[56 135]
[57 134]
[59 132]
[60 131]
[61 130]
[62 129]
[64 127]
[65 126]
[66 125]
[67 124]
[68 123]
[69 122]
[70 121]
[71 120]
[72 119]
[73 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
