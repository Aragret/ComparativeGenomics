%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCGAACAAUAUUAAUACGGAGUAUCCCUAUCAUGUUCCUUCCCCAUCCGAUACACAAAACAGUCCCCCAACUCUUACUCACACUCCGCAUAAUAUGGUxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[56.76590729 608.83203125]
[49.07777405 621.74523926]
[39.55082321 633.36822510]
[28.39788818 643.44146729]
[15.86813259 651.73980713]
[2.24147224 658.07794189]
[-12.17766571 662.31427002]
[-27.06715393 664.35406494]
[-42.09435272 664.15179443]
[-56.92355347 661.71203613]
[-71.22346497 657.08923340]
[-84.67462158 650.38671875]
[-96.97651672 641.75415039]
[-107.85432434 631.38439941]
[-117.06502533 619.50921631]
[-124.40285492 606.39379883]
[-129.70388794 592.33123779]
[-132.84968567 577.63555908]
[-133.76997375 562.63519287]
[-132.44419861 547.66528320]
[-128.90197754 533.06011963]
[-123.22243500 519.14605713]
[-115.53246307 506.23397827]
[-106.00386047 494.61230469]
[-94.84948730 484.54067993]
[-82.31855011 476.24411011]
[-68.69098663 469.90792847]
[-54.27124786 465.67367554]
[-39.38146973 463.63598633]
[-24.35429764 463.84039307]
[-9.52544498 466.28225708]
[-4.91143560 452.00952148]
[-0.29742628 437.73678589]
[4.31658316 423.46405029]
[3.16177344 420.90972900]
[2.94918394 417.74407959]
[3.91673183 414.32366943]
[6.16897821 411.08453369]
[9.65343475 408.49368286]
[15.10879135 394.52087402]
[20.56414795 380.54809570]
[25.81086731 366.49560547]
[30.84778404 352.36657715]
[35.88470078 338.23754883]
[40.92161560 324.10852051]
[45.95853043 309.97949219]
[50.99544907 295.85046387]
[50.28054047 288.49447632]
[56.21396637 281.54953003]
[61.46068573 267.49707031]
[66.70740509 253.44458008]
[71.95411682 239.39212036]
[75.60221100 224.84249878]
[77.60622406 209.97695923]
[79.61023712 195.11143494]
[81.61425018 180.24591064]
[83.61826324 165.38038635]
[85.62227631 150.51484680]
[71.97734833 144.42071533]
[60.60110092 134.73033142]
[52.41454697 122.22821808]
[48.08045578 107.92653656]
[47.94971085 92.98313141]
[52.03289795 78.60779572]
[59.99944687 65.96435547]
[71.20439911 56.07640457]
[84.74060059 49.74445343]
[99.51219177 47.48113251]
[101.51621246 32.61560440]
[103.52022552 17.75007820]
[105.52423859 2.88454938]
[107.52825165 -11.98097897]
[109.53226471 -26.84650612]
[111.53627777 -41.71203613]
[111.42461395 -56.71162033]
[101.72577667 -69.21134949]
[107.48950195 -82.94557190]
[105.26438141 -97.77961731]
[103.03926086 -112.61365509]
[99.78623962 -116.69593048]
[98.54819489 -121.17035675]
[99.13707733 -125.20375061]
[101.06140900 -128.15829468]
[91.93039703 -141.07862854]
[98.30163574 -154.54177856]
[96.74111176 -169.46038818]
[95.18058777 -184.37899780]
[93.62006378 -199.29759216]
[84.48905182 -212.21794128]
[90.86028290 -225.68109131]
[75.94030762 -227.88227844]
[62.03680801 -233.72550964]
[50.02375793 -242.84349060]
[40.65631485 -254.66304016]
[34.52332306 -268.44119263]
[32.01030731 -283.31179810]
[33.27523422 -298.34014893]
[38.23859787 -312.58148193]
[46.58839035 -325.14062500]
[57.79973984 -335.22805786]
[71.16788483 -342.20971680]
[85.85250854 -345.64669800]
[100.93050385 -345.32293701]
[115.45406342 -341.25885010]
[128.51022339 -333.70983887]
[139.27827454 -323.15048218]
[147.08131409 -310.24453735]
[151.42883301 -295.80328369]
[152.04754639 -280.73449707]
[148.89857483 -265.98544312]
[142.17985535 -252.48324585]
[132.31372070 -241.07664490]
[119.92037964 -232.48269653]
[105.77888489 -227.24162292]
[114.79828644 -215.38835144]
[108.53866577 -200.85812378]
[110.09918976 -185.93951416]
[111.65971375 -171.02091980]
[113.22023773 -156.10231018]
[122.23963165 -144.24905396]
[115.98001862 -129.71881104]
[117.87330627 -114.83877563]
[120.09842682 -100.00473022]
[122.32353973 -85.17068481]
[131.86322021 -73.73198700]
[126.25865173 -58.93673706]
[131.11668396 -73.12826538]
[139.89329529 -85.29260254]
[151.82922363 -94.37741089]
[165.89187622 -99.59676361]
[180.86471558 -100.49913025]
[195.45242310 -97.00645447]
[208.39302063 -89.42089081]
[218.56701660 -78.39865112]
[225.09426880 -64.89328003]
[227.41009521 -50.07312775]
[225.31414795 -35.22027969]
[218.98776245 -21.61966324]
[208.97822571 -10.44786167]
[196.15145874 -2.67135096]
[181.61711121 1.03712440]
[166.63255310 0.35674375]
[152.49409485 -4.65363312]
[140.42485046 -13.56055832]
[131.46893311 -25.59349442]
[126.40180206 -39.70802307]
[124.39778900 -24.84249306]
[122.39377594 -9.97696495]
[120.38976288 4.88856316]
[118.38574982 19.75409126]
[116.38173676 34.61962128]
[114.37772369 49.48514938]
[128.02264404 55.57928085]
[139.39889526 65.26966858]
[147.58544922 77.77178192]
[151.91954041 92.07346344]
[152.05029297 107.01686859]
[147.96710205 121.39220428]
[140.00054932 134.03564453]
[128.79560852 143.92359924]
[115.25939941 150.25555420]
[100.48780823 152.51885986]
[98.48378754 167.38439941]
[96.47977448 182.24992371]
[94.47576141 197.11544800]
[92.47174835 211.98097229]
[90.46773529 226.84651184]
[99.56558990 214.92051697]
[112.31903076 207.02433777]
[127.05012512 204.19683838]
[141.82075500 206.81001282]
[154.68756104 214.52006531]
[163.95773315 226.31260681]
[168.41159058 240.63612366]
[167.46316528 255.60610962]
[161.23724365 269.25302124]
[150.55293274 279.78134155]
[136.81594849 285.80590820]
[121.83363342 286.53408813]
[107.57716370 281.87005615]
[95.92222595 272.42749023]
[88.40222168 259.44866943]
[86.00659180 244.63882446]
[80.75987244 258.69131470]
[75.51315308 272.74377441]
[70.26643372 286.79623413]
[65.12448120 300.88739014]
[60.08756256 315.01641846]
[55.05064392 329.14544678]
[50.01372910 343.27447510]
[44.97681427 357.40350342]
[39.93989563 371.53253174]
[40.75347900 378.09375000]
[38.47362900 383.29946899]
[34.53694534 386.00344849]
[29.08158875 399.97625732]
[23.62623215 413.94903564]
[18.58931732 428.07806396]
[13.97530746 442.35079956]
[9.36129761 456.62353516]
[4.74728870 470.89627075]
[18.19939804 477.59689331]
[30.50252151 486.22769165]
[41.38180542 496.59585571]
[50.59420395 508.46975708]
[57.93390274 521.58410645]
[63.23693466 535.64599609]
[66.38482666 550.34112549]
[67.30725861 565.34136963]
[65.98361206 580.31152344]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 201]
[32 200]
[33 199]
[34 198]
[39 197]
[40 196]
[41 195]
[42 192]
[43 191]
[44 190]
[45 189]
[46 188]
[47 187]
[49 186]
[50 185]
[51 184]
[52 183]
[53 167]
[54 166]
[55 165]
[56 164]
[57 163]
[58 162]
[68 152]
[69 151]
[70 150]
[71 149]
[72 148]
[73 147]
[74 146]
[75 126]
[77 124]
[78 123]
[79 122]
[83 121]
[85 119]
[86 118]
[87 117]
[88 116]
[90 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
