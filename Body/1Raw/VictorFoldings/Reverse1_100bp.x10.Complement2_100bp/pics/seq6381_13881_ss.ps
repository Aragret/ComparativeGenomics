%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[114.61799622 675.48785400]
[99.94145966 678.69451904]
[84.96846771 679.91638184]
[69.96621704 679.13153076]
[55.20244980 676.35400391]
[40.94063950 671.63336182]
[27.43530464 665.05389404]
[14.92746449 656.73303223]
[3.64033484 646.81915283]
[-6.22465086 635.48931885]
[-14.49144077 622.94567871]
[-21.01250458 609.41204834]
[-25.67146683 595.12994385]
[-28.38517952 580.35430908]
[-29.10521889 565.34881592]
[-27.81872940 550.38122559]
[-24.54867363 535.71868896]
[-19.35340691 521.62286377]
[-12.32564831 508.34527588]
[-3.59081364 496.12292480]
[6.69521284 485.17391968]
[18.34886551 475.69363403]
[31.16217041 467.85125732]
[44.90645981 461.78677368]
[59.33644867 457.60839844]
[74.19461823 455.39068604]
[89.21581268 455.17324829]
[90.99827576 440.27954102]
[92.78073883 425.38580322]
[94.56320953 410.49209595]
[95.45602417 395.51867676]
[95.45602417 380.51867676]
[95.45602417 365.51867676]
[95.45602417 350.51867676]
[95.45602417 335.51867676]
[95.23269653 320.52035522]
[94.78608704 305.52700806]
[94.33948517 290.53366089]
[83.35614777 280.53854370]
[82.68964386 265.33953857]
[93.24789429 253.88696289]
[92.80128479 238.89361572]
[92.35467529 223.90026855]
[91.90807343 208.90692139]
[91.46146393 193.91355896]
[89.15965271 191.24261475]
[88.03718567 187.32405090]
[88.66634369 182.72431946]
[91.34481049 178.24404907]
[91.56813812 163.24571228]
[84.02118683 150.40464783]
[91.96309662 136.72120667]
[92.18642426 121.72286987]
[92.40975189 106.72453308]
[89.37137604 99.25855255]
[92.74971008 91.50498962]
[82.44635773 82.83000183]
[79.06982422 69.99218750]
[83.63609314 57.73530197]
[94.26814270 50.45594788]
[94.93792725 35.47090912]
[95.60771942 20.48586845]
[96.27750397 5.50083017]
[82.57547760 2.00312614]
[69.83033752 -4.11199331]
[58.53635025 -12.60512543]
[49.13108444 -23.14469147]
[41.97842789 -35.31987000]
[37.35451126 -48.65663147]
[35.43706512 -62.63616562]
[36.29857635 -76.71508789]
[39.90355301 -90.34654999]
[46.10997772 -103.00148010]
[54.67491531 -114.18911743]
[65.26399994 -123.47605896]
[77.46450806 -130.50300598]
[90.80143738 -134.99873352]
[104.75598145 -136.79049683]
[105.87162781 -151.74894714]
[106.98727417 -166.70739746]
[108.10292816 -181.66586304]
[109.21857452 -196.62431335]
[106.73610687 -205.41493225]
[110.46382141 -211.79663086]
[111.80205536 -226.73681641]
[109.45073700 -235.56343079]
[113.27304840 -241.88891602]
[114.83357239 -256.80752563]
[116.39409637 -271.72613525]
[117.95462036 -286.64471436]
[119.51514435 -301.56332397]
[108.25244141 -314.94879150]
[110.11843109 -332.00262451]
[123.47293091 -342.22494507]
[124.81116486 -357.16513062]
[126.14939880 -372.10531616]
[127.37638092 -387.05505371]
[128.49201965 -402.01351929]
[114.41327667 -407.51626587]
[102.58301544 -416.92562866]
[94.05316925 -429.40493774]
[89.58221436 -443.84454346]
[89.56769562 -458.96047974]
[94.01091766 -473.40863037]
[102.51678467 -485.90429688]
[114.32895660 -495.33636475]
[128.39710999 -500.86614990]
[143.47030640 -502.00192261]
[158.20826721 -498.64273071]
[171.30047607 -491.08724976]
[181.58279419 -480.00729370]
[188.14093018 -466.38812256]
[190.39173889 -451.44070435]
[188.13507080 -436.49417114]
[181.57159424 -422.87753296]
[171.28492737 -411.80163574]
[158.18974304 -404.25128174]
[143.45048523 -400.89785767]
[142.33482361 -385.93942261]
[144.97213745 -379.03530884]
[141.08958435 -370.76708984]
[139.75135803 -355.82690430]
[138.41311646 -340.88671875]
[147.97732544 -332.25216675]
[150.86512756 -319.49511719]
[145.80372620 -307.22348022]
[134.43374634 -300.00280762]
[132.87322998 -285.08419800]
[131.31269836 -270.16558838]
[129.75218201 -255.24699402]
[128.19165039 -240.32838440]
[126.74224091 -225.39857483]
[125.40399933 -210.45838928]
[124.17702484 -195.50866699]
[123.06137848 -180.55020142]
[121.94573212 -165.59175110]
[120.83007812 -150.63330078]
[119.71443176 -135.67485046]
[134.95335388 -131.13645935]
[148.81541443 -123.33395386]
[160.61131287 -112.65187836]
[169.75376892 -99.61807251]
[175.78665161 -84.87754059]
[178.40789795 -69.16059113]
[177.48446655 -53.24658585]
[173.05923462 -37.92535400]
[165.34887695 -23.95795250]
[154.73339844 -12.03887939]
[141.73730469 -2.76153803]
[127.00370026 3.41130829]
[111.26254272 6.17061520]
[110.59275818 21.15565300]
[109.92296600 36.14069366]
[109.25318146 51.12573242]
[121.12225342 63.04059601]
[120.69311523 80.19083405]
[107.74306488 91.95159912]
[107.40808868 106.94786072]
[107.18476105 121.94619751]
[106.96143341 136.94453430]
[114.49240875 150.85836792]
[106.56647491 163.46903992]
[106.34314728 178.46737671]
[106.45481873 193.46696472]
[106.90142059 208.46031189]
[107.34803009 223.45365906]
[107.79463196 238.44700623]
[108.24124146 253.44035339]
[119.46244049 264.24417114]
[119.70177460 279.45593262]
[109.33283234 290.08703613]
[109.77944183 305.08038330]
[110.22604370 320.07373047]
[113.37016296 325.88977051]
[113.13970947 331.56814575]
[110.45602417 335.51867676]
[110.45602417 350.51867676]
[110.45602417 365.51867676]
[110.45602417 380.51867676]
[110.45602417 395.51867676]
[120.33106232 384.22781372]
[134.93070984 380.78536987]
[148.80964661 386.47528076]
[156.79138184 399.17535400]
[155.89891052 414.14877319]
[146.46513367 425.81085205]
[132.00857544 429.81188965]
[117.92121124 424.65960693]
[109.45692444 412.27456665]
[107.67446136 427.16827393]
[105.89199066 442.06198120]
[104.10952759 456.95571899]
[118.65518188 460.71170044]
[132.57040405 466.37295532]
[145.60685730 473.83850098]
[157.53190613 482.97506714]
[168.13270569 493.61959839]
[177.22010803 505.58215332]
[184.63191223 518.64923096]
[190.23583984 532.58764648]
[193.93191528 547.14862061]
[195.65414429 562.07238770]
[195.37181091 577.09246826]
[193.08993530 591.94091797]
[188.84927368 606.35272217]
[182.72546387 620.07067871]
[174.82783508 632.85003662]
[165.29728699 644.46258545]
[154.30393982 654.70123291]
[142.04396057 663.38317871]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 192]
[28 191]
[29 190]
[30 189]
[31 180]
[32 179]
[33 178]
[34 177]
[35 176]
[36 173]
[37 172]
[38 171]
[41 168]
[42 167]
[43 166]
[44 165]
[45 164]
[49 163]
[50 162]
[52 160]
[53 159]
[54 158]
[56 157]
[60 154]
[61 153]
[62 152]
[63 151]
[78 138]
[79 137]
[80 136]
[81 135]
[82 134]
[84 133]
[85 132]
[87 131]
[88 130]
[89 129]
[90 128]
[91 127]
[94 123]
[95 122]
[96 121]
[97 119]
[98 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
