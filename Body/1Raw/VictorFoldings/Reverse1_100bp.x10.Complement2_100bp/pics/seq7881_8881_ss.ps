%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxGAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGU\
) } def
/len { sequence length } bind def

/coor [
[134.69042969 515.16168213]
[139.81355286 500.87472534]
[149.75473022 489.40573120]
[163.16950989 482.30587769]
[161.38703918 467.41213989]
[159.60456848 452.51843262]
[157.60055542 437.65289307]
[155.37544250 422.81884766]
[153.15032959 407.98480225]
[150.92520142 393.15075684]
[148.70008850 378.31671143]
[146.36460876 363.49966431]
[136.65568542 352.20425415]
[142.03933716 337.32720947]
[132.39151001 330.03021240]
[130.23281860 317.72070312]
[137.25772095 306.90344238]
[135.03260803 292.06939697]
[132.80747986 277.23535156]
[130.58236694 262.40130615]
[128.35725403 247.56726074]
[125.47197723 232.84736633]
[121.93230438 218.27099609]
[118.39263153 203.69461060]
[114.85295868 189.11824036]
[111.31328583 174.54187012]
[98.53359222 162.51496887]
[103.86430359 144.88926697]
[100.10800171 130.36721802]
[96.35169983 115.84515381]
[84.28909302 104.18884277]
[88.94746399 88.07437897]
[84.97536469 73.60985565]
[81.00326538 59.14533234]
[77.03117371 44.68080521]
[73.05907440 30.21628380]
[69.08698273 15.75175953]
[65.11488342 1.28723538]
[53.99942017 -9.97140598]
[58.09024811 -24.29322052]
[54.11814880 -38.75774384]
[49.93048477 -24.35415459]
[40.30875397 -12.84666443]
[26.87438965 -6.17449141]
[11.89132118 -5.46201277]
[-2.11554503 -10.82929420]
[-12.78580379 -21.37185478]
[-18.32133102 -35.31308746]
[-17.78929138 -50.30364609]
[-11.27934265 -63.81736374]
[0.11147244 -73.57694244]
[14.46360302 -77.93771362]
[29.35846329 -76.16481781]
[42.28600693 -68.55702209]
[51.06838989 -56.39484787]
[49.95273972 -71.35330200]
[48.83708954 -86.31175232]
[37.68714523 -93.86776733]
[32.99334717 -106.28463745]
[36.25970078 -118.95006561]
[46.07675171 -127.29602051]
[45.18393707 -142.26942444]
[36.63895035 -155.58459473]
[43.60499573 -168.74984741]
[42.04447174 -183.66844177]
[39.81935501 -198.50248718]
[37.59423828 -213.33653259]
[27.89540672 -225.83625793]
[33.65912628 -239.57048035]
[31.43400764 -254.40452576]
[29.20889091 -269.23858643]
[25.95586777 -273.32083130]
[24.71781921 -277.79525757]
[25.30670357 -281.82867432]
[27.23103714 -284.78320312]
[25.67051506 -299.70181274]
[24.10999107 -314.62042236]
[9.09336567 -314.90426636]
[-5.77455330 -317.03137207]
[-20.26837158 -320.96951294]
[-34.16836548 -326.65893555]
[-47.26381683 -334.01345825]
[-59.35620117 -342.92153931]
[-70.26219940 -353.24813843]
[-79.81648254 -364.83673096]
[-87.87421417 -377.51159668]
[-94.31322479 -391.08062744]
[-99.03591919 -405.33810425]
[-101.97068787 -420.06790161]
[-103.07305145 -435.04669189]
[-102.32629395 -450.04742432]
[-99.74172974 -464.84271240]
[-95.35855103 -479.20819092]
[-89.24320221 -492.92614746]
[-81.48838806 -505.78857422]
[-72.21167755 -517.60052490]
[-61.55368805 -528.18292236]
[-49.67600250 -537.37530518]
[-36.75868225 -545.03839111]
[-22.99755096 -551.05590820]
[-8.60122204 -555.33673096]
[6.21205950 -557.81591797]
[21.21772766 -558.45587158]
[36.18830109 -557.24688721]
[50.89682770 -554.20733643]
[65.12033081 -549.38330078]
[78.64318848 -542.84783936]
[91.26039124 -534.70013428]
[102.78067017 -525.06359863]
[113.02938080 -514.08435059]
[121.85115814 -501.92886353]
[129.11225891 -488.78140259]
[134.70262146 -474.84124756]
[138.53747559 -460.31976318]
[140.55870056 -445.43707275]
[140.73564148 -430.41882324]
[139.06562805 -415.49264526]
[135.57398987 -400.88482666]
[130.31362915 -386.81683350]
[123.36431885 -373.50195312]
[114.83139038 -361.14196777]
[104.84420776 -349.92431641]
[93.55416870 -340.01904297]
[81.13243866 -331.57626343]
[67.76731873 -324.72402954]
[53.66142273 -319.56619263]
[39.02859497 -316.18093872]
[40.58911896 -301.26232910]
[42.14964294 -286.34371948]
[44.04293442 -271.46368408]
[46.26805115 -256.62963867]
[48.49316788 -241.79560852]
[58.03284454 -230.35690308]
[52.42827988 -215.56164551]
[54.65339661 -200.72760010]
[56.87851334 -185.89356995]
[66.64211273 -197.28092957]
[81.58691406 -198.56655884]
[93.15186310 -189.01396179]
[94.71202850 -174.09532166]
[85.37368011 -162.35670471]
[70.48624420 -160.52252197]
[58.57839966 -169.64265442]
[67.05952454 -157.39848328]
[60.15734100 -143.16224670]
[61.05015564 -128.18884277]
[74.09438324 -117.57342529]
[75.45178986 -100.47160339]
[63.79554367 -87.42739868]
[64.91119385 -72.46894836]
[66.02684021 -57.51049423]
[68.58267212 -42.72984314]
[72.55477142 -28.26531792]
[83.38612366 -18.04127502]
[79.57940674 -2.68486071]
[83.55150604 11.77966309]
[87.52359772 26.24418640]
[91.49569702 40.70870972]
[95.46778870 55.17323303]
[99.43988800 69.63775635]
[103.41198730 84.10227966]
[113.16858673 90.46231842]
[116.16896057 101.71571350]
[110.87375641 112.08885193]
[114.63005829 126.61091614]
[118.38636017 141.13298035]
[129.08363342 148.33929443]
[131.91329956 160.51208496]
[125.88966370 171.00219727]
[129.42933655 185.57856750]
[132.96900940 200.15493774]
[136.50868225 214.73132324]
[140.04835510 229.30769348]
[148.75708008 217.09466553]
[163.52760315 214.48086548]
[175.89866638 222.96359253]
[178.78358459 237.68354797]
[170.52973938 250.20848083]
[155.86531067 253.36354065]
[143.19129944 245.34213257]
[145.41641235 260.17617798]
[147.64152527 275.01022339]
[149.86665344 289.84426880]
[152.09176636 304.67831421]
[163.89379883 318.81314087]
[156.83860779 334.88146973]
[166.72247314 347.23541260]
[161.16387939 361.05392456]
[165.65063477 369.01049805]
[163.53413391 376.09161377]
[165.75924683 390.92565918]
[167.98435974 405.75970459]
[170.20948792 420.59375000]
[172.43460083 435.42779541]
[176.24757385 440.82897949]
[176.69351196 446.49450684]
[174.49829102 450.73596191]
[176.28076172 465.62966919]
[178.06321716 480.52340698]
[192.77455139 484.25717163]
[205.14140320 493.05633545]
[213.49127197 505.73089600]
[216.69487000 520.56671143]
[214.31896973 535.55737305]
[206.68487549 548.67547607]
[194.82504272 558.14697266]
[180.34341431 562.69085693]
[165.19851685 561.69262695]
[151.43856812 555.28729248]
[140.92448425 544.34112549]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 199]
[5 198]
[6 197]
[7 194]
[8 193]
[9 192]
[10 191]
[11 190]
[12 188]
[14 186]
[17 184]
[18 183]
[19 182]
[20 181]
[21 180]
[22 173]
[23 172]
[24 171]
[25 170]
[26 169]
[28 166]
[29 165]
[30 164]
[32 161]
[33 160]
[34 159]
[35 158]
[36 157]
[37 156]
[38 155]
[40 153]
[41 152]
[55 151]
[56 150]
[57 149]
[61 146]
[62 145]
[64 143]
[65 136]
[66 135]
[67 134]
[69 132]
[70 131]
[71 130]
[75 129]
[76 128]
[77 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
