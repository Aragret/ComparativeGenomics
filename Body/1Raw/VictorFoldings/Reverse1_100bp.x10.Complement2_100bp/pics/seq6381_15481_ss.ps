%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[148.27330017 734.31146240]
[134.10897827 728.91259766]
[122.64742279 718.99249268]
[115.27266693 705.74902344]
[112.87525177 690.78149414]
[115.74467468 675.89715576]
[123.53444672 662.89349365]
[135.30390930 653.34075928]
[149.63183594 648.39239502]
[149.85516357 633.39404297]
[142.30821228 620.55297852]
[150.25012207 606.86956787]
[150.47344971 591.87121582]
[150.69677734 576.87286377]
[150.92010498 561.87451172]
[151.14343262 546.87622070]
[150.36210632 531.89654541]
[148.57965088 517.00286865]
[146.79718018 502.10913086]
[133.05082703 496.37298584]
[123.96085358 484.44702148]
[122.04813385 469.47344971]
[127.92569733 455.46093750]
[140.10739136 446.21139526]
[138.32493591 431.31768799]
[136.32090759 416.45214844]
[134.09579468 401.61813354]
[131.87068176 386.78408813]
[129.64556885 371.95004272]
[127.42044830 357.11599731]
[125.19532776 342.28195190]
[122.97021484 327.44790649]
[120.74509430 312.61386108]
[118.51998138 297.77981567]
[116.29486084 282.94577026]
[114.06974030 268.11172485]
[111.84462738 253.27767944]
[109.61950684 238.44363403]
[107.39439392 223.60958862]
[105.16927338 208.77555847]
[94.47743988 205.59194946]
[85.70578766 198.61654663]
[80.14538574 188.82711792]
[78.63283539 177.61904907]
[81.42460632 166.60641479]
[88.15448761 157.38963318]
[97.88114166 151.32279968]
[96.32061768 136.40419006]
[94.76009369 121.48558044]
[93.19956970 106.56697845]
[89.97835541 102.42720795]
[89.30587769 96.77732849]
[91.82148743 91.18192291]
[90.70584106 76.22346497]
[89.59019470 61.26501465]
[88.47454071 46.30656052]
[77.32460022 38.75054932]
[72.63079834 26.33367729]
[75.89715576 13.66825104]
[85.71420288 5.32229042]
[84.82138824 -9.65111542]
[83.92857361 -24.62452126]
[83.03575897 -39.59792709]
[74.43564606 -27.30817223]
[60.59715652 -21.52057838]
[45.80829620 -24.02849579]
[34.65155411 -34.05481720]
[30.58397102 -48.49277878]
[34.86592865 -62.86862183]
[46.17061234 -72.72783661]
[60.99515152 -75.01543427]
[74.74599457 -69.02257538]
[83.16237640 -56.60597610]
[84.27802277 -71.56443024]
[85.39366913 -86.52288055]
[86.50932312 -101.48133850]
[87.62496948 -116.43978882]
[88.74061584 -131.39823914]
[89.85626984 -146.35668945]
[90.97191620 -161.31515503]
[91.97617340 -176.28149414]
[92.86898804 -191.25489807]
[85.96681213 -205.49113464]
[94.44792938 -217.73530579]
[80.39307404 -223.29574585]
[68.76078033 -232.91511536]
[60.68222046 -245.64166260]
[56.93793106 -260.22232056]
[57.88241196 -275.22601318]
[63.41060638 -289.18414307]
[72.96942139 -300.73443604]
[85.61304474 -308.75372314]
[100.09649658 -312.46728516]
[100.98931122 -327.44070435]
[101.43592072 -342.43405151]
[101.43592072 -357.43405151]
[101.43592072 -372.43405151]
[101.43592072 -387.43405151]
[87.37873077 -393.21884155]
[76.60885620 -403.94631958]
[70.76862335 -417.98056030]
[70.74862671 -433.18148804]
[76.55191803 -447.23104858]
[87.29353333 -457.98678589]
[101.33544922 -463.80856323]
[116.53638458 -463.80856323]
[130.57830811 -457.98678589]
[141.31991577 -447.23104858]
[147.12319946 -433.18148804]
[147.10321045 -417.98056030]
[141.26298523 -403.94631958]
[130.49310303 -393.21884155]
[116.43592072 -387.43405151]
[116.43592072 -372.43405151]
[116.43592072 -357.43405151]
[116.43592072 -342.43405151]
[118.32044983 -340.35879517]
[119.49649048 -337.41201782]
[119.62797546 -333.85980225]
[118.48128510 -330.08496094]
[115.96271515 -326.54788208]
[115.06990051 -311.57449341]
[129.00944519 -306.16613770]
[140.61053467 -296.70123291]
[148.72909546 -284.09689331]
[152.55944824 -269.58071899]
[151.71434021 -254.57110596]
[146.26394653 -240.53871155]
[136.73031616 -228.86230469]
[124.03736115 -220.69337463]
[109.42134094 -216.84249878]
[116.38738251 -203.67726135]
[107.84239960 -190.36209106]
[106.94958496 -175.38867188]
[109.68938446 -168.52462769]
[105.93036652 -160.19949341]
[104.81472015 -145.24104309]
[103.69907379 -130.28259277]
[102.58341980 -115.32414246]
[101.46777344 -100.36568451]
[100.35212708 -85.40723419]
[99.23647308 -70.44878387]
[98.12082672 -55.49032593]
[98.00916290 -40.49074173]
[98.90197754 -25.51733780]
[99.79479218 -10.54393101]
[100.68760681 4.42947435]
[113.73183441 15.04488754]
[115.08924103 32.14670944]
[103.43299866 45.19091034]
[104.54864502 60.14936447]
[105.66429138 75.10781860]
[106.77994537 90.06626892]
[108.11817932 105.00645447]
[109.67869568 119.92506409]
[111.23921967 134.84365845]
[112.79974365 149.76226807]
[129.76255798 158.62786865]
[137.89048767 175.79020691]
[134.06275940 194.23681641]
[120.00331879 206.55043030]
[122.22843933 221.38447571]
[124.45355225 236.21852112]
[126.67867279 251.05256653]
[128.90379333 265.88659668]
[131.12890625 280.72064209]
[133.35401917 295.55468750]
[135.57913208 310.38873291]
[137.80426025 325.22277832]
[140.02937317 340.05682373]
[142.25448608 354.89086914]
[144.47961426 369.72491455]
[146.70472717 384.55895996]
[148.92984009 399.39300537]
[151.15495300 414.22705078]
[154.96792603 419.62823486]
[155.41386414 425.29376221]
[153.21864319 429.53521729]
[155.00111389 444.42895508]
[169.02145386 450.54263306]
[178.03968811 462.77243042]
[179.71441650 477.77450562]
[173.69543457 491.50866699]
[161.69090271 500.32666016]
[163.47335815 515.22039795]
[165.25582886 530.11407471]
[173.10919189 517.33422852]
[186.57865906 510.73321533]
[201.49057007 512.35644531]
[213.22431946 521.70092773]
[218.14405823 535.87121582]
[214.72535706 550.47644043]
[204.02754211 560.99102783]
[189.36544800 564.15692139]
[175.28227234 558.99316406]
[166.14176941 547.09954834]
[165.91844177 562.09783936]
[165.69511414 577.09619141]
[165.47178650 592.09454346]
[165.24845886 607.09289551]
[172.77943420 621.00671387]
[164.85350037 633.61737061]
[164.63017273 648.61572266]
[178.80442810 653.98846436]
[190.28425598 663.88745117]
[197.68339539 677.11724854]
[200.10839844 692.08038330]
[197.26640320 706.96997070]
[189.50061035 719.98797607]
[177.74876404 729.56237793]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 203]
[10 202]
[12 200]
[13 199]
[14 198]
[15 197]
[16 196]
[17 186]
[18 185]
[19 184]
[24 179]
[25 178]
[26 175]
[27 174]
[28 173]
[29 172]
[30 171]
[31 170]
[32 169]
[33 168]
[34 167]
[35 166]
[36 165]
[37 164]
[38 163]
[39 162]
[40 161]
[47 157]
[48 156]
[49 155]
[50 154]
[53 153]
[54 152]
[55 151]
[56 150]
[60 147]
[61 146]
[62 145]
[63 144]
[73 143]
[74 142]
[75 141]
[76 140]
[77 139]
[78 138]
[79 137]
[80 136]
[81 134]
[82 133]
[84 131]
[93 122]
[94 121]
[95 116]
[96 115]
[97 114]
[98 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
