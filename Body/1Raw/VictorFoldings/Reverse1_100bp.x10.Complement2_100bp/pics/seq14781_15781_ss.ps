%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACCUCCUAGUCCGUCCGCGGUUCCUCACUCGGCUUCAAAGUAGUACGCCUCUACAACCUACCCCACCCCUCCAGCUACUUACUCACCAAUUAAUUAxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[-23.89463615 586.86560059]
[-22.06823158 601.79327393]
[-22.86192513 616.81127930]
[-26.25159836 631.46331787]
[-32.13424301 645.30401611]
[-40.33109283 657.91284180]
[-50.59305573 668.90661621]
[-62.60828018 677.95129395]
[-76.01163483 684.77191162]
[-90.39581299 689.16131592]
[-105.32369232 690.98602295]
[-120.34162903 690.19061279]
[-134.99325562 686.79925537]
[-148.83329773 680.91503906]
[-161.44120789 672.71679688]
[-172.43383789 662.45355225]
[-181.47711182 650.43731689]
[-188.29623413 637.03320312]
[-192.68397522 622.64849854]
[-194.50698853 607.72045898]
[-193.70988464 592.70257568]
[-190.31689453 578.05133057]
[-184.43110657 564.21197510]
[-176.23139954 551.60498047]
[-165.96694946 540.61352539]
[-153.94967651 531.57159424]
[-140.54476929 524.75402832]
[-126.15959167 520.36791992]
[-111.23130035 518.54656982]
[-96.21354675 519.34539795]
[-81.56269073 522.74005127]
[-75.69373322 508.93585205]
[-69.82477570 495.13168335]
[-63.95581055 481.32751465]
[-58.08684921 467.52331543]
[-68.11679077 454.85397339]
[-70.40205383 438.76257324]
[-64.22515106 423.62774658]
[-51.18431091 413.61614990]
[-34.78118896 411.53540039]
[-29.11840248 397.64538574]
[-23.45561600 383.75537109]
[-17.79282951 369.86532593]
[-18.78651619 365.19396973]
[-16.85622787 359.84878540]
[-11.74910927 355.65011597]
[-5.67527533 341.93484497]
[0.39855871 328.21957397]
[-9.16239929 313.37167358]
[-7.88522243 295.60037231]
[3.90699029 282.03485107]
[21.63509178 278.23062134]
[27.29787827 264.34060669]
[32.96066666 250.45057678]
[38.62345123 236.56054688]
[44.28623962 222.67051697]
[49.94902420 208.78048706]
[55.50825119 194.84869385]
[60.96360779 180.87590027]
[66.41896820 166.90309143]
[71.87432098 152.93029785]
[77.32968140 138.95750427]
[82.68086243 124.94448090]
[87.92758179 110.89200592]
[84.72544861 94.42620850]
[97.77988434 83.89254761]
[102.81680298 69.76351166]
[92.98626709 58.04566574]
[90.35823059 43.07936478]
[95.53984833 28.90130997]
[107.04547119 19.28483582]
[121.72088623 16.73575211]
[126.75780487 2.60672307]
[131.79472351 -11.52230644]
[128.05775452 -29.55329704]
[141.85948181 -40.39208603]
[146.68547058 -54.59453964]
[151.51147461 -68.79699707]
[156.33746338 -82.99945068]
[156.13545227 -92.13164520]
[161.34248352 -97.37650299]
[166.37940979 -111.50553894]
[171.41632080 -125.63456726]
[176.45323181 -139.76359558]
[178.67835999 -154.59764099]
[178.00857544 -169.58267212]
[177.33879089 -184.56771851]
[173.82929993 -193.00106812]
[176.77226257 -199.78050232]
[176.32565308 -214.77384949]
[175.87904358 -229.76721191]
[175.43244934 -244.76055908]
[167.28768921 -258.32424927]
[174.64262390 -271.27624512]
[174.19601440 -286.26959229]
[159.67056274 -290.49642944]
[147.16333008 -299.00668335]
[137.89965820 -310.96658325]
[132.78710938 -325.20446777]
[132.32656860 -340.32540894]
[136.56314087 -354.84805298]
[145.08175659 -367.34957886]
[157.04788208 -376.60522461]
[171.28918457 -381.70822144]
[186.41043091 -382.15863037]
[200.93022156 -377.91235352]
[213.42604065 -369.38534546]
[222.67366028 -357.41302490]
[227.76712036 -343.16830444]
[228.20741272 -328.04675293]
[223.95138550 -313.52981567]
[215.41600037 -301.03970337]
[203.43748474 -291.80010986]
[189.18936157 -286.71618652]
[189.63597107 -271.72283936]
[197.74877930 -259.23159790]
[190.42579651 -245.20715332]
[190.87240601 -230.21380615]
[191.31900024 -215.22045898]
[191.76560974 -200.22711182]
[192.32382202 -185.23750305]
[192.99360657 -170.25245667]
[193.66339111 -155.26742554]
[199.68510437 -169.00564575]
[208.57598877 -181.08673096]
[219.90222168 -190.92117310]
[233.11117554 -198.02917480]
[247.55834961 -202.06388855]
[262.53884888 -202.82846069]
[277.32174683 -200.28558350]
[291.18572998 -194.55932617]
[303.45434570 -185.92910767]
[313.52902222 -174.81599426]
[320.91812134 -161.76222229]
[325.26119995 -147.40472412]
[326.34625244 -132.44401550]
[324.12042236 -117.61008453]
[318.69226074 -103.62670135]
[310.32666016 -91.17613983]
[299.43176270 -80.86589813]
[286.53915405 -73.19902802]
[272.27789307 -68.54962921]
[257.34387207 -67.14453888]
[242.46566772 -69.05233002]
[228.36929321 -74.17990112]
[215.74250793 -82.27707672]
[205.20140076 -92.94877625]
[197.26031494 -105.67430115]
[192.30668640 -119.83274841]
[190.58226013 -134.72668457]
[185.54534912 -120.59764862]
[180.50843811 -106.46862030]
[175.47151184 -92.33959198]
[170.53991699 -78.17345428]
[165.71392822 -63.97100067]
[160.88792419 -49.76854324]
[156.06193542 -35.56608963]
[161.12567139 -24.58041000]
[157.22128296 -12.70861244]
[145.92375183 -6.48539019]
[140.88682556 7.64363909]
[135.84991455 21.77266884]
[145.60325623 33.03046036]
[148.43086243 47.75664902]
[143.47500610 62.01518250]
[131.97204590 71.94387054]
[116.94583130 74.80043030]
[111.90891266 88.92945862]
[116.25755310 99.73365021]
[112.26515961 110.67449188]
[101.98005676 116.13872528]
[96.73333740 130.19119263]
[96.66336823 139.32536316]
[91.30247498 144.41285706]
[85.84712219 158.38565063]
[80.39176178 172.35845947]
[74.93640900 186.33125305]
[69.48104858 200.30404663]
[69.27509308 209.43615723]
[63.83905029 214.44328308]
[58.17626572 228.33329773]
[52.51347733 242.22332764]
[46.85069275 256.11337280]
[41.18790436 270.00338745]
[35.52511978 283.89340210]
[43.45887375 293.55380249]
[46.51478195 305.60079956]
[44.17239761 317.73309326]
[36.93649673 327.65997314]
[26.22985268 333.53369141]
[14.11382580 334.29339600]
[8.03999138 348.00866699]
[1.96615756 361.72393799]
[-3.90280318 375.52810669]
[-9.56558990 389.41815186]
[-15.22837639 403.30816650]
[-20.89116287 417.19821167]
[-11.75215340 427.78787231]
[-8.08486748 441.21795654]
[-10.54998684 454.85253906]
[-18.61034012 466.04092407]
[-30.64667130 472.63299561]
[-44.28267288 473.39230347]
[-50.15163422 487.19647217]
[-56.02059555 501.00064087]
[-61.88955688 514.80480957]
[-67.75851440 528.60900879]
[-55.14875031 536.80444336]
[-44.15380478 547.06512451]
[-35.10779953 559.07934570]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 207]
[32 206]
[33 205]
[34 204]
[35 203]
[40 197]
[41 196]
[42 195]
[43 194]
[46 193]
[47 192]
[48 191]
[52 185]
[53 184]
[54 183]
[55 182]
[56 181]
[57 180]
[58 178]
[59 177]
[60 176]
[61 175]
[62 174]
[63 172]
[64 171]
[66 168]
[67 167]
[72 162]
[73 161]
[74 160]
[76 157]
[77 156]
[78 155]
[79 154]
[81 153]
[82 152]
[83 151]
[84 150]
[85 123]
[86 122]
[87 121]
[89 120]
[90 119]
[91 118]
[92 117]
[94 115]
[95 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
