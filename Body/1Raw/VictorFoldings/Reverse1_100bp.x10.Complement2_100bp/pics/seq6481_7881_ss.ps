%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxUUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUG\
) } def
/len { sequence length } bind def

/coor [
[134.36459351 566.23101807]
[145.21339417 554.73846436]
[144.54360962 539.75341797]
[143.87382507 524.76837158]
[142.86955261 509.80203247]
[141.53132629 494.86184692]
[140.19308472 479.92166138]
[131.11471558 471.92730713]
[129.87753296 459.49136353]
[137.68753052 449.22653198]
[136.57188416 434.26806641]
[134.90034485 419.36151123]
[132.67521667 404.52746582]
[130.45010376 389.69342041]
[128.22499084 374.85937500]
[125.99987030 360.02532959]
[122.75984955 356.51657104]
[121.68959808 350.93521118]
[123.93618011 344.71713257]
[122.15371704 329.82342529]
[120.37124634 314.92971802]
[118.58878326 300.03598022]
[105.51555634 292.94876099]
[99.04584503 279.36175537]
[101.85000610 264.39547729]
[113.05864716 253.82794189]
[111.27618408 238.93423462]
[109.38288879 224.05419922]
[107.37887573 209.18865967]
[98.01056671 197.60920715]
[103.83478546 182.89903259]
[101.83077240 168.03350830]
[99.82675934 153.16798401]
[97.82274628 138.30244446]
[95.81873322 123.43692017]
[93.70410919 108.58672333]
[90.27304840 93.98440552]
[85.65903473 79.71166992]
[74.05193329 68.96058655]
[77.49917603 54.47039413]
[72.77904510 40.23240280]
[67.95304871 26.02994728]
[63.12704849 11.82749271]
[58.30105209 -2.37496328]
[53.15909195 -16.46610451]
[47.70373535 -30.43890190]
[42.14450836 -44.37070084]
[36.48172379 -58.26072693]
[24.10714149 -68.11873627]
[26.46710587 -82.82518768]
[20.80431938 -96.71521759]
[15.14153290 -110.60523987]
[9.27257252 -124.40941620]
[3.19873834 -138.12467957]
[-2.87509561 -151.83995056]
[-8.94892979 -165.55522156]
[-15.42842579 -179.08357239]
[-22.30783844 -192.41299438]
[-29.18725014 -205.74241638]
[-36.06666183 -219.07185364]
[-42.94607544 -232.40127563]
[-48.29404831 -236.28852844]
[-50.53906631 -241.50935364]
[-49.82518768 -246.23156738]
[-56.30468369 -259.75991821]
[-62.78417969 -273.28826904]
[-69.26367188 -286.81661987]
[-83.54234314 -282.15026855]
[-98.30793762 -279.38766479]
[-113.30781555 -278.57601929]
[-128.28529358 -279.72927856]
[-142.98411560 -282.82766724]
[-157.15272522 -287.81820679]
[-170.54870605 -294.61547852]
[-182.94282532 -303.10314941]
[-194.12300110 -313.13601685]
[-203.89793396 -324.54241943]
[-212.10037231 -337.12713623]
[-218.58993530 -350.67486572]
[-223.25558472 -364.95373535]
[-226.01750183 -379.71948242]
[-226.82841492 -394.71939087]
[-225.67445374 -409.69680786]
[-222.57534790 -424.39547729]
[-217.58415222 -438.56384277]
[-210.78625488 -451.95950317]
[-202.29797363 -464.35321045]
[-192.26457214 -475.53292847]
[-180.85772705 -485.30731201]
[-168.27261353 -493.50915527]
[-154.72457886 -499.99807739]
[-140.44548035 -504.66305542]
[-125.67961121 -507.42425537]
[-110.67965698 -508.23446655]
[-95.70228577 -507.07977295]
[-81.00376892 -503.97998047]
[-66.83563232 -498.98809814]
[-53.44029999 -492.18957520]
[-41.04698944 -483.70071411]
[-29.86776161 -473.66677856]
[-20.09391212 -462.25946045]
[-11.89268208 -449.67395020]
[-5.40440655 -436.12561035]
[-0.74010807 -421.84628296]
[2.02040148 -407.08029175]
[2.82988596 -392.08029175]
[1.67449379 -377.10296631]
[-1.42600441 -362.40460205]
[-6.41855526 -348.23669434]
[-13.21772957 -334.84170532]
[-21.70718384 -322.44879150]
[-31.74165535 -311.27005005]
[-43.14943695 -301.49673462]
[-55.73532867 -293.29611206]
[-49.25583267 -279.76776123]
[-42.77633667 -266.23941040]
[-36.29684067 -252.71107483]
[-29.61664581 -239.28070068]
[-22.73723412 -225.95126343]
[-15.85782146 -212.62184143]
[-8.97840881 -199.29240417]
[-2.09899616 -185.96298218]
[0.52742052 -184.98313904]
[2.92396116 -182.90391541]
[4.66993904 -179.80763245]
[5.38221407 -175.92727661]
[4.76633739 -171.62905884]
[10.84017086 -157.91378784]
[16.91400528 -144.19851685]
[22.98783875 -130.48324585]
[27.04133606 -127.95774078]
[29.55135727 -122.85903168]
[29.03156090 -116.26802826]
[34.69434738 -102.37799835]
[40.35713196 -88.48797607]
[52.32667542 -79.62347412]
[50.37174988 -63.92351532]
[56.03453827 -50.03348541]
[61.47057724 -45.02636719]
[61.67653275 -35.89426041]
[67.13188934 -21.92146111]
[70.19693756 -20.17852974]
[72.57006836 -16.86441803]
[73.52199554 -12.32050800]
[72.50350952 -7.20096111]
[77.32950592 7.00149488]
[82.15550232 21.20395088]
[86.98149872 35.40640640]
[92.10987854 40.72820663]
[91.77191162 49.85638428]
[103.04898834 59.58658218]
[99.93177032 75.09765625]
[104.54578400 89.37039185]
[108.78305054 74.98131561]
[119.15541840 64.14554596]
[133.34568787 59.28382874]
[148.18370056 61.48228073]
[160.35462952 70.24976349]
[167.13943481 83.62759399]
[167.02238464 98.62713623]
[160.02961731 111.89745331]
[147.72335815 120.47392273]
[132.85282898 122.44053650]
[118.74016571 117.35794830]
[108.53815460 106.36161041]
[112.90595245 114.38408661]
[110.68425751 121.43290710]
[112.68827057 136.29843140]
[114.69229126 151.16397095]
[116.69630432 166.02949524]
[118.70031738 180.89501953]
[128.21197510 193.53776550]
[122.24440765 207.18464661]
[124.24842072 222.05018616]
[128.49629211 230.13679504]
[126.16989899 237.15176392]
[127.95236969 252.04548645]
[141.33816528 259.66955566]
[147.59484863 273.55145264]
[144.51409912 288.28146362]
[133.48249817 298.25350952]
[135.26496887 313.14724731]
[137.04743958 328.04095459]
[138.82989502 342.93466187]
[140.83390808 357.80020142]
[143.05903625 372.63424683]
[145.28414917 387.46829224]
[147.50926208 402.30233765]
[149.73437500 417.13638306]
[160.61351013 406.80950928]
[175.49069214 408.72503662]
[183.39903259 421.47094727]
[178.50878906 435.65142822]
[164.42486572 440.81311035]
[151.53033447 433.15243530]
[152.64598083 448.11087036]
[163.36402893 463.08435059]
[155.13327026 478.58343506]
[156.47151184 493.52362061]
[157.80973816 508.46380615]
[160.81402588 512.73248291]
[161.78355408 517.27264404]
[160.95564270 521.26385498]
[158.85885620 524.09857178]
[159.52864075 539.08361816]
[160.19842529 554.06866455]
[172.02926636 564.54754639]
[172.90185547 580.32769775]
[162.29849243 592.04711914]
[146.50996399 592.75280762]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 206]
[3 205]
[4 204]
[5 200]
[6 199]
[7 198]
[10 196]
[11 195]
[12 189]
[13 188]
[14 187]
[15 186]
[16 185]
[19 184]
[20 183]
[21 182]
[22 181]
[26 177]
[27 176]
[28 174]
[29 173]
[31 171]
[32 170]
[33 169]
[34 168]
[35 167]
[36 165]
[37 153]
[38 152]
[40 150]
[41 148]
[42 147]
[43 146]
[44 145]
[45 141]
[46 140]
[47 138]
[48 137]
[50 135]
[51 134]
[52 133]
[53 130]
[54 129]
[55 128]
[56 127]
[57 122]
[58 121]
[59 120]
[60 119]
[61 118]
[64 117]
[65 116]
[66 115]
[67 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
