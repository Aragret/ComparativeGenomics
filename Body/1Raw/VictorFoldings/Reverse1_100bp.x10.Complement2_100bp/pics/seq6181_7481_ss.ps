%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxAGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUA\
) } def
/len { sequence length } bind def

/coor [
[111.53700256 925.06738281]
[96.61334991 923.53161621]
[81.77223969 921.33721924]
[67.04271698 918.48852539]
[52.45361710 914.99108887]
[38.03350067 910.85174561]
[23.81059456 906.07861328]
[9.81274414 900.68103027]
[-3.93265271 894.66949463]
[-17.39868736 888.05590820]
[-30.55899811 880.85314941]
[-43.38782501 873.07525635]
[-55.86005402 864.73754883]
[-67.95127106 855.85632324]
[-79.63780212 846.44891357]
[-90.89678192 836.53381348]
[-101.70615387 826.13037109]
[-112.04477692 815.25903320]
[-121.89239502 803.94097900]
[-131.22973633 792.19836426]
[-140.03852844 780.05432129]
[-148.30152893 767.53247070]
[-156.00254822 754.65734863]
[-163.12652588 741.45422363]
[-169.65951538 727.94885254]
[-175.58871460 714.16778564]
[-180.90254211 700.13793945]
[-185.59056091 685.88671875]
[-189.64361572 671.44213867]
[-193.05377197 656.83239746]
[-195.81436157 642.08605957]
[-197.91996765 627.23211670]
[-199.36645508 612.29956055]
[-200.15103149 597.31762695]
[-200.27212524 582.31561279]
[-199.72950745 567.32299805]
[-198.52424622 552.36901855]
[-196.65870667 537.48297119]
[-194.13653564 522.69403076]
[-190.96266174 508.03115845]
[-187.14331055 493.52301025]
[-182.68594360 479.19799805]
[-177.59930420 465.08416748]
[-171.89334106 451.20916748]
[-165.57922363 437.60012817]
[-158.66931152 424.28372192]
[-151.17712402 411.28598022]
[-143.11734009 398.63235474]
[-134.50573730 386.34765625]
[-125.35916901 374.45590210]
[-115.69553375 362.98034668]
[-105.53376007 351.94348145]
[-94.89373016 341.36691284]
[-83.79627991 331.27136230]
[-72.26313019 321.67654419]
[-60.31686020 312.60125732]
[-47.98085022 304.06332397]
[-35.27925110 296.07937622]
[-22.23692703 288.66506958]
[-8.87940979 281.83496094]
[4.76715279 275.60235596]
[18.67604828 269.97949219]
[32.82004929 264.97738647]
[47.17146301 260.60577393]
[61.70220566 256.87329102]
[76.38381958 253.78718567]
[91.18757629 251.35353088]
[106.08449554 249.57707214]
[104.96884918 234.61862183]
[103.85319519 219.66017151]
[102.73754883 204.70170593]
[101.62190247 189.74325562]
[100.28366852 174.80307007]
[98.72314453 159.88447571]
[97.16262054 144.96586609]
[95.60209656 130.04725647]
[94.04157257 115.12865448]
[85.45252991 107.26293182]
[84.32715607 95.67092133]
[91.24282074 86.29996490]
[89.90458679 71.35977936]
[88.56635284 56.41959763]
[76.72200012 46.30282974]
[75.57766724 31.13229561]
[85.29544830 19.90285683]
[83.95721436 4.96267176]
[82.61898041 -9.97751331]
[67.65512848 -11.58041954]
[53.29159927 -16.07212067]
[40.08049774 -23.27996635]
[28.52962303 -32.92690659]
[19.08295441 -44.64214325]
[12.10359955 -57.97536469]
[7.85982609 -72.41408539]
[6.51475334 -87.40331268]
[8.12008190 -102.36690521]
[12.61410809 -116.72970581]
[19.82409286 -129.93963623]
[29.47290230 -141.48895264]
[41.18966675 -150.93373108]
[54.52401733 -157.91091919]
[68.96342468 -162.15235901]
[83.95287323 -163.49501038]
[98.91620636 -161.88725281]
[113.27827454 -157.39089966]
[126.48704529 -150.17878723]
[138.03479004 -140.52810669]
[147.47767639 -128.80981445]
[154.45271301 -115.47432709]
[158.69180298 -101.03424072]
[160.03202820 -86.04457092]
[158.42185974 -71.08149719]
[153.92318726 -56.72015762]
[146.70892334 -43.51255798]
[137.05636597 -31.96636772]
[125.33655548 -22.52538872]
[111.99993896 -15.55250931]
[97.55916595 -11.31574726]
[98.89739990 3.62443781]
[100.23563385 18.56462288]
[111.79441071 27.88825989]
[113.36440277 43.02066803]
[103.50653839 55.08136368]
[104.84477234 70.02154541]
[106.18300629 84.96173096]
[116.18365479 98.42885590]
[108.96018219 113.56813049]
[110.52070618 128.48674011]
[112.08122253 143.40534973]
[113.64174652 158.32394409]
[115.20227051 173.24255371]
[118.77026367 178.80860901]
[118.96277618 184.48838806]
[116.58035278 188.62760925]
[117.69600677 203.58605957]
[118.81165314 218.54452515]
[119.92729950 233.50297546]
[121.04294586 248.46142578]
[136.03857422 248.00840759]
[151.03955078 248.21913147]
[166.01654053 249.09320068]
[180.94020081 250.62889099]
[195.78131104 252.82321167]
[210.51084900 255.67184448]
[225.09996033 259.16925049]
[239.52009583 263.30853271]
[253.74301147 268.08163452]
[267.74087524 273.47915649]
[281.48629761 279.49060059]
[294.95236206 286.10415649]
[308.11270142 293.30691528]
[320.94155884 301.08471680]
[333.41381836 309.42239380]
[345.50506592 318.30358887]
[357.19161987 327.71093750]
[368.45065308 337.62600708]
[379.26007080 348.02938843]
[389.59872437 358.90072632]
[399.44638062 370.21875000]
[408.78375244 381.96127319]
[417.59259033 394.10534668]
[425.85565186 406.62716675]
[433.55670166 419.50222778]
[440.68072510 432.70535278]
[447.21377563 446.21066284]
[453.14303589 459.99172974]
[458.45690918 474.02157593]
[463.14495850 488.27273560]
[467.19808960 502.71734619]
[470.60830688 517.32708740]
[473.36892700 532.07336426]
[475.47457886 546.92730713]
[476.92114258 561.85986328]
[477.70574951 576.84179688]
[477.82690430 591.84381104]
[477.28436279 606.83642578]
[476.07916260 621.79040527]
[474.21365356 636.67645264]
[471.69152832 651.46539307]
[468.51773071 666.12829590]
[464.69842529 680.63647461]
[460.24111938 694.96148682]
[455.15451050 709.07531738]
[449.44860840 722.95037842]
[443.13452148 736.55938721]
[436.22467041 749.87585449]
[428.73254395 762.87359619]
[420.67279053 775.52728271]
[412.06124878 787.81201172]
[402.91470337 799.70379639]
[393.25112915 811.17938232]
[383.08938599 822.21624756]
[372.44940186 832.79290771]
[361.35198975 842.88848877]
[349.81887817 852.48333740]
[337.87261963 861.55865479]
[325.53665161 870.09667969]
[312.83508301 878.08062744]
[299.79278564 885.49499512]
[286.43530273 892.32519531]
[272.78875732 898.55780029]
[258.87988281 904.18072510]
[244.73588562 909.18292236]
[230.38449097 913.55450439]
[215.85375977 917.28710938]
[201.17216492 920.37322998]
[186.36840820 922.80694580]
[171.47149658 924.58343506]
[156.51058960 925.69927979]
[141.51496887 926.15228271]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[68 138]
[69 137]
[70 136]
[71 135]
[72 134]
[73 131]
[74 130]
[75 129]
[76 128]
[77 127]
[80 125]
[81 124]
[82 123]
[85 120]
[86 119]
[87 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
