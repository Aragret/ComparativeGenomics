%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[121.47173309 676.08807373]
[111.36067963 664.99041748]
[102.42424011 652.92681885]
[94.75412750 640.02093506]
[88.42904663 626.40539551]
[83.51390839 612.21972656]
[80.05914307 597.60961914]
[78.10020447 582.72491455]
[77.65720367 567.71844482]
[78.73467255 552.74414062]
[81.32155609 537.95562744]
[85.39131927 523.50476074]
[90.90219116 509.53976440]
[97.79762268 496.20394897]
[106.00685883 483.63415527]
[115.44565582 471.95941162]
[126.01715088 461.29943848]
[137.61288452 451.76373291]
[150.11383057 443.45004272]
[163.39173889 436.44375610]
[177.31034851 430.81671143]
[173.12333679 416.41293335]
[168.93632507 402.00915527]
[164.74931335 387.60537720]
[160.56230164 373.20159912]
[156.37528992 358.79782104]
[145.39291382 348.73617554]
[148.97058105 333.32476807]
[144.78356934 318.92098999]
[141.10382080 315.87658691]
[139.29748535 310.48825073]
[140.69319153 304.02575684]
[136.93688965 289.50369263]
[133.18058777 274.98165894]
[129.42428589 260.45959473]
[118.57240295 256.93780518]
[110.68650818 248.52780151]
[107.81011200 237.23974609]
[110.76988220 225.84936523]
[118.94250488 217.21543884]
[115.62024689 202.58796692]
[112.29798889 187.96051025]
[99.59718323 180.26472473]
[96.01956177 165.47772217]
[104.17773438 152.20812988]
[100.85547638 137.58067322]
[97.53321075 122.95320892]
[94.21095276 108.32575226]
[89.49658203 101.78761292]
[90.94983673 93.45581818]
[86.11228180 85.70753479]
[87.91047668 78.53897095]
[85.02519989 63.81908035]
[74.77790070 51.76489258]
[79.92260742 37.78701019]
[77.03733826 23.06711769]
[74.15206146 8.34722614]
[61.50095749 6.80274725]
[49.81008530 1.77247798]
[40.01765442 -6.32894897]
[32.90643311 -16.84088326]
[29.04118729 -28.91052055]
[28.72384453 -41.56209564]
[31.96992493 -53.77574539]
[38.50810242 -64.56974792]
[47.80285645 -73.07942200]
[59.09832001 -78.62637329]
[56.87320328 -93.46041870]
[54.64808655 -108.29446411]
[52.42296600 -123.12850189]
[50.19784927 -137.96255493]
[40.49901962 -150.46228027]
[46.26273727 -164.19650269]
[44.03762054 -179.03054810]
[41.81250381 -193.86459351]
[39.58738708 -208.69862366]
[37.36227036 -223.53266907]
[32.13186264 -209.47412109]
[22.46137428 -198.00758362]
[9.48688889 -190.48011780]
[-5.26736641 -187.77604675]
[-20.06807518 -190.21305847]
[-33.17646790 -197.50483704]
[-43.05257797 -208.79476929]
[-48.53617477 -222.75650024]
[-48.98304749 -237.74984741]
[-44.34070206 -252.01339722]
[-35.15451431 -263.87145996]
[-22.50366783 -271.93099976]
[-7.87437153 -275.24517822]
[7.01473904 -273.42462158]
[20.41450691 -266.68322754]
[30.75073814 -255.81298828]
[36.80952454 -242.08937073]
[38.14775848 -257.02957153]
[39.48599243 -271.96975708]
[40.82422638 -286.90994263]
[42.16246033 -301.85012817]
[43.50069427 -316.79031372]
[29.58043289 -322.71325684]
[18.17310524 -332.64947510]
[10.39628506 -345.62545776]
[7.01186609 -360.36996460]
[8.35141945 -375.43850708]
[14.28370953 -389.35479736]
[24.22755051 -400.75546265]
[37.20874786 -408.52359009]
[51.95553207 -411.89813232]
[67.02317047 -410.54849243]
[80.93547821 -404.60687256]
[92.32948303 -394.65539551]
[100.08890533 -381.66897583]
[103.45355988 -366.91995239]
[102.09381104 -351.85321045]
[96.14287567 -337.94488525]
[86.18376923 -326.55755615]
[73.19217682 -318.80685425]
[58.44087982 -315.45205688]
[57.10264587 -300.51187134]
[55.76441193 -285.57168579]
[54.42617798 -270.63150024]
[53.08794403 -255.69132996]
[51.74971008 -240.75114441]
[52.19631577 -225.75779724]
[54.42143250 -210.92375183]
[56.64654922 -196.08970642]
[58.87166595 -181.25566101]
[61.09678268 -166.42161560]
[70.63645935 -154.98291016]
[65.03189087 -140.18766785]
[67.25701141 -125.35362244]
[69.48213196 -110.51957703]
[71.70724487 -95.68553162]
[73.93236542 -80.85149384]
[90.90379333 -77.17677307]
[105.19155884 -67.24607086]
[114.58898163 -52.56015396]
[117.63201904 -35.35670471]
[113.82731628 -18.26938438]
[103.73191833 -3.92464924]
[88.87195587 5.46195316]
[91.75722504 20.18184471]
[94.64250183 34.90173721]
[104.68342590 45.90305710]
[99.74509430 60.93380737]
[102.63036346 75.65370178]
[105.62513733 90.35170746]
[108.83841705 105.00349426]
[112.16067505 119.63095093]
[115.48293304 134.25840759]
[118.80519104 148.88587952]
[131.89497375 157.32952881]
[135.05584717 172.21118164]
[126.92544556 184.63824463]
[130.24771118 199.26571655]
[133.56996155 213.89317322]
[149.97398376 223.37063599]
[154.16937256 241.51757812]
[143.94635010 256.70327759]
[147.70265198 271.22534180]
[151.45895386 285.74740601]
[155.21525574 300.26947021]
[159.18734741 314.73397827]
[163.37435913 329.13775635]
[174.65621948 340.22967529]
[170.77906799 354.61080933]
[174.96607971 369.01458740]
[179.15309143 383.41836548]
[183.34010315 397.82214355]
[187.52711487 412.22592163]
[191.71412659 426.62973022]
[206.48030090 423.91842651]
[221.44500732 422.71490479]
[236.45469666 423.03155518]
[251.35534668 424.86511230]
[265.99401855 428.19674683]
[280.22055054 432.99227905]
[293.88891602 439.20248413]
[306.85885620 446.76367188]
[318.99728394 455.59823608]
[330.17965698 465.61550903]
[340.29119873 476.71270752]
[349.22817993 488.77593994]
[356.89886475 501.68142700]
[363.22454834 515.29675293]
[368.14031982 529.48217773]
[371.59570312 544.09210205]
[373.55529785 558.97674561]
[373.99896240 573.98321533]
[372.92214966 588.95751953]
[370.33593750 603.74615479]
[366.26678467 618.19720459]
[360.75653076 632.16247559]
[353.86169434 645.49859619]
[345.65301514 658.06872559]
[336.21472168 669.74389648]
[325.64370728 680.40429688]
[314.04840088 689.94055176]
[301.54782104 698.25476074]
[288.27020264 705.26165771]
[274.35183716 710.88928223]
[259.93554688 715.07995605]
[245.16926575 717.79058838]
[230.20449829 718.99340820]
[215.19482422 718.67614746]
[200.29426575 716.84191895]
[185.65573120 713.50964355]
[171.42941284 708.71350098]
[157.76132202 702.50262451]
[144.79171753 694.94091797]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 171]
[22 170]
[23 169]
[24 168]
[25 167]
[26 166]
[28 164]
[29 163]
[32 162]
[33 161]
[34 160]
[35 159]
[40 156]
[41 155]
[42 154]
[45 151]
[46 150]
[47 149]
[48 148]
[50 147]
[52 146]
[53 145]
[55 143]
[56 142]
[57 141]
[67 134]
[68 133]
[69 132]
[70 131]
[71 130]
[73 128]
[74 127]
[75 126]
[76 125]
[77 124]
[94 123]
[95 122]
[96 121]
[97 120]
[98 119]
[99 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
