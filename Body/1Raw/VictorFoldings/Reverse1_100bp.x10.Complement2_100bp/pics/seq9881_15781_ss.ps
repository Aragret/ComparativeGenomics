%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUUAUCUACCUCUGUAUGUCUUUAUCAGUUUGGUGUAGAUGUUUUACGGUCAUAGUCCGCCGCCGAAGCUUCGGUUUCACUACAAACCUACAUUUCACxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[95.34802246 499.19659424]
[108.34115601 491.47198486]
[104.80148315 476.89559937]
[101.26181030 462.31921387]
[97.72213745 447.74285889]
[94.18246460 433.16647339]
[84.01863861 426.60726929]
[80.95037842 414.49243164]
[87.15126801 403.18261719]
[76.78724670 392.48510742]
[81.27586365 377.31399536]
[77.95360565 362.68652344]
[74.63134766 348.05908203]
[71.30908966 333.43161011]
[67.98682404 318.80416870]
[62.03976440 332.57485962]
[50.06335068 341.60623169]
[35.18819427 343.53747559]
[21.30262184 337.86376953]
[12.03629208 326.06820679]
[9.81139946 311.23413086]
[15.20952606 297.23913574]
[26.81961441 287.74145508]
[41.60681534 285.22378540]
[55.70579147 290.34420776]
[65.43071747 301.76348877]
[64.31507111 286.80505371]
[63.19942093 271.84658813]
[62.08377075 256.88815308]
[60.96812057 241.92968750]
[55.21346283 255.78190613]
[45.97839737 267.60195923]
[33.92961121 276.53652954]
[19.93691444 281.94064331]
[5.01045656 283.42419434]
[-9.77221012 280.88000488]
[-23.34391403 274.49185181]
[-34.72489929 264.72079468]
[-43.09356689 252.27229309]
[-47.84576797 238.04496765]
[-48.63844681 223.06593323]
[-45.41437149 208.41651917]
[-38.40629578 195.15428162]
[-28.12013435 184.23663330]
[-15.29845810 176.45175171]
[-0.86687255 172.36158752]
[14.13279343 172.26145935]
[28.61770058 176.15856934]
[41.54217148 183.77159119]
[51.97317505 194.55091858]
[59.15769196 207.71841431]
[62.57717514 222.32463074]
[66.11685181 207.74826050]
[69.65651703 193.17189026]
[73.19618988 178.59550476]
[76.73586273 164.01913452]
[80.27553558 149.44276428]
[83.81520844 134.86637878]
[87.35488129 120.29000854]
[90.89455414 105.71363068]
[91.67588043 90.73399353]
[89.67186737 75.86846924]
[87.66784668 61.00293732]
[75.38356781 51.42514038]
[73.56298065 36.32083511]
[82.76964569 24.66867256]
[80.76563263 9.80314541]
[78.76161957 -5.06238317]
[64.10877228 -9.00824261]
[52.11528778 -18.23858643]
[44.58977890 -31.32217979]
[42.65203094 -46.24976349]
[46.56644058 -60.74259567]
[55.70645142 -72.60031891]
[68.65460205 -80.03501129]
[66.65058899 -94.90054321]
[64.64657593 -109.76606750]
[62.64255905 -124.63159943]
[58.91043091 -130.08895874]
[58.54889297 -135.76049805]
[60.80701828 -139.96881104]
[59.24649429 -154.88740540]
[57.68597031 -169.80601501]
[56.12545013 -184.72462463]
[54.56492615 -199.64321899]
[45.18768311 -187.93565369]
[30.50399017 -184.87149048]
[17.22702980 -191.85162354]
[11.42685223 -205.68484497]
[15.75521946 -220.04678345]
[28.23326111 -228.37135315]
[43.15618134 -226.85267639]
[53.70220947 -216.18338013]
[53.70220947 -231.18338013]
[53.70220947 -246.18338013]
[53.70220947 -261.18338013]
[53.70220947 -276.18338013]
[39.44953918 -281.34451294]
[27.82360840 -291.07147217]
[20.22830772 -304.18966675]
[17.58080292 -319.11502075]
[20.20079803 -334.04525757]
[27.77190971 -347.17742920]
[39.37989426 -356.92578125]
[53.62303162 -362.11315918]
[68.78138733 -362.11315918]
[83.02452087 -356.92578125]
[94.63250732 -347.17742920]
[102.20362091 -334.04525757]
[104.82361603 -319.11502075]
[102.17610931 -304.18966675]
[94.58081055 -291.07147217]
[82.95487976 -281.34451294]
[68.70220947 -276.18338013]
[68.70220947 -261.18338013]
[68.70220947 -246.18338013]
[68.70220947 -231.18338013]
[68.70220947 -216.18338013]
[69.48352814 -201.20375061]
[71.04405212 -186.28514099]
[72.60457611 -171.36654663]
[74.16510010 -156.44793701]
[75.72562408 -141.52932739]
[77.50808716 -126.63561249]
[79.51210022 -111.77008820]
[81.51611328 -96.90455627]
[83.52012634 -82.03903198]
[97.97480774 -78.29849243]
[109.92853546 -69.28440857]
[117.54100037 -56.34550476]
[119.62534332 -41.43768311]
[115.83310699 -26.82835197]
[106.71202087 -14.75156307]
[93.62715149 -7.06639671]
[95.63116455 7.79913139]
[97.63517761 22.66465950]
[109.59874725 31.46287155]
[111.84286499 46.51008224]
[102.53337860 58.99892426]
[104.53739166 73.86444855]
[106.54140472 88.72998047]
[111.32297516 74.51250458]
[119.21403503 61.75588989]
[129.80062866 51.12932587]
[142.52742004 43.19025803]
[156.72677612 38.35515594]
[171.65383911 36.87765503]
[186.52554321 38.83526611]
[200.56176758 44.12529755]
[213.02619934 52.47024155]
[223.26496887 63.43233871]
[230.74096680 76.43654633]
[235.06204224 90.80068207]
[236.00149536 105.77123260]
[233.51005554 120.56287384]
[227.71841431 134.39967346]
[218.93038940 146.55577087]
[207.60699463 156.39347839]
[194.34220886 163.39674377]
[179.83190918 167.19818115]
[164.83724976 167.59837341]
[150.14482117 164.57632446]
[136.52537537 158.29057312]
[124.69335175 149.07086182]
[115.26943207 137.40081787]
[108.74798584 123.89264679]
[105.47093201 109.25330353]
[101.93125916 123.82968140]
[98.39158630 138.40605164]
[94.85191345 152.98243713]
[91.31224060 167.55880737]
[87.77256775 182.13517761]
[84.23289490 196.71156311]
[80.69322205 211.28793335]
[77.15354919 225.86430359]
[75.92657471 240.81404114]
[77.04222107 255.77249146]
[78.15787506 270.73095703]
[79.27352142 285.68939209]
[80.38916779 300.64785767]
[82.61428833 315.48190308]
[85.93654633 330.10934448]
[89.25880432 344.73681641]
[92.58106232 359.36428833]
[95.90332794 373.99172974]
[106.50498199 385.73547363]
[101.77873230 399.86035156]
[114.59938049 413.07821655]
[108.75884247 429.62680054]
[112.29850769 444.20318604]
[115.83818054 458.77954102]
[119.37785339 473.35592651]
[122.91752625 487.93231201]
[138.00633240 488.83761597]
[152.15733337 494.15179443]
[164.11225891 503.40225220]
[172.80807495 515.76647949]
[177.47155762 530.14508057]
[177.68801880 545.25946045]
[173.43823242 559.76568604]
[165.10008240 572.37390137]
[153.41497803 581.96289062]
[139.42196655 587.68017578]
[124.36528015 589.01721191]
[109.58376312 585.85522461]
[96.39177704 578.47534180]
[85.96233368 567.53375244]
[79.22282410 554.00341797]
[76.77251434 539.08740234]
[78.82928467 524.11206055]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 193]
[3 192]
[4 191]
[5 190]
[6 189]
[9 187]
[11 185]
[12 184]
[13 183]
[14 182]
[15 181]
[26 180]
[27 179]
[28 178]
[29 177]
[30 176]
[52 175]
[53 174]
[54 173]
[55 172]
[56 171]
[57 170]
[58 169]
[59 168]
[60 167]
[61 141]
[62 140]
[63 139]
[66 136]
[67 135]
[68 134]
[75 127]
[76 126]
[77 125]
[78 124]
[81 123]
[82 122]
[83 121]
[84 120]
[85 119]
[93 118]
[94 117]
[95 116]
[96 115]
[97 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
