%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[55.01764679 710.37176514]
[45.99466324 722.43548584]
[34.51313400 732.18859863]
[21.14896774 739.14178467]
[6.57250834 742.94628906]
[-8.48509598 743.41137695]
[-23.26856232 740.51367188]
[-37.03635788 734.39843750]
[-49.09789658 725.37255859]
[-58.84817505 713.88867188]
[-65.79812622 700.52282715]
[-69.59914398 685.94543457]
[-70.06056213 670.88769531]
[-67.15924835 656.10491943]
[-61.04072189 642.33862305]
[-52.01189041 630.27929688]
[-40.52563477 620.53179932]
[-27.15810204 613.58508301]
[-12.57980156 609.78759766]
[2.47802687 609.32983398]
[5.36329937 594.60992432]
[8.24857235 579.89001465]
[11.13384438 565.17016602]
[14.01911736 550.45025635]
[16.90439034 535.73034668]
[19.78966331 521.01049805]
[22.67493439 506.29058838]
[25.56020737 491.57067871]
[28.44548035 476.85079956]
[26.57180786 472.45779419]
[27.43789482 466.84112549]
[31.64202118 461.73849487]
[34.96428299 447.11105347]
[38.28654099 432.48358154]
[36.70257568 425.26464844]
[41.76868820 417.66384888]
[45.30835724 403.08746338]
[37.36388016 390.54074097]
[40.74596405 375.70779419]
[53.96001053 367.45996094]
[57.49968338 352.88357544]
[49.55520630 340.33682251]
[52.93729019 325.50390625]
[66.15133667 317.25607300]
[69.69100952 302.67968750]
[73.23068237 288.10330200]
[68.71525574 273.90963745]
[79.49057770 262.32504272]
[83.03025055 247.74867249]
[86.56992340 233.17230225]
[90.10959625 218.59591675]
[93.64926910 204.01954651]
[97.18894196 189.44317627]
[100.72861481 174.86679077]
[101.39839935 159.88175964]
[99.17327881 145.04771423]
[96.94816589 130.21366882]
[94.72304535 115.37962341]
[85.79135132 107.90526581]
[84.14948273 96.37506866]
[90.63981628 86.70465851]
[88.63580322 71.83913422]
[78.87065887 63.41270065]
[77.50754547 50.98991013]
[84.73505402 41.28992844]
[82.95259094 26.39620972]
[81.17012787 11.50249290]
[71.84775543 -1.28046668]
[78.01783752 -14.83699131]
[76.23537445 -29.73070908]
[74.45291138 -44.62442398]
[64.35459900 -33.53280258]
[49.37813950 -32.69271469]
[38.10273361 -42.58539963]
[36.98744202 -57.54388046]
[46.67115784 -68.99925995]
[61.60660553 -70.38937378]
[73.23762512 -60.91873932]
[72.79102325 -75.91208649]
[72.34441376 -90.90544128]
[71.89781189 -105.89878845]
[71.45120239 -120.89213562]
[60.23000717 -131.69595337]
[59.99066925 -146.90771484]
[70.35961151 -157.53881836]
[69.91300201 -172.53218079]
[58.69180679 -183.33599854]
[58.45247269 -198.54774475]
[68.82141113 -209.17886353]
[60.67666245 -222.74253845]
[68.03159332 -235.69454956]
[67.58498383 -250.68789673]
[67.13838196 -265.68124390]
[52.45175934 -269.14038086]
[39.16131973 -276.28366089]
[28.17322731 -286.62408447]
[20.23666763 -299.45660400]
[15.89276886 -313.90628052]
[15.43770504 -328.98788452]
[18.90250397 -343.67318726]
[26.05092812 -356.96084595]
[36.39558792 -367.94494629]
[49.23116684 -375.87655640]
[63.68251038 -380.21487427]
[78.76430511 -380.66412354]
[93.44825745 -377.19363403]
[106.73317719 -370.04010010]
[117.71327972 -359.69119263]
[125.63992310 -346.85256958]
[129.97267151 -332.39953613]
[130.41607666 -317.31756592]
[126.93994141 -302.63494873]
[119.78125763 -289.35281372]
[109.42812347 -278.37670898]
[96.58642578 -270.45501709]
[82.13172913 -266.12783813]
[82.57833862 -251.13450623]
[83.02494049 -236.14114380]
[91.13774872 -223.64988708]
[83.81476593 -209.62547302]
[94.79809570 -199.63037109]
[95.46460724 -184.43133545]
[84.90635681 -172.97877502]
[85.35295868 -157.98542786]
[96.33629608 -147.99032593]
[97.00279999 -132.79130554]
[86.44455719 -121.33874512]
[86.89115906 -106.34539795]
[87.33776855 -91.35204315]
[87.78437042 -76.35869598]
[88.23097992 -61.36534500]
[89.34662628 -46.40689087]
[91.12908936 -31.51317406]
[92.91156006 -16.61945724]
[102.10643005 -4.90179586]
[96.06384277 9.72002697]
[97.84630585 24.61374474]
[99.62877655 39.50746155]
[110.88875580 52.96776581]
[103.50133514 69.83512115]
[105.50534821 84.70064545]
[116.09735107 97.70778656]
[109.55709076 113.15451050]
[111.78221130 127.98854828]
[114.00732422 142.82260132]
[116.23244476 157.65663147]
[120.79222870 143.36648560]
[128.37800598 130.42601013]
[138.61965942 119.46659851]
[151.01745605 111.02298737]
[164.96649170 105.50715637]
[179.78616333 103.18824005]
[194.75337219 104.17938232]
[209.13786316 108.43222046]
[222.23776245 115.73924255]
[233.41389465 125.74394226]
[242.12097168 137.95814514]
[247.93414307 151.78591919]
[250.56976318 166.55255127]
[249.89924622 181.53755188]
[245.95530701 196.00978088]
[238.93037415 209.26309204]
[229.16722107 220.65083313]
[217.14219666 229.61738586]
[203.44204712 235.72521973]
[188.73521423 238.67634583]
[173.73928833 238.32676697]
[159.18594360 234.69352722]
[145.78529358 227.95391846]
[134.19116211 218.43676758]
[124.96925354 206.60644531]
[118.56954193 193.04017639]
[115.30499268 178.40646362]
[111.76531982 192.98284912]
[108.22564697 207.55921936]
[104.68597412 222.13558960]
[101.14630127 236.71197510]
[97.60662842 251.28834534]
[94.06695557 265.86471558]
[98.32920074 281.10098267]
[87.80706024 291.64297485]
[84.26738739 306.21936035]
[80.72771454 320.79574585]
[88.68740845 334.18533325]
[84.89003754 348.91741943]
[72.07605743 356.42324829]
[68.53638458 370.99963379]
[76.49608612 384.38922119]
[72.69870758 399.12130737]
[59.88473511 406.62713623]
[56.34506226 421.20352173]
[52.91400146 435.80584717]
[49.59173965 450.43331909]
[46.26948166 465.06076050]
[43.16537094 479.73605347]
[40.28009796 494.45596313]
[37.39482498 509.17584229]
[34.50955200 523.89575195]
[31.62428093 538.61566162]
[28.73900795 553.33551025]
[25.85373688 568.05541992]
[22.96846390 582.77532959]
[20.08319092 597.49517822]
[17.19791794 612.21508789]
[30.96867561 618.32360840]
[43.03458786 627.34368896]
[52.79042816 638.82281494]
[59.74685669 652.18530273]
[63.55493546 666.76086426]
[64.02365112 681.81835938]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 204]
[21 203]
[22 202]
[23 201]
[24 200]
[25 199]
[26 198]
[27 197]
[28 196]
[29 195]
[32 194]
[33 193]
[34 192]
[36 191]
[37 190]
[40 187]
[41 186]
[44 183]
[45 182]
[46 181]
[48 179]
[49 178]
[50 177]
[51 176]
[52 175]
[53 174]
[54 173]
[55 146]
[56 145]
[57 144]
[58 143]
[61 141]
[62 140]
[65 138]
[66 137]
[67 136]
[69 134]
[70 133]
[71 132]
[78 131]
[79 130]
[80 129]
[81 128]
[82 127]
[85 124]
[86 123]
[89 120]
[91 118]
[92 117]
[93 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
