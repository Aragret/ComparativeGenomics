%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGGCAGCCUUUACCACUUCCCUCUGAGCUUCAUGAGACUCCGAACAUCCUCCCAUUUUAUCUCUGGGUCAUUUUAACAUUAUUCGUCACGAACUUAAUxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[40.48271179 518.44805908]
[32.63365173 505.24627686]
[32.45311737 489.88842773]
[39.98967361 476.50576782]
[53.21602631 468.69812012]
[52.99269867 453.69979858]
[52.76937103 438.70144653]
[43.06352997 450.13809204]
[28.51675797 453.79751587]
[14.55464458 448.31488037]
[6.38471031 435.73504639]
[7.05413914 420.75000000]
[16.31324959 408.94876099]
[30.70862579 404.73294067]
[44.87114334 409.67492676]
[53.51888657 421.93255615]
[55.07941055 407.01394653]
[56.63993454 392.09536743]
[58.20045853 377.17675781]
[59.76097870 362.25814819]
[61.32150269 347.33953857]
[62.88202667 332.42092896]
[64.33144379 317.49111938]
[65.66967773 302.55093384]
[67.00791168 287.61074829]
[68.34614563 272.67056274]
[69.68437958 257.73037720]
[71.02261353 242.79020691]
[69.33074188 240.55509949]
[68.42229462 237.51513672]
[68.60824585 233.96537781]
[70.08713531 230.30786133]
[72.91122437 227.00959778]
[75.13633728 212.17555237]
[73.01984406 205.09443665]
[77.50659943 197.13787842]
[79.95232391 182.33860779]
[82.28781128 167.52154541]
[84.51293182 152.68750000]
[86.73804474 137.85345459]
[88.96316528 123.01940918]
[91.18828583 108.18536377]
[93.19229889 93.31983948]
[94.97476196 78.42611694]
[95.30973816 63.42986298]
[94.19409180 48.47140884]
[93.07843781 33.51295471]
[91.62902069 18.58314514]
[89.84655762 3.68942881]
[88.06408691 -11.20428848]
[86.28162384 -26.09800529]
[72.89582825 -33.72208405]
[66.63913727 -47.60398865]
[69.71990204 -62.33398819]
[80.75148773 -72.30605316]
[78.96902466 -87.19976807]
[71.62159729 -74.12248230]
[58.77059555 -66.38609314]
[43.77524185 -66.01286316]
[30.55528069 -73.10036469]
[22.56638145 -85.79593658]
[21.89682198 -100.78098297]
[28.72162628 -114.13845825]
[41.25680161 -122.37673950]
[56.22568893 -123.34236908]
[69.71545410 -116.78292847]
[78.19960785 -104.41387939]
[78.64620972 -119.40722656]
[79.09281921 -134.40057373]
[79.53942108 -149.39392090]
[77.86788177 -164.30050659]
[74.11157990 -178.82255554]
[70.35528564 -193.34461975]
[66.59898376 -207.86668396]
[62.84268188 -222.38873291]
[51.89607239 -233.81163025]
[56.19967651 -248.07095337]
[52.44337463 -262.59301758]
[48.68707657 -277.11505127]
[44.93077469 -291.63711548]
[41.17447281 -306.15917969]
[37.41817474 -320.68124390]
[33.66187286 -335.20330811]
[18.61175346 -334.64831543]
[3.79427671 -337.34210205]
[-10.09751892 -343.15863037]
[-22.41388893 -351.82589722]
[-32.57877350 -362.93844604]
[-40.11674118 -375.97659302]
[-44.67523193 -390.33047485]
[-46.04103088 -405.32876587]
[-44.15026474 -420.26995850]
[-39.09135818 -434.45523071]
[-31.10093498 -447.22106934]
[-20.55271721 -457.97045898]
[-7.94006443 -466.20059204]
[6.14710665 -471.52655029]
[21.04991341 -473.69918823]
[36.07132339 -472.61694336]
[50.50876236 -468.33038330]
[63.68695831 -461.04003906]
[74.98954773 -451.08688354]
[83.88788605 -438.93640137]
[89.96578979 -425.15695190]
[92.93896484 -410.39300537]
[92.66837311 -395.33508301]
[89.16665649 -380.68750000]
[82.59760284 -367.13531494]
[73.26845551 -355.31240845]
[61.61555481 -345.77175903]
[48.18393326 -338.95959473]
[51.94023132 -324.43753052]
[55.69653320 -309.91549683]
[59.45283508 -295.39343262]
[63.20913315 -280.87136841]
[66.96543884 -266.34930420]
[70.72173309 -251.82723999]
[81.39966583 -241.44306946]
[77.36473846 -226.14503479]
[81.12104034 -211.62298584]
[84.87734222 -197.10092163]
[88.63364410 -182.57885742]
[92.38994598 -168.05680847]
[95.74520111 -182.67672729]
[103.20867157 -195.68812561]
[114.13468933 -205.96539307]
[127.57804871 -212.61943054]
[142.37574768 -215.07460022]
[157.24766541 -213.11851501]
[170.90721130 -206.92037964]
[182.17269897 -197.01640320]
[190.06954956 -184.26336670]
[193.91462708 -169.76457214]
[193.37527466 -154.77426147]
[188.49815369 -140.58927917]
[179.70518494 -128.43676758]
[167.75704956 -119.36801910]
[153.68737793 -114.16758728]
[138.71334839 -113.28536224]
[124.13035583 -116.79766083]
[111.19996643 -124.40062714]
[101.04080200 -135.43653870]
[94.53277588 -148.94732666]
[94.08616638 -133.95396423]
[93.63956451 -118.96062469]
[93.19295502 -103.96726990]
[93.86273956 -88.98223114]
[95.64521027 -74.08851624]
[108.71843719 -67.00129700]
[115.18814850 -53.41428757]
[112.38398743 -38.44799042]
[101.17533875 -27.88047218]
[102.95780945 -12.98675442]
[104.74027252 1.90696275]
[106.52274323 16.80068016]
[109.05366516 19.25562668]
[110.52125549 23.05841827]
[110.30496979 27.69593048]
[108.03689575 32.39730453]
[109.15254211 47.35575867]
[110.26818848 62.31421280]
[117.14820862 48.98509598]
[128.80374146 39.54325104]
[143.27064514 35.57979202]
[158.11096191 37.76263428]
[170.82386780 45.72393036]
[179.26698303 58.12205887]
[182.01753235 72.86772156]
[178.61196899 87.47601318]
[169.62420654 99.48517609]
[156.56883240 106.87146759]
[141.64590454 108.39015198]
[127.37020874 103.78531647]
[116.14744568 93.83294678]
[109.86847687 80.20858765]
[108.08601379 95.10230255]
[110.31033325 99.85270691]
[109.71475220 105.51120758]
[106.02232361 110.41048431]
[103.79721069 125.24452972]
[101.57209015 140.07856750]
[99.34697723 154.91261292]
[97.12185669 169.74665833]
[98.94363403 178.69757080]
[94.75159454 184.78433228]
[92.30587006 199.58360291]
[89.97038269 214.40068054]
[87.74526978 229.23472595]
[85.96279907 244.12843323]
[84.62456512 259.06863403]
[83.28633118 274.00881958]
[81.94809723 288.94900513]
[80.60986328 303.88919067]
[79.27162933 318.82937622]
[81.62294006 327.65597534]
[77.80062866 333.98144531]
[76.24010468 348.90005493]
[74.67958832 363.81866455]
[73.11906433 378.73727417]
[71.55854034 393.65588379]
[69.99801636 408.57449341]
[68.43749237 423.49307251]
[67.76770782 438.47811890]
[67.99103546 453.47647095]
[68.21436310 468.47479248]
[81.66731262 475.88519287]
[89.59897614 489.03753662]
[89.87578583 504.39392090]
[82.42327118 517.82360840]
[69.24613190 525.71398926]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 205]
[6 204]
[7 203]
[16 202]
[17 201]
[18 200]
[19 199]
[20 198]
[21 197]
[22 196]
[23 194]
[24 193]
[25 192]
[26 191]
[27 190]
[28 189]
[33 188]
[34 187]
[36 186]
[37 185]
[38 183]
[39 182]
[40 181]
[41 180]
[42 179]
[43 176]
[44 175]
[45 161]
[46 160]
[47 159]
[48 155]
[49 154]
[50 153]
[51 152]
[55 148]
[56 147]
[67 146]
[68 145]
[69 144]
[70 143]
[71 123]
[72 122]
[73 121]
[74 120]
[75 119]
[77 117]
[78 116]
[79 115]
[80 114]
[81 113]
[82 112]
[83 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
