%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCAUUUUCCUCCCGUUAAAGAUCUAGUUUAUUAUUCUUCCAUUAUCGAUGAUUCUUCUUAAAAUACCUCUUUCCCUGCGCCCGCCCCCUAUAUCCCAGxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[52.03079605 827.79425049]
[37.04362869 828.54107666]
[22.04023361 828.27441406]
[7.08906841 826.99548340]
[-7.74164677 824.71014404]
[-22.38424301 821.42877197]
[-36.77190781 817.16638184]
[-50.83899689 811.94244385]
[-64.52131653 805.78070068]
[-77.75644684 798.70928955]
[-90.48399353 790.76055908]
[-102.64588928 781.97070312]
[-114.18663025 772.37988281]
[-125.05355835 762.03179932]
[-135.19709778 750.97369385]
[-144.57096863 739.25604248]
[-153.13240051 726.93231201]
[-160.84231567 714.05865479]
[-167.66554260 700.69390869]
[-173.57095337 686.89904785]
[-178.53158569 672.73693848]
[-182.52482605 658.27227783]
[-185.53244019 643.57098389]
[-187.54072571 628.70019531]
[-188.54048157 613.72778320]
[-188.52719116 598.72204590]
[-187.50086975 583.75140381]
[-185.46623230 568.88421631]
[-182.43255615 554.18835449]
[-178.41368103 539.73077393]
[-173.42793274 525.57745361]
[-167.49807739 511.79306030]
[-160.65115356 498.44042969]
[-152.91842651 485.58050537]
[-144.33517456 473.27194214]
[-134.94053650 461.57092285]
[-124.77740479 450.53082275]
[-113.89213562 440.20205688]
[-102.33441162 430.63168335]
[-90.15695190 421.86340332]
[-77.41533661 413.93725586]
[-64.16768646 406.88934326]
[-50.47446060 400.75189209]
[-36.39813232 395.55285645]
[-22.00293159 391.31597900]
[-7.35454035 388.06057739]
[7.48020363 385.80154419]
[22.43361282 384.54913330]
[37.43745422 384.30908203]
[52.42327499 385.08251953]
[54.20574188 370.18878174]
[55.98820496 355.29507446]
[53.66181946 348.28012085]
[57.90968704 340.19348145]
[59.91370010 325.32797241]
[61.91771698 310.46243286]
[63.92173004 295.59689331]
[65.92574310 280.73138428]
[67.92975616 265.86584473]
[69.93376923 251.00032043]
[71.93778229 236.13479614]
[59.99309540 229.07839966]
[51.61362457 217.96731567]
[48.09085083 204.45918274]
[49.98859787 190.58514404]
[57.05305099 178.44433594]
[68.24617004 169.88639832]
[81.89807129 166.22961426]
[84.12319183 151.39556885]
[77.18769073 141.48469543]
[78.92007446 129.10798645]
[88.93177032 120.97604370]
[91.37750244 106.17677307]
[93.04904175 91.27019501]
[93.94185638 76.29679108]
[94.83467102 61.32338715]
[95.72748566 46.34997940]
[88.82530975 32.11374283]
[97.30642700 19.86956787]
[98.19924927 4.89616251]
[91.29706573 -9.34007549]
[99.77819061 -21.58424950]
[100.67100525 -36.55765533]
[101.56381989 -51.53106308]
[101.11721039 -66.52441406]
[99.33474731 -81.41812897]
[97.55228424 -96.31184387]
[95.76981354 -111.20556641]
[93.98735046 -126.09928131]
[92.20488739 -140.99299622]
[90.42241669 -155.88671875]
[88.63995361 -170.78042603]
[73.79531097 -173.69451904]
[60.57871246 -181.05499268]
[50.28497314 -192.14074707]
[43.92257309 -205.86573792]
[42.11483765 -220.88529968]
[45.03886795 -235.72798157]
[52.40819931 -248.93965149]
[63.50085449 -259.22595215]
[77.23009491 -265.57916260]
[92.25086212 -267.37683105]
[107.09158325 -264.44284058]
[120.29830933 -257.06466675]
[130.57717896 -245.96511841]
[136.92118835 -232.23162842]
[138.70878601 -217.20965576]
[135.76487732 -202.37091064]
[128.37783813 -189.16912842]
[117.27140808 -178.89768982]
[103.53366852 -172.56289673]
[105.31613922 -157.66917419]
[107.09860229 -142.77546692]
[108.88106537 -127.88174438]
[110.66353607 -112.98802948]
[112.44599915 -98.09431458]
[114.22846222 -83.20059204]
[116.01093292 -68.30687714]
[122.58438110 -81.78981781]
[134.30303955 -91.15319824]
[148.90423584 -94.58910370]
[163.56867981 -91.43410492]
[175.46490479 -82.29737854]
[182.29595947 -68.94309998]
[182.74284363 -53.94975662]
[176.71928406 -40.21233749]
[165.38833618 -30.38331604]
[150.93782043 -26.36052513]
[136.15792847 -28.92070389]
[123.90239716 -37.56951904]
[116.53722382 -50.63824463]
[115.64440918 -35.66484070]
[114.75159454 -20.69143486]
[121.71763611 -7.52619457]
[113.17265320 5.78897858]
[112.27983856 20.76238441]
[119.24588013 33.92762375]
[110.70089722 47.24279785]
[109.80808258 62.21620178]
[108.91526031 77.18960571]
[108.02244568 92.16301727]
[119.18310547 82.14105225]
[134.16990662 81.51204681]
[146.13110352 90.56356812]
[149.59817505 105.15737915]
[142.98603821 118.62139130]
[129.31767273 124.80004120]
[114.84205627 120.86852264]
[106.17677307 108.62249756]
[103.73104095 123.42176819]
[110.61298370 140.50160217]
[98.95723724 153.62068176]
[96.73211670 168.45472717]
[110.25519562 177.50239563]
[118.44950867 191.49156189]
[119.71833801 207.59593201]
[113.85824585 222.58735657]
[102.08972168 233.48301697]
[86.80331421 238.13880920]
[84.79930115 253.00433350]
[82.79528809 267.86987305]
[80.79126740 282.73538208]
[78.78725433 297.60092163]
[76.78324127 312.46646118]
[74.77922821 327.33197021]
[72.77521515 342.19750977]
[70.88192749 357.07754517]
[69.09945679 371.97125244]
[67.31699371 386.86495972]
[82.06209564 389.64971924]
[96.58556366 393.42358398]
[110.82112122 398.16928101]
[124.70381927 403.86520386]
[138.17031860 410.48535156]
[151.15916443 417.99954224]
[163.61109924 426.37344360]
[175.46929932 435.56887817]
[186.67965698 445.54388428]
[197.19102478 456.25296021]
[206.95545959 467.64718628]
[215.92837524 479.67465210]
[224.06886292 492.28042603]
[231.33975220 505.40701294]
[237.70787048 518.99450684]
[243.14418030 532.98089600]
[247.62385559 547.30242920]
[251.12648010 561.89367676]
[253.63604736 576.68804932]
[255.14111328 591.61816406]
[255.63482666 606.61578369]
[255.11491394 621.61254883]
[253.58375549 636.53997803]
[251.04835510 651.33001709]
[247.52024841 665.91516113]
[243.01554871 680.22875977]
[237.55480957 694.20568848]
[231.16296387 707.78204346]
[223.86914062 720.89587402]
[215.70666504 733.48742676]
[206.71273804 745.49914551]
[196.92842102 756.87634277]
[186.39834595 767.56701660]
[175.17057800 777.52239990]
[163.29632568 786.69714355]
[150.82978821 795.04925537]
[137.82783508 802.54071045]
[124.34979248 809.13732910]
[110.45716095 814.80902100]
[96.21333313 819.52984619]
[81.68329620 823.27832031]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[50 169]
[51 168]
[52 167]
[54 166]
[55 165]
[56 164]
[57 163]
[58 162]
[59 161]
[60 160]
[61 159]
[68 153]
[69 152]
[72 150]
[73 149]
[74 141]
[75 140]
[76 139]
[77 138]
[79 136]
[80 135]
[82 133]
[83 132]
[84 131]
[85 118]
[86 117]
[87 116]
[88 115]
[89 114]
[90 113]
[91 112]
[92 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
