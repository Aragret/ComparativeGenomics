%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[180.77827454 590.36688232]
[191.67286682 579.95507812]
[204.67520142 572.33697510]
[200.27420044 557.99713135]
[195.87319946 543.65728760]
[184.74223328 533.76025391]
[188.09005737 518.29730225]
[183.68905640 503.95745850]
[179.28805542 489.61761475]
[174.88705444 475.27777100]
[163.75610352 465.38073730]
[167.10391235 449.91781616]
[156.56768799 443.97518921]
[152.78378296 432.06445312]
[158.30050659 420.40560913]
[154.00637817 406.03338623]
[149.60539246 391.69354248]
[139.06916809 385.75094604]
[135.28526306 373.84017944]
[140.80198669 362.18133545]
[136.61497498 347.77755737]
[132.42796326 333.37377930]
[128.24095154 318.97000122]
[115.10460663 312.04382324]
[110.65319061 297.49597168]
[118.00708008 283.76434326]
[107.02470398 273.70269775]
[110.60236359 258.29129028]
[106.31525421 272.66561890]
[96.28009033 283.81439209]
[82.43451691 289.58502197]
[67.45188904 288.86325073]
[54.22512436 281.78845215]
[45.30810165 269.72668457]
[42.42255402 255.00683594]
[46.12563705 240.47111511]
[55.70234680 228.92613220]
[69.30356598 222.60104370]
[84.30311584 222.71713257]
[97.80481720 229.25195312]
[107.20227051 240.94491577]
[105.64174652 226.02632141]
[104.08122253 211.10771179]
[102.52069855 196.18910217]
[93.50130463 184.33584595]
[99.76091766 169.80560303]
[98.20039368 154.88700867]
[96.63987732 139.96839905]
[95.07935333 125.04979706]
[93.51882935 110.13118744]
[91.73635864 95.23747253]
[89.73234558 80.37194061]
[87.72833252 65.50641632]
[85.17250061 50.72576141]
[74.74687195 38.82547760]
[79.68289185 24.77254295]
[76.57878113 10.09724140]
[63.61616516 1.45963597]
[60.67721176 -13.46742725]
[68.99172974 -25.77207375]
[58.56610107 -37.67235947]
[63.50212479 -51.72529221]
[60.39801407 -66.40059662]
[57.18474197 -81.05238342]
[53.86248016 -95.67984009]
[50.54022217 -110.30730438]
[47.21796036 -124.93476105]
[43.89570236 -139.56222534]
[40.57344437 -154.18968201]
[37.25118256 -168.81713867]
[33.92892456 -183.44459534]
[30.60666466 -198.07206726]
[27.05902481 -201.90107727]
[25.49161339 -206.27102661]
[25.77887726 -210.33705139]
[27.47813225 -213.42652893]
[24.81233788 -228.18774414]
[12.59468460 -241.96492004]
[19.16833115 -258.23617554]
[16.28305817 -272.95608521]
[13.39778614 -287.67596436]
[10.51251316 -302.39587402]
[0.26521468 -314.45004272]
[5.40991926 -328.42794800]
[-4.83737946 -340.48211670]
[0.30732551 -354.46002197]
[-14.75114727 -355.04232788]
[-29.26926231 -359.08227539]
[-42.46407318 -366.36193848]
[-53.62400055 -376.48876953]
[-62.14720917 -388.91662598]
[-67.57404327 -402.97531128]
[-69.61184692 -417.90661621]
[-68.15072632 -432.90533447]
[-63.26947403 -447.16262817]
[-55.23133087 -459.90957642]
[-44.46977997 -470.45880127]
[-31.56518364 -478.24133301]
[-17.21346664 -482.83752441]
[-2.18860269 -483.99951172]
[12.69913864 -481.66458130]
[26.64687920 -475.95867920]
[38.90243530 -467.18951416]
[48.80488205 -455.83001709]
[55.82019043 -442.49276733]
[59.57003403 -427.89703369]
[59.85219193 -412.82995605]
[56.65143967 -398.10406494]
[50.14039993 -384.51351929]
[40.67019653 -372.79122925]
[28.75155067 -363.56936646]
[15.02721691 -357.34527588]
[25.06814194 -346.34396362]
[20.12981033 -331.31320190]
[30.17073631 -320.31188965]
[25.23240471 -305.28112793]
[28.11767769 -290.56124878]
[31.00295067 -275.84133911]
[33.88822174 -261.12145996]
[43.74903107 -254.11495972]
[46.27326584 -241.87518311]
[39.57355499 -230.85354614]
[42.23934937 -216.09233093]
[45.23412323 -201.39431763]
[48.55638504 -186.76686096]
[51.87864304 -172.13940430]
[55.20090103 -157.51194763]
[58.52316284 -142.88447571]
[61.84542084 -128.25701904]
[65.16767883 -113.62956238]
[68.48994446 -99.00209808]
[71.81220245 -84.37464142]
[76.35909271 -78.54818726]
[75.07331848 -69.50470734]
[78.17742920 -54.82940292]
[88.38103485 -43.97879410]
[83.66703033 -28.87618446]
[96.25185394 -20.99215126]
[99.60891724 -6.15352631]
[91.25408936 6.99313116]
[94.35820007 21.66843414]
[104.56180573 32.51904297]
[99.84780121 47.62165070]
[110.09297943 36.66553879]
[125.05780792 37.69218826]
[133.71076965 49.94478989]
[129.67323303 64.39118195]
[115.92150879 70.38201904]
[102.59386444 63.50240326]
[104.59787750 78.36792755]
[106.60189056 93.23345947]
[109.94493866 97.27548981]
[110.78533173 102.90283966]
[108.43743134 108.57066345]
[109.99795532 123.48927307]
[111.55847931 138.40788269]
[113.11900330 153.32647705]
[114.67952728 168.24508667]
[123.81053925 181.16542053]
[117.43930054 194.62858582]
[118.99982452 209.54718018]
[120.56034851 224.46578979]
[122.12087250 239.38439941]
[125.00614166 254.10429382]
[136.28800964 265.19619751]
[132.41085815 279.57733154]
[145.98001099 287.22689819]
[150.02104187 301.89401245]
[142.64472961 314.78298950]
[146.83174133 329.18676758]
[151.01875305 343.59054565]
[155.20576477 357.99432373]
[168.79043579 370.42568970]
[163.94523621 387.29254150]
[168.34623718 401.63238525]
[173.85577393 408.91818237]
[172.70428467 416.21859741]
[186.28895569 428.64993286]
[181.44375610 445.51681519]
[192.88951111 456.43951416]
[189.22689819 470.87677002]
[193.62789917 485.21661377]
[198.02890015 499.55645752]
[202.42990112 513.89630127]
[213.87564087 524.81903076]
[210.21304321 539.25628662]
[214.61404419 553.59613037]
[219.01504517 567.93597412]
[234.05238342 566.94854736]
[248.91201782 569.45617676]
[262.79257202 575.32360840]
[274.94549561 584.23449707]
[284.71536255 595.70819092]
[291.57534790 609.12597656]
[295.15548706 623.76428223]
[295.26266479 638.83361816]
[291.89114380 653.52136230]
[285.22274780 667.03540039]
[275.61709595 678.64691162]
[263.59216309 687.72979736]
[249.79650879 693.79412842]
[234.97404480 696.51287842]
[219.92417908 695.73944092]
[205.45851135 691.51556396]
[192.35716248 684.06903076]
[181.32666016 673.80139160]
[172.96188354 661.26629639]
[167.71392822 647.13989258]
[165.86579895 632.18395996]
[167.51718140 617.20495605]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 188]
[4 187]
[5 186]
[7 184]
[8 183]
[9 182]
[10 181]
[12 179]
[15 177]
[16 175]
[17 174]
[20 172]
[21 171]
[22 170]
[23 169]
[26 166]
[28 164]
[41 163]
[42 162]
[43 161]
[44 160]
[46 158]
[47 157]
[48 156]
[49 155]
[50 154]
[51 151]
[52 150]
[53 149]
[54 143]
[56 141]
[57 140]
[60 137]
[62 135]
[63 134]
[64 132]
[65 131]
[66 130]
[67 129]
[68 128]
[69 127]
[70 126]
[71 125]
[72 124]
[76 123]
[77 122]
[79 119]
[80 118]
[81 117]
[82 116]
[84 114]
[86 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
