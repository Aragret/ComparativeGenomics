%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[128.87699890 616.00103760]
[130.14477539 601.03186035]
[133.39651489 586.36523438]
[138.57415771 572.26293945]
[145.58531189 558.97656250]
[154.30485535 546.74334717]
[164.57719421 535.78143311]
[176.21899414 526.28662109]
[189.02247620 518.42822266]
[182.94865417 504.71298218]
[176.87481689 490.99771118]
[170.80097961 477.28244019]
[164.72714233 463.56716919]
[158.65330505 449.85189819]
[152.57948303 436.13662720]
[148.82135010 450.65823364]
[137.88140869 460.92065430]
[123.14952087 463.74401855]
[109.19051361 458.25347900]
[100.32974243 446.15029907]
[99.31282043 431.18481445]
[106.45483398 417.99423218]
[119.54277039 410.66580200]
[134.52117920 411.47030640]
[146.74900818 420.15866089]
[142.56199646 405.75488281]
[138.37498474 391.35110474]
[134.18797302 376.94732666]
[130.00096130 362.54354858]
[125.59996033 348.20370483]
[120.98595428 333.93096924]
[116.37194061 319.65823364]
[111.75793457 305.38549805]
[105.00644684 318.78018188]
[91.27470398 324.81668091]
[76.84066772 320.73516846]
[68.30339050 308.40167236]
[69.56599426 293.45492554]
[80.05123901 282.72833252]
[94.96540833 281.12597656]
[107.49105835 289.38189697]
[104.38694763 274.70660400]
[101.28283691 260.03131104]
[98.17872620 245.35600281]
[92.46749115 259.22616577]
[81.02410126 268.92404175]
[66.40504456 272.28311157]
[51.87625885 268.55291748]
[40.68350601 258.56680298]
[35.32728195 244.55570984]
[37.00417328 229.64973450]
[45.33956528 217.17892456]
[58.47130585 209.92927551]
[73.46572876 209.52038574]
[86.97304535 216.04359436]
[95.97570038 228.04164124]
[95.30591583 213.05659485]
[94.63613129 198.07156372]
[93.96634674 183.08651733]
[91.10893250 179.25973511]
[90.62515259 173.59732056]
[93.50643921 167.64671326]
[93.28311157 152.64837646]
[93.05978394 137.65003967]
[92.83645630 122.65170288]
[92.61312866 107.65336609]
[91.27489471 92.71318054]
[88.82917023 77.91390991]
[86.38343811 63.11463547]
[76.79046631 74.64611053]
[61.86645889 76.15409088]
[50.16056824 66.77474976]
[48.37845993 51.88098907]
[57.54100418 40.00463486]
[72.39948273 37.94900513]
[84.44178772 46.89084244]
[83.32614136 31.93238640]
[74.58386230 18.74591255]
[81.35311890 5.47841787]
[77.95243835 -0.19140430]
[77.92911530 -5.87440348]
[80.43372345 -9.94085121]
[79.76393890 -24.92588997]
[79.09414673 -39.91093063]
[75.86378479 -45.67948914]
[76.00967407 -51.36066437]
[78.63424683 -55.35073471]
[78.41091919 -70.34907532]
[78.18759155 -85.34741211]
[77.96426392 -100.34574890]
[77.74093628 -115.34408569]
[74.48410797 -123.87818909]
[77.62760162 -130.56700134]
[75.01614380 -135.08665466]
[74.45553589 -139.69523621]
[75.63622284 -143.59664917]
[77.97753906 -146.23304749]
[78.64733124 -161.21807861]
[79.31711578 -176.20312500]
[65.41143036 -182.28558350]
[54.64476013 -192.98339844]
[48.47320938 -206.84977722]
[47.73143005 -222.00939941]
[52.51974106 -236.41206360]
[62.19056320 -248.10990906]
[75.43599701 -255.52090454]
[90.46470642 -257.64279175]
[105.24417877 -254.18856812]
[117.77561188 -245.62542725]
[126.36424255 -233.11143494]
[129.84851074 -218.33901978]
[127.75721741 -203.30603027]
[120.37318420 -190.04554749]
[108.69503784 -180.35093689]
[94.30215454 -175.53334045]
[93.63237000 -160.54829407]
[92.96257782 -145.56326294]
[92.62760162 -130.56700134]
[92.73927307 -115.56741333]
[92.96260071 -100.56907654]
[93.18592834 -85.57073975]
[93.40925598 -70.57240295]
[93.63258362 -55.57406235]
[94.07918549 -40.58071518]
[94.74897766 -25.59567451]
[95.41876221 -10.61063671]
[96.31157684 4.36276913]
[104.97405243 16.47931480]
[98.28459930 30.81673813]
[99.40024567 45.77519226]
[101.18270874 60.66891098]
[103.62844086 75.46817780]
[106.07416534 90.26744843]
[112.83032990 76.87512970]
[125.32306671 68.57263184]
[140.28680420 67.53019714]
[153.81004333 74.02032471]
[162.35786438 86.34651184]
[163.69587708 101.28671265]
[157.47431946 114.93560791]
[145.31950378 123.72539520]
[130.40866089 125.35845947]
[116.63946533 119.40791321]
[107.61146545 107.43003845]
[107.83479309 122.42837524]
[108.05812073 137.42671204]
[108.28144836 152.42504883]
[108.50477600 167.42338562]
[108.95138550 182.41673279]
[109.62117004 197.40177917]
[110.29095459 212.38681030]
[110.96073914 227.37185669]
[112.85402679 242.25189209]
[115.95813751 256.92718506]
[119.06224823 271.60247803]
[122.16635895 286.27780151]
[126.03066254 300.77148438]
[130.64466858 315.04421997]
[135.25868225 329.31695557]
[139.87269592 343.58969116]
[144.51528931 348.29690552]
[145.87901306 353.81390381]
[144.40473938 358.35653687]
[148.59175110 372.76031494]
[152.77876282 387.16409302]
[156.96577454 401.56787109]
[161.15278625 415.97164917]
[166.29473877 430.06280518]
[172.36857605 443.77807617]
[178.44241333 457.49334717]
[184.51625061 471.20858765]
[190.59008789 484.92385864]
[196.66390991 498.63912964]
[202.73774719 512.35443115]
[217.16165161 508.15505981]
[232.01658630 505.91577148]
[247.03744507 505.67651367]
[261.95617676 507.44152832]
[276.50650024 511.17932129]
[290.42880249 516.82318115]
[303.47457886 524.27246094]
[315.41101074 533.39410400]
[326.02511597 544.02539062]
[335.12747192 555.97656250]
[342.55560303 569.03436279]
[348.17694092 582.96575928]
[351.89120483 597.52209473]
[353.63208008 612.44366455]
[353.36853027 627.46411133]
[351.10522461 642.31542969]
[346.88256836 656.73254395]
[340.77590942 670.45812988]
[332.89425659 683.24731445]
[323.37823486 694.87176514]
[312.39770508 705.12414551]
[300.14855957 713.82141113]
[286.84948730 720.80841064]
[272.73776245 725.96032715]
[258.06524658 729.18536377]
[243.09379578 730.42590332]
[228.09057617 729.65979004]
[213.32334900 726.90075684]
[199.05564880 722.19799805]
[185.54209900 715.63537598]
[173.02386475 707.33013916]
[161.72436523 697.43041992]
[151.84521484 686.11291504]
[143.56275940 673.57958984]
[137.02478027 660.05407715]
[132.34797668 645.77789307]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 174]
[10 173]
[11 172]
[12 171]
[13 170]
[14 169]
[15 168]
[25 167]
[26 166]
[27 165]
[28 164]
[29 163]
[30 160]
[31 159]
[32 158]
[33 157]
[41 156]
[42 155]
[43 154]
[44 153]
[56 152]
[57 151]
[58 150]
[59 149]
[62 148]
[63 147]
[64 146]
[65 145]
[66 144]
[67 133]
[68 132]
[69 131]
[76 130]
[77 129]
[79 127]
[82 126]
[83 125]
[84 124]
[87 123]
[88 122]
[89 121]
[90 120]
[91 119]
[93 118]
[97 117]
[98 116]
[99 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
