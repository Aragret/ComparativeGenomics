%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxGAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[67.93520355 660.59222412]
[59.44318390 648.12030029]
[54.46940613 633.87518311]
[53.35298538 618.82806396]
[56.17004013 604.00488281]
[62.72850418 590.41632080]
[72.58120728 578.98889160]
[85.05638123 570.50164795]
[99.30343628 565.53338623]
[98.18778992 550.57495117]
[97.07213593 535.61645508]
[95.84516144 520.66674805]
[94.50692749 505.72656250]
[85.66500854 493.74032593]
[92.14026642 479.30490112]
[90.80203247 464.36471558]
[89.46379852 449.42453003]
[88.12556458 434.48434448]
[84.39785004 428.10266113]
[86.88031769 419.31204224]
[85.76467133 404.35357666]
[76.04300690 415.77676392]
[61.27459335 418.40237427]
[48.21134186 411.03002930]
[42.82560349 397.03024292]
[47.57965851 382.80355835]
[60.30002213 374.85418701]
[75.17111206 376.81649780]
[85.39479828 387.79507446]
[85.84140778 372.80169678]
[78.48647308 359.84970093]
[86.63122559 346.28604126]
[87.07782745 331.29266357]
[79.72290039 318.34066772]
[87.86765289 304.77700806]
[88.31425476 289.78363037]
[88.76086426 274.79028320]
[81.40592957 261.83828735]
[89.55068207 248.27461243]
[89.99729156 233.28126526]
[90.44389343 218.28791809]
[78.39875031 206.55108643]
[78.57250214 189.39634705]
[91.34601593 177.44409180]
[91.56934357 162.44575500]
[91.79267120 147.44740295]
[92.01599884 132.44906616]
[92.23932648 117.45073700]
[82.22293854 106.98085785]
[82.43866730 92.49294281]
[92.76233673 82.32593536]
[85.23136139 68.41209412]
[93.15729523 55.80143356]
[93.38062286 40.80309677]
[81.01608276 34.26236725]
[72.71554565 23.08573532]
[70.05308533 9.48832417]
[73.49236298 -3.86534643]
[82.30696869 -14.38349247]
[94.73302460 -20.05008316]
[95.17962646 -35.04343414]
[95.62623596 -50.03678513]
[96.07283783 -65.03013611]
[96.51944733 -80.02348328]
[96.96604919 -95.01683044]
[85.46392059 -102.61235046]
[79.26602173 -114.80269623]
[79.89590454 -128.35528564]
[87.08221436 -139.73513794]
[98.85743713 -146.02691650]
[99.52722168 -161.01194763]
[92.41384888 -175.14384460]
[100.71173096 -187.51293945]
[101.38151550 -202.49797058]
[102.05130005 -217.48301697]
[102.72108459 -232.46804810]
[103.39086914 -247.45309448]
[104.06065369 -262.43814087]
[104.73044586 -277.42315674]
[105.06542206 -292.41943359]
[105.06542206 -307.41943359]
[105.06542206 -322.41943359]
[105.06542206 -337.41943359]
[97.32811737 -351.21960449]
[105.06542206 -363.94686890]
[105.06542206 -378.94686890]
[97.32811737 -392.74703979]
[105.06542206 -405.47430420]
[105.06542206 -420.47430420]
[105.06542206 -435.47430420]
[105.06542206 -450.47430420]
[102.09585571 -456.38137817]
[102.49527740 -462.05035400]
[105.29539490 -465.91925049]
[105.74200439 -480.91259766]
[106.18860626 -495.90594482]
[103.31609344 -504.57696533]
[106.75512695 -511.11874390]
[107.42491150 -526.10375977]
[93.51923370 -532.18627930]
[82.75256348 -542.88409424]
[76.58100891 -556.75042725]
[75.83923340 -571.91009521]
[80.62754059 -586.31274414]
[90.29836273 -598.01055908]
[103.54380035 -605.42156982]
[118.57250214 -607.54345703]
[133.35197449 -604.08923340]
[145.88342285 -595.52606201]
[154.47204590 -583.01208496]
[157.95631409 -568.23968506]
[155.86502075 -553.20666504]
[148.48098755 -539.94622803]
[136.80284119 -530.25158691]
[122.40995026 -525.43402100]
[121.74016571 -510.44897461]
[121.18196106 -495.45935059]
[120.73535156 -480.46600342]
[120.28874969 -465.47265625]
[120.06542206 -450.47430420]
[120.06542206 -435.47430420]
[120.06542206 -420.47430420]
[120.06542206 -405.47430420]
[127.80271912 -392.74703979]
[120.06542206 -378.94686890]
[120.06542206 -363.94686890]
[127.80271912 -351.21960449]
[120.06542206 -337.41943359]
[120.06542206 -322.41943359]
[120.06542206 -307.41943359]
[120.06542206 -292.41943359]
[122.28668213 -289.68112183]
[123.29198456 -285.73086548]
[122.52615356 -281.15191650]
[119.71548462 -276.75338745]
[119.04569244 -261.76834106]
[118.37590790 -246.78330994]
[117.70612335 -231.79826355]
[117.03633881 -216.81323242]
[116.36655426 -201.82818604]
[115.69676971 -186.84315491]
[122.85804749 -173.78308105]
[114.51226044 -160.34216309]
[113.84247589 -145.35713196]
[127.00016785 -135.54119873]
[131.76205444 -119.65767670]
[126.06172943 -103.90942383]
[111.95940399 -94.57022858]
[111.51279449 -79.57688141]
[111.06619263 -64.58352661]
[110.61958313 -49.59017944]
[110.17298126 -34.59682846]
[109.72637177 -19.60347748]
[123.67719269 -11.44951153]
[131.65824890 2.70882678]
[131.40872192 19.05369186]
[122.90204620 33.12252045]
[108.37895966 41.02642441]
[108.15563202 56.02476120]
[115.70258331 68.86582184]
[107.76067352 82.54926300]
[117.77706146 93.01914215]
[117.56133270 107.50705719]
[107.23766327 117.67406464]
[107.01433563 132.67239380]
[106.79100800 147.67073059]
[106.56768036 162.66908264]
[106.34435272 177.66741943]
[116.77571869 186.18804932]
[120.34301758 198.97416687]
[115.95973969 211.29766846]
[105.43724823 218.73451233]
[104.99063873 233.72785950]
[104.54403687 248.72122192]
[111.86701965 262.74563599]
[103.75421143 275.23690796]
[103.30760956 290.23025513]
[102.86100006 305.22360229]
[110.18399048 319.24801636]
[102.07118225 331.73928833]
[101.62457275 346.73263550]
[108.94756317 360.75704956]
[100.83475494 373.24832153]
[100.38814545 388.24166870]
[100.72312164 403.23791504]
[101.83877563 418.19638062]
[103.06575012 433.14611816]
[104.40398407 448.08630371]
[105.74221802 463.02648926]
[107.08045197 477.96667480]
[116.01808929 491.02151489]
[109.44711304 504.38833618]
[110.78534698 519.32849121]
[114.66789246 527.59674072]
[112.03059387 534.50085449]
[113.14624023 549.45928955]
[114.26188660 564.41772461]
[129.08831787 567.21765137]
[142.68446350 573.76037598]
[154.12332153 583.59979248]
[162.62496948 596.06512451]
[167.60974121 610.30645752]
[168.73779297 625.35266113]
[165.93217468 640.17803955]
[159.38420105 653.77166748]
[149.54032898 665.20672607]
[137.07171631 673.70355225]
[122.82850647 678.68280029]
[107.78180695 679.80505371]
[92.95754242 676.99371338]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 197]
[10 196]
[11 195]
[12 193]
[13 192]
[15 190]
[16 189]
[17 188]
[18 187]
[20 186]
[21 185]
[29 184]
[30 183]
[32 181]
[33 180]
[35 178]
[36 177]
[37 176]
[39 174]
[40 173]
[41 172]
[44 168]
[45 167]
[46 166]
[47 165]
[48 164]
[51 161]
[53 159]
[54 158]
[60 153]
[61 152]
[62 151]
[63 150]
[64 149]
[65 148]
[70 144]
[71 143]
[73 141]
[74 140]
[75 139]
[76 138]
[77 137]
[78 136]
[79 135]
[80 131]
[81 130]
[82 129]
[83 128]
[85 126]
[86 125]
[88 123]
[89 122]
[90 121]
[91 120]
[94 119]
[95 118]
[96 117]
[98 116]
[99 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
