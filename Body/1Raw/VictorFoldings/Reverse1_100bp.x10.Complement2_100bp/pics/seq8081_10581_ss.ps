%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[37.10194016 710.87347412]
[31.27764893 696.71948242]
[32.70974350 681.48114014]
[41.06913376 668.66009521]
[54.43489838 661.20251465]
[53.98829269 646.20916748]
[53.54168701 631.21582031]
[53.09508133 616.22247314]
[52.42529678 601.23742676]
[51.53247833 586.26403809]
[50.63966370 571.29064941]
[39.36360931 561.62695312]
[38.24486542 546.45452881]
[48.45744705 534.69268799]
[47.56463242 519.71929932]
[46.67181396 504.74588013]
[43.75774765 500.96206665]
[43.18971634 495.30746460]
[45.98208618 489.31463623]
[45.53548050 474.32128906]
[45.08887482 459.32794189]
[44.64226913 444.33456421]
[44.19566345 429.34121704]
[43.74905777 414.34786987]
[43.30245209 399.35452271]
[36.07119370 412.49639893]
[24.40938568 421.93051147]
[10.04698467 426.25732422]
[-4.88543129 424.83502197]
[-18.17272758 417.87460327]
[-27.84381485 406.40853882]
[-32.46403885 392.13781738]
[-31.34802437 377.17941284]
[-24.66132164 363.75225830]
[-13.39586258 353.84826660]
[0.77718818 348.93655396]
[15.75534248 349.74581909]
[29.31667900 356.15597534]
[39.44945526 367.21612549]
[44.65023041 381.28366089]
[47.31602859 366.52246094]
[33.06542206 360.54376221]
[20.49188995 351.54675293]
[10.22464752 339.97787476]
[2.77834415 326.41235352]
[-1.47273707 311.52560425]
[-2.31349301 296.05966187]
[0.30111888 280.78610229]
[6.24367762 266.46755981]
[15.22050667 253.81977844]
[26.78618240 243.47563171]
[40.36564255 235.95359802]
[55.28276443 231.63174438]
[70.79405212 230.72869873]
[73.23977661 215.92942810]
[75.68550110 201.13015747]
[78.13123322 186.33088684]
[67.55591583 175.87619019]
[65.13596344 161.02331543]
[72.00626373 147.43463135]
[85.71914673 140.41587830]
[88.16487122 125.61660004]
[90.61060333 110.81732941]
[85.86773682 97.66450500]
[94.59012604 86.73694611]
[84.14410400 72.70484161]
[87.02185059 55.79231644]
[100.96112061 46.38298035]
[103.18624115 31.54893684]
[105.41135406 16.71489334]
[107.63647461 1.88084984]
[102.03191376 -12.91440105]
[111.57158661 -24.35310173]
[113.79669952 -39.18714523]
[116.02182007 -54.02119064]
[118.24694061 -68.85523224]
[108.25759888 -76.37061310]
[102.44517517 -87.35624695]
[101.85844421 -99.69866943]
[106.54746246 -111.05270386]
[115.56566620 -119.28707886]
[127.16024017 -122.88444519]
[129.82603455 -137.64566040]
[132.49183655 -152.40687561]
[127.33026123 -167.36244202]
[137.20628357 -178.51203918]
[132.04470825 -193.46760559]
[141.92073059 -204.61720276]
[144.14584351 -219.45124817]
[145.92831421 -234.34495544]
[147.71078491 -249.23867798]
[140.07304382 -265.99417114]
[151.13137817 -279.62063599]
[152.69189453 -294.53924561]
[154.25242615 -309.45782471]
[155.81294250 -324.37643433]
[157.37347412 -339.29504395]
[143.23197937 -344.53613281]
[130.83863831 -353.13009644]
[120.97250366 -364.53668213]
[114.25378418 -378.03887939]
[111.10480499 -392.78793335]
[111.72352600 -407.85671997]
[116.07104492 -422.29797363]
[123.87408447 -435.20391846]
[134.64213562 -445.76327515]
[147.69828796 -453.31228638]
[162.22184753 -457.37637329]
[177.29985046 -457.70010376]
[191.98446655 -454.26312256]
[205.35261536 -447.28149414]
[216.56396484 -437.19406128]
[224.91375732 -424.63491821]
[229.87712097 -410.39358521]
[231.14204407 -395.36523438]
[228.62902832 -380.49459839]
[222.49604797 -366.71646118]
[213.12860107 -354.89691162]
[201.11555481 -345.77893066]
[187.21205139 -339.93569946]
[172.29206848 -337.73452759]
[170.73155212 -322.81591797]
[169.17102051 -307.89730835]
[167.61050415 -292.97869873]
[166.04998779 -278.06011963]
[173.42111206 -268.46881104]
[172.24310303 -256.02709961]
[162.60449219 -247.45620728]
[160.82203674 -232.56250000]
[159.03956604 -217.66877747]
[160.66413879 -215.38427734]
[161.48167419 -212.31863403]
[161.19012451 -208.77597046]
[159.60298157 -205.16412354]
[156.68194580 -201.95140076]
[162.03419495 -188.05166626]
[151.96749878 -175.84625244]
[157.31974792 -161.94650269]
[147.25305176 -149.74108887]
[144.58724976 -134.97987366]
[141.92146301 -120.21865082]
[154.71617126 -108.04627228]
[157.66871643 -90.47546387]
[149.41069031 -74.51035309]
[133.08097839 -66.63011169]
[130.85586548 -51.79607010]
[128.63075256 -36.96202850]
[126.40563202 -22.12798500]
[132.16934204 -8.39376354]
[122.47052002 4.10596704]
[120.24539948 18.94001007]
[118.02028656 33.77405548]
[115.79516602 48.60809708]
[124.82847595 57.79661179]
[126.95185089 70.70294189]
[121.16899872 82.65154266]
[109.38939667 89.18267059]
[114.13226318 102.33549500]
[105.40987396 113.26305389]
[102.96414948 128.06233215]
[100.51841736 142.86160278]
[111.24401855 153.91906738]
[113.37710571 168.99565125]
[106.30715179 182.28022766]
[92.93050385 188.77662659]
[90.48477173 203.57589722]
[88.03904724 218.37516785]
[85.59332275 233.17443848]
[99.13923645 238.56539917]
[111.25881195 246.65820312]
[121.42099762 257.09518433]
[129.18115234 269.41607666]
[134.20048523 283.07818604]
[136.26086426 297.48043823]
[135.27426147 311.98977661]
[131.28654480 325.96887207]
[124.47536469 338.80432129]
[115.14217377 349.93341064]
[103.69895172 358.86877441]
[90.65000153 365.21987915]
[76.56969452 368.71002197]
[62.07724380 369.18826294]
[59.41144943 383.94946289]
[58.29579926 398.90792847]
[58.74240494 413.90127563]
[59.18901062 428.89462280]
[59.63561630 443.88796997]
[60.08222580 458.88131714]
[60.52883148 473.87466431]
[60.97543716 488.86801147]
[61.64522171 503.85305786]
[62.53803635 518.82647705]
[63.43085098 533.79986572]
[74.96874237 544.26483154]
[75.66088867 559.46270752]
[65.61306763 570.39782715]
[66.50588226 585.37121582]
[67.39870453 600.34460449]
[70.71459198 606.06445312]
[70.65330505 611.74719238]
[68.08843231 615.77587891]
[68.53503418 630.76922607]
[68.98164368 645.76257324]
[69.42824554 660.75592041]
[83.21419525 667.40472412]
[92.32189178 679.70544434]
[94.65844727 694.83154297]
[89.68694305 709.30712891]
[78.54979706 719.80584717]
[63.80624008 723.91510010]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 204]
[6 203]
[7 202]
[8 201]
[9 198]
[10 197]
[11 196]
[14 193]
[15 192]
[16 191]
[19 190]
[20 189]
[21 188]
[22 187]
[23 186]
[24 185]
[25 184]
[40 183]
[41 182]
[54 168]
[55 167]
[56 166]
[57 165]
[61 161]
[62 160]
[63 159]
[65 157]
[68 153]
[69 152]
[70 151]
[71 150]
[73 148]
[74 147]
[75 146]
[76 145]
[82 141]
[83 140]
[84 139]
[86 137]
[88 135]
[89 130]
[90 129]
[91 128]
[93 125]
[94 124]
[95 123]
[96 122]
[97 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
