%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAUCGCCCCACUACGGACAACCCCCGGUCACGGGAGGAUUAACCCCCCAUCCCCGAUCCGACCUCACCAUUUUCCGAGUCUUUUUAGGACGCUUCUUUxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[86.66089630 563.55584717]
[80.23605347 549.77941895]
[79.57727051 534.59277344]
[84.78501129 520.31170654]
[95.06513977 509.11407471]
[108.84999847 502.70733643]
[108.18021393 487.72232056]
[107.51042938 472.73727417]
[106.72911072 457.75762939]
[105.83629608 442.78424072]
[104.94347382 427.81082153]
[104.05065918 412.83743286]
[103.15784454 397.86401367]
[94.32151031 389.60290527]
[93.45514679 377.13562012]
[101.56729889 367.10787964]
[93.26941681 354.73880005]
[100.38278961 340.60690308]
[99.71300507 325.62185669]
[99.04322052 310.63681030]
[98.37343597 295.65176392]
[97.25778198 280.69332886]
[95.69726562 265.77471924]
[85.43492889 276.71475220]
[70.44762421 277.33178711]
[59.32075882 267.27230835]
[58.42830276 252.29888916]
[68.28149414 240.98895264]
[83.23598480 239.82136536]
[94.72471619 249.46411133]
[94.50138855 234.46577454]
[94.27806091 219.46743774]
[83.44475555 209.30992126]
[83.00460815 194.10266113]
[93.73220062 182.80856323]
[93.50887299 167.81022644]
[93.28554535 152.81188965]
[93.06221771 137.81355286]
[92.83889008 122.81521606]
[92.61556244 107.81687927]
[89.51145172 93.14157867]
[83.64249420 79.33740234]
[77.77352905 65.53321838]
[71.17265320 79.00276184]
[57.02597809 83.98989105]
[43.43735886 77.63777161]
[38.19097900 63.58517456]
[44.29219818 49.88206863]
[58.24596405 44.37821579]
[72.05825806 50.22579956]
[67.44424438 35.95306396]
[62.83023834 21.68033218]
[51.22313690 10.92925167]
[54.67037964 -3.56094360]
[50.05636978 -17.83367729]
[45.44235992 -32.10641098]
[33.83525848 -42.85749054]
[37.28250504 -57.34768677]
[31.66510391 -64.55064392]
[32.70775986 -71.86738586]
[28.30676270 -86.20722961]
[23.90576553 -100.54708099]
[18.39622879 -107.83287811]
[19.54770660 -115.13327789]
[15.36069489 -129.53706360]
[11.17368412 -143.94084167]
[-1.29855072 -149.02590942]
[-8.46029949 -160.20266724]
[-7.88564205 -173.26986694]
[-0.00821654 -183.46672058]
[-3.98031282 -197.93124390]
[-7.95240879 -212.39576721]
[-11.92450523 -226.86029053]
[-26.80517197 -224.80583191]
[-41.82669067 -224.71133423]
[-56.73202896 -226.57839966]
[-71.26613617 -230.37509155]
[-85.18030548 -236.03643799]
[-98.23645782 -243.46556091]
[-110.21118164 -252.53533936]
[-120.89957428 -263.09060669]
[-130.11874390 -274.95068359]
[-137.71092224 -287.91271973]
[-143.54623413 -301.75482178]
[-147.52479553 -316.24020386]
[-149.57853699 -331.12097168]
[-149.67233276 -346.14248657]
[-147.80455017 -361.04772949]
[-144.00717163 -375.58166504]
[-138.34516907 -389.49557495]
[-130.91542053 -402.55136108]
[-121.84506226 -414.52566528]
[-111.28929901 -425.21353149]
[-99.42876434 -434.43212891]
[-86.46639252 -442.02371216]
[-72.62399292 -447.85836792]
[-58.13843155 -451.83624268]
[-43.25757217 -453.88928223]
[-28.23604012 -453.98233032]
[-13.33088112 -452.11386108]
[1.20286083 -448.31579590]
[15.11649418 -442.65310669]
[28.17193985 -435.22274780]
[40.14579773 -426.15182495]
[50.83318329 -415.59555054]
[60.05122375 -403.73458862]
[67.64218140 -390.77185059]
[73.47616577 -376.92916870]
[77.45334625 -362.44342041]
[79.50567627 -347.56246948]
[79.59803772 -332.54092407]
[77.72883606 -317.63586426]
[73.93007660 -303.10229492]
[68.26674652 -289.18893433]
[60.83575439 -276.13385010]
[51.76425552 -264.16040039]
[41.20748138 -253.47352600]
[29.34606361 -244.25605774]
[16.38297081 -236.66571045]
[2.54001880 -230.83238220]
[6.51211500 -216.36785889]
[10.48421097 -201.90333557]
[14.45630741 -187.43881226]
[29.41493034 -179.75256348]
[34.28202057 -163.30184937]
[25.57746506 -148.12785339]
[29.76447678 -133.72407532]
[33.95148849 -119.32028961]
[38.24561310 -104.94807434]
[42.64661026 -90.60823059]
[47.04760742 -76.26837921]
[51.55523682 -61.96169662]
[62.83231354 -52.23149490]
[59.71509552 -36.72042084]
[64.32910156 -22.44768715]
[68.94311523 -8.17495251]
[80.22019196 1.55524600]
[77.10297394 17.06632233]
[81.71697998 31.33905602]
[86.33099365 45.61178970]
[91.57770538 59.66426086]
[97.44667053 73.46843719]
[103.31562805 87.27261353]
[104.15158844 72.29592896]
[108.25511169 57.86813736]
[115.42597198 44.69320679]
[125.31429291 33.41397476]
[137.43760681 24.58077621]
[151.20437622 18.62460327]
[165.94290161 15.83607197]
[180.93405151 16.35123825]
[195.44636536 20.14496803]
[208.77178955 27.03215599]
[220.26011658 36.67676163]
[229.35079956 48.60820389]
[235.60031128 62.24431992]
[238.70370483 76.91976929]
[238.50956726 91.91851807]
[235.02735901 106.50872803]
[228.42700195 119.97851562]
[219.03053284 131.67066956]
[207.29643250 141.01469421]
[193.79722595 147.55467224]
[179.19155884 150.97151184]
[164.19209290 151.09848022]
[149.53068542 147.92941284]
[135.92269897 141.61889648]
[124.03207397 132.47486877]
[114.43901062 120.94348145]
[107.61389923 107.59355164]
[107.83722687 122.59188843]
[108.06055450 137.59022522]
[108.28388214 152.58856201]
[108.50720978 167.58689880]
[108.73053741 182.58523560]
[119.78964233 193.55493164]
[119.80246735 208.76855469]
[109.27639771 219.24411011]
[109.49972534 234.24244690]
[109.72305298 249.24078369]
[110.61586761 264.21420288]
[112.17639160 279.13281250]
[114.85037994 282.55386353]
[116.16448975 286.27377319]
[116.19174957 289.82830811]
[115.14846039 292.82464600]
[113.35847473 294.98199463]
[114.02825928 309.96704102]
[114.69804382 324.95205688]
[115.36782837 339.93710327]
[123.71362305 353.37802124]
[116.55233765 366.43807983]
[126.81982422 381.72402954]
[118.13124847 396.97119141]
[119.02406311 411.94461060]
[119.91688538 426.91799927]
[120.80970001 441.89141846]
[121.70251465 456.86480713]
[125.33716583 465.24499512]
[122.49546814 472.06747437]
[123.16525269 487.05252075]
[123.83503723 502.03756714]
[138.13650513 507.18890381]
[149.37464905 517.42474365]
[155.83570862 531.18426514]
[156.53445435 546.36907959]
[151.36428833 560.66375732]
[141.11366272 571.88842773]
[127.34571075 578.33142090]
[112.15993500 579.01019287]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 202]
[7 201]
[8 200]
[9 198]
[10 197]
[11 196]
[12 195]
[13 194]
[16 192]
[18 190]
[19 189]
[20 188]
[21 187]
[22 182]
[23 181]
[30 180]
[31 179]
[32 178]
[35 175]
[36 174]
[37 173]
[38 172]
[39 171]
[40 170]
[41 143]
[42 142]
[43 141]
[50 140]
[51 139]
[52 138]
[54 136]
[55 135]
[56 134]
[58 132]
[60 131]
[61 130]
[62 129]
[64 128]
[65 127]
[66 126]
[70 123]
[71 122]
[72 121]
[73 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
