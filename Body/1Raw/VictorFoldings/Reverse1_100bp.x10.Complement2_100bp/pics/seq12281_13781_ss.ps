%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCCUUCAGUCCCAAUCCCACCAAUAUCAUCACACGUACCAAUAAUGAAAAUAAACCUCAACGUGGUUUUAAAAACCCCGGAUUCUGGUUACCUAUCGAxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[237.29583740 489.46069336]
[232.04911804 475.40823364]
[226.80239868 461.35574341]
[221.55567932 447.30328369]
[210.68443298 441.99832153]
[206.19830322 430.33392334]
[211.01129150 418.36740112]
[205.97438049 404.23837280]
[200.93746948 390.10934448]
[186.97589111 379.47723389]
[190.44400024 361.39260864]
[185.19728088 347.34011841]
[179.95056152 333.28765869]
[166.33544922 327.35769653]
[160.81434631 313.18124390]
[167.12655640 298.94067383]
[161.87983704 284.88818359]
[156.63311768 270.83572388]
[151.38639832 256.78326416]
[146.13967896 242.73078918]
[132.52456665 236.80082703]
[127.00346375 222.62435913]
[133.31567383 208.38378906]
[128.06895447 194.33131409]
[122.82223511 180.27883911]
[117.57551575 166.22637939]
[103.45719910 155.80331421]
[106.65565491 137.66906738]
[101.20030212 123.69625854]
[95.74494171 109.72346497]
[89.46758270 96.10015106]
[82.39048004 82.87461853]
[75.31336975 69.64909363]
[68.23626709 56.42356491]
[56.14056396 51.94508362]
[50.51830292 40.78381348]
[53.89638519 29.16851807]
[47.01697540 15.83908939]
[47.29724503 30.83647156]
[44.27818298 45.52950668]
[38.10708618 59.20128632]
[29.08506584 71.18473816]
[17.65231895 80.89515686]
[4.36667728 87.85876465]
[-10.12362289 91.73577118]
[-25.11156845 92.33702087]
[-39.86586380 89.63317871]
[-53.66661453 83.75616455]
[-65.84044647 74.99273682]
[-75.79338074 63.77047348]
[-83.03978729 50.63694382]
[-87.22609711 36.23295975]
[-88.14804840 21.26131821]
[-85.76066589 6.45252419]
[-80.18042755 -7.47087049]
[-71.67960358 -19.82951164]
[-60.67297363 -30.02039528]
[-47.69757462 -37.54628372]
[-33.38650513 -42.03997421]
[-18.43803215 -43.28221130]
[-3.58152485 -41.21237564]
[10.45813370 -35.93146896]
[22.99591637 -27.69715118]
[33.42007828 -16.91119576]
[41.21920776 -4.10587072]
[39.88097382 -19.04605484]
[30.94333458 -32.10091019]
[37.51430893 -45.46771622]
[29.28392410 -32.92735291]
[15.62388802 -26.73030281]
[0.76691568 -28.79678917]
[-10.68340015 -38.48648834]
[-15.17905331 -52.79694366]
[-11.32701778 -67.29389954]
[-0.32088834 -77.48532104]
[14.42896652 -80.21328735]
[28.35214233 -74.63250732]
[37.13447952 -62.47199631]
[37.80426407 -77.45703125]
[38.47405243 -92.44207001]
[39.14383698 -107.42710876]
[24.69613457 -111.71074677]
[11.70141602 -119.32321167]
[0.91285187 -129.81825256]
[-7.04546309 -142.58271790]
[-11.71460819 -156.87231445]
[-12.82730007 -171.85505676]
[-10.32318878 -186.65971375]
[-4.35211754 -200.42642212]
[4.73484182 -212.35667419]
[16.40602303 -221.75961304]
[29.98027611 -228.09205627]
[44.66670990 -230.98982239]
[45.33649445 -245.97485352]
[42.59339905 -254.68768311]
[46.12944794 -261.17752075]
[47.02226639 -276.15093994]
[47.91508102 -291.12432861]
[33.82464218 -296.63021851]
[22.12653351 -306.22238159]
[13.96681786 -318.96105957]
[10.14490032 -333.59829712]
[11.03521347 -348.70001221]
[16.55053329 -362.78677368]
[26.15052605 -374.47845459]
[38.89468002 -382.62963867]
[53.53445435 -386.44174194]
[68.63559723 -385.54129028]
[82.71864319 -380.01654053]
[94.40388489 -370.40872192]
[102.54652405 -357.65911865]
[106.34882355 -343.01678467]
[105.43827057 -327.91625977]
[99.90407562 -313.83691406]
[90.28842163 -302.15811157]
[77.53335571 -294.02401733]
[62.88848877 -290.23153687]
[61.99567032 -275.25811768]
[61.10285568 -260.28469849]
[60.32153320 -245.30506897]
[59.65174866 -230.32003784]
[74.02108765 -226.12356567]
[86.97625732 -218.60534668]
[97.76201630 -208.19865417]
[105.74837494 -195.50526428]
[110.46743011 -181.26074219]
[111.64074707 -166.29171753]
[109.19579315 -151.46798706]
[103.27041626 -137.65193176]
[94.20504761 -125.64838409]
[82.52317810 -116.15769196]
[68.90113068 -109.73491669]
[54.12887573 -106.75732422]
[53.45909119 -91.77228546]
[52.78930283 -76.78724670]
[52.11951828 -61.80221176]
[52.45449448 -46.80595016]
[61.29641342 -34.81972122]
[54.82115936 -20.38429070]
[56.15939331 -5.44410467]
[60.34640503 8.95967770]
[67.22581482 22.28910637]
[82.48268127 30.96061516]
[81.46179199 49.34645844]
[88.53890228 62.57198715]
[95.61600494 75.79751587]
[102.69310760 89.02304077]
[106.07284546 74.40875244]
[117.32119751 64.48532867]
[132.24282837 62.95394897]
[145.27232361 70.38578796]
[151.55000305 84.00895691]
[148.73446655 98.74234772]
[137.87580872 109.09076691]
[123.02407074 111.19451141]
[109.71774292 104.26810455]
[115.17309570 118.24090576]
[120.62845612 132.21369934]
[132.10627747 138.09779358]
[136.36239624 149.84808350]
[131.62799072 160.97966003]
[136.87471008 175.03213501]
[142.12142944 189.08459473]
[147.36813354 203.13706970]
[161.46865845 209.75622559]
[166.58938599 224.08216858]
[160.19215393 237.48406982]
[165.43887329 251.53652954]
[170.68557739 265.58901978]
[175.93229675 279.64147949]
[181.17901611 293.69393921]
[195.27954102 300.31311035]
[200.40026855 314.63903809]
[194.00302124 328.04095459]
[199.24974060 342.09341431]
[204.49645996 356.14587402]
[215.88540649 362.20022583]
[219.96611023 374.01257324]
[215.06649780 385.07241821]
[220.10340881 399.20144653]
[225.14031982 413.33047485]
[239.44082642 424.93121338]
[235.60815430 442.05654907]
[240.85487366 456.10903931]
[246.10159302 470.16149902]
[251.34831238 484.21398926]
[266.30023193 482.33325195]
[281.28274536 483.95196533]
[295.48794556 488.98281860]
[308.14968872 497.15454102]
[318.58517456 508.02639771]
[326.23162842 521.01208496]
[330.67669678 535.41131592]
[331.68066406 550.44757080]
[329.18936157 565.30993652]
[323.33715820 579.19696045]
[314.43963623 591.35961914]
[302.97665405 601.14208984]
[289.56640625 608.01684570]
[274.93206787 611.61303711]
[259.86282349 611.73675537]
[245.17140198 608.38140869]
[231.65005493 601.72784424]
[220.02796936 592.13494873]
[210.93193054 580.11999512]
[204.85244751 566.33099365]
[202.11740112 551.51153564]
[202.87428284 536.46081543]
[207.08227539 521.99053955]
[214.51445007 508.88101196]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 186]
[2 185]
[3 184]
[4 183]
[7 181]
[8 180]
[9 179]
[11 176]
[12 175]
[13 174]
[16 171]
[17 170]
[18 169]
[19 168]
[20 167]
[23 164]
[24 163]
[25 162]
[26 161]
[28 158]
[29 157]
[30 156]
[31 147]
[32 146]
[33 145]
[34 144]
[37 142]
[38 141]
[65 140]
[66 139]
[68 137]
[78 136]
[79 135]
[80 134]
[81 133]
[93 121]
[94 120]
[96 119]
[97 118]
[98 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
