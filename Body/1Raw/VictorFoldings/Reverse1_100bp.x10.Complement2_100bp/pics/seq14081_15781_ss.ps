%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAUAACAUUAACUCUAACGAGCCCCCUUAUCCAAUACACUAAUCCUCAUCCCAAUCCUACUCACCCUUCUUCUUUCUCUCCUUCAUUUCAAAUUAAUACxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[82.14740753 636.96118164]
[67.38385010 634.20135498]
[53.07135391 629.64807129]
[39.42690277 623.37048340]
[26.65733910 615.46362305]
[14.95624924 606.04748535]
[4.50101709 595.26470947]
[-4.54985857 583.27886963]
[-12.05916882 570.27154541]
[-17.91307449 556.44000244]
[-22.02283096 541.99389648]
[-24.32613754 527.15228271]
[-24.78807449 512.14007568]
[-23.40163994 497.18490601]
[-20.18785095 482.51345825]
[-15.19542885 468.34817505]
[-8.50005817 454.90377808]
[-0.20323671 442.38409424]
[9.56925583 430.97891235]
[20.66927147 420.86114502]
[32.92853928 412.18417358]
[46.16120529 405.07952881]
[60.16667557 399.65490723]
[74.73262024 395.99255371]
[89.63822937 394.14797974]
[89.63822937 379.14797974]
[89.63822937 364.14797974]
[89.63822937 349.14797974]
[89.52656555 334.14840698]
[89.30323792 319.15005493]
[89.07991028 304.15173340]
[88.85658264 289.15338135]
[85.61384583 282.51211548]
[88.74324799 273.93048096]
[88.74324799 258.93048096]
[80.41429138 250.15806580]
[80.29153442 237.66133118]
[88.98616791 228.13420105]
[89.20949554 213.13586426]
[86.16593170 206.40098572]
[89.54945374 197.91632080]
[89.99606323 182.92297363]
[90.44267273 167.92962646]
[90.88927460 152.93626404]
[91.33588409 137.94291687]
[91.78248596 122.94956970]
[92.22909546 107.95622253]
[80.59716034 117.42713165]
[65.66178131 116.03630066]
[55.97861481 104.58045959]
[57.09462357 89.62203217]
[68.37050629 79.72988892]
[83.34691620 80.57069397]
[93.44437408 91.66191101]
[95.22683716 76.76818848]
[97.00930786 61.87447357]
[98.79177094 46.98075485]
[100.57424164 32.08703995]
[102.35670471 17.19332123]
[104.13916779 2.29960418]
[105.81070709 -12.60696983]
[97.92436218 -29.24689293]
[108.77858734 -43.03648376]
[110.11682129 -57.97666550]
[111.45505524 -72.91685486]
[103.18576050 -60.40210724]
[91.34128571 -51.19838715]
[77.17160797 -46.27698135]
[62.17208862 -46.15725708]
[47.92565536 -50.85184860]
[35.93577576 -59.86532593]
[27.46776581 -72.24647522]
[23.41527557 -86.68867493]
[24.20597649 -101.66782379]
[29.75642014 -115.60312653]
[39.48085785 -127.02394867]
[52.35304642 -134.72503662]
[67.01454926 -137.89367676]
[81.91811371 -136.19546509]
[95.49091339 -129.80963135]
[106.30059814 -119.41006470]
[113.20638275 -106.09427643]
[115.47948456 -91.26731873]
[120.51639557 -105.39635468]
[125.55331421 -119.52538300]
[130.59022522 -133.65440369]
[135.62715149 -147.78343201]
[132.97312927 -163.38044739]
[144.53491211 -172.77056885]
[149.57183838 -186.89961243]
[154.60874939 -201.02864075]
[141.15815735 -207.70831299]
[128.59204102 -215.93199158]
[117.08677673 -225.58421326]
[106.80390167 -236.52947998]
[97.88775635 -248.61412048]
[90.46352386 -261.66851807]
[84.63542175 -275.50936890]
[80.48526764 -289.94241333]
[78.07132721 -304.76501465]
[77.42747498 -319.76907349]
[78.56276703 -334.74395752]
[81.46125793 -349.47946167]
[86.08226013 -363.76873779]
[92.36089325 -377.41113281]
[100.20902252 -390.21514893]
[109.51647186 -402.00106812]
[120.15258026 -412.60339355]
[131.96803284 -421.87332153]
[144.79695129 -429.68069458]
[158.45925903 -435.91592407]
[172.76312256 -440.49145508]
[187.50778198 -443.34307861]
[202.48620605 -444.43075562]
[217.48814392 -443.73919678]
[232.30297852 -441.27810669]
[246.72274780 -437.08209229]
[260.54501343 -431.20999146]
[273.57571411 -423.74429321]
[285.63195801 -414.78976440]
[296.54446411 -404.47213745]
[306.16006470 -392.93624878]
[314.34371948 -380.34402466]
[320.98059082 -366.87225342]
[325.97750854 -352.71008301]
[329.26431274 -338.05630493]
[330.79483032 -323.11663818]
[330.54760742 -308.10079956]
[328.52612305 -293.21960449]
[324.75872803 -278.68194580]
[319.29833984 -264.69195557]
[312.22158813 -251.44596863]
[303.62783813 -239.12995911]
[293.63772583 -227.91685486]
[282.39151001 -217.96403503]
[270.04702759 -209.41122437]
[256.77761841 -202.37852478]
[242.76954651 -196.96461487]
[228.21946716 -193.24552917]
[213.33164978 -191.27348328]
[198.31507874 -191.07614136]
[183.38056946 -192.65628052]
[168.73777771 -195.99171448]
[163.70086670 -181.86268616]
[158.66394043 -167.73365784]
[161.67823792 -153.14724731]
[149.75617981 -142.74652100]
[144.71925354 -128.61749268]
[139.68234253 -114.48846436]
[134.64543152 -100.35943604]
[129.60850525 -86.23040771]
[126.39524078 -71.57862091]
[125.05700684 -56.63843155]
[123.71877289 -41.69824600]
[131.23187256 -32.21775436]
[130.23924255 -19.75988770]
[120.72931671 -11.04644680]
[123.15988922 -4.06689787]
[119.03289032 4.08206987]
[117.25041962 18.97578812]
[115.46795654 33.86950302]
[113.68548584 48.76322174]
[111.90302277 63.65694046]
[110.12055969 78.55065918]
[108.33808899 93.44437408]
[107.22244263 108.40282440]
[106.77584076 123.39617920]
[106.32923126 138.38952637]
[105.88262177 153.38287354]
[105.43601990 168.37622070]
[104.98941040 183.36958313]
[104.54280853 198.36293030]
[104.20783234 213.35919189]
[103.98450470 228.35752869]
[113.32394409 244.22750854]
[103.74324799 258.93048096]
[103.74324799 273.93048096]
[103.85491943 288.93005371]
[104.07824707 303.92840576]
[104.30157471 318.92672729]
[104.52490234 333.92507935]
[107.78173065 342.45916748]
[104.63822937 349.14797974]
[104.63822937 364.14797974]
[104.63822937 379.14797974]
[104.63822937 394.14797974]
[119.54383850 395.99255371]
[134.10978699 399.65490723]
[148.11524963 405.07952881]
[161.34793091 412.18417358]
[173.60719299 420.86114502]
[184.70719910 430.97891235]
[194.47970581 442.38409424]
[202.77651978 454.90377808]
[209.47189331 468.34817505]
[214.46430969 482.51345825]
[217.67810059 497.18490601]
[219.06452942 512.14007568]
[218.60260010 527.15228271]
[216.29930115 541.99389648]
[212.18952942 556.44000244]
[206.33563232 570.27154541]
[198.82632446 583.27886963]
[189.77545166 595.26470947]
[179.32020569 606.04748535]
[167.61912537 615.46362305]
[154.84956360 623.37048340]
[141.20510864 629.64807129]
[126.89261627 634.20135498]
[112.12905121 636.96118164]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 186]
[26 185]
[27 184]
[28 183]
[29 181]
[30 180]
[31 179]
[32 178]
[34 177]
[35 176]
[38 174]
[39 173]
[41 172]
[42 171]
[43 170]
[44 169]
[45 168]
[46 167]
[47 166]
[54 165]
[55 164]
[56 163]
[57 162]
[58 161]
[59 160]
[60 159]
[61 157]
[63 154]
[64 153]
[65 152]
[83 151]
[84 150]
[85 149]
[86 148]
[87 147]
[89 145]
[90 144]
[91 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
