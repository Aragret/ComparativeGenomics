%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[-21.20620918 316.23181152]
[-21.72966003 331.23110962]
[-23.47395706 346.13784790]
[-26.42749786 360.85278320]
[-30.57062149 375.27801514]
[-35.87575912 389.31753540]
[-42.30760193 402.87792969]
[-49.82334900 415.86892700]
[-58.37298584 428.20410156]
[-67.89961243 439.80136108]
[-78.33982849 450.58349609]
[-89.62415314 460.47879028]
[-101.67749786 469.42135620]
[-114.41964722 477.35171509]
[-127.76579285 484.21707153]
[-141.62712097 489.97174072]
[-155.91140747 494.57742310]
[-170.52355957 498.00347900]
[-185.36633301 500.22711182]
[-200.34098816 501.23348999]
[-215.34783936 501.01593018]
[-230.28701782 499.57589722]
[-245.05911255 496.92297363]
[-259.56579590 493.07479858]
[-273.71057129 488.05700684]
[-287.39926147 481.90295410]
[-300.54080200 474.65362549]
[-313.04772949 466.35723877]
[-324.83679199 457.06903076]
[-335.82952881 446.85079956]
[-345.95281982 435.77056885]
[-355.13928223 423.90203857]
[-363.32775879 411.32421875]
[-370.46377563 398.12081909]
[-376.49984741 384.37966919]
[-381.39578247 370.19226074]
[-385.11904907 355.65298462]
[-387.64480591 340.85864258]
[-388.95626831 325.90762329]
[-389.04470825 310.89944458]
[-387.90954590 295.93402100]
[-385.55831909 281.11090088]
[-382.00671387 266.52877808]
[-377.27832031 252.28463745]
[-371.40463257 238.47332764]
[-364.42471313 225.18672180]
[-356.38504028 212.51327515]
[-347.33911133 200.53730774]
[-337.34710693 189.33851624]
[-326.47555542 178.99143982]
[-314.79678345 169.56492615]
[-302.38851929 161.12171936]
[-289.33334351 153.71798706]
[-275.71810913 147.40303040]
[-261.63348389 142.21887207]
[-247.17314148 138.19998169]
[-232.43333435 135.37313843]
[-217.51217651 133.75714111]
[-202.50892639 133.36273193]
[-187.52346802 134.19255066]
[-172.65550232 136.24107361]
[-158.00398254 139.49467468]
[-143.66641235 143.93168640]
[-129.73822021 149.52258301]
[-116.31208801 156.23016357]
[-103.47735596 164.00979614]
[-91.31945038 172.80967712]
[-79.91928101 182.57128906]
[-69.35271454 193.22962952]
[-59.69006348 204.71380615]
[-47.46357727 196.02397156]
[-35.23709106 187.33415222]
[-23.01060677 178.64433289]
[-10.78412151 169.95449829]
[1.44236445 161.26467896]
[3.10774255 156.78857422]
[7.60266781 153.31111145]
[14.16475391 152.50454712]
[26.64454842 144.18260193]
[39.12434006 135.86065674]
[51.60413361 127.53871155]
[63.76559067 118.75811005]
[75.59185791 109.53101349]
[87.41812897 100.30390930]
[99.03539276 90.81501007]
[110.43785858 81.06904602]
[121.84031677 71.32308197]
[133.24278259 61.57711792]
[144.64524841 51.83115005]
[155.52458191 41.50448227]
[165.76997375 30.54857254]
[175.93351746 19.51669502]
[186.09706116 8.48481846]
[196.26060486 -2.54705882]
[206.17526245 -13.80315495]
[215.83607483 -25.27785492]
[225.49688721 -36.75255585]
[214.99946594 -47.48381424]
[205.58679199 -59.17813110]
[197.34674072 -71.72631836]
[190.35624695 -85.01121521]
[184.68058777 -98.90878296]
[180.37274170 -113.28925323]
[177.47293091 -128.01837158]
[176.00825500 -142.95858765]
[175.99237061 -157.97042847]
[177.42541504 -172.91371155]
[180.29403687 -187.64892578]
[184.57142639 -202.03848267]
[190.21766663 -215.94802856]
[197.18002319 -229.24769592]
[205.39350891 -241.81330872]
[214.78140259 -253.52751160]
[225.25607300 -264.28097534]
[236.71971130 -273.97326660]
[249.06529236 -282.51388550]
[262.17752075 -289.82312012]
[275.93399048 -295.83267212]
[290.20626831 -300.48648071]
[304.86105347 -303.74105835]
[319.76156616 -305.56607056]
[334.76864624 -305.94439697]
[349.74218750 -304.87255859]
[364.54235840 -302.36056519]
[379.03100586 -298.43185425]
[393.07281494 -293.12310791]
[406.53671265 -286.48391724]
[419.29696655 -278.57623291]
[431.23443604 -269.47390747]
[442.23767090 -259.26193237]
[452.20391846 -248.03564453]
[461.04013062 -235.89988708]
[468.66381836 -222.96794128]
[475.00378418 -209.36058044]
[480.00085449 -195.20484924]
[483.60833740 -180.63290405]
[485.79254150 -165.78080750]
[486.53314209 -150.78723145]
[485.82315063 -135.79219055]
[483.66921997 -120.93566895]
[480.09149170 -106.35639191]
[475.12332153 -92.19049072]
[468.81115723 -78.57021332]
[461.21386719 -65.62274933]
[452.40243530 -53.46898651]
[442.45910645 -42.22239304]
[431.47671509 -31.98798943]
[419.55786133 -22.86132812]
[406.81375122 -14.92762566]
[393.36343384 -8.26095867]
[379.33248901 -2.92357373]
[364.85189819 1.03469467]
[350.05685425 3.57688808]
[335.08554077 4.67927027]
[320.07772827 4.33154774]
[305.17352295 2.53696799]
[290.51211548 -0.68771362]
[276.23037720 -5.31238794]
[262.46166992 -11.29387474]
[249.33456421 -18.57632637]
[236.97158813 -27.09174347]
[227.31077576 -15.61704445]
[217.64996338 -4.14234400]
[217.58557129 -0.61697990]
[215.81044006 3.05234551]
[212.27549744 6.06191397]
[207.29248047 7.61648798]
[197.12893677 18.64836502]
[186.96539307 29.68024254]
[176.80184937 40.71212006]
[174.58161926 47.76140213]
[166.40391541 51.83115005]
[181.39627075 51.35261917]
[193.26600647 60.52375412]
[196.58639526 75.15163422]
[189.83944702 88.54859161]
[176.10974121 94.58972168]
[161.67431641 90.51309204]
[153.13287354 78.18248749]
[154.39120483 63.23361206]
[142.98875427 72.97957611]
[131.58628845 82.72554779]
[120.18382263 92.47151184]
[108.78135681 102.21747589]
[107.93838501 105.98069000]
[105.44073486 109.35405731]
[101.49971771 111.60691833]
[96.64522552 112.13018036]
[84.81896210 121.35727692]
[72.99269104 130.58438110]
[87.33262634 134.98509216]
[92.97462463 148.88357544]
[85.75962067 162.03437805]
[71.00624084 164.74322510]
[59.59012985 155.01324463]
[59.92607880 140.01850891]
[47.44628525 148.34045410]
[34.96649170 156.66239929]
[22.48669815 164.98434448]
[10.13218880 173.49116516]
[-2.09429693 182.18098450]
[-14.32078266 190.87081909]
[-26.54726791 199.56063843]
[-38.77375412 208.25045776]
[-51.00024033 216.94029236]
[-43.33131027 229.84146118]
[-36.73947144 243.32479858]
[-31.26859093 257.30056763]
[-26.95508003 271.67578125]
[-23.82764244 286.35473633]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[70 205]
[71 204]
[72 203]
[73 202]
[74 201]
[75 200]
[78 199]
[79 198]
[80 197]
[81 196]
[82 190]
[83 189]
[84 188]
[85 184]
[86 183]
[87 182]
[88 181]
[89 180]
[90 172]
[91 170]
[92 169]
[93 168]
[94 167]
[95 163]
[96 162]
[97 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
