%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[48.72103882 647.50738525]
[45.80181122 662.25115967]
[40.66606522 676.37646484]
[33.43419266 689.55224609]
[24.27571487 701.46954346]
[13.40532112 711.84912109]
[1.07782972 720.44757080]
[-12.41778564 727.06335449]
[-26.76516914 731.54144287]
[-41.62799835 733.77679443]
[-56.65786362 733.71704102]
[-71.50244141 731.36358643]
[-85.81376648 726.77154541]
[-99.25634766 720.04864502]
[-111.51507568 711.35241699]
[-122.30258942 700.88677979]
[-131.36601257 688.89697266]
[-138.49288940 675.66418457]
[-143.51614380 661.49847412]
[-146.31803894 646.73193359]
[-146.83288574 631.71075439]
[-145.04862976 616.78710938]
[-141.00706482 602.31066895]
[-134.80296326 588.62091064]
[-126.58174133 576.03869629]
[-116.53611755 564.85900879]
[-104.90158081 555.34387207]
[-91.95085907 547.71630859]
[-77.98753357 542.15521240]
[-63.33892822 538.79089355]
[-48.34842682 537.70214844]
[-33.36742401 538.91461182]
[-18.74710274 542.39984131]
[-13.08431530 528.50976562]
[-7.42152882 514.61975098]
[-1.75874221 500.72973633]
[3.90404439 486.83972168]
[9.15076256 472.78723145]
[13.97675991 458.58477783]
[18.80275726 444.38232422]
[23.52289200 430.14434814]
[28.13690186 415.87161255]
[32.53789902 401.53176880]
[36.72491074 387.12799072]
[40.91192245 372.72418213]
[39.43764496 368.18154907]
[40.80137253 362.66455078]
[45.44396973 357.95733643]
[50.05797958 343.68463135]
[54.67198563 329.41189575]
[58.32007599 314.86227417]
[60.98587036 300.10104370]
[55.63362503 286.20129395]
[65.70031738 273.99588013]
[68.36611176 259.23468018]
[71.03191376 244.47344971]
[73.69770813 229.71223450]
[76.36350250 214.95101929]
[79.02929688 200.18980408]
[66.00496674 184.43675232]
[68.88360596 163.90364075]
[86.22237396 152.00665283]
[88.00483704 137.11294556]
[89.78730774 122.21922302]
[91.56977081 107.32550812]
[93.24131012 92.41893005]
[94.80183411 77.50032806]
[96.36235809 62.58172226]
[97.81177521 47.65191269]
[99.15000916 32.71172714]
[100.48824310 17.77154350]
[98.52223206 13.90000916]
[97.94819641 9.99680424]
[98.60516357 6.50341129]
[100.20532227 3.76368499]
[102.37685394 1.99094236]
[104.60196686 -12.84310150]
[106.82708740 -27.67714500]
[109.05220032 -42.51118851]
[111.27732086 -57.34523392]
[113.39194489 -72.19542694]
[115.39595795 -87.06095886]
[117.39997101 -101.92648315]
[119.40398407 -116.79201508]
[112.21881104 -127.50350952]
[114.19400024 -139.84378052]
[123.73210907 -147.28359985]
[125.95722961 -162.11764526]
[124.13545227 -171.06857300]
[128.32748413 -177.15531921]
[122.94382477 -192.03237915]
[132.65275574 -203.32778931]
[135.09848022 -218.12705994]
[137.21310425 -232.97724915]
[138.99555969 -247.87097168]
[140.77803040 -262.76467896]
[134.73544312 -277.38650513]
[143.93031311 -289.10415649]
[145.71278381 -303.99789429]
[147.49525452 -318.89160156]
[133.75750732 -325.22640991]
[122.65107727 -335.49783325]
[115.26404572 -348.69961548]
[112.32012939 -363.53836060]
[114.10773468 -378.56033325]
[120.45173645 -392.29382324]
[130.73060608 -403.39337158]
[143.93733215 -410.77154541]
[158.77804565 -413.70553589]
[173.79882812 -411.90786743]
[187.52806091 -405.55465698]
[198.62072754 -395.26834106]
[205.99005127 -382.05667114]
[208.91407776 -367.21398926]
[207.10633850 -352.19442749]
[200.74394226 -338.46945190]
[190.45021057 -327.38369751]
[177.23361206 -320.02322388]
[162.38896179 -317.10913086]
[160.60650635 -302.21542358]
[158.82403564 -287.32171631]
[164.99411011 -273.76516724]
[155.67175293 -260.98220825]
[153.88928223 -246.08850098]
[152.10681152 -231.19477844]
[153.98695374 -228.21192932]
[154.51571655 -224.17021179]
[153.21119690 -219.71470642]
[149.89775085 -215.68132019]
[147.45202637 -200.88204956]
[153.01062012 -187.06353760]
[143.12675476 -174.70959473]
[140.79127502 -159.89253235]
[138.56616211 -145.05848694]
[145.85980225 -129.09698486]
[134.26951599 -114.78800201]
[132.26550293 -99.92247009]
[130.26148987 -85.05694580]
[128.25747681 -70.19141388]
[130.47915649 -63.14259338]
[126.11136627 -55.12011719]
[123.88624573 -40.28607178]
[121.66113281 -25.45202827]
[119.43601227 -10.61798382]
[117.21089172 4.21605968]
[115.42842865 19.10977745]
[114.09019470 34.04996109]
[112.75196075 48.99014664]
[115.28617859 55.93273544]
[111.28096008 64.14224243]
[109.72043610 79.06085205]
[108.15991211 93.97945404]
[110.52009583 101.68672943]
[106.46348572 109.10797119]
[104.68102264 124.00168610]
[102.89855194 138.89540100]
[101.11608887 153.78912354]
[109.06312561 159.35462952]
[114.40522003 167.38409424]
[116.44363403 176.75114441]
[114.93953705 186.16007996]
[110.14118958 194.32501221]
[102.74410248 200.14567566]
[93.79051208 202.85559082]
[91.12471771 217.61682129]
[88.45892334 232.37803650]
[85.79312897 247.13925171]
[83.12733459 261.90045166]
[80.46154022 276.66168213]
[85.62310791 291.61724854]
[75.74708557 302.76684570]
[73.08129120 317.52804565]
[84.33863831 307.61483765]
[99.15204620 305.25625610]
[112.93143463 311.18319702]
[121.40709686 323.55911255]
[121.95275879 338.54919434]
[114.39935303 351.50857544]
[101.08736420 358.42169189]
[86.14167786 357.14642334]
[74.19335938 348.07791138]
[68.94471741 334.02587891]
[64.33071136 348.29861450]
[59.71670151 362.57135010]
[55.31570435 376.91119385]
[51.12869263 391.31500244]
[46.94168091 405.71878052]
[48.14435196 412.21994019]
[46.17839432 417.55209351]
[42.40963364 420.48562622]
[37.79562378 434.75836182]
[38.13358688 443.88653564]
[33.00521469 449.20831299]
[28.17921638 463.41079712]
[23.35321808 477.61325073]
[24.35010719 481.83935547]
[23.98686218 485.76779175]
[22.52408218 489.00750732]
[20.32259750 491.29226685]
[17.79407120 492.50250244]
[12.13128471 506.39251709]
[6.46849823 520.28253174]
[0.80571157 534.17260742]
[-4.85707521 548.06262207]
[8.03258514 555.79284668]
[19.59109116 565.40020752]
[29.54749680 576.65948486]
[37.66840744 589.30664062]
[43.76345825 603.04528809]
[47.68977356 617.55340576]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 204]
[34 203]
[35 202]
[36 201]
[37 200]
[38 195]
[39 194]
[40 193]
[41 191]
[42 190]
[43 187]
[44 186]
[45 185]
[48 184]
[49 183]
[50 182]
[51 172]
[52 171]
[54 169]
[55 168]
[56 167]
[57 166]
[58 165]
[59 164]
[62 157]
[63 156]
[64 155]
[65 154]
[66 152]
[67 151]
[68 150]
[69 148]
[70 147]
[71 146]
[76 145]
[77 144]
[78 143]
[79 142]
[80 141]
[81 139]
[82 138]
[83 137]
[84 136]
[87 134]
[88 133]
[90 132]
[92 130]
[93 129]
[94 125]
[95 124]
[96 123]
[98 121]
[99 120]
[100 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
