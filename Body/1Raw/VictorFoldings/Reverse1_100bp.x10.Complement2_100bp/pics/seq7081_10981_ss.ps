%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[264.52124023 572.81481934]
[275.20581055 562.23132324]
[287.56597900 553.66406250]
[281.28860474 540.04077148]
[275.01126099 526.41741943]
[268.73388672 512.79412842]
[262.45654297 499.17080688]
[256.17916870 485.54748535]
[243.82574463 477.22631836]
[245.07768250 461.45471191]
[238.80032349 447.83139038]
[232.52296448 434.20806885]
[226.24560547 420.58477783]
[219.56541443 407.15438843]
[212.48829651 393.92886353]
[205.41119385 380.70333862]
[192.58438110 373.13220215]
[192.89535522 357.31402588]
[185.81825256 344.08850098]
[183.73007202 358.94244385]
[174.57275391 370.82284546]
[160.74002075 376.62417603]
[145.84771729 374.82998657]
[133.78863525 365.90930176]
[127.71501160 352.19393921]
[129.21446228 337.26907349]
[137.89505005 325.03604126]
[151.48767090 318.69250488]
[166.43925476 319.89663696]
[178.84092712 328.33306885]
[173.80400085 314.20404053]
[168.76708984 300.07498169]
[163.73017883 285.94595337]
[158.69325256 271.81692505]
[153.65634155 257.68789673]
[148.61941528 243.55888367]
[143.58250427 229.42985535]
[138.54559326 215.30081177]
[133.19439697 201.28779602]
[121.22486115 192.42329407]
[123.17978668 176.72332764]
[117.51699829 162.83331299]
[111.85421753 148.94328308]
[106.19142914 135.05325317]
[100.52864075 121.16323090]
[85.17453766 115.11183167]
[78.83053589 99.87630463]
[85.35214996 84.71595001]
[79.48319244 70.91177368]
[73.61422729 57.10759735]
[67.74526978 43.30342102]
[61.87630844 29.49924278]
[56.00734711 15.69506550]
[43.48736572 6.02239180]
[45.62811279 -8.71757030]
[39.75915146 -22.52174759]
[33.78759003 -36.28184891]
[27.71375465 -49.99711609]
[25.97890854 -35.09777832]
[18.74160576 -21.95922852]
[7.07545662 -12.53049755]
[-7.28893375 -8.21027946]
[-22.22069359 -9.63945198]
[-35.50478745 -16.60600662]
[-45.17059326 -28.07649803]
[-49.78425217 -42.34934235]
[-48.66135406 -57.30725479]
[-41.96847153 -70.73131561]
[-30.69845772 -80.63014221]
[-16.52314758 -85.53530121]
[-1.54536843 -84.71914673]
[12.01301765 -78.30274963]
[22.13970947 -67.23957062]
[19.03559875 -81.91487885]
[15.93148899 -96.59017944]
[12.71821594 -111.24196625]
[9.39595604 -125.86942291]
[6.07369661 -140.49688721]
[1.24705255 -126.29464722]
[-8.87891674 -115.22827148]
[-22.59780884 -109.16262817]
[-37.59774780 -109.11988831]
[-51.35098267 -115.10725403]
[-61.53984833 -126.11575317]
[-66.44734192 -140.29025269]
[-65.24647522 -155.24211121]
[-58.13959885 -168.45166016]
[-46.32435608 -177.69287109]
[-31.79182053 -181.40844727]
[-16.99098206 -178.97222900]
[-4.41603899 -170.79476929]
[3.81451440 -158.25257874]
[-4.33023834 -171.81625366]
[3.02469349 -184.76826477]
[2.57808757 -199.76161194]
[2.13148165 -214.75495911]
[1.68487573 -229.74830627]
[-12.53831482 -235.11201477]
[-23.62280846 -245.51405334]
[-29.87830353 -259.36819458]
[-30.35087776 -274.56176758]
[-24.96847153 -288.77789307]
[-14.55185986 -299.84869385]
[-0.68950135 -306.08596802]
[14.50469494 -306.53854370]
[28.71372414 -301.13745117]
[39.77081299 -290.70629883]
[45.98983765 -276.83572388]
[46.42243576 -261.64096069]
[41.00264740 -247.43904114]
[30.55694580 -236.39569092]
[16.67822647 -230.19491577]
[17.12483215 -215.20156860]
[17.57143784 -200.20822144]
[18.01804352 -185.21485901]
[26.13085175 -172.72360229]
[18.80786514 -158.69918823]
[20.70115662 -143.81915283]
[24.02341652 -129.19168091]
[27.34567642 -114.56422424]
[31.89256859 -108.73777008]
[30.60679245 -99.69429016]
[33.71090317 -85.01898956]
[36.81501389 -70.34368134]
[41.42901993 -56.07094955]
[47.50285339 -42.35568237]
[53.08556747 -37.51263428]
[53.56332779 -28.39070702]
[59.43228912 -14.58653069]
[71.53248596 -5.90122414]
[69.81152344 9.82610512]
[75.68048859 23.63028145]
[81.54944611 37.43445969]
[87.41840363 51.23863602]
[93.28736877 65.04280853]
[99.15632629 78.84699249]
[111.39157867 82.15641022]
[119.54325867 91.86227417]
[120.68922424 104.48528290]
[114.41867065 115.50044250]
[120.08145142 129.39047241]
[125.74423981 143.28048706]
[131.40702820 157.17051697]
[137.06980896 171.06054688]
[149.44439697 180.91854858]
[147.08442688 195.62501526]
[151.20890808 198.82434082]
[153.46786499 202.88026428]
[153.84739685 206.93870544]
[152.67462158 210.26390076]
[157.71153259 224.39292908]
[162.74845886 238.52195740]
[167.78536987 252.65098572]
[172.82228088 266.78002930]
[177.85920715 280.90905762]
[182.89611816 295.03808594]
[187.93302917 309.16711426]
[192.96995544 323.29614258]
[199.04377747 337.01141357]
[206.12089539 350.23693848]
[219.45390320 358.75405884]
[218.63671875 373.62622070]
[225.71383667 386.85174561]
[232.79093933 400.07727051]
[236.55857849 402.23571777]
[239.17977905 405.18426514]
[240.54692078 408.46545410]
[240.71200562 411.63394165]
[239.86891174 414.30740356]
[246.14628601 427.93072510]
[252.42364502 441.55404663]
[258.70098877 455.17736816]
[271.50341797 464.47296143]
[269.80249023 479.27014160]
[276.07986450 492.89346313]
[282.35720825 506.51678467]
[288.63458252 520.14007568]
[294.91192627 533.76342773]
[301.18930054 547.38671875]
[315.73257446 543.55737305]
[330.71987915 542.31176758]
[345.69580078 543.68780518]
[360.20516968 547.64367676]
[373.80712891 554.05914307]
[386.08828735 562.73925781]
[396.67544556 573.42022705]
[405.24688721 585.77746582]
[411.54211426 599.43548584]
[415.36981201 613.97918701]
[416.61370850 628.96667480]
[415.23596191 643.94238281]
[411.27844238 658.45135498]
[404.86145020 672.05255127]
[396.17993164 684.33276367]
[385.49777222 694.91870117]
[373.13952637 703.48870850]
[359.48080444 709.78240967]
[344.93667603 713.60845947]
[329.94906616 714.85064697]
[314.97348022 713.47119141]
[300.46499634 709.51202393]
[286.86450195 703.09350586]
[274.58529663 694.41058350]
[264.00057983 683.72723389]
[255.43194580 671.36804199]
[249.13981628 657.70861816]
[245.31539917 643.16400146]
[244.07492065 628.17626953]
[245.45605469 613.20086670]
[249.41685486 598.69281006]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 179]
[4 178]
[5 177]
[6 176]
[7 175]
[8 174]
[10 172]
[11 171]
[12 170]
[13 169]
[14 164]
[15 163]
[16 162]
[18 160]
[19 159]
[30 158]
[31 157]
[32 156]
[33 155]
[34 154]
[35 153]
[36 152]
[37 151]
[38 150]
[39 146]
[41 144]
[42 143]
[43 142]
[44 141]
[45 140]
[48 136]
[49 135]
[50 134]
[51 133]
[52 132]
[53 131]
[55 129]
[56 128]
[57 126]
[58 125]
[73 124]
[74 123]
[75 122]
[76 120]
[77 119]
[78 118]
[92 117]
[94 115]
[95 114]
[96 113]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
