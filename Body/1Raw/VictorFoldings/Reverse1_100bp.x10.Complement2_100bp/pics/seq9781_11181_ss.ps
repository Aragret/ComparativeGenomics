%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[178.97753906 633.02789307]
[186.13017273 619.79614258]
[195.53065491 608.05426025]
[206.87678528 598.17980957]
[219.80384827 590.49017334]
[214.55712891 576.43768311]
[209.31040955 562.38519287]
[204.06369019 548.33276367]
[198.81697083 534.28027344]
[193.57025146 520.22778320]
[189.67427063 517.46551514]
[187.47218323 512.22644043]
[188.38336182 505.67803955]
[183.55735779 491.47558594]
[178.73135376 477.27313232]
[173.60298157 471.95132446]
[173.94094849 462.82315063]
[169.32693481 448.55041504]
[164.71293640 434.27767944]
[160.09892273 420.00494385]
[155.05035400 414.60739136]
[155.52418518 405.48526001]
[151.12318420 391.14541626]
[146.72218323 376.80557251]
[142.32118225 362.46569824]
[135.37101746 375.75839233]
[121.55092621 381.58975220]
[107.17926025 377.29382324]
[98.82655334 364.83459473]
[100.31155396 349.90829468]
[110.95533752 339.33898926]
[125.89170837 337.95886230]
[138.29306030 346.40036011]
[135.40777588 331.68048096]
[132.52250671 316.96057129]
[129.63723755 302.24069214]
[126.75196075 287.52081299]
[123.86669159 272.80090332]
[114.00588226 265.79440308]
[111.48164368 253.55464172]
[118.18135834 242.53298950]
[115.51556396 227.77177429]
[112.84976959 213.01055908]
[110.18397522 198.24934387]
[107.51817322 183.48812866]
[93.30493927 174.49798584]
[89.92491913 157.67864990]
[99.94851685 143.34173584]
[97.06324005 128.62185669]
[94.35674286 126.36194611]
[92.61037445 122.67884064]
[92.48114014 118.03808594]
[94.39325714 113.18103790]
[85.83453369 102.12483215]
[90.77269745 89.04407501]
[88.54757690 74.21002960]
[86.32246399 59.37598801]
[76.62363434 46.87625885]
[82.38735199 33.14203644]
[80.16223145 18.30799294]
[66.89670563 13.87081337]
[56.88490677 4.19713593]
[52.04104233 -8.78420639]
[53.25699615 -22.51994705]
[60.23867798 -34.33454895]
[71.57451630 -41.95135880]
[69.57050323 -56.81688690]
[67.56649017 -71.68241882]
[65.56247711 -86.54794312]
[63.55846405 -101.41347504]
[61.55445099 -116.27899933]
[52.04279709 -128.92175293]
[58.01036072 -142.56863403]
[56.00634766 -157.43415833]
[54.00233459 -172.29968262]
[51.99832153 -187.16522217]
[42.48666763 -199.80796814]
[48.45422745 -213.45484924]
[46.45021439 -228.32037354]
[44.44620132 -243.18589783]
[42.44218826 -258.05142212]
[33.41768265 -246.06985474]
[18.83172798 -242.56985474]
[5.35283041 -249.15159607]
[-0.85664272 -262.80599976]
[3.04219723 -277.29043579]
[15.26685238 -285.98281860]
[30.22837639 -284.90914917]
[41.08739090 -274.55856323]
[40.64078522 -289.55191040]
[40.19417953 -304.54528809]
[32.04942703 -318.10894775]
[39.40435791 -331.06094360]
[38.95775223 -346.05432129]
[30.81299973 -359.61798096]
[38.16793060 -372.56997681]
[37.72132492 -387.56335449]
[37.27471924 -402.55670166]
[23.31116676 -408.71963501]
[13.41097641 -420.33639526]
[9.53983974 -435.10043335]
[12.46637344 -450.08035278]
[21.60951233 -462.30187988]
[35.15387726 -469.33843994]
[50.41022873 -469.79287720]
[64.34940338 -463.57498169]
[74.20377350 -451.91934204]
[78.01673889 -437.14016724]
[75.03123474 -422.17187500]
[65.84004211 -409.98645020]
[52.26807022 -403.00329590]
[52.71467590 -388.00994873]
[53.16128159 -373.01660156]
[61.27408981 -360.52532959]
[53.95110321 -346.50091553]
[54.39770889 -331.50756836]
[62.51051712 -319.01629639]
[55.18753052 -304.99188232]
[55.63413620 -289.99853516]
[56.08074188 -275.00518799]
[57.30771637 -260.05545044]
[59.31172943 -245.18991089]
[61.31574249 -230.32438660]
[63.31975555 -215.45886230]
[72.68807220 -203.87939453]
[66.86384583 -189.16923523]
[68.86785889 -174.30369568]
[70.87187195 -159.43817139]
[72.87589264 -144.57264709]
[82.24420166 -132.99317932]
[76.41998291 -118.28301239]
[78.42399597 -103.41748810]
[80.42800903 -88.55195618]
[82.43202209 -73.68643188]
[84.43603516 -58.82089996]
[86.44004822 -43.95537186]
[101.53366852 -38.18518066]
[111.71642303 -25.51761055]
[114.13524628 -9.35078621]
[108.03630066 5.91677570]
[94.99627686 16.08287621]
[97.22139740 30.91691971]
[106.76107025 42.35562134]
[101.15650940 57.15087128]
[103.38162231 71.98491669]
[105.60674286 86.81896210]
[114.16546631 97.87516785]
[109.22730255 110.95592499]
[111.78313446 125.73657990]
[114.66841125 140.45646667]
[126.63723755 146.63398743]
[132.77328491 158.40510559]
[131.03512573 171.36894226]
[122.27939606 180.82232666]
[124.94519043 195.58354187]
[127.61098480 210.34475708]
[130.27677917 225.10598755]
[132.94258118 239.86720276]
[145.16023254 253.64437866]
[138.58657837 269.91564941]
[141.47184753 284.63552856]
[144.35713196 299.35540771]
[147.24240112 314.07531738]
[150.12767029 328.79519653]
[153.01293945 343.51510620]
[156.66102600 358.06472778]
[161.06202698 372.40457153]
[165.46302795 386.74441528]
[169.86402893 401.08425903]
[174.37165833 415.39093018]
[178.98565674 429.66366577]
[183.59967041 443.93640137]
[188.21368408 458.20913696]
[192.93382263 472.44714355]
[197.75981140 486.64959717]
[202.58581543 500.85205078]
[207.62272644 514.98107910]
[212.86944580 529.03356934]
[218.11616516 543.08599854]
[223.36288452 557.13848877]
[228.60960388 571.19097900]
[233.85632324 585.24340820]
[248.65980530 582.57946777]
[263.70104980 582.60174561]
[278.49655151 585.30963135]
[292.57070923 590.61602783]
[305.47109985 598.35034180]
[316.78298950 608.26403809]
[326.14279175 620.03833008]
[333.24960327 633.29473877]
[337.87500000 647.60717773]
[339.87023926 662.51550293]
[339.17123413 677.54052734]
[335.80041504 692.19921875]
[329.86618042 706.02038574]
[321.55926514 718.55975342]
[311.14669800 729.41412354]
[298.96322632 738.23474121]
[285.40045166 744.73791504]
[270.89440918 748.71466064]
[255.91140747 750.03717041]
[240.93304443 748.66284180]
[226.44085693 744.63592529]
[212.90068054 738.08587646]
[200.74778748 729.22320557]
[190.37284851 718.33282471]
[182.10935974 705.76483154]
[176.22296143 691.92321777]
[172.90289307 677.25292969]
[172.25585938 662.22558594]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 182]
[6 181]
[7 180]
[8 179]
[9 178]
[10 177]
[13 176]
[14 175]
[15 174]
[17 173]
[18 172]
[19 171]
[20 170]
[22 169]
[23 168]
[24 167]
[25 166]
[33 165]
[34 164]
[35 163]
[36 162]
[37 161]
[38 160]
[41 158]
[42 157]
[43 156]
[44 155]
[45 154]
[48 150]
[49 149]
[53 148]
[55 146]
[56 145]
[57 144]
[59 142]
[60 141]
[66 136]
[67 135]
[68 134]
[69 133]
[70 132]
[71 131]
[73 129]
[74 128]
[75 127]
[76 126]
[78 124]
[79 123]
[80 122]
[81 121]
[89 120]
[90 119]
[91 118]
[93 116]
[94 115]
[96 113]
[97 112]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
