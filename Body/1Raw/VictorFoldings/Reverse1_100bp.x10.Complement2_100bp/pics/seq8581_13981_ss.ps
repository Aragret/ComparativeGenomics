%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUAAUCAGUAACAACCCACCACUAAUCAGCCAACAACUACUCUAUAAACCUCCACCCCUAGUUAUCUCCCCCUUUAUCUUACUAGUCAUGACGCCxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[111.46640778 386.43838501]
[102.72508240 398.72821045]
[91.20149994 408.45742798]
[77.62002563 415.01443481]
[62.83441544 417.98709106]
[47.77410126 417.18847656]
[33.38578796 412.66882324]
[20.57393837 404.71221924]
[10.14391232 393.81887817]
[2.75135183 380.67349243]
[-1.13904047 366.10244751]
[-1.28271127 351.02163696]
[2.32937074 336.37911987]
[9.47014713 323.09530640]
[19.69074249 312.00518799]
[32.34868240 303.80596924]
[46.64827728 299.01300049]
[61.69063950 297.92761230]
[64.35643768 283.16641235]
[67.02223206 268.40518188]
[69.68802643 253.64396667]
[72.35382080 238.88275146]
[75.01961517 224.12153625]
[77.35510254 209.30445862]
[79.35911560 194.43893433]
[81.36313629 179.57341003]
[83.36714935 164.70788574]
[85.37116241 149.84234619]
[87.37517548 134.97682190]
[81.40761566 121.32994080]
[90.91926575 108.68719482]
[82.42258453 121.04868317]
[70.94137573 130.70175171]
[57.30447769 136.94955444]
[42.49634552 139.34103394]
[27.58598900 137.70355225]
[13.64980507 132.15533447]
[1.69385707 123.09689331]
[-7.41874552 111.18217468]
[-13.03015518 97.27131653]
[-14.73528004 82.36854553]
[-12.41102600 67.54971313]
[-6.22518158 53.88459778]
[3.37569046 42.35970306]
[15.69849586 33.80701447]
[29.85363960 28.84395981]
[44.81925201 27.82882881]
[59.51494598 30.83490181]
[72.87983704 37.64516830]
[83.94909668 47.76799011]
[91.92362213 60.47259521]
[96.22772980 74.84181976]
[96.55056763 89.83950043]
[103.03006744 76.31114960]
[109.50955963 62.78280640]
[115.98905945 49.25445938]
[122.46855164 35.72611618]
[128.94804382 22.19776917]
[135.42755127 8.66942406]
[141.90704346 -4.85892105]
[148.38653564 -18.38726616]
[136.45674133 -9.29442024]
[122.46913147 -3.87715054]
[107.52683258 -2.56268644]
[92.80826569 -5.45469141]
[79.47418976 -12.32509041]
[68.57617950 -22.63205528]
[60.97371674 -35.56273651]
[57.26634598 -50.09736252]
[57.74645233 -65.08967590]
[62.37617493 -79.35732269]
[70.79039001 -91.77509308]
[82.32551575 -101.36367035]
[96.07185364 -107.36685181]
[110.94530487 -109.31121826]
[125.77288055 -107.04341888]
[139.38522339 -100.74230194]
[150.70880127 -90.90479279]
[158.85060120 -78.30673218]
[163.16851807 -63.94165421]
[163.32202148 -48.94243622]
[159.29762268 -34.48881149]
[169.46116638 -45.52069092]
[179.62472534 -56.55256653]
[183.24053955 -74.60823822]
[200.18280029 -79.18282318]
[210.18096924 -90.36479950]
[210.91709900 -94.64406586]
[212.78843689 -98.11718750]
[215.40217590 -100.52629089]
[218.32209778 -101.76753235]
[221.12257385 -101.89196777]
[231.76858521 -112.45902252]
[242.41459656 -123.02606964]
[253.06059265 -133.59310913]
[263.70660400 -144.16015625]
[274.35263062 -154.72720337]
[284.99862671 -165.29425049]
[295.64462280 -175.86131287]
[286.11346436 -187.45834351]
[277.71014404 -199.89694214]
[270.50851440 -213.06777954]
[264.57189941 -226.85513306]
[259.95245361 -241.13781738]
[256.69076538 -255.79032898]
[254.81552124 -270.68386841]
[254.34318542 -285.68759155]
[255.27790833 -300.66961670]
[257.61148071 -315.49826050]
[261.32336426 -330.04324341]
[266.38098145 -344.17669678]
[272.73986816 -357.77444458]
[280.34414673 -370.71701050]
[289.12698364 -382.89059448]
[299.01119995 -394.18823242]
[309.90991211 -404.51068115]
[321.72735596 -413.76715088]
[334.35968018 -421.87634277]
[347.69586182 -428.76696777]
[361.61868286 -434.37850952]
[376.00582886 -438.66162109]
[390.73080444 -441.57864380]
[405.66424561 -443.10397339]
[420.67492676 -443.22418213]
[435.63088989 -441.93826294]
[450.40069580 -439.25744629]
[464.85458374 -435.20535278]
[478.86550903 -429.81753540]
[492.31036377 -423.14138794]
[505.07092285 -415.23556519]
[517.03515625 -406.16955566]
[528.09777832 -396.02301025]
[538.16168213 -384.88513184]
[547.13836670 -372.85379028]
[554.94897461 -360.03469849]
[561.52484131 -346.54052734]
[566.80822754 -332.48989868]
[570.75262451 -318.00622559]
[573.32336426 -303.21685791]
[574.49792480 -288.25173950]
[574.26599121 -273.24240112]
[572.62951660 -258.32070923]
[569.60296631 -243.61784363]
[565.21289062 -229.26300049]
[559.49786377 -215.38232422]
[552.50811768 -202.09782410]
[544.30511475 -189.52621460]
[534.96087646 -177.77801514]
[524.55761719 -166.95645142]
[513.18670654 -157.15661621]
[500.94805908 -148.46464539]
[487.94927979 -140.95693970]
[474.30456543 -134.69944763]
[460.13381958 -129.74717712]
[445.56161499 -126.14366150]
[430.71600342 -123.92055511]
[415.72744751 -123.09739685]
[400.72769165 -123.68141937]
[385.84851074 -125.66749573]
[371.22067261 -129.03816223]
[356.97277832 -133.76380920]
[343.23001099 -139.80290222]
[330.11312866 -147.10237122]
[317.73742676 -155.59805298]
[306.21166992 -165.21530151]
[295.56567383 -154.64825439]
[284.91967773 -144.08120728]
[274.27365112 -133.51416016]
[263.62765503 -122.94710541]
[252.98164368 -112.38005829]
[242.33563232 -101.81301117]
[231.68962097 -91.24596405]
[221.36294556 -80.36663055]
[211.36477661 -69.18465424]
[211.72653198 -57.09351349]
[203.48840332 -47.69580078]
[190.65660095 -46.38902283]
[180.49304199 -35.35714340]
[170.32949829 -24.32526588]
[161.91488647 -11.90777111]
[155.43539429 1.62057459]
[148.95588684 15.14892006]
[142.47639465 28.67726517]
[135.99690247 42.20561218]
[129.51741028 55.73395538]
[123.03791046 69.26229858]
[116.55841064 82.79064941]
[110.07891846 96.31899261]
[105.78479004 110.69120789]
[111.60901642 125.40137482]
[102.24069977 136.98083496]
[100.23668671 151.84635925]
[98.23267365 166.71189880]
[96.22866058 181.57742310]
[94.22464752 196.44294739]
[92.22063446 211.30847168]
[94.20485687 216.13652039]
[94.14472961 220.77868652]
[92.45339203 224.48738098]
[89.78083801 226.78732300]
[87.11504364 241.54853821]
[84.44924164 256.30975342]
[81.78344727 271.07098389]
[79.11765289 285.83218384]
[76.45185852 300.59341431]
[90.16436768 306.87176514]
[101.88419342 316.36370850]
[110.87461090 328.47250366]
[116.57048035 342.43704224]
[118.61374664 357.37945557]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 205]
[19 204]
[20 203]
[21 202]
[22 201]
[23 200]
[24 196]
[25 195]
[26 194]
[27 193]
[28 192]
[29 191]
[31 189]
[53 188]
[54 187]
[55 186]
[56 185]
[57 184]
[58 183]
[59 182]
[60 181]
[61 180]
[82 179]
[83 178]
[84 177]
[86 174]
[87 173]
[92 172]
[93 171]
[94 170]
[95 169]
[96 168]
[97 167]
[98 166]
[99 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
