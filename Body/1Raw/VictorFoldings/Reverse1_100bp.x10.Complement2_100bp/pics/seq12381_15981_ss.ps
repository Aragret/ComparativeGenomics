%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCUGACUAUUAUUUCCACCUACGCUGUUACCUAAAAUGUAUUACCCCCAUACUCAAAAAAAACAAUCCCAAUUGCUCCCACCAUUCCUACCCCCCUUAxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[2.58829260 222.72975159]
[7.84447336 236.79133606]
[11.71896076 251.29457092]
[14.17557907 266.10403442]
[15.19139099 281.08148193]
[14.75691223 296.08703613]
[12.87619877 310.98062134]
[9.56681061 325.62313843]
[4.85964870 339.87789917]
[-1.20133781 353.61178589]
[-8.55955696 366.69659424]
[-17.14630508 379.01013184]
[-26.88140869 390.43743896]
[-37.67397308 400.87182617]
[-49.42322540 410.21582031]
[-62.01946640 418.38223267]
[-75.34507751 425.29479980]
[-89.27565002 430.88894653]
[-103.68111420 435.11248779]
[-118.42695618 437.92596436]
[-133.37550354 439.30313110]
[-148.38717651 439.23107910]
[-163.32180786 437.71051025]
[-178.03996277 434.75564575]
[-192.40422058 430.39401245]
[-206.28045654 424.66641235]
[-219.53912354 417.62628174]
[-232.05639648 409.33932495]
[-243.71542358 399.88296509]
[-254.40733337 389.34548950]
[-264.03231812 377.82528687]
[-272.50048828 365.42990112]
[-279.73275757 352.27505493]
[-285.66165161 338.48361206]
[-290.23178101 324.18435669]
[-293.40048218 309.51074219]
[-295.13815308 294.59979248]
[-295.42858887 279.59075928]
[-294.26907349 264.62374878]
[-291.67041016 249.83854675]
[-287.65689087 235.37316895]
[-282.26599121 221.36268616]
[-275.54803467 207.93791199]
[-267.56573486 195.22419739]
[-258.39364624 183.34024048]
[-248.11740112 172.39701843]
[-236.83293152 162.49668884]
[-224.64562988 153.73171997]
[-211.66925049 146.18391418]
[-198.02499390 139.92375183]
[-183.84022522 135.00970459]
[-169.24739075 131.48764038]
[-154.38276672 129.39045715]
[-139.38511658 128.73770142]
[-124.39448547 129.53550720]
[-109.55083466 131.77641296]
[-94.99276733 135.43949890]
[-80.85620117 140.49053955]
[-67.27313995 146.88240051]
[-54.37039948 154.55538940]
[-42.26845169 163.43788147]
[-31.08029938 173.44689941]
[-20.91039848 184.48904419]
[-8.94806194 175.43904114]
[3.01427484 166.38903809]
[14.97661114 157.33903503]
[26.93894768 148.28903198]
[38.90128326 139.23904419]
[50.72755432 130.01193237]
[62.41513443 120.60978699]
[74.10271454 111.20763397]
[85.79029846 101.80548859]
[91.02160645 88.83917999]
[104.80754852 86.50693512]
[116.06364441 76.59228516]
[126.86579895 66.18490601]
[127.32434082 50.61482620]
[138.42752075 40.21414948]
[153.26838684 40.74724960]
[164.07054138 30.33987617]
[174.87269592 19.93250275]
[185.67486572 9.52512932]
[196.47702026 -0.88224393]
[207.27917480 -11.28961754]
[218.08132935 -21.69699097]
[228.88348389 -32.10436249]
[219.21708679 -43.58172989]
[210.33886719 -55.67911148]
[202.28851318 -68.34248352]
[195.10194397 -81.51527405]
[188.81127930 -95.13866425]
[183.44461060 -109.15180969]
[179.02589417 -123.49211121]
[175.57489014 -138.09552002]
[173.10697937 -152.89683533]
[171.63322449 -167.82992554]
[171.16017151 -182.82810974]
[171.68994141 -197.82440186]
[173.22018433 -212.75181580]
[175.74404907 -227.54367065]
[179.25027466 -242.13394165]
[183.72319031 -256.45742798]
[189.14283752 -270.45016479]
[195.48498535 -284.04965210]
[202.72132874 -297.19519043]
[210.81953430 -309.82800293]
[219.74343872 -321.89172363]
[229.45318604 -333.33245850]
[239.90539551 -344.09909058]
[251.05342102 -354.14352417]
[262.84744263 -363.42092896]
[275.23477173 -371.88989258]
[288.16012573 -379.51251221]
[301.56576538 -386.25482178]
[315.39178467 -392.08663940]
[329.57644653 -396.98199463]
[344.05642700 -400.91894531]
[358.76702881 -403.87997437]
[373.64254761 -405.85180664]
[388.61654663 -406.82568359]
[403.62216187 -406.79721069]
[418.59234619 -405.76651001]
[433.46029663 -403.73825073]
[448.15954590 -400.72140503]
[462.62448120 -396.72952271]
[476.79046631 -391.78039551]
[490.59423828 -385.89611816]
[503.97418213 -379.10299683]
[516.87054443 -371.43136597]
[529.22564697 -362.91546631]
[540.98437500 -353.59338379]
[552.09417725 -343.50668335]
[562.50549316 -332.70046997]
[572.17175293 -321.22299194]
[581.04980469 -309.12548828]
[589.09997559 -296.46200562]
[596.28637695 -283.28912354]
[602.57690430 -269.66564941]
[607.94335938 -255.65245056]
[612.36187744 -241.31210327]
[615.81274414 -226.70863342]
[618.28045654 -211.90730286]
[619.75402832 -196.97418213]
[620.22686768 -181.97599792]
[619.69689941 -166.97972107]
[618.16650391 -152.05232239]
[615.64245605 -137.26048279]
[612.13604736 -122.67027283]
[607.66290283 -108.34683990]
[602.24310303 -94.35417175]
[595.90081787 -80.75475311]
[588.66430664 -67.60932159]
[580.56591797 -54.97659683]
[571.64184570 -42.91299438]
[561.93200684 -31.47239494]
[551.47961426 -20.70589828]
[540.33148193 -10.66158485]
[528.53735352 -1.38432038]
[516.14990234 7.08446264]
[503.22445679 14.70693970]
[489.81875610 21.44906807]
[475.99264526 27.28073311]
[461.80792236 32.17588806]
[447.32788086 36.11267471]
[432.61724854 39.07350540]
[417.74172974 41.04516220]
[402.76770020 42.01883316]
[387.76208496 41.99016953]
[372.79190063 40.95930481]
[357.92398071 38.93083572]
[343.22476196 35.91382980]
[328.75988770 31.92175484]
[314.59396362 26.97244644]
[300.79025269 21.08800507]
[287.41040039 14.29471493]
[274.51416016 6.62291574]
[262.15914917 -1.89312768]
[250.40054321 -11.21538067]
[239.29086304 -21.30220795]
[228.48870850 -10.89483356]
[217.68653870 -0.48746076]
[206.88438416 9.91991234]
[196.08222961 20.32728577]
[185.28007507 30.73465919]
[174.47792053 41.14203262]
[163.67576599 51.54940414]
[163.65620422 66.39983368]
[152.84953308 77.10826874]
[137.27317810 76.98706818]
[126.47101593 87.39443970]
[141.40911865 88.75579071]
[151.11486816 100.19249725]
[150.02839661 115.15309906]
[138.77206421 125.06747437]
[123.79401398 124.25623322]
[113.67435455 113.18408203]
[114.20970154 98.19451141]
[108.97839355 111.16082001]
[95.19245148 113.49306488]
[83.50486755 122.89521790]
[71.81728363 132.29736328]
[60.12970734 141.69952393]
[57.38845062 147.71591187]
[52.72096634 150.95808411]
[47.95128632 151.20137024]
[35.98894882 160.25137329]
[24.02661133 169.30137634]
[12.06427479 178.35137939]
[0.10193801 187.40136719]
[-11.86039829 196.45137024]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[63 210]
[64 209]
[65 208]
[66 207]
[67 206]
[68 205]
[69 202]
[70 201]
[71 200]
[72 199]
[74 197]
[75 190]
[76 189]
[79 186]
[80 185]
[81 184]
[82 183]
[83 182]
[84 181]
[85 180]
[86 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
