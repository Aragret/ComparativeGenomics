%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGUCCAAAACCGAGCAUUCUUCCGGAUCUAUCCCCUAACACGCCACACACUACGAUCCCAUCUUAGGCUCAUACAACCUCUUUAUUUUACACGUAUCACCxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[88.34088898 711.30383301]
[80.20475769 723.96087646]
[69.82011414 734.84918213]
[57.56235123 743.57525635]
[43.87457275 749.82354736]
[29.25159073 753.36822510]
[14.22201443 754.08117676]
[-0.67084819 751.93664551]
[-14.88862801 747.01208496]
[-27.91736031 739.48553467]
[-39.28606796 729.62908936]
[-48.58377457 717.79907227]
[-55.47437668 704.42315674]
[-59.70878220 689.98480225]
[-61.13391876 675.00598145]
[-59.69827271 660.02813721]
[-55.45373917 645.59271240]
[-48.55375671 632.22161865]
[-39.24775314 620.39813232]
[-27.87213707 610.54968262]
[-14.83812904 603.03228760]
[-0.61689830 598.11773682]
[14.27746487 595.98358154]
[29.30653763 596.70709229]
[32.84621048 582.13073730]
[36.38588333 567.55432129]
[39.92555618 552.97796631]
[43.46522903 538.40161133]
[41.98891830 531.15991211]
[47.16763306 523.63537598]
[45.79930496 516.37243652]
[51.08947372 508.92587280]
[55.06156921 494.46133423]
[59.03366470 479.99682617]
[62.89797211 465.50311279]
[66.65427399 450.98104858]
[60.78748322 440.40243530]
[63.79806900 428.27313232]
[74.60144806 421.22686768]
[70.51062012 406.90505981]
[81.62609100 395.64642334]
[85.59818268 381.18188477]
[89.57028198 366.71737671]
[93.54237366 352.25283813]
[95.54639435 337.38729858]
[95.54639435 322.38729858]
[95.54639435 307.38729858]
[95.54639435 292.38729858]
[95.54639435 277.38729858]
[95.54639435 262.38729858]
[95.54639435 247.38731384]
[95.54639435 232.38731384]
[95.43472290 217.38772583]
[95.21139526 202.38938904]
[94.98806763 187.39105225]
[94.65309143 172.39479065]
[94.20648956 157.40144348]
[93.75988007 142.40809631]
[93.31327820 127.41474152]
[92.86666870 112.42139435]
[85.68240356 100.42647552]
[92.13998413 88.02521515]
[91.69337463 73.03186035]
[83.54862213 59.46817780]
[90.90355682 46.51618195]
[82.75880432 32.95249557]
[90.11373138 20.00049591]
[81.27822113 10.60387421]
[81.21491241 -1.89331543]
[89.41233826 -10.78875160]
[89.18901062 -25.78708839]
[88.96568298 -40.78542709]
[88.51907349 -55.77877426]
[87.84928894 -70.76381683]
[87.06796265 -85.74345398]
[86.17514801 -100.71685791]
[85.28233337 -115.69026184]
[74.54174042 -105.21936798]
[59.54183197 -105.27218628]
[48.87524033 -115.81845856]
[48.65227509 -130.81680298]
[59.00065613 -141.67547607]
[73.99236298 -142.17416382]
[85.03906250 -132.02803040]
[85.48567200 -147.02137756]
[85.93227386 -162.01472473]
[73.39103699 -153.78567505]
[59.09111023 -158.31469727]
[53.57386780 -172.26316833]
[60.90641403 -185.34880066]
[75.68347168 -187.92533875]
[87.01127625 -178.09498596]
[88.57180023 -193.01359558]
[90.13232422 -207.93218994]
[91.69284821 -222.85079956]
[92.80849457 -237.80924988]
[93.47827911 -252.79429626]
[86.36490631 -266.92617798]
[94.66279602 -279.29528809]
[95.33258057 -294.28030396]
[81.69191742 -301.05172729]
[71.98973846 -312.79003906]
[67.90701294 -327.46148682]
[70.15108490 -342.52413940]
[78.33316803 -355.36834717]
[91.03565979 -363.76873779]
[106.05778503 -366.26989746]
[120.79685211 -362.43850708]
[132.69924927 -352.93835449]
[139.70280457 -339.41540527]
[140.59410095 -324.21258545]
[135.21873474 -309.96389771]
[124.50800323 -299.13800049]
[110.31761932 -293.61053467]
[109.64783478 -278.62548828]
[116.80911255 -265.56542969]
[108.46331787 -252.12451172]
[107.79353333 -237.13946533]
[109.58351898 -234.98213196]
[110.62680817 -231.98577881]
[110.59954834 -228.43124390]
[109.28544617 -224.71134949]
[106.61145020 -221.29026794]
[105.05093384 -206.37167358]
[103.49040985 -191.45306396]
[101.92988586 -176.53445435]
[100.92562103 -161.56811523]
[100.47901917 -146.57476807]
[100.03240967 -131.58142090]
[100.25573730 -116.58307648]
[101.14855957 -101.60967255]
[102.04137421 -86.63626862]
[105.57742310 -80.14642334]
[102.83432770 -71.43360138]
[103.50411224 -56.44856262]
[106.36151886 -52.62178040]
[106.84530640 -46.95936203]
[103.96401978 -41.00875473]
[104.18734741 -26.01041603]
[104.41067505 -11.01207924]
[114.20920563 3.54661632]
[105.10708618 19.55389023]
[113.21989441 32.04515076]
[105.89690399 46.06957245]
[114.00971222 58.56083679]
[106.68672180 72.58525848]
[107.13333130 87.57860565]
[114.31759644 99.57352448]
[107.86001587 111.97478485]
[108.30662537 126.96813965]
[108.75322723 141.96148682]
[109.19983673 156.95483398]
[109.64643860 171.94818115]
[113.02996826 180.43284607]
[109.98640442 187.16772461]
[110.20973206 202.16606140]
[110.43305969 217.16439819]
[113.68988800 225.69850159]
[110.54639435 232.38731384]
[110.54639435 247.38731384]
[110.54639435 262.38729858]
[110.54639435 277.38729858]
[110.54639435 292.38729858]
[110.54639435 307.38729858]
[110.54639435 322.38729858]
[110.54639435 337.38729858]
[117.55101013 324.12326050]
[128.26773071 313.62792969]
[141.67509460 306.90167236]
[156.49520874 304.58560181]
[171.31552124 306.90048218]
[184.72343445 313.62564087]
[195.44099426 324.12011719]
[202.44668579 337.38360596]
[205.07275391 352.15194702]
[203.06892395 367.01748657]
[196.62615967 380.56335449]
[186.35855103 391.49847412]
[173.24476624 398.78051758]
[158.53468323 401.71545410]
[143.63041687 400.02352905]
[129.95251465 393.86599731]
[118.80469513 383.82974243]
[111.24947357 370.87142944]
[108.00690460 356.22494507]
[104.03480530 370.68945312]
[100.06270599 385.15399170]
[96.09061432 399.61849976]
[99.89733124 414.97491455]
[89.06597137 425.19897461]
[94.13367462 442.90206909]
[81.17633057 454.73736572]
[77.42002869 469.25942993]
[78.30071259 478.35128784]
[73.49819183 483.96890259]
[69.52609253 498.43344116]
[65.55399323 512.89794922]
[61.68968964 527.39166260]
[58.04160309 541.94128418]
[54.50193024 556.51763916]
[50.96225739 571.09399414]
[47.42258453 585.67041016]
[43.88291168 600.24676514]
[57.56999207 606.49658203]
[69.82678223 615.22399902]
[80.21021271 626.11346436]
[88.34493256 638.77142334]
[93.93685913 652.74017334]
[96.78386688 667.51489258]
[96.78302765 682.56134033]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 203]
[25 202]
[26 201]
[27 200]
[28 199]
[30 198]
[32 197]
[33 196]
[34 195]
[35 193]
[36 192]
[39 190]
[41 188]
[42 187]
[43 186]
[44 185]
[45 166]
[46 165]
[47 164]
[48 163]
[49 162]
[50 161]
[51 160]
[52 159]
[53 157]
[54 156]
[55 155]
[56 153]
[57 152]
[58 151]
[59 150]
[60 149]
[62 147]
[63 146]
[65 144]
[67 142]
[70 140]
[71 139]
[72 138]
[73 135]
[74 134]
[75 132]
[76 131]
[77 130]
[84 129]
[85 128]
[86 127]
[92 126]
[93 125]
[94 124]
[95 123]
[96 118]
[97 117]
[99 115]
[100 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
