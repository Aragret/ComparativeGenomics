%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUACUCUCAUUAUCUAUCCCGAGUCCGCAAACACAUACUAUACAAACGCCAAAGCUACUACACCAGAAACCUCAUCUUUGGACACUCCUUUCCAUAAxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[24.07065392 562.05169678]
[11.72241688 570.67346191]
[-2.19072723 576.43878174]
[-17.01803398 579.07788086]
[-32.06600571 578.46746826]
[-46.63081741 574.63598633]
[-60.03125000 567.76263428]
[-71.64054108 558.16900635]
[-80.91570282 546.30364990]
[-87.42291260 532.72167969]
[-90.85782623 518.05828857]
[-91.05978394 502.99929810]
[-88.01933289 488.24905396]
[-81.87869263 474.49743652]
[-72.92505646 462.38766479]
[-61.57721710 452.48611450]
[-48.36592865 445.25592041]
[-33.90910339 441.03521729]
[-18.88291359 440.02145386]
[-16.65779686 425.18740845]
[-14.43267918 410.35336304]
[-12.20756149 395.51931763]
[-9.98244476 380.68527222]
[-11.53827858 378.35342407]
[-12.26418018 375.26480103]
[-11.86727333 371.73239136]
[-10.17330074 368.16937256]
[-7.15790796 365.04507446]
[-4.05379772 350.36975098]
[-0.94968766 335.69445801]
[-11.07791710 346.75875854]
[-24.63661766 353.17449951]
[-39.61443710 353.98992920]
[-53.78950500 349.08407593]
[-65.05903625 339.18469238]
[-71.75125885 325.76031494]
[-72.87342072 310.80233765]
[-68.25906372 296.52972412]
[-58.59269333 285.05969238]
[-45.30825806 278.09381104]
[-30.37642860 276.66534424]
[-16.01225090 280.98626709]
[-4.34656477 290.41558838]
[2.89009333 303.55447388]
[4.62435722 318.45199585]
[10.69819164 304.73672485]
[16.77202606 291.02148438]
[22.84585953 277.30621338]
[28.91969299 263.59094238]
[34.99352646 249.87567139]
[40.65631485 235.98564148]
[45.90303040 221.93316650]
[45.29772186 214.56735229]
[51.33389282 207.71151733]
[56.78924942 193.73870850]
[62.24460602 179.76591492]
[67.69995880 165.79312134]
[73.15531921 151.82032776]
[72.65974426 144.44630432]
[78.79731750 137.68109131]
[84.46010590 123.79106903]
[89.39169312 109.62493134]
[86.24539948 96.00170135]
[96.20452118 86.18805695]
[92.62686157 70.77667236]
[103.60923767 60.71502304]
[107.79624939 46.31124115]
[111.98326111 31.90745926]
[110.79865265 27.73005676]
[110.98612976 23.78932381]
[112.30278778 20.48753357]
[114.40005493 18.10676384]
[116.87201691 16.78482056]
[121.90893555 2.65579104]
[126.94585419 -11.47323799]
[131.98277283 -25.60226822]
[137.01968384 -39.73129654]
[139.02369690 -54.59682465]
[137.90805054 -69.55528259]
[136.79240417 -84.51373291]
[134.22145081 -88.01290131]
[133.01869202 -91.77027893]
[133.09727478 -95.32404327]
[134.22930908 -98.28800964]
[136.08273315 -100.39109039]
[135.85940552 -115.38942719]
[127.16477203 -124.91655731]
[127.28752899 -137.41329956]
[135.61648560 -146.18571472]
[135.61648560 -161.18571472]
[135.50482178 -176.18528748]
[135.28149414 -191.18362427]
[135.05816650 -206.18196106]
[134.83483887 -221.18029785]
[134.61151123 -236.17863464]
[134.38818359 -251.17697144]
[134.16485596 -266.17532349]
[133.94152832 -281.17364502]
[119.92200470 -287.12115479]
[109.53835297 -298.26116943]
[104.58960724 -312.66360474]
[105.93315887 -327.83312988]
[113.33623505 -341.14157104]
[125.51620483 -350.28311157]
[140.36282349 -353.67398071]
[155.30380249 -350.72665405]
[167.75056458 -341.95178223]
[175.54658508 -328.86968994]
[177.34120178 -313.74688721]
[172.82345581 -299.20349121]
[162.77609253 -287.75927734]
[148.93986511 -281.39697266]
[149.16319275 -266.39865112]
[149.38652039 -251.40029907]
[149.60984802 -236.40196228]
[149.83317566 -221.40362549]
[150.05650330 -206.40528870]
[150.27983093 -191.40695190]
[150.50315857 -176.40861511]
[153.74589539 -169.76734924]
[150.61648560 -161.18571472]
[150.61648560 -146.18571472]
[160.19718933 -131.48274231]
[150.85774231 -115.61275482]
[151.08106995 -100.61441803]
[151.75085449 -85.62937927]
[152.86650085 -70.67092896]
[153.98214722 -55.71247482]
[159.59584045 -69.62241364]
[167.94319153 -82.08522797]
[178.66928101 -92.57098389]
[191.31802368 -100.63381958]
[205.35159302 -105.93090820]
[220.17326355 -108.23700714]
[235.15281677 -107.45406342]
[249.65330505 -103.61537170]
[263.05819702 -96.88414764]
[274.79745483 -87.54660797]
[284.37194824 -75.99979401]
[291.37457275 -62.73468018]
[295.50756836 -48.31530380]
[296.59518433 -33.35478592]
[294.59118652 -18.48925781]
[289.58078003 -4.35080290]
[281.77703857 8.45940018]
[271.51171875 19.39665604]
[259.22137451 27.99590683]
[245.42854309 33.89151001]
[230.71974182 36.83277512]
[215.72038269 36.69464493]
[201.06823730 33.48299408]
[187.38633728 27.33437729]
[175.25642395 18.51023865]
[165.19429016 7.38578701]
[157.62777710 -5.56596088]
[152.87860107 -19.79429054]
[151.14871216 -34.69438171]
[146.11180115 -20.56535149]
[141.07487488 -6.43632221]
[136.03796387 7.69270706]
[131.00105286 21.82173729]
[126.38703918 36.09447098]
[122.20002747 50.49825287]
[118.01301575 64.90203094]
[121.89015961 79.28316498]
[110.60830688 90.37506866]
[113.75460052 103.99829865]
[103.79547882 113.81194305]
[116.89865112 106.51079559]
[131.65255737 109.21674347]
[141.31192017 120.69267273]
[141.46058655 135.69194031]
[132.03060913 147.35707092]
[117.33322906 150.35494995]
[104.08790588 143.31495667]
[98.35012817 129.45385742]
[92.68733978 143.34387207]
[87.12812042 157.27568054]
[81.67276001 171.24847412]
[76.21739960 185.22126770]
[70.76204681 199.19407654]
[65.30668640 213.16687012]
[59.95550156 227.17988586]
[54.70878601 241.23236084]
[55.57940292 245.48629761]
[55.09935379 249.40217590]
[53.54076767 252.59689331]
[51.27223206 254.81507874]
[48.70879364 255.94950867]
[42.63496017 269.66476440]
[36.56112671 283.38003540]
[30.48729134 297.09530640]
[24.41345787 310.81057739]
[18.33962440 324.52584839]
[13.72561455 338.79858398]
[10.62150478 353.47387695]
[7.51739454 368.14916992]
[4.85159922 382.91040039]
[2.62648177 397.74444580]
[0.40136465 412.57849121]
[-1.82375252 427.41253662]
[-4.04886961 442.24658203]
[10.01857185 447.62442017]
[22.60079765 455.90097046]
[33.10931778 466.68917847]
[41.05262756 479.48440552]
[46.05920029 493.68820190]
[47.89487457 508.63626099]
[46.47379303 523.62939453]
[41.86241913 537.96643066]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 202]
[20 201]
[21 200]
[22 199]
[23 198]
[28 197]
[29 196]
[30 195]
[45 194]
[46 193]
[47 192]
[48 191]
[49 190]
[50 189]
[51 184]
[52 183]
[54 182]
[55 181]
[56 180]
[57 179]
[58 178]
[60 177]
[61 176]
[62 168]
[64 166]
[66 164]
[67 163]
[68 162]
[73 161]
[74 160]
[75 159]
[76 158]
[77 157]
[78 128]
[79 127]
[80 126]
[85 125]
[86 124]
[89 122]
[90 121]
[91 119]
[92 118]
[93 117]
[94 116]
[95 115]
[96 114]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
