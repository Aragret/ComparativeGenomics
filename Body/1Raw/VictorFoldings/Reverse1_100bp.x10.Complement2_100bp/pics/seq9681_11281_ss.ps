%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGGCAGCCUUUACCACUUCCCUCUGAGCUUCAUGAGACUCCGAACAUCCUCCCAUUUUAUCUCUGGGUCAUUUUAACAUUAUUCGUCACGAACUUAAUxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[179.84939575 635.44506836]
[171.30555725 623.10638428]
[163.76905823 610.12792969]
[157.28753662 596.59167480]
[151.90196228 582.58325195]
[147.64639282 568.19122314]
[144.54772949 553.50659180]
[142.62556458 538.62219238]
[141.89205933 523.63214111]
[142.35183716 508.63119507]
[144.00199890 493.71417236]
[146.83210754 478.97543335]
[150.82427979 464.50814819]
[155.95326233 450.40374756]
[162.18664551 436.75146484]
[169.48500061 423.63757324]
[177.80218506 411.14501953]
[187.08563232 399.35272217]
[197.27664185 388.33529663]
[208.31076050 378.16238403]
[220.11825562 368.89831543]
[232.62445068 360.60162354]
[225.35122681 347.48294067]
[218.07800293 334.36422729]
[210.80476379 321.24554443]
[198.04344177 319.46286011]
[188.49642944 310.52212524]
[185.80236816 297.52395630]
[191.16418457 285.16815186]
[184.08708191 271.94262695]
[177.00997925 258.71710205]
[169.83460999 245.54463196]
[162.56138611 232.42593384]
[155.28814697 219.30725098]
[142.35003662 211.92791748]
[142.42547607 196.10688782]
[135.15223694 182.98818970]
[129.15971375 178.66252136]
[127.87004089 169.61959839]
[120.79293823 156.39405823]
[114.86547852 151.97964478]
[113.71057892 142.91851807]
[106.83116913 129.58909607]
[99.95175934 116.25966644]
[89.09020233 112.05634308]
[83.82598877 101.66744232]
[86.85994720 90.42304993]
[80.17974854 76.99267578]
[79.11192322 91.95462036]
[72.46850586 105.40322113]
[61.23500824 115.34346771]
[47.07785416 120.30078125]
[32.09717178 119.53977203]
[18.51525497 113.17333221]
[8.34690285 102.14588165]
[3.10052943 88.09328461]
[3.55440283 73.10015106]
[9.64119339 59.39063263]
[20.45796204 48.99844742]
[34.40010452 43.46521759]
[49.39939117 43.61176300]
[63.23075867 49.41634750]
[73.84134674 60.01630783]
[70.08504486 45.49424744]
[66.32874298 30.97218895]
[62.57244492 16.45013046]
[51.62583542 5.02724409]
[55.92944336 -9.23207760]
[44.98283386 -20.65496445]
[49.28643799 -34.91428375]
[45.53013611 -49.43634415]
[41.77383804 -63.95840454]
[38.01753616 -78.48046112]
[28.27179527 -67.07780457]
[13.27605438 -67.43521881]
[4.08461475 -79.28922272]
[7.47306442 -93.90148926]
[20.94356346 -100.50040436]
[34.56510544 -94.22275543]
[31.89930916 -108.98397064]
[29.23351288 -123.74519348]
[23.77752113 -109.77264404]
[13.16751099 -99.16944885]
[-0.80854225 -93.72243500]
[-15.79542828 -94.34952545]
[-29.26759529 -100.94503021]
[-38.95474243 -112.39750671]
[-43.22442245 -126.77700043]
[-41.35710907 -141.66032410]
[-33.66748810 -154.53935242]
[-21.45138741 -163.24377441]
[-6.76743984 -166.30673218]
[7.90985441 -163.21205139]
[20.10711288 -154.48124695]
[27.76941872 -141.58404541]
[27.99274635 -156.58238220]
[28.21607399 -171.58071899]
[28.43940163 -186.57905579]
[14.35878372 -192.24479675]
[3.27837348 -202.61730957]
[-3.30329418 -216.29379272]
[-4.49610281 -231.42460632]
[-0.13873552 -245.96343994]
[9.17951012 -257.94403076]
[22.19841766 -265.74612427]
[37.15728760 -268.31451416]
[52.03305435 -265.30187988]
[64.81388855 -257.11563110]
[73.77130127 -244.86291504]
[77.69386292 -230.20079041]
[76.05107880 -215.11219788]
[69.06513214 -201.63774109]
[57.68080521 -191.59973145]
[43.43773651 -186.35572815]
[43.21440887 -171.35739136]
[42.99108124 -156.35905457]
[42.76775360 -141.36071777]
[43.99473190 -126.41098785]
[46.66052628 -111.64976501]
[49.32632065 -96.88854980]
[52.53959656 -82.23676300]
[56.29589462 -67.71470642]
[60.05219650 -53.19264603]
[63.80849838 -38.67058563]
[74.48642731 -28.28641510]
[70.45149994 -12.98837852]
[81.12943268 -2.60420680]
[77.09450531 12.69382954]
[80.85080719 27.21588898]
[84.60710907 41.73794937]
[88.36340332 56.26000595]
[93.61012268 70.31247711]
[100.29032135 83.74285126]
[114.50398254 92.65060425]
[113.28118896 109.38025665]
[120.16059875 122.70968628]
[127.04000854 136.03910828]
[134.01846313 149.31695557]
[141.09556580 162.54248047]
[148.27093506 175.71496582]
[155.54415894 188.83364868]
[169.00250244 197.15132141]
[168.40684509 212.03401184]
[175.68006897 225.15270996]
[182.95330811 238.27140808]
[189.85130310 244.25933838]
[190.23550415 251.63999939]
[197.31260681 264.86553955]
[204.38970947 278.09106445]
[221.22225952 282.85391235]
[229.24429321 298.01840210]
[223.92346191 313.97232056]
[231.19668579 327.09100342]
[238.46992493 340.20971680]
[245.74314880 353.32839966]
[259.40539551 347.11685181]
[273.51794434 342.01040649]
[287.99160767 338.04138184]
[302.73486328 335.23480225]
[317.65447998 333.60848999]
[332.65615845 333.17269897]
[347.64501953 333.93014526]
[362.52633667 335.87609863]
[377.20599365 338.99822998]
[391.59118652 343.27679443]
[405.59097290 348.68475342]
[419.11685181 355.18789673]
[432.08328247 362.74514771]
[444.40829468 371.30868530]
[456.01397705 380.82437134]
[466.82690430 391.23205566]
[476.77877808 402.46597290]
[485.80667114 414.45501709]
[493.85345459 427.12344360]
[500.86831665 440.39117432]
[506.80685425 454.17425537]
[511.63153076 468.38562012]
[515.31188965 482.93536377]
[517.82458496 497.73153687]
[519.15380859 512.68054199]
[519.29107666 527.68792725]
[518.23559570 542.65875244]
[515.99395752 557.49841309]
[512.58044434 572.11303711]
[508.01657104 586.41027832]
[502.33117676 600.29974365]
[495.56024170 613.69354248]
[487.74658203 626.50708008]
[478.93954468 638.65930176]
[469.19485474 650.07336426]
[458.57412720 660.67718506]
[447.14450073 670.40356445]
[434.97821045 679.19116211]
[422.15222168 686.98437500]
[408.74758911 693.73388672]
[394.84906006 699.39709473]
[380.54455566 703.93811035]
[365.92446899 707.32824707]
[351.08126831 709.54614258]
[336.10876465 710.57769775]
[321.10162354 710.41644287]
[306.15472412 709.06335449]
[291.36260986 706.52697754]
[276.81875610 702.82336426]
[262.61514282 697.97601318]
[248.84155273 692.01544189]
[235.58506775 684.97943115]
[222.92951965 676.91235352]
[210.95489502 667.86535645]
[199.73692322 657.89550781]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 155]
[23 154]
[24 153]
[25 152]
[29 149]
[30 148]
[31 147]
[32 145]
[33 144]
[34 143]
[36 141]
[37 140]
[39 139]
[40 138]
[42 137]
[43 136]
[44 135]
[47 133]
[48 132]
[63 131]
[64 130]
[65 129]
[66 128]
[68 126]
[70 124]
[71 123]
[72 122]
[73 121]
[79 120]
[80 119]
[81 118]
[95 117]
[96 116]
[97 115]
[98 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
