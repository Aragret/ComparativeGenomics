%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[132.38516235 472.19769287]
[136.41250610 457.71881104]
[142.55293274 444.00192261]
[150.66925049 431.35348511]
[160.58015442 420.05606079]
[172.06420898 410.36206055]
[184.86488342 402.48800659]
[178.99592590 388.68383789]
[173.12695312 374.87966919]
[167.25799561 361.07546997]
[155.15780640 352.39016724]
[156.87876892 336.66284180]
[151.00979614 322.85867310]
[145.14083862 309.05450439]
[142.02525330 307.40359497]
[139.55451965 304.16159058]
[138.46771240 299.64804077]
[139.33332825 294.50045776]
[134.08660889 280.44796753]
[128.83988953 266.39550781]
[124.78591919 280.83731079]
[114.12346649 291.38775635]
[99.63967896 295.28903198]
[85.12057495 291.52130127]
[74.36141968 281.06948853]
[70.17462921 266.66564941]
[73.65461731 252.07490540]
[83.89172363 241.11125183]
[98.20999908 236.64056396]
[112.86666870 239.83146667]
[124.03004456 249.84912109]
[120.92593384 235.17381287]
[117.82182312 220.49850464]
[114.71771240 205.82321167]
[102.13289642 197.93917847]
[98.77583313 183.10055542]
[107.13066101 169.95388794]
[104.02655029 155.27859497]
[100.92243958 140.60328674]
[97.81832886 125.92798615]
[82.85430908 119.57154846]
[74.58441162 105.57387543]
[76.23741150 89.40001678]
[87.16793823 77.36466217]
[83.84568024 62.73720551]
[80.52342224 48.10974503]
[77.46184540 45.03066635]
[75.71501160 41.49327850]
[75.26555634 37.96717834]
[75.94539642 34.86807632]
[77.46633911 32.51332092]
[75.02060699 17.71405029]
[72.57488251 2.91477871]
[70.12915802 -11.88449192]
[67.68342590 -26.68376350]
[65.23770142 -41.48303223]
[52.48935318 -46.72425842]
[44.06235886 -57.49478531]
[42.07361603 -70.91545868]
[46.93679428 -83.46511078]
[57.28189468 -91.90436554]
[55.05677795 -106.73840332]
[52.83166122 -121.57244873]
[40.40614319 -130.96629333]
[38.36087418 -146.04182434]
[47.39303970 -157.82975769]
[37.69421005 -170.32948303]
[43.45792770 -184.06370544]
[41.23281097 -198.89775085]
[26.60732079 -199.48741150]
[12.34512711 -202.76182556]
[-1.06537437 -208.60731506]
[-13.16524315 -216.82217407]
[-23.54069519 -227.12362671]
[-31.83725929 -239.15760803]
[-37.77188110 -252.51084900]
[-41.14258575 -266.72515869]
[-41.83534241 -281.31311035]
[-39.82793045 -295.77468872]
[-35.19064713 -309.61459351]
[-28.08384132 -322.35900879]
[-18.75237656 -333.57196045]
[-7.51719236 -342.87017822]
[5.23573828 -349.93618774]
[19.06866264 -354.52920532]
[17.06464958 -369.39471436]
[15.06063557 -384.26025391]
[13.05662251 -399.12579346]
[11.05260849 -413.99130249]
[-3.92628789 -415.74728394]
[-17.99760246 -421.17398071]
[-30.27680206 -429.93023682]
[-39.99200439 -441.46563721]
[-46.53250504 -455.05508423]
[-49.48715973 -469.84429932]
[-48.67024231 -484.90362549]
[-44.13309860 -499.28643799]
[-36.16093826 -512.08862305]
[-25.25490189 -522.50537109]
[-12.10054779 -529.88195801]
[2.47522712 -533.75463867]
[17.55617905 -533.87994385]
[32.19430542 -530.25006104]
[45.46944427 -523.09313965]
[56.54710388 -512.85906982]
[64.73094177 -500.19116211]
[69.50650787 -485.88577271]
[70.57360077 -470.84210205]
[67.86515808 -456.00582886]
[61.55142212 -442.30953979]
[52.02928543 -430.61425781]
[39.89731598 -421.65512085]
[25.91813660 -415.99533081]
[27.92214966 -401.12979126]
[29.92616463 -386.26428223]
[31.93017769 -371.39874268]
[33.93419266 -356.53320312]
[49.29727173 -355.64501953]
[64.19866943 -351.78436279]
[78.06873322 -345.09704590]
[90.37687683 -335.83679199]
[100.65186310 -324.35595703]
[108.49987030 -311.09182739]
[113.61957550 -296.55014038]
[115.81370544 -281.28579712]
[114.99665833 -265.88156128]
[111.19784546 -250.92593384]
[104.56062317 -236.99064636]
[95.33687592 -224.60877991]
[83.87749481 -214.25436401]
[70.61898041 -206.32423401]
[56.06685638 -201.12287903]
[58.29197311 -186.28883362]
[67.83164978 -174.85012817]
[62.22708511 -160.05487061]
[74.32032013 -151.43576050]
[76.78822327 -136.42362976]
[67.66570282 -123.79756927]
[69.89082336 -108.96352386]
[72.11594391 -94.12947845]
[86.91603851 -87.02775574]
[94.64422607 -72.35679626]
[92.07954407 -55.80615997]
[80.03697205 -43.92876053]
[82.48269653 -29.12948990]
[84.92842865 -14.33021927]
[87.37415314 0.46905121]
[89.81987762 15.26832199]
[92.26560974 30.06759262]
[95.15087891 44.78748322]
[98.47313690 59.41494370]
[101.79540253 74.04240417]
[114.33319855 78.28411865]
[123.16207886 88.14511871]
[125.99745178 101.07373810]
[122.10560608 113.72451019]
[112.49362946 122.82387543]
[115.59774017 137.49917603]
[118.70185089 152.17448425]
[121.80596161 166.84977722]
[134.76858521 175.48739624]
[137.70753479 190.41445923]
[129.39302063 202.71910095]
[132.49713135 217.39440918]
[135.60124207 232.06970215]
[138.70535278 246.74501038]
[142.89236450 261.14880371]
[148.13906860 275.20126343]
[153.38578796 289.25372314]
[158.94502258 303.18551636]
[164.81398010 316.98971558]
[170.68293762 330.79388428]
[183.20292664 340.46655273]
[181.06217957 355.20651245]
[186.93113708 369.01068115]
[192.80009460 382.81488037]
[198.66905212 396.61904907]
[213.22093201 392.86395264]
[228.16993713 391.31970215]
[243.18212891 392.02087402]
[257.92214966 394.95175171]
[272.06063843 400.04687500]
[285.28179932 407.19241333]
[297.29022217 416.22872925]
[307.81768799 426.95397949]
[316.62893677 439.12850952]
[323.52719116 452.48034668]
[328.35830688 466.71124268]
[331.01434326 481.50323486]
[331.43597412 496.52587891]
[329.61380005 511.44357300]
[325.58853149 525.92303467]
[319.45004272 539.64080811]
[311.33551025 552.29034424]
[301.42623901 563.58923340]
[289.94354248 573.28485107]
[277.14401245 581.16070557]
[263.31353760 587.04089355]
[248.76115417 590.79388428]
[233.81192017 592.33599854]
[218.79981995 591.63269043]
[204.06024170 588.69970703]
[189.92245483 583.60260010]
[176.70231628 576.45513916]
[164.69517517 567.41711426]
[154.16925049 556.69036865]
[145.35972595 544.51458740]
[138.46337891 531.16180420]
[133.63429260 516.93017578]
[130.98036194 502.13781738]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 177]
[8 176]
[9 175]
[10 174]
[12 172]
[13 171]
[14 170]
[18 169]
[19 168]
[20 167]
[31 166]
[32 165]
[33 164]
[34 163]
[37 160]
[38 159]
[39 158]
[40 157]
[44 152]
[45 151]
[46 150]
[51 149]
[52 148]
[53 147]
[54 146]
[55 145]
[56 144]
[61 140]
[62 139]
[63 138]
[66 135]
[68 133]
[69 132]
[85 117]
[86 116]
[87 115]
[88 114]
[89 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
