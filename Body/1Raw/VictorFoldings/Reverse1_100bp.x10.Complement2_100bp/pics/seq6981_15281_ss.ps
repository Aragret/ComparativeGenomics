%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[154.18894958 646.25158691]
[150.90408325 660.93231201]
[144.97734070 674.75939941]
[136.61059570 687.26190186]
[126.08882141 698.01397705]
[113.77037048 706.64935303]
[100.07481384 712.87402344]
[85.46861267 716.47595215]
[70.44925690 717.33233643]
[55.52828598 715.41418457]
[41.21391678 710.78668213]
[27.99368668 703.60754395]
[16.31787109 694.12127686]
[6.58414268 682.65087891]
[-0.87596983 669.58715820]
[-5.80837774 655.37500000]
[-8.04508591 640.49841309]
[-7.50991154 625.46417236]
[-4.22108364 610.78436279]
[1.70938194 596.95886230]
[10.07949543 584.45861816]
[20.60417557 573.70941162]
[32.92495346 565.07727051]
[46.62218857 558.85632324]
[61.22935867 555.25836182]
[76.24894714 554.40600586]
[91.16939545 556.32818604]
[95.78340149 542.05548096]
[100.39741516 527.78271484]
[105.01142120 513.51000977]
[109.62543488 499.23727417]
[113.27352142 484.68765259]
[115.93931580 469.92642212]
[118.60511017 455.16519165]
[121.27090454 440.40399170]
[121.94068909 425.41894531]
[120.60245514 410.47875977]
[119.26422119 395.53857422]
[117.92598724 380.59838867]
[116.58775330 365.65820312]
[114.13105011 363.12899780]
[112.77732849 359.28417969]
[113.13159180 354.65518188]
[115.53864288 350.02340698]
[114.86885834 335.03839111]
[114.19907379 320.05334473]
[113.52928925 305.06829834]
[112.85950470 290.08325195]
[112.18971252 275.09823608]
[108.75067902 268.55645752]
[111.62319183 259.88543701]
[111.17658997 244.89207458]
[109.94961548 229.94235229]
[107.94559479 215.07681274]
[105.94158173 200.21128845]
[103.93756866 185.34576416]
[101.93355560 170.48023987]
[99.92954254 155.61470032]
[97.92552948 140.74917603]
[95.92151642 125.88365173]
[93.91750336 111.01811981]
[91.58201599 96.20105743]
[88.91622162 81.43983459]
[78.84952545 69.23442078]
[84.20177460 55.33467865]
[81.53597260 40.57346344]
[71.46928406 28.36804390]
[76.82152557 14.46830463]
[74.15573120 -0.29291242]
[68.39645386 13.55738449]
[57.25588226 23.60167313]
[42.88509369 27.90056038]
[28.05885887 25.62399673]
[15.63989162 17.21155167]
[8.02609825 4.28753662]
[6.68758535 -10.65262318]
[11.88279724 -24.72421837]
[22.60862160 -35.21024323]
[36.79406738 -40.08600998]
[51.70014954 -38.41008759]
[64.44873810 -30.50606537]
[72.57871246 -17.89889336]
[64.84141541 -31.69906616]
[72.57871246 -44.42633820]
[72.57871246 -59.42633820]
[72.57871246 -74.42633820]
[72.57871246 -89.42633820]
[64.45587158 -96.66014862]
[61.71161270 -106.95817566]
[65.01869202 -116.85825348]
[73.05615234 -123.16795349]
[73.50275421 -138.16130066]
[73.94936371 -153.15464783]
[74.39596558 -168.14801025]
[74.84257507 -183.14135742]
[66.58202362 -193.04721069]
[67.26266479 -205.52601624]
[75.97502899 -213.91775513]
[76.64481354 -228.90280151]
[62.73912811 -234.98526001]
[51.97245789 -245.68307495]
[45.80090714 -259.54946899]
[45.05912781 -274.70907593]
[49.84743881 -289.11172485]
[59.51826096 -300.80957031]
[72.76369476 -308.22058105]
[87.79240417 -310.34246826]
[102.57187653 -306.88824463]
[115.10330963 -298.32510376]
[123.69194031 -285.81112671]
[127.17621613 -271.03869629]
[125.08492279 -256.00570679]
[117.70088196 -242.74522400]
[106.02273560 -233.05061340]
[91.62985229 -228.23301697]
[90.96006775 -213.24797058]
[99.87467957 -198.13186646]
[89.83592224 -182.69474792]
[89.38931274 -167.70140076]
[88.94271088 -152.70805359]
[88.49610138 -137.71469116]
[88.04949951 -122.72134399]
[98.43559265 -106.41134644]
[87.57871246 -89.42633820]
[87.57871246 -74.42633820]
[87.57871246 -59.42633820]
[87.57871246 -44.42633820]
[95.31601715 -31.69906616]
[87.57871246 -17.89889336]
[88.91694641 -2.95870781]
[91.58274078 11.80250931]
[101.45876312 22.95210648]
[96.29719543 37.90766907]
[98.96298981 52.66888428]
[108.83900452 63.81848145]
[103.67743683 78.77404022]
[106.34323120 93.53526306]
[109.16778564 96.16095734]
[110.82125854 100.01892090]
[110.77925873 104.55821991]
[108.78302765 109.01410675]
[110.78704834 123.87963867]
[112.79106140 138.74516296]
[114.79507446 153.61068726]
[116.79908752 168.47622681]
[118.80310059 183.34175110]
[120.80711365 198.20727539]
[122.81112671 213.07279968]
[124.81513977 227.93833923]
[133.83964539 215.95675659]
[148.42559814 212.45675659]
[161.90449524 219.03849792]
[168.11396790 232.69288635]
[164.21513367 247.17733765]
[151.99047852 255.86973572]
[137.02894592 254.79603577]
[126.16993713 244.44548035]
[126.61654663 259.43881226]
[127.17475128 274.42843628]
[127.84454346 289.41348267]
[128.51432800 304.39849854]
[129.18411255 319.38354492]
[129.85389709 334.36859131]
[130.52368164 349.35363770]
[131.52793884 364.31997681]
[132.86618042 379.26016235]
[134.20440674 394.20034790]
[135.54264832 409.14053345]
[136.88087463 424.08071899]
[142.67420959 410.24462891]
[152.41183472 398.83505249]
[165.16566467 390.93948364]
[179.72004700 387.31045532]
[194.68777466 388.29388428]
[208.64221191 393.79605103]
[220.25331116 403.29248047]
[228.41436768 415.87808228]
[232.34754944 430.35324097]
[231.67793274 445.33828735]
[226.46936035 459.40493774]
[217.21829224 471.21246338]
[204.80645752 479.63543701]
[190.41688538 483.87103271]
[175.42109680 483.51553345]
[161.24839783 478.60284424]
[149.24963379 469.60119629]
[140.56845093 457.36856079]
[136.03211975 443.06979370]
[133.36633301 457.83099365]
[130.70053101 472.59222412]
[128.03474426 487.35342407]
[139.29208374 477.44021606]
[154.10549927 475.08163452]
[167.88487244 481.00857544]
[176.36053467 493.38449097]
[176.90620422 508.37457275]
[169.35279846 521.33398438]
[156.04081726 528.24707031]
[141.09512329 526.97180176]
[129.14680481 517.90325928]
[123.89816284 503.85125732]
[119.28415680 518.12402344]
[114.67015076 532.39672852]
[110.05613708 546.66949463]
[105.44213104 560.94219971]
[118.66429138 568.11779785]
[130.34266663 577.60095215]
[140.07948303 589.06866455]
[147.54312134 602.13043213]
[152.47935486 616.34124756]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 205]
[28 204]
[29 203]
[30 202]
[31 201]
[32 191]
[33 190]
[34 189]
[35 188]
[36 169]
[37 168]
[38 167]
[39 166]
[40 165]
[44 164]
[45 163]
[46 162]
[47 161]
[48 160]
[49 159]
[51 158]
[52 157]
[53 149]
[54 148]
[55 147]
[56 146]
[57 145]
[58 144]
[59 143]
[60 142]
[61 141]
[62 137]
[63 136]
[65 134]
[66 133]
[68 131]
[69 130]
[82 129]
[84 127]
[85 126]
[86 125]
[87 124]
[91 122]
[92 121]
[93 120]
[94 119]
[95 118]
[98 116]
[99 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
