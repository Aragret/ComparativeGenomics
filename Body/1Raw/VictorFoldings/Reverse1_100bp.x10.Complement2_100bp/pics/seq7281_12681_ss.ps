%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[8.28100395 404.35266113]
[6.62239456 419.27297974]
[3.50930762 433.95886230]
[-1.02827644 448.26889038]
[-6.94665670 462.06527710]
[-14.18883514 475.21508789]
[-22.68506241 487.59170532]
[-32.35351562 499.07595825]
[-43.10107422 509.55722046]
[-54.82423782 518.93450928]
[-67.41010284 527.11761475]
[-80.73744965 534.02764893]
[-94.67793274 539.59808350]
[-109.09729004 543.77526855]
[-123.85665894 546.51898193]
[-138.81388855 547.80279541]
[-153.82492065 547.61431885]
[-168.74520874 545.95544434]
[-183.43103027 542.84204102]
[-197.74098206 538.30419922]
[-211.53721619 532.38549805]
[-224.68688965 525.14306641]
[-237.06335449 516.64660645]
[-248.54739380 506.97790527]
[-259.02844238 496.23013306]
[-268.40551758 484.50680542]
[-276.58837891 471.92077637]
[-283.49813843 458.59329224]
[-289.06829834 444.65267944]
[-293.24517822 430.23324585]
[-295.98858643 415.47381592]
[-297.27209473 400.51657104]
[-297.08334351 385.50555420]
[-295.42413330 370.58529663]
[-292.31048584 355.89953613]
[-287.77230835 341.58966064]
[-281.85339355 327.79354858]
[-274.61068726 314.64401245]
[-266.11395264 302.26773071]
[-256.44503784 290.78387451]
[-245.69706726 280.30303955]
[-233.97352600 270.92617798]
[-221.38732910 262.74362183]
[-208.05970764 255.83410645]
[-194.11900330 250.26423645]
[-179.69947815 246.08763123]
[-164.94000244 243.34451294]
[-149.98272705 242.06129456]
[-134.97169495 242.25035095]
[-120.05148315 243.90985107]
[-105.36577606 247.02381897]
[-91.05600739 251.56227112]
[-77.26000214 257.48147583]
[-64.11062622 264.72445679]
[-51.73450470 273.22140503]
[-42.07369614 261.74670410]
[-39.93322754 244.32875061]
[-22.56761551 238.20364380]
[-13.07871819 226.58638000]
[-3.58981943 214.96911621]
[5.89907885 203.35185242]
[15.38797760 191.73458862]
[9.98126316 177.85536194]
[12.26280975 163.03474426]
[21.71884727 151.26828003]
[35.88788605 145.77873230]
[51.00083160 148.13374329]
[60.48972702 136.51647949]
[69.97863007 124.89922333]
[79.46752167 113.28195953]
[88.95642090 101.66469574]
[98.35857391 89.97711945]
[107.67345428 78.21986389]
[116.98834229 66.46261597]
[126.30322266 54.70536041]
[135.61810303 42.94810867]
[134.91104126 30.06933403]
[142.91148376 20.46845818]
[154.91148376 18.94321251]
[164.40039062 7.32594967]
[173.88928223 -4.29131365]
[183.37818909 -15.90857697]
[184.81506348 -22.36201859]
[188.71057129 -26.49989128]
[193.32666016 -27.72496033]
[194.95504761 -34.13275909]
[198.97203064 -38.15281296]
[203.62255859 -39.23989868]
[213.78610229 -50.27177811]
[223.94964600 -61.30365372]
[234.11318970 -72.33553314]
[244.27673340 -83.36740875]
[254.44029236 -94.39928436]
[264.60382080 -105.43115997]
[274.76739502 -116.46304321]
[264.65649414 -127.55625153]
[255.55093384 -139.48847961]
[247.51998901 -152.16891479]
[240.62480164 -165.50103760]
[234.91781616 -179.38339233]
[230.44248962 -193.71032715]
[227.23289490 -208.37278748]
[225.31343079 -223.25918579]
[224.69871521 -238.25624084]
[225.39343262 -253.24980164]
[227.39228821 -268.12576294]
[230.68008423 -282.77087402]
[235.23178101 -297.07373047]
[241.01274109 -310.92544556]
[247.97897339 -324.22058105]
[256.07745361 -336.85800171]
[265.24655151 -348.74145508]
[275.41647339 -359.78057861]
[286.50982666 -369.89129639]
[298.44216919 -378.99670410]
[311.12274170 -387.02746582]
[324.45495605 -393.92248535]
[338.33737183 -399.62924194]
[352.66436768 -404.10437012]
[367.32687378 -407.31378174]
[382.21331787 -409.23303223]
[397.21035767 -409.84753418]
[412.20391846 -409.15261841]
[427.07983398 -407.15353394]
[441.72491455 -403.86553955]
[456.02770996 -399.31365967]
[469.87933350 -393.53250122]
[483.17437744 -386.56607056]
[495.81167603 -378.46740723]
[507.69503784 -369.29815674]
[518.73400879 -359.12808228]
[528.84454346 -348.03457642]
[537.94976807 -336.10208130]
[545.98040771 -323.42144775]
[552.87518311 -310.08911133]
[558.58178711 -296.20660400]
[563.05670166 -281.87954712]
[566.26593018 -267.21701050]
[568.18493652 -252.33053589]
[568.79925537 -237.33346558]
[568.10412598 -222.33993530]
[566.10485840 -207.46403503]
[562.81665039 -192.81900024]
[558.26452637 -178.51628113]
[552.48315430 -164.66473389]
[545.51660156 -151.36978149]
[537.41772461 -138.73260498]
[528.24829102 -126.84938049]
[518.07806396 -115.81055450]
[506.98443604 -105.70014191]
[495.05181885 -96.59507751]
[482.37106323 -88.56467438]
[469.03863525 -81.67003632]
[455.15603638 -75.96364594]
[440.82891846 -71.48892212]
[426.16632080 -68.27993774]
[411.27984619 -66.36109924]
[396.28277588 -65.74701691]
[381.28924561 -66.44235992]
[366.41339111 -68.44184875]
[351.76840210 -71.73025513]
[337.46572876 -76.28255463]
[323.61425781 -82.06409454]
[310.31942749 -89.03089142]
[297.68234253 -97.12989807]
[285.79925537 -106.29949188]
[275.63571167 -95.26761627]
[265.47216797 -84.23574066]
[255.30862427 -73.20386505]
[245.14506531 -62.17198563]
[234.98152161 -51.14010620]
[224.81797791 -40.10823059]
[214.65443420 -29.07635307]
[204.65626526 -17.89437866]
[194.99545288 -6.41967869]
[185.50654602 5.19758463]
[176.01765442 16.81484795]
[166.52874756 28.43211174]
[164.64785767 45.88000870]
[147.37535095 52.26299286]
[138.06047058 64.02024841]
[128.74559021 75.77749634]
[119.43070984 87.53474426]
[110.11582947 99.29199982]
[107.97650909 107.06347656]
[100.57368469 111.15359497]
[91.08478546 122.77085876]
[81.59588623 134.38812256]
[72.10699463 146.00538635]
[62.61809158 157.62265015]
[67.94303131 171.96113586]
[65.39286804 186.94090271]
[55.75120926 198.55575562]
[41.68449783 203.75033569]
[27.00524139 201.22348022]
[17.51634216 212.84074402]
[8.02744389 224.45800781]
[-1.46145439 236.07527161]
[-10.95035267 247.69253540]
[-10.43511772 260.58041382]
[-18.57760811 270.06109619]
[-30.59899521 271.40753174]
[-40.25980377 282.88223267]
[-29.77833557 293.62957764]
[-20.40077591 305.35253906]
[-12.21743870 317.93826294]
[-5.30713892 331.26547241]
[0.26357368 345.20584106]
[4.44104862 359.62509155]
[7.18505287 374.38442993]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[55 203]
[56 202]
[58 199]
[59 198]
[60 197]
[61 196]
[62 195]
[67 190]
[68 189]
[69 188]
[70 187]
[71 186]
[72 184]
[73 183]
[74 182]
[75 181]
[76 180]
[79 178]
[80 177]
[81 176]
[82 175]
[85 174]
[88 173]
[89 172]
[90 171]
[91 170]
[92 169]
[93 168]
[94 167]
[95 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
