%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[95.68641663 694.97924805]
[80.43852234 694.29766846]
[67.00041962 687.06024170]
[58.04025269 674.70397949]
[55.33707428 659.68212891]
[59.42759323 644.97735596]
[69.49964142 633.50927734]
[83.55340576 627.55493164]
[84.22319031 612.56988525]
[84.89297485 597.58483887]
[85.56275940 582.59979248]
[86.23254395 567.61474609]
[86.90232849 552.62969971]
[87.57212067 537.64471436]
[88.24190521 522.65966797]
[72.53688812 513.61956787]
[63.55289459 497.78445435]
[63.85231400 479.49566650]
[73.43865967 463.81787109]
[89.73168182 455.13659668]
[89.73168182 440.13659668]
[89.73168182 425.13659668]
[86.58818054 418.44778442]
[89.84500885 409.91366577]
[82.29805756 397.07263184]
[90.23995972 383.38916016]
[90.46328735 368.39083862]
[90.68661499 353.39248657]
[90.90994263 338.39416504]
[88.28537750 334.40408325]
[88.13948822 328.72290039]
[91.36985016 322.95434570]
[92.03963470 307.96932983]
[92.70941925 292.98428345]
[93.37920380 277.99923706]
[84.46459198 262.88314819]
[94.50334930 247.44601440]
[94.94995117 232.45265198]
[95.39656067 217.45930481]
[95.73153687 202.46304321]
[95.95486450 187.46470642]
[95.73153687 172.46636963]
[95.06175232 157.48133850]
[94.39196777 142.49629211]
[93.72218323 127.51126099]
[93.05239868 112.52622223]
[85.69034576 100.63959503]
[91.96256256 88.14356232]
[91.29277802 73.15852356]
[90.62299347 58.17348862]
[89.95320892 43.18844986]
[82.39514923 56.14513397]
[70.01252747 64.61099243]
[55.19623566 66.95138550]
[40.80706406 62.71443558]
[29.62334061 52.71821976]
[23.80446434 38.89285660]
[24.47396851 23.90780449]
[31.50258636 10.65644360]
[43.53319550 1.69740427]
[58.24288177 -1.23946440]
[72.79142761 2.41290140]
[84.36974335 11.94928741]
[90.74250793 25.52961159]
[92.74652100 10.66408253]
[94.75053406 -4.20144510]
[96.42207336 -19.10801888]
[97.76030731 -34.04820633]
[99.09854126 -48.98838806]
[100.43677521 -63.92857361]
[101.77500916 -78.86875916]
[99.80899811 -82.74029541]
[99.23496246 -86.64350128]
[99.89192963 -90.13689423]
[101.49209595 -92.87661743]
[103.66362000 -94.64936066]
[105.88873291 -109.48340607]
[94.99969482 -120.37995911]
[92.64237976 -135.42311096]
[99.51375580 -148.81147766]
[112.79220581 -155.50630188]
[115.01731873 -170.34034729]
[117.24243927 -185.17439270]
[119.46755219 -200.00843811]
[121.25002289 -214.90216064]
[122.58825684 -229.84234619]
[123.92649078 -244.78253174]
[121.72866058 -249.51715088]
[121.58145142 -254.15736389]
[123.10549164 -257.93789673]
[125.67268372 -260.35488892]
[127.67670441 -275.22039795]
[129.68070984 -290.08593750]
[123.85649109 -304.79611206]
[133.22480774 -316.37557983]
[119.01554871 -321.34365845]
[106.09739685 -329.07064819]
[94.99935150 -339.24011230]
[86.17586517 -351.43563843]
[79.98825073 -365.15783691]
[76.68989563 -379.84475708]
[76.41585541 -394.89498901]
[79.17735291 -409.69226074]
[84.86131287 -423.63061523]
[93.23497772 -436.13928223]
[103.95545197 -446.70602417]
[116.58374023 -454.89816284]
[130.60272217 -460.38024902]
[145.43830872 -462.92776489]
[160.48303223 -462.43640137]
[175.12078857 -458.92630005]
[188.75218201 -452.54113770]
[200.81901550 -443.54244995]
[210.82716370 -432.29870605]
[218.36679077 -419.27032471]
[223.12915039 -404.99078369]
[224.91923523 -390.04489136]
[223.66374207 -375.04458618]
[219.41409302 -360.60418701]
[212.34428406 -347.31500244]
[202.74383545 -335.72119141]
[191.00587463 -326.29754639]
[177.61106873 -319.42993164]
[163.10792542 -315.39959717]
[148.09033203 -314.37155151]
[154.05789185 -300.72467041]
[144.54624939 -288.08190918]
[142.54223633 -273.21640015]
[140.53820801 -258.35086060]
[138.86666870 -243.44429016]
[137.52844238 -228.50410461]
[136.19020081 -213.56391907]
[137.88208008 -211.32881165]
[138.79052734 -208.28886414]
[138.60458374 -204.73908997]
[137.12568665 -201.08158875]
[134.30160522 -197.78332520]
[132.07647705 -182.94927979]
[129.85136414 -168.11523438]
[127.62625122 -153.28118896]
[138.35604858 -142.98510742]
[140.99687195 -128.16990662]
[134.32963562 -114.48043823]
[120.72277832 -107.25828552]
[118.49766541 -92.42424011]
[116.71519470 -77.53052521]
[115.37696075 -62.59033966]
[114.03872681 -47.65015411]
[112.70049286 -32.70996857]
[111.36225891 -17.76978493]
[113.33036804 -14.84422874]
[113.97924042 -10.82004929]
[112.80794525 -6.32768154]
[109.61605835 -2.19743156]
[107.61204529 12.66809654]
[105.60803223 27.53362465]
[104.93824768 42.51866531]
[105.60803223 57.50370407]
[106.27781677 72.48873901]
[106.94760132 87.47377777]
[114.30965424 99.36040497]
[108.03743744 111.85643768]
[108.70722198 126.84147644]
[109.37700653 141.82650757]
[110.04679108 156.81155396]
[110.71657562 171.79658508]
[113.18219757 175.37075806]
[114.27256012 179.16227722]
[114.08820343 182.71212769]
[112.86841583 185.64106750]
[110.95320129 187.68803406]
[110.72987366 202.68637085]
[113.73117065 211.31365967]
[110.38990784 217.90591431]
[109.94330597 232.89926147]
[109.49669647 247.89260864]
[117.75724792 257.79846191]
[117.07659912 270.27728271]
[108.36424255 278.66903687]
[107.69445801 293.65405273]
[107.02467346 308.63909912]
[106.35488892 323.62414551]
[105.90827942 338.61749268]
[105.68495178 353.61581421]
[105.46162415 368.61416626]
[105.23829651 383.61248779]
[112.76927948 397.52633667]
[104.84334564 410.13699341]
[104.73168182 425.13659668]
[104.73168182 440.13659668]
[104.73168182 455.13659668]
[115.82415009 459.76318359]
[124.68135071 467.83581543]
[130.28152466 478.39172363]
[131.98936462 490.18353271]
[129.62788391 501.82672119]
[123.49659729 511.96209717]
[114.33361053 519.41461182]
[103.22694397 523.32940674]
[102.55715942 538.31445312]
[101.88736725 553.29949951]
[101.21758270 568.28454590]
[100.54779816 583.26959229]
[99.87801361 598.25463867]
[99.20822906 613.23968506]
[98.53844452 628.22473145]
[112.00494385 635.40911865]
[121.01369476 647.73004150]
[123.77601624 662.74114990]
[119.74343109 677.46191406]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 206]
[9 205]
[10 204]
[11 203]
[12 202]
[13 201]
[14 200]
[15 199]
[20 191]
[21 190]
[22 189]
[24 188]
[26 186]
[27 185]
[28 184]
[29 183]
[32 182]
[33 181]
[34 180]
[35 179]
[37 176]
[38 175]
[39 174]
[40 172]
[41 171]
[42 166]
[43 165]
[44 164]
[45 163]
[46 162]
[48 160]
[49 159]
[50 158]
[51 157]
[64 156]
[65 155]
[66 154]
[67 150]
[68 149]
[69 148]
[70 147]
[71 146]
[76 145]
[77 144]
[81 140]
[82 139]
[83 138]
[84 137]
[85 132]
[86 131]
[87 130]
[91 129]
[92 128]
[93 127]
[95 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
