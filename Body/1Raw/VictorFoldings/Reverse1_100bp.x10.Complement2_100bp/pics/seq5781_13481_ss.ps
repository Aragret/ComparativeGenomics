%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[55.47516632 619.91070557]
[42.48950958 627.46423340]
[28.61290169 633.21954346]
[14.09298992 637.07385254]
[-0.81110430 638.95837402]
[-15.83339787 638.83947754]
[-30.70580101 636.71929932]
[-45.16289902 632.63574219]
[-58.94668579 626.66156006]
[-71.81117249 618.90344238]
[-83.52678680 609.49981689]
[-93.88443756 598.61853027]
[-102.69928741 586.45373535]
[-109.81401825 573.22259521]
[-115.10166931 559.16113281]
[-118.46786499 544.52038574]
[-119.85253906 529.56152344]
[-119.23097992 514.55163574]
[-116.61428070 499.75854492]
[-112.04914093 485.44619751]
[-105.61701965 471.87005615]
[-97.43271637 459.27243042]
[-87.64228821 447.87808228]
[-76.42045593 437.89041138]
[-63.96748734 429.48760986]
[-50.50561523 422.81967163]
[-36.27508926 418.00555420]
[-21.52986336 415.13122559]
[-6.53308916 414.24795532]
[8.44760132 415.37149048]
[11.55171204 400.69619751]
[14.65582180 386.02087402]
[17.75993156 371.34558105]
[20.86404228 356.67028809]
[23.96815300 341.99499512]
[27.07226181 327.31967163]
[30.17637253 312.64437866]
[20.07843399 301.72790527]
[18.32410812 286.78176880]
[25.79432487 273.51342773]
[39.80693436 267.11398315]
[42.91104507 252.43865967]
[46.01515198 237.76336670]
[49.11926270 223.08805847]
[44.18323898 209.03512573]
[54.60887146 197.13484192]
[52.91760254 189.94030762]
[57.86998749 182.26490784]
[61.19224548 167.63745117]
[51.06668854 178.70420837]
[37.65964127 185.43109131]
[22.73503113 186.93307495]
[8.25644493 183.01255798]
[-3.87120891 174.18531799]
[-12.05232811 161.61276245]
[-15.21054649 146.94900513]
[-12.93034649 132.12333679]
[-5.51172638 119.08630371]
[6.06926537 109.55316925]
[20.28895187 104.77818298]
[35.27648544 105.38956451]
[49.06000137 111.30688477]
[59.82604218 121.75160980]
[66.15814972 135.34956360]
[67.22295380 150.31407166]
[73.70245361 136.78573608]
[80.18194580 123.25738525]
[80.23619843 115.86692810]
[86.85994720 109.57695007]
[83.82598877 98.33255768]
[89.09020233 87.94365692]
[99.95175934 83.74033356]
[99.40531158 67.92856598]
[112.11797333 60.16728973]
[118.99738312 46.83786011]
[125.87680054 33.50843048]
[132.75621033 20.17900085]
[133.91110229 11.11787319]
[139.83856201 6.70346117]
[136.85394287 -5.84464121]
[143.02076721 -16.71451759]
[154.55867004 -20.34811974]
[161.83190918 -33.46681213]
[169.10513306 -46.58550644]
[176.37835693 -59.70420074]
[183.65159607 -72.82289886]
[190.92481995 -85.94158936]
[190.84939575 -101.76261902]
[203.78750610 -109.14195251]
[211.06072998 -122.26064301]
[218.33395386 -135.37933350]
[225.60719299 -148.49803162]
[232.88041687 -161.61672974]
[232.80499268 -177.43775940]
[245.74310303 -184.81709290]
[253.01632690 -197.93579102]
[240.81616211 -206.69207764]
[229.71507263 -216.80552673]
[219.86315918 -228.13938904]
[211.39367676 -240.54037476]
[204.42115784 -253.84077454]
[199.03990173 -267.86071777]
[195.32269287 -282.41058350]
[193.31977844 -297.29360962]
[193.05827332 -312.30856323]
[194.54168701 -327.25231934]
[197.74998474 -341.92282104]
[202.63975525 -356.12164307]
[209.14488220 -369.65676880]
[217.17738342 -382.34515381]
[226.62863159 -394.01522827]
[237.37081909 -404.50912476]
[249.25866699 -413.68493652]
[262.13137817 -421.41860962]
[275.81491089 -427.60549927]
[290.12417603 -432.16195679]
[304.86566162 -435.02639771]
[319.84002686 -436.16000366]
[334.84475708 -435.54751587]
[349.67687988 -433.19720459]
[364.13586426 -429.14083862]
[378.02615356 -423.43325806]
[391.15991211 -416.15167236]
[403.35949707 -407.39459229]
[414.45989990 -397.28036499]
[424.31106567 -385.94586182]
[432.77972412 -373.54431152]
[439.75134277 -360.24343872]
[445.13165283 -346.22314453]
[448.84790039 -331.67303467]
[450.84982300 -316.78985596]
[451.11035156 -301.77490234]
[449.62591553 -286.83123779]
[446.41665649 -272.16098022]
[441.52593994 -257.96246338]
[435.01989746 -244.42776489]
[426.98654175 -231.73991394]
[417.53451538 -220.07048035]
[406.79162598 -209.57730103]
[394.90316772 -200.40226746]
[382.02993774 -192.66946411]
[368.34600830 -186.48348999]
[354.03643799 -181.92797852]
[339.29473877 -179.06454468]
[324.32031250 -177.93191528]
[309.31564331 -178.54539490]
[294.48364258 -180.89671326]
[280.02493286 -184.95405579]
[266.13500977 -190.66255188]
[258.86178589 -177.54385376]
[259.45745850 -162.66116333]
[245.99911499 -154.34350586]
[238.72589111 -141.22480774]
[231.45265198 -128.10610962]
[224.17942810 -114.98741913]
[216.90618896 -101.86872101]
[217.50186157 -86.98603058]
[204.04351807 -78.66835785]
[196.77029419 -65.54966736]
[189.49705505 -52.43097305]
[182.22383118 -39.31227875]
[174.95059204 -26.19358444]
[167.67736816 -13.07489014]
[168.92724609 4.42953014]
[153.06408691 13.78056717]
[146.08563232 27.05841255]
[139.20622253 40.38784409]
[132.32681274 53.71726990]
[125.44740295 67.04669952]
[126.48590851 81.90505981]
[113.28118896 90.61974335]
[114.50398254 107.34939575]
[100.29032135 116.25714874]
[93.71028900 129.73687744]
[87.23079681 143.26522827]
[80.75129700 156.79356384]
[75.81970978 170.95970154]
[72.49744415 185.58717346]
[69.28417206 200.23895264]
[73.99816895 215.34156799]
[63.79456711 226.19216919]
[60.69045639 240.86747742]
[57.58634567 255.54277039]
[54.48223495 270.21807861]
[64.70339966 281.74343872]
[66.16114807 296.90023804]
[58.50506210 309.85586548]
[44.85167313 315.74847412]
[41.74756622 330.42379761]
[38.64345551 345.09909058]
[35.53934479 359.77438354]
[32.43523407 374.44970703]
[29.33112335 389.12500000]
[26.22701454 403.80029297]
[23.12290382 418.47561646]
[37.27546310 423.51431274]
[50.63012314 430.39447021]
[62.94855118 438.99328613]
[74.01091766 449.15731812]
[83.61979675 460.70516968]
[91.60370636 473.43075562]
[97.82015991 487.10696411]
[102.15822601 501.48977661]
[104.54048920 516.32244873]
[104.92442322 531.34027100]
[103.30318451 546.27532959]
[99.70570374 560.86096191]
[94.19618988 574.83697510]
[86.87294769 587.95391846]
[77.86669159 599.97766113]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 195]
[31 194]
[32 193]
[33 192]
[34 191]
[35 190]
[36 189]
[37 188]
[41 184]
[42 183]
[43 182]
[44 181]
[46 179]
[48 178]
[49 177]
[65 176]
[66 175]
[67 174]
[69 173]
[72 171]
[74 169]
[75 168]
[76 167]
[77 166]
[79 165]
[82 163]
[83 162]
[84 161]
[85 160]
[86 159]
[87 158]
[89 156]
[90 155]
[91 154]
[92 153]
[93 152]
[95 150]
[96 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
