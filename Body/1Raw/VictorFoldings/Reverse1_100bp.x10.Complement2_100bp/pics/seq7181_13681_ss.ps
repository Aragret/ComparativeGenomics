%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[26.35798264 671.60412598]
[22.15950394 686.05603027]
[15.22199154 699.41107178]
[5.81210470 711.15588379]
[-5.70846605 720.83898926]
[-18.89690018 728.08825684]
[-33.24626923 732.62493896]
[-48.20502472 734.27478027]
[-63.19818878 732.97430420]
[-77.64946747 728.77349854]
[-91.00337982 721.83380127]
[-102.74665833 712.42199707]
[-112.42790222 700.89984131]
[-119.67500305 687.71026611]
[-124.20940399 673.36016846]
[-125.85680389 658.40112305]
[-124.55387878 643.40820312]
[-120.35072327 628.95758057]
[-113.40888977 615.60479736]
[-103.99520111 603.86303711]
[-92.47149658 594.18365479]
[-79.28071594 586.93872070]
[-64.92987823 582.40661621]
[-49.97059250 580.76165771]
[-34.97784805 582.06701660]
[-30.79083824 567.66320801]
[-26.60382652 553.25939941]
[-22.41681671 538.85565186]
[-18.22980499 524.45184326]
[-22.10694885 510.07073975]
[-10.82509136 498.97882080]
[-18.54982758 488.66583252]
[-18.92987061 475.59152222]
[-11.60251045 464.52261353]
[0.94405133 459.62380981]
[5.34504938 445.28396606]
[1.68244898 430.84671021]
[13.12819767 419.92401123]
[9.46559811 405.48672485]
[20.91134644 394.56402588]
[25.31234550 380.22418213]
[29.71334267 365.88433838]
[34.11434174 351.54449463]
[38.51533890 337.20465088]
[37.10885620 332.64056396]
[38.55457306 327.14447021]
[43.26673889 322.50689697]
[48.09273911 308.30444336]
[52.91873550 294.10198975]
[57.74473190 279.89953613]
[61.60903931 265.40585327]
[64.49430847 250.68595886]
[67.37958527 235.96606445]
[70.26485443 221.24617004]
[63.69120789 204.97491455]
[75.90885925 191.19773865]
[78.57466125 176.43652344]
[81.24045563 161.67530823]
[83.90625000 146.91409302]
[78.55400085 133.01434326]
[88.62069702 120.80892944]
[91.28649139 106.04771423]
[93.40111542 91.19751740]
[94.96163940 76.27890778]
[82.64358521 67.21178436]
[76.55804443 53.28831482]
[78.24761200 38.28792191]
[87.15901947 26.22795677]
[100.81845093 20.28778648]
[102.37897491 5.36918211]
[103.93949890 -9.54942322]
[101.71985626 -18.41006851]
[105.63592529 -24.67794037]
[107.41838837 -39.57165527]
[109.20085907 -54.46537399]
[110.98332214 -69.35909271]
[112.76578522 -84.25280762]
[114.54825592 -99.14653015]
[108.50566864 -113.76834869]
[117.70053864 -125.48600769]
[119.14995575 -140.41581726]
[120.26560974 -155.37426758]
[121.38125610 -170.33271790]
[122.49690247 -185.29118347]
[107.93784332 -191.76216125]
[96.49403381 -202.80863953]
[89.53634644 -217.08178711]
[87.88949585 -232.84785461]
[91.73431396 -248.19868469]
[100.58811188 -261.28274536]
[113.36518097 -270.52835083]
[128.50991821 -274.83258057]
[121.60772705 -289.06881714]
[130.08885193 -301.31298828]
[130.98167419 -316.28637695]
[131.87448120 -331.25979614]
[132.54426575 -346.24484253]
[132.99087524 -361.23818970]
[133.32585144 -376.23443604]
[133.54917908 -391.23278809]
[120.07386780 -398.49050903]
[111.52451324 -411.18566895]
[109.86569977 -426.40100098]
[115.47861481 -440.64016724]
[127.07344818 -450.63110352]
[141.98577881 -454.07794189]
[156.78889465 -450.18862915]
[168.08111572 -439.85693359]
[173.26757812 -425.45693970]
[171.15649414 -410.29772949]
[162.23294067 -397.86273193]
[148.54751587 -391.00946045]
[148.32418823 -376.01110840]
[151.36775208 -369.27624512]
[147.98422241 -360.79156494]
[147.53761292 -345.79821777]
[150.10249329 -341.76953125]
[150.16378784 -336.08679199]
[146.84788513 -330.36697388]
[145.95507812 -315.39358521]
[145.06225586 -300.42016602]
[152.02830505 -287.25491333]
[143.48332214 -273.93975830]
[156.63911438 -268.71115112]
[167.55352783 -259.66143799]
[175.15100098 -247.66526794]
[178.67753601 -233.88836670]
[177.77552795 -219.67440796]
[172.51992798 -206.41392517]
[163.41226196 -195.40826416]
[151.33277893 -187.74189758]
[137.45535278 -184.17553711]
[136.33970642 -169.21707153]
[135.22406006 -154.25862122]
[134.10841370 -139.30017090]
[136.11985779 -136.40423584]
[136.82856750 -132.39016724]
[135.72428894 -127.88085938]
[132.59425354 -123.70354462]
[138.76434326 -110.14701843]
[129.44197083 -97.36405945]
[127.65950775 -82.47034454]
[125.87703705 -67.57662964]
[124.09457397 -52.68290710]
[122.31211090 -37.78919220]
[120.52964020 -22.89547348]
[118.85810089 -7.98889971]
[117.29757690 6.92970514]
[115.73705292 21.84831047]
[127.87154388 30.48658752]
[134.09434509 44.12963104]
[132.64315796 59.15495300]
[123.80801392 71.51768494]
[109.88024902 77.83943176]
[108.31972504 92.75803375]
[121.43827057 85.48455048]
[135.36174011 91.06461334]
[139.82626343 105.38480377]
[131.54075623 117.88882446]
[116.61299133 119.35916138]
[106.04771423 108.71350861]
[103.38191223 123.47472382]
[108.54348755 138.43028259]
[98.66746521 149.57987976]
[96.00167084 164.34109497]
[93.33587646 179.10231018]
[90.67008209 193.86354065]
[97.36978912 204.88517761]
[94.84555817 217.12495422]
[84.98474884 224.13145447]
[82.09947205 238.85133362]
[79.21420288 253.57122803]
[76.32892609 268.29113770]
[87.73262024 258.54660034]
[102.57950592 256.40884399]
[116.26911926 262.54028320]
[124.55958557 275.04101562]
[124.88201141 290.03753662]
[117.13648987 302.88305664]
[103.72305298 309.59719849]
[88.79800415 308.09954834]
[76.98603821 298.85415649]
[71.94718933 284.72555542]
[67.12119293 298.92800903]
[62.29519272 313.13046265]
[57.46919632 327.33291626]
[52.85518646 341.60565186]
[48.45418930 355.94549561]
[44.05318832 370.28533936]
[39.65219116 384.62518311]
[35.25119400 398.96502686]
[38.59900665 414.42797852]
[27.46804428 424.32501221]
[30.81585693 439.78793335]
[19.68489647 449.68496704]
[15.28389835 464.02481079]
[23.76156998 479.32672119]
[18.65009308 495.70315552]
[3.57869077 503.16583252]
[7.15635157 518.57720947]
[-3.82602286 528.63885498]
[-8.01303387 543.04266357]
[-12.20004559 557.44641113]
[-16.38705635 571.85021973]
[-20.57406807 586.25402832]
[-7.21790266 593.18933105]
[4.52841711 602.59735107]
[14.21339512 614.11633301]
[21.46476555 627.30358887]
[26.00380516 641.65222168]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 205]
[26 204]
[27 203]
[28 202]
[29 201]
[31 199]
[35 196]
[36 195]
[38 193]
[40 191]
[41 190]
[42 189]
[43 188]
[44 187]
[47 186]
[48 185]
[49 184]
[50 183]
[51 173]
[52 172]
[53 171]
[54 170]
[56 167]
[57 166]
[58 165]
[59 164]
[61 162]
[62 161]
[63 155]
[64 154]
[69 149]
[70 148]
[71 147]
[73 146]
[74 145]
[75 144]
[76 143]
[77 142]
[78 141]
[80 139]
[81 135]
[82 134]
[83 133]
[84 132]
[92 123]
[94 121]
[95 120]
[96 119]
[97 116]
[98 115]
[99 113]
[100 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
