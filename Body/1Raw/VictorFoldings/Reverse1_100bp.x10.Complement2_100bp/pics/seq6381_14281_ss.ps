%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[93.12662506 697.46655273]
[103.43833923 686.39752197]
[116.66687012 679.05847168]
[113.78160095 664.33862305]
[110.89632416 649.61871338]
[108.01105499 634.89880371]
[105.12577820 620.17889404]
[102.24050903 605.45904541]
[99.35523224 590.73913574]
[96.46996307 576.01922607]
[91.47823334 590.16430664]
[81.51070404 601.37359619]
[68.04598236 607.98431396]
[53.08148575 609.01574707]
[38.83710861 604.31488037]
[27.42592049 594.57916260]
[20.54070091 581.25274658]
[19.20283318 566.31250000]
[23.61078262 551.97479248]
[33.11065292 540.36651611]
[46.29319763 533.20965576]
[61.20286560 531.56591797]
[75.62789154 535.67913818]
[87.42841339 544.93914795]
[94.85327911 557.97045898]
[95.07660675 542.97210693]
[95.29993439 527.97375488]
[95.52326202 512.97546387]
[95.74658966 497.97711182]
[95.85826111 482.97753906]
[95.85826111 467.97753906]
[95.07693481 452.99789429]
[93.51641083 438.07928467]
[91.95589447 423.16067505]
[90.39537048 408.24206543]
[88.30516815 406.37414551]
[86.82893372 403.56570435]
[86.32861328 400.04644775]
[87.07636261 396.17276001]
[89.21328735 392.39288330]
[88.54350281 377.40783691]
[87.87371826 362.42279053]
[87.20393372 347.43777466]
[85.22861481 345.44873047]
[83.92216492 342.55740356]
[83.63219452 339.01461792]
[84.60918427 335.19232178]
[86.96730042 331.54632568]
[87.19062805 316.54797363]
[87.41395569 301.54965210]
[87.63728333 286.55130005]
[87.86061096 271.55297852]
[88.08393860 256.55462646]
[88.30726624 241.55628967]
[88.53059387 226.55795288]
[88.75392914 211.55961609]
[88.97725677 196.56127930]
[78.29115295 190.80085754]
[71.02525330 180.98558044]
[68.60775757 168.94161987]
[71.55760956 156.94255066]
[79.37460327 147.28009033]
[90.62299347 141.82650757]
[91.29277802 126.84147644]
[91.96256256 111.85643768]
[85.69034576 99.36040497]
[93.05239868 87.47377777]
[93.72218323 72.48873901]
[94.39196777 57.50370407]
[87.27859497 43.37180710]
[95.57647705 31.00271606]
[96.24626160 16.01767731]
[95.68804932 1.02806842]
[93.90558624 -13.86564922]
[92.12312317 -28.75936699]
[90.34065247 -43.65308380]
[88.55818939 -58.54680252]
[86.77572632 -73.44052124]
[82.64871979 -81.58948517]
[85.07929230 -88.56903839]
[82.40530396 -91.99010468]
[81.09120178 -95.71000671]
[81.06394196 -99.26453400]
[82.10722351 -102.26089478]
[83.89720917 -104.41822815]
[83.22742462 -119.40326691]
[82.55764008 -134.38830566]
[81.88785553 -149.37333679]
[81.21807098 -164.35838318]
[80.54828644 -179.34341431]
[69.16748047 -189.97897339]
[68.70169067 -205.18547058]
[78.91120148 -215.96978760]
[78.24141693 -230.95483398]
[69.89562225 -244.39575195]
[77.05690002 -257.45581055]
[76.38711548 -272.44085693]
[62.19673157 -277.96832275]
[51.48600388 -288.79421997]
[46.11063385 -303.04290771]
[47.00193787 -318.24572754]
[54.00548935 -331.76867676]
[65.90788269 -341.26882935]
[80.64695740 -345.10021973]
[95.66907501 -342.59906006]
[108.37156677 -334.19866943]
[116.55364990 -321.35446167]
[118.79772186 -306.29180908]
[114.71499634 -291.62036133]
[105.01281738 -279.88204956]
[91.37215424 -273.11062622]
[92.04193878 -258.12561035]
[100.33982849 -245.75651550]
[93.22645569 -231.62461853]
[93.89624023 -216.63957214]
[105.02716827 -206.80911255]
[105.91989136 -191.62168884]
[95.53332520 -180.01319885]
[96.20310974 -165.02816772]
[96.87289429 -150.04312134]
[97.54267883 -135.05809021]
[98.21246338 -120.07305145]
[98.88224792 -105.08801270]
[99.99790192 -90.12955475]
[101.66944122 -75.22298431]
[103.45190430 -60.32926559]
[105.23437500 -45.43555069]
[107.01683807 -30.54183197]
[108.79930115 -15.64811516]
[110.58177185 -0.75439751]
[117.50766754 -14.05973148]
[129.77062988 -22.69800949]
[144.63107300 -24.73942184]
[158.76911926 -19.72790718]
[169.02632141 -8.78305531]
[173.11119080 5.65002918]
[170.11112976 20.34695625]
[160.69639587 32.02439880]
[146.97023010 38.07358170]
[131.99913025 37.14310074]
[119.12763977 29.44083405]
[111.23130035 16.68746376]
[110.56151581 31.67250252]
[117.72280121 44.73256683]
[109.37700653 58.17348862]
[108.70722198 73.15852356]
[108.03743744 88.14356232]
[114.30965424 100.63959503]
[106.94760132 112.52622223]
[106.27781677 127.51126099]
[105.60803223 142.49629211]
[120.11703491 153.37042236]
[125.14992523 170.62583923]
[118.87275696 187.30061340]
[103.97559357 196.78460693]
[103.75226593 211.78294373]
[103.52893829 226.78128052]
[103.30561066 241.77961731]
[103.08228302 256.77795410]
[102.85895538 271.77630615]
[102.63562775 286.77462769]
[102.41230011 301.77297974]
[102.18897247 316.77130127]
[101.96563721 331.76965332]
[102.18897247 346.76797485]
[102.85875702 361.75302124]
[103.52854156 376.73806763]
[104.19832611 391.72308350]
[105.31397247 406.68154907]
[106.87449646 421.60015869]
[108.43502045 436.51876831]
[109.99554443 451.43737793]
[119.37277985 439.72979736]
[134.05647278 436.66561890]
[147.33343506 443.64575195]
[153.13362122 457.47897339]
[148.80525208 471.84091187]
[136.32720947 480.16549683]
[121.40428162 478.64682007]
[110.85826111 467.97753906]
[110.85826111 482.97753906]
[113.98767090 491.55917358]
[110.74492645 498.20043945]
[110.52159882 513.19879150]
[110.29827118 528.19708252]
[110.07494354 543.19543457]
[109.85161591 558.19378662]
[111.18984985 573.13397217]
[114.07512665 587.85388184]
[116.96039581 602.57373047]
[119.84567261 617.29364014]
[122.73094177 632.01354980]
[125.61621857 646.73339844]
[128.50149536 661.45330811]
[131.38676453 676.17321777]
[146.40702820 677.97515869]
[160.13446045 684.33221436]
[171.22421265 694.62164307]
[178.58981323 707.83538818]
[181.50964355 722.67889404]
[179.69766235 737.69799805]
[173.33137512 751.42114258]
[163.03450012 762.50402832]
[149.81582642 769.86071777]
[134.97035217 772.77062988]
[119.95252228 770.94854736]
[106.23361206 764.57312012]
[95.15766144 754.26879883]
[87.80978394 741.04522705]
[84.90985107 726.19781494]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 195]
[4 194]
[5 193]
[6 192]
[7 191]
[8 190]
[9 189]
[10 188]
[25 187]
[26 186]
[27 185]
[28 184]
[29 183]
[30 181]
[31 180]
[32 172]
[33 171]
[34 170]
[35 169]
[40 168]
[41 167]
[42 166]
[43 165]
[48 164]
[49 163]
[50 162]
[51 161]
[52 160]
[53 159]
[54 158]
[55 157]
[56 156]
[57 155]
[63 151]
[64 150]
[65 149]
[67 147]
[68 146]
[69 145]
[71 143]
[72 142]
[73 130]
[74 129]
[75 128]
[76 127]
[77 126]
[78 125]
[80 124]
[85 123]
[86 122]
[87 121]
[88 120]
[89 119]
[90 118]
[93 115]
[94 114]
[96 112]
[97 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
