%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCCUUCAGUCCCAAUCCCACCAAUAUCAUCACACGUACCAAUAAUGAAAAUAAACCUCAACGUGGUUUUAAAAACCCCGGAUUCUGGUUACCUAUCGAxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[149.66104126 183.83720398]
[140.88043213 171.67575073]
[132.09982300 159.51429749]
[123.31922913 147.35284424]
[118.83084106 145.72082520]
[115.32002258 141.25190735]
[114.46462250 134.69601440]
[106.05000305 122.27851868]
[97.63538361 109.86102295]
[90.86599731 105.48519135]
[89.18953705 97.19541931]
[80.96073151 84.65402222]
[72.73191833 72.11261749]
[64.50311279 59.57121658]
[56.27430344 47.02981949]
[48.04549789 34.48841858]
[39.81668854 21.94701767]
[31.58788109 9.40561771]
[23.35907364 -3.13578296]
[14.76050949 -15.42662144]
[5.79981327 -27.45599937]
[-3.16088271 -39.48537445]
[-12.12157822 -51.51475525]
[-24.59548950 -43.17807770]
[-37.47880554 -35.48920441]
[-50.73791504 -28.46819115]
[-64.33822632 -22.13335609]
[-78.24426270 -16.50122452]
[-92.41973114 -11.58649158]
[-106.82766724 -7.40197945]
[-121.43046570 -3.95860457]
[-136.19003296 -1.26535034]
[-151.06788635 0.67075676]
[-166.02517700 1.84466553]
[-181.02288818 2.25331354]
[-196.02191162 1.89563453]
[-210.98310852 0.77256179]
[-225.86744690 -1.11297488]
[-240.63607788 -3.75605607]
[-255.25050354 -7.14978647]
[-269.67257690 -11.28531265]
[-283.86465454 -16.15184402]
[-297.78976440 -21.73668671]
[-311.41152954 -28.02526665]
[-324.69439697 -35.00118256]
[-337.60379028 -42.64622879]
[-350.10595703 -50.94046783]
[-362.16830444 -59.86225510]
[-373.75936890 -69.38831329]
[-384.84890747 -79.49379730]
[-395.40798950 -90.15233612]
[-405.40905762 -101.33612823]
[-414.82601929 -113.01599121]
[-423.63433838 -125.16145325]
[-431.81100464 -137.74082947]
[-439.33468628 -150.72131348]
[-446.18576050 -164.06901550]
[-452.34637451 -177.74914551]
[-457.80041504 -191.72598267]
[-462.53369141 -205.96307373]
[-466.53381348 -220.42327881]
[-469.79040527 -235.06886292]
[-472.29489136 -249.86163330]
[-474.04080200 -264.76300049]
[-475.02355957 -279.73406982]
[-475.24063110 -294.73577881]
[-474.69137573 -309.72900391]
[-473.37728882 -324.67465210]
[-471.30178833 -339.53366089]
[-468.47027588 -354.26736450]
[-464.89016724 -368.83721924]
[-460.57077026 -383.20529175]
[-455.52334595 -397.33407593]
[-449.76107788 -411.18667603]
[-443.29904175 -424.72702026]
[-436.15402222 -437.91970825]
[-428.34469604 -450.73037720]
[-419.89144897 -463.12557983]
[-410.81631470 -475.07299805]
[-401.14297485 -486.54144287]
[-390.89666748 -497.50100708]
[-380.10412598 -507.92306519]
[-368.79348755 -517.78045654]
[-356.99429321 -527.04748535]
[-344.73733521 -535.69995117]
[-332.05453491 -543.71527100]
[-318.97900391 -551.07250977]
[-305.54489136 -557.75256348]
[-291.78717041 -563.73791504]
[-277.74182129 -569.01300049]
[-263.44543457 -573.56402588]
[-248.93531799 -577.37915039]
[-234.24931335 -580.44836426]
[-219.42576599 -582.76373291]
[-204.50332642 -584.31915283]
[-189.52091980 -585.11059570]
[-174.51765442 -585.13598633]
[-159.53266907 -584.39532471]
[-144.60504150 -582.89044189]
[-129.77372742 -580.62530518]
[-115.07742310 -577.60583496]
[-100.55446625 -573.83990479]
[-86.24273682 -569.33728027]
[-72.17958832 -564.10986328]
[-58.40170288 -558.17114258]
[-44.94502640 -551.53662109]
[-31.84466171 -544.22369385]
[-19.13478851 -536.25134277]
[-6.84856892 -527.64050293]
[4.98194647 -518.41345215]
[16.32589340 -508.59445190]
[27.15367508 -498.20898438]
[37.43704605 -487.28421021]
[47.14917374 -475.84860229]
[56.26472092 -463.93197632]
[64.75991058 -451.56549072]
[72.61257172 -438.78134155]
[79.80223083 -425.61291504]
[86.31011200 -412.09454346]
[92.11925507 -398.26153564]
[97.21449280 -384.14993286]
[101.58254242 -369.79656982]
[105.21199799 -355.23892212]
[108.09339142 -340.51492310]
[110.21921539 -325.66299438]
[111.58390808 -310.72189331]
[112.18392181 -295.73062134]
[112.01769257 -280.72824097]
[111.08564758 -265.75393677]
[109.39021301 -250.84675598]
[106.93582916 -236.04559326]
[103.72888184 -221.38905334]
[99.77774811 -206.91537476]
[95.09273529 -192.66233826]
[89.68605804 -178.66709900]
[83.57183075 -164.96620178]
[76.76599884 -151.59535217]
[69.28632355 -138.58947754]
[61.15231323 -125.98246765]
[52.38518906 -113.80723572]
[43.00783157 -102.09555054]
[33.04469681 -90.87794495]
[22.52177811 -80.18370056]
[11.46653175 -70.04071808]
[-0.09220097 -60.47544861]
[8.86849499 -48.44607162]
[17.82919121 -36.41669464]
[26.78988647 -24.38731766]
[29.54091835 -23.84882736]
[32.24440384 -22.18817329]
[34.47186279 -19.41800308]
[35.80729294 -15.70570660]
[35.90047455 -11.36459064]
[44.12928009 1.17680943]
[52.35808945 13.71820927]
[60.58689880 26.25960922]
[68.81570435 38.80101013]
[77.04450989 51.34241104]
[85.27332306 63.88381195]
[93.50212860 76.42520905]
[101.73093414 88.96661377]
[110.05287933 101.44640350]
[118.46749878 113.86389923]
[126.88211823 126.28139496]
[135.48068237 138.57223511]
[144.26129150 150.73368835]
[153.04188538 162.89514160]
[161.82249451 175.05659485]
[175.10881042 168.04092407]
[189.24226379 162.94270325]
[203.94770813 159.86116028]
[218.93891907 158.85629272]
[233.92408752 159.94766235]
[248.61151123 163.11399841]
[262.71530151 168.29370117]
[275.96090698 175.38592529]
[288.09054565 184.25262451]
[298.86804199 194.72120667]
[308.08367920 206.58790588]
[315.55801392 219.62171936]
[321.14559937 233.56893921]
[324.73767090 248.15808105]
[326.26425171 263.10519409]
[325.69567871 278.11926270]
[323.04302979 292.90811157]
[318.35787964 307.18380737]
[311.73147583 320.66848755]
[303.29278564 333.09970093]
[293.20608521 344.23541260]
[281.66769409 353.85891724]
[268.90222168 361.78286743]
[255.15817261 367.85302734]
[240.70303345 371.95123291]
[225.81820679 373.99768066]
[210.79342651 373.95260620]
[195.92114258 371.81683350]
[181.49087524 367.63195801]
[167.78347778 361.47943115]
[155.06579590 353.47900391]
[143.58538818 343.78640747]
[133.56568909 332.59036255]
[125.20176697 320.10873413]
[118.65641785 306.58450317]
[114.05705261 292.28094482]
[111.49318695 277.47647095]
[111.01473999 262.45922852]
[112.63101959 247.52156067]
[116.31056976 232.95423889]
[121.98175812 219.04080200]
[129.53419495 206.05207825]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 168]
[2 167]
[3 166]
[4 165]
[7 164]
[8 163]
[9 162]
[11 161]
[12 160]
[13 159]
[14 158]
[15 157]
[16 156]
[17 155]
[18 154]
[19 153]
[20 148]
[21 147]
[22 146]
[23 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
