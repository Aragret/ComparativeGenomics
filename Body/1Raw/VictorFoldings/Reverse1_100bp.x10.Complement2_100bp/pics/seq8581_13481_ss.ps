%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUAAUCAGUAACAACCCACCACUAAUCAGCCAACAACUACUCUAUAAACCUCCACCCCUAGUUAUCUCCCCCUUUAUCUUACUAGUCAUGACGCCxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[103.83341217 590.25335693]
[94.28047180 578.66156006]
[86.28833008 565.94329834]
[79.98822784 552.30743408]
[75.48361969 537.97784424]
[72.84847260 523.18988037]
[72.12606049 508.18634033]
[73.32824707 493.21359253]
[76.43528748 478.51751709]
[81.39616394 464.33941650]
[88.12940979 450.91213989]
[96.52446747 438.45617676]
[106.44347382 427.17602539]
[117.72355652 417.25695801]
[130.17948914 408.86181641]
[143.60671997 402.12850952]
[157.78477478 397.16754150]
[154.68066406 382.49224854]
[151.57655334 367.81692505]
[141.61251831 360.95803833]
[138.90634155 348.75720215]
[145.44120789 337.63702393]
[142.55593872 322.91711426]
[139.67066956 308.19723511]
[127.44074249 295.61169434]
[133.55316162 278.24160767]
[130.44905090 263.56631470]
[127.34494019 248.89100647]
[124.24083710 234.21569824]
[111.65601349 226.33166504]
[108.29895020 211.49304199]
[116.65377808 198.34638977]
[113.54966736 183.67108154]
[110.11860657 169.06875610]
[106.36230469 154.54670715]
[102.60601044 140.02464294]
[98.84970856 125.50258636]
[95.09340668 110.98052216]
[91.12130737 96.51599884]
[79.83945465 85.42410278]
[83.71659851 71.04296875]
[79.52958679 56.63918304]
[75.34257507 42.23540115]
[71.15556335 27.83161926]
[66.96855164 13.42783737]
[55.68669510 2.33593655]
[59.56383896 -12.04519749]
[55.37682724 -26.44898033]
[51.18981552 -40.85276031]
[39.90795898 -51.94466400]
[43.78510284 -66.32579803]
[39.59809113 -80.72957611]
[35.41107941 -95.13336182]
[31.22406769 -109.53713989]
[27.03705597 -123.94092560]
[22.85004425 -138.34471130]
[18.66303444 -152.74848938]
[13.52107430 -166.83963013]
[7.44723988 -180.55490112]
[1.37340605 -194.27015686]
[-11.28919983 -203.75535583]
[-9.36814690 -218.52555847]
[-15.44198036 -232.24082947]
[-21.51581383 -245.95610046]
[-35.83989334 -241.45045471]
[-50.57838058 -238.57695007]
[-65.54592896 -237.37174988]
[-80.55430603 -237.84999084]
[-95.41475677 -240.00564575]
[-109.94040680 -243.81164551]
[-123.94857788 -249.22007751]
[-137.26309204 -256.16296387]
[-149.71652222 -264.55294800]
[-161.15223694 -274.28457642]
[-171.42643738 -285.23541260]
[-180.40989685 -297.26776123]
[-187.98965454 -310.23031616]
[-194.07037354 -323.96002197]
[-198.57559204 -338.28421021]
[-201.44863892 -353.02279663]
[-202.65339661 -367.99038696]
[-202.17471313 -382.99874878]
[-200.01860046 -397.85913086]
[-196.21218872 -412.38467407]
[-190.80332947 -426.39266968]
[-183.86004639 -439.70700073]
[-175.46966553 -452.16015625]
[-165.73771667 -463.59558105]
[-154.78656006 -473.86944580]
[-142.75395203 -482.85256958]
[-129.79118347 -490.43191528]
[-116.06129456 -496.51223755]
[-101.73694611 -501.01702881]
[-86.99828339 -503.88964844]
[-72.03067017 -505.09393311]
[-57.02231979 -504.61480713]
[-42.16199493 -502.45825195]
[-27.63657379 -498.65139771]
[-13.62872887 -493.24212646]
[-0.31462455 -486.29846191]
[12.13830090 -477.90771484]
[23.57343864 -468.17541504]
[33.84697723 -457.22393799]
[42.82971954 -445.19107056]
[50.40869904 -432.22805786]
[56.48859787 -418.49798584]
[60.99295425 -404.17352295]
[63.86512756 -389.43478394]
[65.06899261 -374.46710205]
[64.58940887 -359.45877075]
[62.43241119 -344.59851074]
[58.62512207 -330.07321167]
[53.21542358 -316.06552124]
[46.27135086 -302.75164795]
[37.88022614 -290.29895020]
[28.14758682 -278.86410522]
[17.19582367 -268.59091187]
[5.16266870 -259.60852051]
[-7.80054808 -252.02992249]
[-1.72671402 -238.31466675]
[4.34711981 -224.59939575]
[16.57528496 -216.09519958]
[15.08867264 -200.34399414]
[21.16250610 -186.62872314]
[27.23634148 -172.91346741]
[30.99447060 -187.43504333]
[41.93441010 -197.69749451]
[56.66629791 -200.52085876]
[70.62530518 -195.03030396]
[79.48607635 -182.92713928]
[80.50299835 -167.96163940]
[73.36098480 -154.77105713]
[60.27304840 -147.44262695]
[45.29463959 -148.24713135]
[33.06681442 -156.93550110]
[37.25382614 -142.53172302]
[41.44083786 -128.12792969]
[45.62784958 -113.72415161]
[49.81486130 -99.32037354]
[54.00187302 -84.91658783]
[58.18888474 -70.51280975]
[69.17125702 -60.45116043]
[65.59359741 -45.03977203]
[69.78060913 -30.63599014]
[73.96762085 -16.23220825]
[84.94999695 -6.17056322]
[81.37232971 9.24082565]
[85.55934143 23.64460754]
[89.74635315 38.04838943]
[93.93336487 52.45217133]
[98.12037659 66.85595703]
[109.10275269 76.91760254]
[105.52509308 92.32898712]
[109.43074799 95.83039093]
[111.09661865 101.27081299]
[109.61546326 107.22422028]
[113.37176514 121.74628448]
[117.12806702 136.26834106]
[120.88436890 150.79040527]
[124.64067078 165.31245422]
[128.30073547 169.03414917]
[129.99755859 173.35549927]
[129.83149719 177.42826843]
[128.22497559 180.56697083]
[131.32908630 195.24227905]
[144.29170227 203.87988281]
[147.23065186 218.80694580]
[138.91613770 231.11158752]
[142.02024841 245.78689575]
[145.12435913 260.46218872]
[148.22846985 275.13751221]
[158.59329224 282.81430054]
[160.87658691 295.10128784]
[154.39054871 305.31195068]
[157.27583313 320.03186035]
[160.16110229 334.75173950]
[172.58251953 348.34548950]
[166.25186157 364.71282959]
[169.35597229 379.38812256]
[172.46008301 394.06341553]
[187.43260193 392.85848999]
[202.43627930 393.57812500]
[217.22474670 396.21054077]
[231.55516052 400.71249390]
[245.19219971 407.01007080]
[257.91192627 414.99987793]
[269.50549316 424.55065918]
[279.78250122 435.50564575]
[288.57418823 447.68490601]
[295.73620605 460.88845825]
[301.15093994 474.89950562]
[304.72946167 489.48791504]
[306.41302490 504.41421509]
[306.17401123 519.43322754]
[304.01626587 534.29840088]
[299.97531128 548.76556396]
[294.11743164 562.59716797]
[286.53887939 575.56610107]
[277.36404419 587.45941162]
[266.74362183 598.08184814]
[254.85202026 607.25885010]
[241.88446045 614.83978271]
[228.05392456 620.70019531]
[213.58750916 624.74383545]
[198.72276306 626.90435791]
[183.70378113 627.14611816]
[168.77719116 625.46533203]
[154.18809509 621.88946533]
[140.17605591 616.47735596]
[126.97117615 609.31774902]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 180]
[18 179]
[19 178]
[22 176]
[23 175]
[24 174]
[26 171]
[27 170]
[28 169]
[29 168]
[32 165]
[33 164]
[34 160]
[35 159]
[36 158]
[37 157]
[38 156]
[39 153]
[41 151]
[42 150]
[43 149]
[44 148]
[45 147]
[47 145]
[48 144]
[49 143]
[51 141]
[52 140]
[53 139]
[54 138]
[55 137]
[56 136]
[57 135]
[58 125]
[59 124]
[60 123]
[62 121]
[63 120]
[64 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
