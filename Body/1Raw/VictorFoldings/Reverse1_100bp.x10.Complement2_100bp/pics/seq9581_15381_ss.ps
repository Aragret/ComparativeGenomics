%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[105.19361877 707.64752197]
[91.00417328 702.75378418]
[77.29524231 696.64190674]
[64.17116547 689.35852051]
[51.73182678 680.95898438]
[40.07189941 671.50726318]
[29.28012276 661.07525635]
[19.43863106 649.74230957]
[10.62232590 637.59484863]
[2.89830518 624.72515869]
[-3.67464542 611.23120117]
[-9.04650116 597.21575928]
[-13.17637825 582.78546143]
[-16.03284454 568.05017090]
[-17.59416199 553.12194824]
[-17.84844589 538.11444092]
[-16.79376221 523.14190674]
[-14.43813610 508.31826782]
[-10.79949856 493.75634766]
[-5.90553951 479.56695557]
[0.20649292 465.85812378]
[7.49008179 452.73413086]
[15.88979435 440.29492188]
[25.34170151 428.63513184]
[35.77386856 417.84350586]
[47.10689545 408.00216675]
[59.25453568 399.18603516]
[72.12432861 391.46218872]
[85.61833954 384.88943481]
[99.63385010 379.51776123]
[114.06420898 375.38809204]
[128.79957581 372.53182983]
[127.23905182 357.61322021]
[118.21965790 345.75997925]
[124.47927856 331.22973633]
[122.91875458 316.31112671]
[121.35823059 301.39251709]
[109.66191864 292.24200439]
[107.86680603 277.13464355]
[117.54400635 264.92852783]
[115.98348236 250.00991821]
[114.42295837 235.09132385]
[112.08747101 220.27424622]
[108.98336029 205.59895325]
[105.87924957 190.92364502]
[102.77513885 176.24833679]
[99.67102814 161.57304382]
[96.56691742 146.89773560]
[90.41548920 160.57838440]
[78.30594635 169.43043518]
[63.40368271 171.13998413]
[49.60412216 165.26017761]
[40.51443863 153.32797241]
[38.51064682 138.46240234]
[44.11653900 124.54932404]
[55.86674881 115.22555542]
[70.68979645 112.92832184]
[84.71096802 118.25810242]
[94.26480103 129.82090759]
[93.37198639 114.84751129]
[85.14273071 106.60610962]
[84.53608704 94.97541046]
[91.86329651 85.92259979]
[91.19351196 70.93756104]
[90.52372742 55.95252609]
[89.85394287 40.96748734]
[89.18415833 25.98244858]
[78.91667175 10.69649506]
[87.60524750 -4.55065727]
[86.71243286 -19.52406311]
[85.81961060 -34.49746704]
[84.92679596 -49.47087479]
[84.03398132 -64.44428253]
[73.54005432 -79.57566833]
[82.00065613 -94.95049286]
[80.88500214 -109.90895081]
[79.76935577 -124.86740112]
[78.43112183 -139.80758667]
[76.87059784 -154.72619629]
[75.31007385 -169.64479065]
[73.74954987 -184.56340027]
[71.96708679 -199.45712280]
[69.96307373 -214.32264709]
[67.95906067 -229.18817139]
[58.44740677 -241.83091736]
[64.41497040 -255.47779846]
[62.41095734 -270.34332275]
[60.40694046 -285.20886230]
[58.40292740 -300.07440186]
[56.39891434 -314.93991089]
[41.44678116 -317.02227783]
[27.61138535 -323.06253052]
[15.91941261 -332.61239624]
[7.23848057 -344.96328735]
[2.21277308 -359.19860840]
[1.21523106 -374.26205444]
[4.31987858 -389.03579712]
[11.29633045 -402.42355347]
[21.62688828 -413.43182373]
[34.54495239 -421.24374390]
[49.09192276 -425.27963257]
[64.18831635 -425.23995972]
[78.71387482 -421.12768555]
[91.59070587 -413.24798584]
[101.86327362 -402.18557739]
[108.76927185 -388.76135254]
[111.79624176 -373.97149658]
[110.71955109 -358.91351318]
[105.61910248 -344.70477295]
[96.87338257 -332.39968872]
[85.13138580 -322.91137695]
[71.26444244 -316.94393921]
[73.26845551 -302.07839966]
[75.27246857 -287.21286011]
[77.27648163 -272.34735107]
[79.28049469 -257.48181152]
[88.64881134 -245.90235901]
[82.82458496 -231.19218445]
[84.82860565 -216.32666016]
[86.83261871 -201.46113586]
[90.02003479 -197.90454102]
[91.00706482 -192.30786133]
[88.66815948 -186.12391663]
[90.22868347 -171.20532227]
[91.78920746 -156.28671265]
[93.34972382 -141.36810303]
[96.42984009 -137.71818542]
[97.24980164 -132.09460449]
[94.72781372 -125.98304749]
[95.84346008 -111.02459717]
[96.95910645 -96.06613922]
[105.91745758 -87.93751526]
[106.96934509 -75.48451233]
[99.00738525 -65.33709717]
[99.90019989 -50.36368942]
[100.79302216 -35.39028549]
[101.68583679 -20.41687965]
[102.57865143 -5.44347334]
[111.41498566 2.81762767]
[112.28134918 15.28491211]
[104.16919708 25.31266212]
[104.83898163 40.29770279]
[105.50876617 55.28274155]
[106.17855072 70.26777649]
[106.84833527 85.25281525]
[116.23766327 99.15306091]
[108.34539032 113.95469666]
[109.23821259 128.92810059]
[111.24222565 143.79362488]
[114.34633636 158.46893311]
[117.45044708 173.14422607]
[120.55455017 187.81953430]
[123.65866089 202.49484253]
[126.76277161 217.17013550]
[134.87113953 204.55053711]
[149.15637207 199.97537231]
[163.08746338 205.53637695]
[170.29530334 218.69110107]
[167.48457336 233.42541504]
[155.94027710 243.00296021]
[140.94033813 243.04502869]
[129.34156799 233.53079224]
[130.90208435 248.44940186]
[132.46261597 263.36801147]
[144.45628357 273.30731201]
[145.82635498 288.45910645]
[136.27684021 299.83200073]
[137.83735657 314.75061035]
[139.39787292 329.66921997]
[148.52890015 342.58953857]
[142.15765381 356.05270386]
[143.71818542 370.97131348]
[158.72566223 370.71640015]
[173.69824219 371.77044678]
[188.52198792 374.12545776]
[203.08406067 377.76348877]
[217.27365112 382.65682983]
[230.98275757 388.76828003]
[244.10704041 396.05133057]
[256.54660034 404.45053101]
[268.20678711 413.90194702]
[278.99887085 424.33364868]
[288.84066772 435.66625977]
[297.65731812 447.81353760]
[305.38171387 460.68301392]
[311.95504761 474.17672729]
[317.32727051 488.19201660]
[321.45758057 502.62219238]
[324.31445312 517.35742188]
[325.87619019 532.28564453]
[326.13088989 547.29309082]
[325.07662964 562.26568604]
[322.72140503 577.08935547]
[319.08319092 591.65142822]
[314.18963623 605.84094238]
[308.07797241 619.54992676]
[300.79473877 632.67413330]
[292.39538574 645.11358643]
[282.94381714 656.77362061]
[272.51193237 667.56555176]
[261.17919922 677.40722656]
[249.03179932 686.22369385]
[236.16221619 693.94787598]
[222.66839600 700.52105713]
[208.65303040 705.89306641]
[194.22279358 710.02313232]
[179.48750305 712.87982178]
[164.55931091 714.44134521]
[149.55183411 714.69586182]
[134.57926941 713.64135742]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 172]
[33 171]
[35 169]
[36 168]
[37 167]
[40 164]
[41 163]
[42 162]
[43 154]
[44 153]
[45 152]
[46 151]
[47 150]
[48 149]
[59 148]
[60 147]
[63 145]
[64 144]
[65 143]
[66 142]
[67 141]
[69 138]
[70 137]
[71 136]
[72 135]
[73 134]
[75 131]
[76 130]
[77 129]
[78 126]
[79 125]
[80 124]
[81 123]
[82 120]
[83 119]
[84 118]
[86 116]
[87 115]
[88 114]
[89 113]
[90 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
