%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAGACUCAUCUCUUUACUAGGCAUUAUAUCCGGAGCGGGCUACACAUCCUUCUCCGUCUAUUUCUUAUAACUCCGCGGUAACCGCACUUCCAUCGCCUxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[148.89271545 620.07501221]
[139.98788452 607.99322510]
[132.12528992 595.20861816]
[125.36005402 581.81091309]
[119.73964691 567.89410400]
[115.30348969 553.55578613]
[112.08270264 538.89654541]
[110.09987640 524.01922607]
[109.36891174 509.02816772]
[109.89494324 494.02850342]
[111.67427826 479.12545776]
[114.69443512 464.42358398]
[118.93423462 450.02600098]
[124.36392975 436.03366089]
[130.94543457 422.54476929]
[138.63259888 409.65393066]
[147.37147522 397.45153809]
[157.10078430 386.02319336]
[167.75228882 375.44906616]
[179.25125122 365.80331421]
[191.51702881 357.15362549]
[204.46359253 349.56063843]
[197.98410034 336.03231812]
[191.50459290 322.50396729]
[185.02510071 308.97561646]
[178.54560852 295.44726562]
[164.45574951 290.75564575]
[157.69189453 277.12826538]
[162.70845032 262.38134766]
[156.22895813 248.85299683]
[149.74945068 235.32464600]
[142.47622681 222.20596313]
[134.43505859 209.54342651]
[126.39388275 196.88090515]
[118.35270691 184.21838379]
[119.74452209 199.15367126]
[116.92875671 213.88700867]
[110.12748718 227.25648499]
[99.87709045 238.20770264]
[86.98594666 245.87702942]
[72.47070312 249.65959167]
[57.47610474 249.25712585]
[43.18468094 244.70132446]
[30.72351456 236.35151672]
[21.07534409 224.86619568]
[15.00106525 211.15112305]
[12.97972012 196.28794861]
[15.17072105 181.44882202]
[21.40127563 167.80403137]
[31.18001938 156.42967224]
[43.73575592 148.22274780]
[58.07828903 143.83052063]
[73.07650757 143.59934998]
[87.54759216 147.54750061]
[100.35028076 155.36357117]
[110.47687531 166.43403625]
[106.50478363 151.96951294]
[102.53268433 137.50498962]
[98.56058502 123.04046631]
[94.58849335 108.57594299]
[89.58687592 102.25483704]
[90.66664886 93.86645508]
[86.91034698 79.34439087]
[83.15405273 64.82233429]
[79.69420624 79.41786194]
[71.94718933 92.26246643]
[60.65140152 102.13187408]
[46.88348770 108.08539581]
[31.95570755 109.55558777]
[17.29089165 106.40231323]
[4.28679132 98.92612457]
[-5.81712341 87.83960724]
[-12.05781174 74.19944763]
[-13.84045124 59.30575180]
[-10.99513340 44.57808685]
[-3.79305363 31.42019653]
[7.07933044 21.08621216]
[20.58573341 14.56109905]
[35.43880844 12.46679115]
[50.22285843 15.00290489]
[63.52875900 21.92771339]
[74.08827972 32.58118820]
[80.89530945 45.94898987]
[81.11863708 30.95065117]
[71.77919006 15.08066845]
[81.35988617 0.37770125]
[81.35988617 -14.62229919]
[66.46629333 -20.67946053]
[55.06480789 -31.96115685]
[48.88048172 -46.71886063]
[48.83300781 -62.68136597]
[54.90007401 -77.40432739]
[66.12531281 -88.64456177]
[80.76894379 -94.70181274]
[80.54561615 -109.70014954]
[80.32228851 -124.69849396]
[80.09896088 -139.69682312]
[79.87563324 -154.69515991]
[79.65230560 -169.69349670]
[65.96687317 -176.54679871]
[57.04332733 -188.98178101]
[54.93223572 -204.14100647]
[60.11870575 -218.54096985]
[71.41092682 -228.87268066]
[86.21403503 -232.76199341]
[101.12637329 -229.31515503]
[112.72120667 -219.32423401]
[118.33411407 -205.08506775]
[116.67530823 -189.86970520]
[108.12595367 -177.17454529]
[94.65064240 -169.91682434]
[94.87397003 -154.91848755]
[95.09729767 -139.92015076]
[95.32062531 -124.92182159]
[95.54395294 -109.92347717]
[95.76728058 -94.92514038]
[108.99870300 -90.24874878]
[119.86227417 -81.31782532]
[127.04009247 -69.18940735]
[129.65240479 -55.30999756]
[127.36539459 -41.34302521]
[120.43363953 -28.96950912]
[109.67201233 -19.68572807]
[96.35988617 -14.62229919]
[96.35988617 0.37770125]
[104.68884277 9.15010357]
[104.81159973 21.64685059]
[96.11697388 31.17397881]
[95.89364624 46.17231750]
[97.67610931 61.06603241]
[101.43241119 75.58809662]
[105.18871307 90.11015320]
[109.05301666 104.60384369]
[113.02510834 119.06836700]
[116.99720764 133.53289795]
[120.96930695 147.99742126]
[124.94139862 162.46194458]
[131.01522827 176.17720032]
[139.05641174 188.83973694]
[147.09757996 201.50225830]
[155.13874817 214.16477966]
[157.42216492 199.33959961]
[167.90129089 188.60704041]
[182.66769409 185.97009277]
[196.21385193 192.41226196]
[203.48739624 205.53077698]
[201.77546692 220.43276978]
[191.71656799 231.56015015]
[177.06243896 234.76269531]
[163.27780151 228.84515381]
[169.75729370 242.37350464]
[176.23680115 255.90184021]
[190.87161255 261.23660278]
[197.25003052 275.04858398]
[192.07395935 288.96777344]
[198.55345154 302.49612427]
[205.03294373 316.02447510]
[211.51243591 329.55279541]
[217.99194336 343.08114624]
[232.02320862 337.75289917]
[246.45111084 333.61746216]
[261.17446899 330.70385742]
[276.08999634 329.03247070]
[291.09307861 328.61505127]
[306.07846069 329.45455933]
[320.94104004 331.54504395]
[335.57656860 334.87188721]
[349.88238525 339.41174316]
[363.75814819 345.13278198]
[377.10650635 351.99484253]
[389.83383179 359.94979858]
[401.85086060 368.94186401]
[413.07330322 378.90798950]
[423.42245483 389.77819824]
[432.82571411 401.47631836]
[441.21707153 413.92022705]
[448.53775024 427.02267456]
[454.73632812 440.69177246]
[459.76937866 454.83160400]
[463.60159302 469.34301758]
[466.20602417 484.12420654]
[467.56448364 499.07147217]
[467.66741943 514.08001709]
[466.51409912 529.04449463]
[464.11260986 543.86004639]
[460.47982788 558.42260742]
[455.64117432 572.63018799]
[449.63064575 586.38299561]
[442.49035645 599.58459473]
[434.27044678 612.14245605]
[425.02853394 623.96844482]
[414.82946777 634.97955322]
[403.74475098 645.09863281]
[391.85217285 654.25469971]
[379.23513794 662.38348389]
[365.98214722 669.42797852]
[352.18618774 675.33874512]
[337.94396973 680.07440186]
[323.35546875 683.60168457]
[308.52294922 685.89581299]
[293.55047607 686.94073486]
[278.54309082 686.72918701]
[263.60604858 685.26251221]
[248.84410095 682.55108643]
[234.36082458 678.61395264]
[220.25779724 673.47863770]
[206.63395691 667.18121338]
[193.58485413 659.76586914]
[181.20201111 651.28460693]
[169.57229614 641.79693604]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 159]
[23 158]
[24 157]
[25 156]
[26 155]
[29 152]
[30 151]
[31 150]
[32 141]
[33 140]
[34 139]
[35 138]
[56 137]
[57 136]
[58 135]
[59 134]
[60 133]
[62 132]
[63 131]
[64 130]
[83 129]
[84 128]
[86 125]
[87 124]
[94 116]
[95 115]
[96 114]
[97 113]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
