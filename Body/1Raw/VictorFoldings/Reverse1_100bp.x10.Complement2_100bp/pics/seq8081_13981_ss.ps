%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[62.77526093 454.30758667]
[60.12132263 469.09994507]
[55.29224396 483.33154297]
[48.39590454 496.68435669]
[39.58637238 508.86013794]
[29.06045532 519.58685303]
[17.05330658 528.62493896]
[3.83316994 535.77233887]
[-10.30461121 540.86944580]
[-25.04419327 543.80242920]
[-40.05628967 544.50573730]
[-55.00552368 542.96368408]
[-69.55792236 539.21063232]
[-83.38838196 533.33050537]
[-96.18792725 525.45458984]
[-107.67060852 515.75897217]
[-117.57990265 504.46011353]
[-125.69441986 491.81054688]
[-131.83290100 478.09277344]
[-135.85818481 463.61331177]
[-137.68035889 448.69564819]
[-137.25871277 433.67297363]
[-134.60266113 418.88098145]
[-129.77156067 404.65011597]
[-122.87332153 391.29824829]
[-114.06204987 379.12371826]
[-103.53460693 368.39849854]
[-91.52616882 359.36218262]
[-78.30501556 352.21664429]
[-64.16651154 347.12152100]
[-49.42651367 344.19064331]
[-34.41431427 343.48947144]
[-19.46530151 345.03369141]
[-4.91343546 348.78881836]
[0.95552522 334.98461914]
[-1.18522155 320.24465942]
[11.33476067 310.57199097]
[17.20372200 296.76782227]
[15.06297493 282.02786255]
[27.58295631 272.35516357]
[25.44220924 257.61520386]
[37.96219254 247.94253540]
[43.83115387 234.13836670]
[49.70011520 220.33418274]
[55.56907272 206.53001404]
[61.43803406 192.72583008]
[66.68475342 178.67337036]
[71.29875946 164.40063477]
[75.91277313 150.12789917]
[80.52677917 135.85516357]
[85.14079285 121.58242798]
[89.75479889 107.30970001]
[94.04891968 92.93748474]
[98.02101898 78.47296143]
[101.99311829 64.00843811]
[105.96520996 49.54391098]
[109.93730927 35.07938766]
[113.90940094 20.61486435]
[116.35513306 5.81559420]
[117.24794769 -9.15781212]
[118.14076233 -24.13121796]
[119.03357697 -39.10462189]
[119.92639923 -54.07802963]
[120.81921387 -69.05143738]
[120.26100159 -84.04104614]
[118.25698853 -98.90657043]
[116.25297546 -113.77210236]
[106.74131775 -126.41484833]
[112.70888519 -140.06173706]
[110.70487213 -154.92726135]
[105.08987427 -141.01785278]
[94.88266754 -130.02635193]
[81.42619324 -123.39889526]
[66.49086761 -122.00743103]
[52.04170227 -126.03503418]
[39.97972870 -134.95179749]
[31.89190292 -147.58457947]
[28.84232330 -162.27131653]
[31.23221207 -177.07969666]
[38.74713898 -190.06144714]
[50.39838409 -199.50859070]
[64.65303040 -204.17819214]
[79.63562775 -203.45587158]
[93.37496185 -197.43667603]
[104.06338501 -186.91253662]
[110.29523468 -173.26576233]
[111.63346863 -188.20594788]
[112.97170258 -203.14613342]
[114.30993652 -218.08631897]
[115.64817047 -233.02650452]
[116.98640442 -247.96669006]
[118.32463837 -262.90689087]
[119.66287231 -277.84707642]
[121.00110626 -292.78726196]
[106.61016083 -297.21377563]
[93.45420074 -304.53598022]
[82.10836792 -314.43374634]
[73.06864166 -326.47436523]
[66.73020172 -340.13153076]
[63.37013626 -354.80816650]
[63.13534164 -369.86270142]
[66.03607178 -384.63696289]
[71.94552612 -398.48513794]
[80.60536194 -410.80184937]
[91.63701630 -421.04861450]
[104.55822754 -428.77752686]
[118.80413818 -433.65069580]
[133.75198364 -435.45507812]
[148.74829102 -434.11181641]
[163.13749695 -429.67962646]
[176.29057312 -422.35226440]
[187.63250732 -412.45001221]
[196.66749573 -400.40582275]
[203.00056458 -386.74618530]
[206.35485840 -372.06823730]
[206.58372498 -357.01361084]
[203.67718506 -342.24047852]
[197.76228333 -328.39462280]
[189.09759521 -316.08132935]
[178.06192017 -305.83889771]
[165.13766479 -298.11508179]
[150.88984680 -293.24752808]
[135.94129944 -291.44900513]
[134.60305786 -276.50881958]
[133.26483154 -261.56863403]
[131.92658997 -246.62846375]
[130.58836365 -231.68827820]
[129.25012207 -216.74809265]
[127.91188812 -201.80790710]
[126.57365417 -186.86772156]
[125.23542023 -171.92753601]
[125.57039642 -156.93127441]
[127.57440948 -142.06575012]
[136.94271851 -130.48628235]
[131.11849976 -115.77611542]
[133.12251282 -100.91058350]
[135.12652588 -86.04505920]
[141.20098877 -99.76004791]
[152.27386475 -109.87890625]
[166.47920227 -114.69641876]
[181.42314148 -113.40075684]
[194.58737183 -106.21026611]
[203.75347900 -94.33666229]
[207.37681580 -79.78085327]
[204.84678650 -64.99576569]
[196.58975220 -52.47292709]
[183.99717712 -44.32266617]
[169.19110107 -41.91844559]
[154.66662598 -45.66541290]
[142.87138367 -54.93214417]
[135.79261780 -68.15861511]
[134.89979553 -53.18521118]
[134.00698853 -38.21180725]
[133.11416626 -23.23840141]
[132.22135925 -8.26499557]
[131.32853699 6.70840979]
[139.70341492 -5.73592091]
[152.16038513 -14.09198475]
[166.85154724 -17.12020874]
[181.59751892 -14.37137413]
[194.21084595 -6.25325394]
[202.82041931 6.02987623]
[206.14904785 20.65588760]
[203.70295715 35.45509720]
[195.84501648 48.23213196]
[183.74089050 57.09159470]
[169.18615723 60.71923828]
[154.33992004 58.57691956]
[141.40455627 50.98243713]
[132.29891968 39.06239319]
[128.37393188 24.58696175]
[124.40183258 39.05148315]
[120.42973328 53.51601028]
[116.45764160 67.98052979]
[112.48554230 82.44505310]
[108.51345062 96.90958405]
[109.92667389 100.49777985]
[109.75141144 104.69148254]
[107.75270081 108.76728821]
[104.02753448 111.92370605]
[99.41352081 126.19644165]
[94.79951477 140.46917725]
[90.18550873 154.74191284]
[85.57149506 169.01463318]
[80.95748901 183.28736877]
[94.77072906 177.43977356]
[108.72422791 182.94430542]
[114.82479858 196.64770508]
[109.57774353 210.70004272]
[95.98881531 217.05151367]
[81.84237671 212.06370544]
[75.24221039 198.59480286]
[69.37325287 212.39897156]
[63.50429153 226.20315552]
[57.63533020 240.00732422]
[51.76636887 253.81150818]
[53.48732758 269.53881836]
[41.38713455 278.22415161]
[43.10809326 293.95147705]
[31.00789833 302.63677979]
[25.13893700 316.44094849]
[26.85989761 332.16827393]
[14.75970173 340.85357666]
[8.89074135 354.65777588]
[21.69140816 362.53179932]
[33.17546844 372.22583008]
[43.08636856 383.52325439]
[51.20269012 396.17169189]
[57.34311676 409.88858032]
[61.37046814 424.36746216]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 204]
[35 203]
[37 201]
[38 200]
[40 198]
[42 196]
[43 195]
[44 194]
[45 193]
[46 192]
[47 185]
[48 184]
[49 183]
[50 182]
[51 181]
[52 180]
[53 176]
[54 175]
[55 174]
[56 173]
[57 172]
[58 171]
[59 156]
[60 155]
[61 154]
[62 153]
[63 152]
[64 151]
[65 137]
[66 136]
[67 135]
[69 133]
[70 132]
[86 131]
[87 130]
[88 129]
[89 128]
[90 127]
[91 126]
[92 125]
[93 124]
[94 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
