%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[127.34950256 674.40478516]
[116.82584381 663.69635010]
[107.47917938 651.94659424]
[99.41193390 639.28411865]
[92.71247864 625.84783936]
[87.45423126 611.78479004]
[83.69480133 597.24914551]
[81.47537231 582.40020752]
[80.82026672 567.40057373]
[81.73666382 552.41467285]
[84.21451569 537.60662842]
[88.22668457 523.13873291]
[93.72920227 509.16946411]
[100.66178131 495.85192871]
[108.94846344 483.33200073]
[118.49845886 471.74685669]
[129.20713806 461.22344971]
[140.95715332 451.87707520]
[153.61978149 443.81015015]
[167.05627441 437.11102295]
[181.11943054 431.85311890]
[177.36312866 417.33105469]
[166.68519592 406.94686890]
[170.72012329 391.64883423]
[166.96382141 377.12677002]
[163.20751953 362.60473633]
[159.34321594 348.11102295]
[148.51185608 337.88699341]
[152.31857300 322.53057861]
[148.34648132 308.06604004]
[137.51512146 297.84201050]
[141.32183838 282.48559570]
[137.34974670 268.02105713]
[133.37765503 253.55654907]
[129.40556335 239.09202576]
[118.57420349 228.86798096]
[122.38092041 213.51156616]
[118.40882111 199.04704285]
[114.43672943 184.58251953]
[102.45647430 179.83877563]
[95.28890228 168.89765930]
[95.73821259 155.63084412]
[103.86430359 144.88926697]
[100.10800171 130.36721802]
[96.35169983 115.84515381]
[84.28909302 104.18884277]
[88.94746399 88.07437897]
[84.65333557 73.70216370]
[80.03932953 59.42943192]
[75.42531586 45.15670013]
[64.31807709 38.59986496]
[60.76889420 26.61708450]
[66.15747070 15.78704262]
[61.75647354 1.44719541]
[57.35547638 -12.89265156]
[52.95447540 -27.23249817]
[48.55347824 -41.57234573]
[43.04394150 -48.85814285]
[44.19541931 -56.15854645]
[40.00840759 -70.56232452]
[35.82139587 -84.96611023]
[30.78448105 -99.09513855]
[24.91552162 -112.89931488]
[19.04656029 -126.70349121]
[15.64149380 -112.09508514]
[5.46078300 -101.07904816]
[-8.83435917 -96.53494263]
[-23.50721741 -99.65058899]
[-34.72233963 -109.61155701]
[-39.54812241 -123.81408691]
[-36.72311783 -138.54566956]
[-26.98577309 -149.95549011]
[-12.88140774 -155.06106567]
[1.90313065 -152.52780151]
[13.50267982 -143.01861572]
[9.74637890 -157.54066467]
[5.99007845 -172.06272888]
[2.23377800 -186.58479309]
[-1.52252281 -201.10684204]
[-14.85790348 -209.15702820]
[-18.46045494 -223.93797302]
[-10.70365810 -236.60160828]
[-14.45995808 -251.12365723]
[-29.51007652 -250.56869507]
[-44.32755280 -253.26246643]
[-58.21934891 -259.07901001]
[-70.53572083 -267.74624634]
[-80.70060730 -278.85882568]
[-88.23857117 -291.89694214]
[-92.79705811 -306.25085449]
[-94.16286469 -321.24914551]
[-92.27209473 -336.19033813]
[-87.21318817 -350.37557983]
[-79.22276306 -363.14144897]
[-68.67454529 -373.89083862]
[-56.06189728 -382.12094116]
[-41.97472382 -387.44689941]
[-27.07191849 -389.61953735]
[-12.05050659 -388.53729248]
[2.38693023 -384.25076294]
[15.56512737 -376.96038818]
[26.86771774 -367.00723267]
[35.76605606 -354.85678101]
[41.84395599 -341.07733154]
[44.81713867 -326.31338501]
[44.54654312 -311.25546265]
[41.04482651 -296.60784912]
[34.47577286 -283.05569458]
[25.14662361 -271.23278809]
[13.49372482 -261.69213867]
[0.06210086 -254.87995911]
[3.81840158 -240.35791016]
[16.74270630 -233.04367065]
[20.75900269 -218.36975098]
[12.99953651 -204.86314392]
[16.75583649 -190.34107971]
[20.51213837 -175.81903076]
[24.26843834 -161.29696655]
[28.02473831 -146.77490234]
[32.85073853 -132.57244873]
[38.71969604 -118.76828003]
[44.58865738 -104.96410370]
[49.25873566 -119.21858978]
[61.34756470 -128.09890747]
[76.34630585 -128.29293823]
[88.66081238 -119.72830200]
[93.69805908 -105.59939575]
[89.57929230 -91.17594910]
[77.84070587 -81.83755493]
[62.86050034 -81.06720734]
[50.22518158 -89.15312195]
[54.41218948 -74.74933624]
[58.59920120 -60.34555817]
[62.89332581 -45.97334290]
[67.29432678 -31.63349724]
[71.69532013 -17.29364967]
[76.09632111 -2.95380259]
[80.49731445 11.38604450]
[93.97021484 22.63095665]
[89.69805145 40.54269028]
[94.31206512 54.81542206]
[98.92607117 69.08815765]
[101.88194275 71.01042938]
[104.05360413 74.45991516]
[104.73339081 79.05243683]
[103.41198730 84.10227966]
[113.16858673 90.46231842]
[116.16896057 101.71571350]
[110.87375641 112.08885193]
[114.63005829 126.61091614]
[118.38636017 141.13298035]
[133.61959839 149.73341370]
[137.83659363 166.36267090]
[128.90124512 180.61042786]
[132.87335205 195.07495117]
[136.84544373 209.53947449]
[147.96090698 220.79811096]
[143.87008667 235.11993408]
[147.84217834 249.58445740]
[151.81427002 264.04898071]
[155.78637695 278.51348877]
[166.90184021 289.77212524]
[162.81100464 304.09396362]
[166.78309631 318.55847168]
[177.89857483 329.81710815]
[173.80773926 344.13894653]
[179.09791565 351.58554077]
[177.72958374 358.84841919]
[181.48588562 373.37048340]
[185.24218750 387.89254761]
[196.18879700 399.31542969]
[191.88519287 413.57473755]
[195.64149475 428.09680176]
[210.49029541 425.87631226]
[225.48986816 425.22009277]
[240.47586060 426.13540649]
[255.28407288 428.61218262]
[269.75225830 432.62329102]
[283.72192383 438.12478638]
[297.03997803 445.05639648]
[309.56051636 453.34216309]
[321.14633179 462.89132690]
[331.67050171 473.59924316]
[341.01776123 485.34857178]
[349.08560181 498.01062012]
[355.78570557 511.44662476]
[361.04464722 525.50939941]
[364.80477905 540.04479980]
[367.02493286 554.89367676]
[367.68075562 569.89324951]
[366.76510620 584.87921143]
[364.28796387 599.68737793]
[360.27648926 614.15551758]
[354.77465820 628.12500000]
[347.84274292 641.44287109]
[339.55664062 653.96325684]
[330.00723267 665.54882812]
[319.29907227 676.07275391]
[307.54949951 685.41967773]
[294.88726807 693.48724365]
[281.45108032 700.18701172]
[267.38818359 705.44561768]
[252.85266113 709.20538330]
[238.00373840 711.42517090]
[223.00413513 712.08068848]
[208.01818848 711.16461182]
[193.21009827 708.68713379]
[178.74209595 704.67529297]
[164.77270508 699.17315674]
[151.45500183 692.24090576]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 173]
[22 172]
[24 170]
[25 169]
[26 168]
[27 166]
[29 164]
[30 163]
[32 161]
[33 160]
[34 159]
[35 158]
[37 156]
[38 155]
[39 154]
[43 151]
[44 150]
[45 149]
[47 146]
[48 142]
[49 141]
[50 140]
[53 138]
[54 137]
[55 136]
[56 135]
[57 134]
[59 133]
[60 132]
[61 131]
[62 122]
[63 121]
[64 120]
[75 119]
[76 118]
[77 117]
[78 116]
[79 115]
[82 112]
[83 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
