%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUUUAAUUCCGCUUCAAAUAAUGAGAAAAAACUUACAACAGUUUUGAUCAAUUAACCUUCAAUUGCCAUGAUAAAUAUGAUUUUCUCAUUCUGGGAGxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[26.22060394 309.67831421]
[30.68753052 324.02767944]
[32.96580124 338.88253784]
[33.00452423 353.91104126]
[30.80282593 368.77746582]
[26.40990067 383.14965820]
[19.92388344 396.70654297]
[11.48967648 409.14526367]
[1.29570246 420.18792725]
[-10.43030167 429.58786011]
[-23.42637253 437.13500977]
[-37.40217209 442.66082764]
[-52.04547882 446.04187012]
[-67.02915192 447.20254517]
[-82.01845551 446.11694336]
[-96.67852020 442.80935669]
[-110.68183136 437.35360718]
[-123.71555328 429.87167358]
[-135.48851013 420.53060913]
[-145.73768616 409.53915405]
[-154.23410034 397.14285278]
[-160.78796387 383.61862183]
[-165.25285339 369.26861572]
[-167.52900696 354.41345215]
[-167.56558228 339.38491821]
[-165.36177063 324.51882935]
[-160.96679688 310.14724731]
[-154.47885132 296.59127808]
[-146.04287720 284.15377808]
[-135.84732056 273.11254883]
[-124.11998749 263.71429443]
[-111.12284088 256.16897583]
[-97.14625549 250.64515686]
[-82.50246429 247.26623535]
[-67.51862335 246.10768127]
[-52.52947998 247.19540405]
[-37.86988831 250.50509644]
[-23.86735344 255.96281433]
[-16.39961243 242.95385742]
[-8.93187046 229.94491577]
[-1.46412945 216.93595886]
[6.00361156 203.92700195]
[13.47135258 190.91806030]
[0.29855061 198.09281921]
[-14.64692402 199.37063599]
[-28.84649467 194.53614807]
[-39.90728378 184.40408325]
[-45.96535873 170.68183899]
[-45.99982071 155.68188477]
[-40.00486755 141.93196106]
[-28.99075317 131.74916077]
[-14.81354713 126.84948730]
[0.13764131 128.05860901]
[13.34327316 135.17277527]
[22.57796860 146.99310303]
[26.28551865 161.52769470]
[23.84053612 176.32873535]
[33.67111588 164.99913025]
[43.50169754 153.66954041]
[53.33227921 142.33995056]
[63.16286087 131.01036072]
[72.99343872 119.68076324]
[82.82402039 108.35116577]
[81.90485382 93.89083099]
[91.40087891 82.94680786]
[105.84638214 81.81825256]
[115.42150116 70.27194977]
[124.73638916 58.51469803]
[134.05126953 46.75744629]
[143.36614990 35.00019455]
[132.12306213 25.06531525]
[121.42943573 14.54126644]
[111.31613922 3.45839119]
[101.81230164 -8.15135574]
[92.94534302 -20.25450134]
[84.74082947 -32.81614685]
[77.22241211 -45.80007553]
[70.41176605 -59.16884995]
[64.32852936 -72.88392639]
[58.99024200 -86.90575409]
[54.41229630 -101.19391632]
[50.60789490 -115.70720673]
[47.58800125 -130.40377808]
[45.36132812 -145.24125671]
[43.93429184 -160.17687988]
[43.31100845 -175.16755676]
[43.49327469 -190.17008972]
[44.48056412 -205.14120483]
[46.27003479 -220.03775024]
[48.85651779 -234.81675720]
[52.23256302 -249.43562317]
[56.38843536 -263.85220337]
[61.31215286 -278.02493286]
[66.98951721 -291.91293335]
[73.40415192 -305.47616577]
[80.53758240 -318.67553711]
[88.36921692 -331.47296143]
[96.87649536 -343.83157349]
[106.03487396 -355.71572876]
[115.81794739 -367.09118652]
[126.19752502 -377.92507935]
[137.14366150 -388.18621826]
[148.62480164 -397.84503174]
[160.60784912 -406.87362671]
[173.05824280 -415.24600220]
[185.94007874 -422.93801880]
[199.21624756 -429.92749023]
[212.84843445 -436.19427490]
[226.79734802 -441.72027588]
[241.02278137 -446.48959351]
[255.48368835 -450.48843384]
[270.13842773 -453.70532227]
[284.94467163 -456.13095093]
[299.85980225 -457.75830078]
[314.84075928 -458.58273315]
[329.84439087 -458.60186768]
[344.82739258 -457.81558228]
[359.74661255 -456.22622681]
[374.55902100 -453.83834839]
[389.22186279 -450.65881348]
[403.69293213 -446.69680786]
[417.93048096 -441.96377563]
[431.89343262 -436.47332764]
[445.54153442 -430.24130249]
[458.83544922 -423.28567505]
[471.73684692 -415.62652588]
[484.20855713 -407.28588867]
[496.21456909 -398.28784180]
[507.72027588 -388.65832520]
[518.69250488 -378.42510986]
[529.09967041 -367.61767578]
[538.91168213 -356.26721191]
[548.10034180 -344.40643311]
[556.63903809 -332.06951904]
[564.50329590 -319.29208374]
[571.67028809 -306.11093140]
[578.11950684 -292.56408691]
[583.83221436 -278.69058228]
[588.79199219 -264.53045654]
[592.98461914 -250.12452698]
[596.39788818 -235.51429749]
[599.02203369 -220.74192810]
[600.84942627 -205.84999084]
[601.87487793 -190.88143921]
[602.09533691 -175.87942505]
[601.51025391 -160.88720703]
[600.12127686 -145.94801331]
[597.93243408 -131.10488892]
[594.95001221 -116.40067291]
[591.18261719 -101.87773895]
[586.64105225 -87.57796478]
[581.33850098 -73.54257202]
[575.29028320 -59.81204605]
[568.51367188 -46.42596054]
[561.02838135 -33.42292023]
[552.85589600 -20.84040833]
[544.01977539 -8.71471119]
[534.54559326 2.91921353]
[524.46057129 14.02782059]
[513.79376221 24.57908249]
[502.57604980 34.54257584]
[490.83966064 43.88957214]
[478.61846924 52.59312439]
[465.94772339 60.62813568]
[452.86395264 67.97143555]
[439.40490723 74.60186005]
[425.60934448 80.50028229]
[411.51705933 85.64970398]
[397.16867065 90.03527832]
[382.60559082 93.64434814]
[367.86975098 96.46652222]
[353.00369263 98.49365234]
[338.05026245 99.71989441]
[323.05255127 100.14172363]
[308.05383301 99.75791931]
[293.09732056 98.56958008]
[278.22616577 96.58013916]
[263.48324585 93.79533386]
[248.91105652 90.22318268]
[234.55162048 85.87400055]
[220.44631958 80.76032257]
[206.63584900 74.89688110]
[193.16001892 68.30059814]
[180.05767822 60.99048615]
[167.36660767 52.98762131]
[155.12339783 44.31507874]
[145.80851746 56.07232666]
[136.49363708 67.82958221]
[127.17875671 79.58683014]
[127.21936035 83.11254883]
[125.55426025 86.83309937]
[122.11049652 89.94658661]
[117.17597961 91.64883423]
[118.09514618 106.10916901]
[108.59912109 117.05319214]
[94.15361786 118.18174744]
[84.32303619 129.51133728]
[74.49245453 140.84094238]
[64.66187286 152.17053223]
[54.83129120 163.50012207]
[45.00070953 174.82971191]
[35.17012787 186.15930176]
[26.48030472 198.38578796]
[19.01256371 211.39474487]
[11.54482269 224.40370178]
[4.07708168 237.41265869]
[-3.39065933 250.42160034]
[-10.85840034 263.43054199]
[0.91588473 272.76992798]
[11.16662502 283.75991821]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 208]
[39 207]
[40 206]
[41 205]
[42 204]
[43 203]
[57 202]
[58 201]
[59 200]
[60 199]
[61 198]
[62 197]
[63 196]
[66 193]
[67 189]
[68 188]
[69 187]
[70 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
