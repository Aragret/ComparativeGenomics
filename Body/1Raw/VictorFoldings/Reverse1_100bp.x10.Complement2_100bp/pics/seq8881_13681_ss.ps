%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[44.30913162 529.02124023]
[34.57691193 540.52691650]
[22.45327187 549.47760010]
[8.59202862 555.39050293]
[-6.25929928 557.94683838]
[-21.29979897 557.00866699]
[-35.71835327 552.62664795]
[-48.73739243 545.03710938]
[-59.65480804 534.64929199]
[-67.88184357 522.02343750]
[-72.97483063 507.84042358]
[-74.65909576 492.86511230]
[-72.84382629 477.90509033]
[-67.62689972 463.76718140]
[-59.28967285 451.21380615]
[-48.28175354 440.92193604]
[-35.19678879 433.44662476]
[-20.74043274 429.19097900]
[-5.69229841 428.38452148]
[-3.02650309 413.62332153]
[-0.36070749 398.86209106]
[2.30508804 384.10086060]
[-3.04715633 370.20114136]
[7.01953745 357.99572754]
[9.68533325 343.23449707]
[-0.83954066 353.92221069]
[-15.09727287 358.58236694]
[-29.90265083 356.17388916]
[-41.94811630 347.23483276]
[-48.54267883 333.76217651]
[-48.21309662 318.76580811]
[-41.03300095 305.59591675]
[-28.60644341 297.19467163]
[-13.70954704 295.43896484]
[0.32968202 300.72103882]
[10.37484455 311.86080933]
[14.18182659 326.36968994]
[11.16753674 311.78326416]
[23.08959389 301.38253784]
[28.12651062 287.25350952]
[33.16342545 273.12448120]
[38.20034409 258.99545288]
[43.23725891 244.86642456]
[48.27417374 230.73739624]
[53.31109238 216.60836792]
[50.29680252 202.02195740]
[62.21885681 191.62123108]
[67.25577545 177.49220276]
[72.29269409 163.36317444]
[77.32960510 149.23414612]
[81.94361877 134.96141052]
[86.13063049 120.55763245]
[90.31764221 106.15385437]
[78.43929291 115.31381226]
[63.58581924 117.40531158]
[49.63988495 111.88163757]
[40.24692535 100.18666840]
[37.86223221 85.37744141]
[43.10916138 71.32505035]
[54.61618042 61.70275497]
[69.37538147 59.02580261]
[83.52873993 63.99394226]
[93.37660217 75.30851746]
[96.34482574 90.01103210]
[102.62218475 76.38771057]
[108.89954376 62.76439667]
[106.78612518 44.47191238]
[121.49980164 34.90767670]
[127.57363892 21.19240761]
[133.64747620 7.47714138]
[139.72129822 -6.23812532]
[139.10542297 -10.53634167]
[139.81770325 -14.41670036]
[141.56367493 -17.51298332]
[143.96022034 -19.59221458]
[146.58663940 -20.57205009]
[153.46604919 -33.90147781]
[157.97367859 -48.20816422]
[159.97769165 -63.07369232]
[161.98170471 -77.93922424]
[163.98571777 -92.80474854]
[151.93295288 -107.42135620]
[154.35005188 -125.88945007]
[169.23896790 -136.54006958]
[170.79949951 -151.45867920]
[172.36001587 -166.37728882]
[173.92053223 -181.29588318]
[171.58163452 -187.47982788]
[172.56866455 -193.07649231]
[175.75608826 -196.63310242]
[177.76010132 -211.49862671]
[179.76411438 -226.36415100]
[181.76812744 -241.22967529]
[183.77214050 -256.09521484]
[185.77615356 -270.96072388]
[187.33666992 -285.87933350]
[188.45231628 -300.83779907]
[189.56796265 -315.79623413]
[190.68362427 -330.75469971]
[191.79927063 -345.71316528]
[178.08084106 -352.20693970]
[167.63746643 -363.22058105]
[161.88150024 -377.26455688]
[161.59141541 -392.43954468]
[166.80642700 -406.69326782]
[176.82124329 -418.09799194]
[190.28146362 -425.11132812]
[205.36668396 -426.78482056]
[220.03675842 -422.89208984]
[232.30767822 -413.95962524]
[240.51991272 -401.19546509]
[243.56280518 -386.32586670]
[241.02485657 -371.36181641]
[233.24928284 -358.32705688]
[221.28765869 -348.98443604]
[206.75772095 -344.59750366]
[205.64207458 -329.63906860]
[204.52642822 -314.68060303]
[203.41078186 -299.72213745]
[202.29512024 -284.76370239]
[204.02008057 -282.55401611]
[204.97369385 -279.52792358]
[204.84062195 -275.97579956]
[203.41633606 -272.29666138]
[200.64167786 -268.95672607]
[198.63766479 -254.09120178]
[196.63365173 -239.22566223]
[194.62963867 -224.36013794]
[192.62562561 -209.49461365]
[190.62161255 -194.62908936]
[188.83914185 -179.73536682]
[187.27862549 -164.81675720]
[185.71809387 -149.89816284]
[184.15757751 -134.97955322]
[193.09211731 -127.88446808]
[197.53819275 -117.24736023]
[196.28454590 -105.66624451]
[189.52760315 -96.03065491]
[178.85124207 -90.80073547]
[176.84722900 -75.93521118]
[174.84321594 -61.06967926]
[172.83920288 -46.20415115]
[181.25593567 -58.62021637]
[192.46208191 -68.59128571]
[205.77238464 -75.50762939]
[220.37292480 -78.94630432]
[235.37084961 -78.69704437]
[249.84904480 -74.77507782]
[262.92218018 -67.42024994]
[273.79077148 -57.08229828]
[281.79028320 -44.39340210]
[286.43145752 -30.12948418]
[287.43054199 -15.16279411]
[284.72644043 -0.40854818]
[278.48446655 13.23102474]
[269.08636475 24.92185974]
[257.10681152 33.94905853]
[243.27836609 39.76060104]
[228.44664001 42.00111389]
[213.51860046 40.53358841]
[199.40710449 35.44776154]
[186.97508240 27.05463219]
[176.98274231 15.86744881]
[170.04112244 2.57030892]
[166.57470703 -12.02366257]
[166.79547119 -27.02206612]
[159.91606140 -13.69263649]
[153.43656921 -0.16429123]
[147.36273193 13.55097580]
[141.28890991 27.26624298]
[135.21507263 40.98151016]
[139.27851868 52.37514496]
[134.33055115 63.85126877]
[122.52285767 69.04175568]
[116.24549866 82.66507721]
[109.96813965 96.28839111]
[104.72142029 110.34085846]
[100.53440857 124.74464417]
[96.34739685 139.14842224]
[97.53199768 143.32582092]
[97.34452820 147.26655579]
[96.02787018 150.56834412]
[93.93060303 152.94912720]
[91.45863342 154.27105713]
[86.42172241 168.40010071]
[81.38480377 182.52912903]
[76.34788513 196.65815735]
[79.00190735 212.25515747]
[67.44011688 221.64529419]
[62.40320587 235.77432251]
[57.36628723 249.90335083]
[52.32937241 264.03237915]
[47.29245758 278.16140747]
[42.25553894 292.29043579]
[37.21862411 306.41946411]
[39.87263870 322.01647949]
[28.31085587 331.40661621]
[24.44655037 345.90029907]
[21.78075409 360.66149902]
[26.94232368 375.61706543]
[17.06630516 386.76666260]
[14.40050983 401.52789307]
[11.73471451 416.28909302]
[9.06891918 431.05032349]
[22.88439751 437.06939697]
[34.93902206 446.11276245]
[44.58270264 457.69277954]
[51.29536819 471.18487549]
[54.71500778 485.86148071]
[54.65721130 500.93109131]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 204]
[20 203]
[21 202]
[22 201]
[24 199]
[25 198]
[37 197]
[39 195]
[40 194]
[41 193]
[42 192]
[43 191]
[44 190]
[45 189]
[47 187]
[48 186]
[49 185]
[50 184]
[51 179]
[52 178]
[53 177]
[64 176]
[65 175]
[66 174]
[68 171]
[69 170]
[70 169]
[71 168]
[76 167]
[77 166]
[78 142]
[79 141]
[80 140]
[81 139]
[84 134]
[85 133]
[86 132]
[87 131]
[90 130]
[91 129]
[92 128]
[93 127]
[94 126]
[95 125]
[96 120]
[97 119]
[98 118]
[99 117]
[100 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
