%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCCUUCAGUCCCAAUCCCACCAAUAUCAUCACACGUACCAAUAAUGAAAAUAAACCUCAACGUGGUUUUAAAAACCCCGGAUUCUGGUUACCUAUCGAxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[-47.85707092 363.34826660]
[-42.52930832 377.38732910]
[-38.80695343 391.93463135]
[-36.73681641 406.80725098]
[-36.34493256 421.81811523]
[-37.63623047 436.77847290]
[-40.59447098 451.50021362]
[-45.18244934 465.79812622]
[-51.34246445 479.49243164]
[-58.99705505 492.41091919]
[-68.04994965 504.39111328]
[-78.38730621 515.28234863]
[-89.87911224 524.94769287]
[-102.38084412 533.26550293]
[-115.73529816 540.13128662]
[-129.77450562 545.45861816]
[-144.32192993 549.18054199]
[-159.19459534 551.25024414]
[-174.20549011 551.64166260]
[-189.16581726 550.34991455]
[-203.88743591 547.39123535]
[-218.18521118 542.80285645]
[-231.87934875 536.64239502]
[-244.79760742 528.98742676]
[-256.77752686 519.93420410]
[-267.66845703 509.59649658]
[-277.33343506 498.10440063]
[-285.65090942 485.60241699]
[-292.51626587 472.24777222]
[-297.84320068 458.20840454]
[-301.56466675 443.66088867]
[-303.63394165 428.78814697]
[-304.02490234 413.77725220]
[-302.73272705 398.81695557]
[-299.77359009 384.09542847]
[-295.18478394 369.79776001]
[-289.02392578 356.10382080]
[-281.36856079 343.18579102]
[-272.31497192 331.20614624]
[-261.97695923 320.31552124]
[-250.48457336 310.65087891]
[-237.98233032 302.33380127]
[-224.62747192 295.46881104]
[-210.58795166 290.14233398]
[-196.04031372 286.42126465]
[-181.16751099 284.35247803]
[-166.15660095 283.96194458]
[-151.19635010 285.25457764]
[-136.47489929 288.21414185]
[-122.17739105 292.80340576]
[-108.48363495 298.96463013]
[-95.56583405 306.62039185]
[-83.58644867 315.67434692]
[-73.25978088 304.79501343]
[-62.93311310 293.91567993]
[-52.60644531 283.03634644]
[-42.27977753 272.15701294]
[-31.95310974 261.27767944]
[-21.62644005 250.39834595]
[-11.29977226 239.51901245]
[-8.12636471 222.25933838]
[9.57303238 217.17871094]
[19.14815140 205.63240051]
[28.10884857 193.60302734]
[37.06954575 181.57365417]
[46.03023911 169.54426575]
[54.99093628 157.51489258]
[63.95163345 145.48551941]
[72.91233063 133.45613098]
[80.85900879 120.73410034]
[87.73842621 107.40467072]
[87.27133179 93.43064117]
[98.93214417 85.71591187]
[105.81156158 72.38648224]
[112.69097137 59.05705643]
[116.98509216 44.68484497]
[118.54561615 29.76623917]
[120.10614014 14.84763432]
[121.66666412 -0.07097054]
[123.22718811 -14.98957539]
[110.31574249 -23.05530739]
[102.21964264 -35.87482452]
[100.49939728 -50.87685776]
[105.44300842 -65.07973480]
[116.01934814 -75.68400574]
[130.09272766 -80.62418365]
[131.65325928 -95.54279327]
[133.21377563 -110.46139526]
[126.95416260 -124.99163055]
[135.97355652 -136.84489441]
[137.53407288 -151.76348877]
[139.09460449 -166.68209839]
[140.65512085 -181.60070801]
[126.25576019 -185.96589661]
[112.94286346 -192.97753906]
[101.19766998 -202.38217163]
[91.44477081 -213.83981323]
[84.03672791 -226.93627930]
[79.24134064 -241.19813538]
[77.23194885 -256.10983276]
[78.08119202 -271.13232422]
[81.75837708 -285.72256470]
[88.13057709 -299.35308838]
[96.96743774 -311.53121948]
[107.94950867 -321.81668091]
[120.67979431 -329.83764648]
[134.69812012 -335.30422974]
[149.49769592 -338.01873779]
[164.54356384 -337.88311768]
[179.29180908 -334.90219116]
[193.20930481 -329.18380737]
[205.79290771 -320.93460083]
[216.58776855 -310.45285034]
[225.20364380 -298.11740112]
[231.32905579 -284.37417603]
[234.74261475 -269.72003174]
[235.32089233 -254.68466187]
[233.04298401 -239.81161499]
[227.99125671 -225.63851929]
[220.34829712 -212.67774963]
[210.39042664 -201.39779663]
[198.47760010 -192.20645142]
[185.04045105 -185.43595886]
[170.56472778 -181.33106995]
[155.57373047 -180.04017639]
[154.01319885 -165.12158203]
[152.45268250 -150.20297241]
[150.89216614 -135.28436279]
[157.26339722 -121.82121277]
[148.13238525 -108.90087128]
[146.57185364 -93.98226929]
[145.01133728 -79.06365967]
[157.75775146 -71.31806183]
[165.91069031 -58.75466537]
[167.80813599 -43.83619690]
[163.02059937 -29.51489449]
[152.44686890 -18.64828682]
[138.14579773 -13.42905235]
[136.58526611 1.48955250]
[135.02474976 16.40815735]
[133.46421814 31.32676125]
[131.90370178 46.24536514]
[139.90524292 33.55776215]
[150.58372498 23.02353477]
[163.37898254 15.19528770]
[177.61979675 10.48367691]
[192.55911255 9.13586235]
[207.41326904 11.22254944]
[221.40301514 16.63427353]
[233.79450989 25.08714676]
[243.93769836 36.13774872]
[251.30049133 49.20638657]
[255.49664307 63.60750198]
[256.30606079 78.58564758]
[253.68626404 93.35510254]
[247.77467346 107.14107513]
[238.88142395 119.22039795]
[227.47300720 128.95941162]
[214.14791870 135.84721375]
[199.60514832 139.52249146]
[184.60757446 139.79244995]
[169.94195557 136.64292908]
[156.37760925 130.23913574]
[144.62609863 120.91701508]
[135.30387878 109.16558075]
[128.89997864 95.60128784]
[125.75034332 80.93568420]
[126.02040100 65.93647003]
[119.14099121 79.26589966]
[112.26157379 92.59532928]
[112.72866821 106.56935883]
[101.06785583 114.28408813]
[94.18843842 127.61351776]
[107.38588715 120.48417664]
[122.38342285 120.21232605]
[135.83056641 126.85871124]
[144.72319031 138.93849182]
[147.07464600 153.75303650]
[142.35963440 167.99272156]
[131.63150024 178.47637939]
[117.28691101 182.86190796]
[102.53050995 180.16960144]
[90.65890503 171.00090027]
[84.32424164 157.40414429]
[84.94170380 142.41683960]
[75.98101044 154.44621277]
[67.02031708 166.47558594]
[58.05961609 178.50497437]
[49.09892273 190.53434753]
[40.13822556 202.56372070]
[31.17753029 214.59309387]
[46.00680161 212.33639526]
[58.88223648 220.03205872]
[63.91735840 234.16172791]
[58.81017685 248.26551819]
[45.89562607 255.89535522]
[31.07806778 253.56298828]
[21.13188744 242.33473206]
[20.60490990 227.34225464]
[20.35213089 240.23794556]
[11.65977573 249.21717834]
[-0.42043743 249.84568787]
[-10.74710560 260.72500610]
[-21.07377434 271.60433960]
[-31.40044403 282.48370361]
[-41.72711182 293.36303711]
[-52.05377960 304.24237061]
[-62.38044739 315.12170410]
[-72.70711517 326.00103760]
[-63.04145432 337.49255371]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 209]
[54 208]
[55 207]
[56 206]
[57 205]
[58 204]
[59 203]
[60 202]
[62 199]
[63 191]
[64 190]
[65 189]
[66 188]
[67 187]
[68 186]
[69 185]
[70 173]
[71 172]
[73 170]
[74 169]
[75 168]
[76 142]
[77 141]
[78 140]
[79 139]
[80 138]
[86 132]
[87 131]
[88 130]
[90 128]
[91 127]
[92 126]
[93 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
