%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[88.54813385 656.15155029]
[74.88427734 649.91436768]
[62.10991669 642.01379395]
[50.42652130 632.57446289]
[40.01835251 621.74517822]
[31.04956436 609.69677734]
[23.66160774 596.61926270]
[17.97100067 582.71887207]
[14.06749249 568.21490479]
[12.01264763 553.33605957]
[11.83887291 538.31695557]
[13.54891109 523.39453125]
[17.11578941 508.80407715]
[22.48325539 494.77575684]
[29.56665611 481.53082275]
[38.25427628 469.27813721]
[48.40909576 458.21093750]
[59.87096405 448.50378418]
[72.45910645 440.30975342]
[85.97499847 433.75811768]
[100.20545959 428.95217896]
[114.92607117 425.96774292]
[113.81042480 411.00927734]
[112.69477081 396.05081177]
[111.57912445 381.09237671]
[110.46347809 366.13391113]
[101.50512695 358.00527954]
[100.45323944 345.55227661]
[108.41519928 335.40487671]
[107.52237701 320.43145752]
[99.04125977 308.18728638]
[105.94343567 293.95104980]
[105.05062103 278.97763062]
[104.15780640 264.00424194]
[103.26499176 249.03083801]
[102.37217712 234.05743408]
[91.93333435 219.95077515]
[100.31161499 203.55303955]
[91.64913177 191.43649292]
[98.33859253 177.09907532]
[89.67611694 164.98252869]
[96.36557770 150.64509583]
[95.24992371 135.68664551]
[94.13427734 120.72819519]
[93.01863098 105.76974487]
[90.48256683 102.86444092]
[89.23942566 98.85539246]
[89.75344849 94.34509277]
[92.20240784 90.12106323]
[91.75580597 75.12771606]
[91.30919647 60.13436127]
[90.86259460 45.14101410]
[90.41598511 30.14766312]
[89.96938324 15.15431309]
[86.82525635 9.33829784]
[87.05571747 3.65992522]
[89.73940277 -0.29063010]
[89.73940277 -15.29063034]
[89.73940277 -30.29063034]
[89.73940277 -45.29063034]
[82.00210571 -59.09080124]
[89.73940277 -71.81807709]
[89.73940277 -86.81807709]
[83.01963806 -73.40745544]
[73.09770966 -62.15776825]
[60.63171768 -53.81517029]
[46.44847488 -48.93299103]
[31.48871231 -47.83504868]
[16.74465370 -50.59416580]
[3.19421935 -57.02733994]
[-8.26383781 -66.70788574]
[-16.86954689 -78.99372101]
[-22.05212021 -93.06997681]
[-23.46781921 -108.00302124]
[-21.02274323 -122.80239868]
[-14.87906742 -136.48652649]
[-5.44427776 -148.14776611]
[6.65584850 -157.01269531]
[20.61875343 -162.49333191]
[35.51832962 -164.22613525]
[50.36634064 -162.09620667]
[64.17797089 -156.24481201]
[76.03713989 -147.06004333]
[85.15727997 -135.15109253]
[90.93348694 -121.30784607]
[92.98267365 -106.44334412]
[97.80867004 -120.64579773]
[102.63466644 -134.84825134]
[107.46067047 -149.05070496]
[112.28666687 -163.25315857]
[116.36633301 -177.68771362]
[119.68859100 -192.31518555]
[123.01084900 -206.94264221]
[118.52223206 -222.11375427]
[128.88626099 -232.81124878]
[132.20851135 -247.43870544]
[135.53077698 -262.06616211]
[121.75215912 -268.11151123]
[109.36679077 -276.65545654]
[98.82238007 -287.38916016]
[90.50011444 -299.92456055]
[84.70082855 -313.80853271]
[81.63416290 -328.53918457]
[81.41098022 -343.58401489]
[84.03935242 -358.39913940]
[89.42425537 -372.44903564]
[97.37103271 -385.22576904]
[107.59241486 -396.26751709]
[119.71890259 -405.17507935]
[133.31213379 -411.62646484]
[147.88072205 -415.38848877]
[162.89802551 -416.32513428]
[177.82116699 -414.40252686]
[192.11068726 -409.69021606]
[205.25003052 -402.35848999]
[216.76422119 -392.67242432]
[226.23703003 -380.98214722]
[233.32601929 -367.71026611]
[237.77491760 -353.33654785]
[239.42291260 -338.38061523]
[238.21041870 -323.38305664]
[234.18128967 -308.88607788]
[227.48114014 -295.41372681]
[218.35220337 -283.45297241]
[207.12448120 -273.43627930]
[194.20384216 -265.72564697]
[180.05735779 -260.59988403]
[165.19641113 -258.24426270]
[150.15823364 -258.74389648]
[146.83596802 -244.11645508]
[143.51371765 -229.48898315]
[148.23995972 -215.36412048]
[137.63830566 -203.62037659]
[134.31605530 -188.99291992]
[130.99378967 -174.36546326]
[143.63916016 -182.43357849]
[158.52798462 -180.61059570]
[168.85325623 -169.72994995]
[169.89443970 -154.76612854]
[161.17550659 -142.56037903]
[146.68261719 -138.69302368]
[133.04174805 -144.93215942]
[126.48912048 -158.42716980]
[121.66312408 -144.22471619]
[116.83712769 -130.02226257]
[112.01113129 -115.81980133]
[107.18512726 -101.61734772]
[104.73940277 -86.81807709]
[104.73940277 -71.81807709]
[112.47669983 -59.09080124]
[104.73940277 -45.29063034]
[104.73940277 -30.29063034]
[104.73940277 -15.29063034]
[104.73940277 -0.29063010]
[104.96273041 14.70770741]
[105.40933990 29.70105743]
[105.85594177 44.69440842]
[106.30255127 59.68775558]
[106.74915314 74.68110657]
[107.19576263 89.67445374]
[107.97708130 104.65409088]
[109.09272766 119.61254883]
[110.20838165 134.57099915]
[111.32402802 149.52944946]
[120.06630707 162.71592712]
[113.29705048 175.98342896]
[122.03932953 189.16989136]
[115.27007294 202.43739319]
[124.51634979 211.43011475]
[125.13762665 223.91201782]
[117.34558105 233.16461182]
[118.23839569 248.13801575]
[119.13121033 263.11141968]
[120.02402496 278.08483887]
[120.91684723 293.05822754]
[129.46182251 306.37341309]
[122.49578857 319.53863525]
[123.38860321 334.51205444]
[133.88252258 349.64343262]
[125.42192841 365.01828003]
[126.53757477 379.97671509]
[127.65322876 394.93518066]
[128.76887512 409.89361572]
[129.88452148 424.85208130]
[144.88497925 425.61984253]
[159.67092896 428.26165771]
[174.00915527 432.73583984]
[187.67353821 438.97186279]
[200.44856262 446.87133789]
[212.13275146 456.30972290]
[222.54183960 467.13812256]
[231.51164246 479.18576050]
[238.90069580 492.26266479]
[244.59246826 506.16256714]
[248.49720764 520.66619873]
[250.55329895 535.54492188]
[250.72833252 550.56396484]
[249.01956177 565.48657227]
[245.45390320 580.07727051]
[240.08761597 594.10607910]
[233.00534058 607.35162354]
[224.31874084 619.60504150]
[214.16485596 630.67309570]
[202.70381165 640.38122559]
[190.11634827 648.57629395]
[176.60101318 655.12902832]
[162.37095642 659.93621826]
[147.65058899 662.92187500]
[132.67210388 664.03900146]
[117.67170715 663.27001953]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 184]
[23 183]
[24 182]
[25 181]
[26 180]
[29 178]
[30 177]
[32 175]
[33 174]
[34 173]
[35 172]
[36 171]
[38 168]
[40 166]
[42 164]
[43 163]
[44 162]
[45 161]
[49 160]
[50 159]
[51 158]
[52 157]
[53 156]
[54 155]
[57 154]
[58 153]
[59 152]
[60 151]
[62 149]
[63 148]
[86 147]
[87 146]
[88 145]
[89 144]
[90 143]
[91 135]
[92 134]
[93 133]
[95 131]
[96 130]
[97 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
