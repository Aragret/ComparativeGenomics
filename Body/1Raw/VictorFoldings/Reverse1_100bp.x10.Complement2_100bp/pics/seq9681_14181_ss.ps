%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGGCAGCCUUUACCACUUCCCUCUGAGCUUCAUGAGACUCCGAACAUCCUCCCAUUUUAUCUCUGGGUCAUUUUAACAUUAUUCGUCACGAACUUAAUxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[122.08335114 581.13421631]
[117.42551422 566.75378418]
[117.21497345 551.63934326]
[121.47045135 537.13476562]
[129.81355286 524.52984619]
[141.50241089 514.94537354]
[155.49766541 509.23361206]
[154.15943909 494.29342651]
[152.82119751 479.35324097]
[151.48297119 464.41305542]
[150.14472961 449.47286987]
[148.80650330 434.53268433]
[147.46826172 419.59249878]
[145.24314880 404.75845337]
[142.13903809 390.08316040]
[139.03492737 375.40786743]
[135.93081665 360.73257446]
[132.82670593 346.05725098]
[122.86267853 339.19833374]
[120.15648651 326.99752808]
[126.69136047 315.87734985]
[123.80609131 301.15744019]
[120.92081451 286.43756104]
[116.54941559 280.47830200]
[118.10388184 271.47711182]
[115.43808746 256.71591187]
[112.77228546 241.95468140]
[110.10649109 227.19346619]
[99.54660034 222.87432861]
[92.30805969 213.90107727]
[90.27919769 202.43035889]
[94.07794952 191.29165649]
[102.87009430 183.28948975]
[100.64497375 168.45544434]
[98.41986084 153.62139893]
[95.81696320 151.24290466]
[94.23680115 147.48548889]
[94.31491089 142.84359741]
[96.44200897 138.07676697]
[94.88148499 123.15817261]
[93.32096100 108.23956299]
[91.20633698 93.38936615]
[88.54054260 78.62815094]
[85.87474060 63.86693192]
[83.09913635 49.12596893]
[80.21385956 34.40607834]
[77.32859039 19.68618774]
[73.40760803 34.16464996]
[66.60036469 47.53107834]
[57.19630814 59.21712875]
[45.59530640 68.72589874]
[32.29063797 75.65307617]
[17.84802437 79.70411682]
[2.88157105 80.70675659]
[-11.97233868 78.61837006]
[-26.08211136 73.52775574]
[-38.84778976 65.65136719]
[-49.72657013 55.32411957]
[-58.25588608 42.98512268]
[-64.07305908 29.15904617]
[-66.93074799 14.43377399]
[-66.70744324 -0.56456375]
[-63.41262817 -15.19823074]
[-57.18640900 -28.84499550]
[-48.29352570 -40.92459106]
[-37.11211014 -50.92338943]
[-24.11760139 -58.41623306]
[-9.86252975 -63.08452225]
[5.04697037 -64.72976685]
[19.97694016 -63.28199387]
[34.29254532 -58.80278015]
[47.38508606 -51.48257446]
[58.69785690 -41.63264084]
[67.74983215 -29.67180061]
[74.15612030 -16.10863304]
[77.64434814 -1.51968277]
[80.96660614 -16.14714241]
[84.28886414 -30.77460289]
[87.50213623 -45.42639160]
[90.60624695 -60.10169220]
[89.11422729 -64.17942047]
[89.00807953 -68.12317657]
[90.07551575 -71.51375580]
[91.98990631 -74.04391479]
[94.35669708 -75.54605103]
[98.32879639 -90.01058197]
[102.30089569 -104.47510529]
[106.27298737 -118.93962860]
[110.24508667 -133.40414429]
[114.21717834 -147.86866760]
[117.75685120 -162.44505310]
[113.04285431 -177.54765320]
[123.24645996 -188.39826965]
[126.35057068 -203.07356262]
[129.45468140 -217.74887085]
[132.55879211 -232.42417908]
[135.66290283 -247.09947205]
[121.82790375 -253.02223206]
[109.41438293 -261.53051758]
[98.89949036 -272.29727173]
[90.68737793 -284.90866089]
[85.09370422 -298.87997437]
[82.33348083 -313.67413330]
[82.51279449 -328.72253418]
[85.62475586 -343.44671631]
[91.54975128 -357.28076172]
[100.06003571 -369.69290161]
[110.82849884 -380.20605469]
[123.44123840 -388.41613770]
[137.41343689 -394.00753784]
[152.20805359 -396.76538086]
[167.25640869 -396.58361816]
[181.98010254 -393.46926880]
[195.81318665 -387.54205322]
[208.22395325 -379.02975464]
[218.73535156 -368.25958252]
[226.94338989 -355.64550781]
[232.53253174 -341.67242432]
[235.28796387 -326.87734985]
[235.10379028 -311.82901001]
[231.98706055 -297.10583496]
[226.05758667 -283.27371216]
[217.54327393 -270.86431885]
[206.77140808 -260.35464478]
[194.15602112 -252.14866638]
[180.18200684 -246.56178284]
[165.38650513 -243.80874634]
[150.33821106 -243.99536133]
[147.23410034 -229.32006836]
[144.12998962 -214.64476013]
[141.02587891 -199.96945190]
[137.92176819 -185.29415894]
[142.85778809 -171.24122620]
[132.43215942 -159.34094238]
[133.84643555 -156.92062378]
[134.38720703 -153.79425049]
[133.78076172 -150.29173279]
[131.87771606 -146.83587646]
[128.68170166 -143.89657593]
[124.70960999 -129.43205261]
[120.73751068 -114.96752930]
[116.76541901 -100.50300598]
[112.79331970 -86.03848267]
[108.82122803 -71.57395935]
[105.28155518 -56.99758148]
[102.17744446 -42.32228088]
[103.86871338 -35.12773895]
[98.91632843 -27.45234299]
[95.59406281 -12.82488346]
[92.27180481 1.80257678]
[92.04847717 16.80091476]
[94.93375397 31.52080536]
[97.81902313 46.24069595]
[102.19042969 52.19994354]
[100.63596344 61.20113754]
[103.30175781 75.96235657]
[105.96755219 90.72357178]
[116.53439331 80.07735443]
[131.46202087 81.54910278]
[139.74633789 94.05390930]
[135.28045654 108.37368011]
[121.35646820 113.95242310]
[108.23956299 106.67903900]
[109.80008698 121.59764862]
[111.36061096 136.51625061]
[113.25389862 151.39628601]
[115.47901917 166.23033142]
[117.70413971 181.06437683]
[133.35781860 191.73565674]
[136.19187927 210.14437866]
[124.86771393 224.52767944]
[127.53350830 239.28889465]
[130.19929504 254.05010986]
[132.86509705 268.81130981]
[135.64070129 283.55227661]
[138.52598572 298.27218628]
[141.41125488 312.99206543]
[153.83267212 326.58581543]
[147.50201416 342.95315552]
[150.60612488 357.62844849]
[153.71023560 372.30374146]
[156.81434631 386.97906494]
[159.91845703 401.65435791]
[167.24319458 388.56436157]
[180.81442261 382.17517090]
[195.57040405 384.86978149]
[206.00752258 395.64321899]
[208.23298645 410.47720337]
[201.41676331 423.83905029]
[188.10113525 430.74511719]
[173.25248718 428.61962891]
[162.40844727 418.25427246]
[163.74668884 433.19445801]
[165.08491516 448.13464355]
[166.42315674 463.07482910]
[167.76138306 478.01501465]
[169.09962463 492.95520020]
[170.43785095 507.89538574]
[185.22541809 511.02899170]
[198.43154907 518.38354492]
[208.88198853 529.30505371]
[215.64746094 542.82244873]
[218.12641907 557.73370361]
[216.09840393 572.71301270]
[209.74375916 586.42834473]
[199.62754822 597.66015625]
[186.64927673 605.40972900]
[171.96296692 608.98797607]
[156.87452698 608.07672119]
[142.72560120 602.75701904]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 198]
[8 197]
[9 196]
[10 195]
[11 194]
[12 193]
[13 192]
[14 183]
[15 182]
[16 181]
[17 180]
[18 179]
[21 177]
[22 176]
[23 175]
[25 174]
[26 173]
[27 172]
[28 171]
[33 168]
[34 167]
[35 166]
[39 165]
[40 164]
[41 163]
[42 157]
[43 156]
[44 155]
[45 153]
[46 152]
[47 151]
[76 150]
[77 149]
[78 148]
[79 146]
[80 145]
[85 144]
[86 143]
[87 142]
[88 141]
[89 140]
[90 139]
[91 134]
[93 132]
[94 131]
[95 130]
[96 129]
[97 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
