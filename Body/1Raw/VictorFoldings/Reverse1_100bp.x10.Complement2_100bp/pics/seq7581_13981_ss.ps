%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[169.93215942 655.40081787]
[156.15197754 661.54650879]
[141.25057983 663.91522217]
[126.24397278 662.34545898]
[112.15531921 656.94433594]
[99.94522095 648.08001709]
[90.44617462 636.35693359]
[84.30583954 622.57440186]
[81.94287872 607.67211914]
[83.51840210 592.66607666]
[88.92498779 578.57952881]
[97.79399872 566.37286377]
[109.52074432 556.87829590]
[123.30566406 550.74328613]
[138.20889282 548.38610840]
[139.76940918 533.46752930]
[141.32992554 518.54888916]
[142.89045715 503.63027954]
[144.00610352 488.67184448]
[144.67588806 473.68679810]
[145.34567261 458.70175171]
[146.01545715 443.71673584]
[146.68524170 428.73168945]
[139.52395630 415.67163086]
[147.86975098 402.23071289]
[148.53953552 387.24566650]
[149.20932007 372.26062012]
[141.28038025 363.12506104]
[141.71575928 350.63528442]
[150.82711792 341.50592041]
[151.71994019 326.53250122]
[152.61276245 311.55908203]
[153.50556946 296.58569336]
[154.39839172 281.61227417]
[155.29119873 266.63888550]
[153.06608582 251.80484009]
[147.81936646 237.75236511]
[142.36401367 223.77957153]
[136.70123291 209.88954163]
[131.03843689 195.99951172]
[125.37565613 182.10948181]
[119.71286774 168.21945190]
[114.05007935 154.32943726]
[108.38729095 140.43940735]
[102.72450256 126.54937744]
[97.06172180 112.65935516]
[90.98788452 98.94408417]
[78.04848480 89.84010315]
[79.52892303 75.01925659]
[66.58951569 65.91527557]
[68.06995392 51.09442902]
[61.59046173 37.56608200]
[55.11096573 24.03773689]
[48.63146973 10.50939083]
[41.75205612 -2.82003856]
[34.47882843 -15.93873215]
[27.20559883 -29.05742645]
[19.73785591 -42.06637955]
[12.07725906 -54.96270752]
[4.41666222 -67.85903168]
[-3.24393535 -80.75536346]
[-10.90453243 -93.65168762]
[-24.60455322 -101.56496429]
[-24.45227051 -116.45879364]
[-38.25768661 -110.53718567]
[-52.71794128 -106.46826172]
[-67.58559418 -104.32164764]
[-82.60623932 -104.13407898]
[-97.52285767 -105.90875244]
[-112.08020782 -109.61531830]
[-126.02919006 -115.19034576]
[-139.13111877 -122.53843689]
[-151.16180420 -131.53385925]
[-161.91539001 -142.02267456]
[-171.20787048 -153.82543945]
[-178.88021851 -166.74015808]
[-184.80117798 -180.54585266]
[-188.86940002 -195.00630188]
[-191.01530457 -209.87405396]
[-191.20216370 -224.89471436]
[-189.42677307 -239.81124878]
[-185.71951294 -254.36840820]
[-180.14382935 -268.31713867]
[-172.79512024 -281.41870117]
[-163.79911804 -293.44897461]
[-153.30978394 -304.20205688]
[-141.50659180 -313.49395752]
[-128.59150696 -321.16571045]
[-114.78552246 -327.08599854]
[-100.32489014 -331.15356445]
[-85.45703125 -333.29873657]
[-70.43636322 -333.48489380]
[-55.51991653 -331.70880127]
[-40.96292114 -328.00082397]
[-27.01446915 -322.42446899]
[-13.91323853 -315.07513428]
[-1.88340688 -306.07858276]
[8.86917877 -295.58874512]
[18.16052818 -283.78509521]
[25.83165359 -270.86965942]
[31.75129128 -257.06338501]
[35.81814957 -242.60255432]
[37.96263885 -227.73458862]
[38.14806747 -212.71391296]
[36.37125397 -197.79754639]
[32.66261292 -183.24073792]
[27.08559418 -169.29254150]
[19.73563194 -156.19166565]
[10.73849583 -144.16226196]
[0.24813530 -133.41017151]
[-11.55594444 -124.11939240]
[1.59614003 -117.12854004]
[1.99179399 -101.31228638]
[9.65239143 -88.41595459]
[17.31298828 -75.51963043]
[24.97358704 -62.62330246]
[32.63418198 -49.72697830]
[36.95906830 -47.70104218]
[40.05718994 -42.93672943]
[40.32429123 -36.33065796]
[47.59752274 -23.21196175]
[54.87075043 -10.09326839]
[57.52517700 -9.19206619]
[59.98256302 -7.18511057]
[61.81995392 -4.14218473]
[62.64744568 -0.28475288]
[62.15981674 4.02989483]
[68.63931274 17.55824089]
[75.11880493 31.08658600]
[81.59830475 44.61493301]
[94.07424927 52.75127411]
[93.05726624 68.53975677]
[105.53321075 76.67610168]
[104.51622772 92.46459198]
[107.29473114 93.71736145]
[109.67881012 96.00879669]
[111.28288269 99.19477081]
[111.78001404 102.99069977]
[110.95174408 106.99656677]
[116.61453247 120.88658905]
[122.27732086 134.77661133]
[127.94010925 148.66664124]
[133.60289001 162.55667114]
[139.26568604 176.44670105]
[144.92846680 190.33673096]
[150.59124756 204.22676086]
[156.25404358 218.11677551]
[161.23388672 222.46565247]
[163.00416565 227.86593628]
[161.87184143 232.50564575]
[167.11856079 246.55812073]
[168.62637329 231.63409424]
[173.16314697 217.33662415]
[180.53596497 204.27363586]
[190.43133545 193.00057983]
[202.42849731 183.99679565]
[216.01731873 177.64512634]
[230.62002563 174.21565247]
[245.61566162 173.85418701]
[260.36663818 176.57609558]
[274.24572754 182.26565552]
[286.66275024 190.68093872]
[297.08978271 201.46412659]
[305.08343506 214.15669250]
[310.30383301 228.21897888]
[312.52896118 243.05302429]
[311.66424561 258.02807617]
[307.74642944 272.50738525]
[300.94210815 285.87530518]
[291.54061890 297.56341553]
[279.94168091 307.07473755]
[266.63851929 314.00482178]
[252.19680786 318.05902100]
[237.23057556 319.06491089]
[222.37620544 316.97979736]
[208.26531982 311.89227295]
[195.49790955 304.01867676]
[184.61688232 293.69378662]
[176.08485413 281.35665894]
[170.26461792 267.53170776]
[169.37179565 282.50509644]
[168.47897339 297.47851562]
[167.58616638 312.45190430]
[166.69334412 327.42532349]
[165.80053711 342.39871216]
[174.42202759 358.66989136]
[164.19436646 372.93041992]
[163.52458191 387.91543579]
[162.85479736 402.90048218]
[169.96817017 417.03237915]
[161.67028809 429.40145874]
[161.00050354 444.38650513]
[160.33071899 459.37155151]
[159.66093445 474.35659790]
[158.99114990 489.34161377]
[161.12806702 493.12152100]
[161.87580872 496.99517822]
[161.37548828 500.51443481]
[159.89926147 503.32287598]
[157.80906677 505.19082642]
[156.24853516 520.10943604]
[154.68801880 535.02801514]
[153.12748718 549.94665527]
[167.22030640 555.33691406]
[179.43725586 564.19177246]
[188.94534302 575.90753174]
[195.09632874 589.68530273]
[197.47079468 604.58581543]
[195.90686035 619.59301758]
[190.51115417 633.68371582]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 203]
[16 202]
[17 201]
[18 200]
[19 195]
[20 194]
[21 193]
[22 192]
[23 191]
[25 189]
[26 188]
[27 187]
[30 185]
[31 184]
[32 183]
[33 182]
[34 181]
[35 180]
[36 151]
[37 150]
[38 147]
[39 146]
[40 145]
[41 144]
[42 143]
[43 142]
[44 141]
[45 140]
[46 139]
[47 134]
[49 132]
[51 130]
[52 129]
[53 128]
[54 127]
[55 122]
[56 121]
[57 120]
[58 117]
[59 116]
[60 115]
[61 114]
[62 113]
[64 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
