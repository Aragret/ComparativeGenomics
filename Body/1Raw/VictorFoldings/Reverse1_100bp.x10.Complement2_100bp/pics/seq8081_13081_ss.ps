%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[-11.26063347 406.25009155]
[-3.51527929 419.12902832]
[2.22396517 433.01855469]
[5.82888269 447.60833740]
[7.21893787 462.57247925]
[6.36307669 477.57666016]
[3.28041959 492.28567505]
[-1.96016622 506.37091064]
[-9.24160385 519.51770020]
[-18.40122414 531.43237305]
[-29.23439598 541.84869385]
[-41.49910355 550.53399658]
[-54.92134857 557.29425049]
[-69.20127106 561.97839355]
[-84.01985931 564.48187256]
[-99.04605103 564.74865723]
[-113.94416046 562.77276611]
[-128.38136292 558.59844971]
[-142.03511047 552.31890869]
[-154.60040283 544.07446289]
[-165.79649353 534.04919434]
[-175.37327576 522.46722412]
[-183.11679077 509.58715820]
[-188.85404968 495.69683838]
[-192.45689392 481.10653687]
[-193.84481812 466.14218140]
[-192.98681641 451.13812256]
[-189.90206909 436.42956543]
[-184.65948486 422.34509277]
[-177.37617493 409.19931030]
[-168.21485901 397.28598022]
[-157.38020325 386.87118530]
[-145.11425781 378.18762207]
[-131.69104004 371.42926025]
[-117.41045380 366.74713135]
[-102.59150696 364.24581909]
[-87.56527710 363.98117065]
[-72.66744995 365.95913696]
[-58.23084641 370.13552856]
[-44.57798386 376.41699219]
[-36.34917831 363.87561035]
[-28.12036896 351.33419800]
[-20.84713936 338.21551514]
[-14.56977940 324.59219360]
[-8.29241848 310.96887207]
[-13.67515850 297.12829590]
[-7.50309134 283.22290039]
[7.05068064 277.67083740]
[13.32804108 264.04751587]
[9.43467617 252.59463501]
[14.55295467 241.19345093]
[26.43661880 236.17933655]
[32.91611481 222.65098572]
[39.39561081 209.12265015]
[45.87510681 195.59429932]
[52.35460281 182.06594849]
[58.83409882 168.53761292]
[57.35366058 153.71676636]
[70.29306030 144.61277771]
[76.77256012 131.08444214]
[83.25205231 117.55609131]
[89.73155212 104.02774811]
[74.93232727 106.47376251]
[63.69107437 96.54228210]
[64.29442596 81.55442047]
[76.29761505 72.55867767]
[90.85233307 76.18637085]
[97.22939301 89.76165009]
[104.69713593 76.75270081]
[112.16487885 63.74374771]
[119.63262177 50.73479462]
[119.15959930 32.32670593]
[134.66787720 24.11329651]
[141.94111633 10.99460220]
[148.82052612 -2.33482718]
[155.30001831 -15.86317253]
[161.77951050 -29.39151764]
[150.34927368 -39.22944260]
[141.86172485 -51.68122864]
[136.89047241 -65.89469147]
[135.76872253 -80.89897156]
[138.56695557 -95.67082214]
[145.08850098 -109.20442200]
[154.88343811 -120.57982635]
[167.27949524 -129.02554321]
[181.42829895 -133.97082520]
[196.36338806 -135.08422852]
[211.06626892 -132.29583740]
[217.54576111 -145.82418823]
[224.02525330 -159.35252380]
[230.50474548 -172.88087463]
[234.15283203 -187.43049622]
[234.82261658 -202.41552734]
[235.49240112 -217.40057373]
[225.10583496 -229.00906372]
[225.99856567 -244.19648743]
[237.12950134 -254.02694702]
[237.79928589 -269.01199341]
[238.46907043 -283.99700928]
[224.56338501 -290.07949829]
[213.79670715 -300.77731323]
[207.62516785 -314.64367676]
[206.88337708 -329.80331421]
[211.67169189 -344.20596313]
[221.34251404 -355.90380859]
[234.58795166 -363.31481934]
[249.61665344 -365.43667603]
[264.39611816 -361.98248291]
[276.92758179 -353.41931152]
[285.51620483 -340.90533447]
[289.00045776 -326.13293457]
[286.90917969 -311.09991455]
[279.52514648 -297.83944702]
[267.84698486 -288.14483643]
[253.45410156 -283.32723999]
[252.78431702 -268.34219360]
[252.11453247 -253.35716248]
[262.32403564 -242.57284546]
[261.85824585 -227.36634827]
[250.47744751 -216.73078918]
[249.80766296 -201.74574280]
[249.13787842 -186.76071167]
[256.35961914 -199.90782166]
[266.20526123 -211.22431946]
[278.22692871 -220.19538879]
[291.87765503 -226.41290283]
[306.53646851 -229.59399414]
[321.53646851 -229.59397888]
[336.19525146 -226.41281128]
[349.84594727 -220.19525146]
[361.86758423 -211.22415161]
[371.71319580 -199.90760803]
[378.93487549 -186.76048279]
[383.20413208 -172.38085938]
[384.32669067 -157.42292786]
[382.25152588 -142.56715393]
[377.07302856 -128.48941040]
[369.02676392 -115.83010864]
[358.47882080 -105.16518402]
[345.90902710 -96.97980499]
[331.88925171 -91.64636230]
[317.05728149 -89.40748596]
[302.08786011 -90.36502838]
[287.66204834 -94.47543335]
[274.43606567 -101.55169678]
[263.01162720 -111.27190399]
[253.90849304 -123.19384766]
[247.54075623 -136.77516174]
[244.19813538 -151.39797974]
[244.03309631 -166.40138245]
[237.55360413 -152.87303162]
[231.07411194 -139.34468079]
[224.59460449 -125.81634521]
[235.98315430 -116.10806274]
[244.47708130 -103.77316284]
[249.49247742 -89.64906311]
[250.68179321 -74.69654083]
[247.95794678 -59.93438339]
[241.50071716 -46.36997223]
[231.74485779 -34.93052673]
[219.35081482 -26.39973068]
[205.16004944 -21.36404991]
[190.13789368 -20.17240715]
[175.30786133 -22.91202164]
[168.82836914 -9.38367653]
[162.34887695 4.14466858]
[163.15206909 6.83037424]
[162.93981934 9.99605942]
[161.52397156 13.25654793]
[158.85916138 16.16572952]
[155.05981445 18.26783180]
[147.78657532 31.38652611]
[150.81733704 43.09725189]
[144.86524963 54.08617401]
[132.64157104 58.20253754]
[125.17382812 71.21148682]
[117.70608521 84.22044373]
[110.23834991 97.22939301]
[103.25989532 110.50724030]
[96.78039551 124.03558350]
[90.30090332 137.56393433]
[83.82140350 151.09226990]
[84.83838654 166.88076782]
[72.36244202 175.01710510]
[65.88294983 188.54545593]
[59.40345001 202.07379150]
[52.92395401 215.60214233]
[46.44445801 229.13049316]
[39.96496201 242.65882874]
[41.80580139 260.98074341]
[26.95135689 270.32485962]
[20.67399788 283.94818115]
[25.90954971 298.61880493]
[19.34934425 312.34533691]
[5.33089733 317.24624634]
[-0.94646341 330.86956787]
[-7.22382402 344.49285889]
[5.88190413 337.19631958]
[20.88129616 337.33132935]
[33.85354614 344.86264038]
[41.40774155 357.82159424]
[41.56923294 372.82070923]
[34.29580307 385.93930054]
[21.48871613 393.74816895]
[6.49570751 394.20611572]
[-6.76408339 387.19342041]
[-14.82457924 374.54318237]
[-15.57896900 359.56301880]
[-23.80777740 372.10440063]
[-32.03658676 384.64581299]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 210]
[41 209]
[42 208]
[43 197]
[44 196]
[45 195]
[48 192]
[49 191]
[52 189]
[53 188]
[54 187]
[55 186]
[56 185]
[57 184]
[59 182]
[60 181]
[61 180]
[62 179]
[68 178]
[69 177]
[70 176]
[71 175]
[73 172]
[74 171]
[75 166]
[76 165]
[77 164]
[88 153]
[89 152]
[90 151]
[91 150]
[92 122]
[93 121]
[94 120]
[97 117]
[98 116]
[99 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
