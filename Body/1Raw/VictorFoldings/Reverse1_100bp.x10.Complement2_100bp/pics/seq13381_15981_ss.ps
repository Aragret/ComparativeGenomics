%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACGAUUACGAUCCGACGGUUACCACUCCCUCCAACUUCACUCUCCAUACCAAAACUCAUCAGGAGGAUAAAAAGCUUAUAGAACAAGUAACAAUUCCAxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[162.70690918 560.50042725]
[152.00317383 571.06781006]
[139.58445740 579.55401611]
[125.84995270 585.68615723]
[111.24118042 589.26715088]
[96.22775269 590.18188477]
[81.29228973 588.40100098]
[66.91490173 583.98168945]
[53.55775833 577.06597900]
[41.65024185 567.87628174]
[31.57513046 556.70794678]
[23.65629387 543.91998291]
[18.14829254 529.92352295]
[15.22818470 515.16839600]
[14.98984051 500.12902832]
[17.44091988 485.28881836]
[22.50263214 471.12481689]
[30.01226425 458.09234619]
[39.72841263 446.61035156]
[51.33874512 437.04791260]
[64.47003174 429.71246338]
[78.70016479 424.83975220]
[93.57169342 422.58645630]
[108.60656738 423.02502441]
[111.71067810 408.34970093]
[114.81478882 393.67440796]
[117.91889954 378.99911499]
[121.02301025 364.32379150]
[123.02702332 349.45828247]
[123.91983795 334.48486328]
[124.81265259 319.51147461]
[117.84661102 306.34622192]
[126.39159393 293.03103638]
[127.28440857 278.05764771]
[128.17723083 263.08422852]
[126.95024872 248.13450623]
[123.62799072 233.50704956]
[120.30573273 218.87957764]
[116.98347473 204.25212097]
[106.91842651 197.54232788]
[104.03088379 185.38313293]
[110.39947510 174.16690063]
[107.29536438 159.49159241]
[103.86430359 144.88926697]
[100.10800171 130.36721802]
[96.35169983 115.84515381]
[86.69087219 109.34056854]
[83.85837555 98.04374695]
[89.30743408 87.75058746]
[85.76776123 73.17421722]
[74.99243164 61.58961487]
[79.50785828 47.39595032]
[75.96818542 32.81957245]
[72.42851257 18.24319839]
[68.88884735 3.66682339]
[54.24134445 -0.73748833]
[43.83373642 -11.80900669]
[40.38814926 -26.50575066]
[44.73245239 -40.85786057]
[55.60407257 -51.03987503]
[52.06439972 -65.61624908]
[48.52473068 -80.19262695]
[36.29199600 -85.82954407]
[29.63645744 -97.31493378]
[30.79402351 -110.34344482]
[39.11890411 -120.17837524]
[35.79664612 -134.80583191]
[32.47438431 -149.43330383]
[29.15212631 -164.06076050]
[25.82986641 -178.68821716]
[12.74008179 -187.13186646]
[9.57921219 -202.01351929]
[17.70961380 -214.44059753]
[14.38735390 -229.06805420]
[11.06509399 -243.69551086]
[0.46344054 -255.43925476]
[5.18969059 -269.56411743]
[-9.79262447 -268.40304565]
[-24.78432655 -269.43588257]
[-39.46586609 -272.64059448]
[-53.52430344 -277.94891357]
[-66.65998840 -285.24765015]
[-78.59292603 -294.38128662]
[-89.06876373 -305.15505981]
[-97.86421967 -317.33938599]
[-104.79180908 -330.67456055]
[-109.70386505 -344.87628174]
[-112.49570465 -359.64190674]
[-113.10780334 -374.65667725]
[-111.52711487 -389.60055542]
[-107.78733826 -404.15499878]
[-101.96819305 -418.00979614]
[-94.19369507 -430.86962891]
[-84.62957764 -442.46035767]
[-73.47969055 -452.53497314]
[-60.98169708 -460.87872314]
[-47.40198898 -467.31375122]
[-33.03002548 -471.70288086]
[-18.17214203 -473.95257568]
[-3.14503312 -474.01486206]
[11.73099422 -471.88845825]
[26.13885880 -467.61862183]
[39.77145386 -461.29644775]
[52.33819962 -453.05661011]
[63.57123947 -443.07479858]
[73.23113251 -431.56375122]
[81.11199188 -418.76882935]
[87.04581451 -404.96273804]
[90.90614319 -390.43981934]
[92.61067963 -375.50955200]
[92.12310028 -360.49023438]
[89.45378876 -345.70196533]
[84.65965271 -331.45999146]
[77.84287262 -318.06784058]
[69.14875031 -305.81100464]
[58.76259995 -294.95074463]
[46.90580368 -285.71850586]
[33.83109283 -278.31106567]
[19.81715012 -272.88638306]
[30.18117523 -262.18890381]
[25.69255447 -247.01777649]
[29.01481438 -232.39031982]
[32.33707428 -217.76286316]
[45.03787613 -210.06706238]
[48.61549377 -195.28007507]
[40.45732498 -182.01048279]
[43.77958679 -167.38301086]
[47.10184479 -152.75555420]
[50.42410660 -138.12809753]
[53.74636459 -123.50063324]
[68.34685516 -115.15412140]
[72.47453308 -98.50247955]
[63.10110474 -83.73229980]
[66.64077759 -69.15592194]
[70.18045044 -54.57954788]
[84.51103210 -50.51753998]
[94.95378113 -39.75626373]
[98.63226318 -25.11607552]
[94.46147156 -10.50439358]
[83.46521759 0.12715094]
[87.00489044 14.70352650]
[90.54456329 29.27990150]
[94.08423615 43.85627747]
[104.60638428 54.39827728]
[100.34413147 69.63454437]
[103.88380432 84.21091461]
[115.77153015 96.04553986]
[110.87375641 112.08885193]
[114.63005829 126.61091614]
[118.38636017 141.13298035]
[122.04643250 144.85466003]
[123.74325562 149.17601013]
[123.57717896 153.24877930]
[121.97066498 156.38748169]
[125.07477570 171.06278992]
[137.69720459 184.47009277]
[131.61093140 200.92987061]
[134.93319702 215.55732727]
[138.25544739 230.18478394]
[141.57771301 244.81224060]
[145.36677551 230.29869080]
[153.21434021 217.51527405]
[164.44149780 207.56788635]
[178.07701111 201.31704712]
[192.94125366 199.30355835]
[207.74833679 201.70156860]
[221.21728516 208.30364990]
[232.18289185 218.53865051]
[239.69654846 231.52114868]
[243.10823059 246.12800598]
[242.12280273 261.09561157]
[236.82550049 275.12908936]
[227.67460632 287.01440430]
[215.46176147 295.72338867]
[201.24349976 300.50262451]
[186.24983215 300.93862915]
[171.77787781 296.99368286]
[159.07958984 289.00909424]
[149.25350952 277.67559814]
[143.15063477 263.97705078]
[142.25781250 278.95046997]
[141.36500549 293.92385864]
[148.26718140 308.16009521]
[139.78605652 320.40426636]
[138.89324951 335.37768555]
[138.00042725 350.35107422]
[147.55497742 338.78775024]
[161.57632446 333.45840454]
[176.39929199 335.75607300]
[188.14921570 345.08020020]
[193.75469971 358.99346924]
[191.75045776 373.85894775]
[182.66041565 385.79089355]
[168.86067200 391.67028809]
[153.95846558 389.96026611]
[141.84918213 381.10784912]
[135.69830322 367.42791748]
[132.59420776 382.10321045]
[129.49009705 396.77850342]
[126.38597870 411.45382690]
[123.28186798 426.12911987]
[137.20660400 431.81610107]
[149.89199829 439.89822388]
[160.93026733 450.11566162]
[169.96658325 462.14001465]
[176.71046448 475.58468628]
[180.94511414 490.01754761]
[182.53442383 504.97463989]
[181.42727661 519.97509766]
[177.65930176 534.53674316]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 201]
[25 200]
[26 199]
[27 198]
[28 197]
[29 186]
[30 185]
[31 184]
[33 182]
[34 181]
[35 180]
[36 160]
[37 159]
[38 158]
[39 157]
[42 155]
[43 154]
[44 150]
[45 149]
[46 148]
[49 146]
[50 145]
[52 143]
[53 142]
[54 141]
[55 140]
[60 135]
[61 134]
[62 133]
[66 130]
[67 129]
[68 128]
[69 127]
[70 126]
[73 123]
[74 122]
[75 121]
[77 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
