%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUACUCUCAUUAUCUAUCCCGAGUCCGCAAACACAUACUAUACAAACGCCAAAGCUACUACACCAGAAACCUCAUCUUUGGACACUCCUUUCCAUAAxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[162.24246216 404.93487549]
[171.28846741 392.92065430]
[182.28341675 382.65994263]
[194.89318848 374.46453857]
[189.02421570 360.66036987]
[176.92402649 351.97503662]
[178.64498901 336.24771118]
[172.77603149 322.44354248]
[166.90705872 308.63937378]
[161.03810120 294.83520508]
[155.06654358 281.07510376]
[148.99270630 267.35983276]
[142.91886902 253.64456177]
[136.84504700 239.92929077]
[132.38771057 254.25172424]
[120.43243408 263.31106567]
[105.43824005 263.72836304]
[92.99758911 255.34802246]
[87.75053406 241.29566956]
[91.65410614 226.81251526]
[103.25235748 217.30038452]
[118.21942902 216.30708313]
[130.97373962 224.20397949]
[126.57274628 209.86413574]
[121.60509491 204.39199829]
[122.21468353 195.27793884]
[118.02767181 180.87414551]
[113.62667847 166.53430176]
[109.01266479 152.26156616]
[104.39865875 137.98884583]
[99.78464508 123.71610260]
[95.17063904 109.44337463]
[89.92391968 95.39089966]
[84.05496216 81.58672333]
[78.18599701 67.78254700]
[72.31703949 53.97837067]
[66.44807434 40.17419434]
[60.57911682 26.37001610]
[54.71015549 12.56583881]
[53.87604523 27.54262924]
[49.88470078 42.00185394]
[42.91770554 55.28571701]
[33.29200745 66.78988647]
[21.44550896 75.99099731]
[7.91715240 82.47047424]
[-6.67761564 85.93352509]
[-21.67482948 86.22261810]
[-36.39221573 83.32460022]
[-50.16023254 77.37130737]
[-62.35252762 68.63357544]
[-72.41442871 57.50891113]
[-79.88819122 44.50341797]
[-84.43380737 30.20875549]
[-85.84448242 15.27523518]
[-84.05603790 0.38223493]
[-79.14984131 -13.79271507]
[-71.34908295 -26.60474777]
[-61.00865555 -37.47100449]
[-48.59897232 -45.89714050]
[-34.68459320 -51.49982071]
[-19.89852715 -54.02416229]
[-4.91344643 -53.35532761]
[9.58893108 -49.52374268]
[22.94884300 -42.70371628]
[34.55850220 -33.20551682]
[43.88974762 -21.46124649]
[50.51955795 -8.00112534]
[50.51955795 -23.00112534]
[40.63763428 -29.61052895]
[35.22858429 -40.06246948]
[35.53342056 -51.70725250]
[41.36077881 -61.65499878]
[51.16313171 -67.49282074]
[51.60973740 -82.48616791]
[48.73722076 -91.15718079]
[52.17625809 -97.69895935]
[52.84604263 -112.68399811]
[53.51582718 -127.66903687]
[54.18561172 -142.65406799]
[54.85540009 -157.63911438]
[55.52518463 -172.62414551]
[56.19496918 -187.60919189]
[53.78792191 -192.24095154]
[53.43365860 -196.86996460]
[54.78737259 -200.71476746]
[57.24408340 -203.24398804]
[58.58231735 -218.18417358]
[59.92055130 -233.12435913]
[61.25878525 -248.06454468]
[61.81699753 -263.05413818]
[61.59366989 -278.05249023]
[61.37034225 -293.05081177]
[61.14701462 -308.04916382]
[53.20510483 -321.73260498]
[60.75205994 -334.57366943]
[60.52873230 -349.57199097]
[46.12902832 -354.25466919]
[34.03149414 -363.36114502]
[25.54838371 -375.90371704]
[21.59987640 -390.52178955]
[22.61428070 -405.62973022]
[28.48155785 -419.58871460]
[38.56527328 -430.88461304]
[51.77161789 -438.29211426]
[66.66806793 -441.00772095]
[81.63877106 -438.73684692]
[95.05980682 -431.72583008]
[105.47537231 -420.73516846]
[111.75566101 -406.95703125]
[113.21943665 -391.88601685]
[109.70791626 -377.15686035]
[101.60200500 -364.36730957]
[89.78096771 -354.90463257]
[75.52706909 -349.79531860]
[75.75039673 -334.79699707]
[83.67633057 -322.18634033]
[76.14534760 -308.27249146]
[76.36867523 -293.27413940]
[76.59200287 -278.27581787]
[76.81533051 -263.27746582]
[87.19968414 -274.10177612]
[102.09819031 -275.84368896]
[114.69947052 -267.70687866]
[119.24237823 -253.41136169]
[113.64996338 -239.49285889]
[100.47900391 -232.31471252]
[85.75107574 -235.15869141]
[76.19896698 -246.72630310]
[74.86073303 -231.78611755]
[73.52249908 -216.84593201]
[72.18426514 -201.90574646]
[71.18000793 -186.93940735]
[70.51022339 -171.95436096]
[69.84043884 -156.96932983]
[69.17065430 -141.98428345]
[68.50086975 -126.99924469]
[67.83108521 -112.01420593]
[67.16130066 -97.02916718]
[66.60308838 -82.03955841]
[66.15647888 -67.04621124]
[79.48899078 -54.50189590]
[79.41706085 -35.87643433]
[65.51955414 -23.00112534]
[65.51955414 -8.00112534]
[68.51433563 6.69687843]
[74.38329315 20.50105476]
[80.25225067 34.30523300]
[86.12121582 48.10940933]
[91.99017334 61.91358566]
[97.85913849 75.71776581]
[103.72809601 89.52194214]
[110.32897186 76.05240631]
[124.47565460 71.06526947]
[138.06427002 77.41738892]
[143.31065369 91.46998596]
[137.20942688 105.17308807]
[123.25566101 110.67694855]
[109.44337463 104.82936096]
[114.05738068 119.10209656]
[118.67138672 133.37483215]
[123.28540039 147.64756775]
[127.89940643 161.92030334]
[132.54200745 166.62750244]
[133.90573120 172.14450073]
[132.43145752 176.68713379]
[136.61846924 191.09092712]
[140.91259766 205.46313477]
[145.31358337 219.80297852]
[150.56030273 233.85545349]
[156.63414001 247.57072449]
[162.70797729 261.28598022]
[168.78181458 275.00125122]
[175.11808777 281.58071899]
[174.84228516 288.96621704]
[180.71124268 302.77041626]
[186.58020020 316.57458496]
[192.44915771 330.37875366]
[204.96914673 340.05142212]
[202.82839966 354.79138184]
[208.69735718 368.59558105]
[223.34820557 365.20092773]
[238.36596680 364.40209961]
[253.29426575 366.22344971]
[267.67944336 370.60955811]
[281.08432007 377.42715454]
[293.10162354 386.46905518]
[303.36605835 397.46051025]
[311.56576538 410.06750488]
[317.45156860 423.90689087]
[320.84454346 438.55810547]
[321.64166260 453.57595825]
[319.81863403 468.50405884]
[315.43090820 482.88873291]
[308.61178589 496.29284668]
[299.56848145 508.30911255]
[288.57586670 518.57232666]
[275.96795654 526.77056885]
[262.12789917 532.65478516]
[247.47628784 536.04614258]
[232.45835876 536.84155273]
[217.53047180 535.01684570]
[203.14630127 530.62744141]
[189.74295044 523.80682373]
[177.72772217 514.76214600]
[167.46575928 503.76840210]
[159.26890564 491.15954590]
[153.38626099 477.31884766]
[149.99659729 462.66683960]
[149.20289612 447.64880371]
[151.02929688 432.72113037]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 180]
[5 179]
[7 177]
[8 176]
[9 175]
[10 174]
[11 172]
[12 171]
[13 170]
[14 169]
[23 168]
[24 167]
[26 166]
[27 165]
[28 162]
[29 161]
[30 160]
[31 159]
[32 158]
[33 151]
[34 150]
[35 149]
[36 148]
[37 147]
[38 146]
[39 145]
[67 144]
[68 143]
[73 140]
[74 139]
[76 138]
[77 137]
[78 136]
[79 135]
[80 134]
[81 133]
[82 132]
[86 131]
[87 130]
[88 129]
[89 128]
[90 120]
[91 119]
[92 118]
[93 117]
[95 115]
[96 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
