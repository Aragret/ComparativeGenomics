%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAUCGCCCCACUACGGACAACCCCCGGUCACGGGAGGAUUAACCCCCCAUCCCCGAUCCGACCUCACCAUUUUCCGAGUCUUUUUAGGACGCUUCUUUxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[135.48110962 745.46014404]
[123.11402893 736.95410156]
[111.54712677 727.38830566]
[100.87092590 716.83764648]
[91.16897583 705.38470459]
[82.51721191 693.11914062]
[74.98335266 680.13690186]
[68.62635803 666.53961182]
[63.49597549 652.43371582]
[59.63236618 637.92956543]
[57.06576157 623.14068604]
[55.81625748 608.18286133]
[55.89363098 593.17315674]
[57.29727173 578.22900391]
[60.01619720 563.46740723]
[64.02912903 549.00384521]
[69.30464935 534.95159912]
[75.80149078 521.42059326]
[83.46878815 508.51669312]
[92.24653625 496.34094238]
[102.06604004 484.98861694]
[112.85044861 474.54861450]
[124.51535034 465.10256958]
[136.96945190 456.72442627]
[150.11529541 449.47979736]
[163.84997559 443.42538452]
[178.06599426 438.60852051]
[174.52632141 424.03213501]
[170.98664856 409.45574951]
[167.33856201 394.90612793]
[163.58226013 380.38409424]
[152.90432739 369.99990845]
[156.93925476 354.70187378]
[153.18295288 340.17980957]
[142.92260742 333.77267456]
[139.67431641 321.70483398]
[145.70613098 310.30395508]
[142.16645813 295.72756958]
[138.62678528 281.15121460]
[135.08711243 266.57482910]
[122.30741119 254.54794312]
[127.63812256 236.92224121]
[123.88182068 222.40019226]
[120.12552643 207.87812805]
[116.36922455 193.35606384]
[101.97975159 189.50787354]
[91.37794495 178.90325928]
[87.48189545 164.31947327]
[91.43467712 149.64730835]
[102.27142334 138.85322571]
[98.51512146 124.33116150]
[94.75881958 109.80910492]
[86.23288727 122.15043640]
[71.50292969 124.98386383]
[59.00693512 116.68626404]
[55.90317535 102.01088715]
[63.96962738 89.36445618]
[78.58546448 85.99140930]
[91.37750244 93.82322693]
[88.93177032 79.02395630]
[86.48604584 64.22468567]
[76.60218811 51.87074280]
[82.16078949 38.05223083]
[79.71505737 23.25296021]
[77.26933289 8.45368862]
[74.82360077 -6.34558201]
[64.81190491 -14.47753239]
[63.07952118 -26.85422897]
[70.01502228 -36.76510239]
[67.78990173 -51.59914780]
[65.56478882 -66.43318939]
[63.33967209 -81.26723480]
[48.62969971 -84.99449921]
[36.50011444 -94.04524994]
[28.78064728 -107.01535034]
[26.62086487 -121.91242981]
[30.31906319 -136.46194458]
[39.28151703 -148.45443726]
[52.11753845 -156.08106995]
[49.89242172 -170.91511536]
[47.66730499 -185.74916077]
[45.44218826 -200.58320618]
[43.21707153 -215.41725159]
[40.99195480 -230.25129700]
[31.22835732 -218.86392212]
[16.28355217 -217.57830811]
[4.71860361 -227.13088989]
[3.15843821 -242.04953003]
[12.49678993 -253.78816223]
[27.38422585 -255.62234497]
[39.29206848 -246.50219727]
[38.39925385 -261.47561646]
[29.85427094 -274.79077148]
[36.82031250 -287.95602417]
[35.92749786 -302.92941284]
[21.39289856 -307.23306274]
[9.20862389 -316.25079346]
[0.84597915 -328.89364624]
[-2.68520403 -343.63497925]
[-0.95851809 -358.69467163]
[5.81753111 -372.25418091]
[16.82470322 -382.67617798]
[30.73382568 -388.70214844]
[45.86531067 -389.60437012]
[60.39194870 -385.27395630]
[72.55958557 -376.23379517]
[80.89891815 -363.57556152]
[84.40293121 -348.82775879]
[82.64849091 -333.77127075]
[75.84746552 -320.22424316]
[64.82110596 -309.82254028]
[50.90090179 -303.82223511]
[51.79371643 -288.84884644]
[60.27484131 -276.60467529]
[53.37265778 -262.36843872]
[54.26547623 -247.39501953]
[55.82599640 -232.47640991]
[58.05111694 -217.64236450]
[60.27623367 -202.80831909]
[62.50135040 -187.97428894]
[64.72646332 -173.14024353]
[66.95158386 -158.30619812]
[81.46035004 -154.78128052]
[93.54695892 -145.94616699]
[101.35121918 -133.12203979]
[103.65729523 -118.24690247]
[100.08298492 -103.58272552]
[91.14271545 -91.37148285]
[78.17371368 -83.49234772]
[80.39883423 -68.65830994]
[82.62394714 -53.82426453]
[84.84906769 -38.99021912]
[96.50481415 -25.87113380]
[89.62287140 -8.79130936]
[92.06860352 6.00796175]
[94.51432800 20.80723190]
[96.96006012 35.60650253]
[106.66898346 46.90190506]
[101.28531647 61.77895737]
[103.73104095 76.57823181]
[106.17677307 91.37750244]
[109.28088379 106.05280304]
[113.03718567 120.57485962]
[116.79347992 135.09692383]
[131.50492859 139.28266907]
[142.07623291 150.19799805]
[145.74024963 164.84181213]
[141.61010742 179.25701904]
[130.89128113 189.59976196]
[134.64758301 204.12182617]
[138.40388489 218.64389038]
[142.16018677 233.16593933]
[152.85746765 240.37226868]
[155.68711853 252.54505920]
[149.66348267 263.03515625]
[153.20315552 277.61154175]
[156.74282837 292.18792725]
[160.28250122 306.76428223]
[173.29852295 319.78982544]
[167.70501709 336.42352295]
[171.46131897 350.94558716]
[182.40792847 362.36846924]
[178.10432434 376.62777710]
[181.86062622 391.14984131]
[187.03933716 398.67437744]
[185.56303406 405.91607666]
[189.10270691 420.49246216]
[192.64237976 435.06884766]
[207.48428345 432.82937622]
[222.46604919 431.91043091]
[237.47039795 432.31915283]
[252.37991333 434.05239868]
[267.07788086 437.09658813]
[281.44931030 441.42785645]
[295.38168335 447.01235962]
[308.76596069 453.80636597]
[321.49743652 461.75668335]
[333.47640991 470.80111694]
[344.60916138 480.86886597]
[354.80853271 491.88113403]
[363.99472046 503.75177002]
[372.09582520 516.38781738]
[379.04846191 529.69036865]
[384.79818726 543.55535889]
[389.29998779 557.87432861]
[392.51867676 572.53503418]
[394.42904663 587.42291260]
[395.01611328 602.42132568]
[394.27532959 617.41296387]
[392.21246338 632.28045654]
[388.84365845 646.90747070]
[384.19531250 661.17944336]
[378.30377197 674.98480225]
[371.21514893 688.21539307]
[362.98492432 700.76776123]
[353.67752075 712.54357910]
[343.36581421 723.45074463]
[332.13043213 733.40380859]
[320.05938721 742.32501221]
[307.24710083 750.14440918]
[293.79388428 756.80084229]
[279.80499268 762.24218750]
[265.38992310 766.42596436]
[250.66151428 769.31927490]
[235.73501587 770.89959717]
[220.72726440 771.15454102]
[205.75570679 770.08203125]
[190.93753052 767.69055176]
[176.38870239 763.99877930]
[162.22308350 759.03564453]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 168]
[28 167]
[29 166]
[30 164]
[31 163]
[33 161]
[34 160]
[37 158]
[38 157]
[39 156]
[40 155]
[42 152]
[43 151]
[44 150]
[45 149]
[50 144]
[51 143]
[52 142]
[59 141]
[60 140]
[61 139]
[63 137]
[64 136]
[65 135]
[66 134]
[69 132]
[70 131]
[71 130]
[72 129]
[79 122]
[80 121]
[81 120]
[82 119]
[83 118]
[84 117]
[91 116]
[92 115]
[94 113]
[95 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
