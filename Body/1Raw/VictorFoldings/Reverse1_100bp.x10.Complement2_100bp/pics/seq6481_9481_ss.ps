%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxAAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUA\
) } def
/len { sequence length } bind def

/coor [
[29.85829353 553.22308350]
[15.26878929 557.33673096]
[0.15241672 556.20935059]
[-13.66544819 549.97698975]
[-24.51623154 539.39227295]
[-31.08964920 525.73333740]
[-32.59192657 510.64959717]
[-28.84165764 495.96249390]
[-20.29170799 483.44552612]
[-7.97452164 474.61022949]
[6.62253904 470.52343750]
[7.73818779 455.56500244]
[8.85383606 440.60653687]
[9.96948528 425.64810181]
[11.08513355 410.68963623]
[12.20078182 395.73117065]
[13.31643105 380.77273560]
[10.67912865 373.86865234]
[14.56167507 365.60040283]
[15.89990902 350.66021729]
[3.72488141 359.42199707]
[-11.10123539 357.14465332]
[-20.08536911 345.13278198]
[-18.08099937 330.26730347]
[-6.23632002 321.06384277]
[8.66349792 322.79458618]
[18.08288956 334.46713257]
[20.74868584 319.70593262]
[13.93351269 303.53433228]
[25.94469070 289.57678223]
[28.39041710 274.77749634]
[30.83614540 259.97824097]
[33.28187180 245.17897034]
[35.72760010 230.37969971]
[38.17332840 215.58042908]
[40.61905289 200.78115845]
[43.06478119 185.98188782]
[34.33041763 198.17658997]
[23.13193130 208.15626526]
[10.01572514 215.43399048]
[-4.37823391 219.65464783]
[-19.34763145 220.61230469]
[-34.16207886 218.26025391]
[-48.09874725 212.71324158]
[-60.47763062 204.24192810]
[-70.69474030 193.25964355]
[-78.25156403 180.30223083]
[-82.77938080 166.00192261]
[-84.05726624 151.05644226]
[-82.02288055 136.19505310]
[-76.77547455 122.14282990]
[-68.57109070 109.58544159]
[-57.81003189 99.13558197]
[-45.01735687 91.30311584]
[-30.81724930 86.47021484]
[-15.90256214 84.87268829]
[-1.00101626 86.58847809]
[13.16030788 91.53386688]
[25.89044952 99.46755981]
[36.56827545 110.00245667]
[44.67279053 122.62453461]
[49.80855942 136.71794128]
[51.72499466 151.59500122]
[50.32992935 166.52339172]
[58.18168259 153.74253845]
[66.03343964 140.96170044]
[73.88519287 128.18086243]
[81.73695374 115.40001678]
[89.58870697 102.61917114]
[95.25149536 88.72914886]
[98.57375336 74.10168457]
[101.89601135 59.47422791]
[105.21826935 44.84676743]
[108.54052734 30.21930695]
[111.86279297 15.59184647]
[115.18505096 0.96438611]
[114.03405762 -8.09723854]
[118.66719818 -13.85534954]
[122.20687103 -28.43172455]
[125.74653625 -43.00809860]
[129.28620911 -57.58447647]
[128.27026367 -66.66223145]
[132.98861694 -72.35072327]
[136.74491882 -86.87277985]
[132.70999146 -102.17082214]
[143.38792419 -112.55499268]
[147.14422607 -127.07704926]
[150.90052795 -141.59910583]
[154.33158875 -156.20143127]
[157.43569946 -170.87673950]
[160.53981018 -185.55203247]
[163.31541443 -200.29299927]
[165.76113892 -215.09226990]
[168.20686340 -229.89154053]
[170.65260315 -244.69081116]
[156.53858948 -249.90533447]
[143.66662598 -257.69692993]
[132.50202942 -267.78396606]
[123.44840240 -279.80181885]
[116.83300781 -293.31597900]
[112.89499664 -307.83798218]
[111.77672577 -322.84286499]
[113.51862335 -337.78817749]
[118.05771637 -352.13366699]
[125.22991943 -365.36074829]
[134.77597046 -376.99130249]
[146.35076904 -386.60485840]
[159.53590393 -393.85388184]
[173.85473633 -398.47637939]
[188.78965759 -400.30520630]
[203.80078125 -399.27426147]
[218.34545898 -395.42080688]
[231.89790344 -388.88418579]
[243.96820068 -379.90060425]
[254.12002563 -368.79489136]
[261.98641968 -355.96850586]
[267.28295898 -341.88507080]
[269.81823730 -327.05371094]
[269.50054932 -312.01058960]
[266.34143066 -297.29949951]
[260.45504761 -283.45220947]
[252.05422974 -270.96932983]
[241.44261169 -260.30209351]
[229.00381470 -251.83609009]
[215.18750000 -245.87739563]
[200.49311829 -242.64140320]
[185.45187378 -242.24508667]
[183.00613403 -227.44581604]
[180.56040955 -212.64654541]
[178.11468506 -197.84727478]
[179.85975647 -194.78343201]
[180.20751953 -190.72213745]
[178.70533752 -186.32933044]
[175.21510315 -182.44792175]
[172.11099243 -167.77262878]
[169.00688171 -153.09732056]
[170.61340332 -149.95861816]
[170.77947998 -145.88584900]
[169.08265686 -141.56449890]
[165.42257690 -137.84280396]
[161.66627502 -123.32074738]
[157.90997314 -108.79869080]
[162.21357727 -94.53936768]
[151.26698303 -83.11648560]
[147.51068115 -68.59442139]
[143.86259460 -54.04480362]
[140.32292175 -39.46842575]
[136.78324890 -24.89205170]
[133.24357605 -10.31567669]
[129.81251526 4.28664541]
[126.49024963 18.91410637]
[123.16799164 33.54156494]
[119.84573364 48.16902542]
[116.52346802 62.79648590]
[113.20121002 77.42395020]
[109.87895203 92.05140686]
[119.40206909 80.46217346]
[131.56919861 71.68943024]
[145.57333374 66.31504822]
[160.48564148 64.69548035]
[175.31704712 66.93815613]
[189.08381653 72.89431763]
[200.87286377 82.16893005]
[209.90226746 94.14682007]
[215.57313538 108.03355408]
[217.50932312 122.90806580]
[215.58242798 137.78378296]
[209.92025757 151.67405701]
[200.89836121 163.65760803]
[189.11511230 172.93957520]
[175.35206604 178.90435791]
[160.52206421 181.15631104]
[145.60874939 179.54606628]
[131.60124207 174.18043518]
[119.42863464 165.41531372]
[109.89826965 153.83203125]
[103.64228058 140.19889832]
[101.07559204 125.42012024]
[102.36954498 110.47093201]
[94.51779175 123.25177002]
[86.66603851 136.03260803]
[78.81428528 148.81346130]
[70.96252441 161.59429932]
[63.11077118 174.37513733]
[57.86405182 188.42761230]
[55.41832352 203.22688293]
[52.97259903 218.02615356]
[50.52687073 232.82542419]
[48.08114243 247.62469482]
[45.63541412 262.42398071]
[43.18968964 277.22323608]
[40.74396133 292.02252197]
[47.60702515 302.94317627]
[45.26530075 315.21917725]
[35.50990295 322.37170410]
[32.84410858 337.13293457]
[30.84009361 351.99847412]
[29.50185966 366.93865967]
[28.27488518 381.88836670]
[27.15923500 396.84683228]
[26.04358673 411.80529785]
[24.92793846 426.76373291]
[23.81229019 441.72219849]
[22.69664001 456.68063354]
[21.58099174 471.63909912]
[35.41032028 477.84600830]
[46.28059006 488.41070557]
[52.87916946 502.05746460]
[54.40924072 517.13842773]
[50.68604660 531.83239746]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 205]
[12 204]
[13 203]
[14 202]
[15 201]
[16 200]
[17 199]
[19 198]
[20 197]
[27 196]
[28 195]
[30 192]
[31 191]
[32 190]
[33 189]
[34 188]
[35 187]
[36 186]
[37 185]
[64 184]
[65 183]
[66 182]
[67 181]
[68 180]
[69 179]
[70 156]
[71 155]
[72 154]
[73 153]
[74 152]
[75 151]
[76 150]
[78 149]
[79 148]
[80 147]
[81 146]
[83 145]
[84 144]
[86 142]
[87 141]
[88 140]
[89 136]
[90 135]
[91 134]
[92 130]
[93 129]
[94 128]
[95 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
