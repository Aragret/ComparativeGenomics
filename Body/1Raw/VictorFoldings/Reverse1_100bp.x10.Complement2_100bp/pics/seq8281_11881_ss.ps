%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[71.97936249 626.61511230]
[57.31643295 621.81903076]
[47.59185791 609.84252930]
[45.90871811 594.50726318]
[52.80409622 580.70666504]
[66.07769775 572.84442139]
[66.52429962 557.85107422]
[66.97090912 542.85766602]
[54.92576218 531.12084961]
[55.09951401 513.96612549]
[67.87302399 502.01385498]
[68.09635162 487.01553345]
[68.31967926 472.01718140]
[68.54300690 457.01885986]
[58.36308670 449.11956787]
[54.53444672 436.61264038]
[58.66912079 423.99856567]
[69.47055054 415.95220947]
[62.11561966 403.00021362]
[70.26037598 389.43652344]
[70.70697784 374.44317627]
[71.15358734 359.44982910]
[71.48856354 344.45355225]
[71.71189117 329.45523071]
[71.93521881 314.45687866]
[60.44558334 324.09994507]
[45.49114990 322.93161011]
[35.63849640 311.62121582]
[36.53167343 296.64782715]
[47.65902328 286.58889771]
[62.64629745 287.20663452]
[72.90776825 298.14630127]
[74.46828461 283.22769165]
[76.02880859 268.30908203]
[77.58933258 253.39047241]
[79.14985657 238.47187805]
[80.59927368 223.54206848]
[81.93750763 208.60188293]
[75.36653137 195.23507690]
[84.30416870 182.18022156]
[85.64240265 167.24003601]
[78.12929535 157.75953674]
[79.12193298 145.30166626]
[88.63185883 136.58822632]
[90.19238281 121.66962433]
[91.75290680 106.75102234]
[91.97623444 91.75268555]
[83.23395538 78.56620789]
[90.00321198 65.29871368]
[88.88756561 50.34025955]
[87.77191925 35.38180923]
[85.65729523 20.53161049]
[82.55318451 5.85630751]
[79.44907379 -8.81899452]
[69.02343750 -20.71928024]
[73.95946503 -34.77221298]
[70.94406891 -37.89653397]
[69.25009918 -41.45953369]
[68.85319519 -44.99193573]
[69.57909393 -48.08057404]
[71.13492584 -50.41242218]
[68.90981293 -65.24646759]
[66.68469238 -80.08051300]
[64.45957947 -94.91455078]
[62.23445892 -109.74859619]
[58.98143768 -113.83086395]
[57.74338913 -118.30529785]
[58.33227158 -122.33869171]
[60.25660706 -125.29322815]
[58.69608307 -140.21183777]
[47.36668396 -130.38102722]
[32.58987045 -132.95896912]
[25.25856018 -146.04528809]
[30.77712059 -159.99325562]
[45.07747650 -164.52091980]
[57.61707687 -156.29209900]
[57.17047119 -171.28544617]
[56.72386551 -186.27879333]
[53.97899246 -190.71870422]
[53.28141785 -195.30854797]
[54.34542084 -199.24337769]
[56.60721207 -201.94831848]
[56.83053970 -216.94665527]
[57.05386734 -231.94499207]
[57.27719498 -246.94332886]
[47.23514557 -235.80073547]
[32.58586884 -232.57603455]
[18.79318428 -238.47195435]
[11.00142002 -251.28945923]
[12.11671352 -266.24792480]
[21.72308540 -277.76824951]
[36.23759842 -281.55358887]
[50.24670029 -276.19213867]
[58.52565384 -263.68246460]
[60.52966690 -278.54800415]
[62.53367996 -293.41351318]
[64.53769684 -308.27905273]
[50.46722794 -313.67523193]
[38.02081680 -322.17132568]
[27.86968422 -333.30914307]
[20.56126213 -346.48806763]
[16.48968506 -360.99731445]
[15.87453175 -376.05450439]
[18.74897385 -390.84753418]
[24.95799828 -404.57870483]
[34.16675568 -416.50747681]
[45.87863541 -425.99053955]
[59.46202850 -432.51651001]
[74.18439484 -435.73342896]
[89.25178528 -435.46780396]
[103.85162354 -431.73400879]
[117.19657135 -424.73333740]
[128.56694031 -414.84338379]
[137.34954834 -402.59744263]
[143.07075500 -388.65597534]
[145.42202759 -373.77081299]
[144.27656555 -358.74468994]
[139.69613647 -344.38793945]
[131.92774963 -331.47479248]
[121.39037323 -320.70166016]
[108.65225220 -312.64953613]
[94.40033722 -307.75262451]
[79.40322113 -306.27502441]
[77.39920807 -291.40951538]
[75.39519501 -276.54397583]
[73.39118195 -261.67843628]
[72.27553558 -246.72000122]
[72.05220795 -231.72166443]
[71.82888031 -216.72332764]
[71.60555267 -201.72499084]
[71.71721649 -186.72540283]
[72.16381836 -171.73205566]
[72.61042786 -156.73869324]
[73.61468506 -141.77235413]
[75.17520905 -126.85375214]
[77.06850433 -111.97371674]
[79.29361725 -97.13967133]
[81.51873779 -82.30562592]
[83.74385834 -67.47158051]
[85.96897125 -52.63753891]
[88.63476562 -37.87632370]
[98.83837128 -27.02571297]
[94.12437439 -11.92310524]
[97.22848511 2.75219750]
[100.33259583 17.42749977]
[107.01448059 3.99796510]
[119.84132385 -3.77841282]
[134.83859253 -3.49203897]
[147.35920715 4.76835060]
[153.52354431 18.44318390]
[151.42149353 33.29516602]
[141.70439148 44.72224808]
[127.38322449 49.18362427]
[112.89552307 45.29689026]
[102.73036957 34.26615906]
[103.84601593 49.22461319]
[104.96166992 64.18306732]
[113.62414551 76.29961395]
[106.93468475 90.63703156]
[114.10363007 77.46105957]
[126.22869873 68.63027954]
[140.96873474 65.84978485]
[155.47767639 69.65644073]
[166.95407104 79.31524658]
[173.18200684 92.96122742]
[172.95895386 107.95957184]
[166.32800293 121.41432190]
[154.56945801 130.72758484]
[139.95375061 134.10112000]
[125.30290222 130.88352966]
[113.44578552 121.69610596]
[106.67150879 108.31154633]
[105.11098480 123.23014832]
[103.55046844 138.14875793]
[111.43681335 154.78868103]
[100.58258820 168.57826233]
[99.24435425 183.51844788]
[105.71961212 197.95387268]
[96.87769318 209.94010925]
[95.53945923 224.88029480]
[97.89077759 233.70690918]
[94.06845856 240.03239441]
[92.50794220 254.95100403]
[90.94741821 269.86959839]
[89.38689423 284.78820801]
[87.82637024 299.70681763]
[86.93355560 314.68020630]
[86.71022797 329.67855835]
[86.48690033 344.67687988]
[89.48818970 353.30416870]
[86.14693451 359.89642334]
[85.70032501 374.88977051]
[85.25372314 389.88311768]
[92.57671356 403.90756226]
[84.46390533 416.39880371]
[96.69097900 428.90951538]
[96.09855652 446.05490112]
[83.54134369 457.24218750]
[83.31801605 472.24050903]
[83.09468842 487.23886108]
[82.87136078 502.23718262]
[93.30273438 510.75781250]
[96.87003326 523.54394531]
[92.48674774 535.86743164]
[81.96425629 543.30432129]
[81.51765442 558.29766846]
[81.07104492 573.29101562]
[93.85314941 581.92938232]
[99.91487122 596.11596680]
[97.32193756 611.32385254]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 207]
[7 206]
[8 205]
[11 201]
[12 200]
[13 199]
[14 198]
[18 195]
[20 193]
[21 192]
[22 191]
[23 189]
[24 188]
[25 187]
[32 186]
[33 185]
[34 184]
[35 183]
[36 182]
[37 180]
[38 179]
[40 177]
[41 176]
[44 174]
[45 173]
[46 172]
[47 159]
[49 157]
[50 156]
[51 155]
[52 145]
[53 144]
[54 143]
[56 141]
[61 140]
[62 139]
[63 138]
[64 137]
[65 136]
[69 135]
[70 134]
[76 133]
[77 132]
[78 131]
[82 130]
[83 129]
[84 128]
[85 127]
[94 126]
[95 125]
[96 124]
[97 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
