%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[53.40129471 368.87472534]
[54.88466263 353.85934448]
[60.20465851 339.73983765]
[68.99856567 327.47894287]
[80.66680145 317.91262817]
[94.41379547 311.69308472]
[91.96807098 296.89382935]
[89.52233887 282.09454346]
[79.81341553 270.79916382]
[85.19708252 255.92208862]
[82.75135040 241.12281799]
[80.30562592 226.32354736]
[77.85990143 211.52427673]
[73.36402130 225.83467102]
[65.22031403 238.43148804]
[54.01667786 248.40538025]
[40.56191254 255.03631592]
[25.82732964 257.84561157]
[10.87663174 256.63043213]
[-3.21087790 251.47853088]
[-15.41820908 242.76182556]
[-24.86410522 231.10957336]
[-30.86665726 217.36296082]
[-32.99253845 202.51435852]
[-31.08827591 187.63572693]
[-25.29134369 173.80114746]
[-16.02022552 162.00935364]
[-3.94421172 153.11161804]
[10.06492043 147.75024414]
[24.99583817 146.31230164]
[39.77066803 148.90159607]
[53.32279968 155.33119202]
[64.67389679 165.13693237]
[73.00450897 177.61094666]
[77.71345520 191.85385132]
[79.93857574 177.01980591]
[70.90526581 167.83129883]
[68.78189087 154.92497253]
[74.56474304 142.97636414]
[86.34434509 136.44523621]
[88.79006958 121.64596558]
[91.23580170 106.84669495]
[78.44282532 114.67866516]
[63.82715225 111.30492401]
[55.76130295 98.65810394]
[58.86576462 83.98287201]
[71.36215973 75.68587494]
[86.09197998 78.52000427]
[94.61711884 90.86081696]
[98.37342072 76.33876038]
[102.12972260 61.81669998]
[105.88602448 47.29464340]
[109.53411102 32.74502182]
[113.07378387 18.16864586]
[116.61345673 3.59227061]
[120.15312958 -10.98410511]
[123.69280243 -25.56048012]
[112.81850433 -15.22850609]
[98.56495667 -10.55556297]
[83.68429565 -12.44392395]
[71.04974365 -20.52897453]
[63.10083008 -33.24961853]
[61.37237167 -48.14970016]
[66.19810486 -62.35224915]
[76.64625549 -73.11496735]
[90.69944763 -78.35974884]
[105.64423370 -77.07391357]
[118.59500885 -69.50572205]
[127.05117798 -57.11648941]
[129.37991333 -42.29709625]
[135.45373535 -56.01236343]
[141.52757263 -69.72763062]
[147.60140991 -83.44289398]
[153.67524719 -97.15816498]
[159.74906921 -110.87342834]
[165.82290649 -124.58869934]
[163.43737793 -142.84768677]
[178.00701904 -152.62992859]
[183.87599182 -166.43411255]
[189.74494934 -180.23828125]
[195.61390686 -194.04246521]
[182.32643127 -201.02069092]
[169.65194702 -209.05874634]
[157.67481995 -218.10316467]
[146.47476196 -228.09373474]
[136.12631226 -238.96397400]
[126.69831085 -250.64154053]
[118.25353241 -263.04873657]
[110.84815216 -276.10296631]
[104.53146362 -289.71737671]
[99.34550476 -303.80136108]
[95.32479095 -318.26119995]
[92.49607086 -333.00064087]
[90.87816620 -347.92160034]
[90.48185730 -362.92480469]
[91.30977631 -377.91036987]
[93.35641479 -392.77859497]
[96.60814667 -407.43051147]
[101.04333496 -421.76864624]
[106.63246155 -435.69757080]
[113.33834076 -449.12454224]
[121.11633301 -461.96026611]
[129.91468811 -474.11929321]
[139.67483521 -485.52069092]
[150.33184814 -496.08862305]
[161.81478882 -505.75271606]
[174.04722595 -514.44873047]
[186.94778442 -522.11871338]
[200.43058777 -528.71160889]
[214.40591431 -534.18365479]
[228.78077698 -538.49829102]
[243.45947266 -541.62695312]
[258.34436035 -543.54870605]
[273.33636475 -544.25079346]
[288.33569336 -543.72857666]
[303.24255371 -541.98547363]
[317.95773315 -539.03314209]
[332.38330078 -534.89117432]
[346.42324829 -529.58715820]
[359.98416138 -523.15643311]
[372.97576904 -515.64172363]
[385.31164551 -507.09310913]
[396.90966797 -497.56744385]
[407.69265747 -487.12808228]
[417.58886719 -475.84457397]
[426.53244019 -463.79196167]
[434.46380615 -451.05044556]
[441.33026123 -437.70486450]
[447.08605957 -423.84399414]
[451.69290161 -409.56008911]
[455.12014771 -394.94821167]
[457.34497070 -380.10562134]
[458.35256958 -365.13104248]
[458.13623047 -350.12417603]
[456.69741821 -335.18487549]
[454.04568481 -320.41256714]
[450.19869995 -305.90554810]
[445.18203735 -291.76037598]
[439.02908325 -278.07119751]
[431.78082275 -264.92907715]
[423.48547363 -252.42147827]
[414.19821167 -240.63166809]
[403.98086548 -229.63807678]
[392.90145874 -219.51390076]
[381.03366089 -210.32647705]
[368.45651245 -202.13696289]
[355.25369263 -194.99987793]
[341.51306152 -188.96269226]
[327.32604980 -184.06559753]
[312.78707886 -180.34117126]
[297.99291992 -177.81422424]
[283.04199219 -176.50154114]
[268.03384399 -176.41186523]
[253.06832886 -177.54582214]
[238.24502563 -179.89582825]
[223.66259766 -183.44627380]
[209.41809082 -188.17350769]
[203.54911804 -174.36932373]
[197.68016052 -160.56515503]
[191.81120300 -146.76097107]
[196.04383850 -135.42909241]
[191.26728821 -123.88057709]
[179.53817749 -118.51486206]
[173.46434021 -104.79959869]
[167.39050293 -91.08432770]
[161.31668091 -77.36906433]
[155.24284363 -63.65379715]
[149.16900635 -49.93852997]
[143.09516907 -36.22326279]
[138.26918030 -22.02080727]
[134.72950745 -7.44443226]
[131.18983459 7.13194323]
[127.65016174 21.70831871]
[124.11048889 36.28469467]
[125.58679199 43.52639771]
[120.40808105 51.05094147]
[116.65177917 65.57299805]
[112.89547729 80.09506226]
[109.13918304 94.61711884]
[106.03507233 109.29241943]
[103.58934021 124.09169006]
[101.14361572 138.89096069]
[111.58963776 152.92306519]
[108.71189117 169.83558655]
[94.77262115 179.24493408]
[92.54750061 194.07896423]
[92.65917206 209.07855225]
[95.10489655 223.87782288]
[97.55062103 238.67709351]
[99.99635315 253.47636414]
[109.88021088 265.83032227]
[104.32160950 279.64883423]
[106.76734161 294.44808960]
[109.21306610 309.24737549]
[124.23016357 310.71334839]
[138.35580444 316.01696777]
[150.62689209 324.79666138]
[160.20672607 336.45382690]
[166.44218445 350.19360352]
[168.90808105 365.07922363]
[167.43630981 380.09576416]
[162.12721252 394.21936035]
[153.34277344 406.48703003]
[141.68194580 416.06237793]
[127.93975067 422.29251099]
[113.05317688 424.75268555]
[98.03721619 423.27511597]
[83.91567230 417.96057129]
[71.65137482 409.17138672]
[62.08053589 397.50686646]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 194]
[7 193]
[8 192]
[10 190]
[11 189]
[12 188]
[13 187]
[35 186]
[36 185]
[40 182]
[41 181]
[42 180]
[49 179]
[50 178]
[51 177]
[52 176]
[53 174]
[54 173]
[55 172]
[56 171]
[57 170]
[70 169]
[71 168]
[72 167]
[73 166]
[74 165]
[75 164]
[76 163]
[78 160]
[79 159]
[80 158]
[81 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
