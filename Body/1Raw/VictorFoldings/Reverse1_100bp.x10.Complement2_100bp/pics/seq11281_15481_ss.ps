%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAGAAAUGAUAUUUUCGAUAACACAUUCGAUCAGUAUAAUUCAACAACCGAGUCCUCAAACUAUCAAGAACCCGUCACUCUCACUCAUCAUCUUACAAxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[100.52029419 756.14465332]
[89.68656158 745.75537109]
[79.82773590 734.43682861]
[71.02319336 722.28009033]
[63.34383774 709.38305664]
[56.85148621 695.84954834]
[51.59841537 681.78857422]
[47.62692261 667.31329346]
[44.96898270 652.54028320]
[43.64599991 637.58850098]
[43.66862488 622.57830811]
[45.03667450 607.63055420]
[47.73913193 592.86566162]
[51.75424194 578.40240479]
[57.04967117 564.35736084]
[63.58279037 550.84344482]
[71.30099487 537.96960449]
[80.14213562 525.83947754]
[90.03504181 514.55072021]
[100.90003967 504.19415283]
[112.64966583 494.85324097]
[125.18930817 486.60317993]
[138.41801453 479.51037598]
[152.22924805 473.63195801]
[147.61523438 459.35922241]
[143.00123596 445.08648682]
[138.38722229 430.81375122]
[134.52998352 445.30932617]
[124.83121490 456.75198364]
[111.16359711 462.93228149]
[96.16612244 462.65692139]
[82.73458099 455.97906494]
[73.46237946 444.18814087]
[70.13984680 429.56072998]
[73.40850830 414.92120361]
[82.63723755 403.09619141]
[96.04410553 396.36895752]
[111.04045868 396.03839111]
[124.73074341 402.16833496]
[134.47216797 413.57629395]
[132.46815491 398.71078491]
[130.46414185 383.84524536]
[128.46012878 368.97973633]
[126.45611572 354.11419678]
[114.49253845 345.31597900]
[112.24842072 330.26876831]
[121.55791473 317.77993774]
[119.55390167 302.91439819]
[117.54988098 288.04888916]
[115.54586792 273.18334961]
[113.54185486 258.31781006]
[111.53784180 243.45228577]
[109.53382874 228.58676147]
[105.52487946 222.37788391]
[107.61235046 213.48518372]
[105.82987976 198.59146118]
[104.04741669 183.69773865]
[100.13134766 177.42987061]
[102.35099030 168.56922913]
[100.79046631 153.65061951]
[98.78645325 138.78509521]
[96.34072113 123.98582458]
[93.89499664 109.18655396]
[83.17082214 119.67426300]
[68.26676941 117.98042297]
[60.16954422 105.35366821]
[64.84812164 91.10197449]
[78.85363007 85.73115540]
[91.86079407 93.19902039]
[90.52255249 78.25884247]
[89.18431854 63.31865311]
[80.24668121 50.26380157]
[86.81765747 36.89699173]
[85.47942352 21.95680809]
[83.91889954 7.03820276]
[82.13643646 -7.85551500]
[80.13242340 -22.72104263]
[77.90730286 -37.55508804]
[73.53951263 -45.57756424]
[75.76119995 -52.62638855]
[73.75718689 -67.49191284]
[71.75317383 -82.35744476]
[69.74915314 -97.22296906]
[67.30342865 -112.02223969]
[64.41815948 -126.74213409]
[61.53288269 -141.46202087]
[58.64760971 -156.18191528]
[43.59075546 -157.04322815]
[29.22138405 -161.62275696]
[16.44277382 -169.63261414]
[6.05819607 -180.56932068]
[-1.27956533 -193.74536133]
[-5.10925245 -208.33248901]
[-5.19012833 -223.41374207]
[-1.51710868 -238.04110718]
[5.67891741 -251.29508972]
[15.94560146 -262.34252930]
[28.63757133 -270.48898315]
[42.95699692 -275.22235107]
[58.00375366 -276.24508667]
[72.83197784 -273.49291992]
[86.50956726 -267.13885498]
[98.17673492 -257.58227539]
[107.10006714 -245.42395020]
[112.71863556 -231.42814636]
[114.67926025 -216.47465515]
[112.85868835 -201.50347900]
[107.37136078 -187.45568848]
[98.56222534 -175.21437073]
[86.98501587 -165.54901123]
[73.36750031 -159.06718445]
[76.25277710 -144.34730530]
[79.13804626 -129.62741089]
[82.02332306 -114.90751648]
[84.27183533 -113.23350525]
[85.99273682 -110.56796265]
[86.80503845 -107.10739136]
[86.40586090 -103.18244171]
[84.61468506 -99.22698975]
[86.61869812 -84.36145782]
[88.62271118 -69.49592590]
[90.62672424 -54.63040161]
[92.74134827 -39.78020477]
[94.96646881 -24.94615936]
[98.20648956 -21.43741417]
[99.27673340 -15.85605240]
[97.03015137 -9.63798046]
[98.81262207 5.25573683]
[101.94673920 8.85939503]
[102.85033417 14.47014809]
[100.41960907 20.61857224]
[101.75784302 35.55875778]
[110.59976196 47.54499054]
[104.12450409 61.98041916]
[105.46273804 76.92060852]
[106.80097198 91.86078644]
[108.69426727 106.74082184]
[111.13999176 121.54009247]
[113.58572388 136.33937073]
[116.45860291 139.59521484]
[117.99178314 143.23030090]
[118.23056793 146.77690125]
[117.36747742 149.83004761]
[115.70906830 152.09010315]
[117.26959229 167.00869751]
[118.94113159 181.91528320]
[120.72360229 196.80899048]
[122.50606537 211.70271301]
[124.39936066 226.58274841]
[126.40337372 241.44827271]
[128.40737915 256.31381226]
[130.41139221 271.17932129]
[132.41540527 286.04486084]
[134.41943359 300.91040039]
[136.42344666 315.77590942]
[148.70771790 325.35369873]
[150.52830505 340.45800781]
[141.32164001 352.11016846]
[143.32565308 366.97570801]
[145.32966614 381.84124756]
[147.33367920 396.70675659]
[149.33769226 411.57229614]
[152.65995789 426.19976807]
[157.27397156 440.47247314]
[161.88796997 454.74520874]
[166.50198364 469.01794434]
[181.14071655 465.69921875]
[196.01799011 463.70608521]
[211.01405334 463.05456543]
[226.00814819 463.74990845]
[240.87953186 465.78652954]
[255.50849915 469.14804077]
[269.77725220 473.80734253]
[283.57089233 479.72695923]
[296.77835083 486.85919189]
[309.29333496 495.14663696]
[321.01504517 504.52255249]
[331.84909058 514.91149902]
[341.70825195 526.22973633]
[350.51315308 538.38623047]
[358.19293213 551.28302002]
[364.68566895 564.81628418]
[369.93917847 578.87713623]
[373.91110229 593.35229492]
[376.56951904 608.12524414]
[377.89294434 623.07696533]
[377.87078857 638.08715820]
[376.50317383 653.03491211]
[373.80117798 667.79992676]
[369.78649902 682.26330566]
[364.49151611 696.30853271]
[357.95880127 709.82263184]
[350.24099731 722.69665527]
[341.40020752 734.82708740]
[331.50765991 746.11621094]
[320.64297485 756.47308350]
[308.89364624 765.81433105]
[296.35424805 774.06475830]
[283.12576294 781.15795898]
[269.31469727 787.03680420]
[255.03225708 791.65399170]
[240.39343262 794.97222900]
[225.51608276 796.96496582]
[210.52000427 797.61602783]
[195.52593994 796.92016602]
[180.65460205 794.88311768]
[166.02574158 791.52117920]
[151.75714111 786.86145020]
[137.96368408 780.94140625]
[124.75642395 773.80877686]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 166]
[25 165]
[26 164]
[27 163]
[40 162]
[41 161]
[42 160]
[43 159]
[44 158]
[47 155]
[48 154]
[49 153]
[50 152]
[51 151]
[52 150]
[53 149]
[55 148]
[56 147]
[57 146]
[59 145]
[60 144]
[61 139]
[62 138]
[63 137]
[69 136]
[70 135]
[71 134]
[73 132]
[74 131]
[75 128]
[76 127]
[77 124]
[78 123]
[80 122]
[81 121]
[82 120]
[83 119]
[84 114]
[85 113]
[86 112]
[87 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
