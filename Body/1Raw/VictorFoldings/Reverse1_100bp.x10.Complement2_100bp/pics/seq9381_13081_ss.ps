%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAGACUCCAUUAUUUAUCCUAAUAGGGCAUAGCUUCCGGAAAAACCUGUCCACCACACACCACCGGAACCAUACACGAAAGAGCACAAUGUAGCGxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[65.70230103 621.92425537]
[53.08064651 630.04779053]
[39.79041672 637.02398682]
[25.93563080 642.79827881]
[11.62472534 647.32550049]
[-3.03029752 650.57019043]
[-17.91473961 652.50695801]
[-32.91210556 653.12060547]
[-47.90502167 652.40643311]
[-62.77614594 650.36993408]
[-77.40908813 647.02703857]
[-91.68932343 642.40399170]
[-105.50508118 636.53698730]
[-118.74824524 629.47180176]
[-131.31515503 621.26385498]
[-143.10746765 611.97735596]
[-154.03289795 601.68499756]
[-164.00590515 590.46734619]
[-172.94847107 578.41210938]
[-180.79057312 565.61370850]
[-187.47087097 552.17230225]
[-192.93704224 538.19311523]
[-197.14634705 523.78546143]
[-200.06581116 509.06219482]
[-201.67260742 494.13854980]
[-201.95413208 479.13125610]
[-200.90820312 464.15783691]
[-198.54299927 449.33544922]
[-194.87704468 434.78009033]
[-189.93901062 420.60568237]
[-183.76756287 406.92318726]
[-176.41098022 393.83966064]
[-167.92686462 381.45751953]
[-158.38160706 369.87368774]
[-147.84989929 359.17877197]
[-136.41418457 349.45654297]
[-124.16395569 340.78305054]
[-111.19509888 333.22616577]
[-97.60910797 326.84506226]
[-83.51231384 321.68966675]
[-69.01504517 317.80035400]
[-54.23076630 315.20751953]
[-39.27518845 313.93148804]
[-24.26535416 313.98223877]
[-9.31874657 315.35937500]
[5.44766045 318.05212402]
[19.91829491 322.03939819]
[25.16501427 307.98693848]
[30.41173172 293.93444824]
[35.65845108 279.88198853]
[40.90516663 265.82952881]
[46.15188599 251.77703857]
[51.39860535 237.72457886]
[45.00135803 224.32267761]
[50.12209320 209.99673462]
[64.22261047 203.37757874]
[69.46932983 189.32510376]
[74.71604919 175.27264404]
[79.96276855 161.22016907]
[83.93486023 146.75564575]
[75.25767517 134.70401001]
[77.75089264 119.69606018]
[90.45059204 110.67633820]
[85.90407562 97.45435333]
[94.78819275 86.65786743]
[97.45398712 71.89665222]
[100.11978149 57.13543320]
[102.78558350 42.37421799]
[105.45137787 27.61299896]
[93.84181976 17.65481377]
[88.80871582 3.31728625]
[91.60928345 -11.51589298]
[101.39299011 -22.87965393]
[115.45639038 -27.78742981]
[118.12218475 -42.54864883]
[117.89885712 -57.54698563]
[114.79474640 -72.22229004]
[111.69063568 -86.89759064]
[108.47736359 -101.54937744]
[105.15510559 -116.17683411]
[101.83284760 -130.80429077]
[98.51058960 -145.43176270]
[95.18832397 -160.05921936]
[91.86606598 -174.68667603]
[76.80609894 -174.58004761]
[62.07539368 -177.71380615]
[48.36293793 -183.94137573]
[36.31008530 -192.97148132]
[26.48056793 -204.38175964]
[19.33413506 -217.63856506]
[15.20503616 -232.12181091]
[14.28639507 -247.15411377]
[16.62118149 -262.03237915]
[22.10018921 -276.06072998]
[30.46715736 -288.58303833]
[41.33074951 -299.01358032]
[54.18285370 -306.86453247]
[68.42234802 -311.76870728]
[83.38323975 -313.49667358]
[98.36576843 -311.96765137]
[112.66917419 -307.25314331]
[125.62447357 -299.57366943]
[136.62570190 -289.28839111]
[145.15834045 -276.87838745]
[150.82327271 -262.92407227]
[153.35556030 -248.07815552]
[152.63674927 -233.03497314]
[148.70048523 -218.49812317]
[141.73083496 -205.14753723]
[132.05381775 -193.60763550]
[120.12201691 -184.41816711]
[106.49353027 -178.00894165]
[109.81578827 -163.38148499]
[113.13804626 -148.75401306]
[116.46030426 -134.12655640]
[119.78256226 -119.49909973]
[123.10482788 -104.87163544]
[127.65171814 -99.04518127]
[126.36594391 -90.00170135]
[129.47004700 -75.32640076]
[132.57415771 -60.65109634]
[136.27529907 -75.18730927]
[143.07739258 -88.55635834]
[152.64857483 -100.10593414]
[164.52182007 -109.27250671]
[178.11781311 -115.60881805]
[192.77317810 -118.80570984]
[207.77285767 -118.70719147]
[222.38497925 -115.31806946]
[235.89656067 -108.80371857]
[247.64837646 -99.48197937]
[257.06701660 -87.80767822]
[263.69293213 -74.35043335]
[267.20278931 -59.76685715]
[267.42538452 -44.76850891]
[264.34985352 -30.08719254]
[258.12622070 -16.43924332]
[249.05819702 -4.49057579]
[237.58818054 5.17581034]
[224.27586365 12.08826923]
[209.77076721 15.90952778]
[194.78062439 16.45313644]
[180.03683472 13.69257450]
[166.25877380 7.76253223]
[154.11872864 -1.04764795]
[144.20903015 -12.30809879]
[137.01318359 -25.46939850]
[132.88340759 -39.88285065]
[130.21760559 -25.12163544]
[141.67599487 -15.60476208]
[146.86685181 -1.53667676]
[144.30213928 13.33909702]
[134.57197571 25.01045799]
[120.21259308 30.27879524]
[117.54679871 45.04001236]
[114.88100433 59.80123138]
[112.21520996 74.56244659]
[109.54940796 89.32366180]
[114.09592438 102.54564667]
[105.21180725 113.34213257]
[113.95435333 126.23420715]
[111.04058075 141.16619873]
[98.69608307 149.42143250]
[108.93612671 138.46054077]
[122.88626099 132.94749451]
[137.85293579 133.94679260]
[150.94631958 141.26548767]
[159.63829041 153.49044800]
[162.25054932 168.26123047]
[158.27873230 182.72583008]
[148.48971558 194.09135437]
[134.77360535 200.16329956]
[119.77877808 199.76927185]
[106.40050507 192.98535156]
[97.22190094 181.12139893]
[94.01523590 166.46688843]
[88.76851654 180.51936340]
[83.52180481 194.57182312]
[78.27508545 208.62429810]
[84.58728790 222.86486816]
[79.06618500 237.04133606]
[65.45107269 242.97129822]
[60.20435715 257.02377319]
[54.95763779 271.07623291]
[49.71092224 285.12869263]
[44.46420288 299.18118286]
[39.21748352 313.23364258]
[33.97076797 327.28613281]
[47.51367569 333.75814819]
[60.43157959 341.40179443]
[72.62338257 350.15722656]
[83.99366760 359.95593262]
[94.45343018 370.72119141]
[103.92082977 382.36877441]
[112.32174683 394.80749512]
[119.59044647 407.94003296]
[125.67003632 421.66360474]
[130.51292419 435.87078857]
[134.08123779 450.45037842]
[136.34701538 465.28829956]
[137.29252625 480.26843262]
[136.91040039 495.27346802]
[135.20359802 510.18603516]
[132.18550110 524.88940430]
[127.87970734 539.26843262]
[122.31993103 553.21069336]
[115.54968262 566.60705566]
[107.62194824 579.35260010]
[98.59877014 591.34759521]
[88.55078125 602.49816895]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 188]
[48 187]
[49 186]
[50 185]
[51 184]
[52 183]
[53 182]
[56 179]
[57 178]
[58 177]
[59 176]
[60 163]
[63 160]
[65 158]
[66 157]
[67 156]
[68 155]
[69 154]
[74 149]
[75 148]
[76 121]
[77 120]
[78 119]
[79 117]
[80 116]
[81 115]
[82 114]
[83 113]
[84 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
