%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[59.66036606 674.11297607]
[47.85806656 683.69287109]
[33.28667831 688.02215576]
[18.16822815 686.44073486]
[4.80817270 679.18975830]
[-4.75617886 667.37481689]
[-9.06633091 652.79779053]
[-7.46501780 637.68139648]
[-0.19642669 624.33093262]
[11.63103390 614.78210449]
[26.21376419 610.49114990]
[27.77428627 595.57250977]
[29.33481026 580.65393066]
[30.89533234 565.73529053]
[23.52420807 556.14404297]
[24.70220947 543.70233154]
[34.34081650 535.13140869]
[28.17073250 521.57489014]
[37.49309921 508.79193115]
[39.27556610 493.89822388]
[32.04805756 484.19824219]
[33.41116714 471.77545166]
[43.17631531 463.34902954]
[45.18032837 448.48348999]
[39.21276474 434.83660889]
[48.72441864 422.19384766]
[50.72843170 407.32833862]
[52.73244476 392.46279907]
[54.73645782 377.59725952]
[56.74047089 362.73175049]
[58.74448776 347.86621094]
[60.63777924 332.98617554]
[62.42024612 318.09246826]
[64.20271301 303.19873047]
[65.98517609 288.30502319]
[67.76763916 273.41131592]
[65.57242584 269.16983032]
[66.01836395 263.50430298]
[69.83132935 258.10311890]
[72.05644989 243.26908875]
[74.28156281 228.43504333]
[76.50668335 213.60099792]
[78.62130737 198.75080872]
[80.62532043 183.88526917]
[82.62933350 169.01974487]
[84.63334656 154.15422058]
[86.63735962 139.28868103]
[84.41567230 132.23986816]
[88.78347015 124.21738434]
[91.00858307 109.38334656]
[92.79105377 94.48962402]
[94.12928772 79.54943848]
[95.46752167 64.60925293]
[96.80575562 49.66907120]
[94.83974457 45.79753876]
[94.26570892 41.89433289]
[94.92267609 38.40093994]
[96.52283478 35.66121292]
[98.69435883 33.88846970]
[100.91947937 19.05442619]
[98.85903168 12.77222347]
[100.09497833 7.22520161]
[103.43803406 3.81447792]
[106.10382843 -10.94673920]
[108.76962280 -25.70795631]
[111.43541718 -40.46917343]
[114.10121155 -55.23039246]
[107.40150452 -66.25203705]
[109.92573547 -78.49180603]
[119.78654480 -85.49830627]
[122.67182159 -100.21820068]
[125.55709076 -114.93808746]
[128.44236755 -129.65797424]
[131.32763672 -144.37786865]
[126.38930511 -159.40863037]
[136.43023682 -170.40994263]
[139.31550598 -185.12983704]
[134.37716675 -200.16058350]
[144.41809082 -211.16191101]
[147.30337524 -225.88180542]
[150.18864441 -240.60169983]
[145.25030518 -255.63244629]
[155.29122925 -266.63375854]
[156.18405151 -281.60717773]
[155.06840515 -296.56561279]
[153.95275879 -311.52407837]
[152.83711243 -326.48254395]
[141.14468384 -336.77453613]
[140.22634888 -351.96041870]
[150.11024475 -363.04391479]
[148.99459839 -378.00238037]
[147.87893677 -392.96081543]
[144.93855286 -397.27374268]
[144.03672791 -401.82785034]
[144.92396545 -405.80627441]
[147.06272888 -408.60949707]
[146.61611938 -423.60287476]
[132.39292908 -428.96655273]
[121.30843353 -439.36859131]
[115.05294037 -453.22274780]
[114.58036804 -468.41632080]
[119.96277618 -482.63244629]
[130.37937927 -493.70324707]
[144.24174500 -499.94052124]
[159.43594360 -500.39309692]
[173.64497375 -494.99200439]
[184.70205688 -484.56085205]
[190.92108154 -470.69027710]
[191.35368347 -455.49551392]
[185.93389893 -441.29360962]
[175.48818970 -430.25024414]
[161.60946655 -424.04946899]
[162.05607605 -409.05612183]
[162.83740234 -394.07647705]
[163.95304871 -379.11801147]
[165.06869507 -364.15957642]
[176.48738098 -354.66488647]
[177.83189392 -339.51077271]
[167.79556274 -327.59817505]
[168.91120911 -312.63973999]
[170.02685547 -297.68127441]
[171.14250183 -282.72280884]
[177.14118958 -296.47113037]
[187.04762268 -307.73446655]
[199.91757202 -315.43927002]
[214.52438354 -318.85119629]
[229.47581482 -317.64501953]
[243.34678650 -311.93569946]
[254.81520081 -302.26745605]
[262.78799438 -289.56173706]
[266.50518799 -275.02963257]
[265.61254883 -260.05621338]
[260.19512939 -246.06867981]
[250.76928711 -234.40019226]
[238.23342896 -226.16294861]
[223.78239441 -222.14205933]
[208.79356384 -222.72077942]
[194.69557190 -227.84393311]
[182.83216858 -237.02323914]
[174.33407593 -249.38375854]
[170.01112366 -263.74850464]
[175.15583801 -249.77061462]
[164.90853882 -237.71641541]
[162.02325439 -222.99653625]
[159.13798523 -208.27664185]
[164.28269958 -194.29875183]
[154.03540039 -182.24456787]
[151.15011597 -167.52467346]
[156.29483032 -153.54678345]
[146.04753113 -141.49259949]
[143.16226196 -126.77270508]
[140.27697754 -112.05281830]
[137.39170837 -97.33292389]
[134.50643921 -82.61303711]
[141.08007812 -66.34176636]
[128.86242676 -52.56459427]
[126.19663239 -37.80337906]
[123.53083801 -23.04216194]
[120.86504364 -8.28094387]
[118.19924927 6.48027325]
[115.75352478 21.27954483]
[113.52840424 36.11358643]
[111.74594116 51.00730515]
[110.40770721 65.94748688]
[109.06947327 80.88767242]
[107.73123932 95.82785797]
[109.48027039 98.32393646]
[110.35974121 101.51157379]
[110.11175537 105.06993866]
[108.60055542 108.58740234]
[105.84262848 111.60845947]
[103.61751556 126.44250488]
[101.50289154 141.29270935]
[99.49887085 156.15823364]
[97.49485779 171.02375793]
[95.49084473 185.88928223]
[93.48683167 200.75482178]
[95.44167328 209.67761230]
[91.34072113 215.82611084]
[89.11560822 230.66015625]
[86.89048767 245.49420166]
[84.66537476 260.32824707]
[82.66136169 275.19378662]
[80.87889099 290.08749390]
[79.09642792 304.98120117]
[77.31396484 319.87493896]
[75.53149414 334.76864624]
[77.61896515 343.66134644]
[73.61001587 349.87023926]
[71.60600281 364.73574829]
[69.60198975 379.60128784]
[67.59797668 394.46679688]
[65.59396362 409.33233643]
[63.58994675 424.19787598]
[69.41416931 438.90805054]
[60.04585648 450.48748779]
[58.04184341 465.35302734]
[65.42926025 482.22036743]
[54.16928482 495.68069458]
[52.38681793 510.57440186]
[58.42940521 525.19622803]
[49.23453140 536.91387939]
[56.87226486 553.66937256]
[45.81393814 567.29583740]
[44.25341415 582.21441650]
[42.69289017 597.13305664]
[41.13237000 612.05163574]
[54.51145554 619.26751709]
[64.10685730 631.05718994]
[68.45534515 645.62286377]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 207]
[12 206]
[13 205]
[14 204]
[17 202]
[19 200]
[20 199]
[23 197]
[24 196]
[26 194]
[27 193]
[28 192]
[29 191]
[30 190]
[31 189]
[32 187]
[33 186]
[34 185]
[35 184]
[36 183]
[39 182]
[40 181]
[41 180]
[42 179]
[43 177]
[44 176]
[45 175]
[46 174]
[47 173]
[49 172]
[50 171]
[51 166]
[52 165]
[53 164]
[54 163]
[59 162]
[60 161]
[63 160]
[64 159]
[65 158]
[66 157]
[67 156]
[70 154]
[71 153]
[72 152]
[73 151]
[74 150]
[76 148]
[77 147]
[79 145]
[80 144]
[81 143]
[83 141]
[84 122]
[85 121]
[86 120]
[87 119]
[90 116]
[91 115]
[92 114]
[96 113]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
