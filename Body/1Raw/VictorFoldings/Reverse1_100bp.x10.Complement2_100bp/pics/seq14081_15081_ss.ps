%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAUAACAUUAACUCUAACGAGCCCCCUUAUCCAAUACACUAAUCCUCAUCCCAAUCCUACUCACCCUUCUUCUUUCUCUCCUUCAUUUCAAAUUAAUACxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[80.55355835 511.52154541]
[68.58259583 502.45736694]
[57.68145370 492.13125610]
[47.98244476 480.66860962]
[39.60331726 468.20852661]
[32.64577866 454.90231323]
[27.19429207 440.91143799]
[23.31503296 426.40576172]
[21.05508995 411.56137085]
[20.44189835 396.55847168]
[21.48290253 381.57916260]
[24.16546249 366.80529785]
[28.45701599 352.41622925]
[34.30546951 338.58657837]
[41.63982391 325.48428345]
[50.37105179 313.26834106]
[60.39316177 302.08709717]
[71.58449554 292.07623291]
[83.80919647 283.35729980]
[96.91886902 276.03613281]
[110.75437927 270.20156860]
[125.14777374 265.92449951]
[122.48197937 251.16328430]
[119.81618500 236.40206909]
[117.15039062 221.64085388]
[114.37477875 206.89988708]
[111.48950195 192.17999268]
[108.60423279 177.46011353]
[105.60945892 162.76210022]
[102.50534821 148.08679199]
[99.40123749 133.41149902]
[96.29712677 118.73619843]
[84.21060181 110.74481964]
[81.21212769 96.56894684]
[89.02757263 84.36791229]
[85.92346191 69.69261169]
[82.81935120 55.01731110]
[79.71524048 40.34200668]
[64.26301575 40.55927277]
[49.06821060 37.76766205]
[34.71091843 32.07558823]
[21.73888206 23.70215225]
[10.64662170 12.96872139]
[1.85658252 0.28658441]
[-4.29696321 -13.85880280]
[-7.58062172 -28.92639732]
[-7.87072897 -44.34027100]
[-5.15801096 -59.51161194]
[0.45213509 -73.86122894]
[8.74373150 -86.84165955]
[19.39853668 -97.95806122]
[32.00825882 -106.78705597]
[46.09019852 -112.99287415]
[42.76793671 -127.62033081]
[39.44567871 -142.24778748]
[35.47358322 -156.71231079]
[30.85957336 -170.98504639]
[26.24556351 -185.25778198]
[21.63155556 -199.53051758]
[10.02445126 -210.28160095]
[13.47169685 -224.77178955]
[8.85768700 -239.04452515]
[-5.79516315 -235.78439331]
[-20.68891335 -233.91072083]
[-35.69267654 -233.43997192]
[-50.67459106 -234.37626648]
[-65.50299835 -236.71141052]
[-80.04757690 -240.42485046]
[-94.18051147 -245.48396301]
[-107.77759552 -251.84429932]
[-120.71932983 -259.44995117]
[-132.89199829 -268.23406982]
[-144.18859863 -278.11947632]
[-154.50985718 -289.01928711]
[-163.76509094 -300.83770752]
[-171.87295532 -313.47088623]
[-178.76217651 -326.80780029]
[-184.37223816 -340.73123169]
[-188.65380859 -355.11880493]
[-191.56929016 -369.84411621]
[-193.09303284 -384.77770996]
[-193.21166992 -399.78839111]
[-191.92413330 -414.74420166]
[-189.24176025 -429.51376343]
[-185.18812561 -443.96722412]
[-179.79884338 -457.97756958]
[-173.12126160 -471.42169189]
[-165.21409607 -484.18142700]
[-156.14682007 -496.14468384]
[-145.99911499 -507.20623779]
[-134.86015320 -517.26898193]
[-122.82785797 -526.24438477]
[-110.00794983 -534.05364990]
[-96.51309204 -540.62805176]
[-82.46188354 -545.90991211]
[-67.97781372 -549.85278320]
[-53.18816757 -552.42199707]
[-38.22291946 -553.59497070]
[-23.21359253 -553.36145020]
[-8.29208755 -551.72338867]
[6.41045952 -548.69525146]
[20.76484108 -544.30364990]
[34.64490509 -538.58715820]
[47.92867279 -531.59606934]
[60.49940491 -523.39172363]
[72.24662018 -514.04626465]
[83.06709290 -503.64184570]
[92.86571503 -492.26986694]
[101.55638123 -480.03033447]
[109.06272125 -467.03073120]
[115.31876373 -453.38534546]
[120.26953125 -439.21411133]
[123.87150574 -424.64151001]
[126.09304047 -409.79565430]
[126.91461182 -394.80700684]
[126.32900238 -379.80731201]
[124.34134674 -364.92834473]
[120.96913147 -350.30087280]
[116.24197388 -336.05346680]
[110.20142365 -322.31134033]
[102.90057373 -309.19522095]
[94.40357971 -296.82043457]
[84.78511047 -285.29571533]
[74.12970734 -274.72229004]
[62.53099823 -265.19317627]
[50.09092712 -256.79202271]
[36.91881561 -249.59272766]
[23.13042068 -243.65853882]
[27.74443054 -229.38580322]
[39.02150726 -219.65560913]
[35.90428925 -204.14453125]
[40.51829910 -189.87179565]
[45.13230515 -175.59906006]
[49.74631500 -161.32632446]
[57.52256393 -174.15324402]
[72.05776215 -177.85839844]
[85.02548218 -170.31929016]
[88.99723053 -155.85466003]
[81.69780731 -142.75053406]
[67.30865479 -138.51351929]
[54.07313919 -145.57005310]
[57.39539719 -130.94259644]
[60.71765900 -116.31513214]
[75.28332520 -116.85074615]
[89.70223236 -114.69181824]
[103.48004913 -109.91082001]
[116.14413452 -102.67015076]
[127.25976562 -93.21660614]
[136.44505310 -81.87299347]
[143.38406372 -69.02706909]
[147.83764648 -55.11831665]
[149.65176392 -40.62289047]
[148.76274109 -26.03732872]
[145.19952393 -11.86154366]
[139.08271790 1.41832280]
[130.62059021 13.34656334]
[120.10185242 23.51354218]
[107.88591003 31.56976700]
[94.39054108 37.23789978]
[97.49465179 51.91320038]
[100.59876251 66.58850098]
[103.70287323 81.26380157]
[115.78939819 89.25518036]
[118.78787231 103.43105316]
[110.97242737 115.63208771]
[114.07653809 130.30738831]
[117.18064880 144.98269653]
[120.28475952 159.65798950]
[125.12232208 167.40626526]
[123.32411957 174.57482910]
[126.20939636 189.29472351]
[129.09466553 204.01461792]
[133.81632996 211.83406067]
[131.91160583 218.97505188]
[134.57739258 233.73626709]
[137.24319458 248.49749756]
[139.90899658 263.25869751]
[154.88922119 262.23107910]
[169.89157104 262.85766602]
[184.73393250 265.13082886]
[199.23614502 269.02304077]
[213.22213745 274.48699951]
[226.52215576 281.45642090]
[238.97474670 289.84664917]
[250.42874146 299.55590820]
[260.74511719 310.46624756]
[269.79861450 322.44528198]
[277.47933960 335.34759521]
[283.69406128 349.01657104]
[288.36734009 363.28622437]
[291.44244385 377.98339844]
[292.88201904 392.92968750]
[292.66864014 407.94360352]
[290.80487061 422.84289551]
[287.31335449 437.44674683]
[282.23645020 451.57785034]
[275.63577271 465.06469727]
[267.59149170 477.74349976]
[258.20123291 489.46041870]
[247.57896423 500.07321167]
[235.85368347 509.45300293]
[223.16767883 517.48596191]
[209.67497253 524.07458496]
[195.53933716 529.13891602]
[180.93238831 532.61743164]
[166.03141785 534.46789551]
[151.01731873 534.66784668]
[136.07234192 533.21490479]
[121.37791443 530.12670898]
[107.11241150 525.44067383]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 177]
[23 176]
[24 175]
[25 174]
[26 172]
[27 171]
[28 170]
[29 168]
[30 167]
[31 166]
[32 165]
[35 162]
[36 161]
[37 160]
[38 159]
[53 143]
[54 142]
[55 141]
[56 134]
[57 133]
[58 132]
[59 131]
[61 129]
[62 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
