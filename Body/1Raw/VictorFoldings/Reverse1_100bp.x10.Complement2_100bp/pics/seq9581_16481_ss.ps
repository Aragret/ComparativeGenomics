%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[109.61003113 703.24298096]
[95.76067352 697.45831299]
[82.44394684 690.53509521]
[69.75324249 682.52178955]
[57.77759171 673.47467041]
[46.60099030 663.45721436]
[36.30183411 652.53961182]
[26.95236969 640.79846191]
[18.61817360 628.31616211]
[11.35770702 615.18023682]
[5.22189856 601.48291016]
[0.25378624 587.32006836]
[-3.51178169 572.79125977]
[-6.04839182 557.99829102]
[-7.33825159 543.04492188]
[-7.37231302 528.03607178]
[-6.15033770 513.07702637]
[-3.68089676 498.27270508]
[0.01868830 483.72692871]
[4.92246675 469.54174805]
[10.99604225 455.81665039]
[18.19681168 442.64791870]
[26.47426605 430.12789917]
[35.77034378 418.34448242]
[46.01984024 407.38024902]
[57.15085983 397.31213379]
[69.08532715 388.21075439]
[81.73952484 380.13995361]
[95.02469635 373.15634155]
[108.84764862 367.30889893]
[123.11142731 362.63867188]
[137.71597290 359.17837524]
[135.49085999 344.34432983]
[133.26574707 329.51028442]
[131.04063416 314.67623901]
[128.81550598 299.84219360]
[126.59039307 285.00814819]
[124.36528015 270.17410278]
[121.80944824 255.39346313]
[118.92417145 240.67356873]
[116.03890228 225.95367432]
[113.15362549 211.23377991]
[99.10765839 209.46624756]
[86.27478790 203.43809509]
[75.91530609 193.72669983]
[69.05111694 181.27188110]
[66.36492920 167.28494263]
[68.13237762 153.13085938]
[74.19380951 140.19512939]
[83.96860504 129.74809265]
[96.51075745 122.82016754]
[93.84496307 108.05895233]
[89.42723083 101.31683350]
[91.25107574 93.05822754]
[88.80535126 78.25895691]
[86.35961914 63.45969009]
[83.91389465 48.66041946]
[81.46817017 33.86114883]
[78.59529114 30.60530090]
[77.06210327 26.97021294]
[76.82332611 23.42361069]
[77.68641663 20.37046623]
[79.34481812 18.11041451]
[77.78429413 3.19181037]
[76.22377777 -11.72679424]
[74.66325378 -26.64539909]
[73.10272980 -41.56400299]
[61.94361496 -56.21172333]
[69.70925140 -71.94899750]
[67.92678833 -86.84271240]
[56.55083084 -101.32266998]
[64.08130646 -117.17381287]
[62.07728958 -132.03933716]
[60.07327652 -146.90487671]
[58.06926346 -161.77040100]
[56.06525040 -176.63592529]
[41.04682922 -176.47254944]
[26.12216949 -178.15605164]
[11.51752472 -181.66088867]
[-2.54570389 -186.93395996]
[-15.85432053 -193.89530945]
[-28.20657158 -202.43939209]
[-39.41519547 -212.43670654]
[-49.31027985 -223.73568726]
[-57.74180984 -236.16505432]
[-64.58197021 -249.53636169]
[-69.72706604 -263.64691162]
[-73.09909821 -278.28277588]
[-74.64694977 -293.22213745]
[-74.34714508 -308.23843384]
[-72.20424652 -323.10409546]
[-68.25072479 -337.59371948]
[-62.54652023 -351.48767090]
[-55.17810822 -364.57528687]
[-46.25719070 -376.65820312]
[-35.91900635 -387.55322266]
[-24.32027817 -397.09521484]
[-11.63684177 -405.13946533]
[1.93902481 -411.56405640]
[16.20151520 -416.27160645]
[30.93441582 -419.19073486]
[45.91437531 -420.27716064]
[60.91430664 -419.51446533]
[75.70681000 -416.91421509]
[90.06764221 -412.51577759]
[103.77908325 -406.38586426]
[116.63328552 -398.61737061]
[128.43537903 -389.32812500]
[139.00643921 -378.65890503]
[148.18621826 -366.77145386]
[155.83554077 -353.84600830]
[161.83847046 -340.07849121]
[166.10398865 -325.67761230]
[168.56742859 -310.86172485]
[169.19145203 -295.85537720]
[167.96658325 -280.88610840]
[164.91142273 -266.18081665]
[160.07225037 -251.96243286]
[153.52244568 -238.44653320]
[145.36129761 -225.83798218]
[135.71253967 -214.32794189]
[124.72242737 -204.09091187]
[112.55757904 -195.28204346]
[99.40239716 -188.03491211]
[85.45632935 -182.45936584]
[70.93077850 -178.63993835]
[72.93479156 -163.77441406]
[74.93880463 -148.90888977]
[76.94281769 -134.04336548]
[78.94683075 -119.17783356]
[88.37312317 -111.59682465]
[90.16436005 -99.22850800]
[82.82050323 -88.62518311]
[84.60297394 -73.73146057]
[93.91534424 -66.01095581]
[95.52223969 -53.61734390]
[88.02133179 -43.12452698]
[89.58185577 -28.20592308]
[91.14237976 -13.28731728]
[92.70290375 1.63128734]
[94.26342773 16.54989243]
[96.26744080 31.41542053]
[98.71316528 46.21469116]
[101.15888977 61.01396179]
[103.60462189 75.81323242]
[106.05034637 90.61250305]
[108.60617828 105.39315796]
[111.27197266 120.15437317]
[126.98760986 122.77329254]
[140.83303833 130.60203552]
[151.14332581 142.67807007]
[156.68583679 157.52937317]
[156.80769348 173.35391235]
[151.51251221 188.23823547]
[141.45783997 200.38890076]
[127.87351990 208.34851074]
[130.75878906 223.06840515]
[133.64405823 237.78829956]
[136.52934265 252.50819397]
[139.96139526 256.44113159]
[141.39801025 260.85580444]
[140.98980713 264.91146851]
[139.19932556 267.94900513]
[141.42443848 282.78305054]
[143.64955139 297.61709595]
[145.87467957 312.45114136]
[148.09979248 327.28515625]
[150.32490540 342.11920166]
[152.55001831 356.95324707]
[167.52706909 355.97628784]
[182.53335571 356.25601196]
[197.46359253 357.79043579]
[212.21307373 360.56881714]
[226.67832947 364.57168579]
[240.75788879 369.77093506]
[254.35301208 376.13012695]
[267.36834717 383.60461426]
[279.71255493 392.14199829]
[291.29907227 401.68237305]
[302.04666138 412.15884399]
[311.87985229 423.49789429]
[320.72976685 435.62002563]
[328.53424072 448.44018555]
[335.23861694 461.86843872]
[340.79577637 475.81063843]
[345.16680908 490.16891479]
[348.32104492 504.84262085]
[350.23632812 519.72882080]
[350.89923096 534.72302246]
[350.30511475 549.72015381]
[348.45816040 564.61492920]
[345.37130737 579.30297852]
[341.06619263 593.68115234]
[335.57305908 607.64868164]
[328.93038940 621.10760498]
[321.18481445 633.96343994]
[312.39062500 646.12603760]
[302.60952759 657.51007080]
[291.91015625 668.03576660]
[280.36752319 677.62921143]
[268.06262207 686.22314453]
[255.08172607 693.75726318]
[241.51593018 700.17877197]
[227.46035767 705.44256592]
[213.01362610 709.51177979]
[198.27705383 712.35778809]
[183.35400391 713.96069336]
[168.34918213 714.30926514]
[153.36779785 713.40106201]
[138.51496887 711.24237061]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 169]
[33 168]
[34 167]
[35 166]
[36 165]
[37 164]
[38 163]
[39 159]
[40 158]
[41 157]
[42 156]
[51 148]
[52 147]
[54 146]
[55 145]
[56 144]
[57 143]
[58 142]
[63 141]
[64 140]
[65 139]
[66 138]
[67 137]
[69 134]
[70 133]
[72 130]
[73 129]
[74 128]
[75 127]
[76 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
