%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGCUGACACUCACGCAAGCAUCAAACUCAAACGAUCCGUCUUAUCAUUACUCCUACAUUCGGGCACCCGCUAAUACUCUUACUGACGCGGCCACUUCGxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[4.97125864 424.99731445]
[10.09476852 439.15936279]
[12.05362225 454.09179688]
[10.75620079 469.09616089]
[6.26318645 483.47067261]
[-1.21527421 496.54302979]
[-11.32940006 507.70181274]
[-23.60613441 516.42510986]
[-37.47127151 522.30493164]
[-52.27631760 525.06622314]
[-67.32881165 524.57983398]
[-81.92471313 520.86859131]
[-95.38136292 514.10595703]
[-107.06935120 504.60833740]
[-116.44202423 492.81991577]
[-123.06099701 479.29202271]
[-126.61668396 464.65744019]
[-126.94278717 449.60061646]
[-124.02405548 434.82580566]
[-117.99699402 421.02404785]
[-109.14350891 408.84088135]
[-97.87768555 398.84609985]
[-84.72645569 391.50723267]
[-70.30491638 387.16748047]
[-55.28760147 386.02984619]
[-40.37688446 388.14755249]
[-35.13016891 374.09509277]
[-29.88344955 360.04260254]
[-33.71612167 342.91726685]
[-19.41561890 331.31652832]
[-14.37870216 317.18750000]
[-9.34178543 303.05847168]
[-4.30486965 288.92944336]
[0.73204672 274.80041504]
[-5.86402416 261.49523926]
[-0.95714825 247.09465027]
[13.04325676 240.26629639]
[18.08017349 226.13726807]
[23.11709023 212.00823975]
[11.42908001 221.40985107]
[-3.05138683 225.32342529]
[-17.88409996 223.08946228]
[-30.56948471 215.08439636]
[-38.96982956 202.65724182]
[-41.66953278 187.90219116]
[-38.21364594 173.30572510]
[-29.18454552 161.32760620]
[-16.10379410 153.98635864]
[-1.17572641 152.51910400]
[13.08401394 157.17311096]
[24.27241135 167.16410828]
[30.50402260 180.80841064]
[30.72839737 195.80834961]
[38.38899612 182.91201782]
[46.04959106 170.01570129]
[53.71018982 157.11936951]
[61.37078857 144.22303772]
[69.03138733 131.32672119]
[54.26605988 133.96966553]
[41.87826920 125.51137543]
[38.96430206 110.79714203]
[47.19340897 98.25593567]
[61.85158920 95.07193756]
[74.54196167 103.06908417]
[77.99506378 117.66530609]
[86.77566528 105.50385284]
[88.38666534 91.61514282]
[101.06288147 85.71554565]
[109.84348297 73.55408478]
[118.62408447 61.39263153]
[126.85289001 48.85123062]
[134.51348877 35.95490646]
[136.20567322 26.97858238]
[142.38536072 22.92480659]
[150.23712158 10.14396381]
[158.08888245 -2.63687849]
[165.55661011 -15.64583111]
[172.63372803 -28.87135887]
[179.71083069 -42.09688568]
[186.78793335 -55.32241440]
[193.86503601 -68.54794312]
[200.94213867 -81.77346802]
[194.34437561 -95.69380188]
[197.17533875 -110.65505219]
[208.14347839 -120.95864868]
[222.89900208 -122.80592346]
[229.97610474 -136.03144836]
[237.05320740 -149.25697327]
[244.13031006 -162.48249817]
[251.20742798 -175.70803833]
[257.38317871 -189.37770081]
[262.62991333 -203.43017578]
[267.87661743 -217.48265076]
[273.12335205 -231.53511047]
[259.85601807 -238.58018494]
[247.62179565 -247.29676819]
[236.63002014 -257.53570557]
[227.06877136 -269.12179565]
[219.10166931 -281.85681152]
[212.86503601 -295.52279663]
[208.46557617 -309.88592529]
[205.97857666 -324.70043945]
[205.44659424 -339.71286011]
[206.87873840 -354.66622925]
[210.25050354 -369.30474854]
[215.50418091 -383.37792969]
[222.54988098 -396.64492798]
[231.26704407 -408.87872314]
[241.50651550 -419.87002563]
[253.09306335 -429.43069458]
[265.82846069 -437.39721680]
[279.49472046 -443.63317871]
[293.85809326 -448.03195190]
[308.67272949 -450.51824951]
[323.68515015 -451.04953003]
[338.63845825 -449.61666870]
[353.27682495 -446.24420166]
[367.34973145 -440.98986816]
[380.61639404 -433.94351196]
[392.84979248 -425.22576904]
[403.84057617 -414.98577881]
[413.40072632 -403.39877319]
[421.36660767 -390.66302490]
[427.60195923 -376.99642944]
[432.00006104 -362.63287354]
[434.48562622 -347.81811523]
[435.01617432 -332.80569458]
[433.58261108 -317.85241699]
[430.20947266 -303.21423340]
[424.95443726 -289.14157104]
[417.90747070 -275.87524414]
[409.18914795 -263.64227295]
[398.94863892 -252.65194702]
[387.36117554 -243.09236145]
[374.62503052 -235.12707520]
[360.95816040 -228.89239502]
[346.59439087 -224.49497986]
[331.77951050 -222.01010132]
[316.76702881 -221.48027039]
[301.81384277 -222.91455078]
[287.17581177 -226.28839111]
[281.92910767 -212.23593140]
[276.68237305 -198.18345642]
[271.43566895 -184.13098145]
[284.27557373 -191.88575745]
[299.27233887 -191.57414246]
[311.77905273 -183.29267883]
[317.92034912 -169.60749817]
[315.79327393 -154.75906372]
[306.05697632 -143.34835815]
[291.72830200 -138.91110229]
[277.24716187 -142.82221985]
[267.10070801 -153.86981201]
[264.43295288 -168.63092041]
[257.35583496 -155.40539551]
[250.27873230 -142.17987061]
[243.20162964 -128.95434570]
[236.12452698 -115.72881317]
[242.77392578 -102.42755890]
[240.28656006 -87.58583069]
[229.40960693 -76.93005371]
[214.16767883 -74.69636536]
[207.09056091 -61.47083664]
[200.01345825 -48.24530792]
[192.93635559 -35.01977921]
[185.85925293 -21.79425240]
[178.78215027 -8.56872559]
[179.46461487 -5.84983397]
[179.11122131 -2.69678426]
[177.55120850 0.49723181]
[174.75915527 3.28452206]
[170.86972046 5.21487713]
[163.01795959 17.99571991]
[155.16621399 30.77656174]
[147.40982056 43.61550140]
[139.74922180 56.51182938]
[154.51454163 53.86887741]
[166.90232849 62.32716751]
[169.81629944 77.04140472]
[161.58718872 89.58260345]
[146.92901611 92.76660156]
[134.23863220 84.76945496]
[130.78553772 70.17323303]
[122.00493622 82.33469391]
[113.22433472 94.49614716]
[111.61333466 108.38485718]
[98.93711853 114.28445435]
[90.15651703 126.44591522]
[81.92771149 138.98730469]
[74.26711273 151.88363647]
[66.60651398 164.77996826]
[58.94591904 177.67630005]
[51.28532028 190.57261658]
[43.62472534 203.46894836]
[37.24612045 217.04515076]
[32.20920181 231.17417908]
[27.17228699 245.30320740]
[33.69580841 259.44821167]
[28.38638687 273.70532227]
[14.86107635 279.83734131]
[9.82415962 293.96636963]
[4.78724384 308.09539795]
[-0.24967237 322.22442627]
[-5.28658867 336.35345459]
[-0.47359410 348.31997681]
[-4.95972824 359.98437500]
[-15.83097744 365.28933716]
[-21.07769585 379.34179688]
[-26.32441330 393.39428711]
[-13.67437744 401.56683350]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 209]
[27 208]
[28 207]
[30 204]
[31 203]
[32 202]
[33 201]
[34 200]
[37 197]
[38 196]
[39 195]
[53 194]
[54 193]
[55 192]
[56 191]
[57 190]
[58 189]
[65 188]
[66 187]
[68 185]
[69 184]
[70 183]
[71 176]
[72 175]
[74 174]
[75 173]
[76 172]
[77 167]
[78 166]
[79 165]
[80 164]
[81 163]
[82 162]
[86 158]
[87 157]
[88 156]
[89 155]
[90 154]
[91 144]
[92 143]
[93 142]
[94 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
