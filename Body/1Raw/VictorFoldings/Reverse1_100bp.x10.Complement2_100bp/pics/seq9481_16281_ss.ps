%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAUCGCCCCACUACGGACAACCCCCGGUCACGGGAGGAUUAACCCCCCAUCCCCGAUCCGACCUCACCAUUUUCCGAGUCUUUUUAGGACGCUUCUUUxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[48.00428391 398.06057739]
[49.65565872 413.03955078]
[47.80753326 427.99551392]
[42.55957031 442.12191772]
[34.19479370 454.65695190]
[23.16429710 464.92462158]
[10.06294537 472.37118530]
[-4.40272284 476.59506226]
[-19.45259285 477.36846924]
[-34.27503967 474.64971924]
[-48.07071686 468.58538818]
[-60.09563065 459.50253296]
[-69.70130157 447.89099121]
[-76.36969757 434.37695312]
[-79.74121094 419.68920898]
[-79.63401031 404.61987305]
[-76.05388641 389.98159790]
[-69.19390869 376.56378174]
[-59.42402267 365.09008789]
[-47.27110672 356.17922974]
[-33.39055252 350.31176758]
[-18.53092575 347.80413818]
[-3.49358344 348.79156494]
[0.90741462 334.45172119]
[5.30841255 320.11187744]
[9.70941067 305.77203369]
[14.11040878 291.43218994]
[18.51140594 277.09234619]
[22.91240501 262.75250244]
[27.31340218 248.41264343]
[13.58875465 254.46525574]
[-0.44515574 249.16908264]
[-6.74906683 235.55802917]
[-1.71181190 221.42912292]
[11.78104019 214.87603760]
[26.00017166 219.65267944]
[32.80014038 233.02183533]
[38.46292496 219.13180542]
[44.12571335 205.24177551]
[43.73997879 197.86119080]
[49.97759628 191.18811035]
[49.05356979 186.50247192]
[51.06322479 181.18661499]
[56.23229218 177.06445312]
[62.50965118 163.44113159]
[68.78701019 149.81781006]
[75.06436920 136.19450378]
[81.34173584 122.57118225]
[71.52223206 106.82685852]
[73.13603973 88.34166718]
[85.53523254 74.53708649]
[103.74177551 70.95540619]
[109.40455627 57.06538010]
[115.06734467 43.17535400]
[120.73013306 29.28532600]
[124.80979919 14.85077286]
[127.25552368 0.05150243]
[129.70124817 -14.74776840]
[132.14698792 -29.54703903]
[130.30738831 -34.43201447]
[130.50570679 -39.07032776]
[132.30671692 -42.72702408]
[135.04655457 -44.94638443]
[138.15066528 -59.62168884]
[128.18151855 -69.14044189]
[124.24874115 -82.23822021]
[127.27716064 -95.46313477]
[136.37149048 -105.38468933]
[149.07743835 -109.48360443]
[152.39970398 -124.11106873]
[155.72195435 -138.73852539]
[159.04421997 -153.36598206]
[162.36647034 -167.99345398]
[165.68873596 -182.62091064]
[161.20011902 -197.79202271]
[171.56414795 -208.48951721]
[174.88639832 -223.11697388]
[178.20866394 -237.74443054]
[181.53091431 -252.37190247]
[167.25604248 -257.01333618]
[153.46237183 -262.93365479]
[140.26423645 -270.08377075]
[127.77097321 -278.40444946]
[116.08612823 -287.82675171]
[105.30651855 -298.27258301]
[95.52146149 -309.65536499]
[86.81205750 -321.88082886]
[79.25047302 -334.84759521]
[72.89935303 -348.44830322]
[67.81134796 -362.57015991]
[64.02859497 -377.09622192]
[61.58246231 -391.90606689]
[60.49320602 -406.87698364]
[60.76985550 -421.88494873]
[62.41011810 -436.80557251]
[65.40040588 -451.51519775]
[69.71593475 -465.89196777]
[75.32094574 -479.81674194]
[82.16899109 -493.17410278]
[90.20333099 -505.85342407]
[99.35738373 -517.74957275]
[109.55529022 -528.76397705]
[120.71255493 -538.80548096]
[132.73672485 -547.79071045]
[145.52815247 -555.64532471]
[158.98083496 -562.30413818]
[172.98332214 -567.71209717]
[187.41957092 -571.82427979]
[202.16993713 -574.60668945]
[217.11221313 -576.03619385]
[232.12258911 -576.10101318]
[247.07664490 -574.80059814]
[261.85049438 -572.14569092]
[276.32171631 -568.15832520]
[290.37039185 -562.87152100]
[303.88006592 -556.32904053]
[316.73886108 -548.58520508]
[328.84017944 -539.70416260]
[340.08374023 -529.75946045]
[350.37637329 -518.83349609]
[359.63281250 -507.01681519]
[367.77636719 -494.40737915]
[374.73950195 -481.10961914]
[380.46456909 -467.23379517]
[384.90408325 -452.89480591]
[388.02130127 -438.21154785]
[389.79034424 -423.30566406]
[390.19659424 -408.30065918]
[389.23666382 -393.32086182]
[386.91851807 -378.49044800]
[383.26135254 -363.93228149]
[378.29547119 -349.76699829]
[372.06204224 -336.11196899]
[364.61273193 -323.08035278]
[356.00921631 -310.78015137]
[346.32284546 -299.31329346]
[335.63385010 -288.77474976]
[324.03079224 -279.25192261]
[311.60986328 -270.82363892]
[298.47396851 -263.55981445]
[284.73193359 -257.52059937]
[270.49768066 -252.75605774]
[255.88911438 -249.30564880]
[241.02731323 -247.19798279]
[226.03543091 -246.45051575]
[211.03768921 -247.06944275]
[196.15838623 -249.04963684]
[192.83612061 -234.42218018]
[189.51385498 -219.79472351]
[186.19160461 -205.16725159]
[190.91784668 -191.04238892]
[180.31619263 -179.29864502]
[176.99394226 -164.67118835]
[173.67167664 -150.04373169]
[170.34942627 -135.41625977]
[167.02716064 -120.78880310]
[163.70489502 -106.16134644]
[174.90866089 -94.16329193]
[176.77192688 -77.68634033]
[168.36355591 -63.20183945]
[152.82597351 -56.51757812]
[149.72186279 -41.84227371]
[146.94625854 -27.10131264]
[144.50051880 -12.30204105]
[142.05479431 2.49722981]
[139.60906982 17.29650116]
[149.05796814 5.64668083]
[162.04086304 -1.86628544]
[176.84960938 -4.25393820]
[191.53587341 -1.20214128]
[204.16743469 6.88758945]
[213.08238220 18.95091057]
[217.10780334 33.40068436]
[215.71408081 48.33579636]
[209.08459473 61.79127502]
[198.09155273 71.99681854]
[184.18128967 77.60971069]
[169.18394470 77.89148712]
[155.07266235 72.80506897]
[143.70402527 63.01966476]
[136.57377625 49.82270813]
[134.62016296 34.94811249]
[128.95736694 48.83813858]
[123.29458618 62.72816849]
[117.63179779 76.61819458]
[125.06473541 84.85575867]
[128.89965820 95.26725769]
[128.58607483 106.35813904]
[124.16897583 116.53631592]
[116.28245544 124.34072113]
[106.05860901 128.65104675]
[94.96504974 128.84854126]
[88.68769073 142.47186279]
[82.41033173 156.09518433]
[76.13296509 169.71849060]
[69.85560608 183.34181213]
[63.78177261 197.05708313]
[58.01573944 210.90455627]
[52.35295105 224.79458618]
[46.69016647 238.68461609]
[41.65325165 252.81364441]
[37.25225067 267.15350342]
[32.85125351 281.49334717]
[28.45025635 295.83319092]
[24.04925728 310.17303467]
[19.64826012 324.51287842]
[15.24726200 338.85272217]
[10.84626389 353.19256592]
[23.84860039 360.81069946]
[34.74317932 371.22247314]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 208]
[24 207]
[25 206]
[26 205]
[27 204]
[28 203]
[29 202]
[30 201]
[37 200]
[38 199]
[39 198]
[41 197]
[44 196]
[45 195]
[46 194]
[47 193]
[48 192]
[52 185]
[53 184]
[54 183]
[55 182]
[56 166]
[57 165]
[58 164]
[59 163]
[63 162]
[64 161]
[69 157]
[70 156]
[71 155]
[72 154]
[73 153]
[74 152]
[76 150]
[77 149]
[78 148]
[79 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
