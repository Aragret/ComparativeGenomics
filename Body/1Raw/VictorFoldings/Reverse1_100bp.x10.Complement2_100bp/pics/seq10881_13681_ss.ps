%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAUCCUCAGUCCAUCAAUCAUAAUCCUCCCCCCAACAAUCCCCCAGCCUCCUUUUCCAACCCCUUGUCGAUUUAUCCAACAACAACUAAACCAAUUUUxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[77.94155121 320.04528809]
[80.43827820 334.86798096]
[80.58536530 349.89877319]
[78.37918091 364.76751709]
[73.87405396 379.10803223]
[67.18093109 392.56716919]
[58.46464157 404.81350708]
[47.93982315 415.54547119]
[35.86566544 424.49874878]
[22.53949928 431.45285034]
[8.28949738 436.23657227]
[-6.53342199 438.73208618]
[-21.56422997 438.87792969]
[-36.43278122 436.67050171]
[-50.77292633 432.16421509]
[-64.23152161 425.46997070]
[-76.47713470 416.75268555]
[-87.20821381 406.22695923]
[-96.16049194 394.15206909]
[-103.11351776 380.82534790]
[-107.89605713 366.57495117]
[-110.39034271 351.75180054]
[-110.53494263 336.72097778]
[-108.32630920 321.85263062]
[-103.81881714 307.51284790]
[-97.12347412 294.05480957]
[-88.40515900 281.80990601]
[-77.87857056 271.07971191]
[-65.80293274 262.12841797]
[-52.47562408 255.17649841]
[-38.22483063 250.39512634]
[-23.40150070 247.90206909]
[-8.37066841 247.75871277]
[6.49751902 249.96858215]
[20.83691788 254.47724915]
[27.51711273 241.04687500]
[34.19730759 227.61650085]
[40.87750244 214.18612671]
[47.55769730 200.75573730]
[54.23789215 187.32536316]
[60.51525116 173.70205688]
[66.38420868 159.89787292]
[72.25317383 146.09370422]
[78.12213135 132.28952026]
[83.99109650 118.48534393]
[89.86005402 104.68116760]
[95.62609100 90.83367920]
[101.18531799 76.90188599]
[106.64067078 62.92908478]
[112.09603119 48.95628738]
[117.55138397 34.98348999]
[123.00674438 21.01069260]
[128.46209717 7.03789425]
[133.91744995 -6.93490362]
[139.37281799 -20.90770149]
[144.82817078 -34.88050079]
[133.73937988 -24.77907753]
[120.57894897 -17.58164597]
[106.09116364 -13.69525051]
[91.09537506 -13.33968735]
[76.43967438 -16.53506660]
[62.95291138 -23.10067177]
[51.39782715 -32.66518784]
[42.42791367 -44.68769455]
[36.55046463 -58.48825836]
[34.09788132 -73.28639221]
[35.20886612 -88.24519348]
[39.82059097 -102.51866913]
[47.67223740 -115.29957581]
[58.31975937 -125.86510468]
[71.16098785 -133.61770630]
[85.46968079 -138.11895752]
[100.43662262 -139.11425781]
[115.21535492 -136.54736328]
[128.97007751 -130.56340027]
[140.92288208 -121.50080872]
[150.39778137 -109.87213135]
[156.85893250 -96.33501434]
[159.94091797 -81.65504456]
[159.46943665 -66.66246033]
[155.47074890 -52.20415878]
[165.46891785 -63.38613129]
[175.46708679 -74.56810760]
[185.46527100 -85.75008392]
[195.46343994 -96.93205261]
[205.46160889 -108.11402893]
[215.45977783 -119.29600525]
[205.02365112 -130.07955933]
[195.39285278 -141.58804321]
[186.61758423 -153.76147461]
[178.74359131 -166.53637695]
[171.81195068 -179.84616089]
[165.85879517 -193.62139893]
[160.91514587 -207.79031372]
[157.00677490 -222.27902222]
[154.15408325 -237.01197815]
[152.37193298 -251.91236877]
[151.66960144 -266.90249634]
[152.05076599 -281.90426636]
[153.51344299 -296.83938599]
[156.04998779 -311.63006592]
[159.64718628 -326.19912720]
[164.28628540 -340.47067261]
[169.94311523 -354.37023926]
[176.58815002 -367.82537842]
[184.18675232 -380.76599121]
[192.69932556 -393.12454224]
[202.08148193 -404.83660889]
[212.28430176 -415.84118652]
[223.25459290 -426.08084106]
[234.93516541 -435.50219727]
[247.26510620 -444.05615234]
[260.18014526 -451.69812012]
[273.61294556 -458.38821411]
[287.49346924 -464.09161377]
[301.74938965 -468.77853394]
[316.30630493 -472.42456055]
[331.08837891 -475.01068115]
[346.01852417 -476.52340698]
[361.01892090 -476.95486450]
[376.01132202 -476.30279541]
[390.91763306 -474.57058716]
[405.66006470 -471.76730347]
[420.16177368 -467.90753174]
[434.34716797 -463.01141357]
[448.14230347 -457.10446167]
[461.47525024 -450.21749878]
[474.27648926 -442.38638306]
[486.47927856 -433.65197754]
[498.01998901 -424.05981445]
[508.83843994 -413.65988159]
[518.87829590 -402.50643921]
[528.08715820 -390.65759277]
[536.41699219 -378.17517090]
[543.82446289 -365.12420654]
[550.27081299 -351.57275391]
[555.72253418 -337.59146118]
[560.15124512 -323.25323486]
[563.53375244 -308.63284302]
[565.85241699 -293.80645752]
[567.09527588 -278.85140991]
[567.25567627 -263.84570312]
[566.33294678 -248.86749268]
[564.33178711 -233.99493408]
[561.26269531 -219.30554199]
[557.14160156 -204.87590027]
[551.99005127 -190.78123474]
[545.83489990 -177.09504700]
[538.70825195 -163.88867188]
[530.64715576 -151.23098755]
[521.69378662 -139.18795776]
[511.89474487 -127.82238007]
[501.30111694 -117.19351196]
[489.96813965 -107.35677338]
[477.95489502 -98.36343384]
[465.32406616 -90.26039886]
[452.14141846 -83.08990479]
[438.47573853 -76.88932800]
[424.39828491 -71.69100952]
[409.98239136 -67.52204895]
[395.30328369 -64.40417480]
[380.43743896 -62.35364914]
[365.46240234 -61.38116074]
[350.45620728 -61.49177551]
[335.49713135 -62.68492126]
[320.66314697 -64.95437622]
[306.03155518 -68.28830719]
[291.67871094 -72.66933441]
[277.67941284 -78.07460785]
[264.10662842 -84.47596741]
[251.03112793 -91.84001923]
[238.52110291 -100.12837982]
[226.64175415 -109.29782867]
[216.64358521 -98.11585999]
[206.64541626 -86.93388367]
[196.64724731 -75.75190735]
[186.64906311 -64.56993103]
[176.65089417 -53.38795853]
[166.65272522 -42.20598602]
[158.80096436 -29.42514229]
[153.34561157 -15.45234489]
[147.89025879 -1.47954667]
[142.43489075 12.49325085]
[136.97953796 26.46604919]
[131.52418518 40.43884659]
[126.06882477 54.41164398]
[120.61347198 68.38444519]
[115.15811157 82.35723877]
[115.65368652 89.73126221]
[109.51611328 96.49646759]
[109.63111877 104.55620575]
[103.66423035 110.55012512]
[97.79527283 124.35430145]
[91.92630768 138.15847778]
[86.05735016 151.96266174]
[80.18839264 165.76683044]
[74.31942749 179.57101440]
[74.99922943 183.85958862]
[74.34481049 187.75012207]
[72.64512634 190.87205505]
[70.27980042 192.98674011]
[67.66826630 194.00556946]
[60.98807144 207.43594360]
[54.30787659 220.86631775]
[47.62768173 234.29669189]
[40.94748688 247.72706604]
[34.26729202 261.15744019]
[46.51434708 269.87271118]
[57.24716568 280.39666748]
[66.20143890 292.47006226]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 207]
[36 206]
[37 205]
[38 204]
[39 203]
[40 202]
[41 197]
[42 196]
[43 195]
[44 194]
[45 193]
[46 192]
[47 190]
[48 188]
[49 187]
[50 186]
[51 185]
[52 184]
[53 183]
[54 182]
[55 181]
[56 180]
[81 179]
[82 178]
[83 177]
[84 176]
[85 175]
[86 174]
[87 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
