%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[73.90348053 628.37078857]
[59.80532837 633.62805176]
[44.96696472 636.12188721]
[29.92478561 635.76226807]
[15.22255611 632.56213379]
[1.39175355 626.63714600]
[-11.06764793 618.20153809]
[-21.70524788 607.56018066]
[-30.13650513 595.09783936]
[-36.05663300 581.26495361]
[-39.25162506 566.56158447]
[-39.60598373 551.51928711]
[-37.10689926 536.68182373]
[-31.84470940 522.58551025]
[-24.00964165 509.73995972]
[-13.88492775 498.60949707]
[-1.83656979 489.59655762]
[11.69989109 483.02685547]
[26.23512077 479.13793945]
[41.24367905 478.07040405]
[43.02614594 463.17669678]
[44.80860901 448.28295898]
[46.59107590 433.38925171]
[48.37354279 418.49554443]
[50.15600967 403.60180664]
[51.93847275 388.70809937]
[53.27670670 373.76791382]
[54.16952515 358.79449463]
[44.12170792 347.85937500]
[44.81384659 332.66149902]
[56.35174179 322.19656372]
[57.24455643 307.22317505]
[58.13737488 292.24975586]
[59.03018951 277.27636719]
[57.27252197 275.09262085]
[56.27396011 272.08105469]
[56.35413742 268.52731323]
[57.72348022 264.82739258]
[60.44811249 261.44650269]
[62.23057938 246.55279541]
[64.01304626 231.65908813]
[65.79550934 216.76536560]
[67.57797241 201.87164307]
[69.24951935 186.96507263]
[70.81003571 172.04646301]
[72.37055969 157.12786865]
[64.02402496 169.59123230]
[52.27358246 178.91468811]
[38.23920059 184.20960999]
[23.25855255 184.97129822]
[8.75949669 181.12716675]
[-3.87600875 173.04359436]
[-13.44362831 161.49107361]
[-19.03143692 147.57072449]
[-20.10684013 132.60931396]
[-16.56733704 118.03290558]
[-8.75029278 105.23080444]
[2.59922409 95.42323303]
[16.39944839 89.54498291]
[31.33503342 88.15634155]
[45.98241043 91.38964844]
[58.94548798 98.93674469]
[68.98870850 110.07827759]
[75.15480804 123.75231171]
[76.85604095 138.65666199]
[82.31140137 124.68386078]
[87.76675415 110.71105957]
[83.74172211 99.78218079]
[88.05809784 88.96505737]
[98.50133514 83.80947876]
[104.16412354 69.91944885]
[109.82690430 56.02942276]
[115.48969269 42.13939667]
[121.15248108 28.24936867]
[120.44052124 23.07827568]
[121.66121674 18.59908104]
[124.22739410 15.43209743]
[127.39075470 13.87469101]
[133.66812134 0.25137523]
[139.94548035 -13.37194061]
[135.59542847 -23.34117889]
[137.41265869 -33.84250641]
[144.55931091 -41.44998550]
[154.49964905 -43.81698608]
[161.17984009 -57.24736023]
[167.86003113 -70.67773438]
[160.85072327 -84.39545441]
[163.23498535 -99.43436432]
[173.89147949 -110.05995178]
[188.58546448 -112.34573364]
[195.26565552 -125.77611542]
[201.94586182 -139.20648193]
[208.62605286 -152.63687134]
[213.66296387 -166.76589966]
[216.98522949 -181.39335632]
[220.30747986 -196.02081299]
[223.62974548 -210.64826965]
[226.84301758 -225.30006409]
[229.94712830 -239.97535706]
[216.26884460 -246.28822327]
[204.33856201 -255.48693848]
[194.75471497 -267.11007690]
[187.99800110 -280.57464600]
[184.40734863 -295.20526123]
[184.16287231 -310.26806641]
[187.27682495 -325.00750732]
[193.59300232 -338.68426514]
[202.79460144 -350.61230469]
[214.42005920 -360.19335938]
[227.88626099 -366.94680786]
[242.51776123 -370.53390503]
[257.58062744 -370.77471924]
[272.31930542 -367.65722656]
[285.99450684 -361.33770752]
[297.92034912 -352.13323975]
[307.49856567 -340.50546265]
[314.24874878 -327.03759766]
[317.83230591 -312.40524292]
[318.06948853 -297.34234619]
[314.94839478 -282.60440063]
[308.62557983 -268.93072510]
[299.41821289 -257.00711060]
[287.78811646 -247.43171692]
[274.31863403 -240.68479919]
[259.68539429 -237.10478210]
[244.62243652 -236.87126160]
[241.51832581 -222.19595337]
[243.20959473 -215.00141907]
[238.25720215 -207.32601929]
[234.93495178 -192.69856262]
[231.61268616 -178.07109070]
[228.29042053 -163.44363403]
[238.27561951 -174.63720703]
[251.45414734 -181.80145264]
[266.27780151 -184.09474182]
[281.00512695 -181.24765015]
[293.90594482 -173.59465027]
[303.46472168 -162.03480530]
[308.55850220 -147.92617798]
[308.58880615 -132.92620850]
[303.55215454 -118.79708099]
[294.04019165 -107.19869232]
[281.17041016 -99.49358368]
[266.45471191 -96.58695984]
[251.62191772 -98.82028961]
[238.41453552 -105.93119049]
[228.38415527 -117.08428955]
[222.70915222 -130.96932983]
[222.05642700 -145.95666504]
[215.37623596 -132.52629089]
[208.69602966 -119.09591675]
[202.01583862 -105.66554260]
[209.05831909 -92.56816101]
[207.01394653 -77.65895081]
[196.45909119 -66.68405151]
[181.29040527 -63.99754333]
[174.61021423 -50.56716537]
[167.93002319 -37.13679123]
[170.53730774 -17.97722244]
[153.56878662 -7.09458017]
[147.29142761 6.52873611]
[141.01406860 20.15205193]
[135.04251099 33.91215515]
[129.37971497 47.80218124]
[123.71693420 61.69220734]
[118.05414581 75.58223724]
[112.39135742 89.47225952]
[115.10182190 106.02610016]
[101.73955536 116.16641998]
[96.28419495 130.13922119]
[90.82884216 144.11201477]
[87.28916931 158.68838501]
[85.72864532 173.60699463]
[84.16812134 188.52560425]
[86.38775635 197.38624573]
[82.47169495 203.65411377]
[80.68922424 218.54783630]
[78.90676117 233.44154358]
[77.12429810 248.33526611]
[75.34182739 263.22897339]
[74.00359344 278.16915894]
[73.11077881 293.14257812]
[72.21796417 308.11596680]
[71.32514954 323.08938599]
[81.53772736 334.85122681]
[80.41898346 350.02368164]
[69.14292908 359.68731689]
[68.25011444 374.66073608]
[70.33052063 378.47201538]
[71.02051544 382.35638428]
[70.46784973 385.86779785]
[68.94997406 388.65396118]
[66.83219147 390.49057007]
[65.04972839 405.38427734]
[63.26726151 420.27798462]
[61.48479462 435.17172241]
[59.70232773 450.06542969]
[57.91986084 464.95913696]
[56.13739777 479.85287476]
[70.47016907 484.43197632]
[83.67720032 491.64105225]
[95.28106689 501.21948242]
[104.86229706 512.82104492]
[112.07453156 526.02636719]
[116.65705872 540.35803223]
[118.44421387 555.29803467]
[117.37139893 570.30621338]
[113.47739410 584.84008789]
[106.90296173 598.37420654]
[97.88577271 610.41943359]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 199]
[21 198]
[22 197]
[23 196]
[24 195]
[25 194]
[26 193]
[27 188]
[28 187]
[31 184]
[32 183]
[33 182]
[34 181]
[39 180]
[40 179]
[41 178]
[42 177]
[43 176]
[44 174]
[45 173]
[46 172]
[65 171]
[66 170]
[67 169]
[70 167]
[71 166]
[72 165]
[73 164]
[74 163]
[78 162]
[79 161]
[80 160]
[84 158]
[85 157]
[86 156]
[90 152]
[91 151]
[92 150]
[93 149]
[94 132]
[95 131]
[96 130]
[97 129]
[98 127]
[99 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
