%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxCCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGA\
) } def
/len { sequence length } bind def

/coor [
[56.69837570 551.12475586]
[57.45734024 566.15502930]
[55.26915741 581.04455566]
[50.21792603 595.22100830]
[42.49780655 608.13946533]
[32.40554047 619.30334473]
[20.32904625 628.28356934]
[6.73251152 634.73498535]
[-7.86144781 638.40954590]
[-22.89188004 639.16607666]
[-37.78105545 636.97546387]
[-51.95667267 631.92193604]
[-64.87385559 624.19976807]
[-76.03610992 614.10565186]
[-85.01438904 602.02770996]
[-91.46357727 588.43017578]
[-95.13580322 573.83557129]
[-95.88990021 558.80505371]
[-93.69689941 543.91619873]
[-88.64108276 529.74139404]
[-80.91677856 516.82550049]
[-70.82089996 505.66485596]
[-58.74149704 496.68853760]
[-45.14287567 490.24154663]
[-30.54772758 486.57168579]
[-15.51705170 485.82003784]
[-0.62858737 488.01544189]
[4.40832901 473.88641357]
[9.44524479 459.75738525]
[14.48216152 445.62835693]
[19.51907730 431.49932861]
[23.27537727 416.97726440]
[25.72110558 402.17797852]
[28.16683388 387.37872314]
[17.94852638 378.78637695]
[13.27273273 366.16571045]
[15.46106815 352.77615356]
[24.04748344 342.13226318]
[36.87245178 337.08142090]
[39.53824997 322.32022095]
[42.20404434 307.55899048]
[44.86983871 292.79779053]
[32.59733963 301.42248535]
[17.64197731 300.26614380]
[6.84114313 289.85739136]
[5.13283253 274.95498657]
[13.29806232 262.37210083]
[27.60379982 257.86148071]
[41.50965500 263.48529053]
[48.65833664 276.67425537]
[52.84534836 262.27044678]
[57.03236008 247.86668396]
[61.11202621 233.43212891]
[65.08412170 218.96760559]
[69.05622101 204.50308228]
[73.02831268 190.03855896]
[77.00041199 175.57403564]
[72.90958405 161.25221252]
[84.02504730 149.99357605]
[87.12915802 135.31826782]
[89.35427094 120.48422241]
[91.57939148 105.65018463]
[89.56571960 97.84520721]
[93.94965363 90.61250305]
[96.39537811 75.81323242]
[94.70706940 66.83618164]
[98.98926544 60.81251144]
[101.65505981 46.05129242]
[96.49349213 31.09573364]
[106.36950684 19.94613647]
[109.03530884 5.18491888]
[111.70110321 -9.57629871]
[114.36689758 -24.33751488]
[112.49440765 -30.67828178]
[113.89495850 -36.18604660]
[117.33808136 -39.49571991]
[120.44219208 -54.17102432]
[115.72819519 -69.27363586]
[125.93180084 -80.12424469]
[129.03590393 -94.79954529]
[132.14001465 -109.47484589]
[127.42602539 -124.57745361]
[137.62962341 -135.42807007]
[140.73373413 -150.10336304]
[136.01974487 -165.20597839]
[146.22334290 -176.05657959]
[149.32745361 -190.73188782]
[140.97262573 -203.87854004]
[144.32969666 -218.71716309]
[156.91450500 -226.60119629]
[160.01861572 -241.27650452]
[163.12272644 -255.95181274]
[166.22683716 -270.62710571]
[152.18753052 -275.99780273]
[139.16128540 -283.49868774]
[127.46889496 -292.94509888]
[117.39829254 -304.10437012]
[109.19747162 -316.70172119]
[103.06838989 -330.42691040]
[99.16197968 -344.94192505]
[97.57444000 -359.88937378]
[98.34486389 -374.90115356]
[101.45428467 -389.60754395]
[106.82612610 -403.64642334]
[114.32809448 -416.67202759]
[123.77545929 -428.36364746]
[134.93556213 -438.43331909]
[147.53358459 -446.63311768]
[161.25927734 -452.76104736]
[175.77464294 -456.66625977]
[190.72222900 -458.25256348]
[205.73391724 -457.48089600]
[220.44006348 -454.37026978]
[234.47848511 -448.99728394]
[247.50349426 -441.49423218]
[259.19433594 -432.04589844]
[269.26309204 -420.88497925]
[277.46182251 -408.28628540]
[283.58865356 -394.56005859]
[287.49264526 -380.04437256]
[289.07772827 -365.09667969]
[288.30484009 -350.08505249]
[285.19299316 -335.37915039]
[279.81881714 -321.34118652]
[272.31469727 -308.31680298]
[262.86541748 -296.62673950]
[251.70364380 -286.55889893]
[239.10426331 -278.36120605]
[225.37756348 -272.23550415]
[210.86155701 -268.33270264]
[195.91371155 -266.74887085]
[180.90214539 -267.52301025]
[177.79803467 -252.84770203]
[174.69392395 -238.17239380]
[171.58981323 -223.49708557]
[179.90432739 -211.19244385]
[176.96537781 -196.26538086]
[164.00276184 -187.62777710]
[160.89865112 -172.95246887]
[165.83467102 -158.89953613]
[155.40904236 -146.99925232]
[152.30493164 -132.32395935]
[157.24095154 -118.27101898]
[146.81532288 -106.37073517]
[143.71121216 -91.69543457]
[140.60710144 -77.02013397]
[145.54312134 -62.96719742]
[135.11749268 -51.06691360]
[132.01338196 -36.39161301]
[129.12811279 -21.67172050]
[126.46231842 -6.91050291]
[123.79652405 7.85071421]
[121.13072968 22.61193085]
[126.48297119 36.51166916]
[116.41627502 48.71709061]
[113.75048065 63.47830582]
[111.19464874 78.25895691]
[108.74892426 93.05822754]
[106.41343689 107.87529755]
[104.18831635 122.70934296]
[101.96320343 137.54338074]
[113.40388489 127.84231567]
[128.35266113 126.60368347]
[141.23399353 134.28945923]
[147.24346924 148.03303528]
[144.13970947 162.70841980]
[133.08033752 172.84202576]
[118.19021606 174.65429688]
[105.02300262 167.46928406]
[98.48957062 153.96566772]
[102.29628754 169.32208252]
[91.46493530 179.54612732]
[87.49283600 194.01065063]
[83.52074432 208.47517395]
[79.54864502 222.93969727]
[75.57654572 237.40422058]
[76.32176971 246.50819397]
[71.43614197 252.05369568]
[67.24913025 266.45745850]
[63.06211853 280.86126709]
[59.63105774 295.46356201]
[56.96525955 310.22479248]
[54.29946518 324.98602295]
[51.63367081 339.74722290]
[63.49806976 351.80261230]
[65.81605530 368.38958740]
[57.87029648 382.94384766]
[42.96610260 389.82446289]
[40.52037811 404.62371826]
[38.07464981 419.42300415]
[48.15036774 408.31085205]
[62.01688004 402.59069824]
[76.99677277 403.36706543]
[90.19766998 410.49002075]
[99.07068634 422.58419800]
[101.90257263 437.31445312]
[98.14654541 451.83660889]
[88.52782440 463.34658813]
[74.90364838 469.62210083]
[59.90461731 469.45135498]
[46.42681885 462.86737061]
[37.07260132 451.14138794]
[33.64810562 436.53622437]
[28.61119080 450.66525269]
[23.57427406 464.79431152]
[18.53735924 478.92333984]
[13.50044250 493.05236816]
[26.42012787 500.77038574]
[37.58564758 510.86083984]
[46.56783295 522.93591309]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 207]
[28 206]
[29 205]
[30 204]
[31 203]
[32 190]
[33 189]
[34 188]
[39 184]
[40 183]
[41 182]
[42 181]
[50 180]
[51 179]
[52 178]
[53 176]
[54 175]
[55 174]
[56 173]
[57 172]
[59 170]
[60 161]
[61 160]
[62 159]
[64 158]
[65 157]
[67 156]
[68 155]
[70 153]
[71 152]
[72 151]
[73 150]
[76 149]
[77 148]
[79 146]
[80 145]
[81 144]
[83 142]
[84 141]
[86 139]
[87 138]
[90 135]
[91 134]
[92 133]
[93 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
