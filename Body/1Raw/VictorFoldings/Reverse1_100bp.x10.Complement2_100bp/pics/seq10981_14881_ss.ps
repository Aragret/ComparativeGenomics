%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAUUCCUCUAAACAUCCCUCUAAUCAUAUCUCUCCAUCUCAAAAAAAGCACUAUCACCAAGUGACCUAUUCACCGCAACCGAACGGUACUAACACUCxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[154.87229919 694.74493408]
[153.31904602 679.78405762]
[154.46231079 664.78631592]
[158.26536560 650.23376465]
[164.60595703 636.59423828]
[173.28025818 624.30621338]
[184.00942993 613.76464844]
[196.44856262 605.30841064]
[210.19779968 599.20935059]
[206.65812683 584.63299561]
[203.11845398 570.05657959]
[189.29566956 564.57312012]
[181.25723267 551.85119629]
[182.26306152 536.65771484]
[192.13655090 524.83312988]
[188.59687805 510.25674438]
[185.05720520 495.68035889]
[180.42407227 489.92224121]
[181.57505798 480.86062622]
[178.25279236 466.23318481]
[174.93054199 451.60571289]
[164.56651306 440.90823364]
[169.05513000 425.73709106]
[165.73287964 411.10964966]
[162.41061401 396.48217773]
[159.08834839 381.85470581]
[143.55480957 381.37603760]
[128.66198730 376.89605713]
[115.42337799 368.71365356]
[104.74143982 357.37982178]
[97.34609985 343.66064453]
[93.74487305 328.48547363]
[94.18803406 312.88403320]
[98.65122223 297.91644287]
[106.83672333 284.60122681]
[118.19331360 273.84606934]
[131.95338440 266.38583374]
[128.41371155 251.80946350]
[124.87403107 237.23309326]
[114.35189056 226.69108582]
[118.61413574 211.45481873]
[115.07446289 196.87844849]
[111.53479004 182.30207825]
[97.84173584 180.07307434]
[85.99509430 172.77040100]
[77.80078125 161.46852112]
[74.52271271 147.85437012]
[76.68789673 133.97570801]
[84.00206757 121.93298340]
[95.38915253 113.56154633]
[86.03180695 103.17252350]
[89.98339081 89.76071930]
[86.66113281 75.13325500]
[83.33887482 60.50579453]
[80.01660919 45.87833405]
[76.58554840 31.27601242]
[73.04587555 16.69963837]
[69.50620270 2.12326264]
[65.96652985 -12.45311260]
[62.42686081 -27.02948761]
[49.21281433 -35.27731705]
[45.83072662 -50.11026001]
[53.77520752 -62.65700531]
[42.99988174 -74.24160767]
[47.51531219 -88.43527222]
[43.97563934 -103.01165009]
[40.43596649 -117.58802032]
[36.78787613 -132.13764954]
[33.03157806 -146.65969849]
[29.27527618 -161.18176270]
[15.93989563 -169.23193359]
[12.33734512 -184.01287842]
[20.09414101 -196.67651367]
[16.33784103 -211.19857788]
[12.58154011 -225.72064209]
[7.86835146 -211.48034668]
[-2.49429989 -200.63528442]
[-16.50554848 -195.27944946]
[-31.46004105 -196.44699097]
[-44.47030258 -203.91244507]
[-53.02425003 -216.23437500]
[-55.47025299 -231.03359985]
[-51.33602905 -245.45262146]
[-41.41982651 -256.70736694]
[-27.63631439 -262.62469482]
[-12.64686871 -262.06207275]
[0.65428102 -255.12812805]
[9.69941902 -243.16056824]
[8.58376980 -258.11901855]
[-3.03330612 -248.62988281]
[-17.72681427 -251.64665222]
[-24.66524506 -264.94543457]
[-18.73384857 -278.72290039]
[-4.30502701 -282.82281494]
[7.98401260 -274.22427368]
[7.98401260 -289.22427368]
[7.98401260 -304.22427368]
[7.98401260 -319.22427368]
[-6.07317495 -325.00906372]
[-16.84304810 -335.73654175]
[-22.68327904 -349.77078247]
[-22.70327568 -364.97171021]
[-16.89998627 -379.02127075]
[-6.15837479 -389.77700806]
[7.88354492 -395.59878540]
[23.08448029 -395.59878540]
[37.12639999 -389.77700806]
[47.86801147 -379.02127075]
[53.67129898 -364.97171021]
[53.65130234 -349.77078247]
[47.81107330 -335.73654175]
[37.04119873 -325.00906372]
[22.98401260 -319.22427368]
[22.98401260 -304.22427368]
[22.98401260 -289.22427368]
[22.98401260 -274.22427368]
[23.54222298 -259.23464966]
[24.65787125 -244.27621460]
[27.10359955 -229.47694397]
[30.85989952 -214.95487976]
[34.61619949 -200.43281555]
[47.54050446 -193.11859131]
[51.55680084 -178.44467163]
[43.79733658 -164.93806458]
[47.55363464 -150.41600037]
[51.30993652 -135.89393616]
[56.02828979 -130.20544434]
[55.01234055 -121.12769318]
[58.55201340 -106.55132294]
[62.09168625 -91.97494507]
[72.61383057 -81.43294525]
[68.35158539 -66.19667816]
[81.16555786 -58.69083786]
[84.96293640 -43.95874405]
[77.00323486 -30.56916046]
[80.54290771 -15.99278545]
[84.08258057 -1.41640985]
[87.62225342 13.15996552]
[91.16192627 27.73634148]
[95.79505920 33.49445343]
[94.64407349 42.55607605]
[97.96633148 57.18353653]
[101.28858948 71.81099701]
[104.61084747 86.43845367]
[113.96819305 96.82747650]
[110.01660919 110.23928070]
[125.90417480 113.74916077]
[138.62507629 123.80015564]
[145.66401672 138.34022522]
[145.65745544 154.43629456]
[138.65748596 168.86592102]
[126.11116791 178.76240540]
[129.65083313 193.33877563]
[133.19050598 207.91514587]
[143.96583557 219.49975586]
[139.45040894 233.69342041]
[142.99008179 248.26979065]
[146.52975464 262.84616089]
[161.03175354 263.00106812]
[175.06455994 266.62576294]
[187.81080627 273.50448608]
[198.52926636 283.23199463]
[206.59780884 295.23760986]
[211.54962158 308.81854248]
[213.10012817 323.18118286]
[211.16340637 337.48727417]
[205.85693359 350.90310669]
[197.49441528 362.64779663]
[186.56727600 372.03903198]
[173.71582031 378.53247070]
[177.03807068 393.15991211]
[180.36033630 407.78738403]
[183.68258667 422.41485596]
[194.28424072 434.15856934]
[189.55799866 448.28344727]
[192.88026428 462.91091919]
[196.20251465 477.53836060]
[199.63357544 492.14068604]
[203.17324829 506.71707153]
[206.71292114 521.29345703]
[220.90985107 527.27282715]
[228.77180481 540.31292725]
[227.46325684 555.30462646]
[217.69482422 566.51690674]
[221.23449707 581.09332275]
[224.77416992 595.66967773]
[239.78932190 594.78369141]
[254.72134399 596.59320068]
[269.09024048 601.04003906]
[282.43411255 607.98132324]
[294.32400513 617.19378662]
[304.37771606 628.38140869]
[312.27203369 641.18450928]
[317.75323486 655.19152832]
[320.64508057 669.95220947]
[320.85461426 684.99200439]
[318.37509155 699.82751465]
[313.28628540 713.98175049]
[305.75170898 726.99981689]
[296.01358032 738.46319580]
[284.38494873 748.00335693]
[271.23962402 755.31365967]
[257.00018311 760.15911865]
[242.12437439 762.38391113]
[227.09037781 761.91656494]
[212.38145447 758.77209473]
[198.47047424 753.05157471]
[185.80458069 744.93896484]
[174.79095459 734.69494629]
[165.78364563 722.64886475]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 186]
[10 185]
[11 184]
[15 180]
[16 179]
[17 178]
[19 177]
[20 176]
[21 175]
[23 173]
[24 172]
[25 171]
[26 170]
[37 158]
[38 157]
[39 156]
[41 154]
[42 153]
[43 152]
[50 146]
[52 144]
[53 143]
[54 142]
[55 141]
[56 139]
[57 138]
[58 137]
[59 136]
[60 135]
[63 132]
[65 130]
[66 129]
[67 128]
[68 126]
[69 125]
[70 124]
[73 121]
[74 120]
[75 119]
[88 118]
[89 117]
[95 116]
[96 115]
[97 114]
[98 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
