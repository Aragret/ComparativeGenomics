%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUACCAACUAUAACGAUCCCACCGCGAAGGUUAAUCCACGUACUCAUCCACCGGACGUCAUUACAAUCGCCAAUCCGCAUGCCGGUCCCGAUAACCAxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[76.93075562 478.35299683]
[65.55152893 468.40289307]
[57.61211014 455.53988647]
[53.81846619 440.90774536]
[54.50793076 425.80755615]
[59.61919022 411.58200073]
[68.69775391 399.49600220]
[80.93637085 390.62426758]
[95.24678802 385.75564575]
[94.80017853 370.76229858]
[94.35357666 355.76895142]
[93.90696716 340.77560425]
[85.79415894 328.28433228]
[93.11714935 314.25991821]
[92.67053986 299.26657104]
[92.22393799 284.27322388]
[91.77732849 269.27987671]
[91.33072662 254.28651428]
[90.88411713 239.29316711]
[82.77130890 226.80191040]
[90.09429932 212.77748108]
[89.64768982 197.78413391]
[89.20108795 182.79078674]
[85.85982513 176.19853210]
[88.86112213 167.57124329]
[88.63779449 152.57290649]
[78.25344849 163.39720154]
[63.35493469 165.13912964]
[50.75365829 157.00231934]
[46.21074677 142.70680237]
[51.80316162 128.78828430]
[64.97412872 121.61014557]
[79.70204926 124.45412445]
[89.25415802 136.02174377]
[90.59239197 121.08155060]
[91.93062592 106.14136505]
[89.45596313 98.47008514]
[93.40162659 90.98927307]
[94.96215057 76.07066345]
[96.52267456 61.15206146]
[98.08319092 46.23345566]
[86.82048798 32.84798813]
[88.68648529 15.79416180]
[102.04098511 5.57183075]
[103.37921906 -9.36835480]
[104.71745300 -24.30854034]
[106.05568695 -39.24872589]
[98.25409698 -26.43719864]
[87.91295624 -15.57161808]
[75.50272369 -7.14629221]
[61.58797836 -1.54451752]
[46.80175018 0.97886229]
[31.81671333 0.30905026]
[17.31458664 -3.52348161]
[3.95511866 -10.34437847]
[-7.65392208 -19.84333420]
[-16.98440170 -31.58821297]
[-23.61184692 -45.04469681]
[-27.23475075 -59.60060883]
[-27.68829918 -74.59375000]
[-24.95185471 -89.34203339]
[-19.14990997 -103.17451477]
[-10.54641342 -115.46189880]
[0.46723318 -125.64519501]
[13.38998127 -133.26113892]
[27.63393402 -137.96324158]
[42.55108261 -139.53761292]
[57.46280289 -137.91259766]
[71.69070435 -133.16215515]
[84.58751678 -125.50237274]
[95.56652069 -115.28173065]
[104.12824249 -102.96520233]
[109.88318634 -89.11310577]
[112.56953430 -74.35561371]
[112.06446838 -59.35980988]
[119.14157104 -72.58533478]
[126.21868134 -85.81086731]
[133.29579163 -99.03639221]
[140.37289429 -112.26191711]
[140.06192017 -128.08006287]
[152.88871765 -135.65121460]
[159.96583557 -148.87673950]
[167.04293823 -162.10226440]
[166.73196411 -177.92042542]
[179.55877686 -185.49156189]
[186.63587952 -198.71708679]
[193.71298218 -211.94262695]
[200.79008484 -225.16815186]
[207.86718750 -238.39367676]
[214.94429016 -251.61920166]
[222.02140808 -264.84472656]
[213.11035156 -277.18792725]
[210.45295715 -292.11526489]
[214.52355957 -306.65658569]
[224.46321106 -317.94216919]
[238.26023865 -323.76898193]
[253.15722656 -323.03063965]
[260.23434448 -336.25616455]
[267.31143188 -349.48168945]
[255.12788391 -358.27056885]
[244.22453308 -368.60498047]
[234.79595947 -380.30050659]
[227.01042175 -393.14843750]
[221.00688171 -406.91946411]
[216.89245605 -421.36779785]
[214.74058533 -436.23565674]
[214.58967590 -451.25765991]
[216.44241333 -466.16574097]
[220.26573181 -480.69384766]
[225.99140930 -494.58267212]
[233.51725769 -507.58441162]
[242.70895386 -519.46704102]
[253.40249634 -530.01837158]
[265.40701294 -539.05029297]
[278.50830078 -546.40148926]
[292.47250366 -551.94079590]
[307.05047607 -555.56933594]
[321.98199463 -557.22247314]
[337.00064087 -556.87054443]
[351.83837891 -554.51989746]
[366.23037720 -550.21252441]
[379.91983032 -544.02526855]
[392.66241455 -536.06848145]
[404.23074341 -526.48425293]
[414.41833496 -515.44360352]
[423.04339600 -503.14352417]
[429.95202637 -489.80358887]
[435.02087402 -475.66180420]
[438.15954590 -460.97058105]
[439.31201172 -445.99206543]
[438.45767212 -430.99362183]
[435.61178589 -416.24288940]
[430.82516479 -402.00308228]
[424.18319702 -388.52838135]
[415.80444336 -376.05920410]
[405.83843994 -364.81811523]
[394.46301270 -355.00573730]
[381.88119507 -346.79711914]
[368.31750488 -340.33883667]
[354.01400757 -335.74609375]
[339.22595215 -333.10083008]
[324.21728516 -332.45031738]
[309.25582886 -333.80612183]
[294.60858154 -337.14407349]
[280.53695679 -342.40457153]
[273.45986938 -329.17904663]
[266.38275146 -315.95352173]
[275.26184082 -303.96905518]
[278.06857300 -289.25744629]
[274.19360352 -274.72659302]
[264.35375977 -263.27243042]
[250.46011353 -257.20172119]
[235.24693298 -257.76763916]
[228.16983032 -244.54209900]
[221.09271240 -231.31657410]
[214.01560974 -218.09104919]
[206.93850708 -204.86550903]
[199.86140442 -191.63998413]
[192.78430176 -178.41445923]
[193.60147095 -163.54228210]
[180.26846313 -155.02516174]
[173.19136047 -141.79963684]
[166.11425781 -128.57411194]
[166.93142700 -113.70193481]
[153.59841919 -105.18481445]
[146.52131653 -91.95928955]
[139.44419861 -78.73375702]
[132.36709595 -65.50823212]
[125.28999329 -52.28270340]
[120.99587250 -37.91049194]
[119.65763855 -22.97030449]
[118.31940460 -8.03011990]
[116.98117065 6.91006470]
[126.54537201 15.54461575]
[129.43318176 28.30167770]
[124.37177277 40.57329559]
[113.00180054 47.79397964]
[111.44127655 62.71258545]
[109.88075256 77.63118744]
[108.32022858 92.54979706]
[106.87081146 107.47959900]
[105.53257751 122.41978455]
[104.19434357 137.35997009]
[103.63613129 152.34957886]
[103.85945892 167.34791565]
[104.19443512 182.34417725]
[104.64104462 197.33752441]
[105.08764648 212.33087158]
[113.23239899 225.89456177]
[105.87747192 238.84655762]
[106.32407379 253.83990479]
[106.77068329 268.83325195]
[107.21728516 283.82659912]
[107.66389465 298.81997681]
[108.11049652 313.81332397]
[116.25524902 327.37698364]
[108.90032196 340.32901001]
[109.34692383 355.32235718]
[109.79353333 370.31570435]
[110.24013519 385.30905151]
[124.81496429 389.31726074]
[137.55993652 397.44482422]
[147.34178162 408.96899414]
[153.29069519 422.86511230]
[154.87771606 437.89749146]
[151.96171570 452.72949219]
[144.80200195 466.04226685]
[134.03518677 476.65203857]
[120.61865997 483.61538696]
[105.74541473 486.31317139]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 200]
[10 199]
[11 198]
[12 197]
[14 195]
[15 194]
[16 193]
[17 192]
[18 191]
[19 190]
[21 188]
[22 187]
[23 186]
[25 185]
[26 184]
[34 183]
[35 182]
[36 181]
[38 180]
[39 179]
[40 178]
[41 177]
[44 173]
[45 172]
[46 171]
[47 170]
[75 169]
[76 168]
[77 167]
[78 166]
[79 165]
[81 163]
[82 162]
[83 161]
[85 159]
[86 158]
[87 157]
[88 156]
[89 155]
[90 154]
[91 153]
[97 147]
[98 146]
[99 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
