%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[36.03561020 689.20281982]
[22.47247124 696.01501465]
[7.36400509 697.46368408]
[-7.24648905 693.35296631]
[-19.38306236 684.23883057]
[-27.40434456 671.35382080]
[-30.22552109 656.44055176]
[-27.46505165 641.51593018]
[-19.49626923 628.59838867]
[-7.39688253 619.43493652]
[7.19676352 615.26477051]
[8.53499794 600.32458496]
[9.87323189 585.38439941]
[3.30225682 572.01763916]
[12.23989391 558.96276855]
[13.57812881 544.02258301]
[14.91636276 529.08239746]
[16.25459671 514.14221191]
[8.02384186 498.64312744]
[18.74189186 483.66964722]
[19.85754013 468.71118164]
[20.97318840 453.75274658]
[22.08883667 438.79428101]
[23.20448685 423.83584595]
[11.89585209 433.69052124]
[-3.09865761 434.09631348]
[-14.92375565 424.86773682]
[-18.17316628 410.22390747]
[-11.36130142 396.85983276]
[2.39754367 390.88537598]
[16.81301117 395.03198242]
[25.29501343 407.40563965]
[27.96080971 392.64443970]
[30.62660599 377.88320923]
[33.29240036 363.12200928]
[26.73466110 355.28561401]
[25.54789734 344.91546631]
[30.36383057 335.40826416]
[39.80781174 330.01196289]
[42.91192245 315.33666992]
[46.01603317 300.66137695]
[49.12014389 285.98605347]
[47.42887497 278.79153442]
[52.38125992 271.11611938]
[55.70351791 256.48867798]
[59.02577972 241.86120605]
[62.34803772 227.23374939]
[65.67029572 212.60629272]
[68.99255371 197.97883606]
[72.31481934 183.35136414]
[75.63707733 168.72390747]
[78.95933533 154.09645081]
[82.28159332 139.46899414]
[80.53955078 135.02215576]
[81.57247925 129.43376160]
[85.92666626 124.45857239]
[89.68296814 109.93651581]
[86.13245392 96.41299438]
[95.79496765 86.30718994]
[99.55126953 71.78512573]
[86.67128754 79.47316742]
[71.84335327 77.20769501]
[61.84659958 66.02445221]
[61.25141144 51.03626633]
[70.32989502 39.09553146]
[84.93149567 35.66139603]
[98.38055420 42.30389786]
[104.52848816 55.98802185]
[109.77520752 41.93555069]
[115.02192688 27.88308144]
[120.26864624 13.83060932]
[120.33861542 4.69644737]
[125.69950104 -0.39105204]
[131.15486145 -14.36384964]
[136.61021423 -28.33664703]
[141.64712524 -42.46567535]
[146.26113892 -56.73841095]
[143.14392090 -72.24948883]
[154.42100525 -81.97968292]
[159.03500366 -96.25241852]
[163.64901733 -110.52515411]
[150.79714966 -119.74740601]
[141.43568420 -132.47412109]
[136.47135925 -147.45237732]
[136.37872314 -163.21217346]
[141.15484619 -178.21070862]
[150.32072449 -190.98344421]
[162.96937561 -200.28704834]
[177.85549927 -205.22048950]
[193.51812744 -205.31221008]
[197.91912842 -219.65205383]
[201.99879456 -234.08660889]
[205.75509644 -248.60867310]
[201.72016907 -263.90670776]
[212.39810181 -274.29086304]
[216.15438843 -288.81292725]
[219.91069031 -303.33499146]
[206.25378418 -309.63806152]
[193.94194031 -318.27856445]
[183.37091064 -328.97869873]
[174.88052368 -341.39453125]
[168.74371338 -355.12695312]
[165.15773010 -369.73449707]
[164.23788452 -384.74761963]
[166.01371765 -399.68368530]
[170.42816162 -414.06259155]
[177.33929443 -427.42208862]
[186.52496338 -439.33270264]
[197.68989563 -449.41162109]
[210.47515869 -457.33480835]
[224.46977234 -462.84756470]
[239.22387695 -465.77267456]
[254.26316833 -466.01611328]
[269.10421753 -463.57009888]
[283.26992798 -458.51318359]
[296.30496216 -451.00799561]
[307.79025269 -441.29574585]
[317.35662842 -429.68865967]
[324.69653320 -416.55984497]
[329.57406616 -402.33139038]
[331.83242798 -387.46063232]
[331.39898682 -372.42559814]
[328.28768921 -357.70962524]
[322.59857178 -343.78576660]
[314.51449585 -331.10162354]
[304.29534912 -320.06494141]
[292.26962280 -311.03048706]
[278.82388306 -304.28866577]
[264.39035034 -300.05624390]
[249.43305969 -298.46923828]
[234.43275452 -299.57870483]
[230.67645264 -285.05664062]
[226.92015076 -270.53457642]
[231.22375488 -256.27523804]
[220.27714539 -244.85237122]
[216.52084351 -230.33030701]
[217.98561096 -227.12300110]
[217.96966553 -223.04687500]
[216.08157349 -218.80560303]
[212.25897217 -215.25105286]
[207.85797119 -200.91120911]
[219.72436523 -193.01344299]
[228.89387512 -182.07908630]
[234.61611938 -168.98899841]
[236.41891479 -154.80099487]
[234.14714050 -140.66436768]
[227.97616577 -127.72680664]
[218.39826965 -117.04122162]
[206.18338013 -109.48004150]
[192.31723022 -105.66399384]
[177.92175293 -105.91114044]
[173.30773926 -91.63841248]
[168.69374084 -77.36567688]
[172.14097595 -62.87548065]
[160.53387451 -52.12440109]
[155.91986084 -37.85166931]
[157.07467651 -35.29734802]
[157.28726196 -32.13168335]
[156.31971741 -28.71126747]
[154.06747437 -25.47214508]
[150.58300781 -22.88129044]
[145.12765503 -8.90849304]
[139.67230225 5.06430483]
[134.32112122 19.07732773]
[129.07440186 33.12979889]
[123.82767487 47.18227005]
[118.58096313 61.23474121]
[114.07333374 75.54142761]
[110.31703186 90.06348419]
[113.86754608 103.58700562]
[104.20503235 113.69281006]
[100.44873047 128.21487427]
[96.90905762 142.79124451]
[93.58679962 157.41870117]
[90.26453400 172.04617310]
[86.94227600 186.67362976]
[83.62001801 201.30108643]
[80.29776001 215.92854309]
[76.97550201 230.55601501]
[73.65323639 245.18347168]
[70.33097839 259.81094360]
[67.00872040 274.43838501]
[63.79544449 289.09017944]
[60.69133759 303.76547241]
[57.58722687 318.44079590]
[54.48311615 333.11608887]
[61.59009171 351.98016357]
[48.05361938 365.78781128]
[45.38782120 380.54901123]
[42.72202682 395.31024170]
[40.05623245 410.07144165]
[38.16294098 424.95147705]
[37.04729080 439.90994263]
[35.93164062 454.86837769]
[34.81599426 469.82684326]
[33.70034409 484.78530884]
[41.51033783 495.05014038]
[40.27315903 507.48608398]
[31.19478226 515.48046875]
[29.85654831 530.42065430]
[28.51831436 545.36083984]
[27.18007851 560.30102539]
[33.65533447 574.73645020]
[24.81341743 586.72265625]
[23.47518349 601.66284180]
[22.13694954 616.60302734]
[35.75716782 623.30035400]
[46.03541565 634.46826172]
[51.58164215 648.59637451]
[51.64577103 663.77398682]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 206]
[12 205]
[13 204]
[15 202]
[16 201]
[17 200]
[18 199]
[20 196]
[21 195]
[22 194]
[23 193]
[24 192]
[32 191]
[33 190]
[34 189]
[35 188]
[39 186]
[40 185]
[41 184]
[42 183]
[44 182]
[45 181]
[46 180]
[47 179]
[48 178]
[49 177]
[50 176]
[51 175]
[52 174]
[53 173]
[56 172]
[57 171]
[59 169]
[60 168]
[68 167]
[69 166]
[70 165]
[71 164]
[73 163]
[74 162]
[75 161]
[76 156]
[77 155]
[79 153]
[80 152]
[81 151]
[90 141]
[91 140]
[92 136]
[93 135]
[95 133]
[96 132]
[97 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
