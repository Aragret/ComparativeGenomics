%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCAUUUUCCUCCCGUUAAAGAUCUAGUUUAUUAUUCUUCCAUUAUCGAUGAUUCUUCUUAAAAUACCUCUUUCCCUGCGCCCGCCCCCUAUAUCCCAGxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[188.95602417 823.61120605]
[174.90432739 818.35321045]
[161.13696289 812.39025879]
[147.68928528 805.73767090]
[134.59582520 798.41247559]
[121.89018250 790.43353271]
[109.60498047 781.82128906]
[97.77174377 772.59783936]
[86.42086029 762.78692627]
[75.58145905 752.41363525]
[65.28136444 741.50469971]
[55.54702759 730.08807373]
[46.40342331 718.19305420]
[37.87403107 705.85015869]
[29.98074341 693.09112549]
[22.74382210 679.94866943]
[16.18184471 666.45654297]
[10.31165695 652.64935303]
[5.14832544 638.56262207]
[0.70510542 624.23242188]
[-3.00659728 609.69555664]
[-5.97725487 594.98931885]
[-8.19924164 580.15155029]
[-9.66685390 565.22027588]
[-10.37632370 550.23382568]
[-10.32583046 535.23071289]
[-9.51550388 520.24932861]
[-7.94742393 505.32827759]
[-5.62561560 490.50579834]
[-2.55603933 475.81991577]
[1.25342560 461.30838013]
[5.79300022 447.00839233]
[11.05103111 432.95669556]
[17.01402092 419.18936157]
[23.66666412 405.74169922]
[30.99188232 392.64825439]
[38.97087097 379.94265747]
[47.58314896 367.65747070]
[56.80661011 355.82424927]
[66.61757660 344.47338867]
[76.99085999 333.63403320]
[87.89983368 323.33395386]
[99.31649780 313.59963989]
[111.21154785 304.45608521]
[123.55444336 295.92672729]
[136.31350708 288.03347778]
[149.45597839 280.79656982]
[162.94812012 274.23464966]
[157.07916260 260.43048096]
[151.21020508 246.62629700]
[145.34123230 232.82211304]
[139.47227478 219.01792908]
[133.60331726 205.21376038]
[120.83773041 206.77845764]
[108.08914948 204.98141479]
[96.22866821 199.93833923]
[86.06854248 191.98703003]
[78.30653381 181.66465759]
[73.47801971 169.67155457]
[71.91903687 156.82369995]
[73.74293518 143.99711609]
[78.83215332 132.06826782]
[86.84576416 121.85406494]
[97.24231720 114.05598450]
[86.58087921 105.01024628]
[88.70520782 91.19073486]
[83.45848846 77.13826752]
[78.21177673 63.08579636]
[72.96505737 49.03332520]
[58.86453629 42.41417313]
[53.74380112 28.08822632]
[60.14104843 14.68632984]
[54.89432907 0.63385892]
[49.64760971 -13.41861248]
[44.40089417 -27.47108269]
[39.15417480 -41.52355576]
[24.36635780 -38.78647614]
[9.32791138 -38.65904999]
[-5.50416422 -41.14514160]
[-19.67913818 -46.16920853]
[-32.76625061 -53.57856750]
[-44.36779404 -63.14806366]
[-54.13121796 -74.58689117]
[-61.75981903 -87.54743195]
[-67.02177429 -101.63582611]
[-69.75717163 -116.42395782]
[-69.88289642 -131.46241760]
[-67.39511871 -146.29420471]
[-62.36944580 -160.46861267]
[-54.95859909 -173.55488586]
[-45.38779068 -185.15534973]
[-33.94785690 -194.91746521]
[-20.98645210 -202.54460144]
[-6.89745760 -207.80496216]
[7.89097977 -210.53868103]
[22.92945480 -210.66268921]
[37.76096725 -208.17323303]
[51.93479919 -203.14596558]
[65.02023315 -195.73362732]
[76.61960602 -186.16149902]
[86.38043213 -174.72045898]
[94.00609589 -161.75819397]
[99.26485443 -147.66859436]
[101.99689484 -132.87985229]
[102.11920929 -117.84136200]
[99.62806702 -103.01013947]
[94.59918213 -88.83687592]
[87.18537140 -75.75228119]
[77.61192322 -64.15399170]
[66.16977692 -54.39446259]
[53.20664597 -46.77027130]
[58.45336533 -32.71780014]
[63.70008087 -18.66533089]
[68.94680023 -4.61285925]
[74.19351959 9.43961239]
[87.80862427 15.36957169]
[93.32972717 29.54603386]
[87.01752472 43.78660583]
[92.26424408 57.83907700]
[97.51096344 71.89154816]
[102.75768280 85.94401550]
[113.41912079 94.98975372]
[111.29479218 108.80926514]
[128.56221008 108.33457947]
[144.92712402 113.78684998]
[158.42077637 124.49236298]
[167.42596436 139.14651489]
[170.87078857 155.97276306]
[168.35623169 172.93800354]
[160.20233154 187.99822998]
[147.40748596 199.34480286]
[153.27645874 213.14897156]
[159.14541626 226.95315552]
[165.01437378 240.75732422]
[170.88333130 254.56150818]
[176.75230408 268.36569214]
[190.83901978 263.20223999]
[205.16918945 258.75891113]
[219.70602417 255.04707336]
[234.41220093 252.07629395]
[249.24995422 249.85418701]
[264.18124390 248.38645935]
[279.16766357 247.67686462]
[294.17083740 247.72723389]
[309.15216064 248.53744507]
[324.07324219 250.10539246]
[338.89575195 252.42707825]
[353.58163452 255.49653625]
[368.09323120 259.30587769]
[382.39324951 263.84533691]
[396.44497681 269.10327148]
[410.21237183 275.06613159]
[423.66006470 281.71865845]
[436.75357056 289.04379272]
[449.45925903 297.02267456]
[461.74450684 305.63482666]
[473.57778931 314.85821533]
[484.92874146 324.66906738]
[495.76818848 335.04226685]
[506.06835938 345.95117188]
[515.80273438 357.36773682]
[524.94641113 369.26272583]
[533.47589111 381.60556030]
[541.36926270 394.36453247]
[548.60626221 407.50695801]
[555.16827393 420.99905396]
[561.03857422 434.80618286]
[566.20196533 448.89291382]
[570.64526367 463.22311401]
[574.35705566 477.75994873]
[577.32775879 492.46612549]
[579.54986572 507.30389404]
[581.01751709 522.23516846]
[581.72711182 537.22161865]
[581.67669678 552.22479248]
[580.86645508 567.20611572]
[579.29846191 582.12719727]
[576.97668457 596.94970703]
[573.90722656 611.63555908]
[570.09783936 626.14715576]
[565.55834961 640.44714355]
[560.30035400 654.49884033]
[554.33746338 668.26623535]
[547.68487549 681.71392822]
[540.35974121 694.80743408]
[532.38079834 707.51306152]
[523.76861572 719.79827881]
[514.54522705 731.63159180]
[504.73431396 742.98248291]
[494.36108398 753.82189941]
[483.45217896 764.12200928]
[472.03555298 773.85638428]
[460.14056396 783.00006104]
[447.79769897 791.52947998]
[435.03869629 799.42279053]
[421.89627075 806.65972900]
[408.40414429 813.22174072]
[394.59698486 819.09197998]
[380.51025391 824.25537109]
[366.18005371 828.69860840]
[351.64318848 832.41033936]
[336.93701172 835.38104248]
[322.09924316 837.60308838]
[307.16796875 839.07073975]
[292.18151855 839.78021240]
[277.17834473 839.72979736]
[262.19702148 838.91949463]
[247.27595520 837.35144043]
[232.45346069 835.02972412]
[217.76757812 831.96014404]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 136]
[49 135]
[50 134]
[51 133]
[52 132]
[53 131]
[64 123]
[66 121]
[67 120]
[68 119]
[69 118]
[72 115]
[73 114]
[74 113]
[75 112]
[76 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
