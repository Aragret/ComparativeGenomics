%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[130.16574097 193.32229614]
[139.11421204 181.26237488]
[149.40225220 170.32289124]
[139.74143982 158.84819031]
[130.08064270 147.37348938]
[120.41982269 135.89878845]
[110.75901794 124.42408752]
[101.09820557 112.94938660]
[91.10003662 101.76741028]
[80.77336121 90.88807678]
[70.44669342 80.00874329]
[60.12002563 69.12940979]
[49.79335785 58.25007629]
[36.37802124 59.45144272]
[24.88791847 52.80403519]
[19.40559578 40.92858887]
[21.72914696 28.25457764]
[11.56560135 17.22270012]
[1.40205419 6.19082260]
[-8.76149273 -4.84105492]
[-18.92503929 -15.87293243]
[-30.47632027 -6.29840517]
[-42.51286316 2.65845203]
[-55.00167465 10.97308826]
[-67.90853119 18.62271500]
[-81.19804382 25.58636475]
[-94.83379364 31.84494972]
[-108.77841187 37.38131332]
[-122.99366760 42.18028641]
[-137.44059753 46.22871399]
[-152.07962036 49.51549530]
[-166.87059021 52.03162384]
[-181.77296448 53.77020264]
[-196.74591064 54.72646713]
[-211.74839783 54.89779663]
[-226.73927307 54.28372192]
[-241.67747498 52.88592148]
[-256.52203369 50.70823288]
[-271.23229980 47.75662231]
[-285.76791382 44.03918076]
[-300.08905029 39.56609726]
[-314.15646362 34.34962845]
[-327.93161011 28.40407753]
[-341.37667847 21.74574089]
[-354.45486450 14.39286423]
[-367.13031006 6.36560535]
[-379.36825562 -2.31403542]
[-391.13519287 -11.62226677]
[-402.39883423 -21.53357697]
[-413.12829590 -32.02079773]
[-423.29421997 -43.05518341]
[-432.86871338 -54.60649109]
[-441.82553101 -66.64305878]
[-450.14013672 -79.13189697]
[-457.78973389 -92.03878021]
[-464.75332642 -105.32831573]
[-471.01187134 -118.96408844]
[-476.54818726 -132.90872192]
[-481.34713745 -147.12399292]
[-485.39550781 -161.57093811]
[-488.68225098 -176.20996094]
[-491.19833374 -191.00093079]
[-492.93685913 -205.90332031]
[-493.89309692 -220.87626648]
[-494.06436157 -235.87875366]
[-493.45025635 -250.86962891]
[-492.05239868 -265.80783081]
[-489.87466431 -280.65237427]
[-486.92300415 -295.36264038]
[-483.20553589 -309.89825439]
[-478.73239136 -324.21939087]
[-473.51589966 -338.28677368]
[-467.57031250 -352.06188965]
[-460.91192627 -365.50692749]
[-453.55902100 -378.58511353]
[-445.53170776 -391.26052856]
[-436.85202026 -403.49844360]
[-427.54376221 -415.26535034]
[-417.63241577 -426.52896118]
[-407.14517212 -437.25839233]
[-396.11074829 -447.42428589]
[-384.55941772 -456.99874878]
[-372.52282715 -465.95553589]
[-360.03396606 -474.27008057]
[-347.12704468 -481.91964722]
[-333.83749390 -488.88320923]
[-320.20172119 -495.14172363]
[-306.25704956 -500.67797852]
[-292.04177856 -505.47686768]
[-277.59481812 -509.52520752]
[-262.95578003 -512.81188965]
[-248.16479492 -515.32794189]
[-233.26240540 -517.06646729]
[-218.28945923 -518.02264404]
[-203.28697205 -518.19384766]
[-188.29609680 -517.57971191]
[-173.35791016 -516.18182373]
[-158.51335144 -514.00402832]
[-143.80311584 -511.05230713]
[-129.26751709 -507.33477783]
[-114.94639587 -502.86163330]
[-100.87901306 -497.64508057]
[-87.10392761 -491.69943237]
[-73.65888214 -485.04101562]
[-60.58074570 -477.68804932]
[-47.90535355 -469.66073608]
[-35.66745377 -460.98101807]
[-23.90058899 -451.67269897]
[-12.63700867 -441.76132202]
[-1.90758669 -431.27404785]
[8.25826740 -420.23959351]
[17.83268929 -408.68823242]
[26.78943825 -396.65161133]
[35.10396194 -384.16271973]
[42.75347137 -371.25579834]
[49.71699905 -357.96621704]
[55.97546387 -344.33041382]
[61.51170349 -330.38574219]
[66.31054688 -316.17044067]
[70.35884094 -301.72348022]
[73.64549255 -287.08444214]
[76.16148376 -272.29342651]
[77.89993286 -257.39105225]
[78.85605621 -242.41809082]
[79.02725220 -227.41560364]
[78.41304016 -212.42472839]
[77.01510620 -197.48654175]
[74.83728790 -182.64199829]
[71.88554382 -167.93176270]
[68.16796875 -153.39617920]
[63.69475174 -139.07507324]
[58.47815704 -125.00770569]
[52.53248215 -111.23263550]
[45.87402344 -97.78761292]
[38.52103043 -84.70949554]
[30.49365616 -72.03413391]
[21.81390381 -59.79625702]
[12.50556660 -48.02941895]
[2.59415531 -36.76586914]
[-7.89316225 -26.03647804]
[2.27038455 -15.00460148]
[12.43393135 -3.97272444]
[22.59747887 7.05915260]
[32.76102448 18.09103012]
[49.57880783 18.06081200]
[61.44860077 30.44721413]
[60.67269135 47.92340469]
[70.99935913 58.80274200]
[81.32602692 69.68207550]
[91.65270233 80.56140900]
[101.97937012 91.44074249]
[105.00850677 91.77810669]
[107.98184204 93.22510529]
[110.48815155 95.76319122]
[112.12880707 99.22216034]
[112.57290649 103.28857422]
[122.23371887 114.76327515]
[131.89453125 126.23797607]
[141.55534363 137.71267700]
[151.21614075 149.18737793]
[160.87695312 160.66207886]
[173.40945435 152.38844299]
[186.81773376 145.62570190]
[200.92047119 140.46534729]
[215.52693176 136.97714233]
[230.43960571 135.20826721]
[245.45678711 135.18263245]
[260.37539673 136.90061951]
[274.99368286 140.33895874]
[289.11395264 145.45115662]
[302.54522705 152.16809082]
[315.10589600 160.39892578]
[326.62603760 170.03233337]
[336.94992065 180.93803406]
[345.93786621 192.96853638]
[353.46835327 205.96115112]
[359.43954468 219.74017334]
[363.77069092 234.11924744]
[366.40319824 248.90391541]
[367.30145264 263.89422607]
[366.45333862 278.88748169]
[363.87033081 293.68087769]
[359.58734131 308.07437134]
[353.66226196 321.87329102]
[346.17529297 334.89102173]
[337.22763062 346.95153809]
[326.94030762 357.89172363]
[315.45245361 367.56359863]
[302.91940308 375.83642578]
[289.51068115 382.59826660]
[275.40759277 387.75765991]
[260.80090332 391.24490356]
[245.88810730 393.01278687]
[230.87092590 393.03741455]
[215.95242310 391.31842041]
[201.33436584 387.87911987]
[187.21443176 382.76596069]
[173.78359985 376.04812622]
[161.22349548 367.81646729]
[149.70397949 358.18231201]
[139.38084412 347.27590942]
[130.39369202 335.24481201]
[122.86406708 322.25167847]
[116.89379883 308.47225952]
[112.56362152 294.09289551]
[109.93210602 279.30804443]
[109.03483582 264.31765747]
[109.88394928 249.32449341]
[112.46795654 234.53126526]
[116.75191498 220.13806152]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 161]
[4 160]
[5 159]
[6 158]
[7 157]
[8 156]
[9 151]
[10 150]
[11 149]
[12 148]
[13 147]
[17 144]
[18 143]
[19 142]
[20 141]
[21 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
