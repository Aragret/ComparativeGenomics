%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[123.15202332 586.31921387]
[108.10226440 585.64654541]
[93.57965088 581.64135742]
[80.31264496 574.50451660]
[68.96671295 564.59405518]
[60.11094666 552.40704346]
[54.18955994 538.55474854]
[51.49956512 523.73211670]
[52.17588806 508.68249512]
[56.18460846 494.16085815]
[63.32464981 480.89559937]
[73.23786926 469.55206299]
[85.42702484 460.69924927]
[99.28070831 454.78121948]
[114.10403442 452.09481812]
[114.77381897 437.10977173]
[115.44360352 422.12472534]
[116.11339569 407.13967896]
[108.18444824 398.00411987]
[108.61981964 385.51437378]
[117.73119354 376.38497925]
[118.62400818 361.41156006]
[119.29379272 346.42654419]
[119.74039459 331.43316650]
[120.18700409 316.43981934]
[120.63360596 301.44647217]
[120.96858215 286.45022583]
[121.19190979 271.45187378]
[120.29909515 256.47848511]
[118.29508209 241.61294556]
[116.29106903 226.74742126]
[113.95558167 211.93035889]
[111.28978729 197.16914368]
[108.51417542 182.42817688]
[105.62890625 167.70828247]
[102.74362946 152.98838806]
[99.85836029 138.26849365]
[96.97308350 123.54860687]
[94.08781433 108.82872009]
[90.22351074 94.33502197]
[85.39750671 80.13256836]
[80.57151031 65.93011475]
[75.63991547 51.76397705]
[70.60300446 37.63494873]
[65.56608582 23.50591850]
[60.52917099 9.37688923]
[55.49225235 -4.75214052]
[46.80266953 7.47451639]
[31.83484077 8.45638561]
[21.62249184 -2.53032970]
[23.69378662 -17.38663292]
[36.52184296 -25.16100883]
[50.64913177 -20.12364769]
[46.67703629 -34.58817291]
[35.56156921 -45.84681320]
[39.65239716 -60.16862869]
[35.68030167 -74.63314819]
[31.70820427 -89.09767914]
[26.67128944 -103.22670746]
[20.59745407 -116.94197083]
[14.52362061 -130.65724182]
[8.44978714 -144.37251282]
[6.94056702 -129.44862366]
[0.20717905 -116.04483795]
[-10.86448383 -105.92464447]
[-24.81775284 -100.41953278]
[-39.81683731 -100.25379181]
[-53.88834763 -105.44922638]
[-65.18093872 -115.32229614]
[-72.20886993 -128.57402039]
[-74.04750061 -143.46090698]
[-70.45492554 -158.02433777]
[-61.90381241 -170.34823608]
[-49.51920319 -178.81117249]
[-34.93050766 -182.29972839]
[-20.05711937 -180.35490417]
[-6.85588980 -173.23257446]
[2.93753386 -161.86775208]
[0.05226118 -176.58764648]
[-2.83301139 -191.30754089]
[-5.71828413 -206.02742004]
[-19.63405991 -212.63479614]
[-26.90590477 -226.01290894]
[-24.92924690 -240.93124390]
[-14.66989803 -251.69616699]
[-17.55517006 -266.41607666]
[-32.61364365 -266.99838257]
[-47.13175583 -271.03833008]
[-60.32656860 -278.31799316]
[-71.48649597 -288.44482422]
[-80.00970459 -300.87268066]
[-85.43653870 -314.93136597]
[-87.47434235 -329.86267090]
[-86.01322174 -344.86138916]
[-81.13197327 -359.11868286]
[-73.09382629 -371.86563110]
[-62.33227539 -382.41485596]
[-49.42767715 -390.19738770]
[-35.07596207 -394.79357910]
[-20.05109787 -395.95556641]
[-5.16335726 -393.62063599]
[8.78438377 -387.91473389]
[21.03994179 -379.14559937]
[30.94238663 -367.78607178]
[37.95769501 -354.44882202]
[41.70753860 -339.85311890]
[41.98969269 -324.78601074]
[38.78894424 -310.06011963]
[32.27790451 -296.46957397]
[22.80770111 -284.74728394]
[10.88905430 -275.52542114]
[-2.83527899 -269.30133057]
[0.04999371 -254.58145142]
[13.61413670 -248.48620605]
[21.07648277 -235.41801453]
[19.39323235 -220.28460693]
[9.00160694 -208.91270447]
[11.88687992 -194.19281006]
[14.77215290 -179.47291565]
[17.65742493 -164.75302124]
[22.16505432 -150.44633484]
[28.23888779 -136.73107910]
[34.31272125 -123.01580811]
[40.38655472 -109.30053711]
[43.57374573 -123.95802307]
[53.58931732 -135.12442017]
[67.81521606 -139.88085938]
[82.53283691 -136.98400879]
[93.89501953 -127.19111633]
[98.93172455 -113.06201172]
[96.32636261 -98.29000854]
[86.75997162 -86.73647308]
[72.73318481 -81.42147064]
[57.91257095 -83.73433685]
[46.17272949 -93.06977081]
[50.14482498 -78.60524750]
[54.11692047 -64.14072418]
[64.94827271 -53.91668320]
[61.14155960 -38.56026840]
[65.11365509 -24.09574318]
[69.62128448 -9.78905678]
[74.65820312 4.33997250]
[79.69511414 18.46900177]
[84.73203278 32.59803009]
[89.76895142 46.72706223]
[94.97599030 51.97192001]
[94.77397156 61.10411453]
[99.59996796 75.30657196]
[104.42596436 89.50902557]
[109.46466064 75.38063049]
[121.27654266 66.13512421]
[136.20158386 64.63732910]
[149.61506653 71.35134888]
[157.36071777 84.19677734]
[157.03843689 99.19331360]
[148.74809265 111.69412231]
[135.05853271 117.82569122]
[120.21163177 115.68807983]
[108.80770111 105.94344330]
[111.69297791 120.66333771]
[114.57824707 135.38322449]
[117.46352386 150.10311890]
[120.34879303 164.82301331]
[123.23406982 179.54290771]
[127.95573425 187.36235046]
[126.05100250 194.50334167]
[128.71679688 209.26455688]
[132.08992004 213.24816895]
[133.46064758 217.68374634]
[132.99211121 221.73289490]
[131.15660095 224.74340820]
[133.16061401 239.60893250]
[135.16462708 254.47447205]
[142.31652832 241.28924561]
[155.05093384 233.36236572]
[170.03906250 232.76593018]
[183.36308289 239.65582275]
[191.54011536 252.23103333]
[192.43270874 267.20446777]
[185.80752563 280.66204834]
[173.39639282 289.08605957]
[158.44354248 290.27444458]
[144.85762024 283.91656494]
[136.19024658 271.67520142]
[135.96691895 286.67355347]
[138.96821594 295.30084229]
[135.62695312 301.89309692]
[135.18035889 316.88644409]
[134.73374939 331.87979126]
[134.28713989 346.87313843]
[137.07951355 352.86596680]
[136.51147461 358.52056885]
[133.59741211 362.30438232]
[132.70458984 377.27780151]
[141.32609558 393.54898071]
[131.09843445 407.80947876]
[130.42864990 422.79452515]
[129.75886536 437.77954102]
[129.08908081 452.76458740]
[143.61361694 456.76275635]
[156.88407898 463.89315796]
[168.23481750 473.79812622]
[177.09649658 485.98083496]
[183.02459717 499.83023071]
[185.72177124 514.65161133]
[185.05273438 529.70153809]
[181.05105591 544.22509766]
[173.91744995 557.49383545]
[164.00971985 568.84216309]
[151.82485962 577.70086670]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 199]
[16 198]
[17 197]
[18 196]
[21 194]
[22 193]
[23 190]
[24 189]
[25 188]
[26 187]
[27 185]
[28 184]
[29 173]
[30 172]
[31 171]
[32 167]
[33 166]
[34 164]
[35 163]
[36 162]
[37 161]
[38 160]
[39 159]
[40 149]
[41 148]
[42 147]
[43 145]
[44 144]
[45 143]
[46 142]
[47 141]
[53 140]
[54 139]
[56 137]
[57 136]
[58 135]
[59 124]
[60 123]
[61 122]
[62 121]
[78 120]
[79 119]
[80 118]
[81 117]
[85 113]
[86 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
