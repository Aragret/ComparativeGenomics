%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[67.12162018 720.35900879]
[53.94218445 728.54937744]
[38.46808624 727.39526367]
[26.64943504 717.34045410]
[23.03074074 702.25122070]
[29.00346375 687.92968750]
[42.27097321 679.88281250]
[43.38662338 664.92431641]
[44.50226974 649.96588135]
[45.61791992 635.00744629]
[42.98061752 628.10333252]
[46.86316299 619.83508301]
[48.20139694 604.89489746]
[49.53963089 589.95471191]
[35.98222351 583.67126465]
[25.37272453 573.10870361]
[19.00525284 559.52819824]
[17.66579819 544.56066895]
[21.53524399 530.01086426]
[30.16522980 517.63977051]
[42.53000259 508.95159912]
[57.14830399 505.01071167]
[58.48654175 490.07052612]
[59.82477570 475.13034058]
[61.16300964 460.19015503]
[62.50124359 445.24996948]
[63.83947754 430.30978394]
[65.17771149 415.36959839]
[66.51594543 400.42941284]
[52.08875656 396.39251709]
[38.64547348 389.77151489]
[26.64458275 380.79052734]
[16.49567032 369.75430298]
[8.54545975 357.03768921]
[3.06595230 343.07296753]
[0.24512744 328.33523560]
[0.18049347 313.32614136]
[2.87571716 298.55679321]
[8.24044991 284.53051758]
[16.09335327 271.72549438]
[26.16823196 260.57861328]
[38.12305450 251.47042847]
[51.55156326 244.71237183]
[65.99708557 240.53587341]
[80.96805573 239.08457947]
[82.30628967 224.14439392]
[83.64452362 209.20420837]
[84.98275757 194.26402283]
[86.32099152 179.32383728]
[79.75001526 165.95703125]
[88.68765259 152.90217590]
[90.02588654 137.96199036]
[91.36412048 123.02180481]
[92.25693512 108.04840088]
[92.59191132 93.05213928]
[92.81523895 78.05380249]
[92.92691040 63.05422211]
[92.92691040 48.05422211]
[92.92691040 33.05422211]
[92.92691040 18.05422020]
[90.31544495 13.53455925]
[89.75483704 8.92597866]
[90.93552399 5.02456474]
[93.27684784 2.38817620]
[93.94663239 -12.59686279]
[94.61641693 -27.58190155]
[95.28620148 -42.56694031]
[88.17282867 -56.69883728]
[96.47071075 -69.06792450]
[97.14049530 -84.05296326]
[97.81027985 -99.03800201]
[98.48006439 -114.02304077]
[99.14985657 -129.00808716]
[99.81964111 -143.99311829]
[100.48942566 -158.97816467]
[101.15921021 -173.96319580]
[86.15559387 -177.82487488]
[72.28379822 -184.71102905]
[60.14569473 -194.32026672]
[50.26740265 -206.23310852]
[43.07647705 -219.93025208]
[38.88338089 -234.81529236]
[37.86810684 -250.24063110]
[40.07245255 -265.53567505]
[45.39828491 -280.03594971]
[53.61191940 -293.11206055]
[64.35438538 -304.19686890]
[77.15708160 -312.81024170]
[91.46224213 -318.57977295]
[106.64723969 -321.25683594]
[107.09384918 -336.25018311]
[99.77085876 -350.27459717]
[107.88366699 -362.76586914]
[108.33027649 -377.75921631]
[93.80472565 -381.79302979]
[80.66695404 -389.18643188]
[69.68079376 -399.50961304]
[61.48494720 -412.16232300]
[56.55591965 -426.40902710]
[55.18027496 -441.42138672]
[57.43799591 -456.32662964]
[63.19781494 -470.25814819]
[72.12487030 -482.40603638]
[83.70014954 -492.06402588]
[97.25068665 -498.67056274]
[111.98866272 -501.84158325]
[127.05723572 -501.39273071]
[141.58033752 -497.35012817]
[154.71362305 -489.94873047]
[165.69352722 -479.61892700]
[173.88169861 -466.96124268]
[178.80209351 -452.71154785]
[180.16864014 -437.69836426]
[177.90188599 -422.79449463]
[172.13360596 -408.86645508]
[163.19918823 -396.72396851]
[151.61805725 -387.07302856]
[138.06352234 -380.47470093]
[123.32362366 -377.31259155]
[122.87702179 -362.31924438]
[130.23194885 -349.36724854]
[122.08719635 -335.80355835]
[121.64059448 -320.81021118]
[135.80448914 -317.52209473]
[149.05584717 -311.52432251]
[160.88168335 -303.04693604]
[170.82374573 -292.41598511]
[178.49635315 -280.04113770]
[183.60125732 -266.39962769]
[185.93934631 -252.01805115]
[185.41830444 -237.45202637]
[182.05632019 -223.26460266]
[175.98147583 -210.00462341]
[167.42678833 -198.18542480]
[156.72135925 -188.26499939]
[144.27764893 -180.62823486]
[130.57563782 -175.57194519]
[116.14424896 -173.29341125]
[115.47446442 -158.30838013]
[114.80467987 -143.32333374]
[114.13489532 -128.33830261]
[113.46510315 -113.35325623]
[112.79531860 -98.36821747]
[112.12553406 -83.38317871]
[111.45574951 -68.39813995]
[118.61703491 -55.33807373]
[110.27124023 -41.89715576]
[109.60145569 -26.91211700]
[108.93167114 -11.92707729]
[108.26188660 3.05796123]
[107.92691040 18.05422020]
[107.92691040 33.05422211]
[107.92691040 48.05422211]
[107.92691040 63.05422211]
[111.07040405 69.74303436]
[107.81357574 78.27713013]
[107.59024811 93.27546692]
[110.62862396 100.74144745]
[107.25028992 108.49501038]
[109.44324493 112.24266052]
[110.24858856 116.10477448]
[109.80072021 119.63108063]
[108.36646271 122.46118927]
[106.30430603 124.36003876]
[104.96607208 139.30023193]
[103.62783813 154.24041748]
[110.10309601 168.67584229]
[101.26117706 180.66207886]
[99.92294312 195.60226440]
[98.58470917 210.54244995]
[97.24647522 225.48263550]
[95.90824127 240.42282104]
[110.38296509 244.51164246]
[123.85628510 251.18890381]
[135.86997986 260.22589111]
[146.01579285 271.31369019]
[153.94927979 284.07363892]
[159.40145874 298.07043457]
[162.18804932 312.82684326]
[162.21556091 327.84005737]
[159.48454285 342.59875488]
[154.08944702 356.60055542]
[146.21536255 369.36914062]
[136.13171387 380.47042847]
[124.18299866 389.52731323]
[110.77705383 396.23254395]
[96.37108612 400.35900879]
[81.45613098 401.76763916]
[80.11789703 416.70782471]
[78.77966309 431.64801025]
[77.44142914 446.58819580]
[76.10319519 461.52838135]
[74.76496124 476.46856689]
[73.42672729 491.40875244]
[72.08849335 506.34893799]
[85.77371979 512.82507324]
[96.39759064 523.57238770]
[102.69161987 537.28027344]
[103.91367340 552.28613281]
[99.93551636 566.77734375]
[91.25588226 579.01007080]
[78.93810272 587.51892090]
[64.47982025 591.29296875]
[63.14158249 606.23315430]
[61.80334854 621.17333984]
[60.57637405 636.12304688]
[59.46072388 651.08154297]
[58.34507751 666.03997803]
[57.22942734 680.99841309]
[69.15645599 690.92443848]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 209]
[8 208]
[9 207]
[10 206]
[12 205]
[13 204]
[14 203]
[22 195]
[23 194]
[24 193]
[25 192]
[26 191]
[27 190]
[28 189]
[29 188]
[45 172]
[46 171]
[47 170]
[48 169]
[49 168]
[51 166]
[52 165]
[53 164]
[54 159]
[55 157]
[56 156]
[57 154]
[58 153]
[59 152]
[60 151]
[64 150]
[65 149]
[66 148]
[67 147]
[69 145]
[70 144]
[71 143]
[72 142]
[73 141]
[74 140]
[75 139]
[76 138]
[90 123]
[91 122]
[93 120]
[94 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
