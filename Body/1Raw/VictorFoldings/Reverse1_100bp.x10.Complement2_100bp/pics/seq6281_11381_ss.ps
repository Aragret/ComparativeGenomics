%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[91.61151123 573.13873291]
[87.15369415 558.79907227]
[84.35955811 544.04473877]
[83.26554108 529.06805420]
[83.88590240 514.06427002]
[86.21255493 499.22903442]
[90.21516418 484.75573730]
[95.84155273 470.83303833]
[103.01836395 457.64245605]
[111.65203094 445.35598755]
[121.62999725 434.13378906]
[132.82218933 424.12216187]
[145.08268738 415.45162964]
[158.25164795 408.23522949]
[152.58886719 394.34521484]
[146.92607117 380.45520020]
[141.49003601 375.44805908]
[141.28407288 366.31594849]
[135.82872009 352.34317017]
[123.99248505 343.30142212]
[126.18093872 327.63232422]
[120.72558594 313.65951538]
[118.55148315 328.50112915]
[111.22630310 341.59088135]
[99.71379089 351.20660400]
[85.52862549 356.08319092]
[70.53709412 355.57901001]
[56.71160889 349.76043701]
[45.87113953 339.39297485]
[39.44193649 325.84066772]
[38.26987457 310.88650513]
[42.50915527 296.49801636]
[51.60203552 284.56823730]
[64.35218048 276.66674805]
[79.08209991 273.83309937]
[93.85380554 276.44012451]
[106.72383881 284.14480591]
[116.00003052 295.93557739]
[113.77491760 281.10153198]
[111.54979706 266.26748657]
[109.32468414 251.43345642]
[107.09956360 236.59941101]
[104.49666595 234.22091675]
[102.91650391 230.46350098]
[102.99462128 225.82160950]
[105.12171173 221.05477905]
[103.56118774 206.13618469]
[94.54179382 194.28291321]
[100.80140686 179.75268555]
[99.24088287 164.83407593]
[90.22148895 152.98081970]
[96.48110962 138.45057678]
[94.92058563 123.53197479]
[79.31585693 112.31748199]
[76.89035797 93.25470734]
[89.18955231 78.48980713]
[86.96443176 63.65576172]
[84.73931122 48.82171631]
[82.51419830 33.98767471]
[80.28907776 19.15362930]
[78.06396484 4.31958628]
[75.83884430 -10.51445770]
[73.61373138 -25.34850121]
[71.38861084 -40.18254471]
[69.16349792 -55.01659012]
[59.46466446 -67.51631927]
[65.22838593 -81.25054169]
[62.12427139 -95.92584229]
[58.15217590 -110.39036560]
[54.18008041 -124.85488892]
[50.20798492 -139.31941223]
[46.23588943 -153.78393555]
[36.66099548 -142.23744202]
[21.66159630 -142.37155151]
[12.29468632 -154.08740234]
[15.46520519 -168.74848938]
[28.83596420 -175.54722595]
[42.54945755 -169.47308350]
[39.66418839 -184.19297791]
[34.94252396 -192.01242065]
[36.84724808 -199.15341187]
[32.24253082 -207.04229736]
[34.25336456 -214.15414429]
[31.80763626 -228.95341492]
[29.36190987 -243.75268555]
[19.35020638 -251.88462830]
[17.61782837 -264.26132202]
[24.55332756 -274.17221069]
[22.32820892 -289.00625610]
[20.10309219 -303.84030151]
[5.13663626 -305.88525391]
[-8.64687634 -312.06518555]
[-20.13007927 -321.87908936]
[-28.38207817 -334.53140259]
[-32.73392105 -348.99645996]
[-32.83282852 -364.10165405]
[-28.67077446 -378.62246704]
[-20.58516312 -391.38177490]
[-9.23145676 -401.34518433]
[4.46994925 -407.70507812]
[19.40834427 -409.94586182]
[34.37273788 -407.88586426]
[48.15003586 -401.69207764]
[59.62337494 -391.86666870]
[67.86265564 -379.20605469]
[72.19996643 -364.73663330]
[72.28369904 -349.63134766]
[68.10706329 -335.11471558]
[60.00863266 -322.36355591]
[48.64492416 -312.41152954]
[34.93713760 -306.06539917]
[37.16225433 -291.23135376]
[39.38737106 -276.39730835]
[51.04312134 -263.27822876]
[44.16117859 -246.19841003]
[46.60690689 -231.39913940]
[49.05263519 -216.59986877]
[51.60846710 -201.81921387]
[54.38407898 -187.07824707]
[57.26935196 -172.35835266]
[60.70041275 -157.75602722]
[64.67250824 -143.29150391]
[68.64460754 -128.82698059]
[72.61669922 -114.36246490]
[76.58879852 -99.89794159]
[83.12142181 -113.40071106]
[96.28829193 -120.58634949]
[111.17850494 -118.77479553]
[122.23836517 -108.64170074]
[125.34281921 -93.96647644]
[119.33399200 -80.22260284]
[106.45301819 -72.53621674]
[91.50418854 -73.77413940]
[80.06242371 -83.47565460]
[89.60210419 -72.03695679]
[83.99753571 -57.24170685]
[86.22265625 -42.40766144]
[88.44776917 -27.57361794]
[90.67288971 -12.73957443]
[92.89801025 2.09446883]
[95.12312317 16.92851257]
[97.34824371 31.76255608]
[99.57335663 46.59659958]
[101.79847717 61.43064499]
[104.02359009 76.26468658]
[113.46096802 80.04113007]
[120.49846649 87.37592316]
[123.88140106 96.96140289]
[123.00665283 107.08860779]
[118.03016663 115.95203400]
[109.83918762 121.97145081]
[111.39971161 136.89006042]
[120.53072357 149.81039429]
[114.15949249 163.27355957]
[115.72001648 178.19215393]
[124.85102844 191.11250305]
[118.47978973 204.57565308]
[120.04031372 219.49426270]
[121.93360901 234.37429810]
[124.15872192 249.20834351]
[126.38384247 264.04238892]
[128.60896301 278.87643433]
[130.83407593 293.71047974]
[134.69837952 308.20416260]
[140.15373230 322.17697144]
[152.38017273 332.21810913]
[149.80151367 346.88781738]
[155.25688171 360.86059570]
[160.81610107 374.79238892]
[166.47888184 388.68243408]
[172.14167786 402.57244873]
[186.60238647 398.52456665]
[201.43028259 396.15151978]
[216.43203735 395.48419189]
[231.41206360 396.53134155]
[246.17507935 399.27929688]
[260.52859497 403.69223022]
[274.28552246 409.71258545]
[287.26647949 417.26193237]
[299.30224609 426.24179077]
[310.23593140 436.53512573]
[319.92492676 448.00772095]
[328.24298096 460.51004028]
[335.08163452 473.87905884]
[340.35174561 487.94049072]
[343.98455811 502.51101685]
[345.93273926 517.40069580]
[346.17089844 532.41540527]
[344.69592285 547.35937500]
[341.52706909 562.03778076]
[336.70559692 576.25927734]
[330.29440308 589.83850098]
[322.37704468 602.59832764]
[313.05676270 614.37243652]
[302.45507812 625.00738525]
[290.71017456 634.36444092]
[277.97515869 642.32165527]
[264.41610718 648.77532959]
[250.20976257 653.64129639]
[235.54133606 656.85607910]
[220.60205078 658.37780762]
[205.58668518 658.18664551]
[190.69099426 656.28503418]
[176.10916138 652.69781494]
[162.03131104 647.47174072]
[148.64094543 640.67498779]
[136.11267090 632.39611816]
[124.60980225 622.74304199]
[114.28231049 611.84161377]
[105.26482391 599.83398438]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 171]
[15 170]
[16 169]
[18 168]
[19 167]
[21 165]
[22 164]
[38 163]
[39 162]
[40 161]
[41 160]
[42 159]
[46 158]
[47 157]
[49 155]
[50 154]
[52 152]
[53 151]
[56 145]
[57 144]
[58 143]
[59 142]
[60 141]
[61 140]
[62 139]
[63 138]
[64 137]
[65 136]
[67 134]
[68 125]
[69 124]
[70 123]
[71 122]
[72 121]
[78 120]
[79 119]
[81 118]
[83 117]
[84 116]
[85 115]
[88 113]
[89 112]
[90 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
