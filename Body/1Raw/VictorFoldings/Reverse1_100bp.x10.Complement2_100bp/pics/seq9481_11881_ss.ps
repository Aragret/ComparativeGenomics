%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAUCGCCCCACUACGGACAACCCCCGGUCACGGGAGGAUUAACCCCCCAUCCCCGAUCCGACCUCACCAUUUUCCGAGUCUUUUUAGGACGCUUCUUUxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[5.16350508 310.68518066]
[12.38196182 323.85797119]
[17.85660553 337.84570312]
[21.49753761 352.41870117]
[23.24497032 367.33764648]
[23.07021141 382.35754395]
[20.97612953 397.23178101]
[16.99711037 411.71612549]
[11.19849300 425.57269287]
[3.67549706 438.57394409]
[-5.44834328 450.50640869]
[-16.02320671 461.17416382]
[-27.87544441 470.40197754]
[-40.81043243 478.03836060]
[-54.61576462 483.95791626]
[-69.06474304 488.06344604]
[-83.92011261 490.28750610]
[-98.93791962 490.59359741]
[-113.87157440 488.97665405]
[-128.47583008 485.46328735]
[-142.51089478 480.11117554]
[-155.74629211 473.00817871]
[-167.96469116 464.27093506]
[-178.96543884 454.04293823]
[-188.56790161 442.49212646]
[-196.61439514 429.80819702]
[-202.97279358 416.19940186]
[-207.53869629 401.88925171]
[-210.23709106 387.11267090]
[-211.02371216 372.11236572]
[-209.88562012 357.13461304]
[-206.84149170 342.42538452]
[-201.94134521 328.22619629]
[-195.26560974 314.77023315]
[-186.92395020 302.27844238]
[-177.05329895 290.95593262]
[-165.81576538 280.98867798]
[-153.39588928 272.54031372]
[-139.99758911 265.74960327]
[-125.84089661 260.72799683]
[-111.15827179 257.55801392]
[-96.19081116 256.29168701]
[-81.18431091 256.94979858]
[-66.38516998 259.52154541]
[-52.03641891 263.96469116]
[-38.37367249 270.20629883]
[-25.62128639 278.14385986]
[-16.13238716 266.52661133]
[-6.64348888 254.90934753]
[2.75866222 243.22175598]
[12.07354546 231.46450806]
[21.38842773 219.70726013]
[23.00934792 202.23329163]
[40.18489456 195.59385681]
[49.32369614 183.69921875]
[58.46249771 171.80458069]
[67.60130310 159.90995789]
[76.74010468 148.01531982]
[83.32012939 134.53558350]
[87.07643127 120.01352692]
[90.83273315 105.49147034]
[92.94735718 90.64127350]
[85.62436676 76.61685181]
[93.73717499 64.12558746]
[94.18378448 49.13223648]
[94.63038635 34.13888931]
[94.63038635 19.13888741]
[94.18378448 4.14553785]
[93.73717499 -10.84781170]
[93.29057312 -25.84116173]
[92.84396362 -40.83451080]
[78.97068024 -47.10295486]
[69.23445892 -58.72590256]
[65.52535248 -73.36361694]
[68.52713013 -88.09963989]
[77.59191132 -100.02185059]
[90.87911987 -106.79796600]
[90.43251038 -121.79131317]
[82.28775787 -135.35499573]
[89.64269257 -148.30699158]
[89.19608307 -163.30035400]
[88.74948120 -178.29370117]
[88.30287170 -193.28704834]
[73.37253571 -194.97993469]
[58.83511353 -198.78047180]
[44.98656845 -204.61129761]
[32.10884094 -212.35371399]
[20.46409798 -221.85006714]
[10.28941917 -232.90704346]
[1.79194427 -245.29953003]
[-4.85532808 -258.77523804]
[-9.51706886 -273.05978394]
[-12.09836960 -287.86242676]
[-12.54667950 -302.88174438]
[-10.85287094 -317.81195068]
[-7.05142736 -332.34915161]
[-1.21974194 -346.19732666]
[6.52345991 -359.07458496]
[16.02053642 -370.71875000]
[27.07813835 -380.89273071]
[39.47114944 -389.38943481]
[52.94726181 -396.03588867]
[67.23212433 -400.69674683]
[82.03490448 -403.27713013]
[97.05424500 -403.72448730]
[111.98436737 -402.02975464]
[126.52132416 -398.22741699]
[140.36914062 -392.39486694]
[153.24591064 -384.65087891]
[164.88948059 -375.15307617]
[175.06278992 -364.09484863]
[183.55873108 -351.70132446]
[190.20434570 -338.22479248]
[194.86430359 -323.93963623]
[197.44378662 -309.13668823]
[197.89022827 -294.11734009]
[196.19458008 -279.18731689]
[192.39132690 -264.65060425]
[186.55793762 -250.80313110]
[178.81314087 -237.92684937]
[169.31462097 -226.28385925]
[158.25575256 -216.11123657]
[145.86169434 -207.61605835]
[132.38476562 -200.97129822]
[118.09932709 -196.31221008]
[103.29621887 -193.73365784]
[103.74282837 -178.74031067]
[104.18943024 -163.74694824]
[104.63603973 -148.75360107]
[112.74884796 -136.26234436]
[105.42585754 -122.23792267]
[105.87246704 -107.24456787]
[119.53943634 -101.27133942]
[129.29777527 -89.90981293]
[133.17132568 -75.37858582]
[130.34005737 -60.54605103]
[121.31289673 -48.36420059]
[107.83731842 -41.28111649]
[108.28392029 -26.28776741]
[108.73052979 -11.29441833]
[109.17713165 3.69893193]
[109.62374115 18.69228172]
[111.56922150 20.71050835]
[112.83248138 23.62097168]
[113.06967163 27.16768074]
[112.03587341 30.97501564]
[109.62374115 34.58549500]
[109.17713165 49.57884216]
[108.73052979 64.57219696]
[116.08545685 77.52419281]
[107.94070435 91.08787537]
[115.74847412 78.28011322]
[127.61122894 69.09997559]
[141.96823120 64.75526428]
[156.93057251 65.81760406]
[170.52967834 72.14722443]
[180.97637939 82.91135406]
[186.89620972 96.69378662]
[187.51033020 111.68121338]
[182.73794556 125.90177155]
[173.20692444 137.48449707]
[160.17124939 144.90550232]
[145.34599304 147.18841553]
[130.68165588 144.03286743]
[118.10760498 135.85404968]
[109.27816010 123.72801208]
[105.35478973 109.24777222]
[101.59848785 123.76982880]
[97.84219360 138.29188538]
[107.62828064 126.92384338]
[119.60265350 117.88977051]
[133.22055054 111.60066223]
[147.86244202 108.34262848]
[162.86224365 108.26389313]
[177.53753662 111.36802673]
[191.22070312 117.51382446]
[203.28926086 126.42168427]
[213.19416809 137.68635559]
[220.48480225 150.79539490]
[224.82949829 165.15238953]
[226.03059387 180.10423279]
[224.03346252 194.97068787]
[218.92895508 209.07543945]
[210.94929504 221.77680969]
[200.45748901 232.49697876]
[187.93084717 240.74824524]
[173.93927002 246.15524292]
[159.11924744 248.47196960]
[144.14501953 247.59304810]
[129.69781494 243.55845642]
[116.43486023 236.55172729]
[104.95954895 226.89164734]
[95.79392242 215.01766968]
[89.35496521 201.46998596]
[85.93560028 186.86491394]
[85.69139099 171.86689758]
[88.63473511 157.15412903]
[79.49593353 169.04875183]
[70.35713196 180.94338989]
[61.21833038 192.83802795]
[52.07952499 204.73265076]
[52.97825241 217.59947205]
[45.12164688 227.31840515]
[33.14567947 229.02214050]
[23.83079720 240.77938843]
[14.51591396 252.53665161]
[11.63966274 261.20642090]
[4.97377443 264.39825439]
[-4.51512384 276.01550293]
[-14.00402260 287.63278198]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 210]
[48 209]
[49 208]
[50 206]
[51 205]
[52 204]
[54 201]
[55 200]
[56 199]
[57 198]
[58 197]
[59 169]
[60 168]
[61 167]
[62 151]
[64 149]
[65 148]
[66 147]
[67 142]
[68 141]
[69 140]
[70 139]
[71 138]
[77 132]
[78 131]
[80 129]
[81 128]
[82 127]
[83 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
