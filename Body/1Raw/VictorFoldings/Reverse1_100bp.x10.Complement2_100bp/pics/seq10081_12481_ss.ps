%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCGGCGUGAGCAUUCCCCACCUAAAAAGAUACAUCGGCAACUCAACACCAUCAGUUUUACAUUAUUAAUAAUCAUCAUUCCGAUCCUCCCACAACUAAxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[77.10746765 571.39880371]
[75.99182129 556.44036865]
[74.87616730 541.48193359]
[73.76052094 526.52343750]
[72.64487457 511.56500244]
[57.83531952 509.35617065]
[43.88195801 503.90435791]
[31.48575592 495.48004150]
[21.27022171 484.50305176]
[13.75004578 471.52172852]
[9.30516434 457.18548584]
[8.16157246 442.21234131]
[10.37983131 427.35305786]
[15.85186768 413.35330200]
[24.30624390 400.91638184]
[35.32160568 390.66784668]
[48.34770203 383.12402344]
[62.73284912 378.66604614]
[61.61719894 363.70761108]
[60.50155258 348.74914551]
[59.38590240 333.79071045]
[51.87279510 346.77349854]
[39.23635101 354.85559082]
[24.29957962 356.23141479]
[10.39939690 350.59359741]
[0.64113903 339.20166016]
[-2.79517508 324.60058594]
[0.85813642 310.05227661]
[10.78491402 298.80685425]
[24.76749039 293.37661743]
[39.68212128 294.97467041]
[52.19684219 303.24398804]
[59.51583862 316.33721924]
[60.85407257 301.39703369]
[62.19230652 286.45684814]
[49.18350220 293.92486572]
[35.17850113 288.55270386]
[30.50126648 274.30056763]
[38.59968567 261.67459106]
[53.50390244 259.98214722]
[64.22651672 270.46932983]
[66.67224121 255.67005920]
[69.11796570 240.87078857]
[71.56369781 226.07151794]
[74.00942230 211.27224731]
[76.45514679 196.47297668]
[78.90087891 181.67370605]
[81.34660339 166.87443542]
[83.79233551 152.07516479]
[86.23806000 137.27589417]
[88.68378448 122.47662354]
[75.80707550 106.92515564]
[78.50455475 86.91561890]
[95.03971100 75.32914734]
[96.60023499 60.41054535]
[98.16075897 45.49193954]
[99.72128296 30.57333565]
[86.13399506 23.89419556]
[75.67130280 12.98987770]
[69.58206940 -0.81017536]
[68.58355713 -15.83259296]
[72.77703094 -30.26298714]
[81.63782501 -42.36508560]
[94.08093262 -50.68964767]
[108.59380341 -54.24799347]
[110.15432739 -69.16659546]
[111.71485138 -84.08520508]
[113.27536774 -99.00380707]
[114.83589172 -113.92240906]
[100.35375977 -120.28546143]
[88.56127167 -130.79942322]
[80.60479736 -144.42613220]
[77.25282288 -159.82560730]
[78.82173920 -175.48785400]
[85.14601898 -189.88088989]
[95.59557343 -201.60063171]
[109.13853455 -209.50781250]
[124.44314575 -212.83879089]
[125.78137970 -227.77897644]
[117.64816284 -244.29963684]
[128.29586792 -258.24929810]
[129.41151428 -273.20776367]
[130.52717590 -288.16619873]
[131.64282227 -303.12466431]
[116.35023499 -309.19421387]
[103.69278717 -319.67651367]
[94.89966583 -333.53863525]
[90.82019043 -349.42019653]
[91.84173584 -365.76678467]
[97.85303497 -380.98220825]
[108.25611115 -393.58422852]
[122.02578735 -402.34906006]
[137.81068420 -406.43014526]
[138.48046875 -421.41519165]
[139.15025330 -436.40023804]
[139.82003784 -451.38525391]
[140.48982239 -466.37030029]
[126.25347900 -471.45144653]
[114.14830780 -480.50439453]
[105.25068665 -492.72421265]
[100.35179138 -507.02429199]
[99.88722229 -522.13311768]
[103.89830017 -536.70715332]
[112.02835083 -549.45050049]
[123.55445862 -559.23010254]
[137.45173645 -565.17626953]
[152.48443604 -566.76037598]
[167.31587219 -563.84143066]
[180.62722778 -556.67913818]
[191.23487854 -545.91021729]
[198.19560242 -532.49230957]
[200.89045715 -517.61853027]
[199.07980347 -502.61145020]
[192.92465210 -488.80545044]
[182.97232056 -477.42819214]
[170.10774231 -469.49130249]
[155.47485352 -465.70050049]
[154.80506897 -450.71548462]
[154.13528442 -435.73043823]
[153.46549988 -420.74539185]
[152.79571533 -405.76034546]
[165.75440979 -401.51513672]
[177.18052673 -394.04907227]
[186.28941345 -383.86700439]
[192.45350647 -371.66049194]
[195.24557495 -358.26092529]
[194.46829224 -344.58285522]
[190.16818237 -331.56164551]
[182.63290405 -320.08938599]
[172.37199402 -310.95391846]
[160.08242798 -304.78457642]
[146.60127258 -302.00900269]
[145.48562622 -287.05056763]
[144.36997986 -272.09210205]
[143.25431824 -257.13363647]
[150.90774536 -247.76606750]
[150.10070801 -235.29479980]
[140.72155762 -226.44073486]
[139.38333130 -211.50054932]
[152.62721252 -206.22938538]
[163.86100769 -197.42927551]
[172.16825867 -185.80670166]
[176.86810303 -172.29888916]
[177.57095337 -157.99813843]
[174.21086121 -144.06361389]
[167.05157471 -131.62727356]
[156.66581726 -121.70201111]
[143.88951111 -115.09909058]
[129.75450134 -112.36188507]
[128.19396973 -97.44328308]
[126.63345337 -82.52468109]
[125.07292938 -67.60607147]
[123.51240540 -52.68746948]
[136.97476196 -46.20284653]
[147.42582703 -35.48350143]
[153.59039307 -21.80970955]
[154.70686340 -6.82388306]
[150.62121582 7.66671991]
[141.80799866 19.90793991]
[129.31524658 28.41106224]
[114.63988495 32.13385773]
[113.07936096 47.05246353]
[111.51883698 61.97106934]
[109.95832062 76.88967133]
[117.65651703 82.06950378]
[122.95426178 89.68704224]
[125.13130951 98.70665741]
[123.89167023 107.90210724]
[119.40389252 116.02323914]
[112.27809906 121.96596527]
[103.48305511 124.92234802]
[101.03733063 139.72161865]
[98.59160614 154.52088928]
[96.14587402 169.32015991]
[93.70014954 184.11943054]
[91.25441742 198.91870117]
[88.80869293 213.71797180]
[86.36296844 228.51724243]
[83.91723633 243.31651306]
[81.47151184 258.11578369]
[79.02578735 272.91506958]
[77.13249207 287.79510498]
[75.79425812 302.73529053]
[74.45602417 317.67547607]
[74.34435272 332.67504883]
[75.46000671 347.63351440]
[76.57565308 362.59194946]
[77.69129944 377.55041504]
[92.57859802 379.82513428]
[106.57963562 385.35321045]
[118.99340820 393.85430908]
[129.19915771 404.89950562]
[136.68739319 417.93264771]
[141.08534241 432.29849243]
[142.17553711 447.27557373]
[139.90649414 462.11257935]
[134.39518738 476.06585693]
[125.92100525 488.43676758]
[114.91162872 498.60675049]
[101.92137146 506.06808472]
[87.60332489 510.44937134]
[88.71897125 525.40783691]
[89.83462524 540.36627197]
[90.95027161 555.32470703]
[92.06591797 570.28314209]
[104.20351410 580.40515137]
[105.54554749 596.15234375]
[95.29581451 608.18225098]
[79.53530121 609.35772705]
[67.61444092 598.98138428]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 205]
[2 204]
[3 203]
[4 202]
[5 201]
[18 188]
[19 187]
[20 186]
[21 185]
[33 184]
[34 183]
[35 182]
[41 181]
[42 180]
[43 179]
[44 178]
[45 177]
[46 176]
[47 175]
[48 174]
[49 173]
[50 172]
[51 171]
[54 164]
[55 163]
[56 162]
[57 161]
[65 153]
[66 152]
[67 151]
[68 150]
[69 149]
[78 139]
[79 138]
[81 135]
[82 134]
[83 133]
[84 132]
[93 121]
[94 120]
[95 119]
[96 118]
[97 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
