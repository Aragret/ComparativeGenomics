%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[145.90203857 549.66601562]
[142.81074524 534.97167969]
[141.38417053 520.02355957]
[141.64025879 505.00976562]
[143.57575989 490.11904907]
[147.16636658 475.53866577]
[152.36691284 461.45199585]
[159.11199951 448.03619385]
[167.31678772 435.45996094]
[176.87809753 423.88146973]
[187.67568970 413.44635010]
[199.57377625 404.28579712]
[212.42272949 396.51504517]
[206.14537048 382.89172363]
[199.86801147 369.26840210]
[185.84956360 364.36752319]
[179.28935242 350.64096069]
[184.52490234 335.97036743]
[178.24754333 322.34704590]
[171.97018433 308.72372437]
[165.69282532 295.10040283]
[163.11277771 294.00427246]
[160.81147766 291.82009888]
[159.20549011 288.64895630]
[158.66719055 284.74066162]
[159.47438049 280.47424316]
[154.01902771 266.50143433]
[148.56367493 252.52864075]
[143.10830688 238.55583191]
[137.54908752 224.62403870]
[131.88630676 210.73400879]
[126.22351074 196.84397888]
[123.13285065 195.14688110]
[120.71064758 191.86846924]
[119.69116974 187.33923340]
[120.63332367 182.20509338]
[115.59640503 168.07606506]
[110.55949402 153.94703674]
[105.52257538 139.81800842]
[100.31553650 134.57315063]
[100.51755524 125.44094849]
[95.69155884 111.23849487]
[93.04289246 126.00279236]
[85.56417847 139.00544739]
[74.13401031 148.71890259]
[60.09519196 154.00204468]
[45.09698868 154.23420715]
[30.90137672 149.38812256]
[19.17603874 140.03309631]
[11.29845905 127.26815033]
[8.19408607 112.59290314]
[10.22761917 97.73138428]
[17.16016006 84.42951202]
[28.17728233 74.24996948]
[41.98470306 68.38864899]
[56.96034622 67.53412628]
[71.34487915 71.78678894]
[83.44842529 80.64704895]
[91.84971619 93.07542419]
[90.51148224 78.13523865]
[89.17324829 63.19505692]
[87.83501434 48.25487137]
[86.49678040 33.31468582]
[84.93625641 18.39608192]
[83.15379333 3.50236487]
[81.37133026 -11.39135265]
[66.64216614 -14.89524269]
[54.02420044 -23.21142387]
[45.02970886 -35.32007217]
[40.72877502 -49.74823761]
[41.62199783 -64.74902344]
[47.58230209 -78.51308441]
[57.87261200 -89.38684082]
[71.23692322 -96.07118225]
[69.45446014 -110.96489716]
[67.67199707 -125.85861206]
[65.55737305 -140.70881653]
[63.11164474 -155.50808716]
[60.66591644 -170.30735779]
[58.22018814 -185.10662842]
[55.77445984 -199.90589905]
[47.87252808 -187.15602112]
[34.02954483 -181.37918091]
[19.40860176 -184.73001099]
[9.46295071 -195.95872498]
[7.90207291 -210.87728882]
[15.30813694 -223.92146301]
[28.91886330 -230.22605896]
[43.65779114 -227.43965149]
[54.02817154 -216.60044861]
[53.35838699 -231.58547974]
[52.68859863 -246.57052612]
[49.45823669 -252.33908081]
[49.60412598 -258.02026367]
[52.22869492 -262.01031494]
[52.00536728 -277.00866699]
[51.78203964 -292.00698853]
[51.55871201 -307.00534058]
[37.53919220 -312.95285034]
[27.15554047 -324.09286499]
[22.20679092 -338.49526978]
[23.55034256 -353.66482544]
[30.95341682 -366.97323608]
[43.13338852 -376.11480713]
[57.98000336 -379.50567627]
[72.92098999 -376.55834961]
[85.36774445 -367.78347778]
[93.16378021 -354.70135498]
[94.95838928 -339.57855225]
[90.44064331 -325.03518677]
[80.39328003 -313.59094238]
[66.55705261 -307.22866821]
[66.78038025 -292.23031616]
[67.00370789 -277.23199463]
[67.22703552 -262.23364258]
[67.67363739 -247.24031067]
[68.34342194 -232.25526428]
[69.01320648 -217.27023315]
[70.57373047 -202.35162354]
[73.01946259 -187.55235291]
[75.46518707 -172.75308228]
[77.91091156 -157.95381165]
[80.35664368 -143.15454102]
[82.99465942 -140.81504822]
[84.63059235 -137.08158875]
[84.62159729 -132.43904114]
[82.56571198 -127.64108276]
[84.34817505 -112.74736023]
[86.13064575 -97.85364532]
[100.69488525 -94.51177216]
[113.26055145 -86.37339020]
[122.30054474 -74.40455627]
[126.70839691 -60.03819656]
[125.93366241 -45.00257874]
[120.05056763 -31.11339569]
[109.75138855 -20.05451202]
[96.26504517 -13.17381859]
[98.04750824 1.71989894]
[99.82997894 16.61361694]
[102.96409607 20.21727562]
[103.86769104 25.82802773]
[101.43696594 31.97645187]
[102.77519989 46.91663742]
[104.11343384 61.85682297]
[105.45166779 76.79700470]
[106.78990173 91.73719025]
[109.89401245 106.41249847]
[114.72000885 120.61495209]
[119.65160370 134.78108215]
[124.68852234 148.91011047]
[129.72543335 163.03913879]
[134.76235962 177.16816711]
[140.11354065 191.18119812]
[145.77632141 205.07122803]
[151.43911743 218.96125793]
[157.57669067 225.72645569]
[157.08111572 233.10047913]
[162.53646851 247.07327271]
[167.99182129 261.04608154]
[173.44717407 275.01885986]
[179.31614685 288.82305908]
[185.59350586 302.44638062]
[191.87086487 316.06967163]
[198.14822388 329.69299316]
[212.70199585 335.24505615]
[218.87406921 349.15048218]
[213.49131775 362.99105835]
[219.76869202 376.61437988]
[226.04605103 390.23767090]
[240.30145264 385.51928711]
[254.99552917 382.42666626]
[269.94348145 380.99874878]
[284.95730591 381.25347900]
[299.84820557 383.18765259]
[314.42889404 386.77694702]
[328.51605225 391.97622681]
[341.93246460 398.72012329]
[354.50942993 406.92376709]
[366.08877563 416.48403931]
[376.52487183 427.28070068]
[385.68646240 439.17797852]
[393.45837402 452.02621460]
[399.74282837 465.66387939]
[404.46081543 479.91943359]
[407.55297852 494.61358643]
[408.98046875 509.56158447]
[408.72528076 524.57537842]
[406.79064941 539.46624756]
[403.20092773 554.04681396]
[398.00122070 568.13385010]
[391.25695801 581.55004883]
[383.05291748 594.12677002]
[373.49227905 605.70581055]
[362.69531250 616.14160156]
[350.79776001 625.30285645]
[337.94927979 633.07434082]
[324.31146240 639.35839844]
[310.05575562 644.07598877]
[295.36151123 647.16772461]
[280.41348267 648.59472656]
[265.39965820 648.33911133]
[250.50888062 646.40405273]
[235.92839050 642.81384277]
[221.84155273 637.61370850]
[208.42555237 630.86907959]
[195.84907532 622.66461182]
[184.27030945 613.10369873]
[173.83485413 602.30639648]
[164.67395020 590.40856934]
[156.90281677 577.55987549]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 169]
[14 168]
[15 167]
[18 164]
[19 163]
[20 162]
[21 161]
[26 160]
[27 159]
[28 158]
[29 157]
[30 155]
[31 154]
[32 153]
[36 152]
[37 151]
[38 150]
[39 149]
[41 148]
[42 147]
[59 146]
[60 145]
[61 144]
[62 143]
[63 142]
[64 139]
[65 138]
[66 137]
[74 129]
[75 128]
[76 127]
[77 123]
[78 122]
[79 121]
[80 120]
[81 119]
[90 118]
[91 117]
[92 116]
[95 115]
[96 114]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
