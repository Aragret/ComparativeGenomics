%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAACUAACAAUCGCCACACCAGCCCACACAAUAAUAAGACUUAAAACCCCCUCCAAUAUACCCAAAUUAUCAAAAAAAUUAAAUAAAUCCCCCUUACUACxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[90.92306519 527.07708740]
[81.99078369 539.91253662]
[66.88436127 543.95355225]
[52.73658752 537.29217529]
[46.22760773 523.07360840]
[50.43076324 508.01147461]
[63.36145401 499.21765137]
[64.69969177 484.27746582]
[66.03792572 469.33728027]
[67.37615967 454.39709473]
[65.05562592 450.22286987]
[65.33268738 444.54660034]
[68.98314667 439.03427124]
[70.76561737 424.14056396]
[72.54808044 409.24682617]
[73.77505493 394.29711914]
[74.44483948 379.31207275]
[65.53022766 364.19595337]
[75.56898499 348.75885010]
[76.01558685 333.76547241]
[76.35056305 318.76922607]
[68.80361176 305.92816162]
[76.74552155 292.24472046]
[76.96884918 277.24639893]
[77.19217682 262.24804688]
[65.70253754 271.89108276]
[50.74810791 270.72277832]
[40.89545441 259.41238403]
[41.78863144 244.43899536]
[52.91598129 234.38006592]
[67.90325928 234.99780273]
[78.16472626 245.93745422]
[79.72525024 231.01884460]
[81.28576660 216.10023499]
[82.84629059 201.18164062]
[84.40681458 186.26303101]
[85.96733856 171.34442139]
[87.41675568 156.41461182]
[88.75498962 141.47442627]
[75.25595093 135.13275146]
[64.73760223 124.55895233]
[58.46700668 111.02674103]
[57.19952393 96.16624451]
[61.08783340 81.76756287]
[69.66355133 69.56517792]
[81.89363098 61.02901077]
[96.30482483 57.18733597]
[97.64305878 42.24715042]
[89.50984192 25.72648811]
[100.15755463 11.77682400]
[101.27320099 -3.18162942]
[102.38884735 -18.14008331]
[94.01056671 -34.53782272]
[104.44940948 -48.64447021]
[105.34222412 -63.61787415]
[98.44004059 -77.85411072]
[106.92116547 -90.09828949]
[107.81398010 -105.07169342]
[108.70679474 -120.04509735]
[106.09372711 -128.79779053]
[109.72601318 -135.23426819]
[110.84165955 -150.19273376]
[111.95730591 -165.15118408]
[97.89893341 -169.12846375]
[84.89484406 -175.77716064]
[73.44679260 -184.83851624]
[63.99607086 -195.96078491]
[56.90649033 -208.71279907]
[52.45038223 -222.60069275]
[50.79813385 -237.08709717]
[52.01167679 -251.61184692]
[56.04216766 -265.61367798]
[62.73194122 -278.55191040]
[71.82069397 -289.92733765]
[82.95561218 -299.30151367]
[95.70503235 -306.31356812]
[109.57522583 -310.69418335]
[124.02948761 -312.27587891]
[125.36772156 -327.21606445]
[126.70595551 -342.15625000]
[128.04418945 -357.09643555]
[129.38241577 -372.03662109]
[130.72065735 -386.97680664]
[123.06435394 -397.35678101]
[124.48654938 -409.77294922]
[133.68293762 -417.63125610]
[135.24346924 -432.54986572]
[136.80398560 -447.46847534]
[138.36451721 -462.38705444]
[139.92503357 -477.30566406]
[141.48556519 -492.22427368]
[142.82379150 -507.16445923]
[143.93943787 -522.12292480]
[145.05508423 -537.08135986]
[130.62663269 -541.39801025]
[117.46366882 -548.71588135]
[106.18186951 -558.69256592]
[97.30889130 -570.86157227]
[91.25975800 -584.65368652]
[88.31738281 -599.42376709]
[88.61938477 -614.48114014]
[92.15164948 -629.12139893]
[98.74896240 -642.65979004]
[108.10276031 -654.46325684]
[119.77553558 -663.97955322]
[133.22134399 -670.76367188]
[147.81129456 -674.49829102]
[162.86297607 -675.00878906]
[177.67242432 -672.27117920]
[191.54695129 -666.41357422]
[203.83763123 -657.70996094]
[213.96960449 -646.56732178]
[221.46897888 -633.50695801]
[225.98498535 -619.13964844]
[227.30642700 -604.13739014]
[225.37147522 -589.20184326]
[220.27062988 -575.03161621]
[212.24247742 -562.28948975]
[201.66252136 -551.57135010]
[189.02557373 -543.37854004]
[174.92271423 -538.09429932]
[160.01354980 -535.96569824]
[158.89790344 -521.00726318]
[157.78224182 -506.04882812]
[160.16467285 -501.90960693]
[159.97215271 -496.22982788]
[156.40415955 -490.66375732]
[154.84364319 -475.74514771]
[153.28311157 -460.82653809]
[151.72259521 -445.90792847]
[150.16207886 -430.98934937]
[148.60154724 -416.07073975]
[156.60063171 -400.45083618]
[145.66084290 -385.63858032]
[144.32260132 -370.69839478]
[142.98437500 -355.75820923]
[141.64613342 -340.81802368]
[140.30790710 -325.87783813]
[138.96966553 -310.93765259]
[153.72895813 -306.47512817]
[167.24716187 -299.04660034]
[178.93560791 -288.97286987]
[188.28472900 -276.69006348]
[194.88632202 -262.73059082]
[198.45133972 -247.70016479]
[198.82254028 -232.25155640]
[195.98146057 -217.05616760]
[190.04925537 -202.77485657]
[181.28163147 -190.02926636]
[170.05772400 -179.37469482]
[156.86375427 -171.27592468]
[142.27195740 -166.08695984]
[126.91576385 -164.03553772]
[125.80010986 -149.07708740]
[124.68446350 -134.11862183]
[123.68020630 -119.15228271]
[122.78738403 -104.17887878]
[121.89456940 -89.20547485]
[128.86061096 -76.04022980]
[120.31562805 -62.72505951]
[119.42281342 -47.75165176]
[127.21485901 -38.49905396]
[126.59358215 -26.01715660]
[117.34730530 -17.02443314]
[116.23165131 -2.06598067]
[115.11600494 12.89247322]
[122.76943207 22.26005745]
[121.96238708 34.73132324]
[112.58324432 43.58538437]
[111.24501038 58.52556992]
[124.74404907 64.86724091]
[135.26239014 75.44104767]
[141.53298950 88.97325897]
[142.80047607 103.83375549]
[138.91217041 118.23243713]
[130.33645630 130.43481445]
[118.10636902 138.97099304]
[103.69517517 142.81266785]
[102.35694122 157.75285339]
[104.70825958 166.57946777]
[100.88594055 172.90495300]
[99.32542419 187.82354736]
[97.76490021 202.74215698]
[96.20437622 217.66076660]
[94.64385223 232.57936096]
[93.08332825 247.49797058]
[92.19051361 262.47137451]
[91.96718597 277.46972656]
[91.74385834 292.46804810]
[99.27483368 306.38189697]
[91.34889984 318.99255371]
[94.35019684 327.61984253]
[91.00894165 334.21209717]
[90.56233215 349.20544434]
[98.82288361 359.11129761]
[98.14223480 371.59011841]
[89.42987823 379.98184204]
[88.76009369 394.96688843]
[101.42246246 386.92547607]
[115.65337372 391.66690063]
[120.96233368 405.69598389]
[113.43576813 418.67098999]
[98.62199402 421.02722168]
[87.44179535 411.02929688]
[85.65933228 425.92303467]
[83.87686920 440.81674194]
[82.31634521 455.73535156]
[80.97811127 470.67553711]
[79.63987732 485.61572266]
[78.30164337 500.55590820]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 210]
[8 209]
[9 208]
[10 207]
[13 206]
[14 205]
[15 204]
[16 198]
[17 197]
[19 194]
[20 193]
[21 191]
[23 189]
[24 188]
[25 187]
[32 186]
[33 185]
[34 184]
[35 183]
[36 182]
[37 181]
[38 179]
[39 178]
[47 170]
[48 169]
[50 166]
[51 165]
[52 164]
[54 161]
[55 160]
[57 158]
[58 157]
[59 156]
[61 155]
[62 154]
[63 153]
[78 139]
[79 138]
[80 137]
[81 136]
[82 135]
[83 134]
[86 132]
[87 131]
[88 130]
[89 129]
[90 128]
[91 127]
[92 124]
[93 123]
[94 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
