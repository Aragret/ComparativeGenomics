%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAAAACCCAACUCCACUACUACCUCCACCUCUAAACCACGACACUUUAACAAAAUCCAUUAUCGAAAAGAUCAGUCCAAUCCAGAUCCUCCUCAUCCCxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[92.02336121 712.64965820]
[76.77546692 711.96807861]
[63.33736420 704.73071289]
[54.37719727 692.37438965]
[51.67401886 677.35253906]
[55.76454163 662.64776611]
[65.83658600 651.17968750]
[79.89035034 645.22534180]
[80.56013489 630.24029541]
[81.22991943 615.25524902]
[81.89970398 600.27020264]
[67.68406677 592.97186279]
[58.03925323 580.15814209]
[54.93672562 564.36389160]
[59.04741669 548.74139404]
[69.59743500 536.43121338]
[84.51319122 529.93090820]
[84.95979309 514.93756104]
[85.40640259 499.94418335]
[78.05146790 486.99218750]
[86.19622040 473.42849731]
[86.64282990 458.43515015]
[78.57875061 449.41864014]
[78.82811737 436.92379761]
[87.80255890 427.65975952]
[88.47234344 412.67471313]
[89.14212799 397.68966675]
[78.93261719 386.90536499]
[79.39840698 371.69885254]
[90.77921295 361.06329346]
[91.44899750 346.07827759]
[88.60730743 339.25576782]
[92.24195099 330.87561035]
[93.13476562 315.90219116]
[94.02758789 300.92880249]
[94.92040253 285.95538330]
[95.81321716 270.98196411]
[96.70603180 256.00857544]
[96.70603180 241.00857544]
[95.81321716 226.03517151]
[94.92040253 211.06176758]
[94.02758789 196.08834839]
[93.13476562 181.11494446]
[84.65364838 168.87077332]
[91.55582428 154.63453674]
[90.66300964 139.66113281]
[82.06289673 151.95088196]
[68.22441101 157.73847961]
[53.43555069 155.23056030]
[42.27881241 145.20423889]
[38.21122742 130.76628113]
[42.49318314 116.39043427]
[53.79787064 106.53121948]
[68.62240601 104.24362946]
[82.37325287 110.23648071]
[90.78962708 122.65308380]
[91.90528107 107.69462585]
[92.90953827 92.72828674]
[93.80235291 77.75487518]
[94.69516754 62.78147125]
[95.58798981 47.80806732]
[96.48080444 32.83465958]
[97.26212311 17.85502243]
[97.93190765 2.86998463]
[98.60169220 -12.11505413]
[99.27147675 -27.10009384]
[99.94126892 -42.08513260]
[100.61105347 -57.07017136]
[101.28083801 -72.05520630]
[101.61581421 -87.05146790]
[101.50414276 -102.05105591]
[101.28081512 -117.04939270]
[101.05748749 -132.04772949]
[100.72251129 -147.04399109]
[100.27590942 -162.03733826]
[87.62367249 -170.82524109]
[82.63042450 -185.20997620]
[87.01303864 -199.60638428]
[98.89030457 -208.55448914]
[98.44369507 -223.54783630]
[97.99709320 -238.54119873]
[97.55048370 -253.53454590]
[85.52128601 -244.57360840]
[70.97714233 -248.24345398]
[64.63945007 -261.83880615]
[71.18013000 -275.33767700]
[85.77762604 -278.78921509]
[97.67046356 -269.65051270]
[98.34024811 -284.63555908]
[99.01003265 -299.62060547]
[90.14723969 -315.76162720]
[100.16145325 -330.17282104]
[100.60805511 -345.16616821]
[97.73554230 -353.83715820]
[101.17457581 -360.37893677]
[101.84436035 -375.36398315]
[102.51415253 -390.34902954]
[103.18393707 -405.33407593]
[103.85372162 -420.31909180]
[89.94803619 -426.40158081]
[79.18136597 -437.09939575]
[73.00981140 -450.96575928]
[72.26803589 -466.12539673]
[77.05635071 -480.52804565]
[86.72716522 -492.22589111]
[99.97260284 -499.63690186]
[115.00131226 -501.75875854]
[129.78077698 -498.30456543]
[142.31222534 -489.74139404]
[150.90084839 -477.22741699]
[154.38511658 -462.45501709]
[152.29382324 -447.42199707]
[144.90979004 -434.16152954]
[133.23164368 -424.46691895]
[118.83876038 -419.64932251]
[118.16897583 -404.66427612]
[117.49919128 -389.67922974]
[116.82939911 -374.69421387]
[116.15961456 -359.70916748]
[115.60140991 -344.71954346]
[115.15480042 -329.72619629]
[123.21887970 -320.70971680]
[122.96951294 -308.21484375]
[113.99507141 -298.95080566]
[113.32528687 -283.96575928]
[112.65550232 -268.98074341]
[112.54383850 -253.98115540]
[112.99044037 -238.98779297]
[113.43704987 -223.99444580]
[113.88365173 -209.00109863]
[126.27246094 -200.77580261]
[131.50419617 -186.66577148]
[127.37599182 -172.00933838]
[115.26925659 -162.48394775]
[115.71586609 -147.49060059]
[119.05712128 -140.89834595]
[116.05582428 -132.27105713]
[116.27915192 -117.27272034]
[116.50247955 -102.27438354]
[119.74522400 -95.63311005]
[116.61581421 -87.05146790]
[118.83708191 -84.31316376]
[119.84238434 -80.36292267]
[119.07654572 -75.78396606]
[116.26587677 -71.38542175]
[115.59609222 -56.40038681]
[114.92630768 -41.41534805]
[114.25651550 -26.43030739]
[113.58673096 -11.44526958]
[112.91694641 3.53976965]
[112.24716187 18.52480888]
[115.08885956 25.34731293]
[111.45420837 33.72747803]
[110.56139374 48.70088196]
[109.66857910 63.67428970]
[108.77576447 78.64769745]
[107.88294220 93.62110138]
[110.58491516 101.21530151]
[106.86373138 108.81027985]
[105.74808502 123.76873016]
[105.63641357 138.76831055]
[106.52923584 153.74171448]
[115.07421875 167.05690002]
[108.10817719 180.22213745]
[109.00099182 195.19554138]
[109.89380646 210.16894531]
[110.78662109 225.14234924]
[111.67943573 240.11575317]
[120.86492920 228.25714111]
[135.23377991 223.95179749]
[149.42678833 228.80554199]
[158.15028381 241.00801086]
[158.15065002 256.00802612]
[149.42771912 268.21090698]
[135.23495483 273.06530762]
[120.86589050 268.76068115]
[111.67943573 256.90139771]
[110.78662109 271.87478638]
[109.89380646 286.84820557]
[109.00099182 301.82159424]
[108.10817719 316.79501343]
[107.21535492 331.76840210]
[106.43403625 346.74804688]
[105.76425171 361.73309326]
[116.15081787 373.34158325]
[115.25809479 388.52899170]
[104.12716675 398.35946655]
[103.45738220 413.34451294]
[102.78759766 428.32952881]
[111.65039062 444.47055054]
[101.63617706 458.88174438]
[101.18957520 473.87509155]
[108.51255798 487.89953613]
[100.39974976 500.39077759]
[99.95314789 515.38415527]
[99.50653839 530.37750244]
[112.29124451 536.40228271]
[121.78526306 546.81323242]
[126.57959747 560.01623535]
[125.98143768 574.00671387]
[120.11408997 586.67370605]
[109.89334869 596.11877441]
[96.88474274 600.94000244]
[96.21495819 615.92504883]
[95.54517365 630.91009521]
[94.87538910 645.89514160]
[108.34188843 653.07958984]
[117.35063934 665.40045166]
[120.11296082 680.41156006]
[116.08037567 695.13232422]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 206]
[9 205]
[10 204]
[11 203]
[17 196]
[18 195]
[19 194]
[21 192]
[22 191]
[25 189]
[26 188]
[27 187]
[30 184]
[31 183]
[33 182]
[34 181]
[35 180]
[36 179]
[37 178]
[38 177]
[39 168]
[40 167]
[41 166]
[42 165]
[43 164]
[45 162]
[46 161]
[56 160]
[57 159]
[58 157]
[59 156]
[60 155]
[61 154]
[62 153]
[63 151]
[64 150]
[65 149]
[66 148]
[67 147]
[68 146]
[69 145]
[70 141]
[71 139]
[72 138]
[73 137]
[74 135]
[75 134]
[79 130]
[80 129]
[81 128]
[82 127]
[88 126]
[89 125]
[90 124]
[92 121]
[93 120]
[95 119]
[96 118]
[97 117]
[98 116]
[99 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
