%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[87.20020294 833.27429199]
[72.20027924 832.60388184]
[57.36077881 830.31555176]
[42.85568619 826.43615723]
[28.85506630 821.01123047]
[15.52306938 814.10437012]
[3.01600718 805.79650879]
[-8.51948261 796.18505859]
[-18.94815063 785.38275146]
[-28.14772797 773.51617432]
[-36.01035309 760.72454834]
[-42.44384384 747.15777588]
[-47.37276459 732.97491455]
[-50.73933029 718.34228516]
[-52.50407028 703.43145752]
[-52.64629364 688.41723633]
[-51.16432953 673.47564697]
[-48.07555771 658.78186035]
[-43.41619110 644.50823975]
[-37.24085617 630.82202148]
[-29.62195778 617.88372803]
[-20.64882278 605.84503174]
[-10.42665672 594.84710693]
[0.92469001 585.01885986]
[13.27213001 576.47552490]
[26.47089577 569.31732178]
[40.36623764 563.62817383]
[54.79523849 559.47473145]
[69.58872986 556.90570068]
[84.57326508 555.95123291]
[85.24304962 540.96618652]
[85.91283417 525.98114014]
[86.58261871 510.99609375]
[87.25240326 496.01107788]
[87.81061554 481.02145386]
[88.25721741 466.02810669]
[88.70382690 451.03475952]
[89.15042877 436.04141235]
[89.59703827 421.04806519]
[90.04364014 406.05471802]
[90.49024963 391.06134033]
[90.93685150 376.06799316]
[91.38346100 361.07464600]
[91.83006287 346.08129883]
[92.27667236 331.08795166]
[92.50000000 316.08963013]
[92.50000000 301.08963013]
[92.50000000 286.08963013]
[92.50000000 271.08963013]
[81.81912994 260.77194214]
[81.60544586 245.55979919]
[92.50000000 234.42668152]
[92.50000000 219.42668152]
[92.50000000 204.42668152]
[92.50000000 189.42668152]
[92.50000000 174.42668152]
[92.50000000 159.42668152]
[92.50000000 144.42668152]
[92.50000000 129.42668152]
[92.50000000 114.42668152]
[84.77587128 105.71007538]
[84.86257172 94.06388855]
[92.71562195 85.46325684]
[92.93894958 70.46492004]
[93.05062103 55.46533585]
[93.05062103 40.46533585]
[93.05062103 25.46533394]
[84.20126343 37.57685471]
[70.52199554 43.73133469]
[55.58853912 42.32000351]
[43.30446243 33.71178055]
[36.88079834 20.15683556]
[37.99667358 5.19839811]
[46.36040115 -7.25343084]
[59.78572464 -13.94377422]
[74.76329803 -13.12379265]
[87.37801361 -5.00782681]
[94.33222198 8.28176403]
[96.55734253 -6.55227947]
[98.78245544 -21.38632393]
[96.96068573 -30.33724213]
[101.15271759 -36.42399979]
[103.59844208 -51.22327042]
[106.04417419 -66.02254486]
[91.60395813 -70.14299011]
[77.72758484 -75.88267517]
[64.59594727 -83.16675568]
[52.38025284 -91.90028381]
[41.23975372 -101.96939850]
[31.31968498 -113.24282074]
[22.74938202 -125.57358551]
[15.64057446 -138.80091858]
[10.08593845 -152.75241089]
[6.15789175 -167.24613953]
[3.90764356 -182.09315491]
[3.36453080 -197.09991455]
[4.53563452 -212.07077026]
[7.40568590 -226.81053162]
[11.93726921 -241.12704468]
[18.07130432 -254.83366394]
[25.72782326 -267.75167847]
[34.80700684 -279.71270752]
[45.19049072 -290.56079102]
[56.74290085 -300.15454102]
[69.31362915 -308.36880493]
[82.73880005 -315.09658813]
[96.84336853 -320.25009155]
[111.44347382 -323.76217651]
[126.34876251 -325.58706665]
[141.36491394 -325.70092773]
[156.29615784 -324.10232544]
[170.94784546 -320.81207275]
[185.12895203 -315.87304688]
[198.65461731 -309.34967041]
[211.34848022 -301.32696533]
[223.04505920 -291.90954590]
[233.59187317 -281.22018433]
[242.85140991 -269.39822388]
[250.70297241 -256.59780884]
[257.04415894 -242.98580933]
[261.79235840 -228.73966980]
[264.88562012 -214.04512024]
[266.28363037 -199.09376526]
[265.96820068 -184.08049011]
[263.94335938 -169.20104980]
[260.23559570 -154.64941406]
[254.89317322 -140.61529541]
[247.98579407 -127.28165436]
[239.60348511 -114.82233429]
[229.85552979 -103.39976501]
[218.86901855 -93.16284943]
[206.78718567 -84.24506378]
[193.76753235 -76.76265717]
[179.97979736 -70.81318665]
[165.60374451 -66.47421265]
[150.82678223 -63.80229950]
[135.84155273 -62.83228683]
[120.84344482 -63.57681656]
[118.39771271 -48.77754593]
[115.95198822 -33.97827530]
[113.61650085 -19.16120529]
[111.39138031 -4.32716227]
[109.16626740 10.50688171]
[108.05062103 25.46533394]
[108.05062103 40.46533585]
[108.05062103 55.46533585]
[111.19411469 62.15414429]
[107.93728638 70.68824768]
[107.71395874 85.68658447]
[116.25928497 100.12104797]
[107.50000000 114.42668152]
[107.50000000 129.42668152]
[107.50000000 144.42668152]
[107.50000000 159.42668152]
[107.50000000 174.42668152]
[107.50000000 189.42668152]
[107.50000000 204.42668152]
[107.50000000 219.42668152]
[107.50000000 234.42668152]
[118.39455414 245.55979919]
[118.18087006 260.77194214]
[107.50000000 271.08963013]
[107.50000000 286.08963013]
[107.50000000 301.08963013]
[107.50000000 316.08963013]
[110.46956635 321.99667358]
[110.07013702 327.66564941]
[107.27001953 331.53457642]
[106.82341766 346.52792358]
[106.37680817 361.52127075]
[105.93020630 376.51461792]
[105.48359680 391.50796509]
[105.03699493 406.50131226]
[104.59038544 421.49465942]
[104.14378357 436.48800659]
[103.69717407 451.48135376]
[103.25057220 466.47470093]
[102.80396271 481.46804810]
[105.67647552 490.13906860]
[102.23744202 496.68084717]
[101.56765747 511.66589355]
[100.89787292 526.65093994]
[100.22808838 541.63598633]
[99.55830383 556.62103271]
[114.39792633 558.90850830]
[128.90322876 562.78710938]
[142.90414429 568.21130371]
[156.23651123 575.11749268]
[168.74401855 583.42468262]
[180.28002930 593.03546143]
[190.70927429 603.83721924]
[199.90948486 615.70330811]
[207.77279663 628.49450684]
[214.20701599 642.06097412]
[219.13670349 656.24353027]
[222.50405884 670.87597656]
[224.26960754 685.78668213]
[224.41262817 700.80090332]
[222.93147278 715.74261475]
[219.84349060 730.43652344]
[215.18489075 744.71044922]
[209.01029968 758.39697266]
[201.39208984 771.33569336]
[192.41960144 783.37487793]
[182.19802856 794.37335205]
[170.84721375 804.20220947]
[158.50022888 812.74615479]
[145.30184937 819.90509033]
[131.40681458 825.59497070]
[116.97803497 829.74920654]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 184]
[31 183]
[32 182]
[33 181]
[34 180]
[35 178]
[36 177]
[37 176]
[38 175]
[39 174]
[40 173]
[41 172]
[42 171]
[43 170]
[44 169]
[45 168]
[46 165]
[47 164]
[48 163]
[49 162]
[52 159]
[53 158]
[54 157]
[55 156]
[56 155]
[57 154]
[58 153]
[59 152]
[60 151]
[63 149]
[64 148]
[65 146]
[66 145]
[67 144]
[78 143]
[79 142]
[80 141]
[82 140]
[83 139]
[84 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
