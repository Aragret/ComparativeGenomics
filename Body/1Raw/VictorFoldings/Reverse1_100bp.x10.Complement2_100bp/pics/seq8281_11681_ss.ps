%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[82.42982483 427.44146729]
[76.16912079 441.26779175]
[65.33379364 451.89605713]
[51.38923264 457.88888550]
[36.22132492 458.43572998]
[21.88140678 453.46267700]
[10.30883598 443.64230347]
[3.06870508 430.30270386]
[1.14018321 415.24795532]
[4.78408718 400.51409912]
[13.50760841 388.09375000]
[26.13096237 379.66671753]
[40.94694519 376.37258911]
[43.17206192 361.53857422]
[45.39717865 346.70452881]
[43.84134674 344.37268066]
[43.11544418 341.28402710]
[43.51235199 337.75161743]
[45.20632553 334.18862915]
[48.22171783 331.06430054]
[51.32582855 316.38900757]
[54.42993546 301.71371460]
[57.53404617 287.03839111]
[60.63815689 272.36309814]
[59.03163910 269.22439575]
[58.86556625 265.15161133]
[60.56239319 260.83026123]
[64.22245789 257.10858154]
[67.97875977 242.58651733]
[71.73506165 228.06446838]
[70.36673737 220.80157471]
[75.65690613 213.35498047]
[79.62899780 198.89045715]
[82.51427460 184.17056274]
[84.29673767 169.27684021]
[86.07920074 154.38313293]
[87.75074768 139.47654724]
[89.31127167 124.55794525]
[90.87178802 109.63934326]
[82.88031769 122.33329010]
[72.37855530 133.04370117]
[59.84425735 141.28332520]
[45.84765244 146.67730713]
[31.02549362 148.98027039]
[16.05208969 148.08741760]
[1.60863042 144.03939819]
[-11.64780331 137.02035522]
[-23.11413193 127.34960938]
[-32.26871490 115.46711731]
[-38.69507599 101.91345215]
[-42.10086441 87.30521393]
[-42.33113480 72.30698395]
[-39.37541580 57.60107803]
[-33.36816788 43.85651398]
[-24.58268356 31.69858360]
[-13.41864395 21.68038940]
[-0.38393784 14.25769234]
[13.92844296 9.76817513]
[28.86738014 8.41608143]
[43.75325012 10.26292229]
[57.90885162 15.22467899]
[70.69019318 23.07562447]
[81.51580811 33.45859146]
[89.89320374 45.90122986]
[95.44126892 59.83747482]
[97.90760040 74.63332367]
[97.17932892 89.61994934]
[104.45256042 76.50125122]
[111.72579193 63.38256073]
[118.99901581 50.26386642]
[126.27224731 37.14517212]
[133.54547119 24.02647781]
[138.89666748 10.01345539]
[142.21891785 -4.61400461]
[137.73030090 -19.78512383]
[148.09432983 -30.48261452]
[151.41658020 -45.11007309]
[154.73884583 -59.73753357]
[153.30769348 -63.83702087]
[153.26028442 -67.78192902]
[154.37808228 -71.15622711]
[156.32992554 -73.65761566]
[158.71882629 -75.12434387]
[155.14115906 -90.53573608]
[166.12353516 -100.59738159]
[170.31054688 -115.00115967]
[174.49755859 -129.40493774]
[178.68457031 -143.80873108]
[182.87158203 -158.21250916]
[187.05859375 -172.61628723]
[182.25503540 -190.39288330]
[195.38714600 -202.03395081]
[199.35923767 -216.49847412]
[203.33134460 -230.96299744]
[207.19564819 -245.45669556]
[210.95195007 -259.97875977]
[214.70825195 -274.50082397]
[201.05134583 -280.80389404]
[188.73948669 -289.44436646]
[178.16845703 -300.14450073]
[169.67807007 -312.56036377]
[163.54125977 -326.29278564]
[159.95529175 -340.90032959]
[159.03543091 -355.91345215]
[160.81127930 -370.84951782]
[165.22570801 -385.22839355]
[172.13685608 -398.58789062]
[181.32252502 -410.49853516]
[192.48744202 -420.57742310]
[205.27270508 -428.50061035]
[219.26731873 -434.01336670]
[234.02142334 -436.93847656]
[249.06071472 -437.18194580]
[263.90176392 -434.73590088]
[278.06747437 -429.67901611]
[291.10250854 -422.17379761]
[302.58779907 -412.46154785]
[312.15417480 -400.85446167]
[319.49407959 -387.72567749]
[324.37161255 -373.49719238]
[326.62997437 -358.62643433]
[326.19653320 -343.59140015]
[323.08523560 -328.87545776]
[317.39611816 -314.95159912]
[309.31204224 -302.26745605]
[299.09289551 -291.23074341]
[287.06716919 -282.19628906]
[273.62142944 -275.45449829]
[259.18792725 -271.22204590]
[244.23060608 -269.63507080]
[229.23030090 -270.74450684]
[225.47399902 -256.22244263]
[221.71769714 -241.70039368]
[223.08602905 -234.43750000]
[217.79586792 -226.99090576]
[213.82376099 -212.52638245]
[209.85166931 -198.06185913]
[215.56030273 -187.39704895]
[212.36947632 -175.31390381]
[201.46237183 -168.42927551]
[197.27536011 -154.02549744]
[193.08834839 -139.62171936]
[188.90133667 -125.21793365]
[184.71432495 -110.81414795]
[180.52731323 -96.41036987]
[184.40446472 -82.02923584]
[173.12260437 -70.93733215]
[169.36630249 -56.41527557]
[166.04405212 -41.78781509]
[162.72178650 -27.16035461]
[167.44804382 -13.03548813]
[156.84638977 -1.29174519]
[153.52412415 13.33571529]
[163.21080017 1.88284481]
[175.81044006 -6.25650692]
[190.23304749 -10.37820435]
[205.23092651 -10.12567997]
[219.50660706 -5.52077866]
[231.82508850 3.03812814]
[241.12071228 14.81060982]
[246.58930969 28.77823067]
[247.75779724 43.73264694]
[244.52508545 58.38016129]
[237.17083740 71.45360565]
[226.33126831 81.82200623]
[212.94410706 88.58838654]
[198.16748047 91.16738892]
[183.27970886 89.33589935]
[169.56874084 83.25237274]
[158.22070312 73.44308472]
[150.21733093 60.75663376]
[146.25097656 46.29053497]
[146.66416931 31.29970741]
[139.39094543 44.41840363]
[132.11770630 57.53709412]
[124.84448242 70.65579224]
[117.57125092 83.77448273]
[110.29802704 96.89318085]
[105.79039764 111.19986725]
[104.22987366 126.11846924]
[102.66934967 141.03707886]
[104.88898468 149.89772034]
[100.97292328 156.16558838]
[99.19045258 171.05931091]
[97.40798950 185.95303345]
[107.63386536 174.97889709]
[121.94755554 170.49354553]
[136.60748291 173.66944885]
[147.78160095 183.67640686]
[152.54899597 197.89863586]
[149.66351318 212.61848450]
[139.87937927 223.98820496]
[125.75415802 229.03579712]
[110.98014832 226.44183350]
[99.41924286 216.88435364]
[94.09352112 202.86254883]
[90.12142944 217.32707214]
[86.25711823 231.82077026]
[82.50082397 246.34281921]
[78.74452209 260.86486816]
[75.31346130 275.46719360]
[72.20935059 290.14251709]
[69.10523987 304.81781006]
[66.00112915 319.49310303]
[62.89701843 334.16842651]
[60.23122406 348.92962646]
[58.00610733 363.76367188]
[55.78099060 378.59771729]
[68.97843170 386.09384155]
[78.57373047 397.85372925]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 208]
[14 207]
[15 206]
[20 205]
[21 204]
[22 203]
[23 202]
[24 201]
[28 200]
[29 199]
[30 198]
[32 197]
[33 196]
[34 185]
[35 184]
[36 183]
[37 181]
[38 180]
[39 179]
[67 178]
[68 177]
[69 176]
[70 175]
[71 174]
[72 173]
[73 153]
[74 152]
[76 150]
[77 149]
[78 148]
[83 147]
[85 145]
[86 144]
[87 143]
[88 142]
[89 141]
[90 140]
[92 137]
[93 136]
[94 135]
[95 133]
[96 132]
[97 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
