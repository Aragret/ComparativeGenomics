%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[94.83941650 760.42755127]
[79.95150757 757.92694092]
[66.29083252 751.50134277]
[54.87108612 741.62756348]
[46.53969574 729.03820801]
[41.91490936 714.66766357]
[41.33991623 699.58215332]
[44.85737991 684.90118408]
[52.20628738 671.71423340]
[62.84129333 660.99981689]
[75.97321320 653.55297852]
[90.62757874 649.92639160]
[91.07418060 634.93304443]
[91.52079010 619.93969727]
[91.96739197 604.94635010]
[84.61246490 591.99432373]
[92.75721741 578.43066406]
[93.20381927 563.43731689]
[93.65042877 548.44390869]
[94.09703064 533.45056152]
[91.53216553 529.42187500]
[91.47087097 523.73913574]
[94.78676605 518.01934814]
[95.67958069 503.04592896]
[96.57239532 488.07254028]
[96.90737152 473.07626343]
[96.68404388 458.07794189]
[96.46071625 443.07958984]
[84.87804413 436.44003296]
[78.03374481 424.85125732]
[77.80765533 411.28591919]
[84.36575317 399.28549194]
[96.08893585 392.03582764]
[96.08893585 377.03582764]
[88.35163116 364.30853271]
[96.08893585 350.50836182]
[96.08893585 335.50836182]
[96.08893585 320.50836182]
[96.08893585 305.50836182]
[96.08893585 290.50836182]
[79.85038757 284.35675049]
[67.19382477 272.41644287]
[60.07889938 256.49899292]
[59.62150574 239.03446960]
[65.91886902 222.70059204]
[78.03048706 210.01213074]
[94.11846924 202.93373108]
[93.44867706 187.94868469]
[92.77889252 172.96365356]
[92.10910797 157.97860718]
[90.13379669 155.98956299]
[88.82734680 153.09823608]
[88.53737640 149.55545044]
[89.51436615 145.73315430]
[91.87248230 142.08715820]
[92.09580994 127.08882141]
[92.31913757 112.09048462]
[85.67764282 99.78673553]
[92.68252563 87.68618774]
[92.90585327 72.68785095]
[93.12918091 57.68951416]
[92.34785461 42.70987701]
[90.56539154 27.81616020]
[88.78292847 12.92244244]
[74.19045258 8.75886154]
[62.33571625 -0.64902514]
[55.00584030 -13.84321213]
[53.29055786 -28.79799080]
[57.42030716 -43.23093796]
[66.73584747 -54.95126724]
[79.79325867 -62.19235611]
[78.01078796 -77.08607483]
[76.22832489 -91.97978973]
[66.90596008 -104.76274872]
[73.07604218 -118.31927490]
[63.75367355 -131.10223389]
[69.92375946 -144.65875244]
[68.14128876 -159.55247498]
[66.35882568 -174.44619751]
[62.23182297 -182.59516907]
[64.66239929 -189.57470703]
[63.10187531 -204.49331665]
[61.54135132 -219.41192627]
[59.98082733 -234.33052063]
[51.33401489 -222.07357788]
[37.17173386 -217.13093567]
[22.77615738 -221.34608459]
[13.51648521 -233.14686584]
[12.84634304 -248.13188171]
[21.01567841 -260.71209717]
[34.97753143 -266.19540405]
[49.52447510 -262.53668213]
[59.23130798 -251.09941101]
[51.70033264 -265.01324463]
[59.62626266 -277.62393188]
[59.84959030 -292.62225342]
[52.31861496 -306.53610229]
[60.24454498 -319.14675903]
[60.46787262 -334.14511108]
[60.69120026 -349.14343262]
[47.21588516 -356.40115356]
[38.66653442 -369.09631348]
[37.00772476 -384.31167603]
[42.62063599 -398.55084229]
[54.21546555 -408.54174805]
[69.12780762 -411.98858643]
[83.93090820 -408.09927368]
[95.22313690 -397.76757812]
[100.40960693 -383.36761475]
[98.29851532 -368.20837402]
[89.37496948 -355.77340698]
[75.68953705 -348.92010498]
[75.46620941 -333.92178345]
[75.24288177 -318.92343140]
[82.78983307 -306.08236694]
[74.84793091 -292.39892578]
[74.62460327 -277.40060425]
[82.17155457 -264.55953979]
[74.22964478 -250.87608337]
[74.89942932 -235.89105225]
[76.45995331 -220.97244263]
[78.02047729 -206.05383301]
[79.58100128 -191.13523865]
[81.25254059 -176.22865295]
[83.03501129 -161.33494568]
[84.81747437 -146.44122314]
[94.01234436 -134.72357178]
[87.96975708 -120.10173798]
[97.16463470 -108.38407898]
[91.12203979 -93.76226044]
[92.90451050 -78.86853790]
[94.68697357 -63.97482300]
[109.08435822 -60.01949692]
[120.90255737 -50.82843399]
[128.32153320 -37.77762604]
[130.18370056 -22.84042549]
[126.17436981 -8.28917408]
[116.87448883 3.65047669]
[103.67664337 11.13997650]
[105.45910645 26.03369331]
[107.24157715 40.92741013]
[115.09494019 28.14755821]
[128.56440735 21.54654312]
[143.47631836 23.16976547]
[155.21005249 32.51425171]
[160.12979126 46.68450928]
[156.71109009 61.28973007]
[146.01327515 71.80432892]
[131.35119629 74.97024536]
[117.26802063 69.80648041]
[108.12751770 57.91284180]
[107.90419006 72.91117859]
[107.68086243 87.90951538]
[114.32235718 100.21326447]
[107.31747437 112.31381226]
[107.09414673 127.31214905]
[106.87081909 142.31048584]
[107.09414673 157.30882263]
[107.76393127 172.29386902]
[108.43371582 187.27890015]
[109.10350800 202.26394653]
[121.38553619 205.66801453]
[132.20086670 212.37686157]
[140.68318176 221.84127808]
[146.15637207 233.29179382]
[148.18843079 245.80126953]
[146.62550354 258.35995483]
[141.60356140 269.95693970]
[133.53651428 279.66165161]
[123.08226776 286.69836426]
[111.08893585 290.50836182]
[111.08893585 305.50836182]
[111.08893585 320.50836182]
[111.08893585 335.50836182]
[111.08893585 350.50836182]
[118.82623291 364.30853271]
[111.08893585 377.03582764]
[111.08893585 392.03582764]
[124.90694427 401.79074097]
[130.13586426 417.70175171]
[124.90317535 433.43643188]
[111.45905304 442.85626221]
[111.68238068 457.85461426]
[111.90570831 472.85293579]
[124.06699371 464.07208252]
[138.55488586 467.95806885]
[144.68945312 481.64630127]
[137.94853210 495.04629517]
[123.30126190 498.28009033]
[111.54579926 488.96533203]
[110.65298462 503.93875122]
[109.76016998 518.91217041]
[109.09038544 533.89721680]
[108.64377594 548.89056396]
[108.19717407 563.88391113]
[107.75056458 578.87725830]
[115.07355499 592.90167236]
[106.96074677 605.39294434]
[106.51413727 620.38629150]
[106.06753540 635.37963867]
[105.62092590 650.37298584]
[120.03344727 654.86541748]
[132.69885254 663.08062744]
[142.67726135 674.40911865]
[149.22824097 688.01007080]
[151.86564636 702.87438965]
[150.39375305 717.89886475]
[144.92181396 731.96875000]
[135.85588074 744.03979492]
[123.86867523 753.21643066]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 201]
[13 200]
[14 199]
[15 198]
[17 196]
[18 195]
[19 194]
[20 193]
[23 192]
[24 191]
[25 190]
[26 184]
[27 183]
[28 182]
[33 178]
[34 177]
[36 175]
[37 174]
[38 173]
[39 172]
[40 171]
[47 161]
[48 160]
[49 159]
[50 158]
[55 157]
[56 156]
[57 155]
[59 153]
[60 152]
[61 151]
[62 141]
[63 140]
[64 139]
[71 132]
[72 131]
[73 130]
[75 128]
[77 126]
[78 125]
[79 124]
[81 123]
[82 122]
[83 121]
[84 120]
[93 119]
[95 117]
[96 116]
[98 114]
[99 113]
[100 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
