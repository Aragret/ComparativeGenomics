%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxCGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAA\
) } def
/len { sequence length } bind def

/coor [
[106.01081085 600.16210938]
[91.58338928 604.44409180]
[76.59777069 605.82891846]
[61.62997818 604.26324463]
[47.25532150 599.80731201]
[34.02632523 592.63232422]
[22.45148277 583.01416016]
[12.97569370 571.32244873]
[5.96318436 558.00665283]
[1.68349731 543.57855225]
[0.30113226 528.59271240]
[1.86922348 513.62518311]
[6.32749748 499.25122070]
[13.50459099 486.02340698]
[23.12463379 474.45010376]
[34.81785965 464.97619629]
[48.13481140 457.96585083]
[62.56361771 453.68850708]
[77.54967499 452.30856323]
[79.11019897 437.38995361]
[80.67072296 422.47134399]
[81.89769745 407.52163696]
[82.79051208 392.54821777]
[83.68333435 377.57479858]
[84.57614899 362.60140991]
[85.46896362 347.62799072]
[78.50292206 334.46276855]
[87.04790497 321.14758301]
[73.08256531 307.56512451]
[73.61701202 287.78588867]
[88.75545502 274.57577515]
[88.97878265 259.57745361]
[89.20211029 244.57910156]
[89.31378174 229.57951355]
[89.31378174 214.57951355]
[86.63009644 210.62896729]
[86.39963531 204.95059204]
[89.54376221 199.13456726]
[89.99036407 184.14122009]
[90.43697357 169.14787292]
[90.88357544 154.15452576]
[91.33018494 139.16117859]
[91.77678680 124.16782379]
[92.22339630 109.17447662]
[92.44672394 94.17613983]
[92.44672394 79.17613983]
[92.44672394 64.17613983]
[92.44672394 49.17613602]
[92.44672394 34.17613602]
[85.18872070 47.30326080]
[73.92426300 57.20841217]
[59.97669220 62.72794724]
[44.98455048 63.21342850]
[30.70910072 58.60783005]
[18.82740974 49.45220566]
[10.73532581 36.82215500]
[7.38349819 22.20144272]
[9.16569710 7.30769444]
[15.87255192 -6.10938835]
[26.71614647 -16.47357941]
[40.42258835 -22.56730270]
[55.38165665 -23.67467308]
[69.83597565 -19.66560173]
[82.08746338 -11.01106644]
[90.69683838 1.27220500]
[94.65280914 15.74274731]
[98.19248199 1.16637182]
[101.73215485 -13.41000366]
[105.27182770 -27.98637962]
[108.70288849 -42.58870316]
[112.02514648 -57.21615982]
[115.34741211 -71.84362030]
[118.66967010 -86.47108459]
[121.99192810 -101.09854126]
[120.44635773 -106.08435059]
[120.92039490 -110.70263672]
[122.93585968 -114.24565125]
[125.80295563 -116.29799652]
[129.77505493 -130.76252747]
[128.52838135 -134.92182922]
[128.65716553 -138.86491394]
[129.92451477 -142.18594360]
[131.98609924 -144.59767151]
[134.43811035 -145.95626831]
[139.26411438 -160.15872192]
[144.09010315 -174.36117554]
[148.91610718 -188.56364441]
[153.74211121 -202.76609802]
[158.56809998 -216.96855164]
[153.57748413 -228.86209106]
[157.88945007 -240.59199524]
[168.68051147 -246.05822754]
[173.71742249 -260.18725586]
[160.32926941 -266.99792480]
[147.92198181 -275.46478271]
[136.69931030 -285.44879150]
[126.84555817 -296.78598022]
[118.52250671 -309.29016113]
[111.86683655 -322.75607300]
[106.98784637 -336.96255493]
[103.96565247 -351.67630005]
[102.84986877 -366.65573120]
[103.65883636 -381.65484619]
[106.37925720 -396.42739868]
[110.96646881 -410.73074341]
[117.34513855 -424.33004761]
[125.41053009 -437.00195312]
[135.03019714 -448.53845215]
[146.04617310 -458.75003052]
[158.27757263 -467.46905518]
[171.52352905 -474.55233765]
[185.56655884 -479.88354492]
[200.17604065 -483.37515259]
[215.11209106 -484.96981812]
[230.12942505 -484.64132690]
[244.98146057 -482.39514160]
[259.42431641 -478.26809692]
[273.22079468 -472.32797241]
[286.14440918 -464.67233276]
[297.98287964 -455.42684937]
[308.54183960 -444.74337769]
[317.64788818 -432.79733276]
[325.15148926 -419.78485107]
[330.92944336 -405.91967773]
[334.88687134 -391.42944336]
[336.95880127 -376.55209351]
[337.11117554 -361.53192139]
[335.34152222 -346.61560059]
[331.67886353 -332.04806519]
[326.18338013 -318.06851196]
[318.94531250 -304.90649414]
[310.08349609 -292.77816772]
[299.74346924 -281.88265991]
[288.09500122 -272.39889526]
[275.32937622 -264.48263550]
[261.65621948 -258.26382446]
[247.30007935 -253.84463501]
[232.49667358 -251.29759216]
[217.48908997 -250.66452026]
[202.52377319 -251.95584106]
[187.84645081 -255.15032959]
[182.80953979 -241.02130127]
[186.89675903 -223.95491028]
[172.77055359 -212.14254761]
[167.94456482 -197.94009399]
[163.11856079 -183.73764038]
[158.29257202 -169.53518677]
[153.46656799 -155.33273315]
[148.64056396 -141.13027954]
[144.23957825 -126.79042816]
[140.26747131 -112.32590485]
[136.61938477 -97.77628326]
[133.29713440 -83.14881897]
[129.97486877 -68.52136230]
[126.65261078 -53.89390182]
[123.33035278 -39.26644135]
[124.91431427 -32.04751968]
[119.84820557 -24.44670677]
[116.30853271 -9.87033081]
[112.76885986 4.70604420]
[109.22918701 19.28241920]
[107.44672394 34.17613602]
[107.44672394 49.17613602]
[107.44672394 64.17613983]
[107.44672394 79.17613983]
[107.44672394 94.17613983]
[110.21977997 98.62856293]
[110.30082703 104.31774139]
[107.21674347 109.62107849]
[106.77014160 124.61443329]
[106.32353210 139.60777283]
[105.87692261 154.60113525]
[105.43032074 169.59448242]
[104.98371124 184.58782959]
[104.53710938 199.58117676]
[104.31378174 214.57951355]
[104.31378174 229.57951355]
[107.44319153 238.16116333]
[104.20045471 244.80242920]
[103.97712708 259.80078125]
[103.75379944 274.79910278]
[112.85883331 280.35986328]
[118.78900146 289.13140869]
[120.52979279 299.49353027]
[117.83319855 309.56533813]
[111.25053406 317.54681396]
[102.02130890 322.04040527]
[108.92349243 336.27664185]
[100.44236755 348.52081299]
[99.54955292 363.49423218]
[98.65673828 378.46762085]
[97.76392365 393.44104004]
[96.87110138 408.41442871]
[99.20892334 413.08151245]
[99.49423218 417.71530151]
[98.08341980 421.53952026]
[95.58932495 424.03189087]
[94.02880859 438.95046997]
[92.46828461 453.86907959]
[106.84438324 458.32037354]
[120.07569885 465.49105835]
[131.65365601 475.10546875]
[141.13322449 486.79409790]
[148.15005493 500.10763550]
[152.43440247 514.53436279]
[153.82162476 529.51977539]
[152.25837708 544.48779297]
[147.80474854 558.86315918]
[140.63194275 572.09332275]
[131.01564026 583.66973877]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 199]
[20 198]
[21 197]
[22 193]
[23 192]
[24 191]
[25 190]
[26 189]
[28 187]
[31 181]
[32 180]
[33 179]
[34 177]
[35 176]
[38 175]
[39 174]
[40 173]
[41 172]
[42 171]
[43 170]
[44 169]
[45 166]
[46 165]
[47 164]
[48 163]
[49 162]
[66 161]
[67 160]
[68 159]
[69 158]
[70 156]
[71 155]
[72 154]
[73 153]
[74 152]
[78 151]
[79 150]
[84 149]
[85 148]
[86 147]
[87 146]
[88 145]
[89 144]
[92 142]
[93 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
