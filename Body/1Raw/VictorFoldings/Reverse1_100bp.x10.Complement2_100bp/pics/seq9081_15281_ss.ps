%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[114.27347565 589.41650391]
[110.63929749 574.83892822]
[109.02402496 559.90222168]
[109.45774841 544.88470459]
[111.93238068 530.06616211]
[116.40182495 515.72259521]
[122.78282928 502.12124634]
[130.95649719 489.51550293]
[140.77058411 478.14019775]
[152.04223633 468.20724487]
[164.56147766 459.90167236]
[178.09509277 453.37826538]
[173.48107910 439.10552979]
[168.86708069 424.83279419]
[157.58999634 415.10260010]
[160.70721436 399.59152222]
[156.09321594 385.31878662]
[151.47920227 371.04605103]
[138.14245605 364.51403809]
[133.25987244 350.10519409]
[140.20166016 336.16067505]
[135.58764648 321.88793945]
[130.97363281 307.61523438]
[126.35962677 293.34249878]
[121.11114502 307.39428711]
[109.16291809 316.46292114]
[94.21723938 317.73834229]
[80.90518951 310.82534790]
[73.35165405 297.86602783]
[73.89717102 282.87594604]
[82.37271881 270.49996948]
[96.15204620 264.57287598]
[110.96547699 266.93130493]
[122.22306061 276.84466553]
[119.55726624 262.08343506]
[116.89146423 247.32221985]
[114.22566986 232.56100464]
[111.55987549 217.79978943]
[101.80448151 210.64724731]
[99.46275330 198.37124634]
[106.32582092 187.45057678]
[103.88008881 172.65130615]
[101.43436432 157.85203552]
[98.98863983 143.05276489]
[94.79660034 136.96600342]
[96.61837769 128.01509094]
[94.39325714 113.18103790]
[85.83453369 102.12483215]
[90.77269745 89.04407501]
[88.54757690 74.21002960]
[86.32246399 59.37598801]
[84.09734344 44.54194260]
[81.87223053 29.70790100]
[66.31401062 27.99441528]
[51.73750687 22.32244682]
[39.13097000 13.08271694]
[29.34749222 0.90762371]
[23.04728317 -13.37204361]
[20.65311623 -28.78379059]
[22.32196236 -44.27965164]
[27.93471909 -58.80743790]
[37.10467911 -71.38220215]
[49.20418167 -81.15299225]
[63.40755844 -87.46045685]
[60.96183014 -102.25972748]
[58.51610184 -117.05900574]
[50.61417007 -104.30912018]
[36.77118683 -98.53228760]
[22.15024376 -101.88311768]
[12.20459175 -113.11183167]
[10.64371395 -128.03039551]
[18.04977798 -141.07456970]
[31.66050529 -147.37916565]
[46.39942932 -144.59275818]
[56.76981354 -133.75355530]
[48.42401886 -147.19447327]
[55.58530045 -160.25453186]
[54.80397797 -175.23417664]
[53.91115952 -190.20758057]
[53.01834488 -205.18098450]
[52.12553024 -220.15438843]
[51.23271179 -235.12779236]
[50.33989716 -250.10119629]
[49.44708252 -265.07461548]
[46.13119125 -270.79443359]
[46.19248199 -276.47714233]
[48.75735092 -280.50585938]
[48.31074524 -295.49920654]
[47.86413956 -310.49255371]
[47.41753387 -325.48590088]
[36.61610413 -333.53225708]
[32.48143005 -346.14633179]
[36.31006622 -358.65325928]
[46.48999023 -366.55255127]
[46.26666260 -381.55090332]
[46.04333496 -396.54922485]
[31.64363289 -401.23187256]
[19.54610062 -410.33837891]
[11.06298828 -422.88092041]
[7.11448193 -437.49899292]
[8.12888527 -452.60693359]
[13.99616432 -466.56594849]
[24.07987976 -477.86184692]
[37.28622437 -485.26934814]
[52.18267441 -487.98495483]
[67.15337372 -485.71408081]
[80.57441711 -478.70306396]
[90.98998260 -467.71240234]
[97.27027130 -453.93426514]
[98.73403931 -438.86325073]
[95.22251892 -424.13409424]
[87.11660767 -411.34451294]
[75.29557037 -401.88186646]
[61.04167557 -396.77255249]
[61.26500320 -381.77423096]
[61.48833084 -366.77587891]
[74.04553986 -355.58859253]
[74.63796234 -338.44323730]
[62.41088486 -325.93252563]
[62.85749054 -310.93914795]
[63.30409622 -295.94580078]
[63.75070190 -280.95245361]
[64.42048645 -265.96740723]
[65.31330109 -250.99401855]
[66.20611572 -236.02061462]
[67.09893799 -221.04721069]
[67.99175262 -206.07380676]
[68.88456726 -191.10038757]
[69.77738190 -176.12698364]
[73.31343842 -169.63714600]
[70.57033539 -160.92431641]
[78.86822510 -148.55523682]
[71.75485229 -134.42333984]
[73.31537628 -119.50473022]
[75.76110077 -104.70545959]
[78.20682526 -89.90618896]
[92.55870056 -88.74493408]
[106.22261047 -84.17385101]
[118.40017700 -76.45523834]
[128.37870789 -66.03546906]
[135.57293701 -53.51911926]
[139.55932617 -39.63395691]
[140.10101318 -25.18857765]
[137.16188049 -11.02533340]
[130.90888977 2.02878237]
[121.70267487 13.21043110]
[110.07667542 21.86456108]
[96.70626831 27.48278427]
[98.93138885 42.31682587]
[101.15650940 57.15087128]
[103.38162231 71.98491669]
[105.60674286 86.81896210]
[114.16546631 97.87516785]
[109.22730255 110.95592499]
[111.45242310 125.78997040]
[113.78791046 140.60704041]
[116.23363495 155.40631104]
[118.67935944 170.20558167]
[121.12509155 185.00485229]
[133.13626099 198.96240234]
[126.32109070 215.13398743]
[128.98689270 229.89520264]
[131.65267944 244.65641785]
[134.31848145 259.41763306]
[136.98426819 274.17886353]
[140.63237000 288.72848511]
[145.24636841 303.00122070]
[149.86038208 317.27395630]
[154.47439575 331.54669189]
[168.26528931 338.78884888]
[172.74122620 353.32916260]
[165.75193787 366.43203735]
[170.36593628 380.70477295]
[174.97994995 394.97750854]
[186.58705139 405.72857666]
[183.13981628 420.21878052]
[187.75381470 434.49151611]
[192.36782837 448.76425171]
[207.15902710 446.13098145]
[222.17103577 445.53637695]
[237.12417603 446.99154663]
[251.73986816 450.46932983]
[265.74584961 455.90493774]
[278.88122559 463.19717407]
[290.90121460 472.21011353]
[301.58197021 482.77587891]
[310.72445679 494.69763184]
[318.15838623 507.75329590]
[323.74530029 521.69964600]
[327.38104248 536.27685547]
[328.99792480 551.21337891]
[328.56582642 566.23089600]
[326.09280396 581.04974365]
[321.62490845 595.39379883]
[315.24539185 608.99584961]
[307.07305908 621.60247803]
[297.26022339 632.97882080]
[285.98965454 642.91302490]
[273.47128296 651.21990967]
[259.93838501 657.74481201]
[245.64303589 662.36614990]
[230.85154724 664.99780273]
[215.83947754 665.59075928]
[200.88650513 664.13397217]
[186.27117920 660.65460205]
[172.26577759 655.21746826]
[159.13121033 647.92382812]
[147.11218262 638.90960693]
[136.43258667 628.34271240]
[127.29137421 616.41992188]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 178]
[13 177]
[14 176]
[16 174]
[17 173]
[18 172]
[21 169]
[22 168]
[23 167]
[24 166]
[34 165]
[35 164]
[36 163]
[37 162]
[38 161]
[41 159]
[42 158]
[43 157]
[44 156]
[46 155]
[47 154]
[49 152]
[50 151]
[51 150]
[52 149]
[53 148]
[64 136]
[65 135]
[66 134]
[75 133]
[77 131]
[78 129]
[79 128]
[80 127]
[81 126]
[82 125]
[83 124]
[84 123]
[87 122]
[88 121]
[89 120]
[90 119]
[94 116]
[95 115]
[96 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
