%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[145.07723999 710.87530518]
[136.16134644 698.77349854]
[129.24848938 685.42590332]
[124.50887299 671.16119385]
[122.05922699 656.33062744]
[121.95987701 641.29943848]
[124.21327209 626.43774414]
[128.76391602 612.11163330]
[135.49975586 598.67382812]
[144.25488281 586.45520020]
[154.81373596 575.75671387]
[166.91627502 566.84185791]
[180.26445007 559.93011475]
[194.52957153 555.19165039]
[192.08384705 540.39239502]
[189.63812256 525.59313965]
[187.19239807 510.79385376]
[184.74665833 495.99456787]
[170.66885376 486.79382324]
[167.53962708 469.92599487]
[177.77555847 455.73992920]
[175.10977173 440.97872925]
[172.44396973 426.21749878]
[162.56796265 415.06790161]
[167.72952271 400.11233521]
[165.06373596 385.35113525]
[162.39793396 370.58990479]
[159.73213196 355.82870483]
[156.51885986 341.17691040]
[152.76255798 326.65484619]
[149.00625610 312.13278198]
[145.14195251 297.63909912]
[134.31060791 287.41503906]
[138.11732483 272.05862427]
[134.14521790 257.59411621]
[130.17312622 243.12959290]
[126.20103455 228.66506958]
[112.22013092 227.45108032]
[99.46622467 221.52517700]
[89.47991180 211.58067322]
[83.47515106 198.79768372]
[82.19168091 184.70301819]
[85.80399323 170.98789978]
[93.89788055 159.30500793]
[105.51786804 151.06929016]
[101.76156616 136.54722595]
[98.00526428 122.02516937]
[94.24896240 107.50310516]
[90.44928741 103.88697815]
[88.94613647 98.39936066]
[90.60388947 92.49269104]
[87.28163147 77.86523438]
[83.95937347 63.23777008]
[73.35771942 51.49402618]
[78.08396912 37.36915970]
[74.76171112 22.74170113]
[64.16005707 10.99795818]
[68.88630676 -3.12690783]
[65.56404114 -17.75436783]
[62.02437210 -32.33074188]
[58.26807022 -46.85280228]
[54.51177216 -61.37486267]
[50.75547028 -75.89691925]
[46.89116287 -90.39061737]
[42.91906738 -104.85514069]
[37.62889862 -112.30174255]
[38.99722672 -119.56462860]
[35.24092484 -134.08668518]
[31.48462677 -148.60874939]
[27.72832489 -163.13079834]
[23.97202492 -177.65286255]
[20.21572304 -192.17492676]
[16.45942307 -206.69697571]
[10.38386250 -192.98248291]
[-2.08295536 -184.64111328]
[-17.07805061 -184.25753784]
[-29.95502853 -191.95060730]
[-36.72381973 -205.33654785]
[-35.28704071 -220.26757812]
[-26.08988953 -232.11715698]
[-11.98220730 -237.21356201]
[2.66458845 -233.97761536]
[13.31215382 -223.41177368]
[11.52968788 -238.30549622]
[9.74722290 -253.19921875]
[5.62022114 -261.34817505]
[8.05079460 -268.32772827]
[6.49027109 -283.24633789]
[4.92974806 -298.16494751]
[3.36922526 -313.08355713]
[-11.55074787 -315.28472900]
[-25.45425224 -321.12796021]
[-37.46730042 -330.24594116]
[-46.83474350 -342.06549072]
[-52.96773529 -355.84362793]
[-55.48075485 -370.71426392]
[-54.21582413 -385.74258423]
[-49.25246048 -399.98394775]
[-40.90266800 -412.54306030]
[-29.69132042 -422.63052368]
[-16.32316971 -429.61215210]
[-1.63855314 -433.04913330]
[13.43944454 -432.72540283]
[27.96300697 -428.66128540]
[41.01916885 -421.11230469]
[51.78721619 -410.55294800]
[59.59025192 -397.64700317]
[63.93777084 -383.20574951]
[64.55649567 -368.13696289]
[61.40751648 -353.38790894]
[54.68879318 -339.88568115]
[44.82266235 -328.47909546]
[32.42932510 -319.88516235]
[18.28783035 -314.64407349]
[19.84835243 -299.72546387]
[21.40887642 -284.80685425]
[22.96939850 -269.88824463]
[24.64093971 -254.98167419]
[26.42340660 -240.08796692]
[28.20587158 -225.19424438]
[30.98148346 -210.45327759]
[34.73778152 -195.93122864]
[38.49408340 -181.40916443]
[42.25038528 -166.88710022]
[46.00668335 -152.36505127]
[49.76298523 -137.84298706]
[53.51928711 -123.32093048]
[57.38359070 -108.82723236]
[61.35569000 -94.36270905]
[66.15821075 -88.74510193]
[65.27752686 -79.65322113]
[69.03382874 -65.13116455]
[72.79013062 -50.60910416]
[76.54643250 -36.08704376]
[80.13390350 -32.93441391]
[81.77899933 -27.49468040]
[80.19150543 -21.07662773]
[83.51376343 -6.44916725]
[93.87778473 4.24832249]
[89.38916779 19.41944122]
[92.71142578 34.04690170]
[103.07544708 44.74439240]
[98.58683014 59.91551208]
[101.90908813 74.54296875]
[105.23134613 89.17043304]
[108.77101898 103.74680328]
[112.52732086 118.26886749]
[116.28362274 132.79092407]
[120.03992462 147.31298828]
[135.97579956 149.44749451]
[149.83917236 157.51457214]
[159.52206421 170.25337219]
[163.56536865 185.69537354]
[161.37854004 201.46853638]
[153.32574463 215.16165161]
[140.66555786 224.69296265]
[144.63764954 239.15748596]
[148.60974121 253.62200928]
[152.58184814 268.08654785]
[163.69731140 279.34518433]
[159.60647583 293.66699219]
[164.89665222 301.11358643]
[163.52832031 308.37649536]
[167.28462219 322.89852905]
[171.04092407 337.42059326]
[180.78666687 326.01794434]
[195.78240967 326.37536621]
[204.97384644 338.22937012]
[201.58538818 352.84164429]
[188.11489868 359.44055176]
[174.49336243 353.16290283]
[177.15914917 367.92410278]
[179.82495117 382.68533325]
[182.49073792 397.44653320]
[192.55743408 409.65197754]
[187.20518494 423.55169678]
[189.87098694 438.31292725]
[192.53678894 453.07412720]
[204.41230774 459.42916870]
[210.37242126 471.29034424]
[208.44143677 484.22686768]
[199.54592896 493.54882812]
[201.99166870 508.34811401]
[204.43739319 523.14739990]
[206.88311768 537.94665527]
[209.32884216 552.74591064]
[224.36001587 552.64288330]
[239.22221375 554.89257812]
[253.54948425 559.43969727]
[266.98898315 566.17218018]
[279.20971680 574.92431641]
[289.91079712 585.48046875]
[298.82870483 597.58081055]
[305.74377441 610.92730713]
[310.48571777 625.19122314]
[312.93780518 640.02142334]
[313.03964233 655.05255127]
[310.78869629 669.91461182]
[306.24041748 684.24145508]
[299.50680542 697.68041992]
[290.75369263 709.90045166]
[280.19659424 720.60064697]
[268.09555054 729.51751709]
[254.74850464 736.43151855]
[240.48416138 741.17230225]
[225.65379333 743.62316895]
[210.62261963 743.72375488]
[195.76077271 741.47155762]
[181.43426514 736.92211914]
[167.99589539 730.18737793]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 186]
[15 185]
[16 184]
[17 183]
[18 182]
[21 178]
[22 177]
[23 176]
[25 174]
[26 173]
[27 172]
[28 171]
[29 165]
[30 164]
[31 163]
[32 161]
[34 159]
[35 158]
[36 157]
[37 156]
[45 149]
[46 148]
[47 147]
[48 146]
[51 145]
[52 144]
[53 143]
[55 141]
[56 140]
[58 138]
[59 137]
[60 134]
[61 133]
[62 132]
[63 131]
[64 129]
[65 128]
[67 127]
[68 126]
[69 125]
[70 124]
[71 123]
[72 122]
[73 121]
[83 120]
[84 119]
[85 118]
[87 117]
[88 116]
[89 115]
[90 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
