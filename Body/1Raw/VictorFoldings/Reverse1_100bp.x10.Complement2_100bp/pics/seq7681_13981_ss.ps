%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[38.78630447 683.66253662]
[30.65018082 696.31958008]
[20.26553726 707.20788574]
[8.00777054 715.93395996]
[-5.68000555 722.18225098]
[-20.30298805 725.72692871]
[-35.33256531 726.43988037]
[-50.22542953 724.29534912]
[-64.44320679 719.37078857]
[-77.47193909 711.84423828]
[-88.84064484 701.98779297]
[-98.13835144 690.15783691]
[-105.02895355 676.78186035]
[-109.26335907 662.34350586]
[-110.68849945 647.36468506]
[-109.25285339 632.38684082]
[-105.00832367 617.95141602]
[-98.10833740 604.58032227]
[-88.80233765 592.75683594]
[-77.42671967 582.90838623]
[-64.39270782 575.39099121]
[-50.17147827 570.47644043]
[-35.27711487 568.34228516]
[-20.24804115 569.06579590]
[-24.76346970 554.87213135]
[-13.98814392 543.28753662]
[-10.44847202 528.71118164]
[-11.92478085 521.46948242]
[-6.74606800 513.94494629]
[-2.98976731 499.42285156]
[0.76653337 484.90078735]
[4.52283382 470.37875366]
[8.27913475 455.85668945]
[12.03543568 441.33462524]
[15.79173565 426.81256104]
[2.92816782 419.17672729]
[-7.27285290 408.21450806]
[-13.97835255 394.80844116]
[-16.63725662 380.04122925]
[-15.02566719 365.10809326]
[-9.26569366 351.22015381]
[0.18375610 339.50622559]
[12.56352901 330.92098999]
[26.87520790 326.16723633]
[41.96163559 325.63833618]
[45.71793365 311.11627197]
[40.12442398 294.48260498]
[53.14044952 281.45706177]
[56.68012238 266.88067627]
[60.11118317 252.27835083]
[63.43344116 237.65089417]
[66.75569916 223.02343750]
[62.02944946 208.89857483]
[72.63110352 197.15483093]
[75.95336151 182.52735901]
[79.05747223 167.85206604]
[81.94274902 153.13217163]
[84.82801819 138.41227722]
[87.71329498 123.69239044]
[90.59856415 108.97249603]
[93.04429626 94.17322540]
[95.04830933 79.30770111]
[89.22408295 64.59753418]
[98.59239960 53.01806641]
[100.59641266 38.15253830]
[102.60042572 23.28701019]
[104.60443878 8.42148209]
[106.60845184 -6.44404650]
[100.78423309 -21.15421295]
[110.15254211 -32.73367691]
[112.15655518 -47.59920502]
[114.04985046 -62.47924042]
[115.83231354 -77.37295532]
[116.27892303 -92.36631012]
[115.38610077 -107.33971405]
[114.49328613 -122.31311798]
[111.61743927 -126.66933441]
[110.78351593 -131.23637390]
[111.72989655 -135.20114136]
[113.91014862 -137.97221375]
[113.68682098 -152.97055054]
[113.46349335 -167.96888733]
[113.24016571 -182.96722412]
[105.29825592 -196.65068054]
[112.84520721 -209.49172974]
[112.62187958 -224.49006653]
[112.39855194 -239.48840332]
[112.17522430 -254.48674011]
[111.95189667 -269.48507690]
[111.72856903 -284.48342896]
[111.28196716 -299.47677612]
[110.61217499 -314.46182251]
[109.94239044 -329.44683838]
[109.27260590 -344.43188477]
[108.60282135 -359.41693115]
[107.93303680 -374.40197754]
[93.54015350 -379.21957397]
[81.86200714 -388.91418457]
[74.47796631 -402.17465210]
[72.38667297 -417.20764160]
[75.87094879 -431.98007202]
[84.45957184 -444.49404907]
[96.99101257 -453.05718994]
[111.77048492 -456.51141357]
[126.79919434 -454.38952637]
[140.04463196 -446.97854614]
[149.71545410 -435.28070068]
[154.50375366 -420.87802124]
[153.76197815 -405.71841431]
[147.59042358 -391.85202026]
[136.82376099 -381.15420532]
[122.91807556 -375.07174683]
[123.58786011 -360.08670044]
[124.25764465 -345.10168457]
[124.92742920 -330.11663818]
[125.59721375 -315.13159180]
[126.26700592 -300.14654541]
[129.12440491 -296.31976318]
[129.60820007 -290.65734863]
[126.72690582 -284.70675659]
[126.95023346 -269.70840454]
[127.17356110 -254.71006775]
[127.39688873 -239.71173096]
[127.62021637 -224.71339417]
[127.84354401 -209.71505737]
[135.76948547 -197.10440063]
[128.23849487 -183.19055176]
[128.46182251 -168.19221497]
[128.68515015 -153.19387817]
[128.90847778 -138.19554138]
[129.46669006 -123.20593262]
[130.35951233 -108.23252869]
[131.25231934 -93.25912476]
[138.61663818 -106.32690430]
[150.87184143 -114.97618103]
[165.65165710 -117.53691101]
[180.10231018 -113.51465607]
[191.43362427 -103.68605804]
[197.45770264 -89.94886780]
[197.01136780 -74.95550537]
[190.18083191 -61.60096741]
[178.28492737 -52.46380234]
[163.62060547 -49.30825424]
[149.01928711 -52.74361038]
[137.30027771 -62.10655594]
[130.72602844 -75.59049225]
[128.94357300 -60.69677353]
[131.26995850 -53.68181229]
[127.02208710 -45.59519196]
[125.01807404 -30.72966385]
[130.98562622 -17.08277893]
[121.47397614 -4.44003296]
[119.46996307 10.42549515]
[117.46595001 25.29102325]
[115.46193695 40.15655136]
[113.45792389 55.02207947]
[119.42548370 68.66896820]
[109.91383362 81.31171417]
[107.90982056 96.17723846]
[109.54565430 98.74892426]
[110.28191376 101.97265625]
[109.87528229 105.51639557]
[108.20853424 108.96287537]
[105.31845856 111.85777283]
[102.43318176 126.57765961]
[99.54791260 141.29754639]
[96.66263580 156.01744080]
[93.77736664 170.73733521]
[95.55524445 177.10527039]
[94.07283783 182.59158325]
[90.58082581 185.84962463]
[87.25856781 200.47708130]
[91.74718475 215.64820862]
[81.38316345 226.34568787]
[78.06090546 240.97315979]
[74.73863983 255.60061646]
[75.88963318 264.66223145]
[71.25650024 270.42034912]
[67.71682739 284.99673462]
[73.74864197 296.39761353]
[70.50035095 308.46542358]
[60.23999405 314.87258911]
[56.48369217 329.39465332]
[69.42152405 337.17233276]
[79.63321686 348.26934814]
[86.29748535 361.78054810]
[88.88191223 376.60717773]
[87.18545532 391.54617310]
[81.35410309 405.38784790]
[71.86832428 417.01370239]
[59.50347900 425.48696899]
[45.26648712 430.12802124]
[30.31379509 430.56887817]
[26.55749512 445.09091187]
[22.80119324 459.61297607]
[19.04489326 474.13504028]
[15.28859234 488.65710449]
[11.53229237 503.17916870]
[7.77599144 517.70123291]
[4.12790346 532.25085449]
[0.58823121 546.82720947]
[4.85047817 562.06347656]
[-5.67166615 572.60546875]
[8.01541328 578.85528564]
[20.27220535 587.58270264]
[30.65563583 598.47216797]
[38.79034805 611.13012695]
[44.38228226 625.09887695]
[47.22928619 639.87359619]
[47.22844696 654.92004395]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 203]
[26 201]
[27 200]
[29 199]
[30 198]
[31 197]
[32 196]
[33 195]
[34 194]
[35 193]
[45 183]
[46 182]
[48 179]
[49 178]
[50 176]
[51 175]
[52 174]
[54 172]
[55 171]
[56 168]
[57 167]
[58 166]
[59 165]
[60 164]
[61 159]
[62 158]
[64 156]
[65 155]
[66 154]
[67 153]
[68 152]
[70 150]
[71 149]
[72 147]
[73 146]
[74 133]
[75 132]
[76 131]
[80 130]
[81 129]
[82 128]
[83 127]
[85 125]
[86 124]
[87 123]
[88 122]
[89 121]
[90 120]
[91 117]
[92 116]
[93 115]
[94 114]
[95 113]
[96 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
