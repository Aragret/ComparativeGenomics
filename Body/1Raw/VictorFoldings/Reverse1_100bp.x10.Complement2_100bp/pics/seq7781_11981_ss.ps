%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[73.23062134 589.10766602]
[58.51574326 585.95190430]
[44.69938660 579.98577881]
[32.31260681 571.43865967]
[21.83152199 560.63897705]
[13.65899754 548.00189209]
[8.10916328 534.01312256]
[5.39533997 519.21032715]
[5.62184000 504.16259766]
[8.77995682 489.44824219]
[14.74830055 475.63284302]
[23.29746437 463.24743652]
[34.09884262 452.76812744]
[46.73725510 444.59762573]
[60.72692108 439.05004883]
[75.53010559 436.33862305]
[75.75343323 421.34030151]
[75.97676086 406.34194946]
[76.20008850 391.34362793]
[76.42341614 376.34527588]
[73.79885101 372.35522461]
[73.65296173 366.67404175]
[76.88332367 360.90548706]
[77.55310822 345.92044067]
[78.22289276 330.93539429]
[78.89267731 315.95037842]
[70.96373749 306.81478882]
[71.39910889 294.32504272]
[80.51047516 285.19564819]
[81.40328979 270.22222900]
[82.29611206 255.24884033]
[83.18892670 240.27543640]
[84.08174133 225.30203247]
[84.97455597 210.32861328]
[78.00851440 197.16337585]
[86.55349731 183.84820557]
[87.44631195 168.87480164]
[79.65426636 159.62220764]
[80.27554321 147.14030457]
[89.52182770 138.14758301]
[90.63747406 123.18913269]
[91.75312042 108.23067474]
[82.70896149 120.19742584]
[69.40806580 127.13185120]
[54.41864395 127.69503021]
[40.63491058 121.77822113]
[30.71828842 110.52386475]
[26.58352470 96.10499573]
[29.02897453 81.30567932]
[37.58246231 68.98342896]
[50.59244537 61.51747894]
[65.54689026 60.34938431]
[79.55834198 65.70468903]
[89.92140198 76.54936981]
[94.63524628 90.79075623]
[98.39154816 76.26869202]
[102.14784241 61.74663544]
[105.90414429 47.22457504]
[108.23963165 32.40750885]
[109.13244629 17.43410110]
[110.02526855 2.46069622]
[110.80658722 -12.51894093]
[111.47637177 -27.50398064]
[104.36299896 -41.63587570]
[112.66088867 -54.00496674]
[113.33067322 -68.99000549]
[114.00045776 -83.97504425]
[114.67024231 -98.96008301]
[115.34002686 -113.94512177]
[116.00981140 -128.93016052]
[116.56802368 -143.91976929]
[117.01462555 -158.91311646]
[117.46123505 -173.90646362]
[117.90783691 -188.89982605]
[103.01336670 -190.77052307]
[88.36416626 -194.04856873]
[74.09290314 -198.70428467]
[60.32881927 -204.69551086]
[47.19657135 -211.96798706]
[34.81508636 -220.45584106]
[23.29649925 -230.08219910]
[12.74512672 -240.75990295]
[3.25652361 -252.39222717]
[-5.08337688 -264.87384033]
[-12.19904613 -278.09170532]
[-18.02604103 -291.92611694]
[-22.51159096 -306.25180054]
[-25.61507416 -320.93896484]
[-27.30838203 -335.85464478]
[-27.57618141 -350.86373901]
[-26.41604614 -365.83032227]
[-23.83848190 -380.61886597]
[-19.86683273 -395.09542847]
[-14.53706837 -409.12890625]
[-7.89745569 -422.59219360]
[-0.00812668 -435.36340332]
[9.05947113 -447.32681274]
[19.22321701 -458.37411499]
[30.39106560 -468.40527344]
[42.46187592 -477.32940674]
[55.32633209 -485.06570435]
[68.86792755 -491.54412842]
[82.96401978 -496.70599365]
[97.48696136 -500.50454712]
[112.30521393 -502.90539551]
[127.28459167 -503.88681030]
[142.28942871 -503.43984985]
[157.18382263 -501.56860352]
[171.83290100 -498.29000854]
[186.10400391 -493.63378906]
[199.86787415 -487.64205933]
[212.99984741 -480.36911011]
[225.38102722 -471.88079834]
[236.89926147 -462.25402832]
[247.45024109 -451.57592773]
[256.93841553 -439.94326782]
[265.27786255 -427.46133423]
[272.39306641 -414.24319458]
[278.21954346 -400.40859985]
[282.70458984 -386.08276367]
[285.80752563 -371.39547729]
[287.50027466 -356.47973633]
[287.76754761 -341.47061157]
[286.60684204 -326.50405884]
[284.02874756 -311.71563721]
[280.05657959 -297.23922729]
[274.72628784 -283.20593262]
[268.08621216 -269.74288940]
[260.19641113 -256.97198486]
[251.12837219 -245.00889587]
[240.96421814 -233.96195984]
[229.79600525 -223.93121338]
[217.72486877 -215.00750732]
[204.86013794 -207.27166748]
[191.31829834 -200.79373169]
[177.22201538 -195.63238525]
[162.69894409 -191.83436584]
[147.88059998 -189.43406677]
[132.90118408 -188.45321655]
[132.45458984 -173.45986938]
[132.00798035 -158.46650696]
[131.56137085 -143.47315979]
[134.50433350 -136.69372559]
[130.99484253 -128.26037598]
[130.32505798 -113.27533722]
[129.65527344 -98.29029846]
[128.98548889 -83.30525970]
[128.31570435 -68.32022095]
[127.64592743 -53.33518219]
[134.80720520 -40.27511597]
[126.46141052 -26.83419418]
[125.79162598 -11.84915638]
[128.63331604 -5.02665138]
[124.99867249 3.35351205]
[124.10585785 18.32691765]
[123.21303558 33.30032349]
[131.81216431 21.00987625]
[144.62464905 13.20986652]
[159.49137878 11.21473026]
[173.90702820 15.36068439]
[185.44232178 24.94906235]
[192.15335083 38.36405563]
[192.90919495 53.34500122]
[187.58248901 67.36734009]
[177.07086182 78.06807709]
[163.14570618 83.64393616]
[148.15367126 83.15529633]
[134.62117004 76.68449402]
[124.82865906 65.32197571]
[120.42620850 50.98087692]
[116.66990662 65.50293732]
[112.91360474 80.02499390]
[109.15730286 94.54705048]
[106.71157837 109.34632111]
[105.59592438 124.30477905]
[104.48027802 139.26322937]
[112.85856628 155.66096497]
[102.41972351 169.76762390]
[101.52690125 184.74102783]
[108.42908478 198.97726440]
[99.94795990 211.22143555]
[99.05514526 226.19483948]
[98.16233063 241.16824341]
[97.26951599 256.14166260]
[96.37670135 271.11505127]
[95.48388672 286.08847046]
[104.10537720 302.35964966]
[93.87771606 316.62014771]
[93.20793152 331.60519409]
[92.53814697 346.59024048]
[91.86836243 361.57525635]
[91.42176056 376.56860352]
[91.19842529 391.56695557]
[90.97509766 406.56527710]
[90.75177002 421.56362915]
[90.52844238 436.56195068]
[105.24433899 439.71292114]
[119.06262970 445.67456055]
[131.45217896 454.21771240]
[141.93675232 465.01400757]
[150.11337280 477.64843750]
[155.66773987 491.63540649]
[158.38635254 506.43728638]
[158.16471863 521.48510742]
[155.01136780 536.20050049]
[149.04750061 550.01782227]
[140.50233459 562.40600586]
[129.70436096 572.88879395]
[117.06858826 581.06341553]
[103.08071899 586.61547852]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 196]
[17 195]
[18 194]
[19 193]
[20 192]
[23 191]
[24 190]
[25 189]
[26 188]
[29 186]
[30 185]
[31 184]
[32 183]
[33 182]
[34 181]
[36 179]
[37 178]
[40 176]
[41 175]
[42 174]
[55 173]
[56 172]
[57 171]
[58 170]
[59 156]
[60 155]
[61 154]
[62 152]
[63 151]
[65 149]
[66 148]
[67 147]
[68 146]
[69 145]
[70 144]
[71 142]
[72 141]
[73 140]
[74 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
