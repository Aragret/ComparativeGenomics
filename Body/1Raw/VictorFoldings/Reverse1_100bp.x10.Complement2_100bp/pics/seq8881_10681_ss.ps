%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[121.59478760 527.55072021]
[126.13382721 513.20208740]
[133.38519287 500.01480103]
[143.07017517 488.49578857]
[154.81649780 479.08779907]
[168.17265320 472.15246582]
[163.98564148 457.74868774]
[159.79862976 443.34490967]
[155.61161804 428.94110107]
[151.42460632 414.53732300]
[147.23759460 400.13354492]
[143.05058289 385.72976685]
[138.86358643 371.32598877]
[134.67657471 356.92221069]
[122.62701416 352.35736084]
[115.29734039 341.52416992]
[115.54907990 328.25213623]
[123.51434326 317.39077759]
[119.54224396 302.92623901]
[115.57014465 288.46173096]
[111.59805298 273.99719238]
[106.56113434 259.86816406]
[100.48730469 246.15290833]
[99.85783386 261.13967896]
[96.26486206 275.70300293]
[89.85149384 289.26284790]
[80.87316895 301.27905273]
[69.68749237 311.27310181]
[56.73999405 318.84689331]
[42.54635620 323.69876099]
[27.67190933 325.63546753]
[12.70909691 324.57986450]
[-1.74611640 320.57403564]
[-15.11798668 313.77746582]
[-26.87391663 304.46090698]
[-36.54567337 292.99545288]
[-43.74803162 279.83770752]
[-48.19412613 265.51177979]
[-49.70687103 250.58825684]
[-48.22601700 235.66152954]
[-43.81053925 221.32614136]
[-36.63631058 208.15304565]
[-26.98907280 196.66693115]
[-15.25307560 187.32528687]
[-1.89575768 180.50016785]
[12.55086422 176.46345520]
[27.51138496 175.37590027]
[42.38993454 177.28082275]
[56.59391022 182.10235596]
[69.55756378 189.64845276]
[80.76456451 199.61856079]
[89.76853943 211.61558533]
[96.20945740 225.15773010]
[96.43278503 210.15939331]
[96.65611267 195.16105652]
[96.87944031 180.16271973]
[96.54446411 165.16645813]
[95.65164948 150.19305420]
[94.75883484 135.21965027]
[93.86601257 120.24624634]
[92.97319794 105.27284241]
[90.87324524 103.06383514]
[89.53064728 100.04192352]
[89.24803925 96.48614502]
[90.22073364 92.78342438]
[92.50000000 89.38667297]
[92.50000000 74.38667297]
[92.50000000 59.38667297]
[92.05339050 44.39332581]
[91.16057587 29.41991806]
[90.26776123 14.44651318]
[89.37494659 -0.52689266]
[88.48213196 -15.50029850]
[87.36648560 -30.45875168]
[86.02824402 -45.39893723]
[84.69001007 -60.33912277]
[83.24059296 -75.26892853]
[81.68006897 -90.18753815]
[80.11955261 -105.10614014]
[78.55902863 -120.02474213]
[76.99850464 -134.94334412]
[75.43798065 -149.86195374]
[73.87745667 -164.78056335]
[72.31693268 -179.69915771]
[70.09181976 -194.53320312]
[67.20654297 -209.25309753]
[52.14807129 -209.83543396]
[37.62995529 -213.87536621]
[24.43514633 -221.15504456]
[13.27521706 -231.28187561]
[4.75201082 -243.70973206]
[-0.67482591 -257.76840210]
[-2.71263123 -272.69970703]
[-1.25150895 -287.69842529]
[3.62974453 -301.95571899]
[11.66788960 -314.70266724]
[22.42943954 -325.25189209]
[35.33403397 -333.03442383]
[49.68575287 -337.63061523]
[64.71061707 -338.79260254]
[79.59835815 -336.45767212]
[93.54609680 -330.75177002]
[105.80165863 -321.98263550]
[115.70410156 -310.62310791]
[122.71940613 -297.28585815]
[126.46925354 -282.69012451]
[126.75141144 -267.62304688]
[123.55065918 -252.89715576]
[117.03961945 -239.30661011]
[107.56941223 -227.58432007]
[95.65077209 -218.36247253]
[81.92643738 -212.13836670]
[84.81170654 -197.41848755]
[94.05709076 -209.23045349]
[108.92958832 -211.18211365]
[120.90954590 -202.15545654]
[123.13430786 -187.32136536]
[114.32942963 -175.17747498]
[99.53874207 -172.68035889]
[87.23554230 -181.25968933]
[88.79605865 -166.34107971]
[90.35658264 -151.42247009]
[91.91710663 -136.50387573]
[93.47763062 -121.58526611]
[95.03815460 -106.66666412]
[96.59867859 -91.74805450]
[98.15920258 -76.82945251]
[101.98151398 -70.50397491]
[99.63019562 -61.67735672]
[100.96842957 -46.73717117]
[102.30666351 -31.79698563]
[105.33209991 -28.10161018]
[106.06823730 -22.46644211]
[103.45553589 -16.39311409]
[104.34835052 -1.41970849]
[105.24116516 13.55369759]
[106.13398743 28.52710342]
[107.02680206 43.50050735]
[109.03150940 45.45991516]
[110.38085938 48.33147812]
[110.72354889 51.86955261]
[109.80357361 55.70597839]
[107.50000000 59.38667297]
[107.50000000 74.38667297]
[107.50000000 89.38667297]
[107.94660950 104.38002777]
[108.83942413 119.35343170]
[109.73223877 134.32684326]
[110.62505341 149.30024719]
[111.51786804 164.27365112]
[123.27494049 154.95852661]
[137.92190552 158.19372559]
[144.66156006 171.59436035]
[138.52569580 185.28198242]
[124.03743744 189.16659546]
[111.87777710 180.38604736]
[111.65444946 195.38438416]
[111.43112183 210.38272095]
[111.20779419 225.38105774]
[114.20256805 240.07907104]
[120.27640533 253.79432678]
[123.46359253 239.13685608]
[133.47915649 227.97045898]
[147.70506287 223.21401978]
[162.42268372 226.11085510]
[173.78486633 235.90376282]
[178.82157898 250.03286743]
[176.21621704 264.80487061]
[166.64982605 276.35839844]
[152.62303162 281.67340088]
[137.80241394 279.36053467]
[126.06257629 270.02511597]
[130.03466797 284.48962402]
[134.00677490 298.95416260]
[137.97886658 313.41867065]
[153.33847046 321.79135132]
[157.80256653 338.35598755]
[149.08035278 352.73519897]
[153.26736450 367.13897705]
[157.45437622 381.54275513]
[161.64138794 395.94653320]
[165.82839966 410.35031128]
[170.01541138 424.75408936]
[174.20242310 439.15789795]
[178.38943481 453.56167603]
[182.57644653 467.96545410]
[197.56918335 466.66009521]
[212.52847290 468.30508423]
[226.87930298 472.83715820]
[240.07008362 480.08212280]
[251.59379578 489.76150513]
[261.00747681 501.50326538]
[267.94931030 514.85607910]
[272.15246582 529.30664062]
[273.45538330 544.29962158]
[271.80798340 559.25860596]
[267.27359009 573.60870361]
[260.02648926 586.79833984]
[250.34524536 598.32049561]
[238.60197449 607.73223877]
[225.24804688 614.67193604]
[210.79678345 618.87274170]
[195.80361938 620.17321777]
[180.84486389 618.52343750]
[166.49548340 613.98669434]
[153.30705261 606.73748779]
[141.78648376 597.05438232]
[132.37660217 585.30957031]
[125.43908691 571.95452881]
[121.24060822 557.50256348]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 186]
[7 185]
[8 184]
[9 183]
[10 182]
[11 181]
[12 180]
[13 179]
[14 178]
[18 175]
[19 174]
[20 173]
[21 172]
[22 161]
[23 160]
[53 159]
[54 158]
[55 157]
[56 156]
[57 150]
[58 149]
[59 148]
[60 147]
[61 146]
[66 145]
[67 144]
[68 143]
[69 138]
[70 137]
[71 136]
[72 135]
[73 134]
[74 131]
[75 130]
[76 129]
[77 127]
[78 126]
[79 125]
[80 124]
[81 123]
[82 122]
[83 121]
[84 120]
[85 113]
[86 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
