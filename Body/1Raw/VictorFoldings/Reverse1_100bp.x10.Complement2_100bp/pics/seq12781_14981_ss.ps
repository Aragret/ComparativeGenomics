%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUGGCUAUAGCGGCUAUGCCAACAUAUCCUAACGAACUUACCGACGACACAACCGUAGACGAGCCCGCAUAGUAGUUGACUACUCGUUCUUCCUAUAUUxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[188.58052063 508.98321533]
[197.15263367 496.58905029]
[208.35237122 486.50625610]
[221.57577515 479.27865601]
[217.60366821 464.81411743]
[213.63157654 450.34957886]
[209.23057556 436.00973511]
[204.40458679 421.80728149]
[199.57858276 407.60482788]
[194.33186340 393.55236816]
[188.66908264 379.66232300]
[183.00628662 365.77230835]
[177.34350586 351.88229370]
[171.68072510 337.99224854]
[169.15219116 336.78201294]
[166.95071411 334.49725342]
[165.48793030 331.25756836]
[165.12467957 327.32913208]
[166.12156677 323.10299683]
[161.29557800 308.90054321]
[150.58709717 303.27426147]
[146.45024109 291.48147583]
[151.61738586 279.66354370]
[147.00338745 265.39080811]
[142.38937378 251.11807251]
[137.77536011 236.84533691]
[133.16134644 222.57260132]
[128.54734802 208.29986572]
[123.93333435 194.02713013]
[119.31932831 179.75439453]
[114.70531464 165.48167419]
[97.93464661 158.14271545]
[91.74806976 140.57458496]
[100.51515961 123.78017426]
[95.47824860 109.65114594]
[89.20088196 96.02782440]
[81.73314667 83.01887512]
[74.26540375 70.00992584]
[66.79766083 57.00096893]
[61.28144836 53.35639572]
[58.80554962 48.24103165]
[59.30785751 43.49164200]
[52.23075104 30.26611328]
[45.15364456 17.04058456]
[38.34556198 10.95061111]
[38.07129288 3.56504607]
[31.19187927 -9.76438332]
[27.59493637 4.79796553]
[16.20008087 14.55282307]
[1.25730979 15.86186886]
[-11.66009140 8.23686123]
[-17.73425102 -5.47826147]
[-14.69965935 -20.16809654]
[-3.68814254 -30.35369873]
[11.19327545 -32.23609161]
[24.39500427 -25.11234474]
[19.14828491 -39.16481400]
[13.90156746 -53.21728516]
[8.65484905 -67.26976013]
[1.45910919 -54.10840225]
[-12.89614487 -49.75791931]
[-26.18757248 -56.71047211]
[-30.80123901 -70.98331451]
[-24.09422874 -84.40032196]
[-9.90861988 -89.27561188]
[3.62878704 -82.81711578]
[-0.34330928 -97.28163910]
[-4.31540537 -111.74616241]
[-8.28750134 -126.21068573]
[-12.25959778 -140.67520142]
[-15.39681625 -126.00695038]
[-22.66573906 -112.88587189]
[-33.43753433 -102.44707489]
[-46.78033066 -95.59362030]
[-61.53984451 -92.91840363]
[-76.43922424 -94.65286255]
[-90.18953705 -100.64694214]
[-101.60123444 -110.38208771]
[-109.68709564 -123.01612854]
[-113.74760437 -137.45608521]
[-113.43148804 -152.45275879]
[-108.76610565 -166.70877075]
[-100.15504456 -178.99085999]
[-88.34325409 -188.23649597]
[-74.35257721 -193.64581299]
[-59.39333725 -194.75088501]
[-44.75966263 -191.45610046]
[-31.71751595 -184.04649353]
[-21.39517021 -173.16305542]
[-14.68670368 -159.75067139]
[-14.46337605 -174.74900818]
[-14.24004841 -189.74734497]
[-14.01672077 -204.74568176]
[-13.79339314 -219.74401855]
[-28.34608269 -223.70256042]
[-41.45671463 -231.15655518]
[-52.30114746 -241.63745117]
[-60.19768524 -254.48640442]
[-64.64995575 -268.89572144]
[-65.37806702 -283.95959473]
[-62.33626938 -298.73114014]
[-55.71576309 -312.28176880]
[-45.93271637 -323.75970459]
[-33.60210419 -332.44338989]
[-19.49903870 -337.78701782]
[-4.51004982 -339.45468140]
[10.42264175 -337.34149170]
[24.36035538 -331.58032227]
[36.42695618 -322.53335571]
[45.86392212 -310.76922607]
[52.07804108 -297.02749634]
[54.67868805 -282.17193604]
[53.50238800 -267.13641357]
[48.62307739 -252.86604309]
[40.34747696 -240.25790405]
[29.19579697 -230.10453796]
[15.86904240 -223.04418945]
[1.20494461 -219.52069092]
[0.98161685 -204.52235413]
[0.75828916 -189.52401733]
[0.53496146 -174.52568054]
[0.31163374 -159.52734375]
[2.20492601 -144.64730835]
[6.17702198 -130.18278503]
[10.14911842 -115.71825409]
[14.12121487 -101.25373077]
[18.09331131 -86.78920746]
[22.70731926 -72.51647949]
[27.95403862 -58.46400452]
[33.20075607 -44.41153336]
[38.44747543 -30.35906219]
[44.52130890 -16.64379501]
[51.40072250 -3.31436658]
[58.37917328 9.96348000]
[65.45627594 23.18900681]
[72.53338623 36.41453552]
[79.80661011 49.53322983]
[87.27435303 62.54218292]
[94.74209595 75.55113220]
[102.20983887 88.56008911]
[102.98385620 73.58007050]
[110.10472870 60.37805939]
[122.19754028 51.50315475]
[136.92735291 48.66896439]
[151.45007324 52.42272186]
[162.96157837 62.03963852]
[169.23919678 75.66283417]
[169.07080078 90.66189575]
[162.48892212 104.14072418]
[150.76440430 113.49677277]
[136.16107178 116.92353821]
[121.49860382 113.75936890]
[109.60727692 104.61422729]
[114.64418793 118.74325562]
[126.17172241 121.65058899]
[134.77639771 129.67932129]
[138.39952087 140.75030518]
[136.25093079 152.07723999]
[128.97804260 160.86766052]
[133.59205627 175.14039612]
[138.20606995 189.41313171]
[142.82008362 203.68585205]
[147.43408203 217.95858765]
[152.04809570 232.23132324]
[156.66210938 246.50405884]
[161.27610779 260.77679443]
[165.89012146 275.04953003]
[179.83889771 287.07089233]
[175.49803162 304.07455444]
[180.32403564 318.27700806]
[185.57073975 332.32946777]
[191.23353577 346.21948242]
[196.89631653 360.10952759]
[202.55911255 373.99954224]
[208.22189331 387.88958740]
[211.74453735 390.42825317]
[214.04475403 393.63348389]
[215.06312561 397.03912354]
[214.89768982 400.20761108]
[213.78103638 402.77883911]
[218.60704041 416.98129272]
[223.43302917 431.18374634]
[226.79832458 433.92761230]
[228.90370178 437.26406860]
[229.71754456 440.72427368]
[229.36381531 443.87728882]
[228.09609985 446.37750244]
[232.06819153 460.84201050]
[236.04029846 475.30654907]
[251.10037231 474.76727295]
[265.87875366 477.71621704]
[279.57846069 483.99432373]
[291.46066284 493.26306152]
[300.88461304 505.02258301]
[307.34204102 518.63867188]
[310.48474121 533.37707520]
[310.14321899 548.44293213]
[306.33590698 563.02380371]
[299.26809692 576.33325195]
[289.32098389 587.65368652]
[277.03094482 596.37445068]
[263.06085205 602.02539062]
[248.16401672 604.30163574]
[233.14384460 603.08044434]
[218.81034851 598.42773438]
[205.93652344 590.59442139]
[195.21661377 580.00286865]
[187.22875977 567.22436523]
[182.40373230 552.94793701]
[181.00170898 537.94354248]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 189]
[5 188]
[6 187]
[7 182]
[8 181]
[9 180]
[10 175]
[11 174]
[12 173]
[13 172]
[14 171]
[19 170]
[20 169]
[23 167]
[24 166]
[25 165]
[26 164]
[27 163]
[28 162]
[29 161]
[30 160]
[31 159]
[34 154]
[35 153]
[36 140]
[37 139]
[38 138]
[39 137]
[42 136]
[43 135]
[44 134]
[46 133]
[47 132]
[56 131]
[57 130]
[58 129]
[59 128]
[66 127]
[67 126]
[68 125]
[69 124]
[70 123]
[90 122]
[91 121]
[92 120]
[93 119]
[94 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
