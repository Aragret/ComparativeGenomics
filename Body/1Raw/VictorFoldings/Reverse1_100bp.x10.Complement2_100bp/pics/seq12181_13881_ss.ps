%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUAGGAAAUUUUCAACUCUUUCGGUACAACAAUCUGUACCCCCGUACUCAAUCGUCAAGAACACUCGAAAGAGCCAUUUAUUCCCCAGCAUUCGGAGAxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[63.27421188 580.18121338]
[48.48283005 577.48583984]
[34.33687210 572.39257812]
[21.22225571 565.04022217]
[9.49675083 555.62945557]
[-0.51975977 544.41699219]
[-8.55401802 531.70874023]
[-14.38684273 517.85131836]
[-17.85911179 503.22280884]
[-18.87609863 488.22225952]
[-17.41005898 473.25897217]
[-13.50098705 458.74108887]
[-7.25552559 445.06466675]
[1.15594471 432.60284424]
[11.50395298 421.69558716]
[23.50619698 412.64041138]
[36.83524704 405.68438721]
[51.12747955 401.01727295]
[65.99298859 398.76638794]
[66.21631622 383.76803589]
[66.43964386 368.76971436]
[66.66297150 353.77136230]
[66.88629913 338.77304077]
[67.10962677 323.77468872]
[67.33295441 308.77636719]
[67.55628204 293.77801514]
[56.85425949 304.28833008]
[41.91048813 305.58590698]
[29.55706024 297.07751465]
[25.44179535 282.65307617]
[31.44613838 268.90725708]
[44.82498169 262.12442017]
[59.46170425 265.40567017]
[68.66516113 277.25253296]
[70.44763184 262.35882568]
[72.23009491 247.46510315]
[74.01255798 232.57139587]
[75.79502869 217.67767334]
[77.57749176 202.78395081]
[75.25110626 195.76899719]
[79.49897003 187.68237305]
[81.50299072 172.81684875]
[83.50700378 157.95130920]
[85.51101685 143.08578491]
[83.37918854 138.81210327]
[83.90943146 133.15385437]
[87.80239105 127.81002808]
[90.24811554 113.01075745]
[84.04858398 103.15139771]
[86.03302002 91.67519379]
[95.18329620 84.47007751]
[97.84909058 69.70886230]
[95.97660065 63.36809540]
[97.37715912 57.86033249]
[100.82028198 54.55065536]
[103.92439270 39.87535477]
[107.02849579 25.20005226]
[110.13260651 10.52474880]
[113.23671722 -4.15055323]
[106.78667450 -12.90872765]
[106.23290253 -23.55173302]
[111.51712799 -32.55314255]
[120.68633270 -37.06298065]
[124.22600555 -51.63935471]
[127.76567841 -66.21572876]
[131.30534363 -80.79210663]
[134.84501648 -95.36848450]
[138.27607727 -109.97080231]
[141.59834290 -124.59826660]
[144.92060852 -139.22572327]
[134.43261719 -128.50181580]
[120.51980591 -122.89524841]
[105.52671814 -123.35080719]
[91.97997284 -129.79173279]
[82.16241455 -141.13261414]
[77.72847748 -155.46231079]
[79.42536163 -170.36601257]
[86.96711731 -183.33219910]
[99.08281708 -192.17582703]
[113.73075867 -195.40660095]
[128.44250488 -192.48007202]
[140.73886108 -183.88940430]
[148.54768372 -171.08229065]
[150.55293274 -156.21528625]
[156.62677002 -169.93055725]
[162.70059204 -183.64582825]
[168.77442932 -197.36108398]
[155.68835449 -204.71630859]
[143.36068726 -213.28213501]
[131.90309143 -222.98101807]
[121.41933441 -233.72511292]
[112.00434113 -245.41709900]
[103.74339294 -257.95111084]
[96.71129608 -271.21362305]
[90.97174072 -285.08456421]
[86.57670593 -299.43823242]
[83.56599426 -314.14471436]
[81.96686554 -329.07077026]
[81.79381561 -344.08126831]
[83.04840088 -359.04025269]
[85.71926117 -373.81222534]
[89.78220367 -388.26342773]
[95.20044708 -402.26296997]
[101.92490387 -415.68408203]
[109.89469147 -428.40521240]
[119.03762054 -440.31115723]
[129.27090454 -451.29409790]
[140.50184631 -461.25454712]
[152.62873840 -470.10232544]
[165.54177856 -477.75729370]
[179.12399292 -484.15011597]
[193.25239563 -489.22290039]
[207.79901123 -492.92968750]
[222.63212585 -495.23696899]
[237.61740112 -496.12377930]
[252.61911011 -495.58212280]
[267.50140381 -493.61691284]
[282.12948608 -490.24591064]
[296.37091064 -485.49969482]
[310.09667969 -479.42120361]
[323.18249512 -472.06552124]
[335.50985718 -463.49923706]
[346.96710205 -453.79992676]
[357.45046997 -443.05545044]
[366.86502075 -431.36312866]
[375.12551880 -418.82879639]
[382.15713501 -405.56604004]
[387.89617920 -391.69491577]
[392.29071045 -377.34106445]
[395.30087280 -362.63449097]
[396.89944458 -347.70834351]
[397.07196045 -332.69784546]
[395.81683350 -317.73892212]
[393.14544678 -302.96704102]
[389.08197021 -288.51599121]
[383.66320801 -274.51663208]
[376.93826294 -261.09576416]
[368.96801758 -248.37492371]
[359.82464600 -236.46931458]
[349.59097290 -225.48675537]
[338.35964966 -215.52670288]
[326.23245239 -206.67938232]
[313.31912231 -199.02488708]
[299.73666382 -192.63256836]
[285.60809326 -187.56030273]
[271.06134033 -183.85401917]
[256.22814941 -181.54730225]
[241.24282837 -180.66102600]
[226.24114990 -181.20323181]
[211.35891724 -183.16899109]
[196.73094177 -186.54051208]
[182.48970032 -191.28724670]
[176.41586304 -177.57199097]
[170.34202576 -163.85671997]
[164.26820374 -150.14144897]
[159.54806519 -135.90345764]
[156.22579956 -121.27600861]
[152.90354919 -106.64854431]
[154.48750305 -99.42961884]
[149.42140198 -91.82881165]
[145.88172913 -77.25243378]
[142.34205627 -62.67605972]
[138.80238342 -48.09968185]
[135.26271057 -33.52330780]
[142.04878235 -15.41705894]
[127.91202545 -1.04644310]
[124.80791473 13.62885952]
[121.70380402 28.30416107]
[118.59969330 42.97946548]
[115.49558258 57.65476608]
[112.61030579 72.37465668]
[109.94451141 87.13587189]
[116.02197266 102.77047729]
[105.04738617 115.45648193]
[102.60166168 130.25575256]
[100.37654114 145.08979797]
[98.37252808 159.95532227]
[96.36851501 174.82086182]
[94.36450195 189.68638611]
[92.47120667 204.56642151]
[90.68874359 219.46014404]
[88.90628052 234.35385132]
[87.12380981 249.24757385]
[85.34134674 264.14129639]
[83.55887604 279.03500366]
[82.55461884 294.00134277]
[82.33129120 308.99969482]
[82.10796356 323.99801636]
[81.88463593 338.99636841]
[81.66130829 353.99468994]
[81.43798065 368.99304199]
[81.21465302 383.99136353]
[80.99132538 398.98971558]
[95.78322601 401.68222046]
[109.93016815 406.77279663]
[123.04619598 414.12258911]
[134.77351379 423.53109741]
[144.79219055 434.74160767]
[152.82888794 447.44836426]
[158.66438293 461.30465698]
[162.13948059 475.93249512]
[163.15934753 490.93280029]
[161.69619751 505.89639282]
[157.78991699 520.41503906]
[151.54708862 534.09265137]
[143.13803101 546.55609131]
[132.79211426 557.46533203]
[120.79161835 566.52282715]
[107.46390533 573.48144531]
[93.17257690 578.15130615]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 193]
[20 192]
[21 191]
[22 190]
[23 189]
[24 188]
[25 187]
[26 186]
[34 185]
[35 184]
[36 183]
[37 182]
[38 181]
[39 180]
[41 179]
[42 178]
[43 177]
[44 176]
[47 175]
[48 174]
[51 172]
[52 171]
[55 170]
[56 169]
[57 168]
[58 167]
[59 166]
[63 164]
[64 163]
[65 162]
[66 161]
[67 160]
[68 158]
[69 157]
[70 156]
[84 155]
[85 154]
[86 153]
[87 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
