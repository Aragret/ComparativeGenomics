%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[142.83799744 496.86541748]
[140.02772522 482.10330200]
[139.39686584 467.08929443]
[140.95887756 452.14346313]
[144.68046570 437.58435059]
[150.48229980 423.72232056]
[158.24072266 410.85278320]
[167.79035950 399.25009155]
[178.92765808 389.16156006]
[191.41520691 380.80221558]
[204.98686218 374.35021973]
[200.58587646 360.01037598]
[196.18487549 345.67053223]
[191.78387451 331.33068848]
[187.38287354 316.99084473]
[182.98187256 302.65100098]
[178.58088684 288.31115723]
[173.22969055 274.29812622]
[166.95233154 260.67480469]
[160.57373047 247.09860229]
[154.09423828 233.57025146]
[141.61828613 225.43391418]
[142.63526917 209.64543152]
[136.15577698 196.11708069]
[130.43133545 191.44239807]
[129.68218994 182.33872986]
[123.40483856 168.71542358]
[117.12747192 155.09210205]
[110.85011292 141.46878052]
[104.57275391 127.84547424]
[98.29539490 114.22215271]
[86.99069214 105.99443817]
[88.08129120 92.05520630]
[81.80393219 78.43189240]
[69.99623871 73.24140167]
[65.04827118 61.76527405]
[69.11172485 50.37163925]
[63.03788757 36.65637207]
[55.28149796 23.81743240]
[45.96661377 12.06018066]
[36.65172958 0.30292973]
[28.86971474 -4.48016834]
[27.28725052 -11.69942093]
[18.14844894 -23.59405327]
[14.07929611 -25.10929680]
[11.01242256 -27.59099197]
[9.12857723 -30.60537910]
[8.44907284 -33.70455551]
[8.84498310 -36.47969437]
[0.43036464 -48.89719009]
[-7.98425388 -61.31468582]
[-16.39887238 -73.73217773]
[-24.81349182 -86.14967346]
[-33.22811127 -98.56716919]
[-41.64272690 -110.98466492]
[-50.05734634 -123.40216064]
[-58.47196579 -135.81965637]
[-71.73925018 -128.78926086]
[-85.68888855 -123.23455811]
[-100.15733337 -119.22066498]
[-114.97495270 -116.79463959]
[-129.96800232 -115.98493195]
[-144.96070862 -116.80103302]
[-159.77728271 -119.23336792]
[-174.24401855 -123.25343323]
[-188.19128418 -128.81408691]
[-201.45558167 -135.85012817]
[-213.88136292 -144.27906799]
[-225.32296753 -154.00209045]
[-235.64622498 -164.90518188]
[-244.73011780 -176.86051941]
[-252.46813965 -189.72793579]
[-258.76956177 -203.35655212]
[-263.56051636 -217.58659363]
[-266.78479004 -232.25122070]
[-268.40463257 -247.17848206]
[-268.40103149 -262.19338989]
[-266.77404785 -277.11987305]
[-263.54269409 -291.78295898]
[-258.74493408 -306.01068115]
[-252.43696594 -319.63629150]
[-244.69276428 -332.49996948]
[-235.60313416 -344.45095825]
[-225.27464294 -355.34909058]
[-213.82836914 -365.06661987]
[-201.39854431 -373.48959351]
[-188.13087463 -380.51925659]
[-174.18093872 -386.07321167]
[-159.71228027 -390.08633423]
[-144.89453125 -392.51156616]
[-129.90144348 -393.32046509]
[-114.90877533 -392.50357056]
[-100.09233093 -390.07043457]
[-85.62581635 -386.04959106]
[-71.67884064 -380.48818970]
[-58.41493225 -373.45141602]
[-45.98959732 -365.02182007]
[-34.54852295 -355.29818726]
[-24.22584724 -344.39453125]
[-15.14259529 -332.43872070]
[-7.40526628 -319.57089233]
[-1.10457623 -305.94192505]
[3.68560290 -291.71160889]
[6.90910816 -277.04681396]
[8.52814674 -262.11947632]
[8.52373505 -247.10456848]
[6.89592505 -232.17816162]
[3.66380262 -217.51527405]
[-1.13473761 -203.28778076]
[-7.44343567 -189.66253662]
[-15.18832493 -176.79925537]
[-24.27860069 -164.84877014]
[-34.60768127 -153.95118713]
[-46.05447006 -144.23426819]
[-37.63985062 -131.81677246]
[-29.22523308 -119.39928436]
[-20.81061363 -106.98178864]
[-12.39599609 -94.56429291]
[-3.98137712 -82.14679718]
[4.43324137 -69.72930145]
[12.84786034 -57.31180573]
[21.26247787 -44.89431000]
[30.04308128 -32.73285675]
[39.18188477 -20.83822250]
[48.40898132 -9.01195335]
[57.72386551 2.74529815]
[67.03874969 14.50254917]
[64.42066956 -0.26720527]
[66.67507935 -15.09682465]
[73.56407928 -28.42130470]
[84.36064148 -38.83448029]
[97.92538452 -45.23742294]
[112.82678986 -46.95441437]
[127.49227905 -43.80426025]
[140.37416077 -36.11940384]
[150.11299133 -24.71084213]
[155.68099976 -10.78254986]
[156.49057007 4.19558716]
[152.45629883 18.64289093]
[144.00389099 31.03470039]
[132.02539062 40.06328201]
[117.78488159 44.77582550]
[102.78521729 44.67500687]
[88.60935211 39.77146149]
[76.75315857 30.58253860]
[82.82698822 44.29780579]
[97.54066467 53.86204529]
[95.42724609 72.15452576]
[101.70460510 85.77784729]
[113.00930786 94.00556183]
[111.91870880 107.94479370]
[118.19606781 121.56810760]
[124.47342682 135.19142151]
[130.75079346 148.81474304]
[137.02815247 162.43806458]
[143.30551147 176.06137085]
[149.68411255 189.63758850]
[156.16362000 203.16592407]
[169.10301208 212.26991272]
[167.62257385 227.09075928]
[174.10208130 240.61911011]
[180.63143921 247.00700378]
[180.57565308 254.39744568]
[186.85301208 268.02075195]
[190.39451599 253.44482422]
[201.18045044 243.02064514]
[215.86866760 239.97825623]
[229.90788269 245.26037598]
[238.94786072 257.23028564]
[240.18748474 272.17895508]
[233.24266052 285.47442627]
[220.26527405 292.99691772]
[205.27655029 292.41549683]
[192.92073059 283.91015625]
[197.32173157 298.25000000]
[201.72271729 312.58984375]
[206.12371826 326.92968750]
[210.52471924 341.26953125]
[214.92572021 355.60937500]
[219.32672119 369.94921875]
[234.18118286 367.67703247]
[249.20817566 367.59197998]
[264.08740234 369.69586182]
[278.50170898 373.94384766]
[292.14385986 380.24539185]
[304.72308350 388.46618652]
[315.97122192 398.43096924]
[325.64855957 409.92736816]
[333.54876709 422.71035767]
[339.50350952 436.50741577]
[343.38583374 451.02447510]
[345.11297607 465.95214844]
[344.64813232 480.97219849]
[342.00122070 495.76446533]
[337.22866821 510.01370239]
[330.43218994 523.41613770]
[321.75662231 535.68615723]
[311.38693237 546.56213379]
[299.54415894 555.81231689]
[286.48068237 563.23956299]
[272.47497559 568.68542480]
[257.82556152 572.03399658]
[242.84469604 573.21380615]
[227.85171509 572.19970703]
[213.16618347 569.01330566]
[199.10113525 563.72253418]
[185.95634460 556.44024658]
[174.01199341 547.32153320]
[163.52270508 536.56085205]
[154.71203613 524.38751221]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 180]
[12 179]
[13 178]
[14 177]
[15 176]
[16 175]
[17 174]
[18 164]
[19 163]
[20 161]
[21 160]
[23 158]
[24 157]
[26 156]
[27 155]
[28 154]
[29 153]
[30 152]
[31 151]
[33 149]
[34 148]
[37 146]
[38 145]
[39 127]
[40 126]
[41 125]
[43 124]
[44 123]
[49 122]
[50 121]
[51 120]
[52 119]
[53 118]
[54 117]
[55 116]
[56 115]
[57 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
