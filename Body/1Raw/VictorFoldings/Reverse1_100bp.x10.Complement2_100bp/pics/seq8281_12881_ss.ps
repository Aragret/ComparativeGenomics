%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[54.14250946 495.44415283]
[41.74633789 486.11062622]
[37.23593140 471.26354980]
[42.34563446 456.61190796]
[55.11066055 447.78958130]
[55.33398819 432.79122925]
[55.55731583 417.79290771]
[55.78064346 402.79455566]
[55.78064346 387.79455566]
[55.55731583 372.79623413]
[55.33398819 357.79788208]
[55.11066055 342.79956055]
[54.88732910 327.80120850]
[54.66400146 312.80288696]
[47.00281906 325.69885254]
[34.80595779 334.43020630]
[20.12880325 337.52554321]
[5.44471693 334.46325684]
[-6.77177763 325.75939941]
[-14.46198463 312.88070679]
[-16.32997131 297.99746704]
[-12.06094646 283.61779785]
[-2.37431693 272.16488647]
[11.09754944 265.56875610]
[26.08440781 264.94097900]
[40.06070709 270.38735962]
[50.67119980 280.99008179]
[56.12809753 294.96401978]
[58.79389572 280.20278931]
[61.45969009 265.44158936]
[64.12548828 250.68035889]
[57.48814392 240.56738281]
[59.58825684 228.24775696]
[69.83763885 220.41749573]
[72.72290802 205.69760132]
[75.60818481 190.97772217]
[78.49345398 176.25782776]
[81.26906586 161.51686096]
[83.93486023 146.75564575]
[75.25767517 134.70401001]
[77.75089264 119.69606018]
[90.45059204 110.67633820]
[85.90407562 97.45435333]
[94.78819275 86.65786743]
[83.92725372 97.00388336]
[69.37197113 100.62931061]
[54.92705917 96.58647919]
[44.36838531 85.93216705]
[40.45595551 71.45139313]
[44.21247864 56.92938614]
[54.65600204 46.16217804]
[69.05661011 41.96427917]
[83.65003204 45.43301773]
[94.62156677 55.66167068]
[99.10325623 69.97560883]
[103.92925262 55.77315140]
[108.75524902 41.57069397]
[113.58124542 27.36824036]
[118.40724945 13.16578484]
[123.23324585 -1.03667116]
[128.05923462 -15.23912716]
[132.88523865 -29.44158173]
[118.48153687 -25.25428772]
[106.13977051 -33.77958679]
[104.95782471 -48.73294830]
[115.80699158 -59.09130859]
[130.68966675 -57.21887207]
[138.63470459 -44.49757004]
[144.50366211 -58.30174637]
[150.37261963 -72.10591888]
[156.24159241 -85.91010284]
[142.36364746 -80.21775055]
[128.03582764 -84.65774536]
[119.80861664 -97.20019531]
[121.44337463 -112.11084747]
[132.19271851 -122.57275391]
[147.14219666 -123.80287933]
[159.45710754 -115.23882294]
[163.50709534 -100.79410553]
[170.78031921 -113.91279602]
[178.05355835 -127.03148651]
[185.32678223 -140.15017700]
[181.19688416 -155.16955566]
[188.75985718 -168.37017822]
[203.10398865 -172.21484375]
[210.37721252 -185.33354187]
[217.65043640 -198.45222473]
[224.92367554 -211.57092285]
[232.19689941 -224.68962097]
[239.37226868 -237.86209106]
[246.44937134 -251.08761597]
[253.52647400 -264.31314087]
[249.17341614 -279.26937866]
[256.53900146 -292.58111572]
[270.82431030 -296.63891602]
[277.90142822 -309.86447144]
[284.97851562 -323.08999634]
[272.70648193 -331.74890137]
[261.59158325 -341.85034180]
[251.80232239 -353.24111938]
[243.48707581 -365.74856567]
[236.77192688 -379.18307495]
[231.75865173 -393.34100342]
[228.52326965 -408.00769043]
[227.11482239 -422.96081543]
[227.55465698 -437.97369385]
[229.83610535 -452.81869507]
[233.92459106 -467.27081299]
[239.75813293 -481.11096191]
[247.24829102 -494.12930298]
[256.28152466 -506.12847900]
[266.72085571 -516.92663574]
[278.40808105 -526.35998535]
[291.16598511 -534.28564453]
[304.80117798 -540.58331299]
[319.10696411 -545.15765381]
[333.86642456 -547.93920898]
[348.85586548 -548.88592529]
[363.84805298 -547.98339844]
[378.61566162 -545.24523926]
[392.93484497 -540.71307373]
[406.58850098 -534.45556641]
[419.36968994 -526.56750488]
[431.08465576 -517.16857910]
[441.55572510 -506.40124512]
[450.62423706 -494.42871094]
[458.15270996 -481.43246460]
[464.02694702 -467.60955811]
[468.15798950 -453.16955566]
[470.48312378 -438.33129883]
[470.96716309 -423.31979370]
[469.60275269 -408.36260986]
[466.41055298 -393.68643188]
[461.43899536 -379.51382446]
[454.76342773 -366.05960083]
[446.48504639 -353.52770996]
[436.72937012 -342.10815430]
[425.64425659 -331.97406006]
[413.39776611 -323.27905273]
[400.17556763 -316.15490723]
[386.17810059 -310.70968628]
[371.61755371 -307.02587891]
[356.71469116 -305.15939331]
[341.69540405 -305.13845825]
[326.78738403 -306.96343994]
[312.21664429 -310.60665894]
[298.20404053 -316.01287842]
[291.12695312 -302.78735352]
[284.04983521 -289.56182861]
[288.59924316 -275.42538452]
[281.61044312 -261.91201782]
[266.75201416 -257.23605347]
[259.67489624 -244.01051331]
[252.59779358 -230.78498840]
[252.21359253 -223.40432739]
[245.31559753 -217.41639709]
[238.04235840 -204.29769897]
[230.76913452 -191.17900085]
[223.49591064 -178.06030273]
[216.22267151 -164.94161987]
[220.56109619 -150.73901367]
[213.37188721 -137.33119202]
[198.44548035 -132.87695312]
[191.17225647 -119.75826263]
[183.89901733 -106.63956451]
[176.62579346 -93.52087402]
[170.04576111 -80.04113770]
[164.17680359 -66.23696136]
[158.30784607 -52.43278503]
[152.43888855 -38.62860870]
[147.08769226 -24.61558533]
[142.26170349 -10.41312885]
[137.43569946 3.78932643]
[132.60969543 17.99178123]
[127.78370667 32.19423676]
[122.95771027 46.39669418]
[118.13170624 60.59914780]
[113.30570984 74.80160522]
[109.54940796 89.32366180]
[114.09592438 102.54564667]
[105.21180725 113.34213257]
[113.95435333 126.23420715]
[111.04058075 141.16619873]
[98.69608307 149.42143250]
[96.03028107 164.18266296]
[97.58474731 173.18385315]
[93.21334839 179.14309692]
[90.32807159 193.86299133]
[87.44280243 208.58288574]
[84.55753326 223.30276489]
[90.92788696 240.57992554]
[78.88670349 253.34616089]
[76.22090912 268.10739136]
[73.55511475 282.86859131]
[70.88931274 297.62982178]
[69.66233826 312.57955933]
[69.88566589 327.57788086]
[70.10899353 342.57623291]
[70.33232117 357.57455444]
[70.55564880 372.57290649]
[70.77897644 387.57122803]
[73.83615875 393.43341064]
[73.52118683 399.10772705]
[70.77897644 403.01788330]
[70.55564880 418.01623535]
[70.33232117 433.01455688]
[70.10899353 448.01290894]
[82.60569000 457.21139526]
[87.27689362 472.00866699]
[82.32643127 486.71487427]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 207]
[6 206]
[7 205]
[8 204]
[9 201]
[10 200]
[11 199]
[12 198]
[13 197]
[14 196]
[28 195]
[29 194]
[30 193]
[31 192]
[34 190]
[35 189]
[36 188]
[37 187]
[38 185]
[39 184]
[42 181]
[44 179]
[55 178]
[56 177]
[57 176]
[58 175]
[59 174]
[60 173]
[61 172]
[62 171]
[68 170]
[69 169]
[70 168]
[71 167]
[79 166]
[80 165]
[81 164]
[82 163]
[85 160]
[86 159]
[87 158]
[88 157]
[89 156]
[90 154]
[91 153]
[92 152]
[95 149]
[96 148]
[97 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
