%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[80.89783478 438.90957642]
[69.06035614 448.15777588]
[56.11698532 455.78170776]
[42.28919983 461.65087891]
[27.81361771 465.66491699]
[12.93792915 467.75512695]
[-2.08332086 467.88571167]
[-16.99309921 466.05444336]
[-31.53628159 462.29269409]
[-45.46401596 456.66479492]
[-58.53797531 449.26702881]
[-70.53444672 440.22604370]
[-81.24816895 429.69650269]
[-90.49579620 417.85858154]
[-98.11910248 404.91485596]
[-103.98764038 391.08679199]
[-108.00098419 376.61102295]
[-110.09046936 361.73522949]
[-110.22034454 346.71395874]
[-108.38837433 331.80429077]
[-104.62592316 317.26126099]
[-98.99735260 303.33380127]
[-91.59899139 290.26019287]
[-82.55742645 278.26416016]
[-72.02737427 267.55093384]
[-60.18901062 258.30386353]
[-47.24491501 250.68118286]
[-33.41657257 244.81330872]
[-18.94060707 240.80064392]
[-4.06472063 238.71186829]
[10.95654202 238.58271790]
[25.86614799 240.41539001]
[29.62244797 225.89332581]
[33.37874985 211.37127686]
[37.13504791 196.84921265]
[40.89134979 182.32714844]
[31.02740479 193.62771606]
[18.60447311 202.03430176]
[4.44652414 206.98934937]
[-10.50739574 208.16419983]
[-25.26544762 205.48092651]
[-38.84878159 199.11752319]
[-50.35646439 189.49601746]
[-59.02523422 177.25459290]
[-64.28012085 163.20518494]
[-65.77259064 148.27961731]
[-63.40364838 133.46786499]
[-57.33041763 119.75232697]
[-47.95571518 108.04271698]
[-35.90133286 99.11568451]
[-21.96679497 93.56333160]
[-7.07632732 91.75392151]
[7.78243876 93.80747223]
[21.62397385 99.58777618]
[33.53022003 108.71144104]
[42.71147919 120.57333374]
[48.55878830 134.38670349]
[50.68431854 149.23533630]
[48.94584274 164.13937378]
[57.17465210 151.59797668]
[57.68756485 136.71220398]
[71.72726440 129.41856384]
[79.95607758 116.87715912]
[88.18488312 104.33575439]
[96.13156891 91.61372375]
[103.79216766 78.71739197]
[111.45275879 65.82106781]
[119.11335754 52.92473984]
[119.57703400 46.32955170]
[122.81562805 41.65959167]
[127.19891357 39.76332474]
[135.24009705 27.10079765]
[143.28126526 14.43827343]
[151.32243347 1.77574813]
[151.54081726 -3.43955588]
[153.53811646 -7.63050365]
[156.62628174 -10.29101276]
[160.01606750 -11.26143646]
[168.61462402 -23.55227470]
[177.21319580 -35.84311295]
[185.81175232 -48.13394928]
[191.78332520 -61.89405441]
[194.88743591 -76.56935883]
[197.99154663 -91.24465942]
[201.09565735 -105.91996002]
[204.19976807 -120.59526062]
[189.96743774 -125.38665771]
[176.38760376 -131.79795837]
[163.64393616 -139.74247742]
[151.90875244 -149.11273193]
[141.34075928 -159.78204346]
[132.08288574 -171.60610962]
[124.26033020 -184.42500305]
[117.97888947 -198.06538391]
[113.32350922 -212.34277344]
[110.35714722 -227.06410217]
[109.11991882 -242.03025818]
[109.62855530 -257.03884888]
[111.87618256 -271.88690186]
[115.83240509 -286.37359619]
[121.44371033 -300.30307007]
[128.63421631 -313.48687744]
[137.30668640 -325.74676514]
[147.34384155 -336.91693115]
[158.60990906 -346.84628296]
[170.95256042 -355.40054321]
[184.20484924 -362.46405029]
[198.18757629 -367.94128418]
[212.71163940 -371.75811768]
[227.58059692 -373.86297607]
[242.59338379 -374.22738647]
[257.54696655 -372.84643555]
[272.23910522 -369.73873901]
[286.47109985 -364.94641113]
[300.05050659 -358.53417969]
[312.79364014 -350.58883667]
[324.52819824 -341.21777344]
[335.09548950 -330.54776001]
[344.35256958 -318.72308350]
[352.17425537 -305.90368652]
[358.45480347 -292.26287842]
[363.10922241 -277.98516846]
[366.07461548 -263.26364136]
[367.31085205 -248.29740906]
[366.80120850 -233.28886414]
[364.55258179 -218.44094849]
[360.59539795 -203.95451355]
[354.98315430 -190.02542114]
[347.79177856 -176.84208679]
[339.11846924 -164.58277893]
[329.08059692 -153.41329956]
[317.81384277 -143.48469543]
[305.47064209 -134.93124390]
[292.21786499 -127.86862183]
[278.23477173 -122.39234161]
[263.71044922 -118.57646179]
[248.84135437 -116.47259521]
[233.82855225 -116.10918427]
[218.87506104 -117.49114990]
[215.77095032 -102.81584930]
[212.66683960 -88.14054871]
[209.56272888 -73.46524811]
[206.45861816 -58.78994370]
[215.72734070 -70.58361816]
[227.28637695 -80.14336395]
[240.60986328 -87.03427124]
[255.09169006 -90.94284821]
[270.07299805 -91.69129181]
[284.87225342 -89.24553680]
[298.81622314 -83.71685791]
[311.27047729 -75.35676575]
[321.66851807 -64.54560089]
[329.53723145 -51.77519226]
[334.51864624 -37.62650681]
[336.38619995 -22.74321938]
[335.05487061 -7.80241585]
[330.58526611 6.51619434]
[323.18069458 19.56121063]
[313.17803955 30.73917198]
[301.03234863 39.54155350]
[287.29614258 45.56790924]
[272.59436035 48.54407883]
[257.59582520 48.33466339]
[242.98286438 44.94919586]
[229.42027283 38.54168701]
[217.52507019 29.40363884]
[207.83837891 17.95077133]
[200.80091858 4.70411110]
[196.73280334 -9.73370457]
[195.81913757 -24.70585251]
[198.10260010 -39.53538513]
[189.50402832 -27.24454880]
[180.90547180 -14.95371056]
[172.30690002 -2.66287255]
[163.98495483 9.81692123]
[155.94378662 22.47944641]
[147.90261841 35.14197159]
[139.86143494 47.80449677]
[132.00968933 60.58533859]
[124.34909058 73.48166656]
[116.68849182 86.37799072]
[109.02789307 99.27432251]
[109.44049072 103.10865784]
[108.16096497 107.10623932]
[105.15431213 110.50727844]
[100.72628021 112.56456757]
[92.49747467 125.10596466]
[84.26866913 137.64736938]
[83.16717529 153.43017578]
[69.71604919 159.82678223]
[61.48724365 172.36817932]
[55.41341019 186.08345032]
[51.65710831 200.60551453]
[47.90080643 215.12757874]
[44.14450836 229.64962769]
[40.38820648 244.17169189]
[54.31647491 249.79826355]
[67.39113617 257.19476318]
[79.38847351 266.23461914]
[90.10319519 276.76315308]
[99.35195160 288.60018921]
[106.97648621 301.54318237]
[112.84634399 315.37069702]
[116.86106873 329.84606934]
[118.95197296 344.72167969]
[119.08327484 359.74291992]
[117.25272369 374.65277100]
[113.49165344 389.19613647]
[107.86441040 403.12414551]
[100.46729279 416.19845581]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 196]
[33 195]
[34 194]
[35 193]
[36 192]
[59 191]
[60 190]
[62 188]
[63 187]
[64 186]
[65 182]
[66 181]
[67 180]
[68 179]
[71 178]
[72 177]
[73 176]
[74 175]
[78 174]
[79 173]
[80 172]
[81 171]
[82 143]
[83 142]
[84 141]
[85 140]
[86 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
