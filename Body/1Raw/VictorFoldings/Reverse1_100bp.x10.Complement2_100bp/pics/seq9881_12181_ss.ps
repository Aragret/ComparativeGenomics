%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUUAUCUACCUCUGUAUGUCUUUAUCAGUUUGGUGUAGAUGUUUUACGGUCAUAGUCCGCCGCCGAAGCUUCGGUUUCACUACAAACCUACAUUUCACxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[190.93093872 518.28118896]
[196.61424255 504.36715698]
[204.35499573 491.48379517]
[213.97175598 479.93310547]
[225.23910522 469.98587036]
[237.89288330 461.87524414]
[231.81904602 448.15997314]
[225.74522400 434.44470215]
[219.67138672 420.72946167]
[213.39402771 407.10614014]
[206.91452026 393.57778931]
[200.43502808 380.04943848]
[193.95553589 366.52108765]
[187.47604370 352.99273682]
[180.99653625 339.46441650]
[174.51704407 325.93606567]
[168.03755188 312.40771484]
[161.55805969 298.87936401]
[155.07855225 285.35101318]
[150.17713928 299.52761841]
[137.37498474 307.34457397]
[122.52505493 305.22805786]
[112.41654205 294.14575195]
[111.67092896 279.16427612]
[120.62908936 267.13302612]
[135.19548035 263.55249023]
[148.71183777 270.06094360]
[143.67492676 255.93193054]
[138.63801575 241.80290222]
[133.60108948 227.67387390]
[129.74665833 224.85386658]
[127.62281799 219.58259583]
[128.63139343 213.04850769]
[117.35431671 203.31831360]
[120.47153473 187.80723572]
[115.85752106 173.53450012]
[102.52078247 167.00250244]
[97.63819885 152.59365845]
[104.57997894 138.64913940]
[99.96597290 124.37640381]
[95.35196686 110.10367584]
[87.57571411 122.93059540]
[73.04051971 126.63574219]
[60.07279587 119.09663391]
[56.10104752 104.63201141]
[63.40047073 91.52787781]
[77.78961945 87.29086304]
[91.02513885 94.34739685]
[87.70288086 79.71994019]
[84.38062286 65.09247589]
[73.77896881 53.34873581]
[78.50521851 39.22386932]
[75.18296051 24.59640884]
[61.07997894 22.60715866]
[48.52941895 15.93747807]
[39.02928925 5.40654135]
[33.70561218 -7.70701122]
[33.17898560 -21.82029915]
[37.49228668 -35.23726273]
[46.10799026 -46.35248566]
[57.97505188 -53.84328842]
[54.87094498 -68.51859283]
[51.76683426 -83.19389343]
[48.66272354 -97.86919403]
[44.90642166 -112.39125061]
[40.50542450 -126.73110199]
[26.82388496 -134.17779541]
[22.56492424 -148.78312683]
[29.74852371 -161.78050232]
[25.34752464 -176.12034607]
[20.94652748 -190.46018982]
[16.43889809 -204.76687622]
[11.82488918 -219.03961182]
[7.21087980 -233.31234741]
[2.59687042 -247.58508301]
[-2.01713896 -261.85781860]
[-16.87758827 -259.58554077]
[-31.91009521 -259.72662354]
[-46.72528076 -262.27737427]
[-60.93939972 -267.17178345]
[-74.18426514 -274.28302002]
[-86.11681366 -283.42687988]
[-96.42795563 -294.36657715]
[-104.85060120 -306.81866455]
[-111.16660309 -320.46069336]
[-115.21234131 -334.93923950]
[-116.88303375 -349.87927246]
[-116.13540649 -364.89382935]
[-112.98881531 -379.59402466]
[-107.52477264 -393.59902954]
[-99.88481140 -406.54611206]
[-90.26681519 -418.09991455]
[-78.91992188 -427.96115112]
[-66.13803864 -435.87442017]
[-52.25224686 -441.63470459]
[-37.62222672 -445.09283447]
[-22.62692833 -446.15924072]
[-7.65476561 -444.80627441]
[6.90644550 -441.06900024]
[20.67953491 -435.04418945]
[33.30774689 -426.88793945]
[44.46398163 -416.81149292]
[53.85926437 -405.07589722]
[61.25023270 -391.98504639]
[66.44544983 -377.87811279]
[69.31033325 -363.12045288]
[69.77069092 -348.09432983]
[67.81459045 -333.18896484]
[63.49270248 -318.79043579]
[56.91697311 -305.27172852]
[48.25772858 -292.98297119]
[37.73926544 -282.24246216]
[25.63403511 -273.32846069]
[12.25559425 -266.47183228]
[16.86960411 -252.19908142]
[21.48361206 -237.92636108]
[26.09762192 -223.65362549]
[30.71163177 -209.38088989]
[35.76020432 -203.98332214]
[35.28637314 -194.86119080]
[39.68737030 -180.52134705]
[44.08837128 -166.18148804]
[57.32638168 -159.45166016]
[61.99389648 -144.97171021]
[54.84527206 -131.13209534]
[59.24626923 -116.79225159]
[67.21263123 -129.50198364]
[81.80137634 -132.99031067]
[94.65541840 -125.25895691]
[98.41136932 -110.73680878]
[90.91765594 -97.74280548]
[76.46701813 -93.72048950]
[63.33802414 -100.97330475]
[66.44213867 -86.29800415]
[69.54624939 -71.62270355]
[72.65035248 -56.94739914]
[88.27187347 -54.28391266]
[101.70786285 -45.80904770]
[110.88514709 -32.79550552]
[114.37429047 -17.21892929]
[111.61215210 -1.45801890]
[102.99255371 12.06873226]
[89.81041718 21.27415085]
[93.13267517 35.90161133]
[103.49670410 46.59909821]
[99.00807953 61.77021790]
[102.33033752 76.39768219]
[105.65260315 91.02513885]
[109.62469482 105.48966217]
[114.23870850 119.76239777]
[118.85271454 134.03512573]
[132.64360046 141.27729797]
[137.11955261 155.81761169]
[130.13026428 168.92048645]
[134.74426270 183.19322205]
[146.35136414 193.94430542]
[142.90412903 208.43449402]
[147.73011780 222.63694763]
[152.76704407 236.76597595]
[157.80395508 250.89500427]
[162.84086609 265.02404785]
[168.60690308 278.87152100]
[175.08639526 292.39987183]
[181.56590271 305.92822266]
[188.04539490 319.45657349]
[194.52488708 332.98492432]
[201.00437927 346.51324463]
[207.48388672 360.04159546]
[213.96337891 373.56994629]
[220.44287109 387.09829712]
[226.92236328 400.62664795]
[232.15223694 404.67138672]
[234.24081421 409.95672607]
[233.38664246 414.65560913]
[239.46047974 428.37088013]
[245.53431702 442.08615112]
[251.60815430 455.80142212]
[266.11822510 451.88244629]
[281.05648804 450.22448730]
[296.07275391 450.86639404]
[310.81503296 453.79309082]
[324.93774414 458.93600464]
[338.10983276 466.17456055]
[350.02249146 475.33908081]
[360.39654541 486.21475220]
[368.98873901 498.54660034]
[375.59768677 512.04559326]
[380.06845093 526.39520264]
[382.29626465 541.25921631]
[382.22888184 556.28900146]
[379.86788940 571.13238525]
[375.26861572 585.44140625]
[368.53890991 598.88055420]
[359.83648682 611.13488770]
[349.36535645 621.91705322]
[337.37097168 630.97442627]
[324.13452148 638.09460449]
[309.96624756 643.11065674]
[295.19833374 645.90502930]
[280.17691040 646.41229248]
[265.25411987 644.62042236]
[250.77976990 640.57153320]
[237.09315491 634.36047363]
[224.51512146 626.13287354]
[213.34051514 616.08160400]
[203.83126831 604.44226074]
[196.21031189 591.48767090]
[190.65628052 577.52148438]
[187.29936218 562.87121582]
[186.21827698 547.88012695]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 177]
[7 176]
[8 175]
[9 174]
[10 171]
[11 170]
[12 169]
[13 168]
[14 167]
[15 166]
[16 165]
[17 164]
[18 163]
[19 162]
[27 161]
[28 160]
[29 159]
[30 158]
[33 157]
[35 155]
[36 154]
[39 151]
[40 150]
[41 149]
[48 148]
[49 147]
[50 146]
[52 144]
[53 143]
[61 136]
[62 135]
[63 134]
[64 133]
[65 126]
[66 125]
[69 122]
[70 121]
[71 120]
[72 118]
[73 117]
[74 116]
[75 115]
[76 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
