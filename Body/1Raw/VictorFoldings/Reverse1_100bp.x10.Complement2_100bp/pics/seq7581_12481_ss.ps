%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[32.09934998 410.09063721]
[30.11522293 424.98391724]
[26.07758713 439.45608521]
[20.06504059 453.22546387]
[12.19461441 466.02398682]
[2.61951184 477.60256958]
[-8.47388554 487.73580933]
[-20.86964226 496.22647095]
[-34.32646942 502.90927124]
[-48.58242798 507.65414429]
[-63.36001968 510.36871338]
[-78.37159729 511.00015259]
[-93.32495117 509.53616333]
[-107.92901611 506.00521851]
[-121.89951324 500.47610474]
[-134.96450806 493.05639648]
[-146.86968994 483.89053345]
[-157.38330078 473.15695190]
[-166.30072021 461.06454468]
[-173.44834900 447.84875488]
[-178.68705750 433.76678467]
[-181.91487122 419.09274292]
[-183.06896973 404.11227417]
[-182.12687683 389.11697388]
[-179.10694885 374.39877319]
[-174.06794739 360.24411011]
[-167.10795593 346.92849731]
[-158.36248779 334.71121216]
[-148.00173950 323.82998657]
[-136.22740173 314.49664307]
[-123.26866150 306.89288330]
[-109.37776947 301.16668701]
[-94.82511139 297.42953491]
[-79.89395905 295.75418091]
[-64.87495422 296.17321777]
[-50.06044006 298.67849731]
[-35.73879623 303.22125244]
[-29.25929832 289.69290161]
[-22.77980232 276.16455078]
[-16.30030632 262.63619995]
[-9.82081127 249.10786438]
[-23.30137444 255.68618774]
[-38.21053314 254.03787231]
[-49.92852402 244.67364502]
[-54.82439804 230.49513245]
[-51.38111877 215.89567566]
[-40.66561890 205.39910889]
[-25.99821663 202.25787354]
[-11.92376518 207.44534302]
[-2.80338550 219.35411072]
[-1.46317637 234.29437256]
[6.76563168 221.75296021]
[14.99443913 209.21156311]
[23.22324753 196.67016602]
[31.45205498 184.12876892]
[31.37546921 179.35350037]
[34.29786682 174.47941589]
[40.11723709 171.34150696]
[48.71580124 159.05067444]
[49.97432709 151.76795959]
[57.53500748 146.64215088]
[66.31561279 134.48069763]
[75.09621429 122.31923676]
[83.78603363 110.09275055]
[81.36747742 95.80651093]
[89.67341614 83.93395233]
[103.92312622 81.30868530]
[112.52169037 69.01784515]
[121.12025452 56.72700500]
[129.71881104 44.43616867]
[115.15496826 48.02703476]
[101.21883392 42.47867966]
[93.10825348 29.86050034]
[93.84827423 14.87876511]
[103.16287231 3.12129188]
[117.57794952 -1.02667236]
[131.71702576 3.98196006]
[140.30659485 16.27909279]
[140.14256287 31.27930832]
[150.14073181 20.09733391]
[160.13890076 8.91536045]
[163.56945801 -6.52944231]
[177.82063293 -10.85992050]
[187.81880188 -22.04189491]
[197.81698608 -33.22386932]
[207.81515503 -44.40584564]
[217.39027405 -55.95214462]
[226.52906799 -67.84677887]
[229.27592468 -76.55841827]
[235.89355469 -79.84912872]
[245.20843506 -91.60637665]
[254.52331543 -103.36363220]
[263.83819580 -115.12088013]
[273.15307617 -126.87813568]
[282.46795654 -138.63539124]
[271.62625122 -149.01765442]
[261.80438232 -160.36953735]
[253.08868408 -172.59129333]
[245.55575562 -185.57548523]
[239.27182007 -199.20805359]
[234.29206848 -213.36914062]
[230.66029358 -227.93432617]
[228.40838623 -242.77560425]
[227.55615234 -257.76254272]
[228.11108398 -272.76342773]
[230.06828308 -287.64642334]
[233.41058350 -302.28076172]
[238.10858154 -316.53778076]
[244.12100220 -330.29226685]
[251.39500427 -343.42327881]
[259.86666870 -355.81542969]
[269.46151733 -367.35980225]
[280.09527588 -377.95498657]
[291.67446899 -387.50784302]
[304.09732056 -395.93438721]
[317.25469971 -403.16064453]
[331.03091431 -409.12301636]
[345.30493164 -413.76916504]
[359.95132446 -417.05825806]
[374.84133911 -418.96136475]
[389.84414673 -419.46176147]
[404.82788086 -418.55505371]
[419.66085815 -416.24923706]
[434.21276855 -412.56454468]
[448.35565186 -407.53335571]
[461.96527100 -401.19992065]
[474.92202759 -393.61984253]
[487.11203003 -384.85980225]
[498.42813110 -374.99673462]
[508.77093506 -364.11734009]
[518.04949951 -352.31723022]
[526.18231201 -339.70010376]
[533.09783936 -326.37683105]
[538.73541260 -312.46450806]
[543.04541016 -298.08541870]
[545.98999023 -283.36590576]
[547.54327393 -268.43533325]
[547.69152832 -253.42494202]
[546.43359375 -238.46659851]
[543.78039551 -223.69177246]
[539.75531006 -209.23034668]
[534.39373779 -195.20936584]
[527.74273682 -181.75205994]
[519.86077881 -168.97671509]
[510.81716919 -156.99559021]
[500.69134521 -145.91398621]
[489.57229614 -135.82926941]
[477.55776978 -126.83009338]
[464.75329590 -118.99552917]
[451.27145386 -112.39443207]
[437.23071289 -107.08480835]
[422.75448608 -103.11333466]
[407.96994019 -100.51490021]
[393.00704956 -99.31234741]
[377.99728394 -99.51624298]
[363.07257080 -101.12479401]
[348.36407471 -104.12386322]
[334.00103760 -108.48709869]
[320.10971069 -114.17614746]
[306.81213379 -121.14102173]
[294.22521973 -129.32049561]
[284.91033936 -117.56324768]
[275.59545898 -105.80599976]
[266.28057861 -94.04875183]
[256.96569824 -82.29149628]
[247.65080261 -70.53424835]
[238.42370605 -58.70797729]
[229.28491211 -46.81334305]
[244.26995850 -46.14385223]
[253.21264648 -34.10108566]
[249.52075195 -19.56251717]
[235.91581726 -13.24544239]
[222.42686462 -19.80657196]
[218.99713135 -34.40767288]
[208.99896240 -23.22569847]
[199.00077820 -12.04372311]
[189.00260925 -0.86174846]
[186.28720093 13.78324413]
[171.32087708 18.91353226]
[161.32270813 30.09550667]
[151.32453918 41.27748108]
[142.00965881 53.03473282]
[133.41108704 65.32556915]
[124.81252289 77.61640930]
[116.21396637 89.90724945]
[118.63252258 104.19348907]
[110.32658386 116.06604767]
[96.07687378 118.69131470]
[93.72175598 127.51692200]
[87.25766754 131.09983826]
[78.47706604 143.26129150]
[69.69646454 155.42276001]
[61.00663757 167.64924622]
[52.40807343 179.94007874]
[43.99345398 192.35757446]
[35.76464844 204.89897156]
[27.53583908 217.44036865]
[19.30703163 229.98178101]
[11.07822418 242.52317810]
[3.70753431 255.58735657]
[-2.77196145 269.11569214]
[-9.25145721 282.64404297]
[-15.73095322 296.17239380]
[-22.21044922 309.70074463]
[-9.69391251 318.01232910]
[1.54401267 327.98504639]
[11.28457832 339.42477417]
[19.33818054 352.10885620]
[25.54805565 365.79034424]
[29.79332352 380.20297241]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 204]
[38 203]
[39 202]
[40 201]
[41 200]
[51 199]
[52 198]
[53 197]
[54 196]
[55 195]
[58 194]
[59 193]
[61 192]
[62 191]
[63 190]
[64 188]
[67 185]
[68 184]
[69 183]
[70 182]
[79 181]
[80 180]
[81 179]
[83 177]
[84 176]
[85 175]
[86 174]
[87 168]
[88 167]
[90 166]
[91 165]
[92 164]
[93 163]
[94 162]
[95 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
