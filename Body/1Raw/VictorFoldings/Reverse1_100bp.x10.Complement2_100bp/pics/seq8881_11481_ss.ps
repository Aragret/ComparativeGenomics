%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[88.21387482 659.09832764]
[73.74068451 663.07971191]
[58.96187210 665.70867920]
[44.00353622 666.96276855]
[28.99329376 666.83129883]
[14.05921173 665.31542969]
[-0.67129487 662.42810059]
[-15.07254887 658.19390869]
[-29.02168083 652.64892578]
[-42.39967728 645.84057617]
[-55.09240341 637.82690430]
[-66.99156189 628.67620850]
[-77.99563599 618.46667480]
[-88.01074219 607.28533936]
[-96.95142365 595.22760010]
[-104.74140930 582.39636230]
[-111.31423187 568.90106201]
[-116.61381531 554.85687256]
[-120.59494781 540.38366699]
[-123.22365570 525.60479736]
[-124.47750854 510.64642334]
[-124.34582520 495.63616943]
[-122.82971191 480.70211792]
[-119.94211578 465.97167969]
[-115.70766449 451.57049561]
[-110.16249084 437.62145996]
[-103.35390472 424.24356079]
[-95.33998871 411.55096436]
[-86.18913269 399.65197754]
[-75.97939301 388.64807129]
[-64.79788208 378.63314819]
[-52.74000931 369.69265747]
[-39.90863419 361.90289307]
[-26.41324425 355.33029175]
[-12.36897373 350.03094482]
[2.10435224 346.05004883]
[16.88325119 343.42160034]
[31.84162903 342.16796875]
[46.85186768 342.29992676]
[61.78590012 343.81628418]
[64.67117310 329.09637451]
[67.55644226 314.37649536]
[70.44171906 299.65661621]
[73.32698822 284.93670654]
[75.66247559 270.11965942]
[77.44493866 255.22592163]
[79.22740936 240.33221436]
[81.00987244 225.43849182]
[82.57039642 210.51988220]
[83.90863037 195.57969666]
[77.33765411 182.21289062]
[86.27529144 169.15803528]
[87.61352539 154.21784973]
[88.95175934 139.27766418]
[90.28999329 124.33748627]
[91.62822723 109.39730072]
[92.63249207 94.43095398]
[93.30227661 79.44591522]
[93.97206116 64.46087646]
[94.64184570 49.47584152]
[95.31163025 34.49080276]
[95.98141479 19.50576210]
[96.65119934 4.52072430]
[97.32098389 -10.46431446]
[97.99076843 -25.44935417]
[98.66055298 -40.43439102]
[98.77222443 -55.43397522]
[98.32561493 -70.42733002]
[97.87901306 -85.42067719]
[87.84025574 -100.85780334]
[96.75486755 -115.97390747]
[96.08508301 -130.95893860]
[95.41529846 -145.94398499]
[94.74551392 -160.92901611]
[93.51853943 -175.87875366]
[91.73606873 -190.77247620]
[89.95360565 -205.66618347]
[88.06031799 -220.54621887]
[86.05629730 -235.41175842]
[84.05228424 -250.27728271]
[69.02613068 -250.45748901]
[54.18635559 -252.82369995]
[39.84927368 -257.32546997]
[26.32047844 -263.86685181]
[13.88833904 -272.30838013]
[2.81784654 -282.47018433]
[-6.65503073 -294.13562012]
[-14.32837772 -307.05606079]
[-20.03863716 -320.95608521]
[-23.66409302 -335.53942871]
[-25.12747002 -350.49523926]
[-24.39757538 -365.50473022]
[-21.48996925 -380.24801636]
[-16.46662331 -394.41076660]
[-9.43461227 -407.69116211]
[-0.54382509 -419.80609131]
[10.01623154 -430.49734497]
[22.02046967 -439.53704834]
[35.21301651 -446.73251343]
[49.31267548 -451.93032837]
[64.01891327 -455.01977539]
[79.01825714 -455.93493652]
[93.99099731 -454.65634155]
[108.61799622 -451.21121216]
[122.58747101 -445.67303467]
[135.60166931 -438.15979004]
[147.38317871 -428.83166504]
[157.68089294 -417.88748169]
[166.27529907 -405.56054688]
[172.98321533 -392.11355591]
[177.66166687 -377.83312988]
[180.21092224 -363.02371216]
[180.57666016 -348.00091553]
[178.75106812 -333.08499146]
[174.77305603 -318.59384155]
[168.72743225 -304.83636475]
[160.74304199 -292.10580444]
[150.99008179 -280.67349243]
[139.67645264 -270.78311157]
[127.04327393 -262.64550781]
[113.35984039 -256.43408203]
[98.91781616 -252.28129578]
[100.92182922 -237.41577148]
[102.92584229 -222.55023193]
[106.93479156 -216.34136963]
[104.84732056 -207.44865417]
[106.62979126 -192.55493164]
[108.41225433 -177.66122437]
[119.59403229 -187.65960693]
[134.40759277 -185.30195618]
[141.93292236 -172.32624817]
[136.62263489 -158.29766846]
[122.39128113 -153.55758667]
[109.73055267 -161.59880066]
[110.40033722 -146.61376953]
[111.07012177 -131.62872314]
[111.73990631 -116.64369202]
[120.45226288 -108.25194550]
[121.13291168 -95.77314758]
[112.87236023 -85.86727905]
[113.31896973 -70.87393188]
[113.76557159 -55.88058090]
[125.79477692 -64.84151459]
[140.33892822 -61.17166519]
[146.67660522 -47.57630920]
[140.13592529 -34.07743835]
[125.53842926 -30.62591743]
[113.64559174 -39.76460648]
[112.97580719 -24.77956772]
[112.30602264 -9.79452991]
[111.63623810 5.19050932]
[110.96645355 20.17554855]
[110.29666901 35.16058731]
[109.62688446 50.14562607]
[108.95709991 65.13066101]
[108.28731537 80.11569977]
[107.61753082 95.10073853]
[109.79038239 98.28681946]
[110.54830933 102.41518402]
[109.50196838 106.83244324]
[106.56841278 110.73553467]
[105.23017883 125.67572021]
[103.89194489 140.61590576]
[102.55371094 155.55609131]
[101.21547699 170.49627686]
[107.69073486 184.93170166]
[98.84881592 196.91793823]
[97.51058197 211.85812378]
[99.94129944 218.00654602]
[99.03771210 223.61729431]
[95.90359497 227.22096252]
[94.12112427 242.11466980]
[92.33866119 257.00839233]
[90.55619049 271.90209961]
[103.78157806 264.82473755]
[117.62042236 270.61148071]
[121.87124634 284.99658203]
[113.40049744 297.37585449]
[98.45249176 298.62377930]
[88.04688263 287.82199097]
[85.16160583 302.54187012]
[82.27633667 317.26177979]
[79.39105988 331.98165894]
[76.50579071 346.70153809]
[90.90718842 350.93527222]
[104.85649872 356.47976685]
[118.23472595 363.28768921]
[130.92771912 371.30096436]
[142.82717896 380.45123291]
[153.83158875 390.66040039]
[163.84707642 401.84140015]
[172.78816223 413.89883423]
[180.57856750 426.72982788]
[187.15184021 440.22488403]
[192.45188904 454.26889038]
[196.43350220 468.74203491]
[199.06271362 483.52078247]
[200.31706238 498.47909546]
[200.18588257 513.48937988]
[198.67025757 528.42346191]
[195.78315735 543.15399170]
[191.54917908 557.55535889]
[186.00447083 571.50457764]
[179.19633484 584.88269043]
[171.18284607 597.57550049]
[162.03237915 609.47485352]
[151.82301331 620.47906494]
[140.64183044 630.49438477]
[128.58425903 639.43524170]
[115.75314331 647.22546387]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 184]
[41 183]
[42 182]
[43 181]
[44 180]
[45 174]
[46 173]
[47 172]
[48 171]
[49 168]
[50 167]
[52 165]
[53 164]
[54 163]
[55 162]
[56 161]
[57 157]
[58 156]
[59 155]
[60 154]
[61 153]
[62 152]
[63 151]
[64 150]
[65 149]
[66 148]
[67 142]
[68 141]
[69 140]
[71 137]
[72 136]
[73 135]
[74 134]
[75 128]
[76 127]
[77 126]
[78 124]
[79 123]
[80 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
