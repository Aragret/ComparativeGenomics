%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[91.85185242 772.45538330]
[77.47122192 768.13366699]
[63.66490173 762.22894287]
[50.60653305 754.81549072]
[38.46033096 745.98657227]
[27.37904930 735.85321045]
[17.50204468 724.54284668]
[8.95353317 712.19769287]
[1.84102046 698.97296143]
[-3.74604607 685.03509521]
[-7.73740339 670.55926514]
[-10.08285522 655.72760010]
[-10.75290585 640.72656250]
[-9.73912811 625.74481201]
[-7.05427217 610.97082520]
[-2.73210192 596.59033203]
[3.17302632 582.78417969]
[10.58684921 569.72601318]
[19.41613007 557.58007812]
[29.54983139 546.49908447]
[40.86051178 536.62243652]
[53.20592880 528.07427979]
[66.43082428 520.96215820]
[80.36887360 515.37554932]
[94.84480286 511.38461304]
[109.67655945 509.03961182]
[109.00677490 494.05456543]
[108.33699036 479.06951904]
[107.66720581 464.08447266]
[106.99742126 449.09945679]
[96.36537170 441.82009888]
[91.79909515 429.56320190]
[95.17563629 416.72540283]
[105.47898865 408.05041504]
[105.03237915 393.05703735]
[104.58577728 378.06369019]
[104.13916779 363.07034302]
[103.58095551 348.08074951]
[95.28307343 335.71163940]
[102.39644623 321.57974243]
[101.72666168 306.59472656]
[101.05687714 291.60968018]
[100.38709259 276.62463379]
[99.71730804 261.63958740]
[99.04752350 246.65455627]
[98.37773132 231.66952515]
[87.24680328 221.83906555]
[86.35408020 206.65164185]
[96.74064636 195.04315186]
[96.07086182 180.05812073]
[95.40107727 165.07307434]
[87.10319519 152.70397949]
[94.21656799 138.57208252]
[93.54678345 123.58705139]
[92.87699890 108.60201263]
[92.09567261 93.62237549]
[91.20285797 78.64897156]
[90.31004333 63.67556381]
[77.01557159 52.30558395]
[76.07599640 35.17572403]
[87.58505249 22.91275787]
[86.46940613 7.95430422]
[83.06871796 2.28448176]
[83.04539490 -3.39851737]
[85.55000305 -7.46496534]
[84.88021851 -22.45000458]
[84.21043396 -37.43504333]
[83.54064941 -52.42008209]
[82.87086487 -67.40512085]
[82.20107269 -82.39015961]
[71.30577850 -72.08033752]
[56.30831909 -72.35647583]
[45.79992676 -83.06038666]
[45.80028534 -98.06038666]
[56.30918884 -108.76379395]
[71.30666351 -109.03920746]
[82.20107269 -98.72972870]
[82.87086487 -113.71476746]
[83.54064941 -128.69981384]
[84.21043396 -143.68484497]
[84.88021851 -158.66989136]
[85.55000305 -173.65492249]
[86.21978760 -188.63996887]
[86.88957214 -203.62500000]
[74.22720337 -195.58357239]
[59.99629211 -200.32501221]
[54.68733597 -214.35408020]
[62.21389771 -227.32908630]
[77.02767944 -229.68534851]
[88.20787048 -219.68740845]
[89.99033356 -234.58113098]
[91.77280426 -249.47485352]
[93.55526733 -264.36856079]
[95.33773041 -279.26229858]
[82.09988403 -294.37646484]
[84.21274567 -314.04980469]
[99.86752319 -325.64471436]
[100.98316956 -340.60317993]
[102.09882355 -355.56161499]
[103.21446991 -370.52008057]
[89.49604797 -377.01388550]
[79.05266571 -388.02749634]
[73.29670715 -402.07150269]
[73.00661469 -417.24649048]
[78.22161865 -431.50018311]
[88.23644257 -442.90490723]
[101.69665527 -449.91824341]
[116.78188324 -451.59173584]
[131.45195007 -447.69900513]
[143.72288513 -438.76654053]
[151.93511963 -426.00241089]
[154.97801208 -411.13278198]
[152.44006348 -396.16873169]
[144.66447449 -383.13397217]
[132.70286560 -373.79138184]
[118.17292023 -369.40441895]
[117.05727386 -354.44598389]
[115.94162750 -339.48751831]
[114.82597351 -324.52908325]
[123.37211609 -318.84274292]
[128.82943726 -310.05334473]
[130.15625000 -299.71157837]
[127.04667664 -289.67492676]
[119.99778748 -281.77429199]
[110.23145294 -277.47982788]
[108.44898224 -262.58609009]
[106.66651917 -247.69238281]
[104.88405609 -232.79866028]
[103.10158539 -217.90495300]
[101.87461090 -202.95521545]
[101.20482635 -187.97018433]
[100.53504181 -172.98513794]
[99.86525726 -158.00010681]
[99.19547272 -143.01506042]
[98.52568817 -128.03002930]
[97.85590363 -113.04498291]
[97.18611145 -98.05994415]
[97.18611145 -83.05994415]
[97.85590363 -68.07490540]
[98.52568817 -53.08986664]
[99.19547272 -38.10482788]
[99.86525726 -23.11978912]
[100.53504181 -8.13475037]
[101.42785645 6.83865547]
[102.54350281 21.79710960]
[113.38757324 28.75668335]
[118.31675720 40.87217712]
[115.32394409 53.80483246]
[105.28344727 62.78274536]
[106.17626190 77.75614929]
[107.06907654 92.72956085]
[110.65433502 99.94887543]
[107.86203766 107.93222809]
[108.53182220 122.91726685]
[109.20160675 137.90229797]
[117.54739380 151.34323120]
[110.38611603 164.40328979]
[111.05590057 179.38832092]
[111.72568512 194.37336731]
[123.10649109 205.00892639]
[123.57228088 220.21542358]
[113.36277008 230.99974060]
[114.03256226 245.98477173]
[114.70234680 260.96981812]
[115.37213135 275.95486450]
[116.04191589 290.93988037]
[116.71170044 305.92492676]
[117.38148499 320.90997314]
[125.72727966 334.35089111]
[118.56599426 347.41094971]
[122.07547760 355.84429932]
[119.13252258 362.62374878]
[119.57912445 377.61709595]
[120.02573395 392.61044312]
[120.47233582 407.60379028]
[133.42237854 419.36456299]
[133.85153198 436.51480103]
[121.98246002 448.42965698]
[122.65224457 463.41470337]
[123.32202911 478.39974976]
[123.99181366 493.38476562]
[124.66159821 508.36981201]
[139.64341736 509.38226318]
[154.41767883 512.06579590]
[168.79856873 516.38665771]
[182.60523987 522.29052734]
[195.66404724 529.70318604]
[207.81077576 538.53137207]
[218.89266968 548.66412354]
[228.77035522 559.97387695]
[237.31959534 572.31854248]
[244.43290710 585.54278564]
[250.02079773 599.48034668]
[254.01303101 613.95593262]
[256.35937500 628.78747559]
[257.03030396 643.78845215]
[256.01742554 658.77026367]
[253.33345032 673.54443359]
[249.01214600 687.92517090]
[243.10784912 701.73168945]
[235.69480896 714.79028320]
[226.86624146 726.93676758]
[216.73321533 738.01831055]
[205.42312622 747.89569092]
[193.07821655 756.44458008]
[179.85374451 763.55743408]
[165.91603088 769.14495850]
[151.44033813 773.13671875]
[136.60871887 775.48260498]
[121.60771179 776.15313721]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 182]
[27 181]
[28 180]
[29 179]
[30 178]
[34 175]
[35 174]
[36 173]
[37 172]
[38 170]
[40 168]
[41 167]
[42 166]
[43 165]
[44 164]
[45 163]
[46 162]
[49 159]
[50 158]
[51 157]
[53 155]
[54 154]
[55 153]
[56 151]
[57 150]
[58 149]
[61 145]
[62 144]
[65 143]
[66 142]
[67 141]
[68 140]
[69 139]
[70 138]
[77 137]
[78 136]
[79 135]
[80 134]
[81 133]
[82 132]
[83 131]
[84 130]
[90 129]
[91 128]
[92 127]
[93 126]
[94 125]
[97 119]
[98 118]
[99 117]
[100 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
