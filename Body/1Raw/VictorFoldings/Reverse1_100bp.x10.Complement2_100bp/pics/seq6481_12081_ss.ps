%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[196.60411072 361.19107056]
[199.28430176 346.42041016]
[203.37756348 331.97741699]
[208.84568787 317.99688721]
[215.63761902 304.60937500]
[223.68992615 291.93991089]
[232.92744446 280.10671997]
[243.26391602 269.22036743]
[233.43333435 257.89077759]
[223.60275269 246.56118774]
[213.77218628 235.23159790]
[203.20512390 224.58558655]
[191.94903564 214.67092896]
[180.69293213 204.75628662]
[169.43684387 194.84162903]
[158.18075562 184.92698669]
[146.92465210 175.01232910]
[151.79945374 189.19810486]
[151.29341125 204.18957520]
[145.47309875 218.01432800]
[135.10427856 228.85350037]
[121.55115509 235.28100586]
[106.59687042 236.45120239]
[92.20891571 232.21011353]
[80.28028107 223.11575317]
[72.38037109 210.36460876]
[69.54856873 195.63433838]
[72.15743256 180.86296082]
[79.86373138 167.99388123]
[91.65356445 158.72027588]
[105.97578430 154.26223755]
[120.94604492 155.20629883]
[134.59671021 161.42961121]
[125.81610870 149.26814270]
[117.03549957 137.10668945]
[108.25489807 124.94523621]
[99.47429657 112.78378296]
[101.91750336 127.58346558]
[100.65434265 142.53018188]
[95.76203918 156.70994568]
[87.53977966 169.25563049]
[76.49034119 179.40008545]
[63.28940964 186.52296448]
[48.74422836 190.18870544]
[33.74423599 190.17314148]
[19.20668983 186.47723389]
[6.02056694 179.32698059]
[-5.00779629 169.15962219]
[-13.20401192 156.59689331]
[-18.06687737 142.40701294]
[-19.29902840 127.45771027]
[-16.82511520 112.66312408]
[-10.79642200 98.92795563]
[-1.58160317 87.09211731]
[10.25584984 77.87937164]
[23.99207306 71.85308075]
[38.78709030 69.38175964]
[53.73618317 70.61652374]
[67.92520905 75.48187256]
[80.48649597 83.68029022]
[90.65193939 94.71045685]
[86.46492767 80.30667114]
[81.34806061 94.40694427]
[69.93043518 104.13514709]
[55.19660187 106.94834900]
[40.99794388 102.11118317]
[31.04595757 90.88808441]
[27.94207001 76.21273804]
[32.49762726 61.92123795]
[43.52182007 51.74935532]
[58.13294983 48.35599518]
[72.51170349 52.62817001]
[82.89907837 63.44837189]
[80.89505768 48.58284378]
[78.89104462 33.71731567]
[76.88703156 18.85178757]
[74.88301849 3.98625970]
[71.69113922 -0.14399000]
[70.51984406 -4.63635778]
[71.16871643 -8.66053677]
[73.13682556 -11.58609390]
[71.79859161 -26.52627945]
[70.46035767 -41.46646500]
[69.12212372 -56.40665054]
[67.78388214 -71.34683228]
[63.90134048 -79.61506653]
[66.53864288 -86.51914978]
[65.42299652 -101.47760773]
[64.30734253 -116.43605804]
[63.19169617 -131.39451599]
[62.07604599 -146.35296631]
[60.96039963 -161.31141663]
[59.84474945 -176.26986694]
[58.72910309 -191.22833252]
[44.07621002 -195.04559326]
[31.45809746 -203.41589355]
[22.24348068 -215.43128967]
[17.43189240 -229.78842163]
[17.54525566 -244.92994690]
[22.57127762 -259.21343994]
[31.96477127 -271.08950806]
[44.70679855 -279.26992798]
[59.41520309 -282.86737061]
[74.49452209 -281.49157715]
[88.30907440 -275.29183960]
[99.36035156 -264.94061279]
[106.44959259 -251.56071472]
[108.80781555 -236.60351562]
[106.17921448 -221.69146729]
[98.84892273 -208.44210815]
[87.61206818 -198.29263306]
[73.68755341 -192.34397888]
[74.80319977 -177.38552856]
[75.91885376 -162.42706299]
[77.03450012 -147.46861267]
[78.15014648 -132.51016235]
[79.26580048 -117.55171204]
[80.38144684 -102.59325409]
[81.49709320 -87.63480377]
[82.72406769 -72.68506622]
[84.06230164 -57.74488449]
[85.40053558 -42.80469894]
[86.73877716 -27.86451340]
[88.07701111 -12.92432785]
[89.74855042 1.98224604]
[91.75256348 16.84777451]
[93.75657654 31.71330261]
[95.76058960 46.57883072]
[97.76460266 61.44435883]
[100.86871338 76.11965942]
[105.05572510 90.52344513]
[111.63574982 104.00318146]
[120.41635132 116.16463470]
[129.19696045 128.32609558]
[137.97755432 140.48754883]
[146.75816345 152.64900208]
[156.83930969 163.75624084]
[168.09539795 173.67088318]
[179.35150146 183.58554077]
[190.60758972 193.50018311]
[201.86369324 203.41484070]
[213.11978149 213.32948303]
[210.45584106 198.56793213]
[216.09698486 184.66911316]
[228.29525757 175.93971252]
[243.27085876 175.08462524]
[256.38345337 182.36883545]
[263.56997681 195.53523254]
[262.60357666 210.50407410]
[253.78372192 222.63708496]
[239.84333801 228.17474365]
[225.10177612 225.40101624]
[234.93235779 236.73060608]
[244.76293945 248.06019592]
[254.59352112 259.38980103]
[266.82833862 250.69125366]
[279.84558105 243.21417236]
[293.52371216 237.02835083]
[307.73501587 232.19154358]
[322.34677124 228.74893188]
[337.22259521 226.73265076]
[352.22357178 226.16152954]
[367.20965576 227.04089355]
[382.04089355 229.36251831]
[396.57879639 233.10475159]
[410.68768311 238.23265076]
[424.23574829 244.69831848]
[437.09655762 252.44140625]
[449.14999390 261.38961792]
[460.28353882 271.45935059]
[470.39318848 282.55667114]
[479.38461304 294.57791138]
[487.17382812 307.41082764]
[493.68807983 320.93560791]
[498.86660767 335.02597046]
[502.66101074 349.55035400]
[505.03588867 364.37316895]
[505.96905518 379.35598755]
[505.45178223 394.35891724]
[503.48892212 409.24188232]
[500.09878540 423.86590576]
[495.31304932 438.09448242]
[489.17639160 451.79473877]
[481.74609375 464.83874512]
[473.09152222 477.10470581]
[463.29351807 488.47811890]
[452.44354248 498.85278320]
[440.64291382 508.13183594]
[428.00183105 516.22863770]
[414.63827515 523.06756592]
[400.67703247 528.58477783]
[386.24850464 532.72875977]
[371.48736572 535.46081543]
[356.53143311 536.75549316]
[341.52038574 536.60064697]
[326.59436035 534.99768066]
[311.89273071 531.96166992]
[297.55276489 527.52087402]
[283.70834351 521.71673584]
[270.48873901 514.60357666]
[258.01736450 506.24771118]
[246.41069031 496.72717285]
[235.77708435 486.13085938]
[226.21582031 474.55770874]
[217.81617737 462.11578369]
[210.65657043 448.92123413]
[204.80386353 435.09729004]
[200.31271362 420.77301025]
[197.22502136 406.08215332]
[195.56964111 391.16186523]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 155]
[9 154]
[10 153]
[11 152]
[12 142]
[13 141]
[14 140]
[15 139]
[16 138]
[17 137]
[33 136]
[34 135]
[35 134]
[36 133]
[37 132]
[61 131]
[62 130]
[73 129]
[74 128]
[75 127]
[76 126]
[77 125]
[81 124]
[82 123]
[83 122]
[84 121]
[85 120]
[87 119]
[88 118]
[89 117]
[90 116]
[91 115]
[92 114]
[93 113]
[94 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
