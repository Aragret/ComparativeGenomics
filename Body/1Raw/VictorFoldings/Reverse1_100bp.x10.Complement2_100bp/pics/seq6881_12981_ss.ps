%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[143.88079834 766.73046875]
[153.12092590 754.66033936]
[166.27923584 747.04937744]
[164.27522278 732.18383789]
[162.27120972 717.31829834]
[160.26719666 702.45275879]
[158.26318359 687.58721924]
[148.89488220 676.00775146]
[154.71910095 661.29760742]
[152.71508789 646.43206787]
[149.52766418 642.87548828]
[148.54063416 637.27880859]
[150.87954712 631.09484863]
[149.31901550 616.17626953]
[140.12261963 608.31799316]
[138.70042419 595.90179443]
[146.35673523 585.52185059]
[145.01849365 570.58166504]
[143.68026733 555.64147949]
[134.83834839 543.65521240]
[141.31359863 529.21978760]
[139.97535706 514.27960205]
[138.63713074 499.33941650]
[137.29888916 484.39923096]
[135.96066284 469.45904541]
[127.11874390 457.47283936]
[133.59399414 443.03738403]
[132.25576782 428.09719849]
[130.91752625 413.15701294]
[129.57929993 398.21682739]
[128.24105835 383.27664185]
[126.90282440 368.33645630]
[125.56459045 353.39627075]
[124.11517334 338.46649170]
[122.55464935 323.54788208]
[120.99412537 308.62927246]
[119.43360901 293.71066284]
[117.87308502 278.79205322]
[116.31256104 263.87344360]
[114.75203705 248.95484924]
[113.19151306 234.03623962]
[111.63098907 219.11764526]
[109.62697601 204.25210571]
[107.18125153 189.45283508]
[104.73551941 174.65356445]
[102.28979492 159.85429382]
[99.84407043 145.05502319]
[97.39833832 130.25575256]
[94.95261383 115.45648193]
[83.97802734 102.77047729]
[90.05548859 87.13587189]
[87.38969421 72.37465668]
[84.72389221 57.61344147]
[82.05809784 42.85222244]
[79.06332397 28.15421867]
[75.74106598 13.52675915]
[72.41880798 -1.10070109]
[69.09654999 -15.72816181]
[65.77428436 -30.35562134]
[55.17263412 -42.09936523]
[59.89888382 -56.22423172]
[44.92846298 -65.27441406]
[41.20846176 -82.02184296]
[50.56404495 -95.99724579]
[47.02437210 -110.57362366]
[41.95826340 -118.17443085]
[43.54222870 -125.39335632]
[40.21996689 -140.02081299]
[36.89770889 -154.64826965]
[33.57544708 -169.27574158]
[22.97379494 -181.01948547]
[27.70004463 -195.14434814]
[24.37778664 -209.77180481]
[19.80942535 -195.48439026]
[10.18005180 -183.98330688]
[-3.08187509 -176.97463989]
[-18.00902748 -175.49810791]
[-32.38705063 -179.77273560]
[-44.08304977 -189.16441345]
[-51.36199188 -202.27993774]
[-53.14409256 -217.17370605]
[-49.16498566 -231.63630676]
[-40.01494980 -243.52229309]
[-27.05133438 -251.06846619]
[-12.19721794 -253.15538025]
[2.34387994 -249.47348022]
[14.41487408 -240.56892395]
[22.22444344 -227.76445007]
[22.00111580 -242.76278687]
[21.77778816 -257.76113892]
[21.55446053 -272.75946045]
[10.87402344 -280.96572876]
[6.92761374 -293.63998413]
[10.94203663 -306.08853149]
[21.23844147 -313.83535767]
[13.50114059 -327.63555908]
[21.23844147 -340.36282349]
[21.23844147 -355.36282349]
[21.23844147 -370.36282349]
[21.23844147 -385.36282349]
[7.89731264 -392.97265625]
[0.16234347 -406.24163818]
[0.11420082 -421.60046387]
[7.76583481 -434.91766357]
[21.05899429 -442.61102295]
[36.41788864 -442.61102295]
[49.71104813 -434.91766357]
[57.36268234 -421.60046387]
[57.31453705 -406.24163818]
[49.57957077 -392.97265625]
[36.23844147 -385.36282349]
[36.23844147 -370.36282349]
[36.23844147 -355.36282349]
[36.23844147 -340.36282349]
[43.97574234 -327.63555908]
[36.23844147 -313.83535767]
[48.62769699 -302.46237183]
[48.96478271 -285.31008911]
[36.55279541 -272.98278809]
[36.77612305 -257.98446655]
[36.99945068 -242.98611450]
[37.22277832 -227.98777771]
[39.00524521 -213.09407043]
[42.32750702 -198.46659851]
[52.69152832 -187.76911926]
[48.20290756 -172.59799194]
[51.52516937 -157.97053528]
[54.84742737 -143.34307861]
[58.16968918 -128.71562195]
[61.60074997 -114.11329651]
[65.14041901 -99.53691864]
[76.97412109 -94.43858337]
[83.81275940 -83.28891754]
[82.96864319 -70.04135132]
[74.52634430 -59.54648972]
[84.89036560 -48.84899902]
[80.40174866 -33.67787933]
[83.72400665 -19.05042076]
[87.04626465 -4.42296076]
[90.36852264 10.20449924]
[93.69078827 24.83195877]
[96.46337891 27.01028061]
[98.31862640 30.63975716]
[98.58597565 35.27460480]
[96.81932068 40.18642807]
[99.48511505 54.94764328]
[102.15090942 69.70886230]
[104.81670380 84.47007751]
[113.96697998 91.67519379]
[115.95141602 103.15139771]
[109.75188446 113.01075745]
[112.19760895 127.81002808]
[114.64334106 142.60929871]
[117.08906555 157.40856934]
[119.53479004 172.20783997]
[121.98052216 187.00711060]
[124.42624664 201.80638123]
[127.29912567 205.06222534]
[128.83230591 208.69731140]
[129.07109070 212.24392700]
[128.20800781 215.29705811]
[126.54959869 217.55711365]
[128.11012268 232.47572327]
[129.67063904 247.39431763]
[131.23117065 262.31292725]
[132.79168701 277.23153687]
[134.35220337 292.15014648]
[135.91273499 307.06875610]
[137.47325134 321.98733521]
[139.03378296 336.90594482]
[143.03900146 345.11547852]
[140.50477600 352.05804443]
[141.84301758 366.99822998]
[143.18124390 381.93841553]
[144.51948547 396.87860107]
[145.85771179 411.81878662]
[147.19595337 426.75897217]
[148.53417969 441.69915771]
[157.47181702 454.75402832]
[150.90084839 468.12081909]
[152.23907471 483.06100464]
[153.57731628 498.00119019]
[154.91554260 512.94140625]
[156.25378418 527.88159180]
[165.19142151 540.93640137]
[158.62043762 554.30322266]
[159.95867920 569.24340820]
[161.29692078 584.18359375]
[172.23670959 598.99584961]
[164.23762512 614.61572266]
[165.79814148 629.53436279]
[167.58061218 644.42803955]
[169.58462524 659.29357910]
[179.09628296 671.93634033]
[173.12872314 685.58325195]
[175.13273621 700.44873047]
[177.13674927 715.31427002]
[179.14076233 730.17980957]
[181.14477539 745.04534912]
[195.84880066 748.90020752]
[207.95530701 758.09265137]
[215.61817932 771.22082520]
[217.66885376 786.28277588]
[213.79461670 800.98175049]
[204.58628845 813.07617188]
[191.44804382 820.72174072]
[176.38337708 822.75262451]
[161.68954468 818.85906982]
[149.60725403 809.63482666]
[141.97895813 796.48651123]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 199]
[4 198]
[5 197]
[6 196]
[7 195]
[9 193]
[10 192]
[13 191]
[14 190]
[17 188]
[18 187]
[19 186]
[21 184]
[22 183]
[23 182]
[24 181]
[25 180]
[27 178]
[28 177]
[29 176]
[30 175]
[31 174]
[32 173]
[33 172]
[34 170]
[35 169]
[36 168]
[37 167]
[38 166]
[39 165]
[40 164]
[41 163]
[42 162]
[43 157]
[44 156]
[45 155]
[46 154]
[47 153]
[48 152]
[49 151]
[51 148]
[52 147]
[53 146]
[54 145]
[55 141]
[56 140]
[57 139]
[58 138]
[59 137]
[61 135]
[64 131]
[65 130]
[67 129]
[68 128]
[69 127]
[70 126]
[72 124]
[73 123]
[88 122]
[89 121]
[90 120]
[91 119]
[95 116]
[97 114]
[98 113]
[99 112]
[100 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
