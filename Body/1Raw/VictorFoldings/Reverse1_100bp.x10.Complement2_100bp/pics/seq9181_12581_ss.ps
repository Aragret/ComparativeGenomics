%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[56.66316605 558.77252197]
[48.70890427 571.57849121]
[37.92061615 582.10827637]
[24.92551994 589.74969482]
[10.47913074 594.05841064]
[-4.57865667 594.78399658]
[-19.37240219 591.88427734]
[-33.04201508 585.52777100]
[-44.79276657 576.08404541]
[-53.94147873 564.10223389]
[-59.95625687 550.27880859]
[-62.48741531 535.41760254]
[-61.38779068 520.38250732]
[-56.72131348 506.04766846]
[-48.75929260 493.24649048]
[-37.96462250 482.72326660]
[-24.96489334 475.08975220]
[-10.51589489 470.78976440]
[4.54232931 470.07330322]
[7.42760181 455.35339355]
[10.31287479 440.63351440]
[13.19814682 425.91363525]
[1.33569837 435.09417725]
[-13.65347099 435.66406250]
[-26.17877197 427.41076660]
[-31.56857681 413.41256714]
[-27.81262207 398.89041138]
[-16.31178474 389.26074219]
[-1.35559440 388.11514282]
[11.47766113 395.88095093]
[17.40160561 409.66284180]
[22.01561546 395.39010620]
[26.62962341 381.11737061]
[31.24363327 366.84463501]
[35.75126266 352.53793335]
[40.15225983 338.19808960]
[44.55325699 323.85824585]
[40.89065933 309.42098999]
[52.33640671 298.49829102]
[56.73740387 284.15844727]
[61.13840103 269.81857300]
[65.53939819 255.47874451]
[56.45565033 243.70489502]
[56.04174805 228.66186523]
[64.66591644 216.11288452]
[79.19358063 210.98908997]
[83.59458160 196.64924622]
[86.37019348 181.90827942]
[87.48583984 166.94982910]
[88.60148621 151.99137878]
[89.71714020 137.03291321]
[90.83278656 122.07446289]
[91.94843292 107.11601257]
[90.38790894 92.19741058]
[86.20089722 77.79362488]
[82.01388550 63.38984299]
[70.73203278 52.29794312]
[74.60917664 37.91680908]
[70.42216492 23.51302719]
[66.23515320 9.10924530]
[55.32806015 2.22461486]
[52.13721848 -9.85852623]
[57.84585953 -20.52332878]
[53.87376022 -34.98785400]
[48.00306320 -21.18441582]
[35.66181564 -12.65835667]
[20.67409515 -12.05156994]
[7.68400526 -19.55207443]
[0.71666765 -32.83575439]
[1.93098807 -47.78652191]
[10.95069599 -59.77171707]
[24.98093605 -65.07759094]
[39.67428970 -62.06007385]
[50.47798157 -51.65393829]
[48.47396851 -66.51947021]
[46.46995544 -81.38499451]
[44.46594238 -96.25052643]
[42.46192932 -111.11605072]
[40.45791626 -125.98158264]
[28.86763191 -140.29055786]
[36.16127014 -156.25205994]
[23.73575211 -165.64590454]
[21.69048309 -180.72143555]
[30.72264862 -192.50938416]
[28.49753189 -207.34341431]
[18.79870224 -219.84315491]
[24.56241989 -233.57737732]
[22.33730316 -248.41142273]
[7.32608938 -249.79954529]
[-6.91649342 -254.74041748]
[-19.56240082 -262.94677734]
[-29.87641525 -273.94152832]
[-37.25889587 -287.08544922]
[-41.28063202 -301.61434937]
[-41.70780945 -316.68356323]
[-38.51558685 -331.41696167]
[-31.88955879 -344.95797729]
[-22.21495438 -356.51937866]
[-10.05424309 -365.42892456]
[3.88556910 -371.16873169]
[18.79403877 -373.40499878]
[33.80440903 -372.00778198]
[48.04399490 -367.05825806]
[60.68492126 -358.84423828]
[70.99227142 -347.84323120]
[78.36678314 -334.69482422]
[82.37970734 -320.16348267]
[82.79774475 -305.09402466]
[79.59659576 -290.36257935]
[72.96235657 -276.82556152]
[63.28074646 -265.27005005]
[51.11463547 -256.36785889]
[37.17134476 -250.63653564]
[39.39646530 -235.80249023]
[48.93613815 -224.36378479]
[43.33157349 -209.56854248]
[45.55669403 -194.73449707]
[57.64992905 -186.11537170]
[60.11783218 -171.10324097]
[50.99531555 -158.47718811]
[60.53342819 -151.03736877]
[62.50861359 -138.69708252]
[55.32344437 -127.98559570]
[57.32745743 -113.12006378]
[59.33147049 -98.25453949]
[61.33548355 -83.38900757]
[63.33949661 -68.52348328]
[65.34351349 -53.65795517]
[68.33828735 -38.95994949]
[72.31037903 -24.49542618]
[85.44249725 -12.85435963]
[80.63893127 4.92223406]
[84.82594299 19.32601547]
[89.01295471 33.72979736]
[99.99533081 43.79144287]
[96.41767120 59.20283127]
[100.60468292 73.60661316]
[104.79169464 88.01039886]
[107.43050385 73.24433136]
[113.48134613 59.51890564]
[122.60200500 47.61035538]
[134.27667236 38.19216919]
[147.84507751 31.79698944]
[162.53987122 28.78649521]
[177.52998352 29.33094406]
[191.96766663 33.39954758]
[205.03637695 40.76220322]
[215.99702454 51.00251770]
[224.22975159 63.54135132]
[229.26892090 77.66957092]
[230.82957458 92.58816528]
[228.82344055 107.45340729]
[223.36395264 121.42459869]
[214.75991821 133.71159363]
[203.49789429 143.61952209]
[190.21481323 150.58801270]
[175.66191101 154.22299194]
[160.66221619 154.31887817]
[146.06404114 150.87022400]
[132.69297791 144.07209778]
[121.30521393 134.30895996]
[112.54479980 122.13295746]
[106.90689087 108.23165894]
[105.79123688 123.19011688]
[104.67559052 138.14857483]
[103.55994415 153.10702515]
[102.44429016 168.06547546]
[101.32864380 183.02392578]
[109.70051575 170.57757568]
[121.96135712 161.93629456]
[136.49804688 158.23698425]
[151.39801025 159.96636963]
[164.70092773 166.89691162]
[174.65657043 178.11677551]
[179.95507812 192.14979553]
[179.89936829 207.14968872]
[174.49674988 221.14297485]
[164.45805359 232.28857422]
[151.10401917 239.12010193]
[136.19160461 240.73873901]
[121.68280029 236.93154907]
[109.48648834 228.19943237]
[101.20730591 215.69122314]
[97.93442535 201.05024719]
[93.53343201 215.39009094]
[102.68559265 227.78138733]
[102.78530121 243.00778198]
[94.00390625 255.22871399]
[79.87924957 259.87973022]
[75.47824860 274.21957397]
[71.07725525 288.55944824]
[66.67625427 302.89929199]
[70.02406311 318.36221313]
[58.89310455 328.25924683]
[54.49210739 342.59909058]
[50.09111023 356.93893433]
[50.56493759 366.06106567]
[45.51636505 371.45864868]
[40.90235901 385.73138428]
[36.28834915 400.00411987]
[31.67433929 414.27682495]
[27.91803741 428.79888916]
[25.03276634 443.51879883]
[22.14749336 458.23867798]
[19.26222038 472.95858765]
[32.93568420 479.30679321]
[44.69215775 488.74334717]
[53.84813309 500.71963501]
[59.87129211 514.53936768]
[62.41145706 529.39910889]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 205]
[20 204]
[21 203]
[22 202]
[31 201]
[32 200]
[33 199]
[34 198]
[35 196]
[36 195]
[37 194]
[39 192]
[40 191]
[41 190]
[42 189]
[46 185]
[47 184]
[48 168]
[49 167]
[50 166]
[51 165]
[52 164]
[53 163]
[54 138]
[55 137]
[56 136]
[58 134]
[59 133]
[60 132]
[63 130]
[64 129]
[74 128]
[75 127]
[76 126]
[77 125]
[78 124]
[79 123]
[81 120]
[84 117]
[85 116]
[87 114]
[88 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
