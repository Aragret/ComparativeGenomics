%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[97.58360291 827.96423340]
[82.67736816 826.25250244]
[67.89451599 823.68481445]
[53.28414154 820.26977539]
[38.89478302 816.01861572]
[24.77424240 810.94555664]
[10.96942616 805.06738281]
[-2.47380805 798.40368652]
[-15.51080227 790.97656250]
[-28.09824944 782.81066895]
[-40.19433212 773.93310547]
[-51.75887299 764.37347412]
[-62.75345230 754.16339111]
[-73.14154816 743.33691406]
[-82.88865662 731.92993164]
[-91.96238708 719.98028564]
[-100.33260345 707.52777100]
[-107.97150421 694.61370850]
[-114.85371399 681.28100586]
[-120.95635986 667.57397461]
[-126.25918579 653.53808594]
[-130.74455261 639.22003174]
[-134.39759827 624.66735840]
[-137.20614624 609.92834473]
[-139.16088867 595.05200195]
[-140.25532532 580.08782959]
[-140.48582458 565.08538818]
[-139.85162354 550.09460449]
[-138.35482788 535.16528320]
[-136.00039673 520.34698486]
[-132.79617310 505.68890381]
[-128.75277710 491.23977661]
[-123.88366699 477.04763794]
[-118.20499420 463.15957642]
[-111.73563385 449.62173462]
[-104.49707794 436.47909546]
[-96.51336670 423.77529907]
[-87.81102753 411.55258179]
[-78.41896057 399.85150146]
[-68.36837769 388.71099854]
[-57.69264984 378.16799927]
[-46.42725372 368.25756836]
[-34.60960770 359.01263428]
[-22.27897072 350.46386719]
[-9.47630310 342.63970947]
[3.75586748 335.56616211]
[17.37358284 329.26666260]
[31.33160782 323.76217651]
[45.58357239 319.07101440]
[60.08213425 315.20870972]
[74.77912903 312.18811035]
[89.62574005 310.01925659]
[104.57263947 308.70935059]
[104.12603760 293.71597290]
[100.78477478 287.12374878]
[103.78607178 278.49645996]
[95.86013794 265.88577271]
[103.39111328 251.97193909]
[103.16778564 236.97360229]
[102.94445801 221.97526550]
[102.16313934 206.99563599]
[100.82490540 192.05545044]
[99.48667145 177.11526489]
[98.14843750 162.17507935]
[96.81020355 147.23489380]
[87.96828461 135.24865723]
[94.44354248 120.81323242]
[93.10530853 105.87304688]
[90.52626801 103.00582886]
[89.22357941 99.01573181]
[89.67039490 94.49827576]
[92.05619049 90.23825073]
[91.38640594 75.25321198]
[87.87693024 66.81986237]
[90.81988525 60.04042435]
[90.37327576 45.04707336]
[89.92667389 30.05372429]
[78.70547485 19.24990654]
[78.46614075 4.03815603]
[88.83508301 -6.59296083]
[88.38847351 -21.58631134]
[87.94187164 -36.57966232]
[72.07923889 -42.32672501]
[59.66782379 -53.70078659]
[52.59255600 -68.93614960]
[51.91321945 -85.68369293]
[57.70580292 -101.37306213]
[69.05518341 -113.60717010]
[84.19956970 -120.52840424]
[83.30674744 -135.50181580]
[82.41393280 -150.47521973]
[73.86894989 -163.79039001]
[80.83499146 -176.95562744]
[79.94217682 -191.92903137]
[65.29730988 -195.72152710]
[52.54224014 -203.85562134]
[42.92658615 -215.53442383]
[37.39239502 -229.61375427]
[36.48184204 -244.71429443]
[40.28414154 -259.35662842]
[48.42677689 -272.10623169]
[60.11202240 -281.71405029]
[74.19506836 -287.23880005]
[89.29621124 -288.13925171]
[103.93598175 -284.32714844]
[116.68013763 -276.17596436]
[126.28012848 -264.48428345]
[131.79545593 -250.39753723]
[132.68576050 -235.29579163]
[128.86384583 -220.65858459]
[120.70413208 -207.91989136]
[109.00601959 -198.32772827]
[94.91558075 -192.82185364]
[95.80839539 -177.84844971]
[104.28952026 -165.60427856]
[97.38733673 -151.36802673]
[98.28015900 -136.39462280]
[99.17297363 -121.42122650]
[111.95430756 -117.89546204]
[123.04634094 -110.59033203]
[131.36192322 -100.20500946]
[136.08084106 -87.74138641]
[136.73077393 -74.40737915]
[133.23442078 -61.49993134]
[125.91850281 -50.27880096]
[115.48320007 -41.84365082]
[102.93521881 -37.02626801]
[103.38182068 -22.03291702]
[103.82843018 -7.03956652]
[114.81175995 2.95553160]
[115.47827148 18.15455818]
[104.92002106 29.60711861]
[105.36663055 44.60046768]
[105.81323242 59.59381866]
[106.37144470 74.58342743]
[107.04122925 89.56846619]
[108.04549408 104.53481293]
[109.38372803 119.47499847]
[118.32136536 132.52984619]
[111.75038910 145.89665222]
[113.08862305 160.83683777]
[114.42685699 175.77702332]
[115.76509094 190.71720886]
[117.10332489 205.65739441]
[128.57783508 195.99636841]
[143.31462097 198.79402161]
[150.45028687 211.98805237]
[144.72467041 225.85229492]
[130.35848999 230.16654968]
[117.94279480 221.75193787]
[118.16612244 236.75027466]
[118.38945007 251.74861145]
[126.33135986 265.43206787]
[118.78440857 278.27313232]
[119.11938477 293.26937866]
[119.56598663 308.26272583]
[134.56436157 308.68066406]
[149.51373291 309.96197510]
[164.36447144 312.10244751]
[179.06721497 315.09494019]
[193.57313538 318.92950439]
[207.83404541 323.59344482]
[221.80256653 329.07119751]
[235.43229675 335.34463501]
[248.67797852 342.39291382]
[261.49557495 350.19256592]
[273.84252930 358.71771240]
[285.67785645 367.94003296]
[296.96215820 377.82891846]
[307.65805054 388.35147095]
[317.72991943 399.47274780]
[327.14431763 411.15582275]
[335.87002563 423.36190796]
[343.87802124 436.05038452]
[351.14169312 449.17916870]
[357.63693237 462.70462036]
[363.34213257 476.58178711]
[368.23840332 490.76461792]
[372.30938721 505.20596313]
[375.54165649 519.85784912]
[377.92440796 534.67163086]
[379.44976807 549.59808350]
[380.11260986 564.58764648]
[379.91079712 579.59045410]
[378.84500122 594.55676270]
[376.91870117 609.43676758]
[374.13833618 624.18109131]
[370.51312256 638.74078369]
[366.05514526 653.06738281]
[360.77917480 667.11340332]
[354.70275879 680.83209229]
[347.84603882 694.17791748]
[340.23184204 707.10656738]
[331.88546753 719.57507324]
[322.83459473 731.54199219]
[313.10931396 742.96765137]
[302.74194336 753.81396484]
[291.76690674 764.04504395]
[280.22067261 773.62677002]
[268.14157104 782.52740479]
[255.56977844 790.71734619]
[242.54701233 798.16943359]
[229.11654663 804.85882568]
[215.32298279 810.76336670]
[201.21217346 815.86346436]
[186.83097839 820.14208984]
[172.22715759 823.58508301]
[157.44923401 826.18103027]
[142.54631042 827.92126465]
[127.56787109 828.79998779]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 156]
[54 155]
[56 154]
[58 152]
[59 151]
[60 150]
[61 144]
[62 143]
[63 142]
[64 141]
[65 140]
[67 138]
[68 137]
[72 136]
[73 135]
[75 134]
[76 133]
[77 132]
[80 129]
[81 128]
[82 127]
[89 118]
[90 117]
[91 116]
[93 114]
[94 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
