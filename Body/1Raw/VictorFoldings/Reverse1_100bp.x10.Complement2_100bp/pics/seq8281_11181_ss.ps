%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[11.89908028 595.56793213]
[0.86917472 605.77197266]
[-11.50069332 614.30236816]
[-24.95868874 620.98541260]
[-39.23082352 625.68505859]
[-54.02653885 628.30566406]
[-69.04460907 628.79388428]
[-83.97928619 627.13970947]
[-98.52651978 623.37695312]
[-112.39014435 617.58203125]
[-125.28791809 609.87310791]
[-136.95726013 600.40698242]
[-147.16059875 589.37646484]
[-155.69020081 577.00604248]
[-162.37240601 563.54760742]
[-167.07119751 549.27520752]
[-169.69088745 534.47930908]
[-170.17817688 519.46124268]
[-168.52310181 504.52664185]
[-164.75939941 489.97964478]
[-158.96365356 476.11639404]
[-151.25389099 463.21908569]
[-141.78706360 451.55032349]
[-130.75588989 441.34768677]
[-118.38497162 432.81884766]
[-104.92614746 426.13745117]
[-90.65342712 421.43957520]
[-75.85739136 418.82077026]
[-60.83926010 418.33444214]
[-45.90478897 419.99041748]
[-42.14848709 405.46835327]
[-38.39218521 390.94628906]
[-34.63588715 376.42425537]
[-30.87958527 361.90219116]
[-27.12328529 347.38012695]
[-23.36698341 332.85806274]
[-34.16961288 343.26495361]
[-48.24318695 348.45480347]
[-63.21605682 347.55303955]
[-76.56503296 340.71163940]
[-86.04058075 329.08346558]
[-90.04589844 314.62811279]
[-87.90602112 299.78152466]
[-79.98155975 287.04565430]
[-67.60792542 278.56668091]
[-52.87028885 275.77346802]
[-38.25220108 279.13671875]
[-26.21706772 288.08969116]
[-18.79302025 301.12362671]
[-17.23130989 316.04373169]
[-18.71174812 301.22286987]
[-5.77234602 292.11889648]
[0.70714962 278.59054565]
[7.18664551 265.06219482]
[5.70620775 250.24136353]
[18.64560890 241.13737488]
[25.12510490 227.60903931]
[31.60460091 214.08068848]
[38.08409882 200.55233765]
[37.26361465 197.12318420]
[38.06331635 193.12623596]
[40.73196793 189.32734680]
[45.16690826 186.57446289]
[52.24401093 173.34893799]
[59.32111740 160.12339783]
[66.39822388 146.89787292]
[73.47532654 133.67234802]
[80.55243683 120.44682312]
[87.62953949 107.22129822]
[87.37055206 93.24185944]
[99.14493561 85.70159912]
[105.11649323 71.94149780]
[109.94249725 57.73904037]
[103.20909882 43.69272232]
[108.30566406 29.35816002]
[121.73817444 23.02545547]
[126.56417847 8.82299995]
[131.39016724 -5.37945557]
[126.39955139 -17.27300262]
[130.71151733 -29.00290680]
[141.50257874 -34.46912766]
[146.53948975 -48.59815598]
[151.57641602 -62.72718430]
[144.44104004 -74.15089417]
[145.17713928 -87.40489960]
[153.29223633 -97.66292572]
[165.64793396 -101.31892395]
[170.89465332 -115.37139130]
[176.14137268 -129.42385864]
[181.38809204 -143.47633362]
[176.75379944 -155.51319885]
[181.41310120 -167.10951233]
[192.36212158 -172.25202942]
[197.81747437 -186.22482300]
[203.27284241 -200.19761658]
[208.72819519 -214.17041016]
[195.62814331 -221.52804565]
[183.67961121 -230.63729858]
[173.11517334 -241.32087708]
[164.14047241 -253.37081909]
[156.93022156 -266.55255127]
[151.62474060 -280.60952759]
[148.32733154 -295.26806641]
[147.10215759 -310.24288940]
[147.97308350 -325.24249268]
[150.92314148 -339.97485352]
[155.89492798 -354.15328979]
[162.79164124 -367.50173950]
[171.47904968 -379.76043701]
[181.78804016 -390.69070435]
[193.51795959 -400.07980347]
[206.44046021 -407.74496460]
[220.30403137 -413.53698730]
[234.83879089 -417.34317017]
[249.76182556 -419.08935547]
[264.78265381 -418.74157715]
[279.60888672 -416.30664062]
[293.95193481 -411.83190918]
[307.53259277 -405.40447998]
[320.08651733 -397.14947510]
[331.36935425 -387.22756958]
[341.16143799 -375.83193970]
[349.27221680 -363.18435669]
[355.54379272 -349.53100586]
[359.85406494 -335.13769531]
[362.11917114 -320.28454590]
[362.29498291 -305.26074219]
[360.37811279 -290.35867310]
[356.40582275 -275.86840820]
[350.45550537 -262.07205200]
[342.64291382 -249.23812866]
[333.12017822 -237.61643982]
[322.07263184 -227.43322754]
[309.71533203 -218.88668823]
[296.28881836 -212.14320374]
[282.05441284 -207.33404541]
[267.28924561 -204.55279541]
[252.28065491 -203.85360718]
[237.32084656 -205.25009155]
[222.70098877 -208.71505737]
[217.24563599 -194.74226379]
[211.79028320 -180.76947021]
[206.33491516 -166.79666138]
[209.91220093 -149.61614990]
[195.44056702 -138.22961426]
[190.19384766 -124.17714691]
[184.94712830 -110.12467194]
[179.70040894 -96.07220459]
[187.32899475 -81.08409119]
[181.64523315 -64.89737701]
[165.70544434 -57.69026947]
[160.66853333 -43.56124115]
[155.63160706 -29.43220901]
[159.71882629 -12.36582279]
[145.59263611 -0.55345774]
[140.76663208 13.64899826]
[135.94062805 27.85145378]
[142.73406982 41.05693817]
[138.04214478 55.52899551]
[124.14495087 62.56503677]
[119.31895447 76.76749420]
[131.31280518 67.75930786]
[146.10409546 65.26571655]
[160.38838196 69.84380341]
[170.97454834 80.47080231]
[175.49760437 94.77261353]
[172.94709778 109.55418396]
[163.89279175 121.51327515]
[150.35748291 127.97818756]
[135.36495972 127.50463867]
[122.26459503 120.19843292]
[113.98306274 107.69179535]
[112.37046051 92.77870178]
[112.62944794 106.75814056]
[100.85506439 114.29840088]
[93.77796173 127.52392578]
[86.70085907 140.74945068]
[79.62374878 153.97497559]
[72.54664612 167.20051575]
[65.46954346 180.42604065]
[58.39243317 193.65156555]
[51.61244202 207.03184509]
[45.13294601 220.56018066]
[38.65345001 234.08853149]
[32.17395401 247.61688232]
[33.19093704 263.40536499]
[20.71499062 271.54171753]
[14.23549557 285.07003784]
[7.75599957 298.59838867]
[8.77297974 314.38687134]
[-3.70296502 322.52322388]
[-8.84492493 336.61437988]
[-12.60122490 351.13641357]
[-16.35752678 365.65847778]
[-20.11382675 380.18054199]
[-23.87012672 394.70260620]
[-27.62642860 409.22467041]
[-31.38272858 423.74673462]
[-17.51838493 429.53988647]
[-4.61965561 437.24725342]
[7.05085659 446.71191406]
[17.25555611 457.74118042]
[25.78668594 470.11053467]
[32.47056580 483.56811523]
[37.17111969 497.83996582]
[39.79264832 512.63549805]
[40.28178406 527.65356445]
[38.62856674 542.58831787]
[34.86665726 557.13580322]
[29.07263756 570.99975586]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 198]
[31 197]
[32 196]
[33 195]
[34 194]
[35 193]
[36 192]
[50 191]
[52 189]
[53 188]
[54 187]
[56 185]
[57 184]
[58 183]
[59 182]
[63 181]
[64 180]
[65 179]
[66 178]
[67 177]
[68 176]
[69 175]
[71 173]
[72 161]
[73 160]
[76 157]
[77 156]
[78 155]
[81 153]
[82 152]
[83 151]
[87 148]
[88 147]
[89 146]
[90 145]
[93 143]
[94 142]
[95 141]
[96 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
