%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[146.19081116 576.01477051]
[144.30599976 561.10186768]
[144.77740479 546.07775879]
[147.59341431 531.31237793]
[152.68467712 517.16937256]
[159.92584229 503.99694824]
[169.13856506 492.11956787]
[180.09597778 481.82968140]
[192.52824402 473.38073730]
[206.12922668 466.98071289]
[201.94221497 452.57693481]
[197.75520325 438.17315674]
[193.56819153 423.76937866]
[189.38117981 409.36560059]
[185.19416809 394.96182251]
[181.00715637 380.55804443]
[177.32740784 377.51361084]
[175.52108765 372.12527466]
[176.91677856 365.66278076]
[173.16047668 351.14074707]
[162.48254395 340.75656128]
[166.51747131 325.45852661]
[162.76118469 310.93646240]
[159.00488281 296.41439819]
[155.24858093 281.89236450]
[150.84757996 267.55249023]
[145.81066895 253.42347717]
[140.77374268 239.29444885]
[136.91931152 236.47444153]
[134.79547119 231.20317078]
[135.80404663 224.66908264]
[131.19003296 210.39634705]
[126.57602692 196.12361145]
[121.96201324 181.85087585]
[117.03042603 167.68475342]
[111.78370667 153.63227844]
[106.53698730 139.57980347]
[101.29026794 125.52733612]
[96.04354858 111.47486115]
[93.99150848 126.33383942]
[87.28479767 139.75099182]
[76.63119507 150.31037903]
[63.15499496 156.89764404]
[48.27838135 158.81762695]
[33.57131195 155.86769104]
[20.58586121 148.35916138]
[10.69241428 137.08441162]
[4.93505144 123.23332214]
[3.92135978 108.26761627]
[7.75831652 93.76666260]
[16.04099846 81.26077271]
[27.89531517 72.06973267]
[42.07025146 67.16349792]
[57.06989288 67.05982971]
[71.31129456 71.76966095]
[83.29151917 80.79596710]
[91.74635315 93.18634033]
[90.18582916 78.26773834]
[81.05481720 65.34739685]
[87.42605591 51.88424301]
[85.86553192 36.96563721]
[84.30500793 22.04703331]
[80.29978943 13.83752346]
[82.83400726 6.89493513]
[81.49577332 -8.04524994]
[68.08572388 -12.50813103]
[57.42183304 -21.71712685]
[51.09253693 -34.25688553]
[50.02395630 -48.21928787]
[54.34449768 -61.49378586]
[63.37046051 -72.08642578]
[75.71397400 -78.41934204]
[74.59832764 -93.37779999]
[73.48267365 -108.33625031]
[72.36702728 -123.29470062]
[71.25138092 -138.25315857]
[70.13572693 -153.21160889]
[58.44330978 -163.50360107]
[57.52497101 -178.68949890]
[67.40886688 -189.77299500]
[63.64985275 -198.09812927]
[66.38965607 -204.96217346]
[65.49683380 -219.93559265]
[64.60401917 -234.90899658]
[63.71120453 -249.88240051]
[62.81838989 -264.85580444]
[61.92557526 -279.82919312]
[50.07697678 -296.13787842]
[59.47386932 -313.03717041]
[58.13563538 -327.97735596]
[56.79740143 -342.91754150]
[55.45916748 -357.85772705]
[54.12093353 -372.79791260]
[52.78269958 -387.73809814]
[38.12641144 -391.60708618]
[25.67904472 -400.25802612]
[16.94368362 -412.64630127]
[12.97516155 -427.27593994]
[14.25269794 -442.38037109]
[20.62202454 -456.13565063]
[31.31401443 -466.88073730]
[45.03755951 -473.31814575]
[60.13546753 -474.67050171]
[74.78459930 -470.77450562]
[87.21600342 -462.10064697]
[95.92852020 -449.69628906]
[99.87007904 -435.05935669]
[98.56470490 -419.95730591]
[92.17003632 -406.21380615]
[81.45826721 -395.48843384]
[67.72288513 -389.07632446]
[69.06111908 -374.13613892]
[70.39935303 -359.19595337]
[71.73758698 -344.25576782]
[73.07582092 -329.31558228]
[74.41405487 -314.37539673]
[82.81282043 -308.55529785]
[86.70330048 -298.86959839]
[84.57685852 -288.42648315]
[76.89897919 -280.72201538]
[77.79179382 -265.74862671]
[78.68460846 -250.77520752]
[79.57743073 -235.80180359]
[80.47024536 -220.82839966]
[81.36306000 -205.85499573]
[82.36731720 -190.88865662]
[93.78600311 -181.39395142]
[95.13051605 -166.23985291]
[85.09418488 -154.32725525]
[86.20983124 -139.36880493]
[87.32547760 -124.41035461]
[88.44113159 -109.45189667]
[89.55677795 -94.49344635]
[90.67242432 -79.53499603]
[105.65460968 -73.97759247]
[116.75375366 -62.40077591]
[121.71115112 -47.08712769]
[119.48602295 -31.08684349]
[110.47358704 -17.61020851]
[96.43595886 -9.38348389]
[97.77419281 5.55670118]
[99.22360992 20.48650932]
[100.78413391 35.40511322]
[102.34465790 50.32371902]
[111.36405182 62.17697906]
[105.10443878 76.70721436]
[106.66496277 91.62582397]
[110.09602356 106.22814178]
[115.34273529 120.28061676]
[120.58945465 134.33308411]
[125.83617401 148.38555908]
[131.08290100 162.43803406]
[135.11029053 165.75874329]
[137.24748230 169.88012695]
[137.50601196 173.94807434]
[136.23475647 177.23687744]
[140.84875488 191.50961304]
[145.46276855 205.78233337]
[150.07678223 220.05506897]
[154.90277100 234.25752258]
[159.93969727 248.38655090]
[164.97660828 262.51559448]
[172.36750793 249.46282959]
[186.78593445 245.32655334]
[199.97238159 252.47622681]
[204.37303162 266.81616211]
[197.46701050 280.13183594]
[183.21038818 284.79537964]
[169.77062988 278.13604736]
[173.52693176 292.65811157]
[177.28323364 307.18017578]
[181.03953552 321.70223999]
[191.98614502 333.12512207]
[187.68254089 347.38442993]
[191.43884277 361.90649414]
[195.41093445 376.37103271]
[199.59794617 390.77481079]
[203.78495789 405.17858887]
[207.97196960 419.58236694]
[212.15898132 433.98614502]
[216.34599304 448.38992310]
[220.53300476 462.79370117]
[235.44541931 460.90521240]
[250.46965027 461.37289429]
[265.23574829 464.18524170]
[279.38003540 469.27301025]
[292.55422974 476.51092529]
[304.43389893 485.72070312]
[314.72647095 496.67556763]
[323.17852783 509.10574341]
[329.58187866 522.70513916]
[333.77890015 537.13885498]
[335.66616821 552.05139160]
[335.19723511 567.07562256]
[332.38366699 581.84143066]
[327.29473877 595.98535156]
[320.05575562 609.15893555]
[310.84497070 621.03784180]
[299.88928223 631.32952881]
[287.45840454 639.78051758]
[273.85845947 646.18280029]
[259.42443848 650.37860107]
[244.51170349 652.26464844]
[229.48754883 651.79443359]
[214.72192383 648.97967529]
[200.57847595 643.88958740]
[187.40547180 636.64947510]
[175.52732849 627.43774414]
[165.23655701 616.48120117]
[156.78656006 604.04962158]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 182]
[11 181]
[12 180]
[13 179]
[14 178]
[15 177]
[16 176]
[19 175]
[20 174]
[22 172]
[23 171]
[24 170]
[25 169]
[26 162]
[27 161]
[28 160]
[31 159]
[32 158]
[33 157]
[34 156]
[35 152]
[36 151]
[37 150]
[38 149]
[39 148]
[57 147]
[58 146]
[60 144]
[61 143]
[62 142]
[64 141]
[65 140]
[72 134]
[73 133]
[74 132]
[75 131]
[76 130]
[77 129]
[80 126]
[82 125]
[83 124]
[84 123]
[85 122]
[86 121]
[87 120]
[89 116]
[90 115]
[91 114]
[92 113]
[93 112]
[94 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
