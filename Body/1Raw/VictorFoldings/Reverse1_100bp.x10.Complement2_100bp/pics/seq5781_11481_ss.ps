%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[112.44412994 802.31518555]
[98.59860229 796.51550293]
[85.35700989 789.44482422]
[72.83571625 781.16522217]
[61.14476013 771.74951172]
[50.38689423 761.28039551]
[40.65665436 749.84985352]
[32.03955078 737.55841064]
[24.61131859 724.51403809]
[18.43723297 710.83135986]
[13.57155800 696.63067627]
[10.05705070 682.03674316]
[7.92459917 667.17779541]
[7.19294357 652.18450928]
[7.86851358 637.18859863]
[9.94537258 622.32177734]
[13.40526772 607.71484375]
[18.21779442 593.49603271]
[24.34065628 579.79040527]
[31.72004700 566.71832275]
[40.29111481 554.39471436]
[49.97853088 542.92785645]
[60.69716644 532.41857910]
[72.35282135 522.95916748]
[84.84305573 514.63281250]
[98.05811310 507.51263428]
[111.88185120 501.66125488]
[126.19278717 497.13006592]
[140.86514282 493.95889282]
[139.08268738 479.06518555]
[137.30021667 464.17147827]
[135.51774597 449.27774048]
[126.32287598 437.56008911]
[132.36546326 422.93826294]
[130.58299255 408.04455566]
[128.80053711 393.15081787]
[127.01806641 378.25711060]
[125.23560333 363.36340332]
[123.45314026 348.46966553]
[119.53707123 342.20181274]
[121.75670624 333.34115601]
[120.19618225 318.42254639]
[118.63566589 303.50396729]
[117.07514191 288.58535767]
[101.10559082 282.15014648]
[90.54067230 268.44262695]
[88.36235046 251.18403625]
[95.26024628 235.11763000]
[109.41694641 224.70509338]
[107.41293335 209.83956909]
[105.40892029 194.97402954]
[103.40490723 180.10850525]
[101.40089417 165.24298096]
[99.39688110 150.37745667]
[97.39286804 135.51191711]
[95.38885498 120.64639282]
[93.38484192 105.78086853]
[91.12640381 103.73416901]
[89.56276703 100.82048035]
[89.01647186 97.29557037]
[89.71107483 93.53076172]
[91.73139191 89.97389221]
[90.61574554 75.01544189]
[89.50009155 60.05698776]
[88.38444519 45.09853363]
[87.26879883 30.14008141]
[86.04181671 15.19034863]
[84.70358276 0.25016332]
[69.90528107 -2.73147249]
[56.56021118 -9.75510502]
[45.74591446 -20.24395752]
[38.33285522 -33.34185028]
[34.91436768 -47.98309326]
[35.75917435 -62.97917175]
[40.79026794 -77.11525726]
[49.59187317 -89.24858093]
[61.44375610 -98.40084839]
[75.38019562 -103.83711243]
[74.04196167 -118.77729797]
[72.70372772 -133.71748352]
[71.36549377 -148.65766907]
[67.88077545 -154.27622986]
[67.77284241 -159.95825195]
[70.21662903 -164.06153870]
[69.32380676 -179.03494263]
[68.43099213 -194.00834656]
[59.88600922 -207.32353210]
[66.85205078 -220.48876953]
[65.95923615 -235.46217346]
[65.06642151 -250.43557739]
[50.20474243 -252.90098572]
[36.26448059 -258.61209106]
[23.94487000 -267.28244019]
[13.86386108 -278.47714233]
[6.52711201 -291.63464355]
[2.30263019 -306.09497070]
[1.40231466 -321.13284302]
[3.87132430 -335.99392700]
[9.58581543 -349.93280029]
[18.25914955 -362.25030518]
[29.45627785 -372.32861328]
[42.61555862 -379.66217041]
[57.07692337 -383.88314819]
[72.11499786 -384.77981567]
[86.97547913 -382.30718994]
[100.91297150 -376.58932495]
[113.22837830 -367.91302490]
[123.30396271 -356.71343994]
[130.63433838 -343.55239868]
[134.85180664 -329.08999634]
[135.74484253 -314.05169678]
[133.26863098 -299.19183350]
[127.54737854 -285.25570679]
[118.86808014 -272.94241333]
[107.66606903 -262.86953735]
[94.50323486 -255.54235840]
[80.03982544 -251.32839966]
[80.93264008 -236.35498047]
[81.82545471 -221.38157654]
[90.30657959 -209.13740540]
[83.40439606 -194.90116882]
[84.29721832 -179.92776489]
[85.19003296 -164.95436096]
[86.30567932 -149.99591064]
[87.64391327 -135.05572510]
[88.98214722 -120.11553192]
[90.32038116 -105.17534637]
[105.00109863 -102.30240631]
[118.29085541 -95.40213776]
[129.10867310 -85.02618408]
[136.57194519 -72.00925446]
[140.06840515 -57.40203476]
[139.30636597 -42.38633347]
[134.33906555 -28.17949486]
[125.56100464 -15.93569851]
[113.67660522 -6.65219259]
[99.64376831 -1.08807087]
[100.98200226 13.85211372]
[104.70971680 20.23380280]
[102.22724915 29.02443314]
[103.34289551 43.98288727]
[104.45854950 58.94134140]
[105.57419586 73.89979553]
[106.68984222 88.85824585]
[108.25036621 103.77684784]
[110.25437927 118.64237976]
[112.25839233 133.50790405]
[114.26240540 148.37344360]
[116.26641846 163.23896790]
[118.27043152 178.10449219]
[120.27445221 192.97001648]
[122.27846527 207.83555603]
[124.28247833 222.70108032]
[136.64099121 226.44897461]
[146.62779236 234.56307983]
[152.78157043 245.81057739]
[154.21911621 258.50360107]
[150.76200867 270.75250244]
[142.95780945 280.74728394]
[131.99374390 287.02481079]
[133.55426025 301.94342041]
[135.11479187 316.86203003]
[136.67530823 331.78063965]
[138.34684753 346.68722534]
[140.12931824 361.58093262]
[141.91178894 376.47463989]
[143.69424438 391.36837769]
[145.47671509 406.26208496]
[147.25918579 421.15579224]
[156.58154297 433.93875122]
[150.41146851 447.49526978]
[152.19393921 462.38900757]
[153.97639465 477.28271484]
[155.75886536 492.17642212]
[170.76518250 491.79568481]
[185.74121094 492.82183838]
[200.55534363 495.24584961]
[215.07739258 499.04647827]
[229.17971802 504.19027710]
[242.73841858 510.63204956]
[255.63430786 518.31518555]
[267.75405884 527.17218018]
[278.99114990 537.12512207]
[289.24685669 548.08666992]
[298.43106079 559.96038818]
[306.46298218 572.64196777]
[313.27209473 586.01995850]
[318.79852295 599.97680664]
[322.99374390 614.38977051]
[325.82083130 629.13232422]
[327.25497437 644.07476807]
[327.28359985 659.08587646]
[325.90637207 674.03375244]
[323.13546753 688.78692627]
[318.99520874 703.21582031]
[313.52197266 717.19360352]
[306.76388550 730.59741211]
[298.78033447 743.30950928]
[289.64144897 755.21813965]
[279.42758179 766.21862793]
[268.22848511 776.21435547]
[256.14257812 785.11749268]
[243.27604675 792.84967041]
[229.74200439 799.34307861]
[215.65936279 804.54052734]
[201.15190125 808.39648438]
[186.34712219 810.87695312]
[171.37510681 811.96014404]
[156.36744690 811.63653564]
[141.45603943 809.90905762]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 174]
[30 173]
[31 172]
[32 171]
[34 169]
[35 168]
[36 167]
[37 166]
[38 165]
[39 164]
[41 163]
[42 162]
[43 161]
[44 160]
[49 153]
[50 152]
[51 151]
[52 150]
[53 149]
[54 148]
[55 147]
[56 146]
[57 145]
[62 144]
[63 143]
[64 142]
[65 141]
[66 140]
[67 138]
[68 137]
[78 127]
[79 126]
[80 125]
[81 124]
[84 123]
[85 122]
[86 121]
[88 119]
[89 118]
[90 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
