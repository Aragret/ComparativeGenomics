%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCACUCGGAUCCCACAACACUCACAUUUAAUCACGCUACUCAUCCCCUUCCCUCGGAUGAUCCCACAUCUUAUCCUUCAUACACGGACGCAAGUCCGCAxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[95.33248138 627.42541504]
[90.16483307 613.31835938]
[86.96630096 598.63903809]
[85.79646301 583.66082764]
[86.67711639 568.66290283]
[89.59186554 553.92462158]
[94.48638916 539.72045898]
[101.26952362 526.31512451]
[109.81489563 513.95831299]
[119.96331024 502.88027954]
[131.52571106 493.28732300]
[144.28669739 485.35821533]
[158.00852966 479.24060059]
[153.82151794 464.83682251]
[149.63450623 450.43304443]
[136.49815369 443.50686646]
[132.04675293 428.95904541]
[139.40063477 415.22738647]
[135.21362305 400.82360840]
[131.02661133 386.41983032]
[126.83959961 372.01605225]
[122.65258789 357.61224365]
[115.50528717 370.79998779]
[101.59989929 376.42495728]
[87.29378510 371.91549683]
[79.12751007 359.33331299]
[80.83457184 344.43075562]
[91.63453674 334.02111816]
[106.58980560 332.86352539]
[118.86408997 341.48870850]
[116.19829559 326.72750854]
[113.53250122 311.96627808]
[110.86670685 297.20507812]
[101.44647980 308.87808228]
[86.54657745 310.60809326]
[74.70233917 301.40408325]
[72.69868469 286.53851318]
[81.68339539 274.52703857]
[96.50962067 272.25042725]
[108.68372345 281.01196289]
[107.34548950 266.07177734]
[106.00725555 251.13160706]
[104.66902161 236.19142151]
[103.33078766 221.25123596]
[101.99255371 206.31105042]
[100.65431976 191.37086487]
[99.31608582 176.43067932]
[87.75730133 167.10704041]
[86.18731689 151.97463989]
[96.04517365 139.91394043]
[94.70693970 124.97375488]
[93.36870575 110.03356934]
[91.80818176 95.11496735]
[90.02571869 80.22125244]
[88.24325562 65.32752991]
[86.46078491 50.43381500]
[76.36247253 61.52543640]
[61.38601685 62.36552429]
[50.11061096 52.47283936]
[48.99532318 37.51435852]
[58.67903519 26.05898094]
[73.61447906 24.66886520]
[85.24550629 34.13949966]
[84.79889679 19.14615059]
[84.35229492 4.15280104]
[74.31353760 -11.28432560]
[83.22814941 -26.40042686]
[74.88235474 -39.84134674]
[82.04364014 -52.90141296]
[81.37385559 -67.88645172]
[80.70407104 -82.87149048]
[79.69980621 -97.83783722]
[70.76216888 -110.89269257]
[77.33314514 -124.25949860]
[75.99491119 -139.19967651]
[74.65667725 -154.13986206]
[73.31844330 -169.08004761]
[71.98020935 -184.02023315]
[70.64197540 -198.96041870]
[69.30374146 -213.90060425]
[67.96550751 -228.84078979]
[52.96088028 -229.64201355]
[38.22302246 -232.57052612]
[24.05197144 -237.56674194]
[10.73623657 -244.52891541]
[-1.45309174 -253.31533813]
[-12.26785469 -263.74710083]
[-21.48787880 -275.61181641]
[-28.92545319 -288.66799927]
[-34.42916107 -302.64974976]
[-37.88695526 -317.27249146]
[-39.22843552 -332.23849487]
[-38.42629242 -347.24307251]
[-35.49685669 -361.98074341]
[-30.49976921 -376.15148926]
[-23.53676414 -389.46679688]
[-14.74959660 -401.65557861]
[-4.31716537 -412.46969604]
[7.54814005 -421.68899536]
[20.60475731 -429.12576294]
[34.58687210 -434.62860107]
[49.20981979 -438.08547974]
[64.17590332 -439.42602539]
[79.18043518 -438.62295532]
[93.91793060 -435.69262695]
[108.08836365 -430.69467163]
[121.40323639 -423.73083496]
[133.59147644 -414.94290161]
[144.40495300 -404.50979614]
[153.62350464 -392.64392090]
[161.05946350 -379.58685303]
[166.56143188 -365.60440063]
[170.01742554 -350.98123169]
[171.35704041 -336.01507568]
[170.55305481 -321.01058960]
[167.62179565 -306.27328491]
[162.62294006 -292.10314941]
[155.65829468 -278.78869629]
[146.86961365 -266.60101318]
[136.43585205 -255.78819275]
[124.56940460 -246.57037354]
[111.51186371 -239.13520813]
[97.52906799 -233.63410950]
[82.90569305 -230.17903137]
[84.24392700 -215.23884583]
[85.58216095 -200.29866028]
[86.92039490 -185.35847473]
[88.25862885 -170.41828918]
[89.59686279 -155.47810364]
[90.93509674 -140.53791809]
[92.27333069 -125.59773254]
[101.11524963 -113.61149597]
[94.63999176 -99.17607117]
[97.09670258 -96.64685822]
[98.45041656 -92.80205536]
[98.09615326 -88.17303467]
[95.68910980 -83.54127502]
[96.35889435 -68.55623627]
[97.02867889 -53.57119751]
[105.32656097 -41.20211029]
[98.21318817 -27.07021332]
[106.92554474 -18.67846870]
[107.60619354 -6.19966650]
[99.34564209 3.70619488]
[99.79225159 18.69954491]
[100.23885345 33.69289398]
[101.35450745 48.65134811]
[103.13697052 63.54506683]
[104.91943359 78.43878174]
[106.70190430 93.33249664]
[109.98439789 97.42385864]
[110.74092102 103.06309509]
[108.30889130 108.69533539]
[109.64712524 123.63552094]
[110.98535919 138.57571411]
[122.82971954 148.69247437]
[123.97405243 163.86300659]
[114.25627136 175.09245300]
[115.59450531 190.03263855]
[116.93273926 204.97282410]
[118.27097321 219.91299438]
[119.60920715 234.85317993]
[120.94744110 249.79336548]
[122.28567505 264.73355103]
[123.62390900 279.67373657]
[125.62792206 294.53927612]
[128.29371643 309.30047607]
[130.95951843 324.06170654]
[133.62530518 338.82293701]
[137.05636597 353.42523193]
[141.24337769 367.82904053]
[145.43038940 382.23281860]
[149.61740112 396.63659668]
[153.80441284 411.04037476]
[167.37356567 418.68994141]
[171.41459656 433.35705566]
[164.03828430 446.24603271]
[168.22529602 460.64981079]
[172.41230774 475.05358887]
[187.27536011 472.86190796]
[202.29841614 472.71453857]
[217.20159912 474.61425781]
[231.70727539 478.52566528]
[245.54521179 484.37588501]
[258.45761108 492.05593872]
[270.20394897 501.42276001]
[280.56536865 512.30187988]
[289.34887695 524.49053955]
[296.39077759 537.76177979]
[301.55996704 551.86828613]
[304.76010132 566.54724121]
[305.93154907 581.52526855]
[305.05252075 596.52331543]
[302.13937378 611.26196289]
[297.24636841 625.46661377]
[290.46469116 638.87268066]
[281.92065430 651.23040771]
[271.77343750 662.30957031]
[260.21209717 671.90374756]
[247.45196533 679.83428955]
[233.73078918 685.95336914]
[219.30416870 690.14697266]
[204.44088745 692.33709717]
[189.41781616 692.48284912]
[174.51484680 690.58148193]
[160.00959778 686.66851807]
[146.17228699 680.81683350]
[133.26071167 673.13531494]
[121.51538849 663.76727295]
[111.15514374 652.88702393]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 179]
[14 178]
[15 177]
[18 174]
[19 173]
[20 172]
[21 171]
[22 170]
[30 169]
[31 168]
[32 167]
[33 166]
[40 165]
[41 164]
[42 163]
[43 162]
[44 161]
[45 160]
[46 159]
[47 158]
[50 155]
[51 154]
[52 153]
[53 150]
[54 149]
[55 148]
[56 147]
[63 146]
[64 145]
[65 144]
[67 141]
[69 139]
[70 138]
[71 137]
[72 133]
[74 131]
[75 130]
[76 129]
[77 128]
[78 127]
[79 126]
[80 125]
[81 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
