%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGGCAGCCUUUACCACUUCCCUCUGAGCUUCAUGAGACUCCGAACAUCCUCCCAUUUUAUCUCUGGGUCAUUUUAACAUUAUUCGUCACGAACUUAAUxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[84.55960083 605.39062500]
[69.05799866 604.69775391]
[56.94522095 594.99932861]
[52.87886810 580.02453613]
[58.42253876 565.53149414]
[71.44458008 557.09313965]
[72.11436462 542.10809326]
[64.95307922 529.04803467]
[73.29887390 515.60711670]
[73.96865845 500.62207031]
[74.63844299 485.63705444]
[61.48074722 475.82110596]
[56.71885681 459.93759155]
[62.41919327 444.18933105]
[76.52151489 434.85015869]
[76.96812439 419.85678101]
[77.41472626 404.86343384]
[76.63340759 389.88381958]
[74.62939453 375.01828003]
[72.62538147 360.15274048]
[70.62136841 345.28723145]
[68.61734772 330.42169189]
[66.61333466 315.55615234]
[61.44360352 329.63714600]
[52.22514343 341.47015381]
[39.83660126 349.92733765]
[25.45877266 354.20260620]
[10.46206284 353.88851929]
[-3.72413969 349.01495361]
[-15.74769592 340.04644775]
[-24.46259499 327.83779907]
[-29.03819275 313.55270386]
[-29.03836632 298.55270386]
[-24.46310425 284.26751709]
[-15.74848938 272.05868530]
[-3.72514367 263.08990479]
[10.46094513 258.21600342]
[25.45764923 257.90155029]
[39.83557510 262.17648315]
[52.22431564 270.63339233]
[61.44305420 282.46618652]
[66.61333466 296.54812622]
[68.61734772 281.68261719]
[62.64978790 268.03573608]
[72.16143799 255.39297485]
[74.16545868 240.52745056]
[76.16947174 225.66192627]
[78.17348480 210.79640198]
[80.06677246 195.91636658]
[81.84924316 181.02264404]
[83.63170624 166.12892151]
[81.30532074 159.11396790]
[85.55318451 151.02734375]
[87.55720520 136.16181946]
[89.56121826 121.29628754]
[91.56523132 106.43075562]
[92.90346527 91.49057007]
[93.57324982 76.50553131]
[94.24303436 61.52049637]
[94.91281891 46.53545761]
[95.24779510 31.53919792]
[95.24779510 16.53919792]
[95.24779510 1.53919697]
[95.24779510 -13.46080303]
[95.24779510 -28.46080208]
[95.24779510 -43.46080399]
[86.69596863 -53.11632538]
[87.00477600 -65.60986328]
[95.46341705 -74.25728607]
[95.68674469 -89.25562286]
[95.91007233 -104.25395966]
[96.02174377 -119.25354004]
[96.02174377 -134.25354004]
[96.02174377 -149.25354004]
[96.02174377 -164.25354004]
[95.68676758 -179.24980164]
[95.01697540 -194.23484802]
[94.34719086 -209.21987915]
[93.67740631 -224.20492554]
[93.00762177 -239.18995667]
[84.22548676 -227.02960205]
[70.30236816 -221.44868469]
[55.55248642 -224.17651367]
[44.54625702 -234.36782837]
[40.69408417 -248.86476135]
[45.18960190 -263.17526245]
[56.63982391 -272.86505127]
[71.49677277 -274.93170166]
[85.15686798 -268.73477173]
[93.38745117 -256.19424438]
[94.72568512 -271.13442993]
[92.37437439 -279.96102905]
[96.19668579 -286.28652954]
[97.75720978 -301.20510864]
[99.31773376 -316.12371826]
[100.87825775 -331.04232788]
[94.61863708 -345.57257080]
[103.63803101 -357.42584229]
[105.19855499 -372.34442139]
[106.75907898 -387.26303101]
[93.01785278 -393.62365723]
[82.08817291 -404.10317993]
[75.15560913 -417.56491089]
[72.97216034 -432.54861450]
[75.77467346 -447.42898560]
[83.25914001 -460.59185791]
[94.61370850 -470.60946655]
[108.60672760 -476.39514160]
[123.72032166 -477.32135010]
[138.31509399 -473.28759766]
[150.80792236 -464.73141479]
[159.84364319 -452.58093262]
[164.44216919 -438.15414429]
[164.10466003 -423.01593018]
[158.86773682 -408.80844116]
[149.29946899 -397.07272339]
[136.43772888 -389.08181763]
[121.67768860 -385.70251465]
[120.11716461 -370.78390503]
[118.55664062 -355.86529541]
[124.92787170 -342.40216064]
[115.79685974 -329.48181152]
[114.23633575 -314.56320190]
[112.67581177 -299.64459229]
[111.11528778 -284.72598267]
[109.66587067 -269.79617310]
[108.32763672 -254.85600281]
[107.99266052 -239.85974121]
[108.66244507 -224.87471008]
[109.33222961 -209.88966370]
[110.00201416 -194.90463257]
[110.67180634 -179.91958618]
[113.01312256 -177.28320312]
[114.19380951 -173.38179016]
[113.63320160 -168.77320862]
[111.02174377 -164.25354004]
[111.02174377 -149.25354004]
[111.02174377 -134.25354004]
[111.02174377 -119.25354004]
[114.16523743 -112.56473541]
[110.90840912 -104.03063202]
[110.68508148 -89.03229523]
[110.46175385 -74.03395844]
[119.82247925 -59.18997574]
[110.24779510 -43.46080399]
[110.24779510 -28.46080208]
[110.24779510 -13.46080303]
[110.24779510 1.53919697]
[110.24779510 16.53919792]
[110.24779510 31.53919792]
[112.46906281 34.27750015]
[113.47436523 38.22774506]
[112.70852661 42.80669403]
[109.89785767 47.20524216]
[109.22807312 62.19028091]
[108.55828857 77.17531586]
[107.88850403 92.16035461]
[119.66014862 82.86367798]
[134.57316589 84.47672272]
[144.08470154 96.07546234]
[142.74610901 111.01561737]
[131.32420349 120.73878479]
[116.36196136 119.67509460]
[106.43075562 108.43476868]
[104.42674255 123.30030060]
[102.42272949 138.16583252]
[100.41871643 153.03135681]
[98.52542114 167.91139221]
[96.74295807 182.80511475]
[94.96049500 197.69882202]
[97.04795837 206.59153748]
[93.03900909 212.80041504]
[91.03499603 227.66593933]
[89.03098297 242.53146362]
[87.02696991 257.39700317]
[92.85118866 272.10714722]
[83.48287964 283.68661499]
[81.47886658 298.55215454]
[81.47886658 313.55215454]
[83.48287964 328.41769409]
[85.48689270 343.28320312]
[87.49090576 358.14874268]
[89.49491882 373.01425171]
[91.49893188 387.87979126]
[98.22596741 374.47280884]
[110.35895538 365.65292358]
[125.18735504 363.39047241]
[139.39846802 368.19094849]
[149.81747437 378.98187256]
[154.11677551 393.35253906]
[151.33587646 408.09249878]
[142.09602356 419.90881348]
[128.46145630 426.16171265]
[113.47814941 425.45422363]
[100.49342346 417.94445801]
[92.40808105 405.31005859]
[91.96147156 420.30340576]
[91.51486206 435.29675293]
[103.01699829 442.89227295]
[109.21489716 455.08261108]
[108.58501434 468.63519287]
[101.39870453 480.01507568]
[89.62348175 486.30682373]
[88.95369720 501.29187012]
[88.28391266 516.27691650]
[95.39728546 530.40881348]
[87.09940338 542.77789307]
[86.42961884 557.76293945]
[98.64689636 567.32940674]
[102.87545776 582.25921631]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 208]
[7 207]
[9 205]
[10 204]
[11 203]
[15 198]
[16 197]
[17 196]
[18 184]
[19 183]
[20 182]
[21 181]
[22 180]
[23 179]
[42 178]
[43 177]
[45 175]
[46 174]
[47 173]
[48 172]
[49 170]
[50 169]
[51 168]
[53 167]
[54 166]
[55 165]
[56 164]
[57 157]
[58 156]
[59 155]
[60 154]
[61 150]
[62 149]
[63 148]
[64 147]
[65 146]
[66 145]
[69 143]
[70 142]
[71 141]
[72 139]
[73 138]
[74 137]
[75 136]
[76 132]
[77 131]
[78 130]
[79 129]
[80 128]
[90 127]
[91 126]
[93 125]
[94 124]
[95 123]
[96 122]
[98 120]
[99 119]
[100 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
