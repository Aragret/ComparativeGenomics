%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[41.99354935 613.38250732]
[32.31380844 601.58142090]
[28.72130585 586.74713135]
[31.92933083 571.82495117]
[41.30093002 559.77770996]
[54.97536850 552.99737549]
[54.75204086 537.99902344]
[54.52871323 523.00073242]
[46.60277939 510.39004517]
[54.13375854 496.47619629]
[53.91043091 481.47787476]
[53.68710327 466.47952271]
[45.76116943 453.86886597]
[53.29214859 439.95501709]
[53.06882095 424.95669556]
[52.62221527 409.96334839]
[51.95243073 394.97830200]
[43.65454483 382.60922241]
[50.76791763 368.47732544]
[49.98659515 353.49768066]
[49.09377670 338.52426147]
[48.20096207 323.55087280]
[41.12325668 336.77606201]
[29.32843399 346.04333496]
[14.80413437 349.79095459]
[-0.00204475 347.38742065]
[-12.59500217 339.23773193]
[-20.85260391 326.71527100]
[-23.38329697 311.93029785]
[-19.76061630 297.37432861]
[-10.59504890 285.50030518]
[2.56884861 278.30920410]
[17.51272774 277.01287842]
[31.71828079 281.82974243]
[42.79162598 291.94808960]
[48.86705017 305.66442871]
[50.87106323 290.79888916]
[44.90350342 277.15200806]
[54.41515350 264.50927734]
[56.41917038 249.64373779]
[58.42318344 234.77821350]
[47.12820053 244.64854431]
[32.19952774 246.10960388]
[19.20518875 238.61647034]
[12.99175072 224.96386719]
[15.87667370 210.24391174]
[26.78395081 199.94676208]
[41.64543915 197.91300964]
[54.91817093 204.90118408]
[61.65192413 218.30603027]
[65.40822601 203.78396606]
[61.10462189 189.52465820]
[72.05123138 178.10176086]
[75.80752563 163.57971191]
[79.56382751 149.05764771]
[83.32012939 134.53558350]
[87.07643127 120.01352692]
[90.83273315 105.49147034]
[92.94735718 90.64127350]
[93.39395905 75.64791870]
[93.84056854 60.65457153]
[79.33816528 53.27796555]
[69.53956604 40.36165619]
[66.36602783 24.52218246]
[70.40314484 8.94061279]
[80.79354858 -3.27631211]
[95.41838837 -9.71561337]
[95.64171600 -24.71395111]
[95.86504364 -39.71228790]
[96.08837128 -54.71062469]
[96.31169891 -69.70896149]
[85.58411407 -81.00305939]
[86.02425385 -96.21031952]
[96.85755920 -106.36783600]
[97.08088684 -121.36617279]
[97.30421448 -136.36451721]
[97.52754211 -151.36285400]
[97.75086975 -166.36119080]
[97.97419739 -181.35952759]
[90.44321442 -195.27336121]
[98.36914825 -207.88403320]
[89.02970886 -223.75401306]
[98.61040497 -238.45698547]
[98.61040497 -253.45698547]
[90.87310028 -267.25714111]
[98.61040497 -279.98443604]
[95.48099518 -288.56607056]
[98.72373199 -295.20733643]
[98.94705963 -310.20568848]
[99.17038727 -325.20401001]
[99.39371490 -340.20236206]
[99.39371490 -355.20236206]
[99.17038727 -370.20068359]
[98.94705963 -385.19903564]
[95.69023132 -393.73312378]
[98.83373260 -400.42193604]
[98.83373260 -415.42193604]
[91.09642792 -429.22210693]
[98.83373260 -441.94937134]
[98.83373260 -456.94937134]
[85.49259949 -464.55923462]
[77.75762939 -477.82821655]
[77.70948792 -493.18704224]
[85.36112213 -506.50424194]
[98.65428162 -514.19757080]
[114.01317596 -514.19757080]
[127.30633545 -506.50424194]
[134.95797729 -493.18704224]
[134.90982056 -477.82821655]
[127.17485809 -464.55923462]
[113.83373260 -456.94937134]
[113.83373260 -441.94937134]
[121.57102966 -429.22210693]
[113.83373260 -415.42193604]
[113.83373260 -400.42193604]
[113.94539642 -385.42236328]
[114.16872406 -370.42401123]
[114.39205170 -355.42568970]
[117.13425446 -351.51550293]
[117.44923401 -345.84121704]
[114.39205170 -339.97903442]
[114.16872406 -324.98068237]
[113.94539642 -309.98236084]
[113.72206879 -294.98400879]
[113.61040497 -279.98443604]
[121.34770203 -267.25714111]
[113.61040497 -253.45698547]
[113.61040497 -238.45698547]
[121.93936157 -229.68457031]
[122.06211853 -217.18783569]
[113.36748505 -207.66070557]
[120.91443634 -194.81964111]
[112.97253418 -181.13619995]
[112.74920654 -166.13786316]
[112.52587891 -151.13952637]
[112.30255127 -136.14118958]
[112.07922363 -121.14284515]
[111.85589600 -106.14450836]
[122.38196564 -95.66895294]
[122.36914062 -80.45532227]
[111.31003571 -69.48563385]
[111.08670807 -54.48729706]
[110.86338043 -39.48896027]
[110.64005280 -24.49062347]
[110.41672516 -9.49228573]
[123.11529541 -3.90529180]
[132.75573730 6.13133001]
[137.85873413 19.12512779]
[137.62310791 33.12638092]
[132.05140686 46.02063370]
[121.95455170 55.84802628]
[108.83391571 61.10117722]
[108.38731384 76.09452820]
[107.94070435 91.08787537]
[115.74847412 78.28011322]
[127.61122894 69.09997559]
[141.96823120 64.75526428]
[156.93057251 65.81760406]
[170.52967834 72.14722443]
[180.97637939 82.91135406]
[186.89620972 96.69378662]
[187.51033020 111.68121338]
[182.73794556 125.90177155]
[173.20692444 137.48449707]
[160.17124939 144.90550232]
[145.34599304 147.18841553]
[130.68165588 144.03286743]
[118.10760498 135.85404968]
[109.27816010 123.72801208]
[105.35478973 109.24777222]
[101.59848785 123.76982880]
[97.84219360 138.29188538]
[94.08589172 152.81394958]
[90.32958984 167.33601379]
[86.57328796 181.85806274]
[90.60821533 197.15609741]
[79.93028259 207.54026794]
[76.17398071 222.06233215]
[73.28871155 236.78222656]
[71.28469849 251.64775085]
[69.28068542 266.51327515]
[75.10490417 281.22344971]
[65.73659515 292.80291748]
[63.73257828 307.66842651]
[63.17436981 322.65805054]
[64.06718445 337.63146973]
[64.95999908 352.60485840]
[68.59465027 360.98501587]
[65.75295258 367.80752563]
[74.09874725 381.24844360]
[66.93746948 394.30850220]
[67.60725403 409.29354858]
[70.83761597 415.06210327]
[70.69172668 420.74328613]
[68.06715393 424.73336792]
[68.29048157 439.73168945]
[76.23239136 453.41513062]
[68.68544006 466.25619507]
[68.90876770 481.25454712]
[69.13209534 496.25286865]
[77.07400513 509.93630981]
[69.52704620 522.77740479]
[69.75037384 537.77569580]
[69.97370148 552.77404785]
[83.84395599 559.14422607]
[93.57009125 570.90710449]
[97.22098541 585.72711182]
[94.07174683 600.66180420]
[84.74765778 612.74584961]
[71.10002899 619.57995605]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 204]
[7 203]
[8 202]
[10 200]
[11 199]
[12 198]
[14 196]
[15 195]
[16 192]
[17 191]
[19 189]
[20 187]
[21 186]
[22 185]
[36 184]
[37 183]
[39 181]
[40 180]
[41 179]
[50 178]
[51 177]
[53 175]
[54 174]
[55 173]
[56 172]
[57 171]
[58 170]
[59 154]
[60 153]
[61 152]
[67 145]
[68 144]
[69 143]
[70 142]
[71 141]
[74 138]
[75 137]
[76 136]
[77 135]
[78 134]
[79 133]
[81 131]
[83 128]
[84 127]
[86 125]
[88 124]
[89 123]
[90 122]
[91 121]
[92 118]
[93 117]
[94 116]
[96 115]
[97 114]
[99 112]
[100 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
