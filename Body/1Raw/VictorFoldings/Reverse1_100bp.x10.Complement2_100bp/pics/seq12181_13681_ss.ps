%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUAGGAAAUUUUCAACUCUUUCGGUACAACAAUCUGUACCCCCGUACUCAAUCGUCAAGAACACUCGAAAGAGCCAUUUAUUCCCCAGCAUUCGGAGAxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[38.43823624 650.63543701]
[41.67905426 665.33178711]
[41.99017715 680.37805176]
[39.35964203 695.19580078]
[33.88856888 709.21557617]
[25.78724098 721.89843750]
[15.36705875 732.75689697]
[3.02854323 741.37359619]
[-10.75404549 747.41729736]
[-25.45094109 750.65570068]
[-40.49723434 750.96441650]
[-55.31458664 748.33148193]
[-69.33345795 742.85815430]
[-82.01499939 734.75476074]
[-92.87176514 724.33282471]
[-101.48645020 711.99291992]
[-107.52793884 698.20935059]
[-110.76399994 683.51190186]
[-111.07025146 668.46557617]
[-108.43492126 653.64868164]
[-102.95930481 639.63067627]
[-94.85387421 626.95043945]
[-84.43017578 616.09533691]
[-72.08887482 607.48266602]
[-58.30432892 601.44342041]
[-43.60638428 598.20971680]
[-28.55999184 597.90594482]
[-13.74349403 600.54364014]
[-8.28813648 586.57086182]
[-2.83277965 572.59802246]
[2.62257743 558.62524414]
[8.07793427 544.65246582]
[13.53329182 530.67962646]
[18.98864937 516.70684814]
[23.60265732 502.43411255]
[27.35895920 487.91207886]
[31.11525917 473.39001465]
[21.51483917 462.03350830]
[20.42964172 447.02395630]
[28.48487091 434.10241699]
[42.76925278 428.33505249]
[46.52555466 413.81298828]
[50.28185654 399.29092407]
[54.03815460 384.76885986]
[57.79445648 370.24679565]
[52.20094681 353.61312866]
[65.21697235 340.58758545]
[68.75664520 326.01119995]
[72.29631805 311.43481445]
[66.45578003 294.88626099]
[79.27642822 281.66836548]
[82.59868622 267.04092407]
[85.92094421 252.41345215]
[89.24320221 237.78599548]
[92.56546783 223.15853882]
[95.88772583 208.53106689]
[97.11470032 193.58134460]
[96.22188568 178.60794067]
[87.38555145 170.34683228]
[86.51918793 157.87954712]
[94.63134003 147.85179138]
[93.96155548 132.86676025]
[93.29177094 117.88172150]
[82.66996765 108.02659607]
[82.02297211 93.55152130]
[91.72319031 82.78806305]
[88.21371460 74.35471344]
[91.15666962 67.57527924]
[90.71006012 52.58192444]
[90.26345825 37.58857727]
[79.04225922 26.78475952]
[78.80292511 11.57300758]
[89.17186737 0.94189078]
[80.33634949 -8.45473099]
[80.27304077 -20.95192146]
[88.47046661 -29.84735680]
[88.24713898 -44.84569550]
[74.93890381 -52.38480759]
[67.24194336 -65.48647308]
[67.13703156 -80.58135223]
[74.55220032 -93.61481476]
[87.40896606 -101.13606262]
[87.18563843 -116.13439941]
[86.96231079 -131.13273621]
[86.62733459 -146.12899780]
[86.18072510 -161.12234497]
[85.73412323 -176.11569214]
[85.28751373 -191.10903931]
[84.84091187 -206.10240173]
[84.39430237 -221.09574890]
[83.72451782 -236.08078003]
[82.83170319 -251.05418396]
[81.93888855 -266.02758789]
[81.04607391 -281.00100708]
[80.15325928 -295.97439575]
[65.61865997 -300.27804565]
[53.43438339 -309.29577637]
[45.07173920 -321.93862915]
[41.54055786 -336.67996216]
[43.26724243 -351.73965454]
[50.04328918 -365.29916382]
[61.05046082 -375.72116089]
[74.95958710 -381.74713135]
[90.09107208 -382.64935303]
[104.61770630 -378.31893921]
[116.78534698 -369.27877808]
[125.12467957 -356.62054443]
[128.62869263 -341.87274170]
[126.87425232 -326.81625366]
[120.07322693 -313.26922607]
[109.04686737 -302.86752319]
[95.12666321 -296.86721802]
[96.01947784 -281.89382935]
[96.91229248 -266.92041016]
[97.80510712 -251.94700623]
[98.69792175 -236.97360229]
[101.61199188 -233.18978882]
[102.18002319 -227.53520203]
[99.38765717 -221.54235840]
[99.83425903 -206.54899597]
[100.28086853 -191.55564880]
[100.72747040 -176.56230164]
[101.17407990 -161.56895447]
[101.62068176 -146.57560730]
[104.96194458 -139.98335266]
[101.96064758 -131.35606384]
[102.18397522 -116.35772705]
[102.40730286 -101.35939026]
[115.48230743 -94.22427368]
[123.28224182 -81.41735840]
[123.62680054 -66.32604980]
[116.32334137 -53.00102997]
[103.24547577 -45.06902313]
[103.46880341 -30.07068443]
[113.26734161 -15.51198959]
[104.16521454 0.49528489]
[115.14854431 10.49038315]
[115.81505585 25.68940926]
[105.25680542 37.14197159]
[105.70341492 52.13531876]
[106.15001678 67.12866974]
[106.70822906 82.11827850]
[117.33003235 91.97340393]
[117.97702789 106.44847870]
[108.27680969 117.21193695]
[108.94659424 132.19697571]
[109.61637878 147.18200684]
[119.88385773 162.46797180]
[111.19528961 177.71511841]
[112.08810425 192.68852234]
[118.19287109 178.98699951]
[128.01972961 167.65417480]
[140.71856689 159.67047119]
[155.19079590 155.72653198]
[170.18443298 156.16357422]
[184.40235901 160.94377136]
[196.61460876 169.65359497]
[205.76467896 181.53956604]
[211.06101990 195.57341003]
[212.04541016 210.54107666]
[208.63272095 225.14770508]
[201.11817932 238.12966919]
[190.15185547 248.36392212]
[176.68244934 254.96507263]
[161.87521362 257.36206055]
[147.01110840 255.34754944]
[133.37602234 249.09577942]
[122.14954376 239.14759827]
[114.30286407 226.36364746]
[110.51518250 211.85333252]
[107.19292450 226.48078918]
[103.87066650 241.10824585]
[100.54840851 255.73571777]
[97.22614288 270.36315918]
[93.90388489 284.99063110]
[100.10477448 296.30044556]
[97.03652191 308.41528320]
[86.87268829 314.97448730]
[83.33301544 329.55087280]
[79.79335022 344.12725830]
[85.82515717 355.52813721]
[82.57687378 367.59594727]
[72.31651306 374.00311279]
[68.56021881 388.52514648]
[64.80391693 403.04721069]
[61.04761505 417.56927490]
[57.29131317 432.09133911]
[66.98764801 444.06161499]
[67.76715851 459.26837158]
[59.54020691 471.86923218]
[45.63731766 477.14630127]
[41.88101959 491.66836548]
[38.12471771 506.19042969]
[50.51256943 497.73223877]
[65.50908661 498.05551147]
[77.52093506 507.03967285]
[82.06799316 521.33386230]
[77.45432281 535.60675049]
[65.40071106 544.53479004]
[50.40285110 544.78814697]
[38.05457687 536.27227783]
[32.96144485 522.16223145]
[27.50609016 536.13500977]
[22.05073166 550.10778809]
[16.59537506 564.08062744]
[11.14001846 578.05340576]
[5.68466091 592.02618408]
[0.22930408 605.99902344]
[12.91346741 614.09826660]
[23.77360725 624.51672363]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 208]
[29 207]
[30 206]
[31 205]
[32 204]
[33 203]
[34 202]
[35 193]
[36 192]
[37 191]
[41 187]
[42 186]
[43 185]
[44 184]
[45 183]
[47 180]
[48 179]
[49 178]
[51 175]
[52 174]
[53 173]
[54 172]
[55 171]
[56 170]
[57 150]
[58 149]
[61 147]
[62 146]
[63 145]
[66 142]
[68 141]
[69 140]
[70 139]
[73 136]
[76 134]
[77 133]
[82 128]
[83 127]
[84 126]
[85 124]
[86 123]
[87 122]
[88 121]
[89 120]
[90 119]
[91 116]
[92 115]
[93 114]
[94 113]
[95 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
