%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUACUCCCCGUAAACCAUUUAUACUAAUAGUAUUAAAUUACUCAGCUUUAGUAAGCAAAACAAAUUUGAUAUAUGGUUAAGCCAAGUCAGAUUAGGAAAAxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[120.74017334 539.86853027]
[125.83861542 525.71771240]
[133.38203430 512.70477295]
[143.12794495 501.24801636]
[154.76304626 491.71572876]
[167.91333008 484.41436768]
[163.08732605 470.21191406]
[158.26133728 456.00946045]
[153.43533325 441.80700684]
[148.50373840 427.64086914]
[143.46682739 413.51184082]
[138.42991638 399.38281250]
[133.39299011 385.25378418]
[128.18595886 380.00891113]
[128.38796997 370.87670898]
[123.56198120 356.67425537]
[118.73597717 342.47180176]
[113.90998077 328.26934814]
[111.41644287 343.06063843]
[104.31322479 356.27215576]
[93.34995270 366.50967407]
[79.68360138 372.69277954]
[64.75641632 374.16897583]
[50.14369965 370.78247070]
[37.38756561 362.89065552]
[27.83419418 351.32632446]
[22.49178314 337.30996704]
[21.92412567 322.32070923]
[26.19112778 307.94042969]
[34.84248734 295.68667603]
[46.96519852 286.85266113]
[61.27992630 282.37063599]
[76.27600861 282.71362305]
[90.37086487 287.84539795]
[102.07703400 297.22439575]
[110.15921021 309.86099243]
[109.04356384 294.90255737]
[97.62487793 285.40786743]
[96.28036499 270.25375366]
[106.31669617 258.34115601]
[105.20104980 243.38270569]
[103.97407532 228.43296814]
[102.63584137 213.49278259]
[101.29760742 198.55259705]
[99.95937347 183.61241150]
[98.62113953 168.67222595]
[97.28290558 153.73204041]
[95.94467163 138.79185486]
[94.60643768 123.85167694]
[93.26820374 108.91149139]
[91.81877899 93.98168182]
[90.25825500 79.06307983]
[80.74832916 70.34963989]
[79.75569153 57.89176941]
[87.26880646 48.41127777]
[85.93057251 33.47109222]
[76.55142212 24.61702919]
[75.74437714 12.14576340]
[83.39780426 2.77817988]
[74.65552521 -10.40829563]
[81.42478180 -23.67578888]
[80.30913544 -38.63424301]
[79.19348907 -53.59269714]
[78.07784271 -68.55114746]
[64.34446716 -75.28477478]
[55.88132858 -87.90508270]
[54.87813187 -102.96694946]
[61.50439072 -116.41867065]
[73.89069366 -124.69182587]
[72.77503967 -139.65028381]
[71.65939331 -154.60873413]
[56.90711975 -157.81036377]
[43.66810226 -165.03190613]
[33.01116562 -175.68060303]
[25.79393768 -188.88742065]
[22.59381485 -203.57792664]
[23.66179466 -218.55976868]
[28.90279961 -232.61938477]
[37.88407135 -244.62031555]
[49.87091064 -253.59512329]
[63.88674164 -258.82330322]
[62.77109528 -273.78173828]
[61.65544510 -288.74020386]
[60.53979492 -303.69863892]
[59.42414856 -318.65710449]
[48.70610046 -333.63058472]
[56.93685150 -349.12966919]
[55.59861755 -364.06985474]
[54.26038361 -379.01004028]
[52.92214966 -393.95022583]
[38.02017593 -396.22937012]
[24.09692955 -402.00921631]
[11.96189404 -410.95373535]
[2.32058406 -422.54290771]
[-4.26646757 -436.10290527]
[-7.41629839 -450.84542847]
[-6.94578123 -465.91336060]
[-2.88227129 -480.43063354]
[4.53798389 -493.55325317]
[14.88358116 -504.51828003]
[27.55303955 -512.68823242]
[41.80977631 -517.58813477]
[56.82492065 -518.93310547]
[71.72550964 -516.64489746]
[85.64524841 -510.85659790]
[97.77485657 -501.90475464]
[107.40914154 -490.30975342]
[113.98796844 -476.74572754]
[117.12886047 -462.00131226]
[116.64920807 -446.93368530]
[112.57690430 -432.41885376]
[105.14868927 -419.30075073]
[94.79644775 -408.34197998]
[82.12203979 -400.17968750]
[67.86233521 -395.28845215]
[69.20056915 -380.34826660]
[70.53880310 -365.40808105]
[71.87703705 -350.46789551]
[80.95541382 -342.47354126]
[82.19259644 -330.03759766]
[74.38259888 -319.77273560]
[75.49825287 -304.81430054]
[76.61389923 -289.85583496]
[77.72954559 -274.89739990]
[78.84519196 -259.93893433]
[93.48151398 -256.84774780]
[106.66706085 -249.75036621]
[117.32920074 -239.21450806]
[124.59783936 -226.08790588]
[127.87642670 -211.43023682]
[126.89092255 -196.42755127]
[121.71265411 -182.29624939]
[112.75326538 -170.18449402]
[100.73197174 -161.07896423]
[86.61784363 -155.72438049]
[87.73349762 -140.76593018]
[88.84914398 -125.80747986]
[102.32565308 -119.46324921]
[110.87404633 -107.14330292]
[112.11624146 -92.09925842]
[105.61885071 -78.36315155]
[93.03629303 -69.66680145]
[94.15193939 -54.70834351]
[95.26759338 -39.74989319]
[96.38323975 -24.79143906]
[105.04572296 -12.67489147]
[98.35626221 1.66253114]
[109.00397491 15.61219501]
[100.87075806 32.13285828]
[102.20899200 47.07304382]
[113.06320953 60.86263275]
[105.17686462 77.50255585]
[106.73738861 92.42115784]
[110.64142609 99.47318268]
[108.20838165 107.57325745]
[109.54661560 122.51344299]
[110.88484955 137.45362854]
[112.22309113 152.39381409]
[113.56132507 167.33399963]
[114.89955902 182.27418518]
[116.23779297 197.21437073]
[117.57602692 212.15455627]
[118.91426086 227.09474182]
[122.79680634 235.36297607]
[120.15950012 242.26705933]
[121.27515411 257.22549438]
[132.96757507 267.51748657]
[133.88591003 282.70339966]
[124.00201416 293.78689575]
[125.11766052 308.74536133]
[128.11244202 323.44335938]
[132.93843079 337.64581299]
[137.76443481 351.84826660]
[142.59042358 366.05072021]
[147.52201843 380.21685791]
[152.55894470 394.34588623]
[157.59585571 408.47491455]
[162.63276672 422.60394287]
[168.46214294 429.63647461]
[167.63778687 436.98101807]
[172.46379089 451.18347168]
[177.28979492 465.38592529]
[182.11578369 479.58837891]
[196.99201965 477.36633301]
[212.02593994 477.83645630]
[226.73426819 480.98364258]
[240.64419556 486.70672607]
[253.30857849 494.82174683]
[264.32028198 505.06777954]
[273.32537842 517.11553955]
[280.03436279 530.57769775]
[284.23153687 545.02148438]
[285.78204346 559.98260498]
[284.63598633 574.98016357]
[280.83023071 589.53204346]
[274.48709106 603.17034912]
[265.81051636 615.45678711]
[255.07940674 625.99639893]
[242.63870239 634.45031738]
[228.88833618 640.54681396]
[214.27032471 644.08990479]
[199.25456238 644.96569824]
[184.32377625 643.14599609]
[169.95790100 638.68939209]
[156.61874390 631.73907471]
[144.73512268 622.51849365]
[134.68902588 611.32409668]
[126.80339050 598.51562500]
[121.33172607 584.50488281]
[118.44991302 569.74224854]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 183]
[7 182]
[8 181]
[9 180]
[10 178]
[11 177]
[12 176]
[13 175]
[15 174]
[16 173]
[17 172]
[18 171]
[36 170]
[37 169]
[40 166]
[41 165]
[42 163]
[43 162]
[44 161]
[45 160]
[46 159]
[47 158]
[48 157]
[49 156]
[50 155]
[51 153]
[52 152]
[55 150]
[56 149]
[59 147]
[61 145]
[62 144]
[63 143]
[64 142]
[69 137]
[70 136]
[71 135]
[81 125]
[82 124]
[83 123]
[84 122]
[85 121]
[87 118]
[88 117]
[89 116]
[90 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
