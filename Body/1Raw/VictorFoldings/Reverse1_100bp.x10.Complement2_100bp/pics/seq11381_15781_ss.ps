%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGGCGGAUCAAAAUUCUCAUGACGCCGUUCAUGAUAACUGGGUCGCUACCCCCGAAGCUGUACCCGAAAUCCCUCAGUAUUCACCUCAGGCAUUUCUCxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[174.88996887 409.74758911]
[174.56866455 394.73953247]
[175.67543030 379.76892090]
[178.20025635 364.97128296]
[182.12026978 350.48065186]
[187.39996338 336.42825317]
[193.99153137 322.94137573]
[201.83528137 310.14215088]
[210.86016846 298.14648438]
[220.98445129 287.06298828]
[232.11647034 276.99209595]
[223.15577698 264.96270752]
[214.19508362 252.93333435]
[205.14508057 240.97100830]
[191.25546265 235.59255981]
[188.98313904 219.93539429]
[179.84434509 208.04075623]
[170.70553589 196.14611816]
[161.30339050 184.45854187]
[151.64257812 172.98384094]
[141.98176575 161.50914001]
[132.32095337 150.03443909]
[122.66014862 138.55973816]
[108.54421234 133.80686951]
[105.57503510 118.26677704]
[91.14793396 116.92327881]
[81.81590271 105.83908081]
[82.95026398 91.39402771]
[73.28945160 79.91933441]
[68.38082886 78.14380646]
[64.98379517 74.97939301]
[63.37427902 71.23446655]
[63.46736908 67.70973969]
[54.32856369 55.81510925]
[45.18976212 43.92047501]
[36.05096054 32.02584457]
[30.09728050 29.15091515]
[26.96015930 24.41219139]
[26.82344246 19.63826752]
[18.04283905 7.47681093]
[3.69146013 0.81734276]
[2.51437426 -14.03067875]
[-6.26622915 -26.19213486]
[-20.61760712 -32.85160065]
[-21.79469299 -47.69962311]
[-34.38029099 -50.52195740]
[-41.44330597 -60.83203125]
[-39.64731979 -72.79450989]
[-48.24588394 -85.08535004]
[-56.84444809 -97.37619019]
[-65.44300842 -109.66703033]
[-74.04157257 -121.95786285]
[-87.09302521 -114.54206848]
[-100.78156281 -108.38102722]
[-114.98689270 -103.52889252]
[-129.58416748 -100.02829742]
[-144.44509888 -97.91001129]
[-159.43908691 -97.19264984]
[-174.43437195 -97.88251495]
[-189.29916382 -99.97354126]
[-203.90283203 -103.44735718]
[-218.11703491 -108.27343750]
[-231.81684875 -114.40936279]
[-244.88188171 -121.80120850]
[-257.19729614 -130.38401794]
[-268.65490723 -140.08236694]
[-279.15399170 -150.81100464]
[-288.60226440 -162.47567749]
[-296.91671753 -174.97384644]
[-304.02429199 -188.19567871]
[-309.86248779 -202.02499390]
[-314.38003540 -216.34024048]
[-317.53723145 -231.01560974]
[-319.30627441 -245.92214966]
[-319.67169189 -260.92886353]
[-318.63021851 -275.90380859]
[-316.19104004 -290.71545410]
[-312.37554932 -305.23361206]
[-307.21734619 -319.33068848]
[-300.76171875 -332.88278198]
[-293.06539917 -345.77081299]
[-284.19601440 -357.88150024]
[-274.23153687 -369.10839844]
[-263.25955200 -379.35290527]
[-251.37643433 -388.52493286]
[-238.68664551 -396.54388428]
[-225.30169678 -403.33929443]
[-211.33921814 -408.85147095]
[-196.92193604 -413.03192139]
[-182.17652893 -415.84393311]
[-167.23258972 -417.26281738]
[-152.22145081 -417.27606201]
[-137.27502441 -415.88354492]
[-122.52468872 -413.09756470]
[-108.10004425 -408.94253540]
[-94.12786865 -403.45501709]
[-80.73095703 -396.68322754]
[-68.02704620 -388.68667603]
[-56.12776566 -379.53561401]
[-45.13770294 -369.31048584]
[-35.15343857 -358.10116577]
[-26.26271629 -346.00616455]
[-18.54366875 -333.13174438]
[-12.06413174 -319.59106445]
[-6.88105106 -305.50311279]
[-3.03997564 -290.99169922]
[-0.57466233 -276.18438721]
[0.49322340 -261.21127319]
[0.15429662 -246.20396423]
[-1.58846402 -231.29432678]
[-4.71974277 -216.61340332]
[-9.21202087 -202.29020691]
[-15.02582073 -188.45062256]
[-22.11004639 -175.21626282]
[-30.40244293 -162.70344543]
[-39.83013535 -151.02212524]
[-50.31026459 -140.27497864]
[-61.75073624 -130.55642700]
[-53.15217209 -118.26559448]
[-44.55360794 -105.97475433]
[-35.95504379 -93.68391418]
[-27.35648155 -81.39307404]
[-11.07787132 -74.83763885]
[-9.63323784 -56.48022842]
[4.09009314 -50.69062805]
[5.89522696 -34.97273636]
[14.67582989 -22.81128120]
[28.39916039 -17.02168274]
[30.20429420 -1.30379236]
[38.98489761 10.85766315]
[47.94559479 22.88704109]
[57.08439636 34.78167343]
[66.22319794 46.67630768]
[75.36199951 58.57093811]
[84.76415253 70.25852203]
[94.42496490 81.73322296]
[108.85206604 83.07672119]
[118.18409729 94.16091919]
[117.04973602 108.60597229]
[131.85667419 114.17958832]
[134.13484192 128.89892578]
[143.79565430 140.37362671]
[153.45646667 151.84832764]
[163.11727905 163.32302856]
[172.77809143 174.79772949]
[177.68670654 176.57325745]
[181.08374023 179.73767090]
[182.69325256 183.48260498]
[182.60017395 187.00732422]
[191.73896790 198.90196228]
[200.87777710 210.79658508]
[215.42106628 217.02580261]
[217.03971863 231.83219910]
[224.74964905 236.73063660]
[226.22445679 243.97264099]
[235.18515015 256.00201416]
[244.14584351 268.03140259]
[256.98208618 260.24832153]
[270.50000000 253.72068787]
[284.57723999 248.50756836]
[299.08624268 244.65620422]
[313.89569092 242.20146179]
[328.87136841 241.16558838]
[343.87774658 241.55793762]
[358.77883911 243.37498474]
[373.43975830 246.60025024]
[387.72772217 251.20452881]
[401.51327515 257.14614868]
[414.67163086 264.37127686]
[427.08361816 272.81448364]
[438.63677979 282.39929199]
[449.22656250 293.03890991]
[458.75698853 304.63699341]
[467.14178467 317.08850098]
[474.30502319 330.28063965]
[480.18182373 344.09399414]
[484.71893311 358.40338135]
[487.87530518 373.07928467]
[489.62231445 387.98876953]
[489.94415283 402.99682617]
[488.83795166 417.96749878]
[486.31365967 432.76522827]
[482.39416504 447.25598145]
[477.11499023 461.30856323]
[470.52392578 474.79568481]
[462.68063354 487.59521484]
[453.65618896 499.59121704]
[443.53228760 510.67504883]
[432.40063477 520.74633789]
[420.36206055 529.71392822]
[407.52554321 537.49652100]
[394.00738525 544.02368164]
[379.92996216 549.23626709]
[365.42080688 553.08709717]
[350.61129761 555.54132080]
[335.63555908 556.57666016]
[320.62921143 556.18371582]
[305.72814941 554.36614990]
[291.06735229 551.14038086]
[276.77960205 546.53552246]
[262.99423218 540.59344482]
[249.83613586 533.36785889]
[237.42446899 524.92419434]
[225.87164307 515.33892822]
[215.28225708 504.69891357]
[205.75224304 493.10049438]
[197.36790466 480.64868164]
[190.20515442 467.45626831]
[184.32887268 453.64273071]
[179.79226685 439.33316040]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 157]
[12 156]
[13 155]
[14 153]
[16 151]
[17 150]
[18 149]
[19 145]
[20 144]
[21 143]
[22 142]
[23 141]
[25 139]
[28 136]
[29 135]
[33 134]
[34 133]
[35 132]
[36 131]
[39 130]
[40 129]
[42 127]
[43 126]
[45 124]
[48 122]
[49 121]
[50 120]
[51 119]
[52 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
