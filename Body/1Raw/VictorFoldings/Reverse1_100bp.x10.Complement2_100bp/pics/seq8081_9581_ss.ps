%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxGGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUU\
) } def
/len { sequence length } bind def

/coor [
[204.99395752 457.23291016]
[213.80244446 445.05798340]
[224.28979492 434.29541016]
[236.23249817 425.17456055]
[228.95927429 412.05587769]
[221.68603516 398.93716431]
[214.41281128 385.81848145]
[207.13958740 372.69979858]
[192.79545593 368.85510254]
[185.23248291 355.65451050]
[189.36238098 340.63513184]
[182.08915710 327.51641846]
[174.81591797 314.39773560]
[167.54269409 301.27905273]
[160.26947021 288.16033936]
[157.10769653 302.82333374]
[146.00833130 312.91314697]
[131.11116028 314.66650391]
[117.97245789 307.42947388]
[111.49263763 293.90127563]
[114.08851624 279.12762451]
[124.79188538 268.61868286]
[139.61065674 266.29403687]
[153.01863098 273.02157593]
[147.35585022 259.13153076]
[141.69306946 245.24150085]
[136.03027344 231.35148621]
[130.36749268 217.46145630]
[124.70470428 203.57142639]
[117.90401459 216.94119263]
[103.68465424 221.71714783]
[90.19211578 215.16342163]
[85.15554047 201.03427124]
[91.46010590 187.42352295]
[105.49427032 182.12803650]
[119.21796417 188.18060303]
[114.81697083 173.84075928]
[101.57895660 167.11093140]
[96.91143799 152.63098145]
[104.06006622 138.79136658]
[99.65906525 124.45151520]
[95.25807190 110.11167145]
[90.75044250 95.80498505]
[86.13642883 81.53224945]
[72.07097626 80.15032196]
[59.63228989 73.53192139]
[50.68283463 62.70543671]
[46.54834366 49.32647705]
[47.82149124 35.42473602]
[54.27718353 23.09607124]
[64.91149139 14.18654346]
[60.51049805 -0.15330358]
[49.50210953 -6.87478065]
[46.13172531 -18.90907478]
[51.68094635 -29.65769005]
[47.49393463 -44.06147003]
[43.19981003 -58.43368530]
[38.79881287 -72.77352905]
[34.39781570 -87.11338043]
[29.99681664 -101.45322418]
[25.59581947 -115.79307556]
[21.19482040 -130.13291931]
[16.79382324 -144.47276306]
[5.34807444 -155.39546204]
[9.01067448 -169.83273315]
[4.60967636 -184.17257690]
[0.03767733 -188.94839478]
[-1.24375927 -194.48507690]
[0.29798853 -199.00526428]
[-3.67410779 -213.46978760]
[-7.64620399 -227.93431091]
[-11.61830044 -242.39883423]
[-26.48632240 -240.26689148]
[-41.50430679 -240.01527405]
[-56.43540573 -241.64793396]
[-71.04412842 -245.13914490]
[-85.10007477 -250.43382263]
[-98.38156128 -257.44845581]
[-110.67912292 -266.07244873]
[-121.79880524 -276.16976929]
[-131.56524658 -287.58117676]
[-139.82440186 -300.12667847]
[-146.44601440 -313.60842896]
[-151.32565308 -327.81378174]
[-154.38636780 -342.51873779]
[-155.57986450 -357.49133301]
[-154.88735962 -372.49545288]
[-152.31973267 -387.29446411]
[-147.91749573 -401.65493774]
[-141.75009155 -415.35043335]
[-133.91476440 -428.16491699]
[-124.53511047 -439.89630127]
[-113.75904846 -450.35952759]
[-101.75653076 -459.38964844]
[-88.71686554 -466.84420776]
[-74.84569550 -472.60562134]
[-60.36179352 -476.58303833]
[-45.49359512 -478.71371460]
[-30.47558594 -478.96408081]
[-15.54462719 -477.33016968]
[-0.93619996 -473.83773804]
[13.11929989 -468.54187012]
[26.40019798 -461.52609253]
[38.69703293 -452.90106201]
[49.81586838 -442.80282593]
[59.58134079 -431.39059448]
[67.83943939 -418.84439087]
[74.45992279 -405.36209106]
[79.33836365 -391.15631104]
[82.39784241 -376.45111084]
[83.59008789 -361.47842407]
[82.89630890 -346.47436523]
[80.32743835 -331.67556763]
[75.92399597 -317.31546021]
[69.75543976 -303.62048340]
[61.91903687 -290.80667114]
[52.53839111 -279.07608032]
[41.76144791 -268.61373901]
[29.75817490 -259.58462524]
[16.71787834 -252.13117981]
[2.84622383 -246.37092590]
[6.81831980 -231.90640259]
[10.79041576 -217.44187927]
[14.76251221 -202.97735596]
[18.94952393 -188.57357788]
[23.35052109 -174.23373413]
[34.48148346 -164.33671570]
[31.13367081 -148.87376404]
[35.53466797 -134.53392029]
[39.93566513 -120.19406891]
[44.33666611 -105.85422516]
[48.73766327 -91.51437378]
[53.13866043 -77.17453003]
[57.53965759 -62.83468246]
[62.50730896 -57.36254883]
[61.89771652 -48.24848175]
[66.08473206 -33.84469986]
[79.38871002 -22.40044212]
[74.85034180 -4.55430174]
[79.25134277 9.78554535]
[95.09230804 11.88660717]
[108.47987366 20.71762085]
[116.70587158 34.55295944]
[118.07981110 50.64868927]
[112.27606201 65.78672791]
[100.40916443 76.91824341]
[105.02317810 91.19097900]
[110.30205536 97.28244019]
[109.59791565 105.71067047]
[113.99891663 120.05052185]
[118.39990997 134.39036560]
[132.08145142 141.83706665]
[136.34040833 156.44239807]
[129.15681458 169.43975830]
[133.55781555 183.77961731]
[138.59472656 197.90864563]
[144.25752258 211.79866028]
[149.92030334 225.68869019]
[155.58308411 239.57872009]
[161.24588013 253.46875000]
[166.90866089 267.35876465]
[173.38815308 280.88711548]
[180.66139221 294.00582886]
[187.93461609 307.12451172]
[195.20783997 320.24319458]
[202.48107910 333.36190796]
[217.40748596 337.81613159]
[224.59669495 351.22396851]
[220.25827026 365.42654419]
[227.53150940 378.54525757]
[234.80473328 391.66394043]
[242.07795715 404.78262329]
[249.35119629 417.90133667]
[263.41390991 412.60433960]
[278.09802246 409.41140747]
[293.09054565 408.39065552]
[308.07189941 409.56378174]
[322.72280884 412.90579224]
[336.73092651 418.34545898]
[349.79772949 425.76687622]
[361.64462280 435.01177979]
[372.01916504 445.88317871]
[380.70016479 458.14929199]
[387.50262451 471.54870605]
[392.28152466 485.79580688]
[394.93499756 500.58691406]
[395.40652466 515.60675049]
[393.68603516 530.53515625]
[389.81015015 545.05401611]
[383.86157227 558.85369873]
[375.96704102 571.64019775]
[366.29483032 583.14086914]
[355.05111694 593.11071777]
[342.47555542 601.33709717]
[328.83621216 607.64471436]
[314.42379761 611.89910889]
[299.54550171 614.00958252]
[284.51846313 613.93121338]
[269.66299438 611.66564941]
[255.29574585 607.26110840]
[241.72293091 600.81158447]
[229.23385620 592.45446777]
[218.09475708 582.36798096]
[208.54304504 570.76696777]
[200.78230286 557.89886475]
[194.97798157 544.03784180]
[191.25376892 529.47937012]
[189.68907166 514.53387451]
[190.31723022 499.51974487]
[193.12486267 484.75711060]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 173]
[5 172]
[6 171]
[7 170]
[8 169]
[11 166]
[12 165]
[13 164]
[14 163]
[15 162]
[24 161]
[25 160]
[26 159]
[27 158]
[28 157]
[29 156]
[36 155]
[37 154]
[40 151]
[41 150]
[42 149]
[43 147]
[44 146]
[51 140]
[52 139]
[55 137]
[56 136]
[57 134]
[58 133]
[59 132]
[60 131]
[61 130]
[62 129]
[63 128]
[65 126]
[66 125]
[69 124]
[70 123]
[71 122]
[72 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
