%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[85.80506897 213.38879395]
[85.20960236 228.38404846]
[83.49520111 243.29287720]
[80.67144012 258.03189087]
[76.75412750 272.51867676]
[71.76516724 286.67221069]
[65.73245239 300.41333008]
[58.68972397 313.66519165]
[50.67637253 326.35372925]
[41.73720551 338.40789795]
[31.92222214 349.76037598]
[21.28630638 360.34759521]
[9.88894272 370.11041260]
[-2.20613098 378.99417114]
[-14.93127251 386.94924927]
[-28.21531677 393.93109131]
[-41.98397446 399.90069580]
[-56.16024399 404.82467651]
[-70.66484833 408.67550659]
[-85.41666412 411.43161011]
[-100.33319092 413.07760620]
[-115.33102417 413.60427856]
[-130.32626343 413.00866699]
[-145.23507690 411.29412842]
[-159.97407532 408.47024536]
[-174.46081543 404.55282593]
[-188.61430359 399.56372070]
[-202.35537720 393.53088379]
[-215.60719299 386.48803711]
[-228.29563904 378.47457886]
[-240.34974670 369.53530884]
[-251.70211792 359.72021484]
[-262.28924561 349.08422852]
[-272.05197144 337.68676758]
[-280.93563843 325.59161377]
[-288.89056396 312.86639404]
[-295.87231445 299.58230591]
[-301.84179688 285.81359863]
[-306.76565552 271.63726807]
[-310.61636353 257.13262939]
[-313.37234497 242.38079834]
[-315.01818848 227.46424866]
[-315.54473877 212.46641541]
[-314.94900513 197.47117615]
[-313.23434448 182.56237793]
[-310.41030884 167.82341003]
[-306.49273682 153.33670044]
[-301.50354004 139.18325806]
[-295.47058105 125.44223785]
[-288.42761230 112.19049072]
[-280.41403198 99.50211334]
[-271.47467041 87.44808197]
[-261.65948486 76.09579468]
[-251.02337646 65.50875092]
[-239.62583923 55.74615097]
[-227.53060913 46.86259079]
[-214.80532837 38.90775299]
[-201.52116394 31.92612839]
[-187.75239563 25.95675850]
[-173.57603455 21.03302574]
[-159.07136536 17.18246841]
[-144.31950378 14.42661953]
[-129.40295410 12.78089046]
[-114.40511322 12.25448608]
[-99.40987396 12.85034847]
[-84.50109100 14.56514740]
[-69.76215363 17.38929176]
[-55.27547073 21.30698776]
[-41.12207413 26.29632568]
[-27.38110542 32.32940292]
[-14.12941551 39.37248230]
[-1.44111371 47.38616943]
[10.61284161 56.32565308]
[21.96503830 66.14093781]
[32.55199051 76.77713776]
[42.31449127 88.17475891]
[51.19794464 100.27006531]
[59.15266800 112.99541473]
[72.43051147 106.01696777]
[85.70835876 99.03851318]
[93.33606720 87.32058716]
[107.31318665 87.68363953]
[120.43187714 80.41040802]
[133.38487244 72.84603119]
[146.33787537 65.28165436]
[159.29087830 57.71727371]
[172.24388123 50.15289688]
[185.19686890 42.58851624]
[178.41101074 29.20625496]
[172.42982483 15.44549465]
[167.27435303 1.35457373]
[162.96269226 -13.01701450]
[159.50999451 -27.61878777]
[156.92837524 -42.39945984]
[155.22689819 -57.30710602]
[154.41156006 -72.28936768]
[154.48522949 -87.29361725]
[155.44761658 -102.26715851]
[157.29534912 -117.15737915]
[160.02195740 -131.91198730]
[163.61785889 -146.47917175]
[168.07040405 -160.80772400]
[173.36396790 -174.84735107]
[179.47994995 -188.54873657]
[186.39688110 -201.86372375]
[194.09045410 -214.74557495]
[202.53363037 -227.14901733]
[211.69679260 -239.03050232]
[221.54771423 -250.34829712]
[232.05180359 -261.06262207]
[243.17218018 -271.13586426]
[254.86976624 -280.53265381]
[267.10348511 -289.21994019]
[279.83038330 -297.16723633]
[293.00570679 -304.34661865]
[306.58319092 -310.73291016]
[320.51516724 -316.30361938]
[334.75271606 -321.03918457]
[349.24575806 -324.92300415]
[363.94345093 -327.94143677]
[378.79415894 -330.08386230]
[393.74566650 -331.34274292]
[408.74551392 -331.71368408]
[423.74099731 -331.19537354]
[438.67944336 -329.78961182]
[453.50836182 -327.50137329]
[468.17568970 -324.33868408]
[482.62988281 -320.31262207]
[496.82019043 -315.43734741]
[510.69674683 -309.73001099]
[524.21081543 -303.21063232]
[537.31500244 -295.90213013]
[549.96313477 -287.83013916]
[562.11090088 -279.02307129]
[573.71563721 -269.51177979]
[584.73645020 -259.32977295]
[595.13476562 -248.51272583]
[604.87402344 -237.09869385]
[613.91998291 -225.12774658]
[622.24084473 -212.64192200]
[629.80749512 -199.68508911]
[636.59320068 -186.30278015]
[642.57427979 -172.54196167]
[647.72961426 -158.45100403]
[652.04113770 -144.07937622]
[655.49371338 -129.47756958]
[658.07519531 -114.69687653]
[659.77655029 -99.78920746]
[660.59179688 -84.80693817]
[660.51800537 -69.80268860]
[659.55548096 -54.82916260]
[657.70758057 -39.93895340]
[654.98083496 -25.18436623]
[651.38482666 -10.61722565]
[646.93212891 3.71129990]
[641.63848877 17.75088120]
[635.52233887 31.45220184]
[628.60534668 44.76713562]
[620.91162109 57.64891815]
[612.46832275 70.05229187]
[603.30511475 81.93369293]
[593.45404053 93.25139618]
[582.94989014 103.96563721]
[571.82940674 114.03878021]
[560.13171387 123.43544769]
[547.89794922 132.12263489]
[535.17102051 140.06982422]
[521.99560547 147.24909973]
[508.41806030 153.63525391]
[494.48602295 159.20584106]
[480.24844360 163.94129944]
[465.75534058 167.82499695]
[451.05764771 170.84329224]
[436.20693970 172.98558044]
[421.25540161 174.24433899]
[406.25552368 174.61514282]
[391.26007080 174.09669495]
[376.32165527 172.69082642]
[361.49273682 170.40245056]
[346.82543945 167.23960876]
[332.37127686 163.21343994]
[318.18103027 158.33804321]
[304.30450439 152.63058472]
[290.79046631 146.11108398]
[277.68640137 138.80245972]
[265.03829956 130.73037720]
[252.89060974 121.92317963]
[241.28599548 112.41181183]
[230.26522827 102.22968292]
[219.86701965 91.41255951]
[210.12788391 79.99843597]
[201.08204651 68.02740479]
[192.76124573 55.54151535]
[179.80825806 63.10589600]
[166.85525513 70.67027283]
[153.90225220 78.23464966]
[140.94926453 85.79903412]
[127.99626160 93.36341095]
[126.75180817 96.66245270]
[123.84761047 99.52263641]
[119.50733185 101.17044830]
[114.29164124 100.96148682]
[106.66393280 112.67941284]
[92.68681335 112.31636047]
[79.40896606 119.29481506]
[66.13111877 126.27326202]
[72.10085297 140.04187012]
[77.02496338 154.21809387]
[80.87590027 168.72265625]
[83.63214111 183.47445679]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[78 206]
[79 205]
[80 204]
[82 202]
[83 198]
[84 197]
[85 196]
[86 195]
[87 194]
[88 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
