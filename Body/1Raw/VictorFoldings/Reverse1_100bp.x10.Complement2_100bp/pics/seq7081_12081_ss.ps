%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[240.45341492 347.04421997]
[230.96452332 335.42697144]
[221.47561646 323.80969238]
[211.98672485 312.19244385]
[202.49781799 300.57516479]
[193.00892639 288.95791626]
[183.52001953 277.34063721]
[183.74147034 292.33901978]
[175.90962219 305.13208008]
[162.45129395 311.75573730]
[147.53666687 310.15762329]
[135.78721619 300.83291626]
[130.84362793 286.67095947]
[134.23773193 272.05999756]
[144.91783142 261.52740479]
[159.57458496 258.33682251]
[173.66662598 263.47702026]
[165.81486511 250.69618225]
[159.63516235 246.64239502]
[157.94299316 237.66607666]
[150.28239441 224.76976013]
[142.62179565 211.87342834]
[134.67510986 199.15138245]
[126.44630432 186.60998535]
[118.21749878 174.06858826]
[109.98868561 161.52719116]
[111.79837036 176.41761780]
[110.04087067 191.31430054]
[104.81558228 205.37475586]
[96.41801453 217.80380249]
[85.32309723 227.89849854]
[72.15830994 235.08793640]
[57.66816711 238.96554565]
[42.67216873 239.31202698]
[28.01840973 236.10775757]
[14.53562832 229.53398132]
[2.98634291 219.96246338]
[-5.97627878 207.93450928]
[-11.84535694 194.13038635]
[-14.28896713 179.33076477]
[-13.16891098 164.37263489]
[-8.54853249 150.10197449]
[-0.68913752 137.32582092]
[9.96478748 126.76675415]
[22.81071091 119.02193451]
[37.12213516 114.52936554]
[52.08967590 113.54312897]
[66.86685181 116.11900330]
[80.61793518 122.11129761]
[92.56524658 131.18113708]
[102.03366852 142.81646729]
[98.71141052 128.18901062]
[95.38915253 113.56154633]
[86.03180695 103.17252350]
[89.98339081 89.76071930]
[86.66113281 75.13325500]
[83.11349487 71.30424500]
[81.54608154 66.93428802]
[81.83334351 62.86826324]
[83.53260040 59.77878952]
[80.86680603 45.01757050]
[78.20101166 30.25635338]
[75.53520966 15.49513626]
[65.46852112 3.28971744]
[70.82076263 -10.61002159]
[68.15496826 -25.37123871]
[65.48917389 -40.13245773]
[62.82337570 -54.89367294]
[52.69171143 -62.87566376]
[50.77525330 -75.22519684]
[57.56242752 -85.23822784]
[55.11669922 -100.03749847]
[52.67097092 -114.83676910]
[38.95809174 -121.85553741]
[32.08778763 -135.44421387]
[34.50774384 -150.29708862]
[45.08305359 -160.75180054]
[42.63732910 -175.55107117]
[40.19160080 -190.35034180]
[37.74587250 -205.14961243]
[35.30014420 -219.94888306]
[32.85441971 -234.74815369]
[30.40869141 -249.54742432]
[27.96296310 -264.34667969]
[25.51723671 -279.14596558]
[23.07150841 -293.94522095]
[20.62578201 -308.74450684]
[18.18005371 -323.54376221]
[3.15551591 -324.85299683]
[-11.07113361 -329.85833740]
[-23.60559464 -338.24511719]
[-33.65994263 -349.48614502]
[-40.60214996 -362.87481689]
[-43.99582672 -377.56948853]
[-43.62764359 -392.64648438]
[-39.52074051 -407.15798950]
[-31.93328285 -420.19183350]
[-21.34222794 -430.92871094]
[-8.41333389 -438.69366455]
[6.04067516 -442.99859619]
[21.11120987 -443.57290649]
[35.85092163 -440.38046265]
[49.33326340 -433.62194824]
[60.71072006 -423.72225952]
[69.26809692 -411.30361938]
[74.46746826 -397.14672852]
[75.98200226 -382.14151001]
[73.71648407 -367.23117065]
[67.81333923 -353.35299683]
[58.64363861 -341.37939453]
[46.78379059 -332.06301880]
[32.97932434 -325.98950195]
[35.42505264 -311.19021606]
[37.87078094 -296.39096069]
[40.31650543 -281.59167480]
[42.76223373 -266.79241943]
[45.20796204 -251.99314880]
[47.65369034 -237.19387817]
[50.09941483 -222.39460754]
[52.54514313 -207.59533691]
[54.99087143 -192.79606628]
[57.43659973 -177.99679565]
[59.88232803 -163.19752502]
[73.25897980 -156.70112610]
[80.32892609 -143.41654968]
[78.19584656 -128.33996582]
[67.47024536 -117.28250122]
[69.91596985 -102.48323059]
[72.36169434 -87.68395996]
[84.21147919 -74.73986053]
[77.58459473 -57.55946732]
[80.25038910 -42.79825211]
[82.91618347 -28.03703499]
[85.58197784 -13.27581692]
[95.45800018 -2.12621927]
[90.29643250 12.82934093]
[92.96222687 27.59055710]
[95.62802124 42.35177612]
[98.29381561 57.11299133]
[101.28858948 71.81099701]
[104.61084747 86.43845367]
[113.96819305 96.82747650]
[110.01660919 110.23928070]
[113.33886719 124.86674500]
[116.66112518 139.49420166]
[122.53009033 153.29838562]
[130.75889587 165.83978271]
[138.98770142 178.38117981]
[147.21650696 190.92257690]
[151.87936401 193.26882935]
[154.87629700 196.81448364]
[156.02940369 200.72413635]
[155.51812744 204.21282959]
[163.17872620 217.10916138]
[170.83932495 230.00547791]
[178.59570312 242.84442139]
[186.44746399 255.62525940]
[195.13728333 267.85174561]
[204.62619019 279.46902466]
[214.11508179 291.08627319]
[223.60398865 302.70355225]
[233.09288025 314.32080078]
[242.58178711 325.93807983]
[252.07067871 337.55532837]
[264.82305908 329.61776733]
[278.48580933 323.37615967]
[292.83456421 318.93301392]
[307.63369751 316.36123657]
[322.64019775 315.70315552]
[337.60766602 316.96948242]
[352.29028320 320.13946533]
[366.44699097 325.16107178]
[379.84527588 331.95178223]
[392.26516724 340.40014648]
[403.50268555 350.36740112]
[413.37335205 361.68988037]
[421.71502686 374.18167114]
[428.39074707 387.63763428]
[433.29089355 401.83682251]
[436.33502197 416.54608154]
[437.47311401 431.52383423]
[436.68649292 446.52413940]
[433.98809814 461.30072021]
[429.42218018 475.61087036]
[423.06378174 489.21966553]
[415.01730347 501.90359497]
[405.41482544 513.45440674]
[394.41409302 523.68237305]
[382.19567871 532.41961670]
[368.96029663 539.52264404]
[354.92523193 544.87475586]
[340.32095337 548.38812256]
[325.38732910 550.00506592]
[310.36950684 549.69897461]
[295.51412964 547.47491455]
[281.06515503 543.36938477]
[267.25982666 537.44982910]
[254.32484436 529.81341553]
[242.47259521 520.58563232]
[231.89773560 509.91787720]
[222.77389526 497.98541260]
[215.25090027 484.98413086]
[209.45228577 471.12756348]
[205.47326660 456.64324951]
[203.37918091 441.76901245]
[203.20442200 426.74908447]
[204.95185852 411.83013916]
[208.59278870 397.25717163]
[214.06742859 383.26943970]
[221.28588867 370.09664917]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 164]
[2 163]
[3 162]
[4 161]
[5 160]
[6 159]
[7 158]
[17 157]
[18 156]
[20 155]
[21 154]
[22 153]
[23 149]
[24 148]
[25 147]
[26 146]
[51 145]
[52 144]
[53 143]
[55 141]
[56 140]
[60 139]
[61 138]
[62 137]
[63 136]
[65 134]
[66 133]
[67 132]
[68 131]
[71 129]
[72 128]
[73 127]
[77 123]
[78 122]
[79 121]
[80 120]
[81 119]
[82 118]
[83 117]
[84 116]
[85 115]
[86 114]
[87 113]
[88 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
