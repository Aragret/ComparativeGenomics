%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGCUGACACUCACGCAAGCAUCAAACUCAAACGAUCCGUCUUAUCAUUACUCCUACAUUCGGGCACCCGCUAAUACUCUUACUGACGCGGCCACUUCGxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[82.18177795 584.63586426]
[71.79289246 573.67010498]
[64.91545868 560.22106934]
[62.10700989 545.37890625]
[63.59521103 530.34686279]
[69.25942230 516.34356689]
[78.64046478 504.50408936]
[90.97786713 495.78829956]
[105.27149200 490.90270996]
[104.60170746 475.91766357]
[103.93192291 460.93261719]
[103.26213837 445.94757080]
[102.59235382 430.96255493]
[101.92256927 415.97750854]
[101.25278473 400.99246216]
[92.95489502 388.62338257]
[100.06826782 374.49148560]
[89.43621826 367.21212769]
[84.86994171 354.95523071]
[88.24648285 342.11743164]
[98.54983521 333.44244385]
[98.10323334 318.44909668]
[97.65662384 303.45571899]
[97.21002197 288.46237183]
[96.65180969 273.47277832]
[95.98202515 258.48773193]
[95.31224060 243.50270081]
[94.64245605 228.51765442]
[93.86112976 213.53802490]
[92.96831512 198.56460571]
[92.07550049 183.59120178]
[91.18268585 168.61779785]
[80.44208527 179.08869934]
[65.44218445 179.03587341]
[54.77558899 168.48960876]
[54.55261993 153.49127197]
[64.90100098 142.63258362]
[79.89271545 142.13391113]
[90.93941498 152.28004456]
[91.38601685 137.28669739]
[91.83262634 122.29334259]
[92.27922821 107.29999542]
[91.72101593 92.31038666]
[90.16049194 77.39177704]
[88.59997559 62.47317505]
[87.03945160 47.55456924]
[85.47892761 32.63596344]
[83.91840363 17.71735954]
[80.35041809 12.15130138]
[80.15789795 6.47151613]
[82.54032135 2.33229971]
[81.42467499 -12.62615395]
[80.30902100 -27.58460617]
[79.19337463 -42.54306030]
[78.07772827 -57.50151443]
[76.96207428 -72.45996857]
[73.85796356 -87.13526917]
[68.82105255 -101.26429749]
[63.78413391 -115.39332581]
[58.74721909 -129.52235413]
[53.71030045 -143.65138245]
[48.67338562 -157.78041077]
[43.63647079 -171.90945435]
[31.71441269 -182.31018066]
[34.72870255 -196.89657593]
[29.69178581 -211.02561951]
[23.86241722 -218.05812073]
[24.68676567 -225.40266418]
[19.86076736 -239.60511780]
[15.03477097 -253.80757141]
[3.26888633 -264.38464355]
[6.50001192 -278.92456055]
[-8.25034714 -276.07138062]
[-23.25183296 -275.25335693]
[-38.22497559 -276.48571777]
[-52.89083862 -279.74548340]
[-66.97620392 -284.97198486]
[-80.21866608 -292.06784058]
[-92.37153625 -300.90081787]
[-103.20840454 -311.30639648]
[-112.52738190 -323.09072876]
[-120.15487671 -336.03424072]
[-125.94878387 -349.89587402]
[-129.80116272 -364.41732788]
[-131.64025879 -379.32812500]
[-131.43180847 -394.35043335]
[-129.17967224 -409.20446777]
[-124.92583466 -423.61343384]
[-118.74952698 -437.30892944]
[-110.76582336 -450.03585815]
[-101.12343597 -461.55703735]
[-90.00201416 -471.65792847]
[-77.60872650 -480.15029907]
[-64.17446899 -486.87594604]
[-49.94950485 -491.70959473]
[-35.19883728 -494.56118774]
[-20.19726181 -495.37759399]
[-5.22425127 -494.14361572]
[9.44125843 -490.88223267]
[23.52605629 -485.65420532]
[36.76775360 -478.55694580]
[48.91966248 -469.72265625]
[59.75540161 -459.31588745]
[69.07311249 -447.53057861]
[76.69920349 -434.58621216]
[82.49160767 -420.72396851]
[86.34242249 -406.20208740]
[88.17990112 -391.29110718]
[87.96981812 -376.26879883]
[85.71607971 -361.41500854]
[81.46067810 -347.00650024]
[75.28289795 -333.31167603]
[67.29780579 -320.58563232]
[57.65417480 -309.06546021]
[46.53165817 -298.96578979]
[34.13745499 -290.47476196]
[20.70246696 -283.75057983]
[32.12316513 -274.18933105]
[29.23722649 -258.63357544]
[34.06322479 -244.43112183]
[38.88922119 -230.22866821]
[43.82081604 -216.06253052]
[48.85773087 -201.93350220]
[60.41951370 -192.54338074]
[57.76549911 -176.94636536]
[62.80241394 -162.81733704]
[67.83933258 -148.68830872]
[72.87625122 -134.55928040]
[77.91316223 -120.43024445]
[82.95008087 -106.30121613]
[87.98699951 -92.17218781]
[90.13089752 -107.01818848]
[96.70108032 -120.50272369]
[107.07131958 -131.34053040]
[120.25318146 -138.49862671]
[134.99026489 -141.29475403]
[149.87792969 -139.46237183]
[163.49716187 -133.17617798]
[174.54988098 -123.03528595]
[181.98260498 -110.00629425]
[185.08688354 -95.33102417]
[183.56684875 -80.40824127]
[177.56738281 -66.66028595]
[167.66029358 -55.39752197]
[154.78990173 -47.69344711]
[140.18289185 -44.28236389]
[125.23153687 -45.48939514]
[111.36089325 -51.19949722]
[99.89302826 -60.86841583]
[91.92053223 -73.57561493]
[93.03617859 -58.61716080]
[94.15182495 -43.65871048]
[95.26747894 -28.70025635]
[96.38312531 -13.74180222]
[97.49877167 1.21665108]
[98.83700562 16.15683556]
[100.39752960 31.07544136]
[101.95805359 45.99404526]
[103.51857758 60.91265106]
[105.07910156 75.83125305]
[106.63962555 90.74986267]
[114.68238831 78.08834839]
[128.24864197 71.68860626]
[143.13473511 73.53366089]
[154.72805786 83.05181122]
[159.43626404 97.29374695]
[155.80049133 111.84645081]
[144.94732666 122.20060730]
[130.23971558 125.14787292]
[116.23499298 119.77500153]
[107.27257538 107.74659729]
[106.82597351 122.73995209]
[106.37936401 137.73329163]
[105.93276215 152.72665405]
[106.15608978 167.72499084]
[107.04890442 182.69839478]
[107.94171906 197.67179871]
[108.83453369 212.64520264]
[112.46918488 221.02536011]
[109.62749481 227.84786987]
[110.29727936 242.83291626]
[110.96706390 257.81796265]
[111.63684845 272.80297852]
[115.14632416 281.23632812]
[112.20336914 288.01577759]
[112.64997864 303.00912476]
[113.09658051 318.00247192]
[113.54319000 332.99581909]
[126.49323273 344.75659180]
[126.92237854 361.90682983]
[115.05330658 373.82168579]
[123.39910126 387.26260376]
[116.23782349 400.32269287]
[116.90760803 415.30770874]
[117.57739258 430.29275513]
[118.24717712 445.27780151]
[118.91696167 460.26284790]
[119.58674622 475.24786377]
[120.25653076 490.23291016]
[134.92903137 493.82382202]
[147.99481201 501.40417480]
[158.39471436 512.35949707]
[165.28565979 525.80163574]
[168.10902405 540.64093018]
[166.63592529 555.67443848]
[160.98577881 569.68347168]
[151.61663818 581.53234863]
[139.28799438 590.26055908]
[124.99928284 595.16052246]
[109.90882874 595.83496094]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 199]
[10 198]
[11 197]
[12 196]
[13 195]
[14 194]
[15 193]
[17 191]
[21 188]
[22 187]
[23 186]
[24 185]
[25 183]
[26 182]
[27 181]
[28 180]
[29 178]
[30 177]
[31 176]
[32 175]
[39 174]
[40 173]
[41 172]
[42 171]
[43 161]
[44 160]
[45 159]
[46 158]
[47 157]
[48 156]
[51 155]
[52 154]
[53 153]
[54 152]
[55 151]
[56 150]
[57 131]
[58 130]
[59 129]
[60 128]
[61 127]
[62 126]
[63 125]
[65 123]
[66 122]
[68 121]
[69 120]
[70 119]
[72 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
