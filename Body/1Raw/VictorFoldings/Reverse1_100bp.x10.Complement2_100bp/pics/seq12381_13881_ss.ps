%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCUGACUAUUAUUUCCACCUACGCUGUUACCUAAAAUGUAUUACCCCCAUACUCAAAAAAAACAAUCCCAAUUGCUCCCACCAUUCCUACCCCCCUUAxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[65.05813599 579.66076660]
[56.37891388 567.40002441]
[49.37434769 554.11126709]
[44.16429138 540.02191162]
[40.83789444 525.37298584]
[39.45208359 510.41522217]
[40.03056335 495.40454102]
[42.56344223 480.59780884]
[47.00737381 466.24838257]
[53.28631973 452.60177612]
[61.29283905 439.89151001]
[70.88993073 428.33508301]
[81.91336823 418.13024902]
[94.17453766 409.45159912]
[107.46363068 402.44766235]
[121.55324554 397.23828125]
[118.23098755 382.61080933]
[114.90872955 367.98336792]
[110.36183167 362.15692139]
[111.64761353 353.11343384]
[108.54350281 338.43811035]
[105.43939209 323.76281738]
[102.00833130 309.16049194]
[98.25202942 294.63842773]
[94.49572754 280.11639404]
[90.73942566 265.59432983]
[86.98312378 251.07226562]
[83.22682190 236.55020142]
[80.02558899 251.20462036]
[73.03818512 264.47775269]
[62.76905060 275.41143799]
[49.95952225 283.21627808]
[35.53432846 287.32891846]
[20.53483772 287.45245361]
[6.04387522 283.57791138]
[-6.89244413 275.98504639]
[-17.34023666 265.22198486]
[-24.54526520 252.06570435]
[-27.98739433 237.46598816]
[-27.41813278 222.47679138]
[-22.87857628 208.18020630]
[-14.69644070 195.60830688]
[-3.46239948 185.66867065]
[10.01255131 179.07884216]
[24.75564384 176.31457520]
[39.70256042 177.57539368]
[53.77427292 182.77029419]
[65.95492554 191.52423096]
[75.36519623 203.20527649]
[81.32605743 216.97128296]
[82.21887207 201.99787903]
[83.11169434 187.02445984]
[84.00450897 172.05105591]
[84.89732361 157.07765198]
[85.79013824 142.10424805]
[75.26056671 152.78732300]
[60.48190689 155.35469055]
[46.96624756 148.84877014]
[39.75458527 135.69613647]
[41.53669739 120.80237579]
[51.64789581 109.72249603]
[66.31695557 106.58902740]
[80.07268524 112.57067108]
[87.78479004 125.43755341]
[90.45059204 110.67633820]
[85.90407562 97.45435333]
[94.78819275 86.65786743]
[97.45398712 71.89665222]
[100.11978149 57.13543320]
[102.78558350 42.37421799]
[105.45137787 27.61299896]
[108.11717224 12.85178280]
[101.49028778 -4.32861137]
[113.34006500 -17.27270699]
[115.78579712 -32.07197571]
[118.01091003 -46.90602112]
[120.01492310 -61.77154922]
[122.01894379 -76.63707733]
[124.02295685 -91.50260925]
[113.37343597 -100.25352478]
[108.47738647 -113.02252197]
[110.51379395 -126.43604279]
[118.84500885 -137.00653076]
[131.21089172 -142.03910828]
[133.43601990 -156.87315369]
[126.41111755 -167.69044495]
[128.56980896 -179.99993896]
[138.21763611 -187.29692078]
[140.66336060 -202.09619141]
[143.10910034 -216.89547729]
[128.79711914 -221.47642517]
[115.30468750 -228.09248352]
[102.91939545 -236.60261536]
[91.90525055 -246.82545471]
[82.49700165 -258.54309082]
[74.89518738 -271.50573730]
[69.26185608 -285.43710327]
[65.71706390 -300.04028320]
[64.33638000 -315.00393677]
[65.14923096 -330.00918579]
[68.13829803 -344.73614502]
[73.23985291 -358.87094116]
[80.34516144 -372.11224365]
[89.30278778 -384.17785645]
[99.92177582 -394.81057739]
[111.97579956 -403.78378296]
[125.20792389 -410.90618896]
[139.33610535 -416.02600098]
[154.05918884 -419.03408813]
[169.06335449 -419.86633301]
[184.02880859 -418.50497437]
[198.63653564 -414.97906494]
[212.57518005 -409.36373901]
[225.54765320 -401.77868652]
[237.27742004 -392.38558960]
[247.51448059 -381.38464355]
[256.04061890 -369.01037598]
[262.67410278 -355.52651978]
[267.27352905 -341.22045898]
[269.74090576 -326.39715576]
[270.02359009 -311.37258911]
[268.11557007 -296.46697998]
[264.05752563 -281.99804688]
[257.93594360 -268.27420044]
[249.88128662 -255.58795166]
[240.06529236 -244.20971680]
[228.69715881 -234.38204956]
[216.01919556 -226.31439209]
[202.30163574 -220.17871094]
[187.83686829 -216.10580444]
[172.93322754 -214.18249512]
[157.90837097 -214.44973755]
[155.46263123 -199.65046692]
[153.01690674 -184.85119629]
[160.07209778 -168.78286743]
[148.27006531 -154.64804077]
[146.04493713 -139.81399536]
[158.11004639 -128.68246460]
[161.19364929 -112.38973999]
[153.88587952 -97.31997681]
[138.88848877 -89.49858856]
[136.88447571 -74.63306427]
[134.88044739 -59.76753616]
[132.87643433 -44.90200806]
[135.00827026 -40.62832642]
[134.47802734 -34.97006989]
[130.58506775 -29.62624931]
[128.13934326 -14.82697868]
[134.92651367 -4.81394482]
[133.01005554 7.53558779]
[122.87838745 15.51757812]
[120.21259308 30.27879524]
[117.54679871 45.04001236]
[114.88100433 59.80123138]
[112.21520996 74.56244659]
[109.54940796 89.32366180]
[114.09592438 102.54564667]
[105.21180725 113.34213257]
[102.54601288 128.10334778]
[100.76354218 142.99707031]
[99.87072754 157.97047424]
[98.97791290 172.94387817]
[98.08509827 187.91728210]
[97.19228363 202.89068604]
[96.29946899 217.86408997]
[97.74888611 232.79389954]
[101.50518799 247.31596375]
[105.26148224 261.83801270]
[109.01778412 276.36007690]
[112.77408600 290.88214111]
[116.53038788 305.40420532]
[120.19046021 309.12588501]
[121.88728333 313.44723511]
[121.72120667 317.52001953]
[120.11469269 320.65872192]
[123.21880341 335.33401489]
[126.32291412 350.00930786]
[129.53617859 364.66110229]
[132.85844421 379.28857422]
[136.18070984 393.91601562]
[151.13825989 392.52807617]
[166.14901733 393.10440063]
[180.95613098 395.63516235]
[195.30619812 400.07705688]
[208.95370483 406.35406494]
[221.66510010 414.35876465]
[233.22290039 423.95419312]
[243.42930603 434.97619629]
[252.10969543 447.23611450]
[259.11553955 460.52420044]
[264.32693481 474.61306763]
[267.65472412 489.26165771]
[269.04196167 504.21926880]
[268.46490479 519.23004150]
[265.93344116 534.03698730]
[261.49087524 548.38684082]
[255.21322632 562.03405762]
[247.20791626 574.74505615]
[237.61192322 586.30242920]
[226.58946228 596.50830078]
[214.32911682 605.18811035]
[201.04069519 612.19329834]
[186.95156860 617.40405273]
[172.30284119 620.73114014]
[157.34513855 622.11767578]
[142.33444214 621.53991699]
[127.52758026 619.00769043]
[113.17792511 614.56445312]
[99.53102112 608.28619385]
[86.82038116 600.28027344]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 180]
[17 179]
[18 178]
[20 177]
[21 176]
[22 175]
[23 171]
[24 170]
[25 169]
[26 168]
[27 167]
[28 166]
[50 165]
[51 164]
[52 163]
[53 162]
[54 161]
[55 160]
[64 159]
[65 158]
[67 156]
[68 155]
[69 154]
[70 153]
[71 152]
[72 151]
[74 148]
[75 147]
[76 144]
[77 143]
[78 142]
[79 141]
[84 137]
[85 136]
[88 134]
[89 133]
[90 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
