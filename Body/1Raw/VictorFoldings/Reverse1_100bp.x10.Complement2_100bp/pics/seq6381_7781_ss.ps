%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxGAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[123.91989899 594.18347168]
[110.07589722 588.26422119]
[97.76532745 579.59570312]
[87.52634430 568.55682373]
[79.80656433 555.63012695]
[74.94345856 541.38079834]
[73.14962769 526.43170166]
[74.50347900 511.43634033]
[78.94583130 497.05026245]
[86.28248596 483.90237427]
[96.19271088 472.56741333]
[108.24328613 463.54092407]
[121.90740204 457.21749878]
[136.58772278 453.87359619]
[136.36439514 438.87524414]
[136.14106750 423.87692261]
[128.21513367 411.26626587]
[135.74610901 397.35241699]
[135.52278137 382.35406494]
[135.29945374 367.35574341]
[135.07612610 352.35739136]
[134.85279846 337.35906982]
[134.62947083 322.36071777]
[134.18287659 307.36737061]
[133.51309204 292.38232422]
[132.84330750 277.39730835]
[130.83929443 262.53176880]
[127.40822601 247.92944336]
[123.86855316 233.35307312]
[119.23542023 227.59495544]
[120.38640594 218.53334045]
[117.06414795 203.90586853]
[113.74188995 189.27841187]
[101.14266968 177.06257629]
[106.73521423 159.51820374]
[103.19554138 144.94183350]
[99.65586853 130.36546326]
[96.11619568 115.78908539]
[86.55328369 109.14138031]
[83.88928986 97.80363464]
[89.49098969 87.59275055]
[86.16873169 72.96529388]
[75.56707764 61.22154999]
[80.29332733 47.09668350]
[76.97106934 32.46922302]
[72.01868439 24.79382515]
[73.70995331 17.59928513]
[70.60584259 2.92398334]
[67.50173187 -11.75131893]
[63.37404251 -16.91597748]
[62.59167480 -22.54491425]
[64.53054810 -26.90952492]
[54.46385193 -39.11494446]
[59.81609726 -53.01468277]
[57.15029907 -67.77590179]
[54.48450470 -82.53711700]
[50.35399246 -68.11703491]
[43.25929260 -54.90093613]
[33.52316666 -43.49007034]
[21.58853912 -34.40355682]
[7.99836349 -28.05476952]
[-6.62910271 -24.73253632]
[-21.62840652 -24.58799553]
[-36.31718063 -27.62772560]
[-50.02717972 -33.71343613]
[-62.13469696 -42.56826782]
[-72.08891296 -53.78938675]
[-79.43698883 -66.86631012]
[-83.84461975 -81.20411682]
[-85.11130524 -96.15053558]
[-83.17941284 -111.02561188]
[-78.13682556 -125.15261841]
[-70.21295166 -137.88887024]
[-59.76827240 -148.65496826]
[-47.27795410 -156.96110535]
[-33.31022644 -162.42942810]
[-18.50051880 -164.81114197]
[-3.52257943 -163.99792480]
[10.94219589 -160.02673340]
[24.23575783 -153.07826233]
[35.75333786 -143.46861267]
[44.97095871 -131.63496399]
[51.46928787 -118.11565399]
[54.95323944 -103.52143097]
[58.27549744 -118.14889526]
[61.59775543 -132.77635193]
[64.92001343 -147.40380859]
[68.24227905 -162.03126526]
[71.56453705 -176.65873718]
[74.34014893 -191.39968872]
[67.20467377 -208.37516785]
[78.66381073 -221.66633606]
[80.66782379 -236.53186035]
[82.67183685 -251.39738464]
[84.67584991 -266.26290894]
[86.67986298 -281.12844849]
[88.68387604 -295.99398804]
[90.68788910 -310.85949707]
[76.70871735 -316.51931763]
[64.57674408 -325.47845459]
[55.05460739 -337.17373657]
[48.74087143 -350.86999512]
[46.03242493 -365.70626831]
[47.09952545 -380.74993896]
[51.87508774 -395.05535889]
[60.05892181 -407.72326660]
[71.13658142 -417.95733643]
[84.41172028 -425.11425781]
[99.04985046 -428.74414062]
[114.13079834 -428.61880493]
[128.70657349 -424.74612427]
[141.86093140 -417.36953735]
[152.76696777 -406.95278931]
[160.73912048 -394.15060425]
[165.27627563 -379.76779175]
[166.09318542 -364.70846558]
[163.13853455 -349.91925049]
[156.59803772 -336.32983398]
[146.88282776 -324.79440308]
[134.60363770 -316.03814697]
[120.53231812 -310.61148071]
[105.55342102 -308.85549927]
[103.54940796 -293.98995972]
[101.54539490 -279.12442017]
[99.54138184 -264.25891113]
[97.53736877 -249.39337158]
[95.53334808 -234.52784729]
[93.52933502 -219.66232300]
[100.61162567 -209.85580444]
[99.06371307 -197.45468140]
[89.17418671 -189.17457581]
[102.60443115 -195.85504150]
[116.26485443 -189.65882874]
[120.08548737 -175.15356445]
[111.24991608 -163.03198242]
[96.27138519 -162.22967529]
[86.19199371 -173.33647156]
[82.86973572 -158.70901489]
[79.54747772 -144.08155823]
[76.22521973 -129.45408630]
[72.90295410 -114.82662964]
[69.58069611 -100.19917297]
[69.24571991 -85.20291138]
[71.91151428 -70.44169617]
[74.57731628 -55.68047714]
[84.45333099 -44.53087997]
[79.29176331 -29.57532120]
[82.17703247 -14.85542870]
[85.28114319 -0.18012677]
[88.38525391 14.49517536]
[91.59852600 29.14696312]
[94.92079163 43.77442169]
[105.28481293 54.47191238]
[100.79619598 69.64303589]
[104.11845398 84.27049255]
[115.82865906 96.28079224]
[110.69256592 112.24941254]
[114.23223877 126.82578278]
[117.77191162 141.40216064]
[121.31158447 155.97853088]
[131.90039062 163.34332275]
[134.54850769 175.55690002]
[128.36935425 185.95616150]
[131.69160461 200.58361816]
[135.01387024 215.21107483]
[138.44493103 229.81340027]
[141.98460388 244.38977051]
[147.05070496 251.99058533]
[145.46675110 259.20950317]
[150.60183716 245.11585999]
[161.28279114 234.58413696]
[175.44729614 229.64785767]
[190.36039734 231.26011658]
[203.14260864 239.10963440]
[211.32589722 251.68078613]
[213.33018494 266.54626465]
[208.76847839 280.83581543]
[198.52159119 291.79031372]
[184.56800842 297.29461670]
[169.60195923 296.28598022]
[156.51315308 288.95907593]
[147.82833862 276.72750854]
[148.49812317 291.71255493]
[149.16790771 306.69760132]
[152.39826965 312.46615601]
[152.25238037 318.14730835]
[149.62780762 322.13739014]
[149.85113525 337.13574219]
[150.07446289 352.13406372]
[150.29780579 367.13241577]
[150.52113342 382.13073730]
[150.74446106 397.12908936]
[158.68635559 410.81253052]
[151.13940430 423.65359497]
[151.36273193 438.65191650]
[151.58605957 453.65026855]
[166.35943604 456.55560303]
[180.20576477 462.46939087]
[192.51974487 471.13308716]
[202.76307678 482.16793823]
[210.48793030 495.09158325]
[215.35664368 509.33901978]
[217.15637207 524.28741455]
[215.80841064 539.28332520]
[211.37171936 553.67114258]
[204.04023743 566.82189941]
[194.13446045 578.16076660]
[182.08744812 587.19195557]
[168.42582703 593.52075195]
[153.74681091 596.87048340]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 196]
[15 195]
[16 194]
[18 192]
[19 191]
[20 190]
[21 189]
[22 188]
[23 187]
[24 184]
[25 183]
[26 182]
[27 169]
[28 167]
[29 166]
[31 165]
[32 164]
[33 163]
[35 160]
[36 159]
[37 158]
[38 157]
[41 155]
[42 154]
[44 152]
[45 151]
[47 150]
[48 149]
[49 148]
[52 147]
[54 145]
[55 144]
[56 143]
[84 142]
[85 141]
[86 140]
[87 139]
[88 138]
[89 137]
[90 131]
[92 128]
[93 127]
[94 126]
[95 125]
[96 124]
[97 123]
[98 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
