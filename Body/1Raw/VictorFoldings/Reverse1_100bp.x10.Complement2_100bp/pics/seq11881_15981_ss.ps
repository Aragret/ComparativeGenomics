%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUCAUAUCCCGACACUGAUCAUACAACUCAGGACAUUCAUCCUCUCACUAUAAACUAGUCCUCUUGCACCAAUGAUCGUGUCUCUCAAGAGGGUCAUCxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[-13.22000790 447.23992920]
[-8.32275105 461.48651123]
[-6.71895599 476.46566772]
[-8.48906898 491.42611694]
[-13.54430103 505.61737061]
[-21.63108444 518.32769775]
[-32.34378815 528.91943359]
[-45.14506912 536.86145020]
[-59.39282227 541.75524902]
[-74.37238312 543.35540771]
[-89.33238220 541.58166504]
[-103.52243042 536.52301025]
[-116.23077393 528.43310547]
[-126.81995392 517.71783447]
[-134.75881958 504.91464233]
[-139.64916992 490.66571045]
[-141.24571228 475.68576050]
[-139.46835327 460.72619629]
[-134.40623474 446.53738403]
[-126.31329346 433.83099365]
[-115.59545898 423.24441528]
[-102.79032898 415.30865479]
[-88.54021454 410.42175293]
[-73.55987549 408.82882690]
[-58.60073853 410.60983276]
[-53.56382370 396.48080444]
[-48.52690506 382.35177612]
[-43.48999023 368.22274780]
[-38.45307541 354.09371948]
[-33.41615677 339.96469116]
[-45.81865692 348.40139771]
[-60.77028275 349.60507202]
[-74.36271667 343.26113892]
[-83.04293060 331.02780151]
[-84.54193115 316.10290527]
[-78.46788788 302.38772583]
[-66.40854645 293.46740723]
[-51.51617813 291.67367554]
[-37.68362045 297.47543335]
[-28.52666855 309.35610962]
[-26.43882179 324.20922852]
[-19.36171722 310.98370361]
[-12.28461075 297.75817871]
[-5.20750570 284.53265381]
[-6.02468109 269.66046143]
[7.30832911 261.14334106]
[14.38543415 247.91781616]
[21.46253967 234.69229126]
[28.53964615 221.46676636]
[27.02929306 203.98289490]
[42.75146484 194.39671326]
[49.63087845 181.06727600]
[56.51029205 167.73785400]
[55.47178268 152.87950134]
[68.67650604 144.16481018]
[75.55591583 130.83537292]
[82.43533325 117.50594330]
[89.31474304 104.17651367]
[75.89627838 110.88060760]
[60.91787720 110.07595825]
[48.29485321 101.97291565]
[41.32683945 88.68959045]
[41.83525848 73.69821167]
[49.68720627 60.91748428]
[62.83020782 53.68826675]
[77.82871246 53.90026093]
[90.76213837 61.49804688]
[98.24973297 74.49558258]
[98.33447266 89.49448395]
[107.11507416 77.33303070]
[115.89567566 65.17156982]
[124.67628479 53.01011658]
[133.45687866 40.84865952]
[141.40356445 28.12662506]
[148.48068237 14.90109730]
[155.55778503 1.67556965]
[162.63488770 -11.54995823]
[168.70872498 -25.26522446]
[173.74563599 -39.39425278]
[171.09161377 -54.99126434]
[182.65341187 -64.38139343]
[187.69032288 -78.51042175]
[192.72723389 -92.63945007]
[197.76416016 -106.76847839]
[202.80107117 -120.89750671]
[207.83798218 -135.02653503]
[212.87490845 -149.15556335]
[217.59503174 -163.39355469]
[221.99603271 -177.73339844]
[226.39703369 -192.07325745]
[212.67481995 -198.17720032]
[199.78842163 -205.89071655]
[187.92578125 -215.10130310]
[177.25985718 -225.67463684]
[167.94622803 -237.45655823]
[160.12068176 -250.27522278]
[153.89736938 -263.94372559]
[149.36701965 -278.26269531]
[146.59570312 -293.02337646]
[145.62382507 -308.01046753]
[146.46559143 -323.00540161]
[149.10868835 -337.78958130]
[153.51460266 -352.14733887]
[159.61906433 -365.86932373]
[167.33305359 -378.75543213]
[176.54408264 -390.61773682]
[187.11782837 -401.28323364]
[198.90010071 -410.59643555]
[211.71905518 -418.42150879]
[225.38778687 -424.64431763]
[239.70693970 -429.17413330]
[254.46769714 -431.94488525]
[269.45483398 -432.91619873]
[284.44976807 -432.07388306]
[299.23382568 -429.43023682]
[313.59140015 -425.02377319]
[327.31317139 -418.91879272]
[340.19897461 -411.20431519]
[352.06094360 -401.99285889]
[362.72607422 -391.41870117]
[372.03881836 -379.63610840]
[379.86340332 -366.81683350]
[386.08569336 -353.14788818]
[390.61499023 -338.82855225]
[393.38519287 -324.06768799]
[394.35595703 -309.08053589]
[393.51306152 -294.08563232]
[390.86886597 -279.30166626]
[386.46188354 -264.94424438]
[380.35638428 -251.22271729]
[372.64141846 -238.33718872]
[363.42950439 -226.47557068]
[352.85494995 -215.81085205]
[341.07199097 -206.49853516]
[328.25244141 -198.67442322]
[314.58328247 -192.45263672]
[300.26376343 -187.92388916]
[285.50280762 -185.15423584]
[270.51559448 -184.18405151]
[255.52073669 -185.02749634]
[240.73687744 -187.67225647]
[236.33587646 -173.33241272]
[231.93487549 -158.99255371]
[233.25497437 -155.72305298]
[233.05703735 -151.65170288]
[230.98144531 -147.49896240]
[227.00393677 -144.11865234]
[221.96701050 -129.98962402]
[216.93009949 -115.86059570]
[211.89318848 -101.73155975]
[206.85626221 -87.60253143]
[201.81935120 -73.47350311]
[196.78244019 -59.34447479]
[199.79672241 -44.75806427]
[187.87466431 -34.35733795]
[182.83775330 -20.22830772]
[195.24024963 -28.66501427]
[210.19187927 -29.86871147]
[223.78430176 -23.52475739]
[232.46452332 -11.29144478]
[233.96351624 3.63346696]
[227.88948059 17.34864235]
[215.83013916 26.26896667]
[200.93777466 28.06268883]
[187.10520935 22.26093292]
[177.94825745 10.38026714]
[175.86041260 -4.47285223]
[168.78330994 8.75267506]
[161.70620728 21.97820282]
[154.62910461 35.20373154]
[168.38995361 29.23390007]
[183.21064758 31.54630661]
[194.49880981 41.42442703]
[198.75669861 55.80741882]
[194.66494751 70.23854828]
[183.49143982 80.24618530]
[168.69841003 82.72934723]
[154.86962891 76.91859436]
[146.29010010 64.61446381]
[145.61834717 49.62926483]
[136.83773804 61.79072189]
[128.05712891 73.95217896]
[119.27653503 86.11363220]
[110.49592590 98.27508545]
[102.64417267 111.05593109]
[95.76476288 124.38536072]
[88.88534546 137.71478271]
[82.00593567 151.04421997]
[82.55238342 166.85598755]
[69.83972168 174.61726379]
[62.96030807 187.94668579]
[56.08089447 201.27612305]
[59.25200272 213.77839661]
[53.24771118 224.73887634]
[41.76517105 228.54386902]
[34.68806839 241.76939392]
[27.61096191 254.99491882]
[20.53385735 268.22045898]
[20.84482956 284.03860474]
[8.01802158 291.60974121]
[0.94091654 304.83526611]
[-6.13618898 318.06079102]
[-13.21329403 331.28631592]
[-19.28712845 345.00158691]
[-24.32404518 359.13061523]
[-29.36096001 373.25964355]
[-34.39787674 387.38867188]
[-39.43479156 401.51770020]
[-44.47171021 415.64672852]
[-31.75945282 423.73043823]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 209]
[26 208]
[27 207]
[28 206]
[29 205]
[30 204]
[41 203]
[42 202]
[43 201]
[44 200]
[46 198]
[47 197]
[48 196]
[49 195]
[51 192]
[52 191]
[53 190]
[55 188]
[56 187]
[57 186]
[58 185]
[69 184]
[70 183]
[71 182]
[72 181]
[73 180]
[74 170]
[75 169]
[76 168]
[77 167]
[78 156]
[79 155]
[81 153]
[82 152]
[83 151]
[84 150]
[85 149]
[86 148]
[87 147]
[88 143]
[89 142]
[90 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
