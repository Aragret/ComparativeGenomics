%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxGAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUU\
) } def
/len { sequence length } bind def

/coor [
[-7.89359093 667.38598633]
[-18.15903473 678.33630371]
[-29.33980942 688.35028076]
[-41.35081863 697.35168457]
[-54.10065079 705.27197266]
[-67.49227142 712.05090332]
[-81.42375946 717.63690186]
[-95.78909302 721.98736572]
[-110.47892761 725.06927490]
[-125.38146973 726.85913086]
[-140.38330078 727.34332275]
[-155.37023926 726.51812744]
[-170.22824097 724.38995361]
[-184.84420776 720.97485352]
[-199.10690308 716.29882812]
[-212.90777588 710.39758301]
[-226.14181519 703.31591797]
[-238.70826721 695.10778809]
[-250.51150513 685.83563232]
[-261.46170044 675.57000732]
[-271.47552490 664.38909912]
[-280.47674561 652.37799072]
[-288.39688110 639.62805176]
[-295.17559814 626.23632812]
[-300.76138306 612.30474854]
[-305.11166382 597.93933105]
[-308.19335938 583.24951172]
[-309.98300171 568.34692383]
[-310.46697998 553.34509277]
[-309.64160156 538.35815430]
[-307.51318359 523.50018311]
[-304.09786987 508.88424683]
[-299.42169189 494.62164307]
[-293.52023315 480.82083130]
[-286.43838501 467.58691406]
[-278.23007202 455.02056885]
[-268.95773315 443.21743774]
[-258.69198608 432.26739502]
[-247.51094055 422.25372314]
[-235.49967957 413.25268555]
[-222.74961853 405.33273315]
[-209.35781860 398.55419922]
[-195.42616272 392.96862793]
[-181.06071472 388.61853027]
[-166.37078857 385.53704834]
[-151.46820068 383.74761963]
[-136.46635437 383.26382446]
[-121.47943878 384.08941650]
[-106.62150574 386.21804810]
[-92.00563049 389.63357544]
[-77.74306488 394.30993652]
[-63.94235229 400.21160889]
[-56.86524582 386.98608398]
[-49.78813934 373.76055908]
[-42.71103287 360.53503418]
[-35.63393021 347.30950928]
[-28.55682373 334.08398438]
[-33.10621262 319.94754028]
[-26.11742592 306.43417358]
[-11.25899124 301.75817871]
[-4.18188572 288.53265381]
[2.89521980 275.30712891]
[-5.53492212 259.78927612]
[-2.93951225 242.16217041]
[9.82899570 229.51127625]
[27.79093933 227.03614807]
[34.47113419 213.60577393]
[41.15132904 200.17539978]
[47.83152390 186.74502563]
[54.51171875 173.31463623]
[50.96107483 161.75093079]
[56.41653824 150.50718689]
[68.44422150 145.84912109]
[75.32363892 132.51968384]
[82.10363007 119.13941956]
[88.78382111 105.70903778]
[95.16242981 92.13283539]
[101.23625946 78.41756439]
[107.31009674 64.70230103]
[113.38392639 50.98703384]
[119.45776367 37.27176666]
[125.53159332 23.55649948]
[131.60542297 9.84123230]
[135.14509583 -4.73514271]
[136.03791809 -19.70854950]
[136.93074036 -34.68195343]
[137.82354736 -49.65536118]
[137.71188354 -64.65494537]
[128.96960449 -77.84142303]
[135.73886108 -91.10891724]
[134.62321472 -106.06736755]
[133.50756836 -121.02581787]
[124.76528931 -134.21229553]
[131.53454590 -147.47978210]
[130.41889954 -162.43824768]
[115.88895416 -166.82518005]
[103.92733765 -176.16778564]
[96.15176392 -189.20254517]
[93.61380768 -204.16659546]
[96.65670776 -219.03620911]
[104.86893463 -231.80036926]
[117.13986206 -240.73281860]
[131.80993652 -244.62554932]
[146.89515686 -242.95207214]
[160.35537720 -235.93872070]
[170.37019348 -224.53399658]
[175.58520508 -210.28028870]
[175.29512024 -195.10530090]
[169.53915405 -181.06132507]
[159.09577942 -170.04768372]
[145.37734985 -163.55389404]
[146.49299622 -148.59544373]
[155.15547180 -136.47889709]
[148.46601868 -122.14147186]
[149.58166504 -107.18301392]
[150.69731140 -92.22456360]
[159.35980225 -80.10801697]
[152.67033386 -65.77059174]
[161.08651733 -78.18702698]
[174.83731079 -84.18001556]
[189.66186523 -81.89256287]
[200.96664429 -72.03345490]
[205.24873352 -57.65765381]
[201.18128967 -43.21965408]
[190.02464294 -33.19322586]
[175.23580933 -30.68516731]
[161.39726257 -36.47262573]
[152.79695129 -48.76254272]
[151.90414429 -33.78913879]
[151.01132202 -18.81573296]
[150.11851501 -3.84232688]
[157.56246948 -16.86490631]
[167.87088013 -27.76153183]
[180.46078491 -35.91595078]
[194.62013245 -40.86698532]
[209.54815674 -42.33463669]
[224.40060425 -40.23589706]
[238.33750916 -34.68946457]
[250.57064819 -26.00901222]
[260.40820312 -14.68546581]
[267.29379272 -1.35922527]
[270.83798218 13.21604633]
[270.84039307 28.21604538]
[267.30084229 42.79244995]
[260.41952515 56.12089539]
[250.58561707 67.44759369]
[238.35523987 76.13195801]
[224.42012024 81.68285370]
[209.56834412 83.78634644]
[194.63984680 82.32347870]
[180.47891235 77.37697601]
[167.88641357 69.22659302]
[157.57450867 58.33326721]
[150.12637329 45.31307220]
[145.96327209 30.90236473]
[145.32069397 15.91506672]
[139.24685669 29.63033295]
[133.17303467 43.34560013]
[127.09919739 57.06086731]
[121.02536011 70.77613068]
[114.95153046 84.49140167]
[108.87769318 98.20666504]
[109.74300385 101.96480560]
[108.94758606 106.08611298]
[106.36637878 109.82033539]
[102.21419525 112.38923645]
[95.53400421 125.81961060]
[94.51414490 134.89692688]
[88.65306091 139.39910889]
[81.77365112 152.72853088]
[83.06816101 171.09713745]
[67.94209290 179.99484253]
[61.26189804 193.42521667]
[54.58170319 206.85559082]
[47.90151215 220.28596497]
[41.22131729 233.71633911]
[48.41458893 243.94007874]
[50.56601715 256.18096924]
[47.32776260 268.10546875]
[39.37357712 277.46664429]
[28.25971985 282.52780151]
[16.12074661 282.38424683]
[9.04364204 295.60977173]
[1.96653652 308.83529663]
[6.31959724 323.79153442]
[-1.04599655 337.10327148]
[-15.33129597 341.16107178]
[-22.40840149 354.38659668]
[-29.48550606 367.61212158]
[-36.56261063 380.83767700]
[-43.63971710 394.06320190]
[-50.71682358 407.28872681]
[-38.15013504 415.49649048]
[-26.34663200 424.76831055]
[-15.39614582 435.03359985]
[-5.38201571 446.21423340]
[3.61954165 458.22512817]
[11.54001808 470.97485352]
[18.31913185 484.36639404]
[23.90529060 498.29779053]
[28.25597763 512.66308594]
[31.33808327 527.35284424]
[33.12815094 542.25537109]
[33.61255264 557.25720215]
[32.78760529 572.24414062]
[30.65958405 587.10217285]
[27.24468994 601.71820068]
[22.56890869 615.98095703]
[16.66782761 629.78192139]
[9.58635807 643.01605225]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 192]
[53 191]
[54 190]
[55 189]
[56 188]
[57 187]
[60 184]
[61 183]
[62 182]
[66 176]
[67 175]
[68 174]
[69 173]
[70 172]
[73 170]
[74 169]
[75 167]
[76 166]
[77 162]
[78 161]
[79 160]
[80 159]
[81 158]
[82 157]
[83 156]
[84 131]
[85 130]
[86 129]
[87 128]
[88 118]
[90 116]
[91 115]
[92 114]
[94 112]
[95 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
