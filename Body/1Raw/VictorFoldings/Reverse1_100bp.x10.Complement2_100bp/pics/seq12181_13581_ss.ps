%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUAGGAAAUUUUCAACUCUUUCGGUACAACAAUCUGUACCCCCGUACUCAAUCGUCAAGAACACUCGAAAGAGCCAUUUAUUCCCCAGCAUUCGGAGAxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[191.21366882 677.06829834]
[190.32084656 662.09490967]
[189.42803955 647.12145996]
[188.53521729 632.14807129]
[187.64241028 617.17468262]
[186.52674866 602.21624756]
[185.18852234 587.27606201]
[176.34660339 575.28979492]
[182.82185364 560.85437012]
[181.48362732 545.91418457]
[180.14538574 530.97399902]
[178.80715942 516.03381348]
[176.69253540 501.18362427]
[173.80726624 486.46374512]
[170.92198181 471.74383545]
[158.69206238 459.15829468]
[164.80448914 441.78820801]
[161.70037842 427.11291504]
[158.59626770 412.43762207]
[155.49215698 397.76229858]
[152.38804626 383.08700562]
[149.28393555 368.41171265]
[146.17982483 353.73638916]
[143.07571411 339.06109619]
[139.97160339 324.38580322]
[129.76800537 313.53518677]
[134.48199463 298.43258667]
[124.27839661 287.58197021]
[128.99238586 272.47937012]
[125.88828278 257.80404663]
[122.78417206 243.12875366]
[119.68006134 228.45344543]
[104.80597687 226.92945862]
[91.11264801 220.87446594]
[79.94620514 210.86993408]
[72.40860748 197.88627625]
[69.24891663 183.18869019]
[70.78886414 168.21392822]
[76.89017487 154.42977905]
[86.96681976 143.19129944]
[100.04134369 135.60746765]
[96.93723297 120.93216705]
[93.83312225 106.25686646]
[91.42871857 104.38381195]
[89.65269470 101.59449768]
[88.84574890 98.11997986]
[89.25841522 94.31393433]
[91.00858307 90.61665344]
[88.78347015 75.78261566]
[86.55834961 60.94857025]
[84.33323669 46.11452484]
[74.44371033 37.83441544]
[72.89579773 25.43329811]
[79.97808838 15.62678337]
[77.97407532 0.76125479]
[61.76349258 -7.36123276]
[53.74408722 -23.44752312]
[56.95789719 -40.97242737]
[69.93242645 -52.95296478]
[67.48670197 -67.75223541]
[65.04096985 -82.55150604]
[52.47697067 -91.75930786]
[50.20747757 -106.80271149]
[59.06313705 -118.72382355]
[56.61740875 -133.52310181]
[54.17168045 -148.32237244]
[51.17690659 -163.02037048]
[47.63723373 -177.59674072]
[44.09756088 -192.17312622]
[31.08153915 -205.19865417]
[36.67504883 -221.83235168]
[32.91874695 -236.35440063]
[21.97213745 -247.77729797]
[26.27574348 -262.03662109]
[22.51944160 -276.55868530]
[15.78650665 -263.15466309]
[2.51410794 -256.16586304]
[-12.34747696 -258.19891357]
[-23.25524521 -268.49554443]
[-26.14086723 -283.21536255]
[-19.92807961 -296.86825562]
[-6.93409681 -304.36199951]
[7.99464607 -302.90164185]
[19.29070091 -293.03085327]
[17.28668594 -307.89639282]
[15.28267288 -322.76190186]
[13.27865982 -337.62744141]
[-1.73076952 -338.86480713]
[-16.12315369 -343.30029297]
[-29.22533226 -350.72637939]
[-40.42449570 -360.79577637]
[-49.19683838 -373.03750610]
[-55.13206100 -386.87902832]
[-57.95256424 -401.67291260]
[-57.52642441 -416.72720337]
[-53.87357712 -431.33786011]
[-47.16486740 -444.82144165]
[-37.71408081 -456.54733276]
[-25.96323967 -465.96710205]
[-12.46195984 -472.64013672]
[2.15828443 -476.25436401]
[17.21367645 -476.64071655]
[32.00004578 -473.78109741]
[45.82581329 -467.80932617]
[58.04431534 -459.00463867]
[68.08407593 -447.77890015]
[75.47551727 -434.65713501]
[79.87291718 -420.25308228]
[81.07061768 -405.24041748]
[79.01259613 -390.32135010]
[73.79509735 -376.19366455]
[65.66217041 -363.51812744]
[54.99419403 -352.88757324]
[42.29013824 -344.79925537]
[28.14418793 -339.63143921]
[30.14820099 -324.76593018]
[32.15221405 -309.90039062]
[34.15622711 -295.03485107]
[37.04150009 -280.31497192]
[40.79780197 -265.79290771]
[51.47573471 -255.40873718]
[47.44080734 -240.11070251]
[51.19710541 -225.58865356]
[61.45746613 -219.18150330]
[64.70574951 -207.11367798]
[58.67393875 -195.71279907]
[62.21360779 -181.13641357]
[65.75328064 -166.56004333]
[75.66770935 -177.81632996]
[90.65647125 -177.23570251]
[99.67040253 -165.24615479]
[96.06477356 -150.68595886]
[82.49752045 -144.28833008]
[68.97095490 -150.76809692]
[71.41667938 -135.96882629]
[73.86240387 -121.16954803]
[86.08263397 -112.73143768]
[88.77376556 -97.75771332]
[79.84024048 -84.99723053]
[82.28597260 -70.19795990]
[84.73169708 -55.39869308]
[96.27143097 -51.62909698]
[105.16603088 -43.26136398]
[109.68549347 -31.83877373]
[108.91506958 -19.50645828]
[102.93972015 -8.60858250]
[92.83959961 -1.24275887]
[94.84361267 13.62276936]
[106.30274963 26.91393852]
[99.16727448 43.88940811]
[101.39239502 58.72345352]
[103.61751556 73.55749512]
[105.84262848 88.39154053]
[108.50842285 103.15275574]
[111.61253357 117.82805634]
[114.71664429 132.50335693]
[129.74220276 134.14347839]
[143.50651550 140.33914185]
[154.66674805 150.47212219]
[162.13842773 163.54075623]
[165.20074463 178.25894165]
[163.56610107 193.18270874]
[157.40710449 206.85191345]
[147.33840942 217.93302917]
[134.35536194 225.34933472]
[137.45947266 240.02464294]
[140.56358337 254.69995117]
[143.66769409 269.37524414]
[154.09332275 281.27554321]
[149.15730286 295.32846069]
[159.58293152 307.22875977]
[154.64691162 321.28167725]
[157.75102234 335.95700073]
[160.85513306 350.63229370]
[163.95924377 365.30758667]
[167.06335449 379.98287964]
[170.16746521 394.65820312]
[173.27157593 409.33349609]
[176.37568665 424.00878906]
[179.47979736 438.68411255]
[189.84461975 446.36090088]
[192.12791443 458.64788818]
[185.64187622 468.85858154]
[188.52714539 483.57846069]
[191.41242981 498.29833984]
[199.70777893 485.80087280]
[214.05953979 481.43890381]
[227.90629578 487.20669556]
[234.91748047 500.46728516]
[231.88768005 515.15808105]
[220.20208740 524.56274414]
[205.20318604 524.38146973]
[193.74734497 514.69555664]
[195.08557129 529.63574219]
[196.42381287 544.57592773]
[197.76203918 559.51611328]
[206.69967651 572.57098389]
[200.12870789 585.93780518]
[201.46693420 600.87799072]
[204.95166016 606.49658203]
[205.05960083 612.17858887]
[202.61581421 616.28186035]
[203.50862122 631.25524902]
[204.40144348 646.22869873]
[205.29425049 661.20208740]
[206.18707275 676.17547607]
[217.18362427 687.85687256]
[214.76443481 703.71649170]
[200.78529358 711.58819580]
[185.96980286 705.43341064]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 206]
[2 205]
[3 204]
[4 203]
[5 202]
[6 199]
[7 198]
[9 196]
[10 195]
[11 194]
[12 193]
[13 185]
[14 184]
[15 183]
[17 180]
[18 179]
[19 178]
[20 177]
[21 176]
[22 175]
[23 174]
[24 173]
[25 172]
[27 170]
[29 168]
[30 167]
[31 166]
[32 165]
[41 156]
[42 155]
[43 154]
[48 153]
[49 152]
[50 151]
[51 150]
[54 148]
[55 147]
[59 141]
[60 140]
[61 139]
[64 136]
[65 135]
[66 134]
[67 128]
[68 127]
[69 126]
[71 123]
[72 122]
[74 120]
[75 119]
[84 118]
[85 117]
[86 116]
[87 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
