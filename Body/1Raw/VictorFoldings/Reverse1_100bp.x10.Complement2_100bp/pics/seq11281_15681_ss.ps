%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAGAAAUGAUAUUUUCGAUAACACAUUCGAUCAGUAUAAUUCAACAACCGAGUCCUCAAACUAUCAAGAACCCGUCACUCUCACUCAUCAUCUUACAAxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[102.17652893 589.06427002]
[89.74195862 580.66131592]
[77.99594879 571.32000732]
[67.00914764 561.09661865]
[56.84762573 550.05255127]
[47.57249832 538.25421143]
[39.23955154 525.77258301]
[31.89889526 512.68280029]
[25.59468079 499.06350708]
[20.36482239 484.99664307]
[16.24077225 470.56677246]
[13.24733543 455.86074829]
[11.40251446 440.96694946]
[10.71740341 425.97497559]
[11.19612408 410.97500610]
[12.83579636 396.05725098]
[15.62655830 381.31140137]
[19.55162811 366.82617188]
[24.58739662 352.68865967]
[30.70357895 338.98388672]
[37.86339188 325.79428101]
[46.02377701 313.19918823]
[55.13565063 301.27435303]
[65.14421844 290.09146118]
[75.98928070 279.71780396]
[87.60561371 270.21572876]
[99.92336273 261.64245605]
[112.86843872 254.04946899]
[126.36299133 247.48246765]
[140.32585144 241.98095703]
[135.92485046 227.64111328]
[131.52386475 213.30125427]
[126.80372620 199.06326294]
[121.76680756 184.93423462]
[116.72988892 170.80520630]
[111.69297791 156.67617798]
[106.65605927 142.54714966]
[101.44902039 137.30229187]
[101.65103912 128.17010498]
[96.82504272 113.96764374]
[86.43765259 104.60848999]
[88.97250366 90.85835266]
[84.14650726 76.65589905]
[79.32050323 62.45344543]
[74.49450684 48.25098801]
[60.59732056 41.21494675]
[55.90539169 26.74288940]
[62.69882584 13.53740311]
[57.87282562 -0.66505253]
[53.04682922 -14.86750793]
[48.22083282 -29.06996346]
[43.39483261 -43.27241898]
[38.56883621 -57.47487640]
[33.74283981 -71.67733002]
[28.91684151 -85.87978363]
[24.09084320 -100.08224487]
[21.25619888 -85.35251617]
[13.35383415 -72.60290527]
[1.42344224 -63.51083374]
[-12.96532822 -59.27252197]
[-27.91938782 -60.44559479]
[-41.47127151 -66.87571716]
[-51.83800125 -77.71688080]
[-57.65564728 -91.54276276]
[-58.15880203 -106.53432465]
[-53.28126907 -120.71916199]
[-43.66476822 -132.23101807]
[-30.57451820 -139.55532837]
[-15.73276424 -141.72842407]
[-1.09219599 -138.46441650]
[11.42096901 -130.19273376]
[20.16142082 -117.99950409]
[18.60089684 -132.91810608]
[17.04037476 -147.83671570]
[15.47985172 -162.75532532]
[13.91932869 -177.67391968]
[-1.09701288 -177.88806152]
[-15.98262405 -179.87677002]
[-30.52853394 -183.61212158]
[-44.53054047 -189.04167175]
[-57.79207993 -196.08923340]
[-70.12697601 -204.65582275]
[-81.36207581 -214.62121582]
[-91.33963776 -225.84550476]
[-99.91961670 -238.17109680]
[-106.98154449 -251.42498779]
[-112.42628479 -265.42111206]
[-116.17741394 -279.96295166]
[-118.18225861 -294.84640503]
[-118.41268158 -309.86248779]
[-116.86544037 -324.80044556]
[-113.56226349 -339.45053101]
[-108.54952240 -353.60711670]
[-101.89758301 -367.07144165]
[-93.69983673 -379.65451050]
[-84.07135773 -391.17962646]
[-73.14731598 -401.48507690]
[-61.08106995 -410.42608643]
[-48.04201508 -417.87722778]
[-34.21319199 -423.73385620]
[-19.78874207 -427.91375732]
[-4.97115898 -430.35824585]
[10.03154182 -431.03302002]
[25.00874519 -429.92861938]
[39.75019455 -427.06051636]
[54.04894257 -422.46899414]
[67.70426178 -416.21847534]
[80.52444458 -408.39675903]
[92.32952118 -399.11364746]
[102.95376587 -388.49942017]
[112.24802399 -376.70309448]
[120.08183289 -363.89028931]
[126.34520721 -350.24087524]
[130.95022583 -335.94647217]
[133.83222961 -321.20773315]
[134.95077515 -306.23156738]
[134.29014587 -291.22824097]
[131.85963440 -276.40835571]
[127.69333649 -261.97998047]
[121.84975433 -248.14564514]
[114.41092682 -235.09956360]
[105.48127747 -223.02488708]
[95.18616486 -212.09112549]
[83.67012024 -202.45178223]
[71.09480286 -194.24217224]
[57.63675690 -187.57752991]
[43.48490906 -182.55143738]
[28.83793259 -179.23445129]
[30.39845657 -164.31584167]
[31.95897865 -149.39723206]
[33.51950073 -134.47863770]
[35.08002472 -119.56002808]
[38.29330063 -104.90824127]
[43.11929703 -90.70578766]
[47.94529343 -76.50332642]
[52.77129364 -62.30087280]
[57.59729004 -48.09841537]
[62.42328644 -33.89596176]
[67.24928284 -19.69350624]
[72.07527924 -5.49105024]
[76.90128326 8.71140575]
[90.33379364 15.04410839]
[95.43035889 29.37866974]
[88.69696045 43.42499161]
[93.52296448 57.62744522]
[98.34896088 71.82990265]
[103.17495728 86.03235626]
[113.56234741 95.39151001]
[111.02749634 109.14164734]
[115.85349274 123.34410095]
[120.78508759 137.51023865]
[125.82200623 151.63926697]
[130.85891724 165.76829529]
[135.89584351 179.89732361]
[140.93275452 194.02635193]
[144.91026306 197.40666199]
[146.98585510 201.55940247]
[147.18379211 205.63075256]
[145.86370850 208.90026855]
[150.26470947 223.24011230]
[154.66569519 237.57995605]
[169.31083679 234.30148315]
[184.16598511 232.16775513]
[199.14181519 231.19161987]
[214.14825439 231.37893677]
[229.09504700 232.72857666]
[243.89231873 235.23243713]
[258.45104980 238.87544250]
[272.68371582 243.63569641]
[286.50466919 249.48457336]
[299.83081055 256.38687134]
[312.58203125 264.30111694]
[324.68157959 273.17968750]
[336.05673218 282.96917725]
[346.63906860 293.61071777]
[356.36492920 305.04034424]
[365.17584229 317.18923950]
[373.01879883 329.98443604]
[379.84661865 343.34887695]
[385.61828613 357.20227051]
[390.29901123 371.46127319]
[393.86074829 386.04010010]
[396.28198242 400.85110474]
[397.54818726 415.80520630]
[397.65176392 430.81246948]
[396.59204102 445.78262329]
[394.37545776 460.62564087]
[391.01531982 475.25222778]
[386.53179932 489.57446289]
[380.95190430 503.50619507]
[374.30917358 516.96362305]
[366.64355469 529.86584473]
[358.00115967 542.13519287]
[348.43399048 553.69793701]
[337.99954224 564.48455811]
[326.76058960 574.43011475]
[314.78469849 583.47479248]
[302.14395142 591.56427002]
[288.91433716 598.64984131]
[275.17541504 604.68890381]
[261.00982666 609.64514160]
[246.50274658 613.48876953]
[231.74143982 616.19659424]
[216.81469727 617.75244141]
[201.81227112 618.14685059]
[186.82440186 617.37750244]
[171.94120789 615.44897461]
[157.25222778 612.37292480]
[142.84577942 608.16784668]
[128.80853271 602.85906982]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 161]
[31 160]
[32 159]
[33 155]
[34 154]
[35 153]
[36 152]
[37 151]
[39 150]
[40 149]
[42 147]
[43 146]
[44 145]
[45 144]
[48 141]
[49 140]
[50 139]
[51 138]
[52 137]
[53 136]
[54 135]
[55 134]
[56 133]
[72 132]
[73 131]
[74 130]
[75 129]
[76 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
