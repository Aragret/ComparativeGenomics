%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxGGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAU\
) } def
/len { sequence length } bind def

/coor [
[118.25900269 242.21716309]
[116.91223145 227.27220154]
[116.55612183 212.27090454]
[117.19224548 197.27888489]
[118.81781769 182.36166382]
[121.42572021 167.58450317]
[125.00456238 153.01200867]
[129.53868103 138.70790100]
[135.00825500 124.73473358]
[121.43205261 118.35613251]
[107.85585022 111.97752380]
[93.90888214 112.96432495]
[85.76554871 101.59868622]
[72.18933868 95.22007751]
[58.61313629 88.84147644]
[45.03692627 82.46286774]
[37.84816360 95.63328552]
[29.87730217 108.34561920]
[21.15342903 120.55349731]
[11.70837593 132.21235657]
[1.57660973 143.27967834]
[-9.20490170 153.71505737]
[-20.59681702 163.48042297]
[-32.55756760 172.54014587]
[-45.04351425 180.86116028]
[-58.00908661 188.41311646]
[-71.40698242 195.16844177]
[-85.18831635 201.10250854]
[-99.30279541 206.19363403]
[-113.69892120 210.42327881]
[-128.32415771 213.77597046]
[-143.12513733 216.23948669]
[-158.04786682 217.80485535]
[-173.03788757 218.46635437]
[-188.04049683 218.22157288]
[-203.00094604 217.07139587]
[-217.86466980 215.02001953]
[-232.57740784 212.07493591]
[-247.08547974 208.24690247]
[-261.33593750 203.54986572]
[-275.27682495 198.00097656]
[-288.85723877 191.62046814]
[-302.02761841 184.43164062]
[-314.73989868 176.46072388]
[-326.94775391 167.73680115]
[-338.60656738 158.29168701]
[-349.67382812 148.15986633]
[-360.10916138 137.37831116]
[-369.87448120 125.98635101]
[-378.93414307 114.02555847]
[-387.25509644 101.53957367]
[-394.80700684 88.57396698]
[-401.56225586 75.17603302]
[-407.49624634 61.39467621]
[-412.58734131 47.28017426]
[-416.81689453 32.88403320]
[-420.16952515 18.25877762]
[-422.63296509 3.45778084]
[-424.19827271 -11.46495342]
[-424.85971069 -26.45497131]
[-424.61483765 -41.45757675]
[-423.46459961 -56.41802979]
[-421.41317749 -71.28173065]
[-418.46801758 -85.99446106]
[-414.63989258 -100.50251770]
[-409.94281006 -114.75296783]
[-404.39382935 -128.69381714]
[-398.01327515 -142.27418518]
[-390.82440186 -155.44453430]
[-382.85342407 -168.15679932]
[-374.12942505 -180.36459351]
[-364.68426514 -192.02337646]
[-354.55239868 -203.09059143]
[-343.77078247 -213.52587891]
[-332.37878418 -223.29113770]
[-320.41793823 -232.35073853]
[-307.93191528 -240.67164612]
[-294.96627808 -248.22348022]
[-281.56832886 -254.97868347]
[-267.78692627 -260.91262817]
[-253.67240906 -266.00363159]
[-239.27624512 -270.23312378]
[-224.65098572 -273.58569336]
[-209.84997559 -276.04907227]
[-194.92723083 -277.61428833]
[-179.93721008 -278.27566528]
[-164.93460083 -278.03073120]
[-149.97415161 -276.88040161]
[-135.11045837 -274.82891846]
[-120.39775085 -271.88369751]
[-105.88970947 -268.05551147]
[-91.63928223 -263.35833740]
[-77.69846344 -257.80932617]
[-64.11811829 -251.42869568]
[-50.94779968 -244.23974609]
[-38.23557663 -236.26870728]
[-26.02782249 -227.54466248]
[-14.36908817 -218.09945679]
[-3.30191422 -207.96752930]
[7.13331604 -197.18588257]
[16.89852524 -185.79382324]
[25.95808220 -173.83294678]
[34.27892685 -161.34689331]
[41.83069992 -148.38121033]
[48.58584595 -134.98321533]
[54.51971054 -121.20180511]
[59.61064911 -107.08724976]
[63.84008026 -92.69107056]
[67.19257355 -78.06578827]
[69.65589142 -63.26476669]
[71.22105408 -48.34201813]
[71.88233948 -33.35198975]
[71.63734436 -18.34938812]
[70.48696136 -3.38894773]
[68.43538666 11.47473907]
[65.49009705 26.18743515]
[61.66185379 40.69545746]
[56.96461868 54.94586563]
[51.41553116 68.88665771]
[64.99173737 75.26526642]
[78.56794739 81.64386749]
[92.14414978 88.02247620]
[106.09111786 87.03567505]
[114.23445129 98.40131378]
[127.81066132 104.77992249]
[141.38687134 111.15852356]
[148.65130615 98.02864838]
[156.76762390 85.40759277]
[165.70033264 73.35054016]
[175.41036987 61.91022491]
[185.85527039 51.13666534]
[196.98937988 41.07697296]
[208.76399231 31.77513885]
[221.12763977 23.27183533]
[234.02622986 15.60424709]
[247.40338135 8.80590153]
[261.20059204 2.90652752]
[275.35754395 -2.06807876]
[289.81228638 -6.09616470]
[304.50167847 -9.16011620]
[319.36145020 -11.24653435]
[334.32659912 -12.34629726]
[349.33175659 -12.45459557]
[364.31121826 -11.57095432]
[379.19955444 -9.69923878]
[393.93164062 -6.84763384]
[408.44302368 -3.02860808]
[422.67028809 1.74113858]
[436.55123901 7.44074869]
[450.02511597 14.04529953]
[463.03305054 21.52591133]
[475.51812744 29.84987068]
[487.42578125 38.98078156]
[498.70391846 48.87871552]
[509.30325317 59.50039291]
[519.17742920 70.79936218]
[528.28320312 82.72621918]
[536.58087158 95.22881317]
[544.03405762 108.25246429]
[550.61022949 121.74023438]
[556.28057861 135.63313293]
[561.02032471 149.87042236]
[564.80877686 164.38983154]
[567.62939453 179.12788391]
[569.46972656 194.02012634]
[570.32177734 209.00143433]
[570.18188477 224.00630188]
[569.05059814 238.96911621]
[566.93292236 253.82446289]
[563.83801270 268.50735474]
[559.77947998 282.95361328]
[554.77508545 297.10003662]
[548.84667969 310.88479614]
[542.02014160 324.24758911]
[534.32543945 337.13000488]
[525.79608154 349.47570801]
[516.46948242 361.23071289]
[506.38635254 372.34359741]
[495.59082031 382.76577759]
[484.13006592 392.45172119]
[472.05422974 401.35900879]
[459.41610718 409.44873047]
[446.27096558 416.68548584]
[432.67626953 423.03765869]
[418.69146729 428.47744751]
[404.37774658 432.98107910]
[389.79763794 436.52886963]
[375.01495361 439.10528564]
[360.09432983 440.69906616]
[345.10098267 441.30322266]
[330.10046387 440.91516113]
[315.15841675 439.53656006]
[300.34011841 437.17343140]
[285.71041870 433.83609009]
[271.33328247 429.53918457]
[257.27157593 424.30148315]
[243.58674622 418.14587402]
[230.33868408 411.09927368]
[217.58531189 403.19250488]
[205.38237000 394.46014404]
[193.78324890 384.94036865]
[182.83865356 374.67483521]
[172.59643555 363.70837402]
[163.10140991 352.08898926]
[154.39506531 339.86749268]
[146.51550293 327.09729004]
[139.49714661 313.83422852]
[133.37071228 300.13635254]
[128.16296387 286.06347656]
[123.89669800 271.67721558]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 126]
[10 125]
[11 124]
[13 122]
[14 121]
[15 120]
[16 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
