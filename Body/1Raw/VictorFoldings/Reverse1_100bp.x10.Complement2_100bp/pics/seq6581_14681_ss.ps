%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[56.96697617 246.86201477]
[55.69721985 261.81527710]
[53.31355286 276.63183594]
[49.82930374 291.22882080]
[45.26395416 305.52462769]
[39.64303970 319.43927002]
[32.99799347 332.89495850]
[25.36597633 345.81643677]
[16.78967285 358.13143921]
[7.31704378 369.77108765]
[-2.99893427 380.67031860]
[-14.10057068 390.76812744]
[-25.92577934 400.00805664]
[-38.40842819 408.33847046]
[-51.47870636 415.71276855]
[-65.06352234 422.08966064]
[-79.08689880 427.43356323]
[-93.47042084 431.71450806]
[-108.13363647 434.90863037]
[-122.99454498 436.99798584]
[-137.97004700 437.97097778]
[-152.97637939 437.82211304]
[-167.92962646 436.55221558]
[-182.74615479 434.16842651]
[-197.34312439 430.68405151]
[-211.63888550 426.11856079]
[-225.55348206 420.49752808]
[-239.00910950 413.85235596]
[-251.93052673 406.22024536]
[-264.24545288 397.64382935]
[-275.88500977 388.17108154]
[-286.78414917 377.85501099]
[-296.88186646 366.75329590]
[-306.12170410 354.92800903]
[-314.45199585 342.44528198]
[-321.82617188 329.37493896]
[-328.20294189 315.79006958]
[-333.54672241 301.76663208]
[-337.82754517 287.38308716]
[-341.02151489 272.71984863]
[-343.11077881 257.85891724]
[-344.08361816 242.88340759]
[-343.93460083 227.87707520]
[-342.66458130 212.92382812]
[-340.28067017 198.10731506]
[-336.79617310 183.51039124]
[-332.23056030 169.21467590]
[-326.60940552 155.30012512]
[-319.96411133 141.84454346]
[-312.33187866 128.92320251]
[-303.75534058 116.60835266]
[-294.28250122 104.96887207]
[-283.96633911 94.06983948]
[-272.86453247 83.97222137]
[-261.03915405 74.73248291]
[-248.55636597 66.40229034]
[-235.48594666 59.02824402]
[-221.90103149 52.65156937]
[-207.87754822 47.30793762]
[-193.49395752 43.02722931]
[-178.83068848 39.83338547]
[-163.96974182 37.74426270]
[-148.99421692 36.77154922]
[-133.98789978 36.92068481]
[-119.03466797 38.19083405]
[-104.21817780 40.57489395]
[-89.62127686 44.05952835]
[-75.32559967 48.62525558]
[-61.41109467 54.24654007]
[-47.95558167 60.89194107]
[-35.03430557 68.52429962]
[-22.71953392 77.10092926]
[-11.08013153 86.57386780]
[-0.18119355 96.89013672]
[9.91632938 107.99203491]
[19.15596581 119.81748962]
[27.48604393 132.30035400]
[40.55022812 124.92967224]
[53.61441422 117.55897522]
[66.67859650 110.18828583]
[73.96141052 97.19560242]
[89.78256226 97.15325165]
[102.44508362 89.11207581]
[114.67156982 80.42225647]
[126.89805603 71.73242950]
[139.05950928 62.95182800]
[151.15527344 54.08093262]
[163.25102234 45.21003723]
[175.34677124 36.33914185]
[176.95249939 32.30484009]
[179.50207520 29.29415321]
[182.55776978 27.47809410]
[185.67135620 26.86796951]
[188.43696594 27.32575417]
[201.03927612 19.19053841]
[213.64158630 11.05532265]
[226.24389648 2.92010665]
[238.84620667 -5.21510935]
[251.44851685 -13.35032463]
[264.05084229 -21.48554039]
[256.93850708 -34.70125580]
[250.89869690 -48.44027328]
[245.96954346 -62.61572647]
[242.18220520 -77.13799286]
[239.56065369 -91.91526031]
[238.12145996 -106.85409546]
[237.87371826 -121.86005402]
[238.81898499 -136.83825684]
[240.95129395 -151.69400024]
[244.25715637 -166.33337402]
[248.71568298 -180.66381836]
[254.29867554 -194.59474182]
[260.97085571 -208.03804016]
[268.69000244 -220.90872192]
[277.40734863 -233.12544250]
[287.06774902 -244.61093140]
[297.61013794 -255.29260254]
[308.96789551 -265.10287476]
[321.06915283 -273.97979736]
[333.83746338 -281.86718750]
[347.19204712 -288.71517944]
[361.04849243 -294.48049927]
[375.31918335 -299.12667847]
[389.91390991 -302.62438965]
[404.74041748 -304.95144653]
[419.70492554 -306.09317017]
[434.71282959 -306.04235840]
[449.66928101 -304.79931641]
[464.47967529 -302.37191772]
[479.05038452 -298.77548218]
[493.28930664 -294.03277588]
[507.10638428 -288.17373657]
[520.41430664 -281.23547363]
[533.12890625 -273.26181030]
[545.16973877 -264.30316162]
[556.46081543 -254.41619873]
[566.93066406 -243.66339111]
[576.51306152 -232.11274719]
[585.14746094 -219.83728027]
[592.77929688 -206.91461182]
[599.36029053 -193.42643738]
[604.84881592 -179.45805359]
[609.21020508 -165.09774780]
[612.41687012 -150.43630981]
[614.44854736 -135.56646729]
[615.29235840 -120.58220673]
[614.94299316 -105.57826996]
[613.40270996 -90.64952850]
[610.68115234 -75.89035034]
[606.79553223 -61.39406204]
[601.77050781 -47.25231171]
[595.63781738 -33.55450821]
[588.43615723 -20.38725471]
[580.21112061 -7.83380079]
[571.01477051 4.02648592]
[560.90509033 15.11861992]
[549.94616699 25.37247086]
[538.20715332 34.72321320]
[525.76239014 43.11172485]
[512.69042969 50.48497009]
[499.07403564 56.79633331]
[484.99923706 62.00590897]
[470.55499268 66.08076477]
[455.83270264 68.99513245]
[440.92535400 70.73059082]
[425.92727661 71.27616882]
[410.93325806 70.62841034]
[396.03811646 68.79141998]
[381.33599854 65.77680206]
[366.91989136 61.60361862]
[352.88088989 56.29825974]
[339.30780029 49.89426041]
[326.28640747 42.43211746]
[313.89904785 33.95900345]
[302.22406006 24.52849388]
[291.33523560 14.20020676]
[281.30142212 3.03944516]
[272.18603516 -8.88322926]
[259.58374023 -0.74801314]
[246.98141479 7.38720274]
[234.37910461 15.52241898]
[221.77679443 23.65763474]
[209.17448425 31.79285049]
[196.57217407 39.92806625]
[184.21766663 48.43489456]
[172.12191772 57.30578995]
[160.02616882 66.17668152]
[147.93040466 75.04757690]
[144.39570618 81.53816223]
[135.58787537 83.95891571]
[123.36139679 92.64874268]
[111.13491058 101.33856201]
[125.93935394 103.75276947]
[135.82334900 115.03580475]
[136.26805115 130.02920532]
[127.07015228 141.87820435]
[112.43481445 145.16558838]
[99.05311584 138.38842773]
[93.04298401 124.64511871]
[97.15325165 110.21743774]
[88.93599701 123.73732758]
[74.04928589 123.25247192]
[60.98510361 130.62316895]
[47.92091751 137.99385071]
[34.85673141 145.36454773]
[41.23376465 158.94931030]
[46.57776642 172.97264099]
[50.85885620 187.35610962]
[54.05308914 202.01930237]
[56.14260483 216.88020325]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[77 205]
[78 204]
[79 203]
[80 202]
[82 200]
[83 192]
[84 191]
[85 190]
[86 188]
[87 187]
[88 186]
[89 185]
[94 184]
[95 183]
[96 182]
[97 181]
[98 180]
[99 179]
[100 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
