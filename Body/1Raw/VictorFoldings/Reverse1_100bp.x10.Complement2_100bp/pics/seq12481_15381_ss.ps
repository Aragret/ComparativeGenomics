%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUUCGAAUCCCUCUCGACCCAACAAACCCAACACCGAGUCACAGUCAAGCUCUAUUAUUGAAGAACCAGAUCCGUGUACUUAUAACAACACCCCUxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[218.68368530 551.69506836]
[224.44718933 537.81701660]
[232.17001343 524.92608643]
[241.68754578 513.29705811]
[252.79690552 503.17779541]
[265.26132202 494.78396606]
[258.78182983 481.25561523]
[252.30232239 467.72726440]
[245.82283020 454.19891357]
[239.34333801 440.67056274]
[228.04214478 436.35665894]
[222.53326416 425.13900757]
[226.25946045 412.79080200]
[219.98210144 399.16748047]
[205.12765503 389.82336426]
[206.96849060 371.50143433]
[200.48899841 357.97308350]
[194.00950623 344.44476318]
[187.52999878 330.91641235]
[181.05050659 317.38806152]
[174.57101440 303.85971069]
[171.38482666 302.34957886]
[168.77177429 299.22116089]
[167.48452759 294.76062012]
[168.11941528 289.57949829]
[162.25045776 275.77532959]
[151.15316772 270.96109009]
[146.15066528 259.50863647]
[150.42453003 247.33914185]
[144.76173401 233.44911194]
[139.09895325 219.55908203]
[133.43617249 205.66905212]
[122.41178894 200.69013977]
[117.58035278 189.16447449]
[122.03491974 177.05993652]
[116.57956696 163.08714294]
[111.12420654 149.11434937]
[105.66885376 135.14155579]
[100.21349335 121.16875458]
[84.95119476 114.88942719]
[78.83472443 99.56113434]
[85.58132935 84.49955750]
[73.20674896 74.64155579]
[75.56671143 59.93509674]
[69.90393066 46.04507065]
[57.52934647 36.18706512]
[59.88931274 21.48060989]
[54.22652435 7.59058332]
[53.16371536 22.55288315]
[49.05464554 36.97909546]
[42.07403183 50.25580215]
[32.51869202 61.81848145]
[20.79492569 71.17547607]
[7.40123415 77.92891693]
[-7.09287691 81.79165649]
[-22.07111168 82.59944153]
[-36.89658356 80.31792450]
[-50.93891144 75.04412079]
[-63.60100937 67.00226593]
[-74.34446716 56.53431702]
[-82.71248627 44.08536530]
[-88.34923553 30.18475533]
[-91.01505280 15.42354012]
[-90.59657288 0.42937911]
[-87.11159515 -14.16017056]
[-80.70830536 -27.72475243]
[-71.65898132 -39.68759537]
[-60.34838486 -49.54003143]
[-47.25746536 -56.86313248]
[-32.94284821 -61.34551239]
[-18.01319885 -62.79658127]
[-3.10333610 -61.15464020]
[11.15276718 -56.48950195]
[24.14893532 -48.99953461]
[35.33256149 -39.00320816]
[44.22811508 -26.92557907]
[50.45740509 -13.28002644]
[50.90401077 -28.27337646]
[43.58102417 -42.29779816]
[51.69383240 -54.78905869]
[44.37084579 -68.81348419]
[52.48365402 -81.30474091]
[52.93025970 -96.29809570]
[53.37686539 -111.29144287]
[53.82347107 -126.28479004]
[38.27947998 -131.19793701]
[24.75440407 -140.27384949]
[14.33412933 -152.77436829]
[7.85261488 -167.68679810]
[5.82514334 -183.80593872]
[8.40736389 -199.83140564]
[15.38337517 -214.47264099]
[26.18375206 -226.55278015]
[39.93202209 -235.10327148]
[55.51578140 -239.44151306]
[55.51578140 -254.44151306]
[55.51578140 -269.44149780]
[55.51578140 -284.44149780]
[41.45859146 -290.22631836]
[30.68871880 -300.95376587]
[24.84848785 -314.98800659]
[24.82849312 -330.18893433]
[30.63178062 -344.23849487]
[41.37339401 -354.99426270]
[55.41530991 -360.81600952]
[70.61624908 -360.81600952]
[84.65816498 -354.99426270]
[95.39978027 -344.23849487]
[101.20306396 -330.18893433]
[101.18306732 -314.98800659]
[95.34284210 -300.95376587]
[84.57296753 -290.22631836]
[70.51577759 -284.44149780]
[70.51577759 -269.44149780]
[70.51577759 -254.44151306]
[70.51577759 -239.44151306]
[83.86051941 -236.02970886]
[96.00512695 -229.51020813]
[106.23746490 -220.25990295]
[113.95621490 -208.81599426]
[118.70625305 -195.84477234]
[120.20544434 -182.10279846]
[118.36144257 -168.39282227]
[113.27731323 -155.51690674]
[105.24582672 -144.22943115]
[94.73257446 -135.19293213]
[82.34899902 -128.93925476]
[68.81681824 -125.83818817]
[68.37021637 -110.84484100]
[67.92360687 -95.85148621]
[67.47700500 -80.85813904]
[74.83193207 -67.90614319]
[66.68717957 -54.34245300]
[74.04211426 -41.39045715]
[65.89736176 -27.82677078]
[65.45075989 -12.83342075]
[68.11655426 1.92779684]
[73.77933502 15.81782341]
[85.74887848 24.68232155]
[83.79395294 40.38228607]
[89.45674133 54.27231216]
[101.42628479 63.13681030]
[99.47135925 78.83676910]
[111.65598297 82.32799530]
[119.66225433 92.15414429]
[120.62014771 104.79281616]
[114.18629456 115.71339417]
[119.64164734 129.68618774]
[125.09700775 143.65899658]
[130.55236816 157.63179016]
[136.00772095 171.60458374]
[150.64727783 182.77439880]
[147.32618713 200.00627136]
[152.98898315 213.89630127]
[158.65176392 227.78633118]
[164.31455994 241.67634583]
[179.11878967 252.62696838]
[176.05462646 269.90637207]
[181.92358398 283.71054077]
[188.09936523 297.38021851]
[194.57885742 310.90856934]
[201.05834961 324.43692017]
[207.53784180 337.96524048]
[214.01734924 351.49359131]
[220.49684143 365.02194214]
[232.38050842 370.03607178]
[237.49877930 381.43725586]
[233.60540771 392.89010620]
[239.88278198 406.51342773]
[255.16122437 416.79208374]
[252.87167358 434.19107056]
[259.35116577 447.71942139]
[265.83065796 461.24777222]
[272.31018066 474.77612305]
[278.78967285 488.30444336]
[293.14273071 483.85388184]
[307.99084473 481.54064941]
[323.01754761 481.41403198]
[337.90252686 483.47680664]
[352.32852173 487.68493652]
[365.98806763 493.94873047]
[378.58993530 502.13473511]
[389.86557007 512.06842041]
[399.57464600 523.53802490]
[407.51016235 536.29907227]
[413.50302124 550.07965088]
[417.42544556 564.58593750]
[419.19384766 579.50878906]
[418.77050781 594.53002930]
[416.16452026 609.32958984]
[411.43133545 623.59191895]
[404.67193604 637.01312256]
[396.03033447 649.30706787]
[385.69073486 660.21166992]
[373.87353516 669.49456787]
[360.83065796 676.95782471]
[346.84005737 682.44244385]
[332.19995117 685.83148193]
[317.22241211 687.05267334]
[302.22668457 686.08001709]
[287.53240967 682.93420410]
[273.45278931 677.68237305]
[260.28790283 670.43640137]
[248.31840515 661.35076904]
[237.79942322 650.61907959]
[228.95513916 638.47015381]
[221.97409058 625.16290283]
[217.00508118 610.98095703]
[214.15400696 596.22668457]
[213.48165894 581.21447754]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 175]
[7 174]
[8 173]
[9 172]
[10 171]
[13 169]
[14 168]
[16 165]
[17 164]
[18 163]
[19 162]
[20 161]
[21 160]
[25 159]
[26 158]
[29 156]
[30 155]
[31 154]
[32 153]
[35 151]
[36 150]
[37 149]
[38 148]
[39 147]
[42 143]
[44 141]
[45 140]
[47 138]
[48 137]
[77 136]
[78 135]
[80 133]
[82 131]
[83 130]
[84 129]
[85 128]
[95 116]
[96 115]
[97 114]
[98 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
