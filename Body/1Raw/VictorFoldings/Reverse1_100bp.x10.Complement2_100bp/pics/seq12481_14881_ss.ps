%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUUCGAAUCCCUCUCGACCCAACAAACCCAACACCGAGUCACAGUCAAGCUCUAUUAUUGAAGAACCAGAUCCGUGUACUUAUAACAACACCCCUxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[138.54823303 651.09509277]
[126.23050690 642.48962402]
[115.26290131 632.21868896]
[105.86870575 620.49133301]
[98.23917389 607.54644775]
[92.52962494 593.64746094]
[88.85630798 579.07733154]
[87.29400635 564.13281250]
[87.87451935 549.11804199]
[90.58603668 534.33868408]
[95.37335205 520.09570312]
[102.13899994 506.67904663]
[110.74524689 494.36184692]
[121.01687622 483.39489746]
[132.74476624 474.00140381]
[145.69015503 466.37268066]
[159.58949280 460.66400146]
[174.15982056 456.99157715]
[172.59928894 442.07296753]
[171.03877258 427.15435791]
[169.47824097 412.23577881]
[167.47422791 397.37023926]
[165.02850342 382.57095337]
[162.58277893 367.77169800]
[160.13705444 352.97241211]
[157.36143494 338.23144531]
[154.25732422 323.55615234]
[151.15321350 308.88085938]
[141.18919373 302.02194214]
[138.48300171 289.82110596]
[145.01786804 278.70092773]
[142.13259888 263.98104858]
[138.48451233 249.43142700]
[134.08351135 235.09158325]
[129.68251038 220.75173950]
[125.28151703 206.41188049]
[120.88052368 192.07203674]
[109.74955750 182.17501831]
[113.09737396 166.71206665]
[108.69637299 152.37222290]
[104.29537201 138.03237915]
[99.78775024 123.72569275]
[95.17373657 109.45295715]
[89.71838379 95.48016357]
[83.44101715 81.85684204]
[77.16365814 68.23352814]
[70.88629913 54.61021423]
[64.45276642 48.12581253]
[64.61857605 40.73701477]
[58.54474640 27.02174950]
[57.61814117 41.99310303]
[52.37603760 56.04729462]
[43.27192307 67.96849823]
[31.09339714 76.72541046]
[16.89402390 81.56047058]
[1.90219069 82.05539703]
[-12.58515835 78.16737366]
[-25.31472206 70.23274994]
[-35.18526840 58.93795776]
[-41.34289169 45.26010513]
[-43.25490189 30.38246536]
[-40.75588608 15.59209919]
[-34.06203461 2.16852379]
[-23.75243568 -8.72698784]
[-10.71897125 -16.15186501]
[3.91083407 -19.46377945]
[18.87135696 -18.37622070]
[32.86835861 -12.98327255]
[44.69096375 -3.75147772]
[53.31481552 8.51737595]
[51.31080246 -6.34815216]
[49.30678940 -21.21368027]
[45.05892181 -29.30030060]
[47.38530731 -36.31526184]
[45.60284424 -51.20898056]
[43.82037735 -66.10269928]
[42.03791046 -80.99641418]
[40.25544357 -95.89012909]
[30.15713120 -84.79850769]
[15.18067551 -83.95841980]
[3.90526962 -93.85110474]
[2.78997946 -108.80958557]
[12.47369385 -120.26496887]
[27.40913963 -121.65508270]
[39.04016495 -112.18444824]
[38.59355927 -127.17779541]
[38.14694977 -142.17114258]
[37.70034409 -157.16448975]
[34.55622482 -162.98051453]
[34.78668594 -168.65888977]
[37.47036743 -172.60943604]
[37.47036743 -187.60943604]
[37.24703979 -202.60777283]
[36.80043411 -217.60112000]
[36.35382843 -232.59448242]
[35.90722275 -247.58782959]
[35.46061707 -262.58117676]
[21.23742676 -267.94488525]
[10.15293121 -278.34692383]
[3.89743805 -292.20104980]
[3.42486238 -307.39465332]
[8.80726910 -321.61077881]
[19.22388077 -332.68157959]
[33.08623886 -338.91882324]
[48.28043747 -339.37142944]
[62.48946381 -333.97030640]
[73.54655457 -323.53915405]
[79.76557922 -309.66860962]
[80.19818115 -294.47381592]
[74.77838898 -280.27191162]
[64.33268738 -269.22854614]
[50.45396805 -263.02777100]
[50.90057373 -248.03443909]
[51.34717941 -233.04107666]
[51.79378510 -218.04772949]
[52.24039078 -203.05438232]
[55.04050827 -199.18548584]
[55.43992996 -193.51649475]
[52.47036743 -187.60943604]
[52.47036743 -172.60943604]
[52.69369507 -157.61109924]
[53.14030075 -142.61775208]
[53.58690643 -127.62440491]
[54.03351212 -112.63105011]
[55.14916229 -97.67259979]
[56.93162918 -82.77887726]
[58.71409225 -67.88516235]
[60.49655914 -52.99144745]
[62.27902603 -38.09772873]
[64.17231750 -23.21769333]
[66.17633057 -8.35216522]
[68.18034363 6.51336241]
[72.26000977 20.94791603]
[78.33384705 34.66318130]
[84.50961304 48.33285141]
[90.78697205 61.95616913]
[97.06433868 75.57948303]
[103.34169769 89.20280457]
[107.58529663 74.81558990]
[119.40436554 65.57926941]
[134.39068604 64.93875885]
[146.95472717 73.13294983]
[152.41041565 87.10562134]
[148.72291565 101.64530182]
[137.26756287 111.32905579]
[122.31694031 112.54508209]
[109.44647217 104.83895111]
[114.06047821 119.11168671]
[119.67787933 126.31464386]
[118.63522339 133.63137817]
[123.03622437 147.97122192]
[127.43721771 162.31108093]
[138.88296509 173.23377991]
[135.22036743 187.67103577]
[139.62136841 202.01089478]
[144.02236938 216.35073853]
[148.42335510 230.69058228]
[152.82435608 245.03042603]
[159.77452087 231.73774719]
[173.59461975 225.90637207]
[187.96627808 230.20233154]
[196.31898499 242.66154480]
[194.83398438 257.58786011]
[184.19020081 268.15716553]
[169.25382996 269.53729248]
[156.85249329 261.09576416]
[159.73776245 275.81567383]
[172.15917969 289.40942383]
[165.82852173 305.77673340]
[168.93263245 320.45205688]
[172.03674316 335.12734985]
[175.52697754 339.00875854]
[177.02915955 343.40158081]
[176.68138123 347.46286011]
[174.93632507 350.52670288]
[177.38204956 365.32595825]
[179.82777405 380.12524414]
[182.27349854 394.92449951]
[185.14637756 398.18035889]
[186.67956543 401.81542969]
[186.91835022 405.36206055]
[186.05525208 408.41519165]
[184.39685059 410.67523193]
[185.95736694 425.59384155]
[187.51789856 440.51245117]
[189.07841492 455.43106079]
[204.09330750 456.00878906]
[218.87313843 458.71755981]
[233.11700439 463.50222778]
[246.53492737 470.26538086]
[258.85369873 478.86935425]
[269.82260132 489.13894653]
[279.21823120 500.86508179]
[286.84936523 513.80908203]
[292.56063843 527.70733643]
[296.23577881 542.27697754]
[297.79992676 557.22131348]
[297.22125244 572.23620605]
[294.51156616 587.01586914]
[289.72601318 601.25939941]
[282.96203613 614.67694092]
[274.35729980 626.99517822]
[264.08703613 637.96343994]
[252.36032104 647.35833740]
[239.41586304 654.98870850]
[225.51722717 660.69909668]
[210.94737244 664.37329102]
[196.00289917 665.93652344]
[180.98808289 665.35693359]
[166.20858765 662.64636230]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 186]
[19 185]
[20 184]
[21 183]
[22 178]
[23 177]
[24 176]
[25 175]
[26 171]
[27 170]
[28 169]
[31 167]
[32 166]
[33 158]
[34 157]
[35 156]
[36 155]
[37 154]
[39 152]
[40 151]
[41 150]
[42 148]
[43 147]
[44 138]
[45 137]
[46 136]
[47 135]
[49 134]
[50 133]
[70 132]
[71 131]
[72 130]
[74 129]
[75 128]
[76 127]
[77 126]
[78 125]
[85 124]
[86 123]
[87 122]
[88 121]
[91 120]
[92 119]
[93 116]
[94 115]
[95 114]
[96 113]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
