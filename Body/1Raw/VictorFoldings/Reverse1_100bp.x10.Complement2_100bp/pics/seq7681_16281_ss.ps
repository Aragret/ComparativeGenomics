%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[146.62434387 540.50067139]
[151.90191650 526.37274170]
[160.52781677 514.00164795]
[171.95983887 504.16497803]
[185.47933960 497.48114014]
[182.37522888 482.80581665]
[179.27111816 468.13052368]
[176.16700745 453.45523071]
[160.54548645 450.79174805]
[147.10951233 442.31686401]
[137.93222046 429.30331421]
[134.44308472 413.72674561]
[137.20521545 397.96585083]
[145.82481384 384.43908691]
[159.00694275 375.23367310]
[155.68469238 360.60620117]
[152.36242676 345.97875977]
[149.04017639 331.35128784]
[136.44094849 319.13546753]
[142.03349304 301.59109497]
[138.49382019 287.01470947]
[134.95414734 272.43832397]
[120.23100281 264.31011963]
[115.85587311 247.72178650]
[125.00835419 232.81367493]
[121.25205231 218.29162598]
[117.49575043 203.76956177]
[113.63144684 189.27586365]
[109.65934753 174.81134033]
[106.79225922 172.75900269]
[104.77679443 169.21598816]
[104.30274963 164.59770203]
[105.84832764 159.61189270]
[102.52606964 144.98442078]
[99.20380402 130.35696411]
[95.88154602 115.72950745]
[84.17134094 103.71920776]
[89.30743408 87.75058746]
[85.76776123 73.17421722]
[82.22808838 58.59783936]
[78.68841553 44.02146530]
[64.18640900 43.86656189]
[50.15361404 40.24185944]
[37.40735245 33.36315536]
[26.68889999 23.63564301]
[18.62035370 11.63003635]
[13.66855145 -1.95091057]
[12.11804390 -16.31353569]
[14.05475426 -30.61965370]
[19.36123085 -44.03546906]
[27.72375298 -55.78017807]
[38.65088654 -65.17139435]
[51.50235367 -71.66482544]
[48.18009186 -86.29228973]
[44.85783386 -100.91974640]
[41.10153198 -115.44181061]
[36.91452026 -129.84559631]
[32.72750854 -144.24937439]
[20.25527573 -149.33444214]
[13.09352684 -160.51119995]
[13.66818428 -173.57839966]
[21.54561043 -183.77525330]
[17.57351303 -198.23977661]
[13.60141754 -212.70429993]
[9.62932110 -227.16882324]
[0.05442933 -215.62232971]
[-14.94497108 -215.75643921]
[-24.31188011 -227.47227478]
[-21.14136124 -242.13337708]
[-7.77060270 -248.93211365]
[5.94289255 -242.85797119]
[3.05762029 -257.57785034]
[0.17234756 -272.29776001]
[-2.71292496 -287.01763916]
[-5.59819746 -301.73751831]
[-8.48346996 -316.45742798]
[-11.45201206 -319.62628174]
[-13.09274960 -323.21411133]
[-13.43702030 -326.75204468]
[-12.66521358 -329.82952881]
[-11.07483482 -332.13793945]
[-13.07884789 -347.00347900]
[-15.08286190 -361.86901855]
[-18.81499100 -367.32635498]
[-19.17652893 -372.99789429]
[-16.91840363 -377.20620728]
[-18.47892761 -392.12481689]
[-20.03944969 -407.04342651]
[-21.59997368 -421.96203613]
[-36.54644394 -423.88549805]
[-50.64624023 -429.20455933]
[-63.13897324 -437.63238525]
[-73.35092926 -448.71447754]
[-80.73139191 -461.85317993]
[-84.88233185 -476.33993530]
[-85.57990265 -491.39352417]
[-82.78649139 -506.20208740]
[-76.65272522 -519.96704102]
[-67.50940704 -531.94604492]
[-55.84962082 -541.49304199]
[-42.30215836 -548.09332275]
[-27.59762001 -551.39074707]
[-12.52900314 -551.20764160]
[2.09105897 -547.55383301]
[15.47412682 -540.62628174]
[26.89846611 -530.79876709]
[35.74798203 -518.60107422]
[41.54542160 -504.69113159]
[43.97814560 -489.81906128]
[42.91495895 -474.78689575]
[38.41319275 -460.40527344]
[30.71562386 -447.44979858]
[20.23737526 -436.61917114]
[7.54352331 -428.49740601]
[-6.68136835 -423.52255249]
[-5.12084532 -408.60394287]
[-3.56032252 -393.68533325]
[-1.99979949 -378.76675415]
[-0.21733364 -363.87301636]
[1.78667998 -349.00750732]
[3.79069376 -334.14196777]
[6.23642111 -319.34268188]
[9.12169361 -304.62280273]
[12.00696659 -289.90292358]
[14.89223862 -275.18301392]
[17.77751160 -260.46313477]
[20.66278458 -245.74324036]
[24.09384537 -231.14091492]
[28.06594086 -216.67639160]
[32.03803635 -202.21186829]
[36.01013565 -187.74734497]
[50.96875763 -180.06109619]
[55.83584595 -163.61038208]
[47.13129044 -148.43638611]
[51.31830215 -134.03259277]
[55.50531387 -119.62881470]
[57.89421463 -118.16208649]
[59.84605789 -115.66070557]
[60.96385574 -112.28639984]
[60.91643906 -108.34149170]
[59.48529434 -104.24200439]
[62.80755234 -89.61454773]
[66.12981415 -74.98708344]
[81.66335297 -74.50840759]
[96.55617523 -70.02842712]
[109.79478455 -61.84601212]
[120.47673035 -50.51217651]
[127.87206268 -36.79300308]
[131.47329712 -21.61785507]
[131.03013611 -6.01640749]
[126.56694794 8.95120049]
[118.38144684 22.26641464]
[107.02485657 33.02157593]
[93.26478577 40.48179245]
[96.80445862 55.05816650]
[100.34413147 69.63454437]
[103.88380432 84.21091461]
[113.44671631 90.85861969]
[116.11071014 102.19636536]
[110.50901031 112.40724945]
[113.83126831 127.03470612]
[117.15352631 141.66217041]
[120.47578430 156.28962708]
[124.12387085 170.83924866]
[128.09597778 185.30377197]
[133.38613892 192.75038147]
[132.01780701 200.01325989]
[135.77410889 214.53532410]
[139.53041077 229.05737305]
[151.84571838 234.51153564]
[158.67150879 245.89657593]
[157.70805359 258.94088745]
[149.53051758 268.89865112]
[153.07019043 283.47503662]
[156.60986328 298.05142212]
[167.19866943 305.41619873]
[169.84678650 317.62976074]
[163.66763306 328.02902222]
[166.98988342 342.65649414]
[170.31214905 357.28396606]
[173.63441467 371.91140747]
[187.73738098 373.90066528]
[200.28794861 380.57034302]
[209.78807068 391.10128784]
[215.11175537 404.21484375]
[215.63838196 418.32812500]
[211.32508850 431.74508667]
[202.70938110 442.86032104]
[190.84231567 450.35110474]
[193.94642639 465.02639771]
[197.05053711 479.70172119]
[200.15464783 494.37701416]
[215.22265625 495.01406860]
[229.65861511 499.37915039]
[242.55506897 507.19784546]
[253.10131836 517.97875977]
[260.63442993 531.04406738]
[264.68087769 545.57257080]
[264.98629761 560.65093994]
[261.53146362 575.33135986]
[254.53355408 588.69104004]
[244.43249512 599.89007568]
[231.86322021 608.22460938]
[217.61585999 613.17065430]
[202.58599854 614.41729736]
[187.71842957 611.88623047]
[173.94775391 605.73645020]
[162.13960266 596.35467529]
[153.03623962 584.33056641]
[147.20991516 570.41992188]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 192]
[6 191]
[7 190]
[8 189]
[15 181]
[16 180]
[17 179]
[18 178]
[20 175]
[21 174]
[22 173]
[25 169]
[26 168]
[27 167]
[28 165]
[29 164]
[33 163]
[34 162]
[35 161]
[36 160]
[38 157]
[39 156]
[40 155]
[41 154]
[53 143]
[54 142]
[55 141]
[56 136]
[57 135]
[58 134]
[62 131]
[63 130]
[64 129]
[65 128]
[71 127]
[72 126]
[73 125]
[74 124]
[75 123]
[76 122]
[81 121]
[82 120]
[83 119]
[86 118]
[87 117]
[88 116]
[89 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
