%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[24.10607719 543.40710449]
[30.15241623 527.56799316]
[30.15241623 512.56799316]
[30.15241623 497.56799316]
[30.15241623 482.56799316]
[18.80762672 492.38101196]
[3.83745718 491.43548584]
[-6.18249798 480.27304077]
[-5.51235390 465.28799438]
[5.46400070 455.06451416]
[20.45881081 455.45904541]
[30.88201714 466.24472046]
[32.22025299 451.30453491]
[33.55848694 436.36434937]
[34.89672089 421.42416382]
[36.23495483 406.48397827]
[37.57318878 391.54379272]
[38.91142273 376.60360718]
[32.34044647 363.23678589]
[41.27808380 350.18194580]
[42.61631775 335.24176025]
[43.95455170 320.30157471]
[45.29278564 305.36138916]
[46.63101959 290.42120361]
[36.91323853 279.19174194]
[38.05757141 264.02120972]
[49.90192795 253.90444946]
[43.33095169 240.53764343]
[52.26858902 227.48278809]
[43.71233368 239.80311584]
[31.32419777 248.26089478]
[16.73404884 251.74336243]
[1.86147368 249.79234314]
[-11.33678436 242.66450500]
[-21.12426758 231.29765320]
[-26.21326447 217.18730164]
[-25.93422890 202.18989563]
[-20.32387352 188.27861023]
[-10.12033844 177.28370667]
[3.33392787 170.65176392]
[18.26878357 169.25531006]
[32.71929550 173.27809143]
[44.78424454 182.19084167]
[52.87628174 194.82092285]
[55.93081665 209.50901794]
[60.54482651 195.23628235]
[65.15883636 180.96354675]
[69.77284241 166.69081116]
[74.38685608 152.41807556]
[73.45324707 145.08662415]
[79.17726135 137.96810913]
[84.00326538 123.76564789]
[74.27915192 112.61505127]
[71.41519928 98.09982300]
[76.17526245 84.09140015]
[87.28976440 74.32605743]
[101.79428101 71.40835571]
[106.62027740 57.20589828]
[111.44627380 43.00344467]
[116.27227783 28.80098915]
[119.26705170 14.10298443]
[120.38269806 -0.85546911]
[121.49834442 -15.81392288]
[107.52783203 -21.58299065]
[96.04004669 -31.37448120]
[88.15186310 -44.21990585]
[84.62506866 -58.85468674]
[85.79283142 -73.84264374]
[91.52822876 -87.71694183]
[101.25794983 -99.12363434]
[114.01956177 -106.95378876]
[128.55670166 -110.45130920]
[129.67234802 -125.40975952]
[122.98288727 -139.74719238]
[131.64537048 -151.86372375]
[132.76101685 -166.82218933]
[133.87666321 -181.78063965]
[134.99230957 -196.73908997]
[127.18232727 -207.00392151]
[128.41949463 -219.43988037]
[137.49787903 -227.43423462]
[138.83612061 -242.37442017]
[140.17434692 -257.31460571]
[137.82302856 -266.14123535]
[141.64533997 -272.46670532]
[143.20587158 -287.38531494]
[144.76638794 -302.30392456]
[146.32691956 -317.22250366]
[147.88743591 -332.14111328]
[149.44796753 -347.05972290]
[141.94705200 -357.55255127]
[143.55393982 -369.94616699]
[152.86631775 -377.66665649]
[154.64878845 -392.56039429]
[156.43125916 -407.45410156]
[158.21371460 -422.34780884]
[144.02677917 -427.41519165]
[131.32339478 -435.51284790]
[120.74079895 -446.23461914]
[112.80978394 -459.04269409]
[107.92817688 -473.29461670]
[106.34082794 -488.27554321]
[108.12737274 -503.23400879]
[113.19818115 -517.41973877]
[121.29891968 -530.12115479]
[132.02325439 -540.70117188]
[144.83323669 -548.62908936]
[159.08636475 -553.50720215]
[174.06767273 -555.09094238]
[189.02571106 -553.30078125]
[203.21020508 -548.22650146]
[215.90965271 -540.12268066]
[226.48704529 -529.39581299]
[234.41186523 -516.58392334]
[239.28656006 -502.32958984]
[240.86665344 -487.34790039]
[239.07286072 -472.39028931]
[233.99517822 -458.20703125]
[225.88827515 -445.50955200]
[215.15882874 -434.93475342]
[202.34498596 -427.01306152]
[188.08950806 -422.14181519]
[173.10743713 -420.56533813]
[171.32496643 -405.67163086]
[169.54251099 -390.77792358]
[167.76004028 -375.88418579]
[175.52568054 -360.14691162]
[164.36656189 -345.49920654]
[162.80604553 -330.58059692]
[161.24551392 -315.66198730]
[159.68499756 -300.74337769]
[158.12448120 -285.82479858]
[156.56394958 -270.90618896]
[155.11453247 -255.97636414]
[153.77630615 -241.03619385]
[152.43806458 -226.09600830]
[160.66882324 -210.59692383]
[149.95077515 -195.62344360]
[148.83512878 -180.66499329]
[147.71946716 -165.70654297]
[146.60382080 -150.74807739]
[153.37307739 -137.48059082]
[144.63079834 -124.29411316]
[143.51515198 -109.33566284]
[157.37263489 -103.72038269]
[168.83151245 -94.08378601]
[176.76152039 -81.35997772]
[180.37532043 -66.78838348]
[179.30683899 -51.79302216]
[173.64811707 -37.84332657]
[163.94171143 -26.31016159]
[151.12854004 -18.33111382]
[136.45680237 -14.69827366]
[135.34115601 0.26017958]
[134.22550964 15.21863270]
[142.30755615 2.58215952]
[154.01368713 -6.79688692]
[168.10852051 -11.92871380]
[183.10459900 -12.27174568]
[197.41934204 -7.78978300]
[209.54209900 1.04418242]
[218.19349670 13.29788113]
[222.46057129 27.67815208]
[221.89297485 42.66740799]
[216.55061340 56.68379974]
[206.99729919 68.24814606]
[194.24119568 76.14002991]
[179.62847900 79.52660370]
[164.70129395 78.05046844]
[151.03491211 71.86741638]
[140.07160950 61.62995148]
[132.96833801 48.41845703]
[130.47473145 33.62698746]
[125.64873505 47.82944107]
[120.82273865 62.03189850]
[115.99673462 76.23435211]
[125.72084808 87.38494873]
[128.58480835 101.90017700]
[123.82473755 115.90859985]
[112.71023560 125.67394257]
[98.20571899 128.59164429]
[93.37972260 142.79409790]
[88.65958405 157.03208923]
[84.04557800 171.30482483]
[79.43156433 185.57756042]
[74.81755829 199.85029602]
[70.20355225 214.12301636]
[67.20877838 228.82102966]
[73.68402863 243.25645447]
[64.84210968 255.24269104]
[74.69997406 267.30337524]
[73.12998199 282.43579102]
[61.57120514 291.75942993]
[60.23297119 306.69961548]
[58.89473724 321.63980103]
[57.55650330 336.57998657]
[56.21826935 351.52017212]
[62.69352341 365.95559692]
[53.85160828 377.94183350]
[52.51337433 392.88201904]
[51.17514038 407.82220459]
[49.83690643 422.76239014]
[48.49866867 437.70257568]
[47.16043472 452.64276123]
[45.82220078 467.58294678]
[45.15241623 482.56799316]
[45.15241623 497.56799316]
[45.15241623 512.56799316]
[45.15241623 527.56799316]
[51.19875717 543.40710449]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 209]
[3 208]
[4 207]
[5 206]
[12 205]
[13 204]
[14 203]
[15 202]
[16 201]
[17 200]
[18 199]
[20 197]
[21 196]
[22 195]
[23 194]
[24 193]
[27 190]
[29 188]
[45 187]
[46 186]
[47 185]
[48 184]
[49 183]
[51 182]
[52 181]
[57 176]
[58 175]
[59 174]
[60 173]
[61 155]
[62 154]
[63 153]
[72 144]
[73 143]
[75 141]
[76 140]
[77 139]
[78 138]
[81 136]
[82 135]
[83 134]
[85 133]
[86 132]
[87 131]
[88 130]
[89 129]
[90 128]
[93 126]
[94 125]
[95 124]
[96 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
