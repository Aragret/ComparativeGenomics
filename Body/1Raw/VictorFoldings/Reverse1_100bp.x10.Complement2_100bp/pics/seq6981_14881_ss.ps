%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[20.63030434 682.30224609]
[15.35946560 696.40582275]
[7.27116776 709.10516357]
[-3.28100371 719.84509277]
[-15.83575249 728.15600586]
[-29.84424019 733.67474365]
[-44.69407272 736.15991211]
[-59.73608398 735.50292969]
[-74.31269836 731.73248291]
[-87.78668976 725.01348877]
[-99.56903076 715.63958740]
[-109.14465332 704.02056885]
[-116.09494781 690.66442871]
[-120.11608124 676.15496826]
[-121.03226471 661.12652588]
[-118.80344391 646.23608398]
[-113.52705383 632.13452148]
[-105.43376160 619.43835449]
[-94.87736511 608.70263672]
[-82.31935120 600.39660645]
[-68.30869293 594.88342285]
[-53.45788193 592.40411377]
[-38.41613007 593.06695557]
[-34.65983200 578.54492188]
[-30.90353012 564.02288818]
[-27.14723015 549.50079346]
[-28.51555634 542.23791504]
[-23.22538948 534.79132080]
[-27.31621552 520.46948242]
[-16.20075035 509.21084595]
[-12.22865486 494.74633789]
[-25.43657875 487.69277954]
[-36.74906158 477.87207031]
[-45.59664536 465.77435303]
[-51.53300095 452.00442505]
[-54.25746155 437.25158691]
[-53.63021851 422.25521851]
[-49.67951965 407.76748657]
[-42.60039520 394.51586914]
[-32.74505234 383.16650391]
[-20.60532951 374.29064941]
[-6.78816557 368.33609009]
[8.01474571 365.60437012]
[23.06158447 366.23571777]
[27.03368187 351.77117920]
[31.00577736 337.30667114]
[34.97787476 322.84213257]
[27.10044861 312.64529419]
[26.52579117 299.57809448]
[33.68753815 288.40133667]
[46.15977478 283.31628418]
[50.34678650 268.91247559]
[54.53379822 254.50869751]
[58.72080612 240.10491943]
[62.90781784 225.70114136]
[67.09483337 211.29736328]
[63.21768570 196.91622925]
[74.49954224 185.82432556]
[78.68655396 171.42054749]
[82.11761475 156.81822205]
[84.78340912 142.05700684]
[79.43116760 128.15725708]
[89.49786377 115.95184326]
[81.32261658 103.98892212]
[83.89768982 89.73005676]
[95.74092102 81.38236237]
[98.40671539 66.62113953]
[100.63183594 51.78709793]
[102.41429901 36.89338303]
[104.19676971 21.99966431]
[105.97923279 7.10594702]
[99.93664551 -7.51587534]
[109.13151550 -19.23353577]
[103.08892822 -33.85535812]
[112.28379822 -45.57302094]
[114.06626892 -60.46673584]
[115.62679291 -75.38534546]
[116.96502686 -90.32553101]
[118.30326080 -105.26570892]
[119.64149475 -120.20589447]
[120.97972870 -135.14608765]
[122.31796265 -150.08627319]
[123.65619659 -165.02645874]
[121.30487823 -173.85307312]
[125.12719727 -180.17854309]
[126.68771362 -195.09715271]
[128.24824524 -210.01576233]
[121.98862457 -224.54598999]
[131.00802612 -236.39926147]
[132.56854248 -251.31785583]
[134.12905884 -266.23648071]
[135.68959045 -281.15505981]
[133.46995544 -290.01571655]
[137.38601685 -296.28359985]
[139.16848755 -311.17730713]
[129.67408752 -323.52615356]
[131.69392395 -338.60510254]
[143.52517700 -347.58047485]
[145.30764771 -362.47418213]
[147.09010315 -377.36788940]
[133.35237122 -383.70269775]
[122.24593353 -393.97412109]
[114.85890961 -407.17590332]
[111.91498566 -422.01464844]
[113.70259094 -437.03662109]
[120.04659271 -450.77014160]
[130.32546997 -461.86968994]
[143.53219604 -469.24786377]
[158.37290955 -472.18182373]
[173.39369202 -470.38415527]
[187.12292480 -464.03097534]
[198.21557617 -453.74465942]
[205.58491516 -440.53298950]
[208.50894165 -425.69030762]
[206.70120239 -410.67074585]
[200.33880615 -396.94577026]
[190.04507446 -385.85998535]
[176.82846069 -378.49951172]
[161.98382568 -375.58544922]
[160.20135498 -360.69171143]
[158.41889954 -345.79800415]
[167.79803467 -334.28421021]
[166.20251465 -319.15447998]
[154.06219482 -309.39483643]
[152.27973938 -294.50112915]
[150.60820007 -279.59454346]
[149.04766846 -264.67593384]
[147.48715210 -249.75733948]
[145.92662048 -234.83872986]
[152.29785156 -221.37557983]
[143.16683960 -208.45523071]
[141.60632324 -193.53663635]
[140.04579163 -178.61802673]
[138.59637451 -163.68821716]
[137.25814819 -148.74803162]
[135.91990662 -133.80784607]
[134.58168030 -118.86766052]
[133.24343872 -103.92747498]
[131.90521240 -88.98728943]
[130.56697083 -74.04711151]
[132.88751221 -69.87287903]
[132.61044312 -64.19658661]
[128.95999146 -58.68427277]
[127.17752075 -43.79055405]
[133.34759521 -30.23402977]
[124.02523041 -17.45107079]
[130.19531250 -3.89454627]
[120.87294769 8.88841343]
[119.09048462 23.78213120]
[117.30801392 38.67584610]
[115.52555084 53.56956482]
[117.15012360 55.85405731]
[117.96766663 58.91971207]
[117.67610931 62.46236801]
[116.08896637 66.07422638]
[113.16793823 69.28694153]
[110.50213623 84.04815674]
[118.67738342 96.01107788]
[116.10231018 110.26994324]
[104.25907898 118.61763763]
[109.42064667 133.57319641]
[99.54463196 144.72279358]
[96.87882996 159.48400879]
[109.15133667 150.85929871]
[124.10669708 152.01564026]
[134.90753174 162.42439270]
[136.61584473 177.32679749]
[128.45060730 189.90968323]
[114.14487457 194.42031860]
[100.23902130 188.79650879]
[93.09033966 175.60755920]
[88.90332794 190.01133728]
[92.48098755 205.42272949]
[81.49861145 215.48437500]
[77.31159973 229.88815308]
[73.12458801 244.29193115]
[68.93757629 258.69570923]
[64.75056458 273.09948730]
[60.56355667 287.50326538]
[69.26811218 302.67727661]
[64.40102386 319.12799072]
[49.44239807 326.81423950]
[45.47030258 341.27877808]
[41.49820328 355.74328613]
[37.52610779 370.20782471]
[50.78513336 377.34954834]
[62.11691284 387.25808716]
[70.95525360 399.43405151]
[76.85948944 413.26495361]
[79.53646851 428.05581665]
[78.85510254 443.06433105]
[74.85276031 457.53787231]
[67.73328400 470.75140381]
[57.85655975 482.04382324]
[45.72034836 490.85086060]
[31.93520355 496.73342896]
[17.19374657 499.39947510]
[2.23586893 498.71841431]
[-1.73622727 513.18292236]
[2.07048965 528.53936768]
[-8.76086426 538.76342773]
[-12.62517071 553.25708008]
[-16.38147163 567.77917480]
[-20.13777161 582.30120850]
[-23.89407158 596.82330322]
[-10.41743851 603.53698730]
[1.36859143 612.90625000]
[10.94878387 624.52148438]
[17.90433311 637.87493896]
[21.93117332 652.38281250]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 205]
[24 204]
[25 203]
[26 202]
[28 201]
[30 199]
[31 198]
[44 185]
[45 184]
[46 183]
[47 182]
[51 179]
[52 178]
[53 177]
[54 176]
[55 175]
[56 174]
[58 172]
[59 171]
[60 163]
[61 162]
[63 160]
[66 157]
[67 156]
[68 151]
[69 150]
[70 149]
[71 148]
[73 146]
[75 144]
[76 143]
[77 140]
[78 139]
[79 138]
[80 137]
[81 136]
[82 135]
[83 134]
[85 133]
[86 132]
[87 131]
[89 129]
[90 128]
[91 127]
[92 126]
[94 125]
[95 124]
[98 121]
[99 120]
[100 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
