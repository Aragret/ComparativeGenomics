%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[113.49401855 600.61071777]
[98.51380920 601.85156250]
[83.52392578 600.73352051]
[68.89350891 597.28424072]
[54.98286057 591.58862305]
[42.13452530 583.78692627]
[30.66491699 574.07122803]
[20.85647964 562.68084717]
[12.95075607 549.89624023]
[7.14243126 536.03222656]
[3.57454109 521.43029785]
[2.33494759 506.44998169]
[3.45417714 491.46020508]
[6.90466785 476.83007812]
[12.60144806 462.91989136]
[20.40423012 450.07220459]
[30.12086105 438.60339355]
[41.51206207 428.79589844]
[54.29731750 420.89123535]
[68.16177368 415.08404541]
[82.76400757 411.51736450]
[97.74442291 410.27899170]
[98.86007690 395.32055664]
[90.39947510 379.94573975]
[100.89340210 364.81433105]
[101.78621674 349.84094238]
[102.67903137 334.86752319]
[95.71298981 321.70230103]
[104.25797272 308.38711548]
[105.15079498 293.41369629]
[105.26245880 278.41412354]
[104.59267426 263.42907715]
[103.92288971 248.44404602]
[102.91862488 233.47770691]
[101.58039093 218.53752136]
[100.24215698 203.59733582]
[98.90392303 188.65715027]
[97.45450592 173.72734070]
[95.89398193 158.80873108]
[94.33345795 143.89013672]
[92.77293396 128.97152710]
[84.73017120 141.63304138]
[71.16391754 148.03277588]
[56.27782059 146.18771362]
[44.68450928 136.66957092]
[39.97629166 122.42763519]
[43.61206436 107.87493896]
[54.46523666 97.52077484]
[69.17284393 94.57350922]
[83.17756653 99.94638062]
[92.13998413 111.97478485]
[85.68240356 99.57352448]
[92.86666870 87.57860565]
[89.99415588 78.90759277]
[93.43318939 72.36582184]
[94.10297394 57.38077927]
[94.77275848 42.39574051]
[95.44254303 27.41070175]
[88.32917023 13.27880573]
[96.62705994 0.90971714]
[97.29684448 -14.07532215]
[97.96662903 -29.06035995]
[98.63641357 -44.04539871]
[96.49948883 -47.82528305]
[95.75173950 -51.69896317]
[96.25206757 -55.21820831]
[97.72829437 -58.02665329]
[99.81849670 -59.89459229]
[101.37902069 -74.81319427]
[93.87811279 -85.30601501]
[95.48500824 -97.69962311]
[104.79737854 -105.42012787]
[106.57984924 -120.31385040]
[108.36231232 -135.20756531]
[110.14477539 -150.10128784]
[111.92724609 -164.99499512]
[101.27990723 -154.42929077]
[86.63314056 -151.19320679]
[72.52540588 -156.28947449]
[63.32814407 -168.13896179]
[61.89122391 -183.06997681]
[68.65988159 -196.45597839]
[81.53678894 -204.14918518]
[96.53189087 -203.76574707]
[108.99878693 -195.42449951]
[115.07451630 -181.70979309]
[111.03958130 -197.00782776]
[121.71751404 -207.39201355]
[125.47381592 -221.91406250]
[129.23011780 -236.43612671]
[132.98641968 -250.95819092]
[123.83393860 -265.86627197]
[128.20907593 -282.45462036]
[142.93222046 -290.58282471]
[146.47189331 -305.15921021]
[150.01155090 -319.73559570]
[153.55122375 -334.31195068]
[157.09089661 -348.88833618]
[143.43838501 -355.22039795]
[131.28369141 -364.09448242]
[121.09401703 -375.16955566]
[113.26103973 -388.01986694]
[108.08582306 -402.15151978]
[105.76730347 -417.02130127]
[106.39458466 -432.05767822]
[109.94355774 -446.68267822]
[116.27781677 -460.33419800]
[125.15388489 -472.48745728]
[136.23059082 -482.67532349]
[149.08218384 -490.50622559]
[163.21466064 -495.67913818]
[178.08482361 -497.99526978]
[193.12110901 -497.36553955]
[207.74554443 -493.81420898]
[221.39601135 -487.47775269]
[233.54783630 -478.59970093]
[243.73391724 -467.52136230]
[251.56274414 -454.66848755]
[256.73336792 -440.53518677]
[259.04708862 -425.66464233]
[258.41494751 -410.62844849]
[254.86122131 -396.00460815]
[248.52255249 -382.35513306]
[239.64254761 -370.20477295]
[228.56254578 -360.02047729]
[215.70841980 -352.19372559]
[201.57426453 -347.02539062]
[186.70335388 -344.71408081]
[171.66728210 -345.34866333]
[168.12760925 -330.77227783]
[164.58793640 -316.19592285]
[161.04826355 -301.61953735]
[157.50859070 -287.04315186]
[165.68612671 -277.08538818]
[166.64958191 -264.04107666]
[159.82377625 -252.65605164]
[147.50848389 -247.20188904]
[143.75218201 -232.67982483]
[139.99588013 -218.15776062]
[136.23957825 -203.63571167]
[140.54318237 -189.37638855]
[129.59657288 -177.95349121]
[126.82096100 -163.21253967]
[125.03849792 -148.31881714]
[123.25602722 -133.42509460]
[121.47356415 -118.53137970]
[119.69110107 -103.63766479]
[127.45674133 -87.90039062]
[116.29762268 -73.25267029]
[114.73709869 -58.33406830]
[113.62145233 -43.37561417]
[112.95166779 -28.39057541]
[112.28188324 -13.40553665]
[111.61209869 1.57950222]
[118.77337646 14.63956833]
[110.42758179 28.08048820]
[109.75779724 43.06552505]
[109.08801270 58.05056381]
[108.41822815 73.03560638]
[107.86001587 88.02521515]
[114.31759644 100.42647552]
[107.13333130 112.42139435]
[107.69154358 127.41100311]
[109.25206757 142.32960510]
[110.81259155 157.24821472]
[112.37310791 172.16680908]
[116.37832642 180.37632751]
[113.84410858 187.31890869]
[115.18234253 202.25909424]
[116.52057648 217.19927979]
[117.85881042 232.13946533]
[120.86309052 236.40812683]
[121.83261871 240.94831848]
[121.00470734 244.93949890]
[118.90792847 247.77426147]
[119.57771301 262.75930786]
[120.24749756 277.74435425]
[130.30496216 266.61566162]
[145.14500427 264.43090820]
[157.98295593 272.18893433]
[162.94949341 286.34286499]
[157.77395630 300.42172241]
[144.82255554 307.98883057]
[130.01647949 305.58459473]
[120.12419891 294.30651855]
[119.23138428 309.27993774]
[126.13356018 323.51617432]
[117.65244293 335.76034546]
[116.75962067 350.73373413]
[115.86680603 365.70715332]
[123.82876587 375.85458374]
[122.77687836 388.30758667]
[113.81852722 396.43618774]
[112.70288086 411.39465332]
[127.33386230 414.84152222]
[141.24545288 420.53485107]
[154.09507751 428.33447266]
[165.56628418 438.04824829]
[175.37660217 449.43704224]
[183.28443909 462.22033691]
[189.09504700 476.08334351]
[192.66534424 490.68469238]
[193.90740967 505.66479492]
[192.79064941 520.65478516]
[189.34257507 535.28546143]
[183.64810181 549.19659424]
[175.84742737 562.04559326]
[166.13269043 573.51599121]
[154.74311829 583.32537842]
[141.95916748 591.23211670]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 194]
[23 193]
[25 190]
[26 189]
[27 188]
[29 186]
[30 185]
[31 177]
[32 176]
[33 175]
[34 171]
[35 170]
[36 169]
[37 168]
[38 166]
[39 165]
[40 164]
[41 163]
[51 162]
[53 160]
[55 159]
[56 158]
[57 157]
[58 156]
[60 154]
[61 153]
[62 152]
[63 151]
[68 150]
[69 149]
[72 147]
[73 146]
[74 145]
[75 144]
[76 143]
[86 142]
[88 140]
[89 139]
[90 138]
[91 137]
[94 133]
[95 132]
[96 131]
[97 130]
[98 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
