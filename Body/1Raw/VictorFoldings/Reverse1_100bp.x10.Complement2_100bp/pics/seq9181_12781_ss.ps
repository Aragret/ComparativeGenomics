%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[55.65174866 595.21551514]
[42.70269012 602.81512451]
[29.01918983 608.99523926]
[14.75629520 613.68585205]
[0.07561394 616.83386230]
[-14.85650921 618.40350342]
[-29.87088203 618.37701416]
[-44.79738235 616.75476074]
[-59.46687698 613.55505371]
[-73.71315002 608.81420898]
[-87.37478638 602.58587646]
[-100.29698181 594.94073486]
[-112.33332062 585.96527100]
[-123.34742737 575.76129150]
[-133.21449280 564.44433594]
[-141.82272339 552.14270020]
[-149.07458496 538.99572754]
[-154.88789368 525.15240479]
[-159.19679260 510.76959229]
[-161.95245361 496.01022339]
[-163.12365723 481.04159546]
[-162.69712830 466.03323364]
[-160.67768860 451.15527344]
[-157.08825684 436.57626343]
[-151.96946716 422.46136475]
[-145.37933350 408.97055054]
[-137.39251709 396.25665283]
[-128.09953308 384.46374512]
[-117.60567474 373.72546387]
[-106.02983093 364.16345215]
[-93.50317383 355.88607788]
[-80.16764069 348.98712158]
[-66.17433167 343.54473877]
[-51.68180466 339.62063599]
[-36.85426712 337.25921631]
[-21.85972595 336.48730469]
[-6.86808443 337.31359863]
[7.95079279 339.72875977]
[11.92288876 325.26422119]
[15.89498520 310.79971313]
[19.86708069 296.33517456]
[15.77625370 282.01336670]
[26.89171791 270.75473022]
[30.86381531 256.29019165]
[18.35140610 264.56301880]
[3.36136484 264.01651001]
[-8.51539230 254.85449219]
[-12.84912968 240.49417114]
[-8.02346992 226.29159546]
[4.16173506 217.54399109]
[19.16170502 217.51396179]
[31.38182259 226.21275330]
[36.26430893 240.39706421]
[41.92709732 226.50703430]
[47.58988190 212.61700439]
[53.25267029 198.72697449]
[47.25728607 185.14054871]
[52.80228806 170.97341919]
[67.09362793 164.77702332]
[72.75641632 150.88700867]
[78.21177673 136.91419983]
[83.45848846 122.86173248]
[88.70520782 108.80926514]
[86.58087921 94.98975372]
[97.24231720 85.94401550]
[102.48903656 71.89154816]
[107.73575592 57.83907700]
[112.87771606 43.74793625]
[117.91463470 29.61890602]
[116.97248077 24.48476219]
[117.99195862 19.95552826]
[120.41416168 16.67711830]
[123.50482178 14.98001289]
[122.76123810 10.70203972]
[123.35766602 6.80219364]
[125.01068115 3.65529919]
[127.34425354 1.50563574]
[129.94033813 0.44803721]
[136.41983032 -13.08030796]
[142.89932251 -26.60865402]
[149.37882996 -40.13700104]
[155.85832214 -53.66534424]
[162.33781433 -67.19368744]
[168.81730652 -80.72203827]
[174.48010254 -94.61206055]
[179.30609131 -108.81452179]
[184.13209534 -123.01697540]
[181.24615479 -138.57273865]
[192.66685486 -148.13395691]
[197.49284363 -162.33642578]
[183.93074036 -168.78511047]
[171.20898438 -176.76469421]
[159.49966431 -186.16725159]
[148.96110535 -196.86563110]
[139.73583984 -208.71514893]
[131.94862366 -221.55554199]
[125.70478821 -235.21318054]
[121.08875275 -249.50334167]
[118.16295624 -264.23278809]
[116.96696472 -279.20227051]
[117.51694489 -294.20941162]
[119.80546570 -309.05120850]
[123.80157471 -323.52697754]
[129.45123291 -337.44091797]
[136.67803955 -350.60488892]
[145.38424683 -362.84085083]
[155.45211792 -373.98330688]
[166.74551392 -383.88159180]
[179.11167908 -392.40182495]
[192.38337708 -399.42880249]
[206.38113403 -404.86746216]
[220.91564941 -408.64428711]
[235.79035950 -410.70819092]
[250.80409241 -411.03121948]
[265.75381470 -409.60906982]
[280.43731689 -406.46093750]
[294.65606689 -401.62942505]
[308.21777344 -395.17980957]
[320.93896484 -387.19937134]
[332.64767456 -377.79605103]
[343.18551636 -367.09695435]
[352.41000366 -355.24682617]
[360.19635010 -342.40591431]
[366.43927002 -328.74786377]
[371.05435181 -314.45739746]
[373.97915649 -299.72775269]
[375.17416382 -284.75817871]
[374.62316895 -269.75106812]
[372.33367920 -254.90942383]
[368.33657837 -240.43392944]
[362.68600464 -226.52035522]
[355.45831299 -213.35688782]
[346.75131226 -201.12152100]
[336.68267822 -189.97972107]
[325.38864136 -180.08219910]
[313.02191162 -171.56278992]
[299.74972534 -164.53669739]
[285.75158691 -159.09895325]
[271.21682739 -155.32310486]
[256.34197998 -153.26020813]
[241.32823181 -152.93815613]
[226.37861633 -154.36131287]
[211.69529724 -157.51042175]
[206.86930847 -143.30796814]
[210.10043335 -128.76805115]
[198.33454895 -118.19097900]
[193.50854492 -103.98851776]
[188.68255615 -89.78606415]
[201.66519165 -97.29946899]
[216.59611511 -95.86169434]
[227.90649414 -86.00900269]
[231.37779236 -71.41619873]
[225.71534729 -57.52603531]
[213.03108215 -49.51920700]
[198.05590820 -50.38205719]
[186.37522888 -59.79276657]
[182.34565735 -74.24253845]
[175.86616516 -60.71419525]
[169.38665771 -47.18584824]
[162.90716553 -33.65750504]
[156.42767334 -20.12915802]
[149.94818115 -6.60081244]
[143.46867371 6.92753315]
[137.39485168 20.64279938]
[132.04365540 34.65582275]
[127.00674438 48.78485107]
[127.72165680 56.14085007]
[121.78822327 63.08579636]
[116.54151154 77.13826752]
[111.29479218 91.19073486]
[113.41912079 105.01024628]
[102.75768280 114.05598450]
[97.51096344 128.10845947]
[92.26424408 142.16091919]
[92.98004913 148.73353577]
[90.62294769 153.90470886]
[86.64644623 156.54978943]
[80.98365784 170.43981934]
[86.86906433 184.86201477]
[80.92832184 198.86781311]
[67.14269257 204.38977051]
[61.47990799 218.27978516]
[55.81712341 232.16981506]
[50.15433502 246.05984497]
[45.32833862 260.26229858]
[41.35624313 274.72683716]
[45.16296005 290.08325195]
[34.33160400 300.30728149]
[30.35950851 314.77182007]
[26.38741302 329.23632812]
[22.41531754 343.70086670]
[36.38935852 349.19250488]
[49.70049286 356.13842773]
[62.19789886 364.45989990]
[73.73996735 374.06265259]
[84.19592285 384.83786011]
[93.44728851 396.66342163]
[101.38923645 409.40539551]
[107.93178558 422.91934204]
[113.00079346 437.05218506]
[116.53883362 451.64376831]
[118.50581360 466.52877808]
[118.87944794 481.53851318]
[117.65549469 496.50296021]
[114.84783936 511.25250244]
[110.48827362 525.62005615]
[104.62621307 539.44281006]
[97.32806396 552.56408691]
[88.67653656 564.83532715]
[78.76964569 576.11743164]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 191]
[39 190]
[40 189]
[41 188]
[43 186]
[44 185]
[53 184]
[54 183]
[55 182]
[56 181]
[59 178]
[60 177]
[61 174]
[62 173]
[63 172]
[65 170]
[66 169]
[67 168]
[68 166]
[69 165]
[73 164]
[78 163]
[79 162]
[80 161]
[81 160]
[82 159]
[83 158]
[84 157]
[85 148]
[86 147]
[87 146]
[89 144]
[90 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
