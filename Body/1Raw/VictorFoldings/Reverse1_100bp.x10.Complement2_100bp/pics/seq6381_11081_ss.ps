%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[18.33291435 467.00485229]
[20.69240379 481.85168457]
[20.63959694 496.88476562]
[18.17586517 511.71469116]
[13.36502171 525.95727539]
[6.33168173 539.24365234]
[-2.74197602 551.22973633]
[-13.62092113 561.60491943]
[-26.02336311 570.10052490]
[-39.62804794 576.49652100]
[-54.08258438 580.62719727]
[-69.01256561 582.38562012]
[-84.03125763 581.72613525]
[-98.74965668 578.66589355]
[-112.78651428 573.28417969]
[-125.77823639 565.72039795]
[-137.38832092 556.17041016]
[-147.31600952 544.88159180]
[-155.30418396 532.14642334]
[-161.14591980 518.29467773]
[-164.68989563 503.68521118]
[-165.84432983 488.69644165]
[-164.57928467 473.71658325]
[-160.92756653 459.13369751]
[-154.98374939 445.32546997]
[-146.90179443 432.64956665]
[-136.89103699 421.43435669]
[-125.21077728 411.97033691]
[-112.16357422 404.50262451]
[-98.08737946 399.22467041]
[-83.34679413 396.27319336]
[-68.32363892 395.72460938]
[-53.40704727 397.59313965]
[-38.98339462 401.83041382]
[-32.50389862 388.30206299]
[-26.02440262 374.77374268]
[-26.84488487 371.34457397]
[-26.04518509 367.34762573]
[-23.37653351 363.54873657]
[-18.94159317 360.79583740]
[-11.86448765 347.57031250]
[-4.78738213 334.34478760]
[2.28972316 321.11926270]
[8.76921940 307.59091187]
[14.63817978 293.78674316]
[12.49743271 279.04678345]
[25.01741600 269.37411499]
[30.88637543 255.56993103]
[36.75533676 241.76574707]
[42.62429810 227.96157837]
[40.48355103 213.22161865]
[53.00353241 203.54893494]
[58.87249374 189.74476624]
[64.74145508 175.94058228]
[70.30068207 162.00878906]
[75.54740143 147.95631409]
[80.58431244 133.82728577]
[85.41030884 119.62483215]
[90.23631287 105.42237854]
[94.95644379 91.18438721]
[99.57044983 76.91165161]
[104.18446350 62.63891983]
[91.70362091 70.95928955]
[76.70790100 71.31762695]
[63.84389114 63.60288239]
[57.09764481 50.20556259]
[58.55955887 35.27697372]
[67.77664185 23.44289780]
[81.89288330 18.37025261]
[96.53421021 21.63085365]
[107.16384888 32.21436691]
[110.48807526 46.84163666]
[116.96757507 33.31328964]
[123.44706726 19.78494453]
[129.92655945 6.25659847]
[136.40606689 -7.27174711]
[135.38908386 -23.06023407]
[147.86502075 -31.19657516]
[154.34451294 -44.72492218]
[160.82402039 -58.25326538]
[159.80703735 -74.04175568]
[172.28297424 -82.17809296]
[178.76248169 -95.70644379]
[171.54971313 -109.31828308]
[173.70980835 -124.39102173]
[184.20690918 -135.17408752]
[198.86523438 -137.67839050]
[205.34472656 -151.20674133]
[211.82423401 -164.73507690]
[218.30372620 -178.26342773]
[213.28717041 -193.01036072]
[220.05102539 -206.63772583]
[234.14088440 -211.32936096]
[240.62037659 -224.85769653]
[244.91450500 -239.22991943]
[246.91851807 -254.09544373]
[248.92253113 -268.96096802]
[250.92654419 -283.82650757]
[236.94735718 -289.48629761]
[224.81539917 -298.44543457]
[215.29325867 -310.14071655]
[208.97952271 -323.83697510]
[206.27107239 -338.67327881]
[207.33818054 -353.71694946]
[212.11373901 -368.02233887]
[220.29757690 -380.69024658]
[231.37522888 -390.92431641]
[244.65037537 -398.08123779]
[259.28851318 -401.71112061]
[274.36944580 -401.58578491]
[288.94522095 -397.71313477]
[302.09957886 -390.33654785]
[313.00561523 -379.91976929]
[320.97778320 -367.11761475]
[325.51492310 -352.73480225]
[326.33184814 -337.67547607]
[323.37719727 -322.88626099]
[316.83666992 -309.29681396]
[307.12149048 -297.76141357]
[294.84228516 -289.00515747]
[280.77096558 -283.57846069]
[265.79208374 -281.82247925]
[263.78805542 -266.95697021]
[261.78405762 -252.09143066]
[259.78002930 -237.22590637]
[268.27670288 -249.58738708]
[279.75790405 -259.24047852]
[293.39480591 -265.48825073]
[308.20294189 -267.87973022]
[323.11331177 -266.24227905]
[337.04949951 -260.69403076]
[349.00543213 -251.63560486]
[358.11804199 -239.72088623]
[363.72946167 -225.81002808]
[365.43457031 -210.90725708]
[363.11032104 -196.08842468]
[356.92446899 -182.42330933]
[347.32360840 -170.89840698]
[335.00079346 -162.34571838]
[320.84564209 -157.38267517]
[305.88003540 -156.36753845]
[291.18435669 -159.37361145]
[277.81945801 -166.18388367]
[266.75021362 -176.30670166]
[258.77566528 -189.01130676]
[254.47155762 -203.38052368]
[254.14872742 -218.37820435]
[247.66921997 -204.84986877]
[252.84530640 -190.93067932]
[246.46688843 -177.11869812]
[231.83207703 -171.78393555]
[225.35256958 -158.25558472]
[218.87307739 -144.72724915]
[212.39358521 -131.19889832]
[219.63027954 -118.20781708]
[217.80810547 -103.26982117]
[207.41781616 -92.13899994]
[192.29081726 -89.22694397]
[185.81132507 -75.69860077]
[187.29176331 -60.87775040]
[174.35235596 -51.77376938]
[167.87286377 -38.24542618]
[161.39337158 -24.71708107]
[162.87380981 -9.89623070]
[149.93440247 -0.79225129]
[143.45491028 12.73609447]
[136.97541809 26.26444054]
[130.49591064 39.79278564]
[124.01641846 53.32113266]
[118.45719910 67.25292969]
[113.84318542 81.52566528]
[109.22917938 95.79839325]
[109.94331360 103.82725525]
[104.43876648 110.24837494]
[99.61277008 124.45082855]
[94.78677368 138.65328979]
[95.69795227 145.20166016]
[93.49585724 150.44073486]
[89.59986877 153.20303345]
[84.35314941 167.25550842]
[85.21875763 172.40310669]
[84.13195801 176.91665649]
[81.66121674 180.15864563]
[78.54563141 181.80953979]
[72.67667389 195.61372375]
[66.80770874 209.41790771]
[68.52867126 225.14523315]
[56.42847443 233.83053589]
[50.55951309 247.63471985]
[44.69055176 261.43890381]
[38.82159042 275.24307251]
[40.54255295 290.97039795]
[28.44235611 299.65570068]
[22.57339668 313.45986938]
[36.85325241 308.86795044]
[50.26002121 315.59539795]
[55.11370468 329.78842163]
[48.63388443 343.31661987]
[34.53249741 348.43041992]
[20.88746262 342.20040894]
[15.51525116 328.19638062]
[8.43814564 341.42190552]
[1.36103988 354.64743042]
[-5.71606541 367.87295532]
[-12.49605751 381.25323486]
[-18.97555351 394.78158569]
[-25.45504951 408.30990601]
[-13.11259651 416.89245605]
[-2.30680776 427.34384155]
[6.68242168 439.39331055]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 207]
[35 206]
[36 205]
[40 204]
[41 203]
[42 202]
[43 201]
[44 194]
[45 193]
[47 191]
[48 190]
[49 189]
[50 188]
[52 186]
[53 185]
[54 184]
[55 180]
[56 179]
[57 176]
[58 175]
[59 174]
[60 172]
[61 171]
[62 170]
[72 169]
[73 168]
[74 167]
[75 166]
[76 165]
[78 163]
[79 162]
[80 161]
[82 159]
[83 158]
[87 154]
[88 153]
[89 152]
[90 151]
[93 148]
[94 147]
[95 125]
[96 124]
[97 123]
[98 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
