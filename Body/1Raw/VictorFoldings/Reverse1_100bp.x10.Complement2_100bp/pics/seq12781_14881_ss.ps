%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUGGCUAUAGCGGCUAUGCCAACAUAUCCUAACGAACUUACCGACGACACAACCGUAGACGAGCCCGCAUAGUAGUUGACUACUCGUUCUUCCUAUAUUxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[134.21965027 673.01824951]
[139.49720764 658.89031982]
[148.12312317 646.51922607]
[159.55514526 636.68255615]
[173.07464600 629.99871826]
[169.97053528 615.32342529]
[158.29386902 609.87500000]
[151.79023743 598.52667236]
[153.02839661 585.31011963]
[161.77943420 575.07122803]
[158.89416504 560.35137939]
[156.00889587 545.63146973]
[143.77896118 533.04589844]
[149.89138794 515.67584229]
[146.78727722 501.00054932]
[143.68316650 486.32522583]
[140.57905579 471.64993286]
[137.47494507 456.97463989]
[134.37083435 442.29931641]
[131.26672363 427.62402344]
[128.16261292 412.94873047]
[120.05426025 425.56832886]
[105.76902008 430.14349365]
[91.83792877 424.58248901]
[84.63008881 411.42776489]
[87.44082642 396.69345093]
[98.98511505 387.11590576]
[113.98505402 387.07382202]
[125.58383179 396.58807373]
[123.91228485 381.68148804]
[122.12982178 366.78778076]
[120.34735870 351.89407349]
[118.56488800 337.00033569]
[116.78242493 322.10662842]
[107.47004700 314.38610840]
[105.86315918 301.99249268]
[113.36406708 291.49969482]
[111.80354309 276.58108521]
[110.24301910 261.66247559]
[108.68249512 246.74388123]
[97.62416840 233.11741638]
[105.26190186 216.36192322]
[103.47943115 201.46820068]
[101.69696808 186.57449341]
[92.50209808 174.85682678]
[98.54468536 160.23500061]
[96.76221466 145.34129333]
[93.62809753 141.73762512]
[92.72451019 136.12687683]
[95.15522766 129.97845459]
[93.81699371 115.03826904]
[85.34600830 107.04553986]
[84.39334106 95.43805695]
[91.44776917 86.17110443]
[90.33211517 71.21265411]
[89.21646881 56.25419617]
[88.10082245 41.29574585]
[86.98516846 26.33728981]
[85.86952209 11.37883759]
[84.75387573 -3.57961607]
[83.63822174 -18.53806877]
[74.89594269 -31.72454453]
[81.66520691 -44.99203873]
[78.72481537 -49.30495071]
[77.82299042 -53.85906982]
[78.71023560 -57.83749390]
[80.84898376 -60.64072037]
[72.70423126 -74.20440674]
[80.05916595 -87.15640259]
[79.61255646 -102.14974976]
[79.16595459 -117.14310455]
[71.41582489 -104.30037689]
[58.90853119 -96.01982117]
[44.05903625 -93.90027618]
[29.73454285 -98.35099792]
[18.70088768 -108.51261139]
[13.08849430 -122.42307281]
[13.98103046 -137.39649963]
[21.20615959 -150.54174805]
[33.36882401 -159.32067871]
[48.12060547 -162.03820801]
[62.61315918 -158.16964722]
[74.04821014 -148.46192932]
[80.21807861 -134.78823853]
[74.61351013 -149.58348083]
[84.15319061 -161.02218628]
[86.37830353 -175.85623169]
[88.60342407 -190.69027710]
[82.99885559 -205.48551941]
[92.53853607 -216.92422485]
[94.76364899 -231.75827026]
[96.76766205 -246.62379456]
[98.55013275 -261.51751709]
[100.33259583 -276.41122437]
[102.11505890 -291.30493164]
[100.02759552 -300.19766235]
[104.03654480 -306.40652466]
[106.04055786 -321.27206421]
[108.04457092 -336.13757324]
[94.17762756 -342.10504150]
[82.43562317 -351.59335327]
[73.68991089 -363.89843750]
[68.58946228 -378.10714722]
[67.51277161 -393.16516113]
[70.53974152 -407.95501709]
[77.44573975 -421.37924194]
[87.71830750 -432.44165039]
[100.59513855 -440.32135010]
[115.12069702 -444.43362427]
[130.21708679 -444.47326660]
[144.76405334 -440.43740845]
[157.68212891 -432.62548828]
[168.01268005 -421.61721802]
[174.98913574 -408.22946167]
[178.09378052 -393.45571899]
[177.09623718 -378.39227295]
[172.07052612 -364.15692139]
[163.38960266 -351.80606079]
[151.69763184 -342.25616455]
[137.86222839 -336.21594238]
[122.91009521 -334.13357544]
[120.90608215 -319.26803589]
[118.90206909 -304.40252686]
[117.00878143 -289.52249146]
[115.22631073 -274.62875366]
[113.44384766 -259.73504639]
[111.66138458 -244.84132385]
[113.85659790 -240.59985352]
[113.41065979 -234.93434143]
[109.59769440 -229.53314209]
[107.37257385 -214.69909668]
[113.13629150 -200.96488953]
[103.43746185 -188.46514893]
[101.21234894 -173.63110352]
[98.98722839 -158.79705811]
[104.75094604 -145.06285095]
[95.05211639 -132.56311035]
[94.15930176 -117.58970642]
[94.60591125 -102.59635925]
[95.05251312 -87.60301208]
[103.16532135 -75.11174774]
[95.84233856 -61.08732605]
[96.62365723 -46.10768890]
[105.28614044 -33.99114227]
[98.59667969 -19.65371895]
[99.71232605 -4.69526482]
[100.82798004 10.26318836]
[101.94362640 25.22164154]
[103.05927277 40.18009567]
[104.17491913 55.13854980]
[105.29057312 70.09700012]
[106.40621948 85.05545807]
[116.20524597 98.66998291]
[108.75717926 113.70003510]
[110.09541321 128.64021301]
[111.65593719 143.55882263]
[113.43840027 158.45254517]
[122.76076508 171.23550415]
[116.59068298 184.79202271]
[118.37315369 199.68574524]
[120.15561676 214.57945251]
[129.79421997 223.15034485]
[130.97222900 235.59205627]
[123.60109711 245.18334961]
[125.16162109 260.10195923]
[126.72214508 275.02056885]
[128.28266907 289.93917847]
[139.44178772 304.58688354]
[131.67614746 320.32415771]
[133.45860291 335.21786499]
[135.24107361 350.11160278]
[137.02354431 365.00531006]
[138.80599976 379.89901733]
[142.93301392 388.04800415]
[140.50244141 395.02755737]
[142.83792114 409.84460449]
[145.94203186 424.51992798]
[149.04614258 439.19522095]
[152.15025330 453.87051392]
[155.25436401 468.54583740]
[158.35847473 483.22113037]
[161.46258545 497.89642334]
[164.56669617 512.57171631]
[174.93151855 520.24853516]
[177.21481323 532.53552246]
[170.72877502 542.74621582]
[173.61405945 557.46606445]
[176.49932861 572.18597412]
[191.19364929 581.67785645]
[194.41337585 598.52862549]
[184.64582825 612.21929932]
[187.74993896 626.89459229]
[202.81796265 627.53161621]
[217.25392151 631.89672852]
[230.15036011 639.71545410]
[240.69662476 650.49633789]
[248.22973633 663.56164551]
[252.27618408 678.09014893]
[252.58158875 693.16851807]
[249.12675476 707.84893799]
[242.12886047 721.20861816]
[232.02780151 732.40765381]
[219.45852661 740.74218750]
[205.21115112 745.68823242]
[190.18128967 746.93487549]
[175.31373596 744.40380859]
[161.54306030 738.25402832]
[149.73490906 728.87225342]
[140.63154602 716.84814453]
[134.80522156 702.93750000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 192]
[6 191]
[10 188]
[11 187]
[12 186]
[14 183]
[15 182]
[16 181]
[17 180]
[18 179]
[19 178]
[20 177]
[21 176]
[29 175]
[30 173]
[31 172]
[32 171]
[33 170]
[34 169]
[37 167]
[38 166]
[39 165]
[40 164]
[42 161]
[43 160]
[44 159]
[46 157]
[47 156]
[50 155]
[51 154]
[54 152]
[55 151]
[56 150]
[57 149]
[58 148]
[59 147]
[60 146]
[61 145]
[63 143]
[67 142]
[69 140]
[70 139]
[71 138]
[84 137]
[86 135]
[87 134]
[88 133]
[90 131]
[91 130]
[92 127]
[93 126]
[94 125]
[95 124]
[97 123]
[98 122]
[99 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
