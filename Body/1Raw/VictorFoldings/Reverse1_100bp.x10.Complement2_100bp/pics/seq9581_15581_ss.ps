%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[76.52847290 512.45709229]
[78.61447906 527.54248047]
[74.37813568 542.17028809]
[64.55340576 553.80621338]
[50.84249115 560.43426514]
[35.62088394 560.90600586]
[21.52582169 555.13983154]
[10.99936104 544.13464355]
[5.86527348 529.79724121]
[7.01307058 514.61163330]
[14.24388981 501.20883179]
[26.30494690 491.91094971]
[41.10659409 488.32888794]
[43.77238846 473.56768799]
[46.43818665 458.80645752]
[49.10398102 444.04522705]
[51.76977539 429.28402710]
[54.10526276 414.46694946]
[48.13769913 400.82006836]
[57.64935303 388.17733765]
[59.65336609 373.31179810]
[61.65737915 358.44625854]
[54.12690735 342.59512329]
[65.50286865 328.11517334]
[67.28533173 313.22143555]
[69.06779480 298.32772827]
[66.87258148 294.08627319]
[67.31851959 288.42074585]
[71.13148499 283.01956177]
[73.35660553 268.18551636]
[75.58171844 253.35147095]
[77.80683899 238.51742554]
[72.04311371 224.78320312]
[81.74195099 212.28347778]
[83.96706390 197.44943237]
[85.63860321 182.54284668]
[86.75425720 167.58439636]
[87.86990356 152.62594604]
[85.23259735 145.72186279]
[89.11515045 137.45362854]
[90.45338440 122.51344299]
[91.79161835 107.57325745]
[93.01859283 92.62351990]
[94.13423920 77.66506958]
[95.24988556 62.70661545]
[87.43989563 52.44178391]
[88.67707062 40.00582123]
[97.75544739 32.01147079]
[99.09368134 17.07128716]
[100.43191528 2.13110209]
[101.77015686 -12.80908298]
[88.76134491 -5.34108543]
[74.75634766 -10.71322823]
[70.07911682 -24.96536827]
[78.17753601 -37.59135818]
[93.08174896 -39.28378677]
[103.80435944 -28.79661179]
[106.25008392 -43.59588242]
[108.69581604 -58.39515305]
[106.85622406 -63.28012848]
[107.05453491 -67.91844177]
[108.85554504 -71.57514191]
[111.59539032 -73.79450226]
[114.69950104 -88.46980286]
[117.80361176 -103.14510345]
[120.90772247 -117.82040405]
[124.01183319 -132.49571228]
[127.11594391 -147.17100525]
[130.22004700 -161.84631348]
[125.50605774 -176.94892883]
[135.70965576 -187.79953003]
[138.81376648 -202.47483826]
[141.80854797 -217.17283630]
[129.40899658 -208.73179626]
[114.47251129 -210.11067200]
[103.82784271 -220.67907715]
[102.34159851 -235.60527039]
[110.69326019 -248.06518555]
[125.06456757 -252.36233521]
[138.88514709 -246.53211975]
[145.83668518 -233.23818970]
[150.23767090 -247.57803345]
[154.63867188 -261.91787720]
[159.03967285 -276.25772095]
[162.03443909 -290.95571899]
[163.59497070 -305.87432861]
[164.93319702 -320.81451416]
[166.04885864 -335.77297974]
[167.16450500 -350.73141479]
[168.28015137 -365.68988037]
[169.39579773 -380.64834595]
[154.83612061 -384.42395020]
[141.18466187 -390.73886108]
[128.88029480 -399.38998413]
[118.31851959 -410.09927368]
[109.83887482 -422.52246094]
[103.71394348 -436.26016235]
[100.14060211 -450.87081909]
[99.23374176 -465.88473511]
[101.02249146 -480.81924438]
[105.44937134 -495.19430542]
[112.37206268 -508.54782104]
[121.56802368 -520.45050049]
[132.74165344 -530.51977539]
[145.53376770 -538.43188477]
[159.53315735 -543.93249512]
[174.28977966 -546.84490967]
[189.32928467 -547.07531738]
[204.16821289 -544.61645508]
[218.32954407 -539.54730225]
[231.35806274 -532.03082275]
[242.83496094 -522.30865479]
[252.39128113 -510.69329834]
[259.71984863 -497.55816650]
[264.58508301 -483.32546997]
[266.83056641 -468.45275879]
[266.38412476 -453.41812134]
[263.26010132 -438.70483398]
[257.55895996 -424.78591919]
[249.46391296 -412.10876465]
[239.23521423 -401.08093262]
[227.20166016 -392.05685425]
[213.75010681 -385.32669067]
[199.31292725 -381.10675049]
[184.35424805 -379.53268433]
[183.23860168 -364.57421875]
[182.12295532 -349.61578369]
[181.00730896 -334.65731812]
[179.89166260 -319.69888306]
[182.27407837 -315.55966187]
[182.08155823 -309.87988281]
[178.51358032 -304.31381226]
[176.95304871 -289.39520264]
[186.09239197 -301.28942871]
[199.24038696 -308.50955200]
[214.18136597 -309.83886719]
[228.39752197 -305.05334473]
[239.49316406 -294.95944214]
[245.59849548 -281.25817871]
[245.68466187 -266.25842285]
[239.73712158 -252.48791504]
[228.75816345 -242.26722717]
[214.59793091 -237.31872559]
[199.64266968 -238.47630310]
[186.41259766 -245.54490662]
[177.13722229 -257.33334351]
[173.37951660 -271.85671997]
[168.97851562 -257.51687622]
[164.57752991 -243.17703247]
[160.17652893 -228.83718872]
[156.52844238 -214.28756714]
[158.32662964 -207.11900330]
[153.48907471 -199.37072754]
[150.38496399 -184.69541931]
[155.32098389 -170.64248657]
[144.89535522 -158.74220276]
[141.79124451 -144.06689453]
[138.68713379 -129.39160156]
[135.58302307 -114.71629333]
[132.47891235 -100.04099274]
[129.37480164 -85.36569214]
[126.27069855 -70.69039154]
[123.49508667 -55.94942474]
[121.04935455 -41.15015411]
[118.60363007 -26.35088348]
[116.71033478 -11.47084904]
[115.37210083 3.46933627]
[114.03386688 18.40952110]
[112.69563293 33.34970474]
[120.92639160 48.84878922]
[110.20834351 63.82226562]
[109.09268951 78.78071594]
[107.97704315 93.73917389]
[110.56565094 101.37275696]
[106.73179626 108.91149139]
[105.39356232 123.85167694]
[104.05532837 138.79185486]
[102.82835388 153.74159241]
[101.71270752 168.70004272]
[100.59706116 183.65850830]
[113.49323273 175.99765015]
[127.57666779 181.16069031]
[132.46557617 195.34161377]
[124.55603790 208.08677673]
[109.67866516 210.00091553]
[98.80110931 199.67454529]
[96.57598877 214.50859070]
[102.18055725 229.30383301]
[92.64087677 240.74253845]
[90.41576385 255.57658386]
[88.19064331 270.41061401]
[85.96553040 285.24465942]
[83.96151733 300.11019897]
[82.17904663 315.00390625]
[80.39658356 329.89764404]
[87.74044037 340.50097656]
[85.94919586 352.86929321]
[76.52291107 360.45028687]
[74.51889801 375.31579590]
[72.51488495 390.18133545]
[78.33910370 404.89151001]
[68.97079468 416.47097778]
[70.95500946 421.29901123]
[70.89488220 425.94116211]
[69.20355225 429.64987183]
[66.53099060 431.94982910]
[63.86519623 446.71102905]
[61.19940186 461.47225952]
[58.53360748 476.23345947]
[55.86780930 490.99468994]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 210]
[14 209]
[15 208]
[16 207]
[17 206]
[18 202]
[20 200]
[21 199]
[22 198]
[24 195]
[25 194]
[26 193]
[29 192]
[30 191]
[31 190]
[32 189]
[34 187]
[35 186]
[36 180]
[37 179]
[38 178]
[40 177]
[41 176]
[42 175]
[43 173]
[44 172]
[45 171]
[48 169]
[49 168]
[50 167]
[51 166]
[57 165]
[58 164]
[59 163]
[63 162]
[64 161]
[65 160]
[66 159]
[67 158]
[68 157]
[69 156]
[71 154]
[72 153]
[73 151]
[81 150]
[82 149]
[83 148]
[84 147]
[85 133]
[86 132]
[87 129]
[88 128]
[89 127]
[90 126]
[91 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
