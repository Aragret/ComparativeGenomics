%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCGGCGUGAGCAUUCCCCACCUAAAAAGAUACAUCGGCAACUCAACACCAUCAGUUUUACAUUAUUAAUAAUCAUCAUUCCGAUCCUCCCACAACUAAxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[188.43153381 478.30670166]
[196.48005676 465.54409790]
[207.55821228 455.30023193]
[220.91064453 448.27349854]
[217.58837891 433.64602661]
[214.26611328 419.01858521]
[209.75848389 404.71188354]
[204.09570312 390.82186890]
[198.43292236 376.93182373]
[192.77012634 363.04180908]
[178.98449707 357.51983643]
[173.04376221 343.51406860]
[178.92916870 329.09185791]
[166.95962524 320.22735596]
[168.91455078 304.52740479]
[163.25177002 290.63735962]
[157.58897400 276.74734497]
[151.92619324 262.85733032]
[146.26341248 248.96728516]
[140.60061646 235.07727051]
[134.93783569 221.18724060]
[129.17179871 207.33975220]
[123.30284119 193.53556824]
[116.70196533 207.00511169]
[102.55528259 211.99224854]
[88.96666718 205.64012146]
[83.72028351 191.58752441]
[89.82150269 177.88442993]
[103.77527618 172.38056946]
[117.58756256 178.22814941]
[112.97355652 163.95541382]
[108.35954285 149.68267822]
[103.74553680 135.40995789]
[99.13153076 121.13721466]
[94.51751709 106.86448669]
[91.93129730 105.25173187]
[89.87472534 102.66232300]
[88.71068573 99.29061127]
[88.72515106 95.46228790]
[90.08118439 91.60299683]
[86.32488251 77.08093262]
[82.56858063 62.55887604]
[78.90850830 58.83718491]
[77.21168518 54.51583481]
[77.37775421 50.44306183]
[78.98427582 47.30436325]
[75.88016510 32.62905884]
[72.77605438 17.95375824]
[69.67194366 3.27845573]
[66.02385712 -11.27116489]
[61.83684540 -25.67494774]
[57.64983368 -40.07872772]
[53.14944839 -44.92208099]
[51.95058441 -50.47723389]
[53.55945969 -54.97396469]
[42.61285400 -66.39685059]
[46.91645813 -80.65617371]
[43.16015625 -95.17823029]
[39.40385818 -109.70028687]
[35.64755630 -124.22235107]
[31.89125443 -138.74441528]
[28.13495445 -153.26646423]
[23.04874802 -139.15510559]
[12.04980659 -128.95593262]
[-2.40467715 -124.94744873]
[-17.08553505 -128.02517700]
[-28.71302605 -137.50154114]
[-34.68953705 -151.25949097]
[-33.67990494 -166.22547913]
[-25.90967941 -179.05604553]
[-13.11475086 -186.88482666]
[1.84646165 -187.96284485]
[15.63158512 -182.04927063]
[25.16099548 -170.46519470]
[23.82276154 -185.40538025]
[22.48452759 -200.34555054]
[18.60198212 -208.61378479]
[21.23928452 -215.51788330]
[20.12363625 -230.47633362]
[19.00798607 -245.43478394]
[17.89233780 -260.39324951]
[16.77668953 -275.35168457]
[15.66104031 -290.31015015]
[14.54539204 -305.26858521]
[-0.43158010 -306.56723022]
[-15.00625324 -310.25167847]
[-28.80110931 -316.22647095]
[-41.45882797 -324.33685303]
[-52.65154266 -334.37274170]
[-62.08933640 -346.07421875]
[-69.52774811 -359.13815308]
[-74.77410126 -373.22613525]
[-77.69251251 -387.97332764]
[-78.20737457 -402.99768066]
[-76.30535889 -417.91003418]
[-72.03573608 -432.32412720]
[-65.50909424 -445.86663818]
[-56.89448547 -458.18670654]
[-46.41505432 -468.96530151]
[-34.34224319 -477.92315674]
[-20.98876381 -484.82827759]
[-6.70050669 -489.50183105]
[8.15242958 -491.82269287]
[23.18531799 -491.73080444]
[38.00876999 -489.22851562]
[52.23882294 -484.38064575]
[65.50688171 -477.31277466]
[77.46927643 -468.20800781]
[87.81615448 -457.30209351]
[96.27949524 -444.87762451]
[102.64009094 -431.25634766]
[106.73317719 -416.79110718]
[108.45274353 -401.85662842]
[107.75423431 -386.83969116]
[104.65575409 -372.12930298]
[99.23755646 -358.10647583]
[91.63998413 -345.13446045]
[82.05984497 -333.54925537]
[70.74526978 -323.65093994]
[57.98934555 -315.69592285]
[44.12247467 -309.89022827]
[29.50384521 -306.38424683]
[30.61949348 -291.42578125]
[31.73514366 -276.46734619]
[32.85079193 -261.50888062]
[33.96643829 -246.55043030]
[35.08208847 -231.59197998]
[36.19773865 -216.63352966]
[37.42471313 -201.68379211]
[38.76294708 -186.74360657]
[40.10118103 -171.80342102]
[42.65701294 -157.02276611]
[46.41331482 -142.50070190]
[50.16961670 -127.97865295]
[53.92591476 -113.45658875]
[57.68221664 -98.93453217]
[61.43851852 -84.41247559]
[72.11644745 -74.02829742]
[68.08152008 -58.73026276]
[72.05361938 -44.26573944]
[76.24063110 -29.86195755]
[80.42764282 -15.45817566]
[89.82955933 -27.14594269]
[104.82929230 -27.23517036]
[114.36959839 -15.66008377]
[111.41770935 -0.95340616]
[98.14965820 6.04364729]
[84.34724426 0.17434549]
[87.45135498 14.84964752]
[90.55546570 29.52495003]
[93.65957642 44.20025253]
[97.09063721 58.80257416]
[100.84693909 73.32463074]
[104.60324097 87.84669495]
[108.79025269 102.25047302]
[113.40425873 116.52320862]
[118.01827240 130.79594421]
[122.63227844 145.06867981]
[127.24629211 159.34141541]
[131.86029053 173.61413574]
[137.10700989 187.66661072]
[142.97598267 201.47079468]
[149.21359253 208.14387512]
[148.82786560 215.52444458]
[154.49064636 229.41447449]
[160.15342712 243.30450439]
[165.81622314 257.19451904]
[171.47900391 271.08456421]
[177.14179993 284.97457886]
[182.80458069 298.86462402]
[195.17916870 308.72262573]
[192.81919861 323.42907715]
[207.11053467 329.62545776]
[212.65554810 343.79260254]
[206.66015625 357.37902832]
[212.32293701 371.26904297]
[217.98573303 385.15908813]
[223.64851379 399.04910278]
[226.80383301 384.38473511]
[236.34155273 372.80749512]
[250.13092041 366.90383911]
[265.09136963 367.99258423]
[277.88064575 375.83056641]
[285.64166260 388.66671753]
[286.64056396 403.63342285]
[280.65417480 417.38708496]
[269.01986694 426.85507202]
[254.33680725 429.92227173]
[239.88520813 425.90341187]
[228.89358521 415.69631958]
[232.21583557 430.32376099]
[235.53810120 444.95123291]
[250.61582947 445.52078247]
[265.03210449 449.97424316]
[277.80401611 458.00799561]
[288.06069946 469.07424927]
[295.10290527 482.41854858]
[298.45043945 497.13098145]
[297.87509155 512.20849609]
[293.41604614 526.62304688]
[285.37738037 539.39184570]
[274.30715942 549.64428711]
[260.96014404 556.68133545]
[246.24639893 560.02319336]
[231.16911316 559.44201660]
[216.75627136 554.97741699]
[203.99058533 546.93383789]
[193.74243164 535.85961914]
[186.71054077 522.50988770]
[183.37435913 507.79486084]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 192]
[5 191]
[6 190]
[7 178]
[8 177]
[9 176]
[10 175]
[13 172]
[15 170]
[16 169]
[17 168]
[18 167]
[19 166]
[20 165]
[21 164]
[22 162]
[23 161]
[30 160]
[31 159]
[32 158]
[33 157]
[34 156]
[35 155]
[40 154]
[41 153]
[42 152]
[46 151]
[47 150]
[48 149]
[49 148]
[50 142]
[51 141]
[52 140]
[55 139]
[57 137]
[58 136]
[59 135]
[60 134]
[61 133]
[62 132]
[74 131]
[75 130]
[76 129]
[78 128]
[79 127]
[80 126]
[81 125]
[82 124]
[83 123]
[84 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
