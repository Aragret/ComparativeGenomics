%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCAGUGAGUAUCCGGUCUGAAUCCCGAUCCUACUACUAAUUAUUCUCCCUACUGUAUUGAUAAUCACCGUCCAAUCAACAAACAUCCCGAGUACCAUxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[179.29144287 514.92205811]
[185.65800476 501.27355957]
[194.81008911 489.31304932]
[206.31965637 479.59997559]
[219.64836121 472.58859253]
[215.67626953 458.12405396]
[211.70416260 443.65954590]
[207.62449646 429.22497559]
[203.43748474 414.82119751]
[199.25047302 400.41741943]
[188.26809692 390.35577393]
[191.84576416 374.94439697]
[177.79191589 370.08358765]
[169.19345093 357.73327637]
[169.51985168 342.51004028]
[178.85548401 330.25637817]
[174.66847229 315.85260010]
[170.48146057 301.44882202]
[165.76132202 287.21081543]
[160.51460266 273.15835571]
[155.26788330 259.10589600]
[138.81539917 259.56393433]
[123.17597961 254.35348511]
[110.24540710 244.08764648]
[101.59744263 229.99337769]
[98.29227448 213.76495361]
[100.74661255 197.36030579]
[108.68119812 182.76470947]
[121.15248108 171.75062561]
[115.48969269 157.86061096]
[109.82690430 143.97058105]
[104.16412354 130.08055115]
[98.50133514 116.19052124]
[84.98957062 106.25028229]
[87.45326996 89.65792084]
[81.58431244 75.85374451]
[67.74980927 78.40632629]
[53.69361877 78.01276398]
[40.03590012 74.69306183]
[27.37867928 68.59627533]
[16.27931404 59.99380112]
[7.22594929 49.26730728]
[0.61604792 36.89181137]
[-3.26105475 23.41462517]
[-4.23681784 9.43116665]
[-2.27081919 -4.44135809]
[2.54757619 -17.59119034]
[10.00327682 -29.43900108]
[19.76506424 -39.46340561]
[31.40030289 -47.22392273]
[25.94494629 -61.19672012]
[20.48958969 -75.16951752]
[15.03423214 -89.14231110]
[12.86013126 -74.30070496]
[5.53494883 -61.21095276]
[-5.97756100 -51.59523010]
[-20.16272926 -46.71865463]
[-35.15425491 -47.22282410]
[-48.97974396 -53.04140472]
[-59.82021332 -63.40886307]
[-66.24941254 -76.96118164]
[-67.42147827 -91.91532135]
[-63.18219376 -106.30381012]
[-54.08931732 -118.23358154]
[-41.33916855 -126.13508606]
[-26.60925484 -128.96873474]
[-11.83754253 -126.36171722]
[1.03249097 -118.65702820]
[10.30868053 -106.86624908]
[8.08356380 -121.70029449]
[5.85844660 -136.53433228]
[3.63332939 -151.36837769]
[-0.73446739 -159.39085388]
[1.48722088 -166.43968201]
[-0.51679277 -181.30520630]
[-10.02844524 -193.94795227]
[-4.06088352 -207.59483337]
[-6.06489706 -222.46037292]
[-8.06891060 -237.32589722]
[-10.07292461 -252.19142151]
[-21.66320801 -266.50039673]
[-14.36956787 -282.46191406]
[-16.59468460 -297.29595947]
[-18.81980324 -312.13000488]
[-21.04491997 -326.96405029]
[-23.27003670 -341.79809570]
[-25.49515343 -356.63214111]
[-27.72027016 -371.46618652]
[-42.73148346 -372.85430908]
[-56.97406769 -377.79516602]
[-69.61997223 -386.00155640]
[-79.93399048 -396.99630737]
[-87.31646729 -410.14019775]
[-91.33820343 -424.66912842]
[-91.76538086 -439.73831177]
[-88.57315826 -454.47171021]
[-81.94713593 -468.01275635]
[-72.27252960 -479.57412720]
[-60.11181641 -488.48370361]
[-46.17200470 -494.22348022]
[-31.26353455 -496.45974731]
[-16.25316620 -495.06253052]
[-2.01358056 -490.11300659]
[10.62734890 -481.89898682]
[20.93469620 -470.89797974]
[28.30920601 -457.74960327]
[32.32213593 -443.21826172]
[32.74017334 -428.14880371]
[29.53902054 -413.41732788]
[22.90478516 -399.88034058]
[13.22317410 -388.32482910]
[1.05706227 -379.42260742]
[-12.88622761 -373.69128418]
[-10.66110992 -358.85723877]
[-8.43599319 -344.02319336]
[-6.21087599 -329.18914795]
[-3.98575854 -314.35510254]
[-1.76064146 -299.52105713]
[0.46447575 -284.68704224]
[10.00259113 -277.24722290]
[11.97777557 -264.90692139]
[4.79260397 -254.19543457]
[6.79661751 -239.32991028]
[8.80063152 -224.46438599]
[10.80464458 -209.59884644]
[20.17295647 -198.01939392]
[14.34873581 -183.30921936]
[16.35274887 -168.44369507]
[18.46737289 -153.59349060]
[20.69248962 -138.75944519]
[22.91760826 -123.92540741]
[25.14272499 -109.09136200]
[29.00703049 -94.59767151]
[34.46238708 -80.62487030]
[39.91774368 -66.65207672]
[45.37310028 -52.67927933]
[61.19260406 -54.92823029]
[77.10076141 -53.34264755]
[92.18102264 -48.00985336]
[105.56356812 -39.23317719]
[116.47549438 -27.51471710]
[124.28542328 -13.52661514]
[128.54008484 1.92750573]
[128.99058533 17.95869827]
[125.60694885 33.64383316]
[118.58013916 48.07874298]
[108.31121826 60.43035889]
[95.38848877 69.98477936]
[101.25744629 83.78895569]
[111.77629089 88.78848267]
[116.25323486 99.54014587]
[112.39135742 110.52774048]
[118.05414581 124.41776276]
[123.71693420 138.30778503]
[129.37971497 152.19781494]
[135.04251099 166.08784485]
[148.61541748 164.96084595]
[161.93983459 167.69868469]
[173.93899536 174.07046509]
[183.64590454 183.55194092]
[190.28135681 195.36878967]
[193.31639099 208.55969238]
[192.51454163 222.05464172]
[187.95019531 234.76168823]
[180.00175476 245.65530396]
[169.32035828 253.85916138]
[174.56707764 267.91165161]
[179.81379700 281.96411133]
[188.32037354 269.60943604]
[203.27192688 268.40481567]
[213.64672852 279.23828125]
[211.79684448 294.12377930]
[199.08596802 302.08828735]
[184.88523865 297.26181030]
[189.07225037 311.66558838]
[193.25926208 326.06936646]
[207.70903015 331.40887451]
[216.14541626 344.08486938]
[215.50758362 359.12008667]
[206.24954224 370.75738525]
[217.53140259 381.84927368]
[213.65426636 396.23040771]
[217.84127808 410.63418579]
[222.02828979 425.03799438]
[227.42874146 432.40499878]
[226.16868591 439.68743896]
[230.14079285 454.15197754]
[234.11288452 468.61648560]
[249.15307617 467.83752441]
[264.00900269 470.31036377]
[277.98587036 475.91943359]
[290.42990112 484.40234375]
[300.75912476 495.36233521]
[308.49038696 508.28680420]
[313.26205444 522.57122803]
[314.85101318 537.54754639]
[313.18292236 552.51519775]
[308.33575439 566.77423096]
[300.53628540 579.65765381]
[290.14929199 590.56286621]
[277.66055298 598.97985840]
[263.65426636 604.51495361]
[248.78544617 606.90924072]
[233.74958801 606.05078125]
[219.24992371 601.97967529]
[205.96464539 594.88629150]
[194.51512146 585.10253906]
[185.43687439 573.08587646]
[179.15449524 559.39849854]
[175.96182251 544.68041992]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 188]
[6 187]
[7 186]
[8 184]
[9 183]
[10 182]
[12 180]
[16 176]
[17 175]
[18 174]
[19 168]
[20 167]
[21 166]
[29 156]
[30 155]
[31 154]
[32 153]
[33 152]
[35 149]
[36 148]
[50 136]
[51 135]
[52 134]
[53 133]
[69 132]
[70 131]
[71 130]
[72 129]
[74 128]
[75 127]
[77 125]
[78 124]
[79 123]
[80 122]
[82 119]
[83 118]
[84 117]
[85 116]
[86 115]
[87 114]
[88 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
