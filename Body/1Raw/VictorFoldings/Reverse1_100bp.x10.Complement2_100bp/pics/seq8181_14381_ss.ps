%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[145.09356689 638.21240234]
[139.89620972 624.10961914]
[136.91265869 609.37878418]
[136.21282959 594.36505127]
[137.81315613 579.42053223]
[141.67610168 564.89544678]
[147.71112061 551.13031006]
[155.77674866 538.44781494]
[165.68391418 527.14520264]
[177.20036316 517.48748779]
[190.05616760 509.70101929]
[203.94993591 503.96835327]
[200.41026306 489.39196777]
[196.87059021 474.81558228]
[193.33091736 460.23922729]
[189.79124451 445.66284180]
[186.03494263 431.14077759]
[182.06285095 416.67626953]
[178.09074402 402.21173096]
[174.01107788 387.77719116]
[169.82406616 373.37341309]
[165.63705444 358.96963501]
[161.02305603 344.69689941]
[155.56768799 330.72409058]
[149.69873047 316.91992188]
[143.82977295 303.11572266]
[131.72956848 294.43041992]
[133.45053101 278.70309448]
[127.58157349 264.89892578]
[121.71261597 251.09474182]
[115.84365082 237.29057312]
[109.97469330 223.48638916]
[108.58818817 238.42218018]
[102.48727417 252.12541199]
[92.31579590 263.14999390]
[79.14717865 270.33242798]
[64.37113190 272.91476440]
[49.54700851 270.62448120]
[36.23923492 263.70324707]
[25.85221291 252.88153076]
[19.48210907 239.30133057]
[17.80117416 224.39581299]
[20.98680305 209.73799133]
[28.70280647 196.87474060]
[40.13489914 187.16354370]
[54.07662201 181.62925720]
[69.05667114 180.85592651]
[83.49417114 184.92515564]
[95.86549377 193.40750122]
[104.86515808 205.40798950]
[102.64003754 190.57395935]
[100.41492462 175.73991394]
[98.18980408 160.90586853]
[95.96469116 146.07182312]
[86.20109558 157.45918274]
[71.25628662 158.74481201]
[59.69133759 149.19221497]
[58.13117218 134.27357483]
[67.46952820 122.53495789]
[82.35696411 120.70077515]
[94.26480103 129.82090759]
[93.37198639 114.84751129]
[85.14273071 106.60610962]
[84.53608704 94.97541046]
[91.86329651 85.92259979]
[91.19351196 70.93756104]
[90.52372742 55.95252609]
[82.17793274 42.51160812]
[89.33921051 29.45153999]
[80.36477661 20.18750763]
[80.11540985 7.69264507]
[88.17948914 -1.32385206]
[87.73287964 -16.31720161]
[87.28627777 -31.31055260]
[84.54139709 -35.75045776]
[83.84382629 -40.34030151]
[84.90782928 -44.27513885]
[87.16961670 -46.98006821]
[87.39294434 -61.97840881]
[87.61627197 -76.97674561]
[87.83959961 -91.97508240]
[87.39299774 -106.96842957]
[78.65071869 -120.15490723]
[85.41997528 -133.42239380]
[84.30432892 -148.38085938]
[75.56204987 -161.56733704]
[82.33130646 -174.83482361]
[81.21566010 -189.79327393]
[80.10000610 -204.75172424]
[78.98435974 -219.71018982]
[70.24208069 -232.89665222]
[77.01133728 -246.16415405]
[75.89569092 -261.12261963]
[61.15642548 -264.47601318]
[48.06124878 -272.02636719]
[37.77458191 -283.10229492]
[31.21110344 -296.71890259]
[28.95443726 -311.66543579]
[31.20524025 -326.61285400]
[37.76337814 -340.23205566]
[48.04570007 -351.31198120]
[61.13791275 -358.86749268]
[75.87586212 -362.22668457]
[90.94906616 -361.09088135]
[105.01721954 -355.56109619]
[116.82939148 -346.12902832]
[125.33525085 -333.63336182]
[129.77847290 -319.18521118]
[129.76396179 -304.06927490]
[125.29299927 -289.62969971]
[116.76315308 -277.15039062]
[104.93289185 -267.74099731]
[90.85414886 -262.23825073]
[91.96979523 -247.27980042]
[100.63227081 -235.16325378]
[93.94281769 -220.82583618]
[95.05846405 -205.86738586]
[96.17411041 -190.90892029]
[97.28975677 -175.95046997]
[105.95223999 -163.83392334]
[99.26277924 -149.49650574]
[100.37843323 -134.53805542]
[109.04090881 -122.42150116]
[102.35144806 -108.08408356]
[112.93495941 -118.71372986]
[127.93399048 -118.88423920]
[138.75642395 -108.49794769]
[139.20266724 -93.50459290]
[129.01710510 -82.49304199]
[114.03447723 -81.77120972]
[102.83793640 -91.75175476]
[102.61460876 -76.75341797]
[102.39128113 -61.75508118]
[102.16795349 -46.75674057]
[102.27962494 -31.75715828]
[102.72622681 -16.76380730]
[103.17283630 -1.77045798]
[113.18704224 12.64073753]
[104.32424927 28.78175545]
[112.62213898 41.15084457]
[105.50876617 55.28274155]
[106.17855072 70.26777649]
[106.84833527 85.25281525]
[116.23766327 99.15306091]
[108.34539032 113.95469666]
[109.23821259 128.92810059]
[110.79873657 143.84671021]
[113.02384949 158.68074036]
[115.24897003 173.51478577]
[117.47408295 188.34883118]
[119.69920349 203.18287659]
[123.77886963 217.61743164]
[129.64782715 231.42161560]
[135.51678467 245.22578430]
[141.38575745 259.02996826]
[147.25471497 272.83413696]
[159.77468872 282.50680542]
[157.63394165 297.24676514]
[163.50291443 311.05096436]
[169.37187195 324.85513306]
[172.93191528 327.34109497]
[175.27960205 330.51171875]
[176.34857178 333.90182495]
[176.23033142 337.07238770]
[175.15208435 339.65997314]
[178.55784607 342.35342407]
[180.71266174 345.65817261]
[181.57794189 349.10586548]
[181.27119446 352.26379395]
[180.04083252 354.78262329]
[184.22784424 369.18640137]
[188.41485596 383.59017944]
[193.81530762 390.95718384]
[192.55526733 398.23965454]
[196.52737427 412.70416260]
[200.49946594 427.16870117]
[204.92724609 432.07852173]
[206.04325867 437.65090942]
[204.36761475 442.12316895]
[207.90728760 456.69955444]
[211.44696045 471.27590942]
[214.98663330 485.85229492]
[218.52630615 500.42868042]
[233.50187683 499.15081787]
[248.49697876 500.17407227]
[263.16012573 503.47445679]
[277.14761353 508.97454834]
[290.13150024 516.54547119]
[301.80746460 526.00976562]
[311.90179443 537.14550781]
[320.17785645 549.69171143]
[326.44165039 563.35424805]
[330.54635620 577.81286621]
[332.39575195 592.72863770]
[331.94650269 607.75189209]
[329.20907593 622.53051758]
[324.24771118 636.71801758]
[317.17868042 649.98181152]
[308.16766357 662.01104736]
[297.42593384 672.52374268]
[285.20529175 681.27337646]
[271.79217529 688.05487061]
[257.50103760 692.70928955]
[242.66688538 695.12756348]
[227.63742065 695.25292969]
[212.76496887 693.08245850]
[198.39817810 688.66705322]
[184.87380981 682.11022949]
[172.50891113 673.56567383]
[161.59330750 663.23370361]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 183]
[13 182]
[14 181]
[15 180]
[16 179]
[17 176]
[18 175]
[19 174]
[20 172]
[21 171]
[22 170]
[23 165]
[24 160]
[25 159]
[26 158]
[28 156]
[29 155]
[30 154]
[31 153]
[32 152]
[50 151]
[51 150]
[52 149]
[53 148]
[54 147]
[61 146]
[62 145]
[65 143]
[66 142]
[67 141]
[69 139]
[72 137]
[73 136]
[74 135]
[78 134]
[79 133]
[80 132]
[81 131]
[82 124]
[84 122]
[85 121]
[87 119]
[88 118]
[89 117]
[90 116]
[92 114]
[93 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
