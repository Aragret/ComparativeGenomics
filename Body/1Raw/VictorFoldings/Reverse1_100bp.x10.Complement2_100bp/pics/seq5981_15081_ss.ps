%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[183.47027588 574.20458984]
[183.02366638 559.21124268]
[182.57705688 544.21789551]
[182.13044739 529.22454834]
[181.68383789 514.23120117]
[181.23724365 499.23785400]
[179.67671204 484.31924438]
[177.01092529 469.55804443]
[174.34512329 454.79681396]
[171.67933655 440.03561401]
[169.01353455 425.27438354]
[165.36544800 410.72476196]
[160.75143433 396.45202637]
[156.13742065 382.17929077]
[153.70591736 380.78433228]
[151.68046570 378.34219360]
[150.46269226 375.00265503]
[150.39263916 371.05807495]
[151.70109558 366.91781616]
[147.94479370 352.39575195]
[144.18849182 337.87368774]
[141.35226440 335.77890015]
[139.38978577 332.20626831]
[138.98455811 327.58142090]
[140.60418701 322.61917114]
[137.50007629 307.94387817]
[122.98910522 304.49462891]
[111.36695099 295.04821777]
[104.97256470 281.43670654]
[105.12274170 266.33712769]
[111.84123230 252.74488831]
[123.84349823 243.37968445]
[120.73938751 228.70437622]
[117.63527679 214.02906799]
[114.53116608 199.35377502]
[111.42705536 184.67846680]
[108.21378326 170.02668762]
[104.89152527 155.39921570]
[101.56926727 140.77175903]
[98.24700928 126.14430237]
[94.92474365 111.51683807]
[91.27665710 96.96721649]
[87.30456543 82.50269318]
[83.33246613 68.03816986]
[79.36036682 53.57364655]
[64.27439880 52.29346466]
[50.56240082 45.94105530]
[39.87121201 35.30062866]
[33.47756958 21.67009544]
[32.13567734 6.70277119]
[35.98826599 -7.79316139]
[44.55169678 -20.07309341]
[56.77659225 -28.66595459]
[52.80449295 -43.13047791]
[42.00111389 -50.17673492]
[38.99052811 -62.30604553]
[44.85731506 -72.88467407]
[41.10101318 -87.40673065]
[37.34471512 -101.92878723]
[32.63152313 -87.68849945]
[22.26887321 -76.84343719]
[8.25762463 -71.48760223]
[-6.69686842 -72.65513611]
[-19.70712852 -80.12060547]
[-28.26107597 -92.44253540]
[-30.70708084 -107.24176025]
[-26.57285500 -121.66078186]
[-16.65665436 -132.91551208]
[-2.87314057 -138.83283997]
[12.11630440 -138.27021790]
[25.41745377 -131.33628845]
[34.46259308 -119.36871338]
[33.34694290 -134.32716370]
[32.23129272 -149.28561401]
[31.11564636 -164.24407959]
[29.99999809 -179.20252991]
[28.88434792 -194.16098022]
[20.14206886 -207.34745789]
[26.91132736 -220.61494446]
[18.16904831 -233.80142212]
[24.93830681 -247.06892395]
[14.35479927 -236.43927002]
[-0.64423114 -236.26875305]
[-11.46665859 -246.65504456]
[-11.91290569 -261.64840698]
[-1.72734070 -272.65997314]
[13.25528145 -273.38177490]
[24.45181847 -263.40124512]
[24.67514610 -278.39959717]
[24.89847374 -293.39791870]
[25.12180138 -308.39627075]
[17.59082222 -322.31008911]
[25.51675415 -334.92077637]
[10.90475273 -338.60668945]
[-2.46306777 -345.56356812]
[-13.86579609 -355.41619873]
[-22.68849945 -367.63327026]
[-28.45537758 -381.55590820]
[-30.85543251 -396.43328857]
[-29.75922966 -411.46310425]
[-25.22588921 -425.83477783]
[-17.49988556 -438.77331543]
[-6.99787474 -449.58093262]
[5.71378469 -457.67477417]
[19.94956779 -462.61837769]
[34.94175720 -464.14514160]
[49.88184357 -462.17269897]
[63.96412659 -456.80743408]
[76.42916870 -448.33868408]
[86.60474396 -437.22317505]
[93.94209290 -424.06036377]
[98.04552460 -409.56005859]
[98.69374084 -394.50427246]
[95.85179901 -379.70495605]
[89.67295074 -365.96020508]
[80.49040985 -354.01123047]
[68.79938507 -344.50247192]
[55.23036194 -337.94668579]
[40.51509094 -334.69744873]
[48.06204605 -321.85638428]
[40.12013626 -308.17294312]
[39.89680862 -293.17459106]
[39.67348099 -278.17626953]
[39.45015335 -263.17791748]
[39.89675903 -248.18457031]
[48.55924225 -236.06802368]
[41.86978149 -221.73060608]
[50.53226089 -209.61405945]
[43.84280014 -195.27662659]
[44.95845032 -180.31817627]
[46.07410049 -165.35972595]
[47.18974686 -150.40127563]
[48.30539703 -135.44281006]
[49.42104721 -120.48435974]
[51.86677170 -105.68508911]
[55.62307358 -91.16303253]
[59.37937546 -76.64097595]
[72.33671570 -64.80567932]
[67.26902008 -47.10257339]
[71.24111176 -32.63805008]
[86.13996124 -31.49362755]
[99.77385712 -25.30929375]
[110.48930359 -14.81388283]
[116.97951508 -1.26033449]
[118.44374847 13.72385979]
[114.68608093 28.33208084]
[106.14133453 40.79640579]
[93.82489777 49.60155106]
[97.79698944 64.06607819]
[101.76908875 78.53060150]
[105.74118042 92.99512482]
[108.78872681 95.35835266]
[110.77979279 99.05342102]
[111.14293671 103.57836914]
[109.55220795 108.19458008]
[112.87446594 122.82204437]
[116.19672394 137.44949341]
[119.51898193 152.07696533]
[122.84124756 166.70442200]
[127.79362488 174.37982178]
[126.10236359 181.57435608]
[129.20646667 196.24966431]
[132.31057739 210.92495728]
[135.41468811 225.60026550]
[138.51879883 240.27557373]
[153.28526306 243.97866821]
[164.93212891 253.68627930]
[171.18359375 267.43179321]
[170.84848022 282.46670532]
[164.04681396 295.81011963]
[152.17538452 304.83975220]
[155.27947998 319.51507568]
[158.71054077 334.11740112]
[162.46684265 348.63943481]
[166.22314453 363.16149902]
[170.41015625 377.56527710]
[175.02416992 391.83801270]
[179.63818359 406.11074829]
[184.88667297 392.05895996]
[196.83489990 382.99032593]
[211.78057861 381.71490479]
[225.09262085 388.62789917]
[232.64616394 401.58721924]
[232.10063171 416.57730103]
[223.62509155 428.95327759]
[209.84576416 434.88034058]
[195.03233337 432.52194214]
[183.77474976 422.60858154]
[186.44055176 437.36981201]
[189.10633850 452.13101196]
[191.77214050 466.89224243]
[194.43792725 481.65347290]
[200.99395752 468.16204834]
[213.36169434 459.67446899]
[228.30825806 458.40936279]
[241.92663574 464.69741821]
[250.65701294 476.89495850]
[252.21731567 491.81359863]
[246.19966125 505.55361938]
[234.17706299 514.52337646]
[219.29219055 516.37829590]
[205.43591309 510.63339233]
[196.23059082 498.79125977]
[196.67720032 513.78460693]
[197.12379456 528.77795410]
[197.57040405 543.77130127]
[198.01701355 558.76464844]
[198.46362305 573.75799561]
[204.97886658 589.41009521]
[191.74206543 600.00366211]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 208]
[2 207]
[3 206]
[4 205]
[5 204]
[6 203]
[7 192]
[8 191]
[9 190]
[10 189]
[11 188]
[12 178]
[13 177]
[14 176]
[19 175]
[20 174]
[21 173]
[25 172]
[26 171]
[32 165]
[33 164]
[34 163]
[35 162]
[36 161]
[37 159]
[38 158]
[39 157]
[40 156]
[41 155]
[42 151]
[43 150]
[44 149]
[45 148]
[53 140]
[54 139]
[57 137]
[58 136]
[59 135]
[72 134]
[73 133]
[74 132]
[75 131]
[76 130]
[77 129]
[79 127]
[81 125]
[88 124]
[89 123]
[90 122]
[91 121]
[93 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
