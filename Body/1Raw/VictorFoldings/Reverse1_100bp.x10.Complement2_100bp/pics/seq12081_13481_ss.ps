%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACAGUCUAAGUGUUAGACUACAAAACCAAUUUGAUAUAAAUGUUCUCCUUUUGGGCCAUUACUACAGCCCCAACUCCCUAUCCUCCUCUUACCCCCUAxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[84.34465790 659.25146484]
[74.95660400 647.53784180]
[66.72451782 634.98486328]
[59.72296143 621.70617676]
[54.01534271 607.82208252]
[49.65334702 593.45831299]
[46.67648697 578.74499512]
[45.11171341 563.81524658]
[44.97320175 548.80444336]
[46.26220322 533.84838867]
[48.96704865 519.08258057]
[53.06324387 504.64077759]
[58.51368332 490.65371704]
[65.26901245 477.24810791]
[73.26805115 464.54534912]
[82.43835449 452.66049194]
[92.69687653 441.70114136]
[103.95071411 431.76654053]
[116.09793854 422.94671631]
[129.02854919 415.32147217]
[142.62544250 408.95993042]
[137.58853149 394.83090210]
[132.55162048 380.70187378]
[127.51470184 366.57284546]
[122.47778320 352.44381714]
[117.44086456 338.31478882]
[103.47930145 327.68267822]
[106.94739532 309.59805298]
[101.70067596 295.54559326]
[96.45395660 281.49313354]
[91.20724487 267.44064331]
[89.67398834 282.36209106]
[84.66075897 296.49954224]
[76.45108032 309.05346680]
[65.50923920 319.31387329]
[52.45406723 326.70053101]
[38.02388763 330.79562378]
[23.03479576 331.36758423]
[8.33450127 328.38409424]
[-5.24562502 322.01382446]
[-16.93756104 312.61709595]
[-26.08007050 300.72531128]
[-32.15610123 287.01101685]
[-34.82202148 272.24981689]
[-33.92706299 257.27655029]
[-29.52183914 242.93800354]
[-21.85548782 230.04508972]
[-11.36157703 219.32698059]
[1.36641121 211.38983154]
[15.60864735 206.68252563]
[30.55966377 205.47129822]
[45.37390900 207.82461548]
[59.21356583 213.60942078]
[71.29592896 222.49853516]
[80.93769073 233.98925781]
[87.59391785 247.43270874]
[87.59391785 232.43270874]
[87.59391785 217.43270874]
[85.37265015 214.69441223]
[84.36734772 210.74417114]
[85.13317871 206.16520691]
[87.94385529 201.76666260]
[88.61363983 186.78163147]
[89.28342438 171.79658508]
[89.95320892 156.81155396]
[90.62299347 141.82650757]
[91.29277802 126.84147644]
[91.96256256 111.85643768]
[85.69034576 99.36040497]
[93.05239868 87.47377777]
[93.16406250 72.47419739]
[92.71745300 57.48084641]
[92.15924835 42.49123764]
[91.48946381 27.50619698]
[89.81791687 12.59962273]
[87.15212250 -2.16159415]
[84.48632812 -16.92281151]
[81.82053375 -31.68402863]
[79.15473938 -46.44524765]
[67.27920532 -52.80027008]
[61.31909180 -64.66144562]
[63.25007629 -77.59796143]
[72.14558411 -86.91995239]
[69.69985962 -101.71922302]
[67.25412750 -116.51849365]
[52.21258545 -117.09893799]
[37.59587097 -120.69567871]
[24.00252914 -127.16142273]
[11.98919773 -136.23141479]
[2.04781580 -147.53424072]
[-5.41452408 -160.60705566]
[-10.09224319 -174.91452026]
[-11.79379082 -189.87078857]
[-10.44949150 -204.86337280]
[-6.11439276 -219.27835083]
[1.03398621 -232.52545166]
[10.70292377 -244.06219482]
[22.49648285 -253.41618347]
[35.93172455 -260.20434570]
[50.45848465 -264.14871216]
[65.48189545 -265.08779907]
[80.38677216 -262.98312378]
[94.56275177 -257.92086792]
[107.42935181 -250.10835266]
[118.45968628 -239.86546326]
[127.20206451 -227.61166382]
[133.29850769 -213.84873962]
[136.49935913 -199.14025879]
[136.67353821 -184.08851624]
[133.81391907 -169.30990601]
[128.03761292 -155.40957642]
[119.58113861 -142.95674133]
[108.79079437 -132.46134949]
[96.10843658 -124.35316467]
[82.05339813 -118.96421814]
[84.49913025 -104.16494751]
[86.94485474 -89.36567688]
[101.02266693 -80.16491699]
[104.15190125 -63.29711533]
[93.91595459 -49.11104202]
[96.58174896 -34.34982300]
[99.24754333 -19.58860779]
[101.91333771 -4.82738972]
[104.57913971 9.93382740]
[111.65790558 -3.29080868]
[124.71059418 -10.68183613]
[139.69268799 -9.94906521]
[151.96182251 -1.31955159]
[157.71626282 12.53275490]
[155.17294312 27.31556702]
[145.11993408 38.44826889]
[130.67227173 42.48127365]
[116.30672455 38.16490555]
[106.47450256 26.83641243]
[107.14428711 41.82144928]
[110.58332062 48.36322784]
[107.71080780 57.03424072]
[108.15740967 72.02758789]
[120.18661499 63.06665802]
[134.73075867 66.73650360]
[141.06845093 80.33186340]
[134.52777100 93.83073425]
[119.93027496 97.28225708]
[108.03743744 88.14356232]
[114.30965424 100.63959503]
[106.94760132 112.52622223]
[106.27781677 127.51126099]
[105.60803223 142.49629211]
[104.93824768 157.48133850]
[104.26846313 172.46636963]
[103.59867859 187.45141602]
[102.92889404 202.43644714]
[102.59391785 217.43270874]
[102.59391785 232.43270874]
[102.59391785 247.43270874]
[105.25971222 262.19393921]
[110.50643158 276.24639893]
[115.75315094 290.29885864]
[120.99987030 304.35134888]
[132.38880920 310.40567017]
[136.46951294 322.21801758]
[131.56990051 333.27786255]
[136.60681152 347.40689087]
[141.64372253 361.53591919]
[146.68064880 375.66497803]
[151.71755981 389.79400635]
[156.75447083 403.92303467]
[171.30932617 400.24862671]
[186.14755249 397.97442627]
[201.13475037 397.12100220]
[216.13522339 397.69607544]
[231.01310730 399.69445801]
[245.63365173 403.09802246]
[259.86447144 407.87597656]
[273.57666016 413.98504639]
[286.64602661 421.36987305]
[298.95425415 429.96362305]
[310.38986206 439.68841553]
[320.84927368 450.45620728]
[330.23776245 462.16949463]
[338.47030640 474.72219849]
[345.47235107 488.00061035]
[351.18048096 501.88449097]
[355.54296875 516.24810791]
[358.52038574 530.96136475]
[360.08569336 545.89099121]
[360.22476196 560.90185547]
[358.93630981 575.85791016]
[356.23199463 590.62384033]
[352.13632202 605.06579590]
[346.68640137 619.05303955]
[339.93154907 632.45886230]
[331.93298340 645.16192627]
[322.76312256 657.04711914]
[312.50497437 668.00689697]
[301.25152588 677.94183350]
[289.10461426 686.76214600]
[276.17425537 694.38781738]
[262.57760620 700.74987793]
[248.43775940 705.79064941]
[233.88278198 709.46453857]
[219.04447937 711.73815918]
[204.05723572 712.59106445]
[189.05679321 712.01544189]
[174.17898560 710.01654053]
[159.55856323 706.61242676]
[145.32792664 701.83392334]
[131.61595154 695.72436523]
[118.54682922 688.33905029]
[106.23891449 679.74487305]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 167]
[22 166]
[23 165]
[24 164]
[25 163]
[26 162]
[28 159]
[29 158]
[30 157]
[31 156]
[56 155]
[57 154]
[58 153]
[62 152]
[63 151]
[64 150]
[65 149]
[66 148]
[67 147]
[68 146]
[70 144]
[71 138]
[72 137]
[73 135]
[74 134]
[75 124]
[76 123]
[77 122]
[78 121]
[79 120]
[83 117]
[84 116]
[85 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
