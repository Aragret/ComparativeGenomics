%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGGCAGCCUUUACCACUUCCCUCUGAGCUUCAUGAGACUCCGAACAUCCUCCCAUUUUAUCUCUGGGUCAUUUUAACAUUAUUCGUCACGAACUUAAUxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[140.53260803 465.92144775]
[148.78636169 453.29901123]
[159.92044067 443.12634277]
[173.23493958 436.04290771]
[169.69526672 421.46655273]
[166.15559387 406.89016724]
[162.39929199 392.36810303]
[158.42720032 377.90359497]
[154.34753418 363.46902466]
[150.16052246 349.06524658]
[135.31088257 347.51031494]
[122.15225220 340.36920166]
[112.70464325 328.70269775]
[108.43191528 314.26901245]
[110.01502991 299.25875854]
[117.24371338 285.96255493]
[129.04379272 276.42138672]
[124.85678101 262.01760864]
[120.66977692 247.61381531]
[116.99002838 244.56939697]
[115.18370056 239.18106079]
[116.57939911 232.71858215]
[112.82309723 218.19653320]
[109.06679535 203.67446899]
[105.31050110 189.15240479]
[101.55419922 174.63035583]
[96.01977539 188.57202148]
[84.31757355 197.95596313]
[69.50650787 200.32923889]
[55.45816422 195.07147217]
[45.84474564 183.55703735]
[43.17917252 168.79579163]
[48.15822220 154.64625549]
[59.48038101 144.80711365]
[74.18606567 141.85029602]
[88.43124390 146.54867554]
[98.49185944 157.67335510]
[96.93133545 142.75474548]
[95.37081146 127.83614349]
[93.81028748 112.91754150]
[85.75378418 101.49018860]
[91.27111053 88.64298248]
[89.71058655 73.72438049]
[88.15006256 58.80577469]
[86.58953857 43.88716888]
[83.52204132 39.66371536]
[82.48502350 35.13846588]
[83.25341797 31.13538933]
[85.30776215 28.26972771]
[84.41494751 13.29632187]
[83.52213287 -1.67708385]
[82.62931824 -16.65048981]
[76.81280518 -2.82412887]
[68.10278320 9.38797665]
[56.92423248 19.38997078]
[43.82257080 26.69383621]
[29.43705750 30.94319916]
[14.46960068 31.93072319]
[-0.34950918 29.60822678]
[-14.29721355 24.08902740]
[-26.69297218 15.64242172]
[-36.93196869 4.68053675]
[-44.51462173 -8.26177311]
[-49.07095718 -22.55302238]
[-50.37865829 -37.49591064]
[-48.37392044 -52.36134338]
[-43.15456009 -66.42399597]
[-34.97523880 -78.99772644]
[-24.23504829 -89.46903992]
[-11.45802212 -97.32700348]
[2.73241711 -102.18821716]
[17.64388847 -103.81549835]
[32.54882812 -102.12944031]
[46.71998978 -97.21230316]
[59.46593094 -89.30402374]
[70.16474915 -78.79044342]
[78.29442596 -66.18456268]
[83.45829773 -52.10143661]
[85.40428162 -37.23483276]
[90.23027802 -51.43728638]
[94.95040894 -65.67527771]
[99.56442261 -79.94800568]
[104.17842865 -94.22074127]
[108.79244232 -108.49347687]
[113.40644836 -122.76621246]
[112.39787292 -129.30029297]
[114.52172089 -134.57156372]
[118.37615204 -137.39157104]
[123.41306305 -151.52059937]
[128.44998169 -165.64962769]
[133.48689270 -179.77865601]
[130.83288574 -195.37567139]
[142.39466858 -204.76579285]
[147.43157959 -218.89482117]
[152.46849060 -233.02384949]
[139.15518188 -239.98818970]
[126.94072723 -248.73765564]
[116.06288910 -259.10195923]
[106.73340607 -270.87933350]
[99.13387299 -283.84054565]
[93.41222382 -297.73333740]
[89.67983246 -312.28720093]
[88.00935364 -327.21890259]
[88.43329620 -342.23776245]
[90.94341278 -357.05145264]
[95.49083710 -371.37161255]
[101.98706055 -384.91949463]
[110.30562592 -397.43139648]
[120.28462219 -408.66375732]
[131.72978210 -418.39794922]
[144.41835022 -426.44445801]
[158.10331726 -432.64669800]
[172.51831055 -436.88394165]
[187.38273621 -439.07366943]
[202.40725708 -439.17327881]
[217.29940796 -437.18084717]
[231.76933289 -433.13513184]
[245.53533936 -427.11489868]
[258.32946777 -419.23733521]
[269.90270996 -409.65579224]
[280.02975464 -398.55673218]
[288.51351929 -386.15625000]
[295.18881226 -372.69567871]
[299.92572021 -358.43707275]
[302.63204956 -343.65795898]
[303.25509644 -328.64605713]
[301.78277588 -313.69351196]
[298.24368286 -299.09143066]
[292.70675659 -285.12402344]
[285.27975464 -272.06317139]
[276.10726929 -260.16308594]
[265.36782837 -249.65547180]
[253.27044678 -240.74479675]
[240.05065918 -233.60455322]
[225.96575928 -228.37370300]
[211.28991699 -225.15406799]
[196.30882263 -224.00833130]
[181.31407166 -224.95878601]
[166.59753418 -227.98693848]
[161.56060791 -213.85791016]
[156.52369690 -199.72888184]
[159.53797913 -185.14247131]
[147.61592102 -174.74174500]
[142.57901001 -160.61271667]
[137.54209900 -146.48368835]
[132.50517273 -132.35466003]
[127.67918396 -118.15219879]
[123.06517029 -103.87946320]
[118.45116425 -89.60673523]
[113.83715057 -75.33399963]
[109.22314453 -61.06126785]
[110.15675354 -53.72981644]
[104.43273163 -46.61128998]
[99.60673523 -32.40883255]
[97.60272217 -17.54330635]
[98.49553680 -2.56989980]
[99.38835144 12.40350628]
[100.28116608 27.37691116]
[101.50814056 42.32664490]
[103.06866455 57.24525070]
[104.62918854 72.16385651]
[106.18971252 87.08245850]
[114.24621582 98.50981140]
[108.72888947 111.35701752]
[110.28941345 126.27561951]
[111.84993744 141.19422913]
[113.41046143 156.11283875]
[116.07625580 170.87405396]
[119.83255768 185.39610291]
[123.58885956 199.91816711]
[127.34516144 214.44023132]
[131.10145569 228.96228027]
[135.07356262 243.42680359]
[139.26055908 257.83059692]
[143.44757080 272.23437500]
[158.52363586 273.96295166]
[171.75367737 281.31204224]
[181.13676453 293.13455200]
[185.26744080 307.60952759]
[183.54621887 322.52267456]
[176.26632690 335.60507202]
[164.56430054 344.87823486]
[168.75131226 359.28201294]
[174.15176392 366.64904785]
[172.89172363 373.93148804]
[176.86381531 388.39602661]
[181.29159546 393.30584717]
[182.40762329 398.87823486]
[180.73196411 403.35049438]
[184.27163696 417.92687988]
[187.81130981 432.50323486]
[202.89161682 432.69137573]
[217.45114136 436.62469482]
[230.57466125 444.05599976]
[241.43722534 454.51806641]
[249.35601807 467.35333252]
[253.83323669 481.75491333]
[254.58743286 496.81750488]
[251.57122803 511.59429932]
[244.97419739 525.15637207]
[235.21105957 536.65124512]
[222.89550781 545.35626221]
[208.80171204 550.72430420]
[193.81562805 552.41790771]
[178.87930298 550.33062744]
[164.93162537 544.59362793]
[152.84938049 535.56750488]
[143.39205933 523.81976318]
[137.15414429 510.08880615]
[134.52777100 495.23779297]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 191]
[5 190]
[6 189]
[7 186]
[8 185]
[9 183]
[10 182]
[17 175]
[18 174]
[19 173]
[22 172]
[23 171]
[24 170]
[25 169]
[26 168]
[37 167]
[38 166]
[39 165]
[40 164]
[42 162]
[43 161]
[44 160]
[45 159]
[49 158]
[50 157]
[51 156]
[52 155]
[79 154]
[80 153]
[81 151]
[82 150]
[83 149]
[84 148]
[85 147]
[88 146]
[89 145]
[90 144]
[91 143]
[93 141]
[94 140]
[95 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
