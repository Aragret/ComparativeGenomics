%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUACCAACUAUAACGAUCCCACCGCGAAGGUUAAUCCACGUACUCAUCCACCGGACGUCAUUACAAUCGCCAAUCCGCAUGCCGGUCCCGAUAACCAxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[25.22620583 484.85375977]
[32.65837860 497.96328735]
[36.86637115 512.43359375]
[37.62325287 527.48425293]
[34.88820648 542.30371094]
[28.80873108 556.09271240]
[19.71268463 568.10766602]
[8.09060287 577.70056152]
[-5.43074846 584.35412598]
[-20.12217903 587.70953369]
[-35.19139862 587.58575439]
[-49.82574463 583.98956299]
[-63.23600388 577.11486816]
[-74.69898224 567.33239746]
[-83.59648895 555.16967773]
[-89.44869232 541.28271484]
[-91.93999481 526.42034912]
[-90.93605042 511.38409424]
[-86.49098206 496.98483276]
[-78.84452057 483.99914551]
[-68.40903473 473.12728882]
[-55.74728012 464.95559692]
[-41.54209900 459.92471313]
[-26.55956078 458.30599976]
[-11.60765266 460.18673706]
[-6.36093426 446.13424683]
[-9.15771961 431.50457764]
[2.91786742 421.28250122]
[8.16458511 407.23004150]
[13.41130352 393.17758179]
[18.65802193 379.12509155]
[15.86123657 364.49542236]
[27.93682289 354.27334595]
[32.86841583 340.10720825]
[37.48242569 325.83450317]
[42.09643555 311.56176758]
[46.71044540 297.28903198]
[51.32445526 283.01629639]
[49.98608017 278.43176270]
[51.51346588 272.95782471]
[56.29415512 268.39093018]
[61.33107376 254.26190186]
[66.36798859 240.13287354]
[70.44765472 225.69831848]
[73.55176544 211.02301025]
[71.86049652 203.82847595]
[76.81288147 196.15307617]
[80.13513947 181.52561951]
[83.45739746 166.89814758]
[86.77966309 152.27069092]
[89.11515045 137.45362854]
[90.45338440 122.51344299]
[91.79161835 107.57325745]
[93.01859283 92.62351990]
[94.13423920 77.66506958]
[95.24988556 62.70661545]
[86.87160492 46.30887604]
[97.31044769 32.20222855]
[98.20326233 17.22882462]
[90.24131012 7.08140755]
[91.29319000 -5.37159634]
[100.25154114 -13.50022125]
[101.36718750 -28.45867538]
[91.33085632 -40.37126160]
[92.67536926 -55.52536774]
[104.09405518 -65.02006531]
[105.20970154 -79.97852325]
[106.32535553 -94.93697357]
[97.94706726 -111.33470917]
[108.38591003 -125.44136047]
[109.27872467 -140.41476440]
[102.37654877 -154.65100098]
[110.85766602 -166.89517212]
[111.75048065 -181.86857605]
[112.64330292 -196.84199524]
[113.53611755 -211.81539917]
[112.97790527 -226.80500793]
[110.97389221 -241.67053223]
[108.96987915 -256.53607178]
[106.96586609 -271.40158081]
[104.96185303 -286.26712036]
[102.95783997 -301.13265991]
[100.95381927 -315.99816895]
[84.74324036 -324.12066650]
[76.72383881 -340.20693970]
[79.93765259 -357.73184204]
[92.91217804 -369.71240234]
[90.46645355 -384.51165771]
[88.02072144 -399.31094360]
[73.01321411 -400.94720459]
[59.00411606 -406.57281494]
[47.03298950 -415.77035522]
[37.98817444 -427.85729980]
[32.54085922 -441.93667603]
[31.09526253 -456.96374512]
[33.75866318 -471.82339478]
[40.33341980 -485.41290283]
[50.33164215 -496.72390747]
[63.01139069 -504.91696167]
[77.43174744 -509.38418579]
[92.52262878 -509.79400635]
[107.16418457 -506.11602783]
[120.26992035 -498.62322998]
[130.86729431 -487.87155151]
[138.16992188 -474.65890503]
[141.63589478 -459.96572876]
[141.00802612 -444.88235474]
[136.33288574 -430.52804565]
[127.95740509 -417.96804810]
[116.50312042 -408.13433838]
[102.81999207 -401.75665283]
[105.26572418 -386.95739746]
[107.71144867 -372.15811157]
[119.25118256 -368.38851929]
[128.14578247 -360.02078247]
[132.66523743 -348.59820557]
[131.89482117 -336.26589966]
[125.91947174 -325.36801147]
[115.81935120 -318.00219727]
[117.82336426 -303.13665771]
[119.82737732 -288.27111816]
[121.83139038 -273.40560913]
[123.83540344 -258.54006958]
[125.83941650 -243.67454529]
[127.84342957 -228.80902100]
[133.91789246 -242.52400208]
[144.99076843 -252.64286804]
[159.19610596 -257.46038818]
[174.14004517 -256.16473389]
[187.30427551 -248.97422791]
[196.47038269 -237.10061646]
[200.09371948 -222.54481506]
[197.56369019 -207.75971985]
[189.30667114 -195.23689270]
[176.71408081 -187.08662415]
[161.90800476 -184.68240356]
[147.38352966 -188.42936707]
[135.58828735 -197.69610596]
[128.50952148 -210.92257690]
[127.61670685 -195.94917297]
[126.72389221 -180.97576904]
[125.83107758 -166.00236511]
[132.79711914 -152.83712769]
[124.25213623 -139.52194214]
[123.35931396 -124.54854584]
[131.15136719 -115.29594421]
[130.53009033 -102.81404877]
[121.28380585 -93.82132721]
[120.16815948 -78.86286926]
[119.05250549 -63.90441895]
[128.93640137 -52.82090759]
[128.01806641 -37.63501358]
[116.32564545 -27.34302711]
[115.20999908 -12.38457298]
[123.67059326 2.99024940]
[113.17666626 18.12164116]
[112.28385162 33.09504700]
[120.07589722 42.34764481]
[119.45462036 54.82954025]
[110.20834351 63.82226562]
[109.09268951 78.78071594]
[107.97704315 93.73917389]
[110.56565094 101.37275696]
[106.73179626 108.91149139]
[105.39356232 123.85167694]
[104.05532837 138.79185486]
[114.38336945 127.91382599]
[128.92729187 124.24308014]
[143.18049622 128.91705322]
[152.72648621 140.48744202]
[154.60733032 155.36906433]
[148.24021912 168.95066833]
[135.59808350 177.02384949]
[120.59821320 177.08703613]
[107.88848877 169.12068176]
[101.40711975 155.59295654]
[98.08486176 170.22041321]
[94.76260376 184.84786987]
[91.44033813 199.47534180]
[88.22706604 214.12712097]
[85.12295532 228.80242920]
[96.67046356 219.22875977]
[111.54753113 217.31228638]
[125.14434052 223.64686584]
[133.24777222 236.26963806]
[133.34687805 251.26931763]
[125.41097260 263.99807739]
[111.89906311 270.51177979]
[96.99796295 268.79208374]
[85.32495117 259.37185669]
[80.49701691 245.16978455]
[75.46009827 259.29882812]
[70.42318726 273.42785645]
[65.59719086 287.63031006]
[60.98317719 301.90304565]
[56.36916733 316.17575073]
[51.75516129 330.44848633]
[47.14115143 344.72122192]
[48.23574829 349.82504272]
[47.35157394 354.38262939]
[45.02805328 357.73168945]
[41.98929596 359.52008057]
[44.41080093 375.15487671]
[32.71049500 384.37182617]
[27.46377563 398.42428589]
[22.21705627 412.47677612]
[16.97033882 426.52923584]
[19.39184380 442.16403198]
[7.69153690 451.38098145]
[2.44481874 465.43344116]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 210]
[26 209]
[28 207]
[29 206]
[30 205]
[31 204]
[33 202]
[34 198]
[35 197]
[36 196]
[37 195]
[38 194]
[41 193]
[42 192]
[43 191]
[44 181]
[45 180]
[47 179]
[48 178]
[49 177]
[50 176]
[51 166]
[52 165]
[53 164]
[54 162]
[55 161]
[56 160]
[58 157]
[59 156]
[62 154]
[63 153]
[66 150]
[67 149]
[68 148]
[70 145]
[71 144]
[73 142]
[74 141]
[75 140]
[76 139]
[77 125]
[78 124]
[79 123]
[80 122]
[81 121]
[82 120]
[83 119]
[87 113]
[88 112]
[89 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
