%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[91.56869507 739.75280762]
[77.12150574 735.68243408]
[63.08405304 730.36840820]
[49.56317139 723.85107422]
[36.66176605 716.18017578]
[24.47803116 707.41400146]
[13.10468578 697.61926270]
[2.62829447 686.87054443]
[-6.87141085 675.24969482]
[-15.32213020 662.84503174]
[-22.65954781 649.75109863]
[-28.82782173 636.06744385]
[-33.78000259 621.89831543]
[-37.47840500 607.35144043]
[-39.89488220 592.53759766]
[-41.01103592 577.56951904]
[-40.81837845 562.56109619]
[-39.31837463 547.62658691]
[-36.52243805 532.87969971]
[-32.45185089 518.43255615]
[-27.13759041 504.39517212]
[-20.62010384 490.87435913]
[-12.94899464 477.97308350]
[-4.18264389 465.78945923]
[5.61222839 454.41625977]
[16.36107635 443.94000244]
[27.98209572 434.44046021]
[40.38683701 425.98992920]
[53.48089600 418.65267944]
[67.16461182 412.48461914]
[81.33384705 407.53262329]
[95.88076019 403.83444214]
[110.69464111 401.41815186]
[109.57899475 386.45971680]
[108.46334076 371.50125122]
[107.34769440 356.54278564]
[98.68521881 344.42623901]
[105.37467194 330.08883667]
[104.25902557 315.13037109]
[103.14337921 300.17193604]
[92.55986786 310.80157471]
[77.56083679 310.97207642]
[66.73841095 300.58578491]
[66.29216766 285.59243774]
[76.47772980 274.58087158]
[91.46035004 273.85906982]
[102.65689087 283.83959961]
[102.88021851 268.84124756]
[103.10354614 253.84292603]
[103.32687378 238.84458923]
[100.28330231 232.10971069]
[103.66683197 223.62504578]
[104.11344147 208.63169861]
[104.56004333 193.63835144]
[105.00665283 178.64500427]
[103.89100647 163.68653870]
[101.22520447 148.92532349]
[91.34918976 137.77572632]
[96.51075745 122.82016754]
[93.84496307 108.05895233]
[89.42723083 101.31683350]
[91.25107574 93.05822754]
[88.80535126 78.25895691]
[86.35961914 63.45969009]
[83.91389465 48.66041946]
[81.46817017 33.86114883]
[79.02243805 19.06187630]
[76.57671356 4.26260614]
[74.02088165 -10.51804733]
[71.35508728 -25.27926445]
[68.68929291 -40.04048157]
[54.51615143 -42.14376068]
[41.70463562 -48.51184464]
[31.50141907 -58.51026917]
[24.89478874 -71.15203094]
[22.51892471 -85.19501495]
[24.59305382 -99.26404572]
[30.90127754 -111.98552704]
[40.81497955 -122.12158966]
[53.35543060 -128.69049072]
[50.90970230 -143.48976135]
[40.89799881 -151.62171936]
[39.16562271 -163.99841309]
[46.10112000 -173.90928650]
[42.28815460 -179.31047058]
[41.84221268 -184.97599792]
[44.03743362 -189.21746826]
[34.71506500 -202.00042725]
[40.88514709 -215.55694580]
[39.10268402 -230.45066833]
[37.32021713 -245.34439087]
[35.53775024 -260.23809814]
[20.69311142 -263.15219116]
[7.47650957 -270.51266479]
[-2.81722927 -281.59841919]
[-9.17962837 -295.32339478]
[-10.98736382 -310.34295654]
[-8.06333447 -325.18563843]
[-0.69400430 -338.39730835]
[10.39865303 -348.68362427]
[24.12789345 -355.03683472]
[39.14866257 -356.83450317]
[53.98938370 -353.90051270]
[67.19611359 -346.52233887]
[77.47498322 -335.42279053]
[83.81898499 -321.68930054]
[85.60659027 -306.66732788]
[82.66267395 -291.82858276]
[75.27564240 -278.62680054]
[64.16921234 -268.35537720]
[50.43146896 -262.02056885]
[52.21393585 -247.12684631]
[53.99639893 -232.23313904]
[55.77886581 -217.33941650]
[64.97373962 -205.62174988]
[58.93114853 -190.99993896]
[60.93516541 -176.13439941]
[72.59091187 -163.01531982]
[65.70897675 -145.93550110]
[68.15470123 -131.13623047]
[83.66503906 -128.43095398]
[97.33464050 -120.56475830]
[107.50159454 -108.47280884]
[112.92256927 -93.60527039]
[112.92487335 -77.75342560]
[107.48984528 -62.83388138]
[97.25735474 -50.65679169]
[83.45050812 -42.70627594]
[86.11630249 -27.94506073]
[88.78209686 -13.18384266]
[93.06429291 -7.16017199]
[91.37598419 1.81687856]
[93.82170868 16.61614990]
[96.26744080 31.41542053]
[98.71316528 46.21469116]
[101.15888977 61.01396179]
[103.60462189 75.81323242]
[106.05034637 90.61250305]
[108.60617828 105.39315796]
[111.27197266 120.15437317]
[121.33866882 132.35978699]
[115.98642731 146.25953674]
[118.65222168 161.02075195]
[123.85398865 146.95158386]
[133.98730469 135.89192200]
[147.54896545 129.48243713]
[162.52716064 128.67390442]
[176.69996643 133.58628845]
[187.96493530 143.49085999]
[194.65098572 156.91831970]
[195.76626587 171.87680054]
[191.14533997 186.14729309]
[181.47369385 197.61286926]
[168.18605042 204.57264709]
[153.25357056 205.99421692]
[138.89137268 201.66668701]
[127.23003387 192.23200989]
[120.00000000 179.09159851]
[119.55339813 194.08496094]
[119.10678864 209.07830811]
[118.66018677 224.07165527]
[118.32521057 239.06791687]
[118.10188293 254.06625366]
[117.87855530 269.06457520]
[117.65522766 284.06292725]
[118.10182953 299.05627441]
[119.21748352 314.01473999]
[120.33312988 328.97317505]
[129.07540894 342.15966797]
[122.30615234 355.42715454]
[123.42179871 370.38562012]
[124.53744507 385.34405518]
[125.65309143 400.30252075]
[140.66151428 400.49453735]
[155.59606934 401.99392700]
[170.34312439 404.78921509]
[184.79043579 408.85922241]
[198.82803345 414.17288208]
[212.34909058 420.68978882]
[225.25071716 428.36035156]
[237.43470764 437.12619019]
[248.80831909 446.92059326]
[259.28500366 457.66900635]
[268.78503418 469.28961182]
[277.23611450 481.69400024]
[284.57388306 494.78775024]
[290.74255371 508.47122192]
[295.69512939 522.64025879]
[299.39395142 537.18701172]
[301.81082153 552.00079346]
[302.92739868 566.96881104]
[302.73516846 581.97723389]
[301.23559570 596.91180420]
[298.44006348 611.65881348]
[294.36987305 626.10607910]
[289.05599976 640.14355469]
[282.53890991 653.66455078]
[274.86816406 666.56604004]
[266.10214233 678.74993896]
[256.30758667 690.12341309]
[245.55903625 700.59991455]
[233.93829346 710.09979248]
[221.53378296 718.55072021]
[208.43994141 725.88830566]
[194.75639343 732.05676270]
[180.58729553 737.00915527]
[166.04048157 740.70776367]
[151.22666931 743.12445068]
[136.25860596 744.24078369]
[121.25019073 744.04833984]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 173]
[34 172]
[35 171]
[36 170]
[38 168]
[39 167]
[40 166]
[47 165]
[48 164]
[49 163]
[50 162]
[52 161]
[53 160]
[54 159]
[55 158]
[56 143]
[57 142]
[59 140]
[60 139]
[62 138]
[63 137]
[64 136]
[65 135]
[66 134]
[67 133]
[68 132]
[69 130]
[70 129]
[71 128]
[80 120]
[81 119]
[84 117]
[87 116]
[89 114]
[90 113]
[91 112]
[92 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
