%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[-38.35759735 528.70727539]
[-33.81750870 543.02978516]
[-31.31498909 557.84472656]
[-30.89874649 572.86383057]
[-32.57688522 587.79467773]
[-36.31673813 602.34661865]
[-42.04550552 616.23645020]
[-49.65167999 629.19378662]
[-58.98720169 640.96636963]
[-69.87035370 651.32513428]
[-82.08929443 660.06829834]
[-95.40617371 667.02581787]
[-109.56178284 672.06219482]
[-124.28056335 675.07940674]
[-139.27603149 676.01867676]
[-154.25627136 674.86181641]
[-168.92970276 671.63122559]
[-183.01071167 666.38989258]
[-196.22518921 659.23980713]
[-208.31591797 650.32019043]
[-219.04754639 639.80456543]
[-228.21119690 627.89770508]
[-235.62846375 614.83129883]
[-241.15499878 600.85980225]
[-244.68321228 586.25506592]
[-246.14443970 571.30145264]
[-245.51020813 556.28997803]
[-242.79289246 541.51287842]
[-238.04536438 527.25781250]
[-231.36006165 513.80224609]
[-222.86708069 501.40805054]
[-212.73178101 490.31652832]
[-201.15141296 480.74359131]
[-188.35140991 472.87554932]
[-174.58093262 466.86553955]
[-160.10801697 462.83059692]
[-145.21438599 460.84924316]
[-130.18994141 460.96005249]
[-115.32714844 463.16082764]
[-100.91530609 467.40878296]
[-87.23495483 473.62121582]
[-79.19378662 460.95867920]
[-78.90255737 446.06692505]
[-64.97299957 438.56506348]
[-56.93182755 425.90252686]
[-48.89065552 413.23999023]
[-40.84947968 400.57748413]
[-32.80830765 387.91494751]
[-24.76713562 375.25244141]
[-16.82045174 362.53039551]
[-8.96869564 349.74954224]
[-2.18870378 336.36926270]
[3.47408271 322.47924805]
[9.13686943 308.58923340]
[14.79965591 294.69918823]
[20.46244240 280.80917358]
[26.12522888 266.91912842]
[23.76526260 252.21269226]
[36.13984680 242.35467529]
[32.81875610 225.12281799]
[47.45832062 213.95300293]
[44.87965775 199.28330994]
[57.10609818 189.24215698]
[62.56145477 175.26936340]
[68.01681519 161.29655457]
[73.47216797 147.32376099]
[78.92752838 133.35096741]
[76.34886169 118.68127441]
[88.57530212 108.64012146]
[86.65695953 94.79051971]
[97.45189667 85.90451813]
[101.53156281 71.46996307]
[104.19735718 56.70874786]
[106.86315155 41.94753265]
[101.70158386 26.99197197]
[111.57760620 15.84237385]
[113.58161926 0.97684604]
[114.91985321 -13.96333885]
[116.25808716 -28.90352440]
[117.59632111 -43.84370804]
[118.93455505 -58.78389359]
[120.27278900 -73.72408295]
[113.79753113 -88.15950775]
[122.63945007 -100.14574432]
[116.16419220 -114.58116913]
[125.00611115 -126.56740570]
[126.34434509 -141.50758362]
[127.68257904 -156.44776917]
[129.02081299 -171.38795471]
[130.02507019 -186.35430908]
[130.69485474 -201.33934021]
[131.36463928 -216.32438660]
[132.03443909 -231.30941772]
[132.70422363 -246.29446411]
[133.26242065 -261.28405762]
[133.70903015 -276.27740479]
[119.34425354 -280.94964600]
[106.87845612 -289.48080444]
[97.32217407 -301.17929077]
[91.45010376 -315.09674072]
[89.73826599 -330.10494995]
[92.32542419 -344.98724365]
[99.00186157 -358.53723145]
[109.22633362 -369.65643311]
[122.16999817 -377.44348145]
[136.78356934 -381.26712036]
[151.88240051 -380.81738281]
[166.24247742 -376.13070679]
[178.69969177 -367.58703613]
[188.24421692 -355.87896729]
[194.10231018 -341.95562744]
[195.79907227 -326.94570923]
[193.19696045 -312.06600952]
[186.50691223 -298.52273560]
[176.27127075 -287.41381836]
[163.31979370 -279.63977051]
[148.70237732 -275.83081055]
[148.25578308 -260.83746338]
[151.19873047 -254.05801392]
[147.68925476 -245.62467957]
[147.01947021 -230.63963318]
[146.34968567 -215.65460205]
[145.67990112 -200.66955566]
[145.01011658 -185.68452454]
[147.10688782 -182.84976196]
[147.93479919 -178.85856628]
[146.96527100 -174.31837463]
[143.96099854 -170.04972839]
[142.62277222 -155.10954285]
[141.28453064 -140.16935730]
[139.94630432 -125.22917175]
[146.51727295 -111.86235809]
[137.57963562 -98.80751038]
[144.15060425 -85.44069672]
[135.21296692 -72.38584137]
[133.87474060 -57.44565964]
[132.53649902 -42.50547409]
[131.19827271 -27.56529045]
[129.86003113 -12.62510490]
[128.52180481 2.31508017]
[140.69683838 -6.44669485]
[155.52294922 -4.16936016]
[164.50708008 7.84252310]
[162.50271606 22.70800400]
[150.65803528 31.91145897]
[135.75820923 30.18073082]
[126.33882141 18.50816917]
[131.69107056 32.40790939]
[121.62437439 44.61332703]
[118.95858002 59.37454605]
[116.29277802 74.13576508]
[126.29146576 62.95424271]
[139.94004822 56.73202133]
[154.93852234 56.51765060]
[168.75936890 62.34725571]
[179.07351685 73.23844910]
[184.14288330 87.35586548]
[183.11317444 102.32048035]
[176.15791321 115.61048889]
[164.44918823 124.98629761]
[149.96012878 128.86790466]
[135.13238525 126.60120392]
[122.46469116 118.56816864]
[114.09178925 106.12250519]
[111.42469788 91.35987854]
[113.34304047 105.20948029]
[102.54810333 114.09548187]
[104.73655701 129.76460266]
[92.90032196 138.80632019]
[87.44496918 152.77911377]
[81.98960876 166.75192261]
[76.53425598 180.72471619]
[71.07889557 194.69750977]
[73.26735687 210.36662292]
[61.43111801 219.40835571]
[65.88568878 231.51287842]
[61.05425262 243.03854370]
[50.02987289 248.01747131]
[51.98479843 263.71743774]
[40.01525497 272.58193970]
[34.35247040 286.47195435]
[28.68968201 300.36196899]
[23.02689552 314.25201416]
[17.36410904 328.14202881]
[11.70132351 342.03207397]
[24.21009064 333.75372314]
[39.12356949 332.14495850]
[53.11005020 337.56515503]
[63.04491425 348.80340576]
[66.70869446 363.34906006]
[63.28288651 377.95263672]
[53.53282547 389.35159302]
[39.63670349 394.99942017]
[24.69894791 393.63433838]
[12.05669022 385.56134033]
[4.53424406 372.58392334]
[3.81214714 357.60131836]
[-4.03960848 370.38214111]
[-5.86524105 379.33227539]
[-12.10461044 383.29360962]
[-20.14578247 395.95611572]
[-28.18695641 408.61865234]
[-36.22813034 421.28118896]
[-44.26930237 433.94369507]
[-52.31047440 446.60623169]
[-53.17686081 462.40368652]
[-66.53125763 468.99984741]
[-74.57243347 481.66238403]
[-63.13225555 491.40243530]
[-53.15902710 502.63989258]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 208]
[42 207]
[44 205]
[45 204]
[46 203]
[47 202]
[48 201]
[49 200]
[50 198]
[51 197]
[52 185]
[53 184]
[54 183]
[55 182]
[56 181]
[57 180]
[59 178]
[61 175]
[63 173]
[64 172]
[65 171]
[66 170]
[67 169]
[69 167]
[71 165]
[72 151]
[73 150]
[74 149]
[76 147]
[77 140]
[78 139]
[79 138]
[80 137]
[81 136]
[82 135]
[84 133]
[86 131]
[87 130]
[88 129]
[89 128]
[90 124]
[91 123]
[92 122]
[93 121]
[94 120]
[95 118]
[96 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
