%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGAUAAUACUCAGGAUCAACUGAACUUCACCUCUUCCGAUGCUAAAAAAACUACAGUAAAACACAUUCCCGCGUCUGACGACGCUUGUCUCACCACUAUxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[120.42274475 607.43359375]
[111.40554810 595.38842773]
[104.83112335 581.85424805]
[100.93711853 567.32037354]
[99.86429596 552.31219482]
[101.65145874 537.37225342]
[106.23397827 523.04058838]
[113.44621277 509.83526611]
[123.02744293 498.23367310]
[134.63130188 488.65524292]
[147.83834839 481.44616699]
[162.17111206 476.86706543]
[160.38865662 461.97335815]
[158.60618591 447.07962036]
[156.71289062 432.19958496]
[147.34457397 420.62011719]
[153.16880798 405.90997314]
[151.16479492 391.04443359]
[149.16076660 376.17889404]
[145.83851624 361.55145264]
[141.22450256 347.27871704]
[136.61048889 333.00598145]
[132.84173584 330.07247925]
[130.87577820 324.74029541]
[132.07844543 318.23913574]
[127.89144135 303.83535767]
[123.70442963 289.43157959]
[119.51741791 275.02780151]
[111.36270905 287.61749268]
[96.72364044 290.88824463]
[83.98613739 282.96636963]
[80.44681549 268.38989258]
[88.13315582 255.50891113]
[102.64208221 251.70219421]
[115.66163635 259.14968872]
[112.77635956 244.42977905]
[109.89109039 229.70988464]
[107.00581360 214.99000549]
[104.12054443 200.27011108]
[94.07962036 189.26878357]
[99.01795197 174.23803711]
[91.49913025 187.21752930]
[77.83428192 193.40396118]
[63.12005615 190.48994446]
[52.84449387 179.56231689]
[50.84012604 164.69683838]
[57.85453415 151.43795776]
[71.27151489 144.73089600]
[86.08686829 147.07723999]
[96.77537537 157.60289001]
[95.65972900 142.64442444]
[94.54407501 127.68597412]
[93.42842865 112.72752380]
[85.71572876 101.06536865]
[91.61312103 88.38812256]
[87.85410309 80.06300354]
[90.59390259 73.19895172]
[89.70108795 58.22554398]
[88.80827332 43.25213623]
[79.69690704 34.12274551]
[79.26153564 21.63298225]
[87.19047546 12.49742317]
[86.52069092 -2.48761606]
[83.01121521 -10.92096519]
[85.95417023 -17.70040512]
[85.50756073 -32.69375610]
[85.06095886 -47.68710327]
[84.61434937 -62.68045425]
[84.16774750 -77.67380524]
[74.12899017 -93.11093140]
[83.04360199 -108.22703552]
[82.37381744 -123.21207428]
[81.70403290 -138.19711304]
[81.03424835 -153.18214417]
[80.36446381 -168.16719055]
[77.13409424 -173.93574524]
[77.27999115 -179.61692810]
[79.90455627 -183.60699463]
[71.96265411 -197.29043579]
[79.50960541 -210.13150024]
[79.28627777 -225.12983704]
[79.06295013 -240.12817383]
[68.00384521 -251.09785461]
[67.99102020 -266.31149292]
[78.51708984 -276.78704834]
[78.29376221 -291.78540039]
[78.07043457 -306.78372192]
[77.84710693 -321.78207397]
[77.62377930 -336.78039551]
[77.40045166 -351.77874756]
[65.31211090 -369.47293091]
[76.12205505 -387.05447388]
[75.22924042 -402.02786255]
[74.33642578 -417.00128174]
[73.44361115 -431.97467041]
[72.55079651 -446.94808960]
[58.17420959 -451.88592529]
[46.78492355 -461.95333862]
[40.11971283 -475.61508179]
[39.19497681 -490.78787231]
[44.15173340 -505.15792847]
[54.23410797 -516.53399658]
[67.90460968 -523.18121338]
[83.07859802 -524.08599854]
[97.44213867 -519.11035156]
[108.80490112 -509.01300049]
[115.43414307 -495.33377075]
[116.31896210 -480.15859985]
[111.32441711 -465.80160522]
[101.21214294 -454.45214844]
[87.52420044 -447.84091187]
[88.41701508 -432.86749268]
[89.30982971 -417.89410400]
[90.20264435 -402.92068481]
[91.09545898 -387.94729614]
[98.60750580 -383.21417236]
[103.16867065 -375.43661499]
[103.64675903 -366.29519653]
[99.80821991 -357.83364868]
[92.39878845 -352.00207520]
[92.62211609 -337.00372314]
[92.84544373 -322.00540161]
[93.06877136 -307.00704956]
[93.29209900 -292.00872803]
[93.51542664 -277.01037598]
[104.34873199 -266.85287476]
[104.78887177 -251.64559937]
[94.06128693 -240.35150146]
[94.28461456 -225.35316467]
[94.50794220 -210.35482788]
[102.43387604 -197.74415588]
[94.90289307 -183.83032227]
[95.34950256 -168.83697510]
[96.01928711 -153.85192871]
[96.68907166 -138.86689758]
[97.35885620 -123.88185883]
[98.02864075 -108.89682007]
[106.74099731 -100.50507355]
[107.42164612 -88.02627563]
[99.16109467 -78.12040710]
[99.60770416 -63.12705994]
[100.05430603 -48.13370895]
[100.50091553 -33.14036179]
[100.94751740 -18.14701080]
[101.50572968 -3.15740108]
[102.17551422 11.82763767]
[112.40317535 26.08813858]
[103.78167725 42.35932159]
[104.67449951 57.33272552]
[105.56731415 72.30612946]
[106.57157135 87.27247620]
[114.28427124 98.93463135]
[108.38687897 111.61187744]
[109.50253296 126.57032776]
[110.61817932 141.52877808]
[111.73382568 156.48722839]
[113.73783875 171.35276794]
[123.98513794 183.40695190]
[118.84043121 197.38484192]
[121.72570801 212.10472107]
[124.61097717 226.82461548]
[127.49625397 241.54450989]
[130.38153076 256.26440430]
[133.92120361 270.84078979]
[138.10821533 285.24456787]
[142.29522705 299.64834595]
[146.48223877 314.05212402]
[150.88322449 328.39196777]
[155.49723816 342.66470337]
[160.11125183 356.93743896]
[163.96849060 342.44186401]
[173.66725159 330.99923706]
[187.33486938 324.81893921]
[202.33235168 325.09426880]
[215.76388550 331.77212524]
[225.03608704 343.56307983]
[228.35862732 358.19046021]
[225.08996582 372.82998657]
[215.86123657 384.65499878]
[202.45436096 391.38223267]
[187.45800781 391.71279907]
[173.76773071 385.58288574]
[164.02630615 374.17489624]
[166.03031921 389.04043579]
[168.03433228 403.90594482]
[177.54597473 416.54870605]
[171.57841492 430.19558716]
[175.82629395 438.28219604]
[173.49990845 445.29714966]
[175.28236389 460.19088745]
[177.06483459 475.08459473]
[192.07339478 476.15216064]
[206.60862732 480.04104614]
[220.14508057 486.61074829]
[232.19343567 495.62371826]
[242.31816101 506.75415039]
[250.15322876 519.59967041]
[255.41540527 533.69598389]
[257.91448975 548.53350830]
[257.56015015 563.57580566]
[254.36514282 578.27917480]
[248.44502258 592.11199951]
[240.01376343 604.57440186]
[229.37615967 615.21569824]
[216.91676331 623.65136719]
[203.08595276 629.57635498]
[188.38372803 632.77648926]
[173.34155273 633.13610840]
[158.50318909 630.64221191]
[144.40502930 625.38500977]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 191]
[13 190]
[14 189]
[15 187]
[17 185]
[18 184]
[19 183]
[20 170]
[21 169]
[22 168]
[25 167]
[26 166]
[27 165]
[28 164]
[35 163]
[36 162]
[37 161]
[38 160]
[39 159]
[41 157]
[50 156]
[51 155]
[52 154]
[53 153]
[55 151]
[57 150]
[58 149]
[59 148]
[62 146]
[63 145]
[65 144]
[66 143]
[67 142]
[68 141]
[69 140]
[71 137]
[72 136]
[73 135]
[74 134]
[75 133]
[78 132]
[80 130]
[81 129]
[82 128]
[85 125]
[86 124]
[87 123]
[88 122]
[89 121]
[90 120]
[92 115]
[93 114]
[94 113]
[95 112]
[96 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
