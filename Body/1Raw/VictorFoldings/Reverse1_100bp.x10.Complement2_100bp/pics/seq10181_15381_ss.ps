%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCAUUUUCCUCCCGUUAAAGAUCUAGUUUAUUAUUCUUCCAUUAUCGAUGAUUCUUCUUAAAAUACCUCUUUCCCUGCGCCCGCCCCCUAUAUCCCAGxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[276.80038452 525.77514648]
[285.54797363 513.55798340]
[295.94528198 502.71005249]
[307.78060913 493.45233154]
[300.31286621 480.44338989]
[292.84512329 467.43441772]
[285.37738037 454.42547607]
[277.90963745 441.41653442]
[263.50985718 437.78585815]
[255.75119019 424.69931030]
[259.65701294 409.62008667]
[252.18928528 396.61114502]
[244.72154236 383.60220337]
[237.25379944 370.59323120]
[229.78605652 357.58428955]
[222.31831360 344.57534790]
[214.85057068 331.56637573]
[211.56088257 330.29742432]
[208.72239685 327.37200928]
[207.10694885 323.01956177]
[207.35473633 317.80557251]
[200.47532654 304.47616577]
[193.59590149 291.14672852]
[178.33905029 282.47521973]
[179.35992432 264.08935547]
[172.28282166 250.86384583]
[165.20571899 237.63832092]
[150.31452942 237.29440308]
[137.50968933 229.49107361]
[130.28221130 216.23852539]
[130.66105652 201.04797363]
[138.64457703 188.00149536]
[131.56747437 174.77597046]
[124.49037170 161.55043030]
[117.41326904 148.32490540]
[110.33615875 135.09938049]
[103.25905609 121.87385559]
[96.18195343 108.64832306]
[91.63625336 106.03096008]
[88.88059998 101.05303955]
[89.09768677 94.92198944]
[82.41749573 81.49160767]
[75.73730469 68.06123352]
[69.05710602 54.63085938]
[67.00121307 69.48930359]
[58.35098648 81.74383545]
[45.03890991 88.65676117]
[30.03893280 88.68372345]
[16.70209122 81.81868744]
[8.00786877 69.59532928]
[5.89857721 54.74437714]
[10.84543705 40.58356476]
[21.74330711 30.27645874]
[36.15757751 26.12569427]
[50.86805725 29.05855942]
[62.58840942 38.41986465]
[58.18741226 24.08001709]
[53.78641510 9.74016953]
[49.38541412 -4.59967804]
[44.98441696 -18.93952560]
[40.37040710 -33.21225739]
[35.54441071 -47.41471481]
[30.71841240 -61.61716843]
[25.89241409 -75.81962585]
[21.06641769 -90.02207947]
[16.24041939 -104.22453308]
[11.41442204 -118.42699432]
[0.21079327 -124.81772614]
[-3.51640463 -136.74633789]
[1.71033072 -147.65541077]
[-2.90367842 -161.92814636]
[-7.51768780 -176.20088196]
[-12.13169670 -190.47360229]
[-23.73880005 -201.22468567]
[-20.29155540 -215.71488953]
[-24.90556526 -229.98762512]
[-29.51957321 -244.26034546]
[-34.13358307 -258.53308105]
[-49.04124832 -256.53277588]
[-64.06650543 -257.22668457]
[-78.72634888 -260.59249878]
[-92.54952240 -266.52206421]
[-105.09167480 -274.82470703]
[-115.94963074 -285.23358154]
[-124.77434540 -297.41406250]
[-131.28213501 -310.97460938]
[-135.26382446 -325.47930908]
[-136.59138489 -340.46188354]
[-135.22216797 -355.44070435]
[-131.20018005 -369.93426514]
[-124.65470886 -383.47665405]
[-115.79616547 -395.63256836]
[-104.90930939 -406.01119995]
[-92.34412384 -414.27896118]
[-78.50451660 -420.17004395]
[-63.83536911 -423.49511719]
[-48.80824280 -424.14724731]
[-33.90619659 -422.10549927]
[-19.60826683 -417.43548584]
[-6.37407351 -410.28735352]
[5.37095881 -400.89083862]
[15.24927616 -389.54806519]
[22.94333076 -376.62362671]
[28.20579147 -362.53298950]
[30.86749077 -347.72909546]
[30.84286690 -332.68783569]
[28.13271141 -317.89276123]
[22.82414436 -303.81939697]
[15.08781433 -290.92022705]
[5.17241192 -279.60986328]
[-6.60332298 -270.25186157]
[-19.86084938 -263.14709473]
[-15.24684048 -248.87435913]
[-10.63283157 -234.60162354]
[-6.01882172 -220.32888794]
[5.25825644 -210.59869385]
[2.14103627 -195.08761597]
[6.75504541 -180.81488037]
[11.36905479 -166.54214478]
[15.98306370 -152.26942444]
[29.62188530 -141.22634888]
[25.61687851 -123.25299072]
[30.44287491 -109.05053711]
[35.26887131 -94.84807587]
[40.09487152 -80.64562225]
[44.92086792 -66.44316864]
[49.74686432 -52.24071121]
[54.57286453 -38.03825760]
[58.38488007 -35.16117859]
[60.43000793 -29.85887146]
[59.32426453 -23.34052277]
[63.72526169 -9.00067616]
[68.12625885 5.33917093]
[72.52725983 19.67901802]
[76.92825317 34.01886368]
[82.48748016 47.95066452]
[89.16767883 61.38103867]
[95.84786987 74.81141663]
[102.52806854 88.24179077]
[109.40747833 101.57122040]
[116.48458099 114.79674530]
[123.56169128 128.02227783]
[130.63879395 141.24780273]
[137.71589661 154.47332764]
[144.79299927 167.69885254]
[151.87011719 180.92439270]
[167.15382385 181.52033997]
[180.00234985 189.63281250]
[187.01850891 202.99844360]
[186.40669250 217.98114014]
[178.43124390 230.56120300]
[185.50834656 243.78674316]
[192.58546448 257.01226807]
[204.68115234 261.49075317]
[210.30342102 272.65200806]
[206.92533875 284.26730347]
[213.80474854 297.59674072]
[220.68415833 310.92617798]
[227.85952759 324.09863281]
[235.32727051 337.10760498]
[242.79501343 350.11654663]
[250.26275635 363.12548828]
[257.73049927 376.13446045]
[265.19824219 389.14340210]
[272.66598511 402.15234375]
[287.65704346 406.38385010]
[295.04507446 419.68316650]
[290.91860962 433.94879150]
[298.38635254 446.95773315]
[305.85409546 459.96670532]
[313.32180786 472.97564697]
[320.78955078 485.98458862]
[334.75238037 480.43298340]
[349.36318970 476.92507935]
[364.32449341 475.53228760]
[379.33172607 476.28295898]
[394.07937622 479.16186523]
[408.26715088 484.11032104]
[421.60626221 491.02761841]
[433.82510376 499.77294922]
[444.67492676 510.16824341]
[453.93484497 522.00189209]
[461.41635132 535.03289795]
[466.96710205 548.99609375]
[470.47409058 563.60705566]
[471.86596680 578.56848145]
[471.11434937 593.57568359]
[468.23455811 608.32312012]
[463.28521729 622.51062012]
[456.36706543 635.84930420]
[447.62100220 648.06756592]
[437.22503662 658.91674805]
[425.39083862 668.17596436]
[412.35934448 675.65661621]
[398.39581299 681.20654297]
[383.78460693 684.71264648]
[368.82312012 686.10357666]
[353.81597900 685.35101318]
[339.06869507 682.47033691]
[324.88150024 677.52008057]
[311.54327393 670.60113525]
[299.32550049 661.85430908]
[288.47695923 651.45764160]
[279.21850586 639.62292480]
[271.73861694 626.59094238]
[266.18960571 612.62707520]
[262.68441772 598.01562500]
[261.29440308 583.05407715]
[262.04788208 568.04693604]
[264.92947388 553.29986572]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 172]
[5 171]
[6 170]
[7 169]
[8 168]
[11 165]
[12 164]
[13 163]
[14 162]
[15 161]
[16 160]
[17 159]
[21 158]
[22 157]
[23 156]
[25 153]
[26 152]
[27 151]
[32 146]
[33 145]
[34 144]
[35 143]
[36 142]
[37 141]
[38 140]
[41 139]
[42 138]
[43 137]
[44 136]
[56 135]
[57 134]
[58 133]
[59 132]
[60 131]
[61 128]
[62 127]
[63 126]
[64 125]
[65 124]
[66 123]
[67 122]
[70 120]
[71 119]
[72 118]
[73 117]
[75 115]
[76 114]
[77 113]
[78 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
