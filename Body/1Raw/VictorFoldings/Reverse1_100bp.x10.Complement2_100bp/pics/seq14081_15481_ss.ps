%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAUAACAUUAACUCUAACGAGCCCCCUUAUCCAAUACACUAAUCCUCAUCCCAAUCCUACUCACCCUUCUUCUUUCUCUCCUUCAUUUCAAAUUAAUACxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[105.49009705 541.29321289]
[103.30654907 556.18670654]
[98.16932678 570.33569336]
[90.28880310 583.16076660]
[79.98767853 594.13671875]
[67.68777466 602.81414795]
[53.89275742 608.83764648]
[39.16753769 611.96057129]
[24.11509895 612.05505371]
[9.35182667 609.11730957]
[-4.51773024 603.26745605]
[-16.92562294 594.74517822]
[-27.36375618 583.89947510]
[-35.40469360 571.17437744]
[-40.71916199 557.09100342]
[-43.08954620 542.22607422]
[-42.41876984 527.18829346]
[-38.73430634 512.59344482]
[-32.18703079 499.03915405]
[-23.04504776 487.08050537]
[-11.68272114 477.20718384]
[1.43467307 469.82351685]
[15.76998425 465.23181152]
[30.73619080 463.62011719]
[45.72043610 465.05444336]
[50.12143326 450.71459961]
[54.41555786 436.34237671]
[58.60256958 421.93859863]
[62.78958130 407.53482056]
[66.97659302 393.13104248]
[71.16360474 378.72723389]
[75.35061646 364.32345581]
[79.53762817 349.91967773]
[81.98335266 335.12042236]
[74.82207489 322.06033325]
[83.16786194 308.61941528]
[83.83765411 293.63439941]
[84.50743866 278.64935303]
[85.17722321 263.66430664]
[85.84700775 248.67927551]
[86.51679230 233.69422913]
[76.30728149 222.90991211]
[76.77307129 207.70341492]
[88.15387726 197.06785583]
[88.82366180 182.08282471]
[89.49344635 167.09777832]
[90.16323090 152.11274719]
[90.83301544 137.12770081]
[91.50279999 122.14266968]
[92.17258453 107.15763092]
[92.17258453 92.15763092]
[91.50279999 77.17259216]
[90.83301544 62.18754959]
[90.16323090 47.20251083]
[89.49344635 32.21747208]
[88.37779999 17.25901794]
[86.81727600 2.34041381]
[85.25675201 -12.57819080]
[83.69622803 -27.49679565]
[81.47111511 -42.33084106]
[78.58583832 -57.05073166]
[65.75325775 -65.88037109]
[63.03687286 -80.84954071]
[71.53366852 -93.02902985]
[68.64839935 -107.74892426]
[65.76312256 -122.46881104]
[62.87784958 -137.18870544]
[49.57453537 -139.10726929]
[37.53015900 -145.02166748]
[27.91063499 -154.34375000]
[21.64232635 -166.15625000]
[19.32284164 -179.30303955]
[21.16407585 -192.50228882]
[26.97294617 -204.47145081]
[36.17152786 -214.05184937]
[47.85452652 -220.32090759]
[45.40880203 -235.12017822]
[40.92204666 -243.07673645]
[43.03853989 -250.15785217]
[40.81342316 -264.99191284]
[38.58830643 -279.82592773]
[36.36318970 -294.65997314]
[21.33022499 -294.90466309]
[6.54258966 -297.62048340]
[-7.59630013 -302.73336792]
[-20.70072556 -310.10385132]
[-32.41318893 -319.53082275]
[-42.41416168 -330.75714111]
[-50.43081284 -343.47656250]
[-56.24444580 -357.34204102]
[-59.69645309 -371.97534180]
[-60.69266510 -386.97723389]
[-59.20590591 -401.93850708]
[-55.27673721 -416.45095825]
[-49.01234055 -430.11871338]
[-40.58362198 -442.56887817]
[-30.22052193 -453.46182251]
[-18.20574951 -462.50033569]
[-4.86707878 -469.43789673]
[9.43160152 -474.08523560]
[24.30021286 -476.31552124]
[39.33312988 -476.06796265]
[54.12024307 -473.34930420]
[68.25814819 -468.23367310]
[81.36115265 -460.86068726]
[93.07180023 -451.43142700]
[103.07061005 -440.20318604]
[111.08480835 -427.48223877]
[116.89576721 -413.61563110]
[120.34495544 -398.98168945]
[121.33827972 -383.97958374]
[119.84864044 -369.01858521]
[115.91667175 -354.50689697]
[109.64964294 -340.84036255]
[101.21852875 -328.39181519]
[90.85332489 -317.50088501]
[78.83681488 -308.46466064]
[65.49681091 -301.52966309]
[51.19723129 -296.88510132]
[53.42235184 -282.05105591]
[55.64746857 -267.21701050]
[57.87258530 -252.38296509]
[60.20807266 -237.56590271]
[62.65379715 -222.76663208]
[78.95500183 -219.37152100]
[92.73216248 -209.95497131]
[101.85582733 -195.93823242]
[104.90267181 -179.45616150]
[101.37751770 -163.03213501]
[91.79352570 -149.19161987]
[77.59774017 -140.07397461]
[80.48301697 -125.35408783]
[83.36828613 -110.63419342]
[86.25356293 -95.91429901]
[98.71959686 -87.84377289]
[101.85536957 -72.95681000]
[93.30573273 -59.93600464]
[96.19100189 -45.21611023]
[105.43639374 -57.02809143]
[120.30888367 -58.97974777]
[132.28884888 -49.95309067]
[134.51361084 -35.11899185]
[125.70872498 -22.97510338]
[110.91803741 -20.47799110]
[98.61483765 -29.05731773]
[100.17535400 -14.13871384]
[101.73587799 0.77989084]
[103.29640198 15.69849586]
[105.38660431 17.56643295]
[106.86283875 20.37487793]
[107.36315918 23.89412308]
[106.61540985 27.76780128]
[104.47848511 31.54768753]
[105.14826965 46.53272629]
[105.81805420 61.51776505]
[106.48783875 76.50279999]
[107.15762329 91.48783875]
[118.05292511 81.17801666]
[133.05038452 81.45415497]
[143.55877686 92.15806580]
[143.55841064 107.15806580]
[133.04951477 117.86147308]
[118.05204010 118.13689423]
[107.15762329 107.82741547]
[106.48783875 122.81245422]
[105.81805420 137.79748535]
[105.14826965 152.78253174]
[104.47848511 167.76756287]
[103.80870056 182.75260925]
[103.13891602 197.73764038]
[113.52548218 209.34613037]
[112.63275909 224.53355408]
[101.50183105 234.36401367]
[100.83204651 249.34906006]
[100.16226196 264.33410645]
[99.49247742 279.31912231]
[98.82269287 294.30416870]
[98.15290070 309.28921509]
[105.26627350 323.42111206]
[96.96839142 335.79019165]
[104.80531311 323.00024414]
[116.50082397 313.60797119]
[130.68093872 308.71673584]
[145.67980957 308.90115356]
[159.73536682 314.13958740]
[171.19638062 323.81665039]
[178.71644592 336.79541016]
[181.41207886 351.55120850]
[178.96661377 366.35052490]
[171.66734314 379.45474243]
[160.37178040 389.32440186]
[146.40690613 394.80004883]
[131.41331482 395.23834229]
[117.15242767 390.58786011]
[105.29959869 381.39489746]
[97.24729156 368.73944092]
[93.94140625 354.10668945]
[89.75439453 368.51046753]
[85.56738281 382.91424561]
[81.38037109 397.31805420]
[77.19335938 411.72183228]
[73.00634766 426.12561035]
[68.81934357 440.52938843]
[69.42893219 449.64346313]
[64.46128082 455.11557007]
[60.06028366 469.45544434]
[73.26935577 476.67382812]
[84.75476074 486.40371704]
[94.04617310 498.24661255]
[100.76312256 511.71759033]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 206]
[26 205]
[27 203]
[28 202]
[29 201]
[30 200]
[31 199]
[32 198]
[33 197]
[34 180]
[36 178]
[37 177]
[38 176]
[39 175]
[40 174]
[41 173]
[44 170]
[45 169]
[46 168]
[47 167]
[48 166]
[49 165]
[50 164]
[51 157]
[52 156]
[53 155]
[54 154]
[55 153]
[56 148]
[57 147]
[58 146]
[59 145]
[60 138]
[61 137]
[64 134]
[65 133]
[66 132]
[67 131]
[76 124]
[77 123]
[79 122]
[80 121]
[81 120]
[82 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
