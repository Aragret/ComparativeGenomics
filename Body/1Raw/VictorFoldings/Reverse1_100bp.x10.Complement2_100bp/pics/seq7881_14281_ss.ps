%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[73.06099701 575.09997559]
[68.40315247 560.71960449]
[68.19261169 545.60510254]
[72.44808960 531.10058594]
[80.79119110 518.49566650]
[92.48005676 508.91119385]
[106.47531128 503.19943237]
[105.13707733 488.25924683]
[103.79884338 473.31906128]
[102.46060944 458.37887573]
[93.61869049 446.39263916]
[100.09394836 431.95721436]
[98.75571442 417.01702881]
[97.41748047 402.07684326]
[87.86696625 413.64349365]
[73.13928223 416.48870850]
[59.96771622 409.31167603]
[54.37413788 395.39361572]
[58.91585159 381.09771729]
[71.51644897 372.95986938]
[86.41510773 374.70056152]
[96.80111694 385.52566528]
[97.02444458 370.52731323]
[97.24777222 355.52899170]
[97.47109985 340.53063965]
[89.92414856 327.68960571]
[97.86605072 314.00613403]
[98.08937836 299.00781250]
[97.97771454 284.00823975]
[97.53110504 269.01486206]
[97.08450317 254.02153015]
[96.63789368 239.02818298]
[96.19129181 224.03482056]
[95.74468231 209.04147339]
[84.76135254 199.04638672]
[84.09484100 183.84735107]
[94.65309143 172.39479065]
[94.20648956 157.40144348]
[93.75988007 142.40809631]
[93.31327820 127.41474152]
[92.86666870 112.42139435]
[85.68240356 100.42647552]
[92.13998413 88.02521515]
[84.38985443 100.86793518]
[71.88256073 109.14849091]
[57.03306580 111.26803589]
[42.70857239 106.81732178]
[31.67491531 96.65570831]
[26.06252289 82.74523926]
[26.95505905 67.77182007]
[34.18018723 54.62657166]
[46.34285355 45.84764481]
[61.09463120 43.13010406]
[75.58718872 46.99867249]
[87.02223969 56.70638657]
[93.19210052 70.38008118]
[87.58753967 55.58483505]
[97.12721252 44.14613342]
[99.35233307 29.31208992]
[93.74777222 14.51683903]
[103.28744507 3.07813883]
[105.51255798 -11.75590515]
[103.69078827 -20.70682335]
[107.88282013 -26.79358292]
[110.32854462 -41.59285355]
[112.77427673 -56.39212418]
[103.84075165 -69.15261078]
[106.53189087 -84.12633514]
[118.75211334 -92.56444550]
[121.19783783 -107.36371613]
[123.64356995 -122.16298676]
[125.31510925 -137.06956482]
[126.20792389 -152.04296875]
[127.10073853 -167.01637268]
[127.99355316 -181.98977661]
[128.88636780 -196.96318054]
[129.77919006 -211.93658447]
[114.95996857 -214.34111023]
[100.46004486 -218.23255920]
[86.42822266 -223.57098389]
[73.00847626 -230.30162048]
[60.33852386 -238.35540771]
[48.54837799 -247.64967346]
[37.75902176 -258.08905029]
[28.08117294 -269.56643677]
[19.61414528 -281.96405029]
[12.44482040 -295.15463257]
[6.64677048 -309.00286865]
[2.27949095 -323.36663818]
[-0.61220205 -338.09854126]
[-1.99863493 -353.04742432]
[-1.86558080 -368.05984497]
[-0.21440496 -382.98181152]
[2.93794894 -397.66015625]
[7.55913258 -411.94424438]
[13.60172462 -425.68756104]
[21.00371933 -438.74899292]
[29.68915749 -450.99456787]
[39.56891632 -462.29861450]
[50.54160690 -472.54513550]
[62.49464035 -481.62896729]
[75.30535126 -489.45690918]
[88.84228516 -495.94863892]
[102.96652985 -501.03750610]
[117.53314209 -504.67135620]
[132.39265442 -506.81283569]
[147.39257812 -507.44000244]
[162.37898254 -506.54641724]
[177.19810486 -504.14123535]
[191.69784546 -500.24914551]
[205.72944641 -494.91009521]
[219.14889526 -488.17886353]
[231.81848145 -480.12454224]
[243.60823059 -470.82974243]
[254.39712524 -460.38989258]
[264.07446289 -448.91207886]
[272.54095459 -436.51409912]
[279.70968628 -423.32318115]
[285.50714111 -409.47470093]
[289.87377930 -395.11074829]
[292.76483154 -380.37872314]
[294.15060425 -365.42977905]
[294.01687622 -350.41732788]
[292.36505127 -335.49545288]
[289.21206665 -320.81726074]
[284.59024048 -306.53335571]
[278.54705811 -292.79034424]
[271.14447021 -279.72921753]
[262.45849609 -267.48400879]
[252.57824707 -256.18038940]
[241.60510254 -245.93437195]
[229.65167236 -236.85105896]
[216.84060669 -229.02368164]
[203.30339050 -222.53256226]
[189.17892456 -217.44429016]
[174.61215210 -213.81111145]
[159.75254822 -211.67027283]
[144.75259399 -211.04377747]
[143.85977173 -196.07035828]
[142.96696472 -181.09695435]
[142.07414246 -166.12355042]
[141.18133545 -151.15014648]
[140.28851318 -136.17674255]
[151.44917297 -146.19869995]
[166.43597412 -146.82771301]
[178.39717102 -137.77619934]
[181.86424255 -123.18238068]
[175.25210571 -109.71836853]
[161.58374023 -103.53971863]
[147.10812378 -107.47122955]
[138.44284058 -119.71725464]
[135.99711609 -104.91798401]
[133.55137634 -90.11871338]
[142.40704346 -78.19760132]
[140.13754272 -63.15419769]
[127.57354736 -53.94639587]
[125.12781525 -39.14712524]
[122.68209076 -24.34785652]
[120.34660339 -9.53078747]
[118.12149048 5.30325603]
[123.88520813 19.03747749]
[114.18637848 31.53720665]
[111.96125793 46.37125015]
[117.72497559 60.10547256]
[108.02614594 72.60520172]
[107.13333130 87.57860565]
[114.31759644 99.57352448]
[107.86001587 111.97478485]
[108.30662537 126.96813965]
[108.75322723 141.96148682]
[109.19983673 156.95483398]
[109.64643860 171.94818115]
[120.86763763 182.75199890]
[121.10697937 197.96376038]
[110.73803711 208.59486389]
[111.18463898 223.58822632]
[111.63124847 238.58157349]
[112.07785034 253.57492065]
[112.52445984 268.56826782]
[112.97106171 283.56161499]
[115.71593475 288.00152588]
[116.41351318 292.59136963]
[115.34951019 296.52621460]
[113.08771515 299.23114014]
[112.86438751 314.22946167]
[120.39537048 328.14331055]
[112.46943665 340.75396729]
[112.24610901 355.75231934]
[112.02278137 370.75064087]
[111.79945374 385.74899292]
[112.35766602 400.73861694]
[113.69589996 415.67880249]
[115.03413391 430.61895752]
[123.97177124 443.67382812]
[117.40079498 457.04064941]
[118.73902893 471.98080444]
[120.07726288 486.92098999]
[121.41549683 501.86117554]
[136.20306396 504.99478149]
[149.40919495 512.34936523]
[159.85963440 523.27087402]
[166.62510681 536.78826904]
[169.10406494 551.69952393]
[167.07604980 566.67883301]
[160.72140503 580.39410400]
[150.60519409 591.62591553]
[137.62692261 599.37548828]
[122.94061279 602.95373535]
[107.85217285 602.04254150]
[93.70324707 596.72277832]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 198]
[8 197]
[9 196]
[10 195]
[12 193]
[13 192]
[14 191]
[22 190]
[23 189]
[24 188]
[25 187]
[27 185]
[28 184]
[29 180]
[30 179]
[31 178]
[32 177]
[33 176]
[34 175]
[37 172]
[38 171]
[39 170]
[40 169]
[41 168]
[43 166]
[56 165]
[58 163]
[59 162]
[61 160]
[62 159]
[64 158]
[65 157]
[66 156]
[69 153]
[70 152]
[71 151]
[72 143]
[73 142]
[74 141]
[75 140]
[76 139]
[77 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
