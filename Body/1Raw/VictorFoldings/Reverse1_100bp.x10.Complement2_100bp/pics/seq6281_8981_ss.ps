%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxUGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[106.35511780 479.03884888]
[106.29732513 463.96923828]
[109.71696472 449.29263306]
[116.42962646 435.80050659]
[126.07330322 424.22052002]
[138.12792969 415.17715454]
[151.94340515 409.15808105]
[149.27761841 394.39685059]
[146.61181641 379.63565063]
[142.32962036 373.61196899]
[144.01792908 364.63491821]
[141.57220459 349.83566284]
[131.86328125 338.54025269]
[137.24694824 323.66320801]
[134.80122375 308.86392212]
[132.35549927 294.06466675]
[129.90975952 279.26538086]
[127.13415527 264.52441406]
[124.03004456 249.84912109]
[111.44522858 241.96508789]
[108.08816528 227.12646484]
[116.44299316 213.97979736]
[113.33888245 199.30450439]
[110.23477173 184.62919617]
[107.13066101 169.95388794]
[104.02655029 155.27859497]
[100.92243958 140.60328674]
[97.81832886 125.92798615]
[85.34506989 121.50007629]
[76.66398621 111.50872040]
[74.02142334 98.53931427]
[78.10118103 85.94789124]
[87.84756470 76.99263763]
[84.96229553 62.27275085]
[82.07701874 47.55285645]
[71.82971954 35.49866867]
[76.97442627 21.52078438]
[74.08915710 6.80089378]
[71.20388031 -7.91899776]
[68.31861115 -22.63888931]
[63.38701630 -36.80502319]
[56.50760269 -50.13445282]
[49.62818909 -63.46388245]
[42.74877930 -76.79331207]
[35.86936569 -90.12274170]
[28.98995399 -103.45217133]
[22.11054039 -116.78160095]
[7.32337189 -121.67826843]
[0.53655183 -135.29420471]
[5.29590797 -149.36134338]
[-1.58350444 -162.69076538]
[-8.46291733 -176.02018738]
[-15.34232903 -189.34962463]
[-22.22174263 -202.67904663]
[-29.19993210 -189.40106201]
[-43.90240097 -186.42828369]
[-55.49103165 -195.95213318]
[-55.42312241 -210.95198059]
[-43.74872971 -220.37049866]
[-29.07509422 -217.26571655]
[-34.94405365 -231.06988525]
[-40.81301498 -244.87406921]
[-46.68197632 -258.67825317]
[-52.55093765 -272.48242188]
[-58.41989899 -286.28659058]
[-64.69725800 -299.90991211]
[-71.37745667 -313.34030151]
[-78.05764771 -326.77066040]
[-92.31007385 -322.01519775]
[-107.08563995 -319.28961182]
[-122.09674072 -318.64703369]
[-137.05117798 -320.09988403]
[-151.65786743 -323.61996460]
[-165.63247681 -329.13870239]
[-178.70298767 -336.54867554]
[-190.61497498 -345.70568848]
[-201.13658142 -356.43145752]
[-210.06298828 -368.51718140]
[-217.22044373 -381.72769165]
[-222.46963501 -395.80575562]
[-225.70837402 -410.47738647]
[-226.87361145 -425.45697021]
[-225.94267273 -440.45297241]
[-222.93368530 -455.17343140]
[-217.90522766 -469.33184814]
[-210.95515442 -482.65261841]
[-202.21876526 -494.87643433]
[-191.86611938 -505.76535034]
[-180.09872437 -515.10742188]
[-167.14564514 -522.72082520]
[-153.25901794 -528.45733643]
[-138.70915222 -532.20532227]
[-123.77924347 -533.89178467]
[-108.75993347 -533.48394775]
[-93.94355774 -530.98968506]
[-79.61853790 -526.45758057]
[-66.06370544 -519.97589111]
[-53.54290771 -511.67071533]
[-42.29987335 -501.70376587]
[-32.55344391 -490.26901245]
[-24.49333954 -477.58908081]
[-18.27645302 -463.91076660]
[-14.02379608 -449.50030518]
[-11.81814957 -434.63824463]
[-11.70244598 -419.61383057]
[-13.67893791 -404.71954346]
[-17.70915413 -390.24530029]
[-23.71464157 -376.47286987]
[-31.57850456 -363.67028809]
[-41.14767075 -352.08682251]
[-52.23587036 -341.94787598]
[-64.62727356 -333.45086670]
[-57.94707870 -320.02047729]
[-51.26688385 -306.59011841]
[-48.65534592 -305.57128906]
[-46.29002762 -303.45660400]
[-44.59034348 -300.33465576]
[-43.93592072 -296.44412231]
[-44.61572266 -292.15554810]
[-38.74676132 -278.35137939]
[-32.87779999 -264.54721069]
[-27.00883865 -250.74302673]
[-21.13987923 -236.93884277]
[-15.27091789 -223.13467407]
[-8.89231300 -209.55847168]
[-2.01290035 -196.22903442]
[4.86651230 -182.89961243]
[11.74592495 -169.57017517]
[18.62533760 -156.24075317]
[32.84864044 -151.97070312]
[40.01522446 -138.55076599]
[35.43996811 -123.66101074]
[42.31938171 -110.33158112]
[49.19879532 -97.00215149]
[56.07820892 -83.67272186]
[62.95761871 -70.34329224]
[69.83703613 -57.01386642]
[76.71644592 -43.68443680]
[76.75029755 -58.68439865]
[81.14658356 -73.02568817]
[89.52499390 -85.46764374]
[101.16071320 -94.93390656]
[115.04711914 -100.60556030]
[129.98291016 -101.99193573]
[144.67599487 -98.97310638]
[157.85527039 -91.81023407]
[168.38058472 -81.12297058]
[175.34141541 -67.83587646]
[178.13557434 -53.09841537]
[176.52133179 -38.18552780]
[170.63833618 -24.38732719]
[160.99551392 -12.89749527]
[148.42709351 -4.71001720]
[134.02035522 -0.53319186]
[119.02162933 -0.72835642]
[104.72844696 -5.27862740]
[92.37731934 -13.79036045]
[83.03849792 -25.52416229]
[85.92377472 -10.80427074]
[88.80904388 3.91562104]
[91.69432068 18.63551331]
[101.73524475 29.63683510]
[96.79691315 44.66758728]
[99.68218231 59.38747787]
[102.56745911 74.10736847]
[117.43518066 80.68589020]
[125.49575806 94.80514526]
[123.60213470 110.95259857]
[112.49362946 122.82387543]
[115.59774017 137.49917603]
[118.70185089 152.17448425]
[121.80596161 166.84977722]
[124.91007233 181.52508545]
[128.01417542 196.20039368]
[131.11828613 210.87568665]
[144.08091736 219.51329041]
[147.01986694 234.44035339]
[138.70535278 246.74501038]
[141.80946350 261.42031860]
[145.29969788 265.30172729]
[146.80186462 269.69451904]
[146.45410156 273.75582886]
[144.70903015 276.81964111]
[147.15476990 291.61892700]
[149.60049438 306.41818237]
[152.04621887 321.21746826]
[161.93006897 333.57141113]
[156.37147522 347.38992310]
[158.81719971 362.18917847]
[161.37303162 376.96984863]
[164.03883362 391.73107910]
[166.70463562 406.49227905]
[181.75276184 407.29873657]
[196.20912170 411.55438232]
[209.29408264 419.02969360]
[220.30200195 429.32156372]
[228.63923645 441.87493896]
[233.85615540 456.01284790]
[235.67143250 470.97283936]
[233.98715210 485.94815063]
[228.89418030 500.13119507]
[220.66714478 512.75708008]
[209.74972534 523.14489746]
[196.73068237 530.73443604]
[182.31213379 535.11645508]
[167.27163696 536.05456543]
[152.42030334 533.49822998]
[138.55905151 527.58532715]
[126.43541718 518.63470459]
[116.70320129 507.12899780]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 192]
[8 191]
[9 190]
[11 189]
[12 188]
[14 186]
[15 185]
[16 184]
[17 183]
[18 179]
[19 178]
[22 175]
[23 174]
[24 173]
[25 172]
[26 171]
[27 170]
[28 169]
[33 165]
[34 164]
[35 163]
[37 161]
[38 160]
[39 159]
[40 158]
[41 138]
[42 137]
[43 136]
[44 135]
[45 134]
[46 133]
[47 132]
[50 129]
[51 128]
[52 127]
[53 126]
[54 125]
[60 124]
[61 123]
[62 122]
[63 121]
[64 120]
[65 119]
[66 114]
[67 113]
[68 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
