%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[126.01693726 706.37347412]
[111.86801147 711.69317627]
[96.77957153 712.60443115]
[82.09326935 709.02618408]
[69.11499786 701.27661133]
[58.99877930 690.04479980]
[52.64414215 676.32946777]
[50.61613083 661.35021973]
[53.09508133 646.43890381]
[59.86056137 632.92156982]
[70.31099701 622.00000000]
[83.51712799 614.64544678]
[98.30468750 611.51184082]
[99.64292908 596.57165527]
[100.98116302 581.63146973]
[102.31939697 566.69128418]
[103.65763092 551.75109863]
[104.99586487 536.81091309]
[105.66564941 521.82592773]
[105.66564941 506.82589722]
[105.33067322 491.82965088]
[104.66088867 476.84460449]
[96.36299896 464.47552490]
[103.47637177 450.34362793]
[102.80658722 435.35858154]
[91.67565918 425.52810669]
[90.78293610 410.34069824]
[101.16950226 398.73220825]
[100.49971771 383.74716187]
[99.82993317 368.76214600]
[91.53204346 356.39303589]
[98.64541626 342.26113892]
[97.97563171 327.27609253]
[97.30584717 312.29107666]
[88.59349060 303.89932251]
[87.91284180 291.42053223]
[96.17339325 281.51464844]
[95.72679138 266.52130127]
[81.95035553 262.86126709]
[69.75044250 255.45843506]
[60.12092590 244.90538025]
[53.84924316 232.05175781]
[51.45199966 217.93586731]
[53.13241959 203.70079041]
[58.76316071 190.50183105]
[67.89590454 179.41273499]
[79.79705048 171.33837891]
[93.50663757 166.94088745]
[93.28330994 151.94255066]
[93.05998230 136.94421387]
[92.83665466 121.94587708]
[92.61332703 106.94754028]
[89.35401154 99.57533264]
[92.50000000 91.72462463]
[92.50000000 76.72462463]
[92.50000000 61.72462845]
[92.50000000 46.72462845]
[89.37059021 38.14298248]
[92.61332703 31.50171471]
[92.83665466 16.50337791]
[93.05998230 1.50503993]
[85.01823425 14.16719913]
[72.56681824 22.53153801]
[57.80400848 25.18851662]
[43.21760941 21.69039154]
[31.26567650 12.62665367]
[23.96232605 -0.47529471]
[22.53829765 -15.40754604]
[27.23356628 -29.65375519]
[37.25689697 -40.81318283]
[50.91918182 -47.00527191]
[65.91808319 -47.18654633]
[79.72602844 -41.32645416]
[90.01613617 -30.41253090]
[95.05455780 -16.28231621]
[97.93983459 -31.00220871]
[100.60562897 -45.76342392]
[103.27142334 -60.52464294]
[96.57170868 -71.54628754]
[99.09594727 -83.78605652]
[108.95675659 -90.79255676]
[111.84202576 -105.51245117]
[114.72730255 -120.23233795]
[117.61257172 -134.95223999]
[116.19229889 -143.97557068]
[120.65193939 -149.86907959]
[112.29711151 -163.01573181]
[115.65417480 -177.85435486]
[128.23899841 -185.73838806]
[131.34309387 -200.41369629]
[134.44720459 -215.08898926]
[137.55131531 -229.76429749]
[140.65542603 -244.43960571]
[139.03579712 -249.40184021]
[139.44102478 -254.02667236]
[141.40351868 -257.59930420]
[144.23973083 -259.69412231]
[147.99603271 -274.21615601]
[151.75233459 -288.73822021]
[138.23411560 -295.35961914]
[126.32571411 -304.56692505]
[116.51474762 -315.98315430]
[109.20298767 -329.14077759]
[104.68984222 -343.50100708]
[103.16011047 -358.47579956]
[104.67645264 -373.45196533]
[109.17675781 -387.81625366]
[116.47675323 -400.98040771]
[126.27750397 -412.40536499]
[138.17767334 -421.62332153]
[151.68997192 -428.25680542]
[166.26104736 -432.03414917]
[181.29426575 -432.80068970]
[196.17398071 -430.52502441]
[210.29092407 -425.30035400]
[223.06697083 -417.34063721]
[233.97898865 -406.97180176]
[242.58010864 -394.61843872]
[248.51812744 -380.78640747]
[251.54989624 -366.04214478]
[251.55126953 -350.98941040]
[248.52217102 -336.24459839]
[242.58665466 -322.41149902]
[233.98777771 -310.05657959]
[223.07765198 -299.68576050]
[210.30303955 -291.72369385]
[196.18705750 -286.49649048]
[181.30773926 -284.21810913]
[166.27439880 -284.98193359]
[162.51809692 -270.45986938]
[158.76179504 -255.93780518]
[155.33073425 -241.33549500]
[152.22662354 -226.66018677]
[149.12251282 -211.98487854]
[146.01840210 -197.30958557]
[142.91429138 -182.63427734]
[151.22882080 -170.32963562]
[148.28985596 -155.40257263]
[135.32723999 -146.76496887]
[132.33245850 -132.06695557]
[129.44718933 -117.34706879]
[126.56192017 -102.62717438]
[123.67665100 -87.90728760]
[130.25028992 -71.63601685]
[118.03263855 -57.85884857]
[115.36684418 -43.09762955]
[112.70104980 -28.33641243]
[114.63992310 -23.97180176]
[113.85755157 -18.34286499]
[109.72986603 -13.17820644]
[108.05831909 1.72836757]
[107.83499146 16.72670555]
[107.61166382 31.72504234]
[107.50000000 46.72462845]
[107.50000000 61.72462845]
[107.50000000 76.72462463]
[107.50000000 91.72462463]
[107.61166382 106.72421265]
[107.83499146 121.72254944]
[108.05831909 136.72088623]
[108.28164673 151.71922302]
[108.50497437 166.71755981]
[123.64063263 171.31459045]
[136.59895325 180.35275269]
[146.11831665 192.93742371]
[151.27647400 207.82946777]
[151.57983398 223.56718445]
[147.01071167 238.60975647]
[138.02787781 251.48818970]
[125.52048492 260.94866943]
[110.72013855 266.07470703]
[111.16674805 281.06805420]
[121.20550537 296.50518799]
[112.29088593 311.62127686]
[112.96067047 326.60632324]
[113.63045502 341.59136963]
[121.97624969 355.03228760]
[114.81497192 368.09234619]
[115.48475647 383.07739258]
[116.15454102 398.06240845]
[127.53534698 408.69796753]
[128.00114441 423.90447998]
[117.79162598 434.68878174]
[118.46141052 449.67382812]
[126.80720520 463.11474609]
[119.64592743 476.17480469]
[120.31571198 491.15985107]
[123.12638092 495.55841064]
[123.89221954 500.13735962]
[122.88691711 504.08758545]
[120.66564941 506.82589722]
[120.66564941 521.82592773]
[132.01043701 512.01287842]
[146.98060608 512.95837402]
[157.00056458 524.12084961]
[156.33041382 539.10589600]
[145.35406494 549.32934570]
[130.35925293 548.93481445]
[119.93605042 538.14916992]
[118.59781647 553.08935547]
[117.25958252 568.02954102]
[115.92134094 582.96972656]
[114.58310699 597.90991211]
[113.24487305 612.85009766]
[127.24013519 618.56182861]
[138.92900085 628.14630127]
[147.27209473 640.75122070]
[151.52757263 655.25579834]
[151.31703186 670.37030029]
[146.65919495 684.75067139]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 204]
[14 203]
[15 202]
[16 201]
[17 200]
[18 199]
[19 192]
[20 191]
[21 187]
[22 186]
[24 184]
[25 183]
[28 180]
[29 179]
[30 178]
[32 176]
[33 175]
[34 174]
[37 172]
[38 171]
[48 162]
[49 161]
[50 160]
[51 159]
[52 158]
[54 157]
[55 156]
[56 155]
[57 154]
[59 153]
[60 152]
[61 151]
[75 150]
[76 147]
[77 146]
[78 145]
[81 143]
[82 142]
[83 141]
[84 140]
[86 139]
[89 136]
[90 135]
[91 134]
[92 133]
[93 132]
[97 131]
[98 130]
[99 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
