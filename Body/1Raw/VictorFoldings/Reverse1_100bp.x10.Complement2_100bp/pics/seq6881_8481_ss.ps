%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxUUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGC\
) } def
/len { sequence length } bind def

/coor [
[17.88498688 483.44305420]
[21.71305656 498.13015747]
[19.97315598 513.20782471]
[12.90058994 526.63702393]
[1.45186627 536.60156250]
[-12.82466984 541.75372314]
[-27.99823380 541.39678955]
[-42.01672363 535.57904053]
[-52.98426056 525.08721924]
[-59.41756821 511.34036255]
[-60.44659424 496.19750977]
[-55.93217850 481.70669556]
[-46.48485184 469.82760620]
[-33.38228989 462.16683960]
[-18.39650726 459.76043701]
[-23.33253098 445.70751953]
[-12.90689945 433.80722046]
[-9.80278969 419.13192749]
[-6.69867945 404.45660400]
[-8.38994694 397.26208496]
[-3.43756342 389.58666992]
[-0.11530401 374.95922852]
[3.20695543 360.33175659]
[6.52921486 345.70431519]
[9.85147476 331.07684326]
[-2.74491763 323.03842163]
[-11.84813690 311.15310669]
[-16.34415817 296.84365845]
[-15.67192936 281.83135986]
[-9.89330101 267.92892456]
[0.31210637 256.82171631]
[13.72677803 249.86337280]
[28.74053764 247.91084290]
[32.06279755 233.28338623]
[35.38505554 218.65592957]
[38.70731735 204.02847290]
[28.93888664 215.41169739]
[16.16378212 223.27278137]
[1.59964061 226.86245728]
[-13.36537457 225.83857727]
[-27.30489349 220.29875183]
[-38.89029312 210.77096558]
[-47.01732254 198.16337585]
[-50.91136551 183.67764282]
[-50.20127106 168.69445801]
[-44.95471573 154.64192200]
[-35.67177200 142.85945129]
[-23.23722839 134.47003174]
[-8.83626747 130.27333069]
[6.15850449 130.66934204]
[20.31788063 135.62031555]
[32.29227829 144.65434265]
[40.94037628 156.91038513]
[45.43788910 171.22024536]
[45.35596848 186.22114563]
[52.43307114 172.99562073]
[59.51017761 159.77009583]
[66.58728027 146.54457092]
[55.68165970 136.31378174]
[47.79468918 123.60957336]
[43.46357346 109.29724121]
[42.98331451 94.35164642]
[46.38662720 79.79077148]
[53.44170380 66.60641479]
[63.66800308 55.69659042]
[76.36897278 47.80439758]
[90.67952728 43.46739578]
[105.62492371 42.98099899]
[120.18718719 46.37832642]
[127.26429749 33.15280151]
[134.34140015 19.92727280]
[133.32051086 1.54142714]
[148.57737732 -7.13008070]
[155.45678711 -20.45951080]
[162.33619690 -33.78894043]
[169.21562195 -47.11837006]
[176.09503174 -60.44779587]
[167.46836853 -76.39579010]
[170.11862183 -94.17374420]
[182.79792786 -106.69118500]
[200.29679871 -109.07041931]
[206.77630615 -122.59877014]
[213.25579834 -136.12710571]
[219.73529053 -149.65545654]
[226.21478271 -163.18380737]
[225.19779968 -178.97229004]
[237.67375183 -187.10862732]
[244.15324402 -200.63697815]
[250.63273621 -214.16532898]
[249.61576843 -229.95381165]
[262.09170532 -238.09014893]
[268.57119751 -251.61849976]
[275.05068970 -265.14685059]
[281.53018188 -278.67520142]
[276.51364136 -293.42211914]
[283.27749634 -307.04946899]
[297.36734009 -311.74111938]
[303.84683228 -325.26947021]
[291.30609131 -333.54251099]
[280.00872803 -343.44619751]
[270.16516113 -354.79598999]
[261.95880127 -367.38049316]
[255.54254150 -380.96524048]
[251.03590393 -395.29718018]
[248.52284241 -410.10925293]
[248.05015564 -425.12561035]
[249.62667847 -440.06643677]
[253.22303772 -454.65341187]
[258.77221680 -468.61480713]
[266.17083740 -481.69049072]
[275.28109741 -493.63693237]
[285.93322754 -504.23153687]
[297.92883301 -513.27691650]
[311.04443359 -520.60461426]
[325.03567505 -526.07806396]
[339.64193726 -529.59533691]
[354.59109497 -531.09088135]
[369.60464478 -530.53686523]
[384.40292358 -527.94354248]
[398.71020508 -523.35937500]
[412.25997925 -516.86956787]
[424.79983521 -508.59518433]
[436.09616089 -498.69027710]
[445.93847656 -487.33938599]
[454.14346313 -474.75399780]
[460.55825806 -461.16857910]
[465.06335449 -446.83615112]
[467.57482910 -432.02380371]
[468.04586792 -417.00741577]
[466.46774292 -402.06674194]
[462.86981201 -387.48016357]
[457.31912231 -373.51937866]
[449.91906738 -360.44445801]
[440.80752563 -348.49902344]
[430.15423584 -337.90557861]
[418.15765381 -328.86148071]
[405.04125977 -321.53521729]
[391.04940796 -316.06329346]
[376.44277954 -312.54760742]
[361.49346924 -311.05368042]
[346.47998047 -311.60931396]
[331.68197632 -314.20419312]
[317.37518311 -318.78997803]
[310.89569092 -305.26162720]
[316.07177734 -291.34243774]
[309.69335938 -277.53045654]
[295.05853271 -272.19567871]
[288.57904053 -258.66735840]
[282.09954834 -245.13900757]
[275.62005615 -231.61065674]
[277.10049438 -216.78981018]
[264.16110229 -207.68582153]
[257.68157959 -194.15748596]
[251.20210266 -180.62913513]
[252.68254089 -165.80828857]
[239.74313354 -156.70431519]
[233.26364136 -143.17596436]
[226.78413391 -129.64761353]
[220.30464172 -116.11927032]
[213.82514954 -102.59092712]
[221.11981201 -92.88715363]
[223.61125183 -80.93199921]
[220.76658630 -68.98173523]
[213.06596375 -59.31840134]
[201.92276001 -53.81409073]
[189.42445374 -53.56838608]
[182.54504395 -40.23895645]
[175.66563416 -26.90952682]
[168.78622437 -13.58009720]
[161.90681458 -0.25066823]
[165.28489685 11.36462784]
[159.66262817 22.52589607]
[147.56692505 27.00437737]
[140.48982239 40.22990417]
[133.41271973 53.45543289]
[144.31834412 63.68621063]
[152.20530701 76.39042664]
[156.53642273 90.70275879]
[157.01667786 105.64835358]
[153.61337280 120.20922852]
[146.55828857 133.39358521]
[136.33200073 144.30340576]
[123.63102722 152.19560242]
[109.32047272 156.53260803]
[94.37507629 157.01899719]
[79.81281281 153.62167358]
[72.73570251 166.84719849]
[65.65859985 180.07272339]
[58.58149338 193.29824829]
[53.33477783 207.35072327]
[50.01251602 221.97817993]
[46.69025803 236.60565186]
[43.36799622 251.23310852]
[56.06532669 259.47952271]
[65.15810394 271.54986572]
[69.56432343 285.97573853]
[68.77062225 301.01034546]
[62.89208603 314.84017944]
[52.65597153 325.80358887]
[39.31181717 332.59054565]
[24.47893524 334.39910889]
[21.15667534 349.02655029]
[17.83441544 363.65402222]
[14.51215649 378.28149414]
[11.18989658 392.90893555]
[7.97662258 407.56072998]
[4.87251282 422.23602295]
[1.76840258 436.91134644]
[6.48240042 452.01394653]
[-3.72120476 462.86456299]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 210]
[17 208]
[18 207]
[19 206]
[21 205]
[22 204]
[23 203]
[24 202]
[25 201]
[33 193]
[34 192]
[35 191]
[36 190]
[55 189]
[56 188]
[57 187]
[58 186]
[69 175]
[70 174]
[71 173]
[73 170]
[74 169]
[75 168]
[76 167]
[77 166]
[81 160]
[82 159]
[83 158]
[84 157]
[85 156]
[87 154]
[88 153]
[89 152]
[91 150]
[92 149]
[93 148]
[94 147]
[97 144]
[98 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
