%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUUCGAAUCCCUCUCGACCCAACAAACCCAACACCGAGUCACAGUCAAGCUCUAUUAUUGAAGAACCAGAUCCGUGUACUUAUAACAACACCCCUxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[156.00140381 577.31732178]
[155.47889709 562.29144287]
[157.43682861 547.38452148]
[161.82182312 533.00317383]
[168.51422119 519.53985596]
[177.33145142 507.36175537]
[188.03298950 496.80111694]
[200.32688904 488.14605713]
[213.87776184 481.63269043]
[209.69075012 467.22891235]
[205.50373840 452.82513428]
[201.31672668 438.42135620]
[197.12971497 424.01757812]
[192.40957642 409.77957153]
[187.16285706 395.72711182]
[181.91613770 381.67465210]
[176.66941833 367.62216187]
[171.42269897 353.56970215]
[168.93133545 352.28469849]
[166.79884338 349.93542480]
[165.43318176 346.65359497]
[165.18705750 342.71609497]
[166.30932617 338.52151489]
[161.90832520 324.18167114]
[157.50733948 309.84182739]
[153.10633850 295.50198364]
[148.13868713 290.02984619]
[148.74827576 280.91577148]
[144.56126404 266.51199341]
[140.37425232 252.10821533]
[136.18724060 237.70443726]
[131.67961121 223.39775085]
[126.85361481 209.19529724]
[122.02761841 194.99284363]
[117.20162201 180.79037476]
[113.38960266 177.91329956]
[111.34447479 172.61099243]
[112.45021820 166.09265137]
[108.04922485 151.75280762]
[103.64822388 137.41294861]
[99.24723053 123.07310486]
[94.84622955 108.73326111]
[89.65863037 102.56387329]
[90.48816681 94.14706421]
[86.30116272 79.74327850]
[75.01930237 68.65137482]
[78.89644623 54.27024460]
[74.70943451 39.86646271]
[70.42232513 54.24076843]
[60.38716125 65.38955688]
[46.54158783 71.16017914]
[31.55896378 70.43841553]
[18.33219719 63.36362839]
[9.41517067 51.30184174]
[6.52962351 36.58200455]
[10.23270798 22.04628563]
[19.80941772 10.50130177]
[33.41064072 4.17621088]
[48.41019058 4.29228878]
[61.91189194 10.82712173]
[71.30934143 22.52008247]
[69.74881744 7.60147715]
[68.18829346 -7.31712723]
[66.62776947 -22.23573303]
[65.06724548 -37.15433502]
[63.50672531 -52.07294083]
[61.83518219 -66.97951508]
[60.05271530 -81.87322998]
[58.27025223 -96.76695251]
[48.94788361 -109.54991150]
[55.11796570 -123.10643768]
[53.33550262 -138.00015259]
[51.55303574 -152.89387512]
[49.77056885 -167.78758240]
[47.65594482 -182.63778687]
[45.21021652 -197.43705750]
[42.76449203 -212.23632812]
[40.31876373 -227.03559875]
[25.29833412 -226.67106628]
[10.37336159 -228.40060425]
[-4.16563845 -232.19055176]
[-18.03565979 -237.96710205]
[-30.96671677 -245.61784363]
[-42.70710373 -254.99385071]
[-53.02828979 -265.91259766]
[-61.72937012 -278.16159058]
[-68.64097595 -291.50234985]
[-73.62857056 -305.67520142]
[-76.59507751 -320.40429688]
[-77.48273468 -335.40289307]
[-76.27427673 -350.37905884]
[-72.99322510 -365.04129028]
[-67.70344543 -379.10415649]
[-60.50790024 -392.29394531]
[-51.54666138 -404.35388184]
[-40.99415588 -415.04925537]
[-29.05579185 -424.17184448]
[-15.96395588 -431.54409790]
[-1.97348249 -437.02249146]
[12.64329910 -440.50039673]
[27.60186958 -441.91009521]
[42.61105728 -441.22418213]
[57.37870026 -438.45599365]
[71.61734009 -433.65942383]
[85.04982758 -426.92782593]
[97.41468811 -418.39224243]
[108.47123718 -408.21878052]
[118.00425720 -396.60552979]
[125.82817841 -383.77853394]
[131.79071045 -369.98742676]
[135.77580261 -355.50070190]
[137.70585632 -340.60034180]
[137.54333496 -325.57635498]
[135.29138184 -310.72122192]
[130.99383545 -296.32409668]
[124.73434448 -282.66522217]
[116.63476562 -270.01046753]
[106.85274506 -258.60617065]
[95.57869720 -248.67428589]
[83.03208160 -240.40818787]
[69.45710754 -233.96875000]
[55.11803436 -229.48132324]
[57.56376266 -214.68205261]
[60.00948715 -199.88278198]
[62.45521545 -185.08351135]
[65.09323120 -182.74401855]
[66.72916412 -179.01055908]
[66.72016907 -174.36801147]
[64.66428375 -169.57005310]
[66.44675446 -154.67633057]
[68.22921753 -139.78262329]
[70.01168060 -124.88890076]
[79.20655823 -113.17124176]
[73.16397095 -98.54941559]
[74.94643402 -83.65570068]
[76.72889709 -68.76197815]
[80.64496613 -62.49411011]
[78.42533112 -53.63346481]
[79.98585510 -38.71485901]
[81.54637146 -23.79625511]
[83.10689545 -8.87765026]
[84.66741943 6.04095411]
[86.22794342 20.95955849]
[89.11321259 35.67945099]
[93.30022430 50.08323288]
[104.28260040 60.14487839]
[100.70494080 75.55626678]
[104.89195251 89.96005249]
[109.18607330 104.33226013]
[113.58707428 118.67211151]
[117.98807526 133.01196289]
[122.38906860 147.35180664]
[126.79006958 161.69165039]
[131.40408325 175.96438599]
[136.23007202 190.16683960]
[141.05607605 204.36929321]
[145.88206482 218.57174683]
[149.80880737 222.01091003]
[151.82234192 226.19409180]
[151.95964050 230.26792908]
[150.59101868 233.51742554]
[154.77803040 247.92120361]
[158.96504211 262.32498169]
[163.15205383 276.72875977]
[167.44618225 291.10098267]
[171.84718323 305.44082642]
[176.24818420 319.78067017]
[180.64916992 334.12051392]
[185.47517395 348.32296753]
[190.72189331 362.37545776]
[195.96861267 376.42791748]
[201.21533203 390.48040771]
[206.46205139 404.53286743]
[214.96862793 392.17819214]
[229.92018127 390.97357178]
[240.29498291 401.80703735]
[238.44509888 416.69253540]
[225.73420715 424.65704346]
[211.53349304 419.83056641]
[215.72050476 434.23434448]
[219.90751648 448.63812256]
[224.09452820 463.04190063]
[228.28153992 477.44567871]
[243.21241760 475.67974854]
[258.23031616 476.39556885]
[272.92553711 479.57366943]
[286.89718628 485.12728882]
[299.76412964 492.90496826]
[311.17529297 502.69451904]
[320.81939697 514.22888184]
[328.43334961 527.19335938]
[333.80941772 541.23425293]
[336.80096436 555.96862793]
[337.32638550 570.99438477]
[335.37130737 585.90167236]
[330.98910522 600.28381348]
[324.29928589 613.74847412]
[315.48440552 625.92822266]
[304.78491211 636.49096680]
[292.49267578 645.14837646]
[278.94305420 651.66436768]
[264.50570679 655.86108398]
[249.57449341 657.62414551]
[234.55673218 656.90545654]
[219.86212158 653.72454834]
[205.89154053 648.16821289]
[193.02612305 640.38806152]
[181.61683655 630.59631348]
[171.97496033 619.06011963]
[164.36349487 606.09417725]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 183]
[10 182]
[11 181]
[12 180]
[13 179]
[14 173]
[15 172]
[16 171]
[17 170]
[18 169]
[23 168]
[24 167]
[25 166]
[26 165]
[28 164]
[29 163]
[30 162]
[31 161]
[32 157]
[33 156]
[34 155]
[35 154]
[38 153]
[39 152]
[40 151]
[41 150]
[42 149]
[44 148]
[45 147]
[47 145]
[48 144]
[61 143]
[62 142]
[63 141]
[64 140]
[65 139]
[66 138]
[67 136]
[68 135]
[69 134]
[71 132]
[72 131]
[73 130]
[74 129]
[75 125]
[76 124]
[77 123]
[78 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
