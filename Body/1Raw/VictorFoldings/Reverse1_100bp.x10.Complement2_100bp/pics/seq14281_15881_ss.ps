%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCUCCAUCCUAACCACGACACCCACUUUCUCAUACUACCCCACCACCAACACCAUUUGAAAUUAUCACAUCCUUCGACUUAUUAAAUACUUCCUCUCCCxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[-93.77972412 443.36187744]
[-86.30313873 456.39315796]
[-80.67068481 470.32116699]
[-76.98728943 484.88641357]
[-75.32157135 499.81756592]
[-75.70455933 514.83642578]
[-78.12912750 529.66326904]
[-82.55009460 544.02185059]
[-88.88511658 557.64471436]
[-97.01615906 570.27795410]
[-106.79176331 581.68634033]
[-118.02980042 591.65734863]
[-130.52091980 600.00512695]
[-144.03242493 606.57421875]
[-158.31259155 611.24224854]
[-173.09538269 613.92230225]
[-188.10543823 614.56433105]
[-203.06309509 613.15643311]
[-217.68972778 609.72491455]
[-231.71282959 604.33355713]
[-244.87117004 597.08294678]
[-256.91961670 588.10803223]
[-267.63369751 577.57611084]
[-276.81384277 565.68328857]
[-284.28903198 552.65118408]
[-289.91995239 538.72259521]
[-293.60177612 524.15692139]
[-295.26589966 509.22561646]
[-294.88128662 494.20675659]
[-292.45510864 479.38018799]
[-288.03259277 465.02209473]
[-281.69607544 451.39993286]
[-273.56365967 438.76754761]
[-263.78683472 427.36019897]
[-252.54771423 417.39044189]
[-240.05569458 409.04400635]
[-226.54348755 402.47637939]
[-212.26281738 397.80987549]
[-197.47972107 395.13146973]
[-182.46960449 394.49102783]
[-167.51210022 395.90051270]
[-152.88583374 399.33367920]
[-138.86332703 404.72650146]
[-125.70576477 411.97857666]
[-116.74507141 399.94918823]
[-107.78437805 387.91983032]
[-98.82367706 375.89044189]
[-89.86298370 363.86105347]
[-91.30200958 351.85040283]
[-83.93515015 341.75521851]
[-71.27110291 339.30883789]
[-62.13230133 327.41421509]
[-61.85350800 322.64648438]
[-58.57668686 318.00326538]
[-52.54005051 315.30685425]
[-43.05115128 303.68960571]
[-33.56225204 292.07232666]
[-24.24736977 280.31509399]
[-15.10856724 268.42044067]
[-5.96976471 256.52581787]
[3.16903734 244.63117981]
[12.30783939 232.73655701]
[20.90640450 220.44570923]
[28.94757652 207.78318787]
[36.98875046 195.12066650]
[34.66040039 183.25030518]
[41.25600433 172.63514709]
[53.70302200 169.25364685]
[61.93183136 156.71224976]
[70.16063690 144.17083740]
[77.43386841 131.05215454]
[83.71122742 117.42883301]
[89.98858643 103.80551910]
[94.38958740 89.46566772]
[96.83531189 74.66639709]
[99.28104401 59.86712646]
[101.61653137 45.05006027]
[103.84164429 30.21601677]
[106.06676483 15.38197231]
[107.84922791 0.48825544]
[101.37397766 -13.94717407]
[110.21588898 -25.93340683]
[111.55412292 -40.87359238]
[112.89236450 -55.81377792]
[114.23059845 -70.75395966]
[115.56883240 -85.69414520]
[116.90706635 -100.63433075]
[118.24530029 -115.57451630]
[119.24955750 -130.54086304]
[110.38676453 -146.68188477]
[120.40097046 -161.09307861]
[120.84757996 -176.08642578]
[121.29418182 -191.07977295]
[121.74079132 -206.07312012]
[122.18740082 -221.06646729]
[114.86441040 -235.09089661]
[122.97721863 -247.58215332]
[123.42382050 -262.57550049]
[123.87042999 -277.56884766]
[109.99170685 -283.76962280]
[99.54600525 -294.81298828]
[94.12622070 -309.01489258]
[94.55881500 -324.20968628]
[100.77783966 -338.08023071]
[111.83493042 -348.51138306]
[126.04396057 -353.91250610]
[141.23815918 -353.45989990]
[155.10050964 -347.22265625]
[165.51712036 -336.15185547]
[170.89953613 -321.93572998]
[170.42695618 -306.74212646]
[164.17146301 -292.88800049]
[153.08697510 -282.48596191]
[138.86378479 -277.12225342]
[138.41717529 -262.12890625]
[137.97056580 -247.13555908]
[145.32550049 -234.18354797]
[137.18074036 -220.61987305]
[136.73414612 -205.62651062]
[136.28753662 -190.63316345]
[135.84092712 -175.63981628]
[135.39431763 -160.64646912]
[143.45840454 -151.62997437]
[143.20903015 -139.13510132]
[134.23460388 -129.87107849]
[136.33137512 -127.03631592]
[137.15928650 -123.04512787]
[136.18975830 -118.50493622]
[133.18548584 -114.23628235]
[131.84724426 -99.29609680]
[130.50901794 -84.35591125]
[129.17077637 -69.41572571]
[127.83254242 -54.47554398]
[126.49430847 -39.53535843]
[125.15607452 -24.59517288]
[131.72705078 -11.22836399]
[122.78941345 1.82648957]
[124.48128510 4.06159973]
[125.38973999 7.10155439]
[125.20378876 10.65131855]
[123.72489166 14.30883026]
[120.90081024 17.60709000]
[118.67568970 32.44113541]
[116.45057678 47.27517700]
[118.56707001 54.35629654]
[114.08031464 62.31285477]
[111.63459015 77.11212921]
[109.18885803 91.91139984]
[118.26242828 79.96692657]
[130.54698181 71.35939026]
[144.87164307 66.90920258]
[159.87106323 67.04052734]
[174.11561584 71.74084473]
[186.24757385 80.56215668]
[195.11061096 92.66366577]
[199.85995483 106.89193726]
[200.04293823 121.89082336]
[195.64210510 136.23072815]
[187.07691956 148.54484558]
[175.16377258 157.65950012]
[161.03813171 162.70591736]
[146.04637146 163.20312500]
[131.61741638 159.10371399]
[119.12653351 150.79841614]
[109.76427460 139.07885742]
[104.42299652 125.06205750]
[103.61190796 110.08287811]
[97.33454895 123.70619202]
[91.05718231 137.32951355]
[104.16291046 130.03294373]
[119.16230774 130.16796875]
[132.13455200 137.69927979]
[139.68875122 150.65821838]
[139.85023499 165.65734863]
[132.57681274 178.77593994]
[119.76972198 186.58480835]
[104.77671814 187.04273987]
[91.51692200 180.03004456]
[83.45642853 167.37980652]
[82.70204163 152.39965820]
[74.47322845 164.94105530]
[66.24442291 177.48245239]
[65.62093353 195.88606262]
[49.65127563 203.16183472]
[41.61009979 215.82435608]
[33.56892776 228.48689270]
[48.40639877 226.28472900]
[60.53686142 235.10809326]
[63.01144028 249.90257263]
[54.41258240 262.19320679]
[39.66610336 264.93936157]
[27.21945763 256.56793213]
[24.20247269 241.87535095]
[15.06367016 253.76998901]
[5.92486811 265.66461182]
[-3.21393442 277.55926514]
[-12.35273647 289.45388794]
[-13.59683704 295.94723511]
[-17.36742401 300.19927979]
[-21.94498825 301.56124878]
[-31.43388748 313.17849731]
[-40.92278671 324.79574585]
[-50.23766708 336.55300903]
[-59.37647247 348.44763184]
[-61.36703110 366.75390625]
[-77.83360291 372.82177734]
[-86.79430389 384.85113525]
[-95.75499725 396.88052368]
[-104.71569061 408.90988159]
[-113.67639160 420.93927002]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 210]
[45 209]
[46 208]
[47 207]
[48 206]
[51 204]
[52 203]
[55 202]
[56 201]
[57 200]
[58 197]
[59 196]
[60 195]
[61 194]
[62 193]
[63 186]
[64 185]
[65 184]
[68 182]
[69 181]
[70 180]
[71 169]
[72 168]
[73 167]
[74 148]
[75 147]
[76 146]
[77 144]
[78 143]
[79 142]
[80 137]
[82 135]
[83 134]
[84 133]
[85 132]
[86 131]
[87 130]
[88 129]
[89 125]
[91 122]
[92 121]
[93 120]
[94 119]
[95 118]
[97 116]
[98 115]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
