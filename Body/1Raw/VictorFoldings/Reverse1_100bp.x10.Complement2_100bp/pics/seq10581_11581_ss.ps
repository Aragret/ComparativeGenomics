%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGCGUCCGCCGUUUCUGAUCAUACCGUUAUCCGUGUUAUAACCGAUUCUCCCUCACCCACAACUCCCAAUACUCUCAUCGAUAUUACUUGUCGCUAUxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[44.31489944 672.89001465]
[29.28255844 676.35876465]
[14.76892757 671.12829590]
[5.40525150 658.86755371]
[4.17944574 643.48895264]
[11.48266125 629.89978027]
[24.98446655 622.43621826]
[25.87728310 607.46276855]
[26.77009773 592.48937988]
[27.66291428 577.51599121]
[20.69687271 564.35070801]
[29.24185562 551.03558350]
[30.13467216 536.06213379]
[31.02748871 521.08874512]
[20.97967148 510.15362549]
[21.67181206 494.95574951]
[33.20970535 484.49081421]
[34.10251999 469.51739502]
[34.99533463 454.54400635]
[35.88815308 439.57058716]
[28.92211151 426.40536499]
[37.46709442 413.09017944]
[38.35990906 398.11679077]
[31.39386749 384.95153809]
[39.93885040 371.63635254]
[40.83166885 356.66296387]
[41.72448349 341.68954468]
[42.61729813 326.71615601]
[43.51011658 311.74273682]
[34.32984543 323.60540771]
[20.72690964 329.92678833]
[5.74023199 329.29470825]
[-7.28212166 321.85037231]
[-15.43092442 309.25683594]
[-16.88571358 294.32754517]
[-11.32148647 280.39776611]
[0.01869570 270.57940674]
[14.60140705 267.06591797]
[29.16883278 270.64224243]
[40.46657181 280.50939941]
[45.97068405 294.46310425]
[49.29294205 279.83563232]
[52.61520386 265.20819092]
[55.93746185 250.58071899]
[49.75831223 240.18145752]
[52.40642929 227.96789551]
[62.99522781 220.60310364]
[66.53489685 206.02671814]
[70.07456970 191.45034790]
[65.55914307 177.25668335]
[76.33446503 165.67208862]
[79.87413788 151.09570312]
[83.41381073 136.51933289]
[86.95348358 121.94295502]
[90.49315643 107.36658478]
[93.81541443 92.73912048]
[96.81019592 78.04111481]
[99.69546509 63.32122803]
[102.58073425 48.60133743]
[105.46601105 33.88144302]
[100.52767944 18.85069466]
[110.56860352 7.84937143]
[113.45388031 -6.87052011]
[116.22948456 -21.61148262]
[118.89528656 -36.37269974]
[121.56108093 -51.13391876]
[124.22687531 -65.89513397]
[112.50242615 -56.53899765]
[97.52339935 -55.74599075]
[84.87660980 -63.81188583]
[79.27899170 -77.72830200]
[82.81831360 -92.30476379]
[94.17450714 -102.10460663]
[109.11198425 -103.47273254]
[122.05944061 -95.89886475]
[128.18791199 -82.20671082]
[132.58891296 -96.54656219]
[136.98991394 -110.88640594]
[141.39091492 -125.22625732]
[145.79191589 -139.56610107]
[150.19290161 -153.90594482]
[154.48703003 -168.27816772]
[158.67404175 -182.68194580]
[157.42796326 -187.75090027]
[158.17605591 -192.33279419]
[160.39883423 -195.74955750]
[163.38299561 -197.62760925]
[168.20899963 -211.83007812]
[173.03498840 -226.03253174]
[177.86099243 -240.23498535]
[182.68698120 -254.43743896]
[181.66850281 -259.55697632]
[182.62043762 -264.10089111]
[184.99356079 -267.41500854]
[188.05860901 -269.15792847]
[193.51396179 -283.13073730]
[198.96931458 -297.10354614]
[204.42468262 -311.07632446]
[209.88003540 -325.04913330]
[196.93342590 -332.68991089]
[185.38023376 -342.30862427]
[175.51969910 -353.65615845]
[167.60725403 -366.43853760]
[161.84782410 -380.32467651]
[158.39060974 -394.95492554]
[157.32516479 -409.95028687]
[158.67907715 -424.92236328]
[162.41728210 -439.48333740]
[168.44293213 -453.25604248]
[176.59999084 -465.88375854]
[186.67712402 -477.03933716]
[198.41334534 -486.43389893]
[211.50463867 -493.82403564]
[225.61190796 -499.01837158]
[240.36975098 -501.88232422]
[255.39588928 -502.34173584]
[270.30114746 -500.38470459]
[284.69937134 -496.06188965]
[298.21768188 -489.48532104]
[310.50592041 -480.82528687]
[321.24572754 -470.30615234]
[330.15899658 -458.20034790]
[337.01477051 -444.82150269]
[341.63555908 -430.51608276]
[343.90158081 -415.65469360]
[343.75421143 -400.62222290]
[341.19723511 -385.80810547]
[336.29687500 -371.59603882]
[329.18008423 -358.35415649]
[320.03121948 -346.42544556]
[309.08721924 -336.11889648]
[296.63156128 -327.70147705]
[282.98690796 -321.39120483]
[268.50668335 -317.35153198]
[253.56593323 -315.68710327]
[238.55168152 -316.44100952]
[223.85282898 -319.59378052]
[218.39747620 -305.62097168]
[212.94212341 -291.64816284]
[207.48675537 -277.67538452]
[202.03140259 -263.70257568]
[196.88945007 -249.61143494]
[192.06344604 -235.40898132]
[187.23744202 -221.20652771]
[182.41145325 -207.00407410]
[177.58544922 -192.80162048]
[173.07781982 -178.49493408]
[168.89080811 -164.09115601]
[170.04229736 -156.79074097]
[164.53276062 -149.50494385]
[160.13175964 -135.16510010]
[155.73075867 -120.82525635]
[151.32975769 -106.48540497]
[146.92875671 -92.14556122]
[142.52777100 -77.80571747]
[138.98809814 -63.22933960]
[136.32229614 -48.46812057]
[133.65649414 -33.70690536]
[130.99070740 -18.94568825]
[132.89543152 -11.80469227]
[128.17376709 -3.98524737]
[125.28849792 10.73464394]
[130.43319702 24.71253014]
[120.18589783 36.76671600]
[117.30062866 51.48660660]
[114.41535950 66.20649719]
[111.53008270 80.92639160]
[113.32827759 88.09495544]
[108.49072266 95.84323120]
[110.28236389 100.77313995]
[109.18433380 106.35594177]
[105.06953430 110.90625763]
[101.52986145 125.48262787]
[97.99018860 140.05900574]
[94.45051575 154.63537598]
[90.91084290 169.21176147]
[95.17308807 184.44802856]
[84.65094757 194.99002075]
[81.11127472 209.56639099]
[77.57160187 224.14277649]
[83.16413879 241.68714905]
[70.56492615 253.90298462]
[67.24266052 268.53042603]
[63.92040253 283.15789795]
[60.59814453 297.78536987]
[58.48352051 312.63555908]
[57.59070587 327.60897827]
[56.69788742 342.58236694]
[55.80507278 357.55578613]
[54.91225815 372.52917480]
[61.81443787 386.76541138]
[53.33331680 399.00958252]
[52.44049835 413.98300171]
[59.34268188 428.21923828]
[50.86155701 440.46340942]
[49.96874237 455.43682861]
[49.07592773 470.41021729]
[48.18310928 485.38363647]
[58.39569092 497.14547729]
[57.27694702 512.31793213]
[46.00089264 521.98156738]
[45.10807800 536.95495605]
[44.21526337 551.92840576]
[51.11744308 566.16461182]
[42.63632202 578.40881348]
[41.74350357 593.38220215]
[40.85068893 608.35559082]
[39.95787430 623.32897949]
[52.47710800 632.34411621]
[58.11375427 646.70489502]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 208]
[8 207]
[9 206]
[10 205]
[12 203]
[13 202]
[14 201]
[17 198]
[18 197]
[19 196]
[20 195]
[22 193]
[23 192]
[25 190]
[26 189]
[27 188]
[28 187]
[29 186]
[41 185]
[42 184]
[43 183]
[44 182]
[47 180]
[48 179]
[49 178]
[51 176]
[52 175]
[53 174]
[54 173]
[55 172]
[56 169]
[57 167]
[58 166]
[59 165]
[60 164]
[62 162]
[63 161]
[64 159]
[65 158]
[66 157]
[67 156]
[76 155]
[77 154]
[78 153]
[79 152]
[80 151]
[81 150]
[82 148]
[83 147]
[87 146]
[88 145]
[89 144]
[90 143]
[91 142]
[95 141]
[96 140]
[97 139]
[98 138]
[99 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
