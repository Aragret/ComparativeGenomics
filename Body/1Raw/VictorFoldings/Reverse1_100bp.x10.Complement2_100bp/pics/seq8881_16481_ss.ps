%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[77.12301636 572.56799316]
[62.58938980 576.31506348]
[47.79319000 578.83276367]
[32.83820343 580.10357666]
[17.82932663 580.11853027]
[2.87184310 578.87744141]
[-11.92933369 576.38916016]
[-26.47038078 572.67102051]
[-40.64930344 567.74914551]
[-54.36664200 561.65808105]
[-67.52617645 554.44049072]
[-80.03560638 546.14709473]
[-91.80718231 536.83599854]
[-102.75833893 526.57250977]
[-112.81224823 515.42871094]
[-121.89840698 503.48263550]
[-129.95306396 490.81814575]
[-136.91972351 477.52407837]
[-142.74952698 463.69369507]
[-147.40156555 449.42395020]
[-150.84323120 434.81500244]
[-153.05036926 419.96929932]
[-154.00750732 404.99096680]
[-153.70791626 389.98507690]
[-152.15370178 375.05688477]
[-149.35577393 360.31109619]
[-145.33375549 345.85116577]
[-140.11584473 331.77847290]
[-133.73866272 318.19180298]
[-126.24694061 305.18640137]
[-117.69321442 292.85348511]
[-108.13748932 281.27963257]
[-97.64678955 270.54592896]
[-86.29470825 260.72775269]
[-74.16086578 251.89392090]
[-61.33038330 244.10643005]
[-47.89325333 237.41986084]
[-33.94372559 231.88116455]
[-19.57965279 227.52915955]
[-4.90178871 224.39437866]
[9.98691177 222.49882507]
[24.98201180 221.85577393]
[39.97832870 222.46974182]
[54.87067795 224.33642578]
[57.97478867 209.66113281]
[61.07889938 194.98582458]
[64.18300629 180.31053162]
[67.28711700 165.63522339]
[70.39122772 150.95991516]
[73.49533844 136.28462219]
[64.14582825 148.01435852]
[52.11066055 156.96726990]
[38.18808746 162.54956055]
[23.30154419 164.39097595]
[8.43839741 162.36935425]
[-5.41553020 156.61882019]
[-17.34135818 147.52076721]
[-26.54808998 135.67863464]
[-32.42507553 121.87787628]
[-34.58251572 107.03383636]
[-32.87731552 92.13107300]
[-27.42257309 78.15803528]
[-18.58008385 66.04150391]
[-6.93633890 56.58511734]
[6.73637629 50.41609573]
[21.53119850 47.94359589]
[36.46683884 49.33161926]
[50.55267334 54.48809814]
[62.85443878 63.07102585]
[72.55619812 74.51112366]
[79.01447296 88.04961395]
[81.80091095 102.78852844]
[80.72966766 117.75533295]
[88.39026642 104.85900879]
[95.76095581 91.79482269]
[102.83806610 78.56929016]
[109.91516876 65.34376526]
[116.99227142 52.11823654]
[124.06938171 38.89271164]
[131.14648438 25.66718292]
[138.22358704 12.44165611]
[145.30068970 -0.78387189]
[130.97026062 3.64765215]
[117.09568787 -2.05290890]
[110.02026367 -15.27933502]
[112.97876740 -29.98468208]
[124.61861420 -39.44586563]
[139.61822510 -39.33735657]
[151.11996460 -29.70876503]
[153.86511230 -14.96032524]
[162.27973938 -27.37782097]
[170.69435120 -39.79531479]
[179.10897827 -52.21281052]
[187.52359009 -64.63031006]
[188.85993958 -80.39497375]
[202.40481567 -86.59059906]
[210.81942749 -99.00809479]
[219.23405457 -111.42559052]
[207.82406616 -121.18736267]
[197.57881165 -132.16528320]
[188.62713623 -144.22129822]
[181.08161926 -157.20379639]
[175.03717041 -170.94950867]
[170.56977844 -185.28556824]
[167.73562622 -200.03166199]
[166.57038879 -215.00238037]
[167.08868408 -230.00942993]
[169.28401184 -244.86407471]
[173.12875366 -259.37951660]
[178.57456970 -273.37319946]
[185.55297852 -286.66912842]
[193.97619629 -299.10012817]
[203.73829651 -310.50982666]
[214.71652222 -320.75473022]
[226.77281189 -329.70605469]
[239.75553894 -337.25119019]
[253.50143433 -343.29522705]
[267.83761597 -347.76217651]
[282.58380127 -350.59588623]
[297.55456543 -351.76068115]
[312.56158447 -351.24194336]
[327.41616821 -349.04617310]
[341.93148804 -345.20098877]
[355.92501831 -339.75476074]
[369.22073364 -332.77593994]
[381.65145874 -324.35235596]
[393.06088257 -314.58990479]
[403.30548096 -303.61138916]
[412.25643921 -291.55484009]
[419.80114746 -278.57186890]
[425.84478760 -264.82580566]
[430.31134033 -250.48948669]
[433.14459229 -235.74320984]
[434.30892944 -220.77243042]
[433.78973389 -205.76541138]
[431.59353638 -190.91090393]
[427.74792480 -176.39569092]
[422.30126953 -162.40234375]
[415.32205200 -149.10681152]
[406.89810181 -136.67633057]
[397.13531494 -125.26721954]
[386.15646362 -115.02294922]
[374.09963989 -106.07235718]
[361.11648560 -98.52800751]
[347.37023926 -92.48478699]
[333.03378296 -88.01867676]
[318.28741455 -85.18585968]
[303.31658936 -84.02195740]
[288.30960083 -84.54160309]
[273.45513916 -86.73826599]
[258.94006348 -90.58431244]
[244.94685364 -96.03138733]
[231.65155029 -103.01097107]
[223.23692322 -90.59347534]
[214.82231140 -78.17598724]
[214.08782959 -63.29949951]
[199.94108582 -56.21569061]
[191.52647400 -43.79819489]
[183.11184692 -31.38069725]
[174.69723511 -18.96320152]
[166.28260803 -6.54570675]
[158.52622986 6.29323339]
[151.44911194 19.51876068]
[144.37200928 32.74428940]
[137.29490662 45.96981430]
[130.21780396 59.19534302]
[123.14069366 72.42086792]
[116.06359100 85.64640045]
[108.98648834 98.87192535]
[109.56988525 102.68401337]
[108.47013855 106.73474884]
[105.61833954 110.26664734]
[101.28659821 112.51959991]
[93.62599945 125.41593170]
[88.17063904 139.38873291]
[85.06652832 154.06402588]
[81.96241760 168.73933411]
[78.85831451 183.41464233]
[75.75420380 198.08993530]
[72.65009308 212.76524353]
[69.54598236 227.44053650]
[83.91867828 231.76397705]
[97.87918854 237.27493286]
[111.32958984 243.93475342]
[124.17553711 251.69673157]
[136.32691956 260.50640869]
[147.69850159 270.30200195]
[158.21052551 281.01480103]
[167.78924561 292.56964111]
[176.36747742 304.88552856]
[183.88505554 317.87600708]
[190.28924561 331.44998169]
[195.53511047 345.51223755]
[199.58587646 359.96414185]
[202.41313171 374.70434570]
[203.99702454 389.62942505]
[204.32644653 404.63467407]
[203.39910889 419.61489868]
[201.22149658 434.46496582]
[197.80888367 449.08071899]
[193.18522644 463.35968018]
[187.38293457 477.20162964]
[180.44271851 490.50952148]
[172.41326904 503.19000244]
[163.35089111 515.15411377]
[153.31915283 526.31793213]
[142.38842773 536.60314941]
[130.63539124 545.93762207]
[118.14247894 554.25592041]
[104.99732208 561.49963379]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 181]
[45 180]
[46 179]
[47 178]
[48 177]
[49 176]
[50 175]
[73 174]
[74 173]
[75 169]
[76 168]
[77 167]
[78 166]
[79 165]
[80 164]
[81 163]
[82 162]
[90 161]
[91 160]
[92 159]
[93 158]
[94 157]
[96 155]
[97 154]
[98 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
