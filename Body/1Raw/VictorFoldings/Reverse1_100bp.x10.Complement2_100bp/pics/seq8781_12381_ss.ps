%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[129.86361694 778.78070068]
[116.19728088 772.57348633]
[103.13302612 765.18280029]
[90.77308655 756.66638184]
[79.21420288 747.09088135]
[68.54684448 736.53131104]
[58.85449219 725.07025146]
[50.21301270 712.79736328]
[42.69003296 699.80883789]
[36.34443283 686.20623779]
[31.22587395 672.09600830]
[27.37442017 657.58862305]
[24.82021332 642.79766846]
[23.58324242 627.83880615]
[23.67319107 612.82916260]
[25.08935547 597.88616943]
[27.82065010 583.12683105]
[31.84569931 568.66668701]
[37.13299942 554.61883545]
[43.64117432 541.09326172]
[51.31928253 528.19580078]
[60.10723114 516.02740479]
[69.93624878 504.68334961]
[80.72939301 494.25234985]
[92.40221405 484.81610107]
[104.86333466 476.44839478]
[118.01523590 469.21478271]
[131.75497437 463.17187500]
[145.97503662 458.36691284]
[160.56411743 454.83755493]
[158.33900452 440.00350952]
[156.11389160 425.16946411]
[153.88876343 410.33541870]
[151.66365051 395.50137329]
[149.32817078 380.68432617]
[146.88243103 365.88504028]
[144.43670654 351.08578491]
[141.99098206 336.28649902]
[139.54525757 321.48724365]
[137.34757996 319.74700928]
[135.70680237 317.03143311]
[134.99789429 313.54818726]
[135.51376343 309.63687134]
[137.42190552 305.73651123]
[135.86138916 290.81790161]
[134.30085754 275.89929199]
[132.74034119 260.98068237]
[130.07453918 246.21946716]
[126.31824493 231.69741821]
[122.56194305 217.17535400]
[118.80564117 202.65328979]
[115.04933929 188.13124084]
[111.29303741 173.60917664]
[100.61510468 163.22500610]
[104.65003967 147.92697144]
[100.89373779 133.40490723]
[97.13743591 118.88285065]
[84.70613098 111.43913269]
[81.07765961 97.41128540]
[88.34050751 84.87345123]
[84.58420563 70.35139465]
[74.83846283 81.75404358]
[59.84272385 81.39663696]
[50.65128326 69.54263306]
[54.03973389 54.93036270]
[67.51023102 48.33145142]
[81.13177490 54.60910034]
[78.46598053 39.84788132]
[75.80018616 25.08666611]
[73.13438416 10.32544804]
[70.46858978 -4.43576908]
[67.80279541 -19.19698524]
[65.13700104 -33.95820236]
[56.65650177 -21.58560753]
[42.24137878 -17.43780518]
[28.48203468 -23.41111565]
[21.66905403 -36.77462006]
[24.91724205 -51.41870880]
[36.74156952 -60.64829636]
[51.73611069 -60.24374390]
[63.04647064 -50.38838577]
[61.93082428 -65.34683990]
[53.18854523 -78.53330994]
[59.95780182 -91.80080414]
[58.84215546 -106.75926208]
[55.08314133 -115.08438110]
[57.82294083 -121.94844055]
[56.93012619 -136.92184448]
[56.03731155 -151.89524841]
[55.14449310 -166.86865234]
[54.25167847 -181.84205627]
[50.93578720 -187.56188965]
[50.99707794 -193.24459839]
[53.56195068 -197.27331543]
[53.11534119 -212.26666260]
[52.66873550 -227.26000977]
[38.26871872 -231.99449158]
[26.35833740 -241.37098694]
[18.37582397 -254.25723267]
[15.28511143 -269.09713745]
[17.45941544 -284.09875488]
[24.63617706 -297.45053101]
[35.94877243 -307.54019165]
[50.03114319 -313.14932251]
[65.18277740 -313.60064697]
[79.57405090 -308.83963013]
[91.46713257 -299.44122314]
[99.42588043 -286.54028320]
[102.48924255 -271.69470215]
[100.28730011 -256.69711304]
[93.08593750 -243.35859680]
[81.75477600 -233.28981018]
[67.66208649 -227.70661926]
[68.10869598 -212.71327209]
[68.55529785 -197.71990967]
[69.22508240 -182.73487854]
[70.11789703 -167.76147461]
[71.01071930 -152.78807068]
[71.90353394 -137.81466675]
[72.79634857 -122.84125519]
[73.80060577 -107.87490845]
[74.91625977 -92.91645813]
[83.57873535 -80.79991150]
[76.88927460 -66.46248627]
[78.00492859 -51.50403214]
[79.89821625 -36.62400055]
[82.56401062 -21.86278152]
[85.22980499 -7.10156441]
[87.89560699 7.65965271]
[90.56140137 22.42086983]
[93.22719574 37.18208694]
[95.89299011 51.94330597]
[99.10626221 66.59509277]
[102.86256409 81.11714935]
[115.29386902 88.56086731]
[118.92234039 102.58871460]
[111.65949249 115.12654877]
[115.41579437 129.64860535]
[119.17209625 144.17066956]
[130.11869812 155.59355164]
[125.81510162 169.85287476]
[129.57139587 184.37493896]
[133.32769775 198.89698792]
[137.08399963 213.41905212]
[140.84030151 227.94111633]
[144.59660339 242.46316528]
[150.13102722 228.52149963]
[161.83323669 219.13755798]
[176.64428711 216.76428223]
[190.69264221 222.02204895]
[200.30606079 233.53648376]
[202.97163391 248.29772949]
[197.99258423 262.44726562]
[186.67041016 272.28640747]
[171.96473694 275.24322510]
[157.71955872 270.54483032]
[147.65895081 259.42016602]
[149.21946716 274.33877563]
[150.77998352 289.25738525]
[152.34051514 304.17599487]
[154.34452820 319.04150391]
[156.79025269 333.84078979]
[159.23597717 348.64004517]
[161.68170166 363.43933105]
[164.12744141 378.23858643]
[168.61419678 386.19515991]
[166.49769592 393.27627563]
[168.72280884 408.11032104]
[170.94793701 422.94436646]
[173.17304993 437.77841187]
[175.39816284 452.61245728]
[190.38069153 451.70605469]
[205.38468933 452.12734985]
[220.29273987 453.87310791]
[234.98817444 456.92959595]
[249.35595703 461.27291870]
[263.28363037 466.86907959]
[276.66223145 473.67428589]
[289.38702393 481.63528442]
[301.35842896 490.68975830]
[312.48272705 500.76681519]
[322.67288208 511.78765869]
[331.84912109 523.66595459]
[339.93963623 536.30877686]
[346.88110352 549.61718750]
[352.61920166 563.48699951]
[357.10903931 577.80969238]
[360.31542969 592.47314453]
[362.21331787 607.36254883]
[362.78781128 622.36151123]
[362.03445435 637.35247803]
[359.95913696 652.21826172]
[356.57809448 666.84240723]
[351.91775513 681.11053467]
[346.01464844 694.91088867]
[338.91494751 708.13555908]
[330.67422485 720.68103027]
[321.35696411 732.44903564]
[311.03610229 743.34753418]
[299.79238892 753.29125977]
[287.71386719 762.20227051]
[274.89505005 770.01092529]
[261.43621826 776.65612793]
[247.44279480 782.08575439]
[233.02423096 786.25744629]
[218.29339600 789.13842773]
[203.36558533 790.70623779]
[188.35762024 790.94860840]
[173.38697815 789.86358643]
[158.57080078 787.45965576]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 171]
[31 170]
[32 169]
[33 168]
[34 167]
[35 165]
[36 164]
[37 163]
[38 162]
[39 161]
[44 160]
[45 159]
[46 158]
[47 157]
[48 146]
[49 145]
[50 144]
[51 143]
[52 142]
[53 141]
[55 139]
[56 138]
[57 137]
[60 134]
[61 133]
[67 132]
[68 131]
[69 130]
[70 129]
[71 128]
[72 127]
[73 126]
[81 125]
[82 124]
[84 122]
[85 121]
[87 120]
[88 119]
[89 118]
[90 117]
[91 116]
[94 115]
[95 114]
[96 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
