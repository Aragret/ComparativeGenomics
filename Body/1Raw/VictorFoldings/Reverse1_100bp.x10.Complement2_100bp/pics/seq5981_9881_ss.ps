%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxGUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUA\
) } def
/len { sequence length } bind def

/coor [
[102.88566589 858.85064697]
[88.17514038 855.88800049]
[73.70108795 851.92840576]
[59.53099823 846.99023438]
[45.73093414 841.09661865]
[32.36523819 834.27496338]
[19.49622726 826.55706787]
[7.18390512 817.97900391]
[-4.51432228 808.58068848]
[-15.54391193 798.40600586]
[-25.85343742 787.50231934]
[-35.39483261 775.92047119]
[-44.12361145 763.71453857]
[-51.99907303 750.94134521]
[-58.98449707 737.66052246]
[-65.04731750 723.93395996]
[-70.15926361 709.82562256]
[-74.29650879 695.40136719]
[-77.43975067 680.72833252]
[-79.57434082 665.87506104]
[-80.69033051 650.91070557]
[-80.78250885 635.90509033]
[-79.85044861 620.92822266]
[-77.89849854 606.04980469]
[-74.93575287 591.33929443]
[-70.97602844 576.86529541]
[-66.03779602 562.69525146]
[-60.14406586 548.89520264]
[-53.32232666 535.52954102]
[-45.60438156 522.66058350]
[-37.02621841 510.34832764]
[-27.62783051 498.65014648]
[-17.45303917 487.62063599]
[-6.54928160 477.31118774]
[5.03260088 467.76986694]
[17.23860931 459.04116821]
[30.01183128 451.16580200]
[43.29271317 444.18045044]
[57.01932907 438.11773682]
[71.12768555 433.00588989]
[85.55200195 428.86874390]
[100.22501373 425.72558594]
[115.07831573 423.59109497]
[113.96266937 408.63262939]
[112.84702301 393.67419434]
[111.73137665 378.71572876]
[95.83363342 372.99545288]
[83.99687958 360.86181641]
[78.63717651 344.72219849]
[80.87876129 327.80844116]
[90.31862640 313.52978516]
[105.09794617 304.78558350]
[103.53742981 289.86697388]
[101.97690582 274.94836426]
[99.48281097 272.45599365]
[98.07199860 268.63177490]
[98.35730743 263.99801636]
[100.69512939 259.33093262]
[91.85879517 251.06982422]
[90.99243164 238.60253906]
[99.10458374 228.57478333]
[98.43479919 213.58973694]
[97.76501465 198.60470581]
[97.09523010 183.61965942]
[96.42544556 168.63462830]
[95.64411926 153.65498352]
[94.75130463 138.68157959]
[93.85848999 123.70817566]
[92.96567535 108.73477173]
[83.07501221 120.01195526]
[68.26914215 122.41740417]
[55.31710434 114.85137939]
[50.14039612 100.77296448]
[55.10574341 86.61862946]
[67.94304657 78.85953522]
[82.78327179 81.04303741]
[92.84237671 92.17258453]
[93.51216125 77.18754578]
[81.47270203 64.49617767]
[82.32032776 47.36152649]
[95.04270935 36.36244202]
[95.48931122 21.36909294]
[88.16632843 7.34467030]
[96.27913666 -5.14659119]
[88.95614624 -19.17101288]
[97.06895447 -31.66227531]
[97.51556396 -46.65562439]
[97.96216583 -61.64897537]
[95.48642731 -66.24438477]
[95.06328583 -70.86761475]
[96.35960388 -74.73214722]
[98.77838898 -77.29765320]
[92.08892822 -91.63507843]
[100.75140381 -103.75162506]
[101.86705780 -118.71007538]
[102.98270416 -133.66853333]
[88.69143677 -138.48625183]
[76.04771423 -146.70738220]
[65.84634399 -157.81517029]
[58.72858810 -171.11134338]
[55.14187241 -185.76011658]
[55.31166458 -200.84063721]
[59.22728729 -215.40492249]
[66.64260864 -228.53747559]
[77.09148407 -239.41276550]
[89.91709900 -247.34713745]
[104.31321716 -251.84187317]
[119.37489319 -252.61439514]
[134.15533447 -249.61614990]
[147.72541809 -243.03561401]
[159.23214722 -233.28645325]
[167.95216370 -220.98149109]
[173.33734131 -206.89424133]
[175.04916382 -191.91023254]
[172.98001099 -176.97137451]
[167.25996399 -163.01673889]
[158.24859619 -150.92352295]
[146.51234436 -141.45191956]
[132.78898621 -135.19731140]
[117.94115448 -132.55288696]
[116.82550812 -117.59442902]
[115.70986176 -102.63597870]
[122.47911835 -89.36848450]
[113.73683929 -76.18200684]
[112.95552063 -61.20236969]
[112.50891113 -46.20901871]
[112.06230927 -31.21566963]
[119.41723633 -18.26367188]
[111.27248383 -4.69998503]
[118.62741852 8.25201225]
[110.48266602 21.81569862]
[110.03605652 36.80904770]
[120.09724426 44.85902023]
[123.73925018 57.42157745]
[119.41722870 69.97269440]
[108.49720001 77.85733032]
[107.82741547 92.84236908]
[107.93907928 107.84195709]
[108.83189392 122.81536102]
[109.72470856 137.78877258]
[110.61752319 152.76217651]
[114.25217438 161.14233398]
[111.41048431 167.96484375]
[112.08026886 182.94987488]
[112.75005341 197.93492126]
[113.41983795 212.91995239]
[114.08962250 227.90499878]
[124.35710144 243.19094849]
[115.66853333 258.43811035]
[116.89550781 273.38784790]
[118.45603180 288.30642700]
[120.01655579 303.22503662]
[132.74130249 306.78625488]
[143.47256470 314.44125366]
[150.94564819 325.26116943]
[154.28890991 337.94586182]
[153.12542725 350.97998047]
[147.61529541 362.81405640]
[138.43402100 372.04873657]
[126.68982697 377.60009766]
[127.80547333 392.55853271]
[128.92112732 407.51699829]
[130.03677368 422.47543335]
[145.04237366 422.38296509]
[160.01931763 423.31472778]
[174.89775085 425.26638794]
[189.60830688 428.22882080]
[204.08241272 432.18826294]
[218.25256348 437.12622070]
[232.05271912 443.01965332]
[245.41850281 449.84112549]
[258.28762817 457.55880737]
[270.60006714 466.13671875]
[282.29840088 475.53488159]
[293.32812500 485.70944214]
[303.63781738 496.61300659]
[313.17935181 508.19470215]
[321.90829468 520.40051270]
[329.78393555 533.17358398]
[336.76953125 546.45434570]
[342.83255005 560.18084717]
[347.94467163 574.28906250]
[352.08212280 588.71331787]
[355.22555542 603.38623047]
[357.36035156 618.23950195]
[358.47653198 633.20385742]
[358.56890869 648.20947266]
[357.63705444 663.18640137]
[355.68530273 678.06481934]
[352.72274780 692.77532959]
[348.76321411 707.24938965]
[343.82516479 721.41955566]
[337.93164062 735.21966553]
[331.11007690 748.58538818]
[323.39230347 761.45446777]
[314.81430054 773.76684570]
[305.41607666 785.46514893]
[295.24142456 796.49475098]
[284.33779907 806.80438232]
[272.75604248 816.34582520]
[260.55017090 825.07470703]
[247.77703857 832.95025635]
[234.49626160 839.93579102]
[220.76971436 845.99865723]
[206.66143799 851.11071777]
[192.23718262 855.24804688]
[177.56420898 858.39141846]
[162.71092224 860.52612305]
[147.74659729 861.64221191]
[132.74099731 861.73443604]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 163]
[44 162]
[45 161]
[46 160]
[52 152]
[53 151]
[54 150]
[58 149]
[61 147]
[62 146]
[63 145]
[64 144]
[65 143]
[66 141]
[67 140]
[68 139]
[69 138]
[77 137]
[78 136]
[81 132]
[82 131]
[84 129]
[86 127]
[87 126]
[88 125]
[92 124]
[94 122]
[95 121]
[96 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
