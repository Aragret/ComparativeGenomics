%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUUAUCUACCUCUGUAUGUCUUUAUCAGUUUGGUGUAGAUGUUUUACGGUCAUAGUCCGCCGCCGAAGCUUCGGUUUCACUACAAACCUACAUUUCACxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[167.90342712 610.91290283]
[160.33988953 597.90222168]
[155.46023560 583.66577148]
[153.45202637 568.75091553]
[154.39245605 553.73089600]
[158.24537659 539.18298340]
[164.86268616 525.66644287]
[173.99005127 513.70074463]
[185.27661133 503.74584961]
[198.28855896 496.18441772]
[212.52575684 491.30706787]
[210.52174377 476.44155884]
[208.51773071 461.57601929]
[206.51371765 446.71047974]
[204.50970459 431.84497070]
[202.06398010 417.04568481]
[199.17871094 402.32580566]
[196.29342651 387.60589600]
[193.40815735 372.88601685]
[183.36723328 361.88470459]
[188.30555725 346.85394287]
[185.42028809 332.13406372]
[182.53501892 317.41415405]
[179.64974976 302.69427490]
[174.92961121 288.45626831]
[168.45011902 274.92794800]
[161.97062683 261.39959717]
[155.49111938 247.87124634]
[149.01162720 234.34289551]
[136.53569031 226.20655823]
[137.55265808 210.41807556]
[126.25148010 206.10415649]
[120.74259186 194.88650513]
[124.46878815 182.53829956]
[118.19142914 168.91497803]
[111.91407013 155.29165649]
[105.63671112 141.66835022]
[102.66809845 156.37165833]
[92.81988525 167.68592834]
[78.66638184 172.65364075]
[63.90726089 169.97624207]
[52.40053558 160.35360718]
[47.15402985 146.30105591]
[49.53916931 131.49189758]
[58.93248367 119.79721069]
[72.87858582 114.27396393]
[87.73199463 116.36591339]
[99.60951996 125.52552795]
[95.42251587 111.12174225]
[91.02151489 96.78189850]
[79.41441345 86.03081512]
[82.86165619 71.54061890]
[78.24765015 57.26788712]
[73.63363647 42.99515533]
[70.30957031 40.20149231]
[68.25411224 36.83406067]
[67.49186707 33.36211777]
[67.89250183 30.21471977]
[69.19730377 27.73366356]
[65.44100189 13.21160412]
[61.68470001 -1.31045508]
[57.92839813 -15.83251476]
[46.98178864 -27.25540161]
[51.28539276 -41.51472092]
[47.52909470 -56.03678131]
[43.77279282 -70.55883789]
[40.01649094 -85.08090210]
[36.26019287 -99.60295868]
[32.50389099 -114.12501526]
[29.35199738 -117.11157990]
[27.50061798 -120.59538269]
[26.94637680 -124.10654449]
[27.53363991 -127.22451019]
[28.98379898 -129.62350464]
[26.09852791 -144.34339905]
[23.21325493 -159.06329346]
[20.32798195 -173.78318787]
[16.89591980 -177.71612549]
[15.45931244 -182.13081360]
[15.86750889 -186.18647766]
[17.65799713 -189.22398376]
[15.43288040 -204.05802917]
[13.20776272 -218.89207458]
[10.98264599 -233.72612000]
[2.13752770 -221.61151123]
[-12.39469910 -217.89472961]
[-25.97009659 -224.27507019]
[-32.38217545 -237.83549500]
[-28.69941902 -252.37637329]
[-16.60553360 -261.24981689]
[-1.62968349 -260.39898682]
[9.38223171 -250.21125793]
[8.71244717 -265.19628906]
[8.04266167 -280.18133545]
[7.37287664 -295.16638184]
[-7.15986347 -299.41821289]
[-19.52316666 -308.16049194]
[-28.37595749 -320.44491577]
[-32.75794601 -334.93893433]
[-32.19381332 -350.07037354]
[-26.74474716 -364.19790649]
[-17.00182343 -375.78900146]
[-4.02188253 -383.58642578]
[10.78711033 -386.74435425]
[25.81878471 -384.92022705]
[39.44261932 -378.31192017]
[50.18080139 -367.63623047]
[56.86853027 -354.05120850]
[58.78037643 -339.03042603]
[55.70895386 -324.20324707]
[47.98742676 -311.17800903]
[36.45337296 -301.36761475]
[22.35791588 -295.83615112]
[23.02770042 -280.85113525]
[23.69748497 -265.86608887]
[24.36727142 -250.88104248]
[25.81668854 -235.95123291]
[28.04180717 -221.11718750]
[30.26692390 -206.28315735]
[32.49204254 -191.44911194]
[35.04787445 -176.66845703]
[37.93314743 -161.94856262]
[40.81841660 -147.22866821]
[43.70368958 -132.50877380]
[47.02595139 -117.88131714]
[50.78224945 -103.35926056]
[54.53855133 -88.83720398]
[58.29485321 -74.31513977]
[62.05115509 -59.79308319]
[65.80745697 -45.27102280]
[76.48538971 -34.88685226]
[72.45045471 -19.58881569]
[76.20675659 -5.06675577]
[79.96305847 9.45530319]
[83.71936035 23.97736359]
[87.90637207 38.38114548]
[92.52037811 52.65387726]
[97.13439178 66.92661285]
[108.41146851 76.65680695]
[105.29425049 92.16788483]
[109.30242157 95.55144501]
[111.12953186 100.93985748]
[109.82629395 106.93473053]
[114.01330566 121.33851624]
[119.26002502 135.39099121]
[125.53738403 149.01429749]
[131.81474304 162.63761902]
[138.09210205 176.26094055]
[153.37054443 186.53958130]
[151.08100891 203.93858337]
[164.02041626 213.04255676]
[162.53997803 227.86340332]
[169.01947021 241.39175415]
[175.49896240 254.92008972]
[181.97845459 268.44845581]
[188.45796204 281.97677612]
[189.17616272 266.99398804]
[194.65910339 253.03199768]
[204.32817078 241.56423950]
[217.16294861 233.80096436]
[231.80894470 230.56141663]
[246.72055054 232.18748474]
[260.32409668 238.50756836]
[271.18395996 248.85470581]
[278.15411377 262.13690186]
[280.49893188 276.95251465]
[277.97097778 291.73794556]
[270.83706665 304.93292236]
[259.85000610 315.14489746]
[246.16929626 321.29620361]
[231.23870850 322.73764038]
[216.63391113 319.31713867]
[203.89617920 311.39566040]
[194.36964417 299.80899048]
[197.25491333 314.52890015]
[200.14018250 329.24877930]
[203.02545166 343.96865845]
[213.27275085 356.02285767]
[208.12805176 370.00073242]
[211.01332092 384.72064209]
[213.89859009 399.44052124]
[216.78387451 414.16043091]
[219.75241089 417.32928467]
[221.39314270 420.91711426]
[221.73741150 424.45504761]
[220.96560669 427.53253174]
[219.37522888 429.84094238]
[221.37924194 444.70648193]
[223.38325500 459.57202148]
[225.38726807 474.43753052]
[227.39128113 489.30307007]
[242.41178894 490.23620605]
[256.96154785 494.08206177]
[270.48132324 500.69281006]
[282.45144653 509.81436157]
[292.41180420 521.09606934]
[299.97955322 534.10437012]
[304.86380005 548.33917236]
[306.87686157 563.25341797]
[305.94128418 578.27374268]
[302.09307861 592.82287598]
[295.48013306 606.34161377]
[286.35665894 618.31024170]
[275.07330322 628.26879883]
[262.06381226 635.83441162]
[247.82818604 640.71636963]
[232.91363525 642.72698975]
[217.89344788 641.78900146]
[203.34492493 637.93841553]
[189.82728577 631.32330322]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 191]
[12 190]
[13 189]
[14 188]
[15 187]
[16 182]
[17 181]
[18 180]
[19 179]
[21 177]
[22 176]
[23 175]
[24 174]
[25 156]
[26 155]
[27 154]
[28 153]
[29 152]
[31 150]
[34 148]
[35 147]
[36 146]
[37 145]
[48 144]
[49 143]
[50 140]
[52 138]
[53 137]
[54 136]
[59 135]
[60 134]
[61 133]
[62 132]
[64 130]
[65 129]
[66 128]
[67 127]
[68 126]
[69 125]
[74 124]
[75 123]
[76 122]
[77 121]
[81 120]
[82 119]
[83 118]
[84 117]
[92 116]
[93 115]
[94 114]
[95 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
