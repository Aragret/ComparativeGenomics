%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCCUGCUAAUCAAAAUCGUAACCUCAUCCAAAUCCAAUACAUGCAUCAGAUCCGGUAUACACAACCUCUAACUCUGAUCAUCCCGAUCCGGGUGGCGAxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[17.88646507 458.30941772]
[14.52758217 442.62191772]
[24.80935097 430.30670166]
[24.80935097 415.30670166]
[24.80935097 400.30670166]
[24.80935097 385.30670166]
[17.89987755 398.62057495]
[7.41589689 409.34838867]
[-5.73562145 416.56210327]
[-20.41693878 419.63763428]
[-35.35797501 418.30892944]
[-49.26617813 412.69094849]
[-60.93835449 403.26968384]
[-69.36474609 390.86016846]
[-73.81637573 376.53594971]
[-73.90813446 361.53622437]
[-69.63209534 347.15863037]
[-61.35816956 334.64694214]
[-49.80213547 325.08355713]
[-35.96370697 319.29583740]
[-21.04004669 317.78442383]
[-6.32219982 320.68011475]
[6.91659307 327.73236084]
[17.53104401 338.33111572]
[24.60289574 351.55944824]
[27.52019310 366.26947021]
[31.70720482 351.86569214]
[35.89421463 337.46191406]
[39.97388458 323.02737427]
[43.94598007 308.56283569]
[47.91807556 294.09832764]
[43.82724762 279.77648926]
[54.94271088 268.51785278]
[58.91481018 254.05334473]
[62.88690567 239.58882141]
[66.42657471 225.01243591]
[69.53068542 210.33714294]
[72.63479614 195.66183472]
[75.73890686 180.98652649]
[78.84301758 166.31123352]
[81.94712830 151.63592529]
[84.94190216 136.93792725]
[87.82717896 122.21803284]
[90.71244812 107.49813843]
[80.92087555 118.86146545]
[67.72006226 125.98455048]
[52.84678268 127.93023682]
[38.25788879 124.44252777]
[25.87279129 115.98029327]
[17.32096672 103.65689087]
[13.72755432 89.09366608]
[15.56532860 74.20667267]
[22.59249878 60.95454788]
[33.88451767 51.08083344]
[47.95573044 45.88458633]
[62.95482635 46.04946136]
[76.90840912 51.55377197]
[87.98065948 61.67332840]
[94.71481323 75.07672882]
[96.22470093 90.00289154]
[102.29853821 76.28762817]
[108.37236786 62.57236099]
[114.44620514 48.85709381]
[120.52003479 35.14182663]
[124.70704651 20.73804474]
[126.93216705 5.90400028]
[129.15728760 -8.93004322]
[131.38240051 -23.76408768]
[133.60751343 -38.59812927]
[135.83264160 -53.43217468]
[134.01086426 -62.38309479]
[138.20289612 -68.46985626]
[140.64862061 -83.26912689]
[143.09434509 -98.06839752]
[128.96382141 -103.22247314]
[116.02445984 -110.88334656]
[104.71617126 -120.78884888]
[95.42313385 -132.60052490]
[88.46067047 -145.91520691]
[84.06462097 -160.27876282]
[82.38328552 -175.20155334]
[83.47247314 -190.17523193]
[87.29362488 -204.68992615]
[93.71519470 -218.25167847]
[102.51715851 -230.39924622]
[113.39855194 -240.71980286]
[125.98778534 -248.86289978]
[139.85531616 -254.55244446]
[154.52828979 -257.59603882]
[169.50669861 -257.89144897]
[171.95243835 -272.69070435]
[174.39816284 -287.48999023]
[176.84388733 -302.28924561]
[179.28961182 -317.08853149]
[181.40423584 -331.93872070]
[183.18670654 -346.83242798]
[184.96917725 -361.72616577]
[185.86198425 -376.69955444]
[185.86198425 -391.69955444]
[185.86198425 -406.69955444]
[172.52085876 -414.30941772]
[164.78588867 -427.57839966]
[164.73774719 -442.93722534]
[172.38937378 -456.25442505]
[185.68254089 -463.94775391]
[201.04142761 -463.94775391]
[214.33459473 -456.25442505]
[221.98622131 -442.93722534]
[221.93807983 -427.57839966]
[214.20310974 -414.30941772]
[200.86198425 -406.69955444]
[200.86198425 -391.69955444]
[200.86198425 -376.69955444]
[210.73703003 -387.99041748]
[225.33666992 -391.43289185]
[239.21560669 -385.74298096]
[247.19734192 -373.04287720]
[246.30488586 -358.06945801]
[236.87109375 -346.40740967]
[222.41455078 -342.40637207]
[208.32717896 -347.55865479]
[199.86288452 -359.94369507]
[198.08042908 -345.04998779]
[196.29795837 -330.15625000]
[198.17808533 -327.17340088]
[198.70684814 -323.13168335]
[197.40232849 -318.67617798]
[194.08888245 -314.64279175]
[191.64315796 -299.84353638]
[189.19743347 -285.04425049]
[186.75170898 -270.24499512]
[184.30596924 -255.44570923]
[198.39295959 -250.34696960]
[211.30654907 -242.74441528]
[222.60623169 -232.89573669]
[231.90618896 -221.13522339]
[238.88856506 -207.86251831]
[243.31425476 -193.52894592]
[245.03111267 -178.62222290]
[243.97924805 -163.64988708]
[240.19299316 -149.12193298]
[233.79989624 -135.53350830]
[225.01635742 -123.34802246]
[214.14030457 -112.98133087]
[201.54116821 -104.78755188]
[187.64721680 -99.04697418]
[172.93106079 -95.95644379]
[157.89361572 -95.62266541]
[155.44789124 -80.82339478]
[153.00216675 -66.02412415]
[150.66667175 -51.20705795]
[148.44155884 -36.37301254]
[146.21644592 -21.53897095]
[143.99133301 -6.70492649]
[141.76620483 8.12911701]
[139.54109192 22.96316147]
[148.43582153 10.88492298]
[160.59086609 2.09544206]
[174.84767151 -2.56752539]
[189.84739685 -2.65953445]
[204.16033936 1.82818449]
[216.42228699 10.46789074]
[225.46452332 22.43610191]
[230.42517090 36.59208679]
[230.83145142 51.58658218]
[226.64460754 65.99041748]
[218.26371765 78.43069458]
[206.48757935 87.72170258]
[192.43864441 92.97787476]
[177.45594788 93.69822693]
[162.96755981 89.81409454]
[150.35440063 81.69570160]
[140.81869507 70.11682892]
[135.26931763 56.18110275]
[134.23530579 41.21566010]
[128.16146851 54.93092728]
[122.08763885 68.64619446]
[116.01380157 82.36145782]
[109.93996429 96.07672882]
[105.43234253 110.38341522]
[102.54706573 125.10330200]
[99.66179657 139.82319641]
[101.08206940 148.84652710]
[96.62242889 154.74003601]
[93.51831818 169.41534424]
[90.41420746 184.09063721]
[87.31009674 198.76594543]
[84.20599365 213.44125366]
[81.10188293 228.11654663]
[82.59390259 232.19427490]
[82.70005035 236.13803101]
[81.63261414 239.52861023]
[79.71822357 242.05877686]
[77.35143280 243.56091309]
[73.37933350 258.02542114]
[69.40723419 272.48995972]
[73.21395111 287.84637451]
[62.38259888 298.07040405]
[58.41050339 312.53494263]
[54.43840790 326.99945068]
[55.18362808 336.10345459]
[50.29799652 341.64892578]
[46.11098862 356.05270386]
[41.92397690 370.45648193]
[39.80935287 385.30670166]
[39.80935287 400.30670166]
[39.80935287 415.30670166]
[39.80935287 430.30670166]
[50.09112167 442.62191772]
[46.73223877 458.30941772]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 208]
[4 207]
[5 206]
[6 205]
[26 204]
[27 203]
[28 202]
[29 200]
[30 199]
[31 198]
[33 196]
[34 195]
[35 194]
[36 189]
[37 188]
[38 187]
[39 186]
[40 185]
[41 184]
[42 182]
[43 181]
[44 180]
[60 179]
[61 178]
[62 177]
[63 176]
[64 175]
[65 156]
[66 155]
[67 154]
[68 153]
[69 152]
[70 151]
[72 150]
[73 149]
[74 148]
[90 132]
[91 131]
[92 130]
[93 129]
[94 128]
[95 124]
[96 123]
[97 122]
[98 113]
[99 112]
[100 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
