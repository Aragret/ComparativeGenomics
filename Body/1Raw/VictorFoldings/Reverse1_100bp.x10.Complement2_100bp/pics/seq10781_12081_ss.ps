%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUCAUCUCCCUACUACGAUUAUUAAUCCGACACCCACCAACACAACUAAGUUUAAUACACAAAAAACCUUUCAGUACAGUCACCAUCAUUAUAUUAACxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[-90.50669098 455.06152344]
[-82.76133728 467.94046021]
[-77.02208710 481.82998657]
[-73.41717529 496.41976929]
[-72.02711487 511.38391113]
[-72.88298035 526.38806152]
[-75.96563721 541.09710693]
[-81.20622253 555.18231201]
[-88.48765564 568.32910156]
[-97.64727783 580.24377441]
[-108.48045349 590.66009521]
[-120.74515533 599.34539795]
[-134.16740417 606.10565186]
[-148.44732666 610.78985596]
[-163.26591492 613.29327393]
[-178.29211426 613.56005859]
[-193.19021606 611.58422852]
[-207.62741089 607.40991211]
[-221.28117371 601.13037109]
[-233.84645081 592.88586426]
[-245.04254150 582.86065674]
[-254.61932373 571.27862549]
[-262.36285400 558.39862061]
[-268.10009766 544.50823975]
[-271.70294189 529.91796875]
[-273.09088135 514.95361328]
[-272.23287964 499.94955444]
[-269.14813232 485.24099731]
[-263.90554810 471.15649414]
[-256.62222290 458.01074219]
[-247.46090698 446.09738159]
[-236.62625122 435.68258667]
[-224.36030579 426.99902344]
[-210.93710327 420.24069214]
[-196.65650940 415.55856323]
[-181.83757019 413.05725098]
[-166.81134033 412.79260254]
[-151.91349792 414.77056885]
[-137.47689819 418.94692993]
[-123.82404327 425.22842407]
[-115.59523010 412.68704224]
[-107.36642456 400.14562988]
[-99.13761902 387.60421753]
[-90.90880585 375.06283569]
[-95.26774597 362.93725586]
[-91.79505920 350.32684326]
[-81.54257202 341.89495850]
[-68.11087036 340.89291382]
[-59.69625473 328.47540283]
[-51.28163528 316.05792236]
[-42.86701584 303.64041138]
[-34.45240021 291.22293091]
[-26.03778076 278.80541992]
[-17.71583557 266.32562256]
[-9.48702812 253.78422546]
[-1.25822067 241.24282837]
[-3.40957832 229.33912659]
[3.34333730 218.82333374]
[15.83932209 215.62753296]
[24.25394058 203.21003723]
[32.57588577 190.73023987]
[40.80469131 178.18884277]
[49.03350067 165.64743042]
[57.26230621 153.10603333]
[65.49111938 140.56463623]
[73.71992493 128.02323914]
[81.76109314 115.36071014]
[89.61285400 102.57987213]
[95.78862000 88.91020203]
[100.18962097 74.57035065]
[104.59061432 60.23050308]
[108.99161530 45.89065552]
[113.39261627 31.55080986]
[117.25691986 17.05711746]
[120.57917786 2.42965674]
[116.09056091 -12.74146271]
[126.45458221 -23.43895149]
[129.44935608 -38.13695526]
[132.11515808 -52.89817429]
[134.78094482 -67.65939331]
[137.44674683 -82.42060852]
[135.89227295 -91.42179871]
[140.26367188 -97.38105011]
[135.32534790 -112.41179657]
[145.36627197 -123.41312408]
[148.25154114 -138.13301086]
[151.13682556 -152.85290527]
[136.86436462 -157.53013611]
[123.27487183 -163.92587280]
[110.57437897 -171.94317627]
[98.95540619 -181.46047974]
[88.59410095 -192.33351135]
[79.64752960 -204.39744568]
[72.25132751 -217.46940613]
[66.51762390 -231.35119629]
[62.53332901 -245.83239746]
[60.35884857 -260.69345093]
[60.02714920 -275.70910645]
[61.54325485 -290.65170288]
[64.88418579 -305.29470825]
[69.99929047 -319.41613770]
[76.81103516 -332.80197144]
[85.21614075 -345.24920654]
[95.08719635 -356.56918335]
[106.27455902 -366.59027100]
[118.60862732 -375.16058350]
[131.90242004 -382.15020752]
[145.95442200 -387.45312500]
[160.55158997 -390.98898315]
[175.47264099 -392.70419312]
[190.49136353 -392.57272339]
[205.38011169 -390.59658813]
[219.91313171 -386.80569458]
[233.87014771 -381.25759888]
[247.03953552 -374.03634644]
[259.22167969 -365.25140381]
[270.23190308 -355.03598022]
[279.90325928 -343.54495239]
[288.08917236 -330.95245361]
[294.66555786 -317.44946289]
[299.53265381 -303.24063110]
[302.61672974 -288.54138184]
[303.87100220 -273.57452393]
[303.27648926 -258.56698608]
[300.84219360 -243.74627686]
[296.60498047 -229.33705139]
[290.62915039 -215.55775452]
[283.00521851 -202.61729431]
[273.84884644 -190.71182251]
[263.29876709 -180.02185059]
[251.51496887 -170.70939636]
[238.67607117 -162.91567993]
[224.97669983 -156.75881958]
[210.62454224 -152.33215332]
[195.83717346 -149.70280457]
[180.83877563 -148.91062927]
[165.85670471 -149.96763611]
[162.97143555 -135.24774170]
[160.08616638 -120.52784729]
[165.23086548 -106.54996490]
[154.98356628 -94.49577332]
[152.20796204 -79.75481415]
[149.54216003 -64.99359894]
[146.87637329 -50.23237991]
[144.21057129 -35.47116089]
[145.90983582 -32.38168335]
[146.19709778 -28.31566238]
[144.62968445 -23.94570732]
[141.08204651 -20.11669350]
[145.80828857 -5.99182701]
[135.20663452 5.75191641]
[131.88438416 20.37937737]
[145.77429199 14.71631622]
[158.93601990 21.91138077]
[161.66722107 36.66063690]
[151.95455933 48.09148026]
[136.95785522 47.77751923]
[127.73246002 35.95180893]
[123.33145905 50.29165649]
[118.93046570 64.63150024]
[114.52946472 78.97135162]
[110.12847137 93.31119537]
[120.80857086 82.77861023]
[134.30126953 76.22521973]
[149.18266296 74.34262848]
[163.88227844 77.32950592]
[176.84881592 84.87064362]
[186.71391296 96.17019653]
[192.43644714 110.03571320]
[193.41253662 125.00392151]
[189.53916931 139.49519348]
[181.22508240 151.98022461]
[169.34771729 161.14144897]
[155.16049194 166.01205444]
[140.16064453 166.07804871]
[125.93112183 161.33244324]
[113.97360992 152.27606201]
[105.55001068 139.86465454]
[101.54929352 125.40802765]
[102.39369202 110.43162537]
[94.54193878 123.21246338]
[93.98012543 129.80001831]
[90.67235565 134.42124939]
[86.26132202 136.25204468]
[78.03251648 148.79344177]
[69.80371094 161.33483887]
[61.57490158 173.87625122]
[53.34609222 186.41764832]
[45.11728668 198.95904541]
[43.02598190 207.85086060]
[36.67143631 211.62464905]
[28.25681686 224.04214478]
[27.35939217 242.43443298]
[11.28317928 249.47163391]
[3.05437183 262.01303101]
[-5.17443609 274.55444336]
[-7.26573801 283.44625854]
[-13.62028503 287.22003174]
[-22.03490257 299.63754272]
[-30.44952202 312.05502319]
[-38.86413956 324.47253418]
[-47.27875900 336.89001465]
[-55.69337845 349.30752563]
[-52.07838821 366.42333984]
[-61.76975250 380.57934570]
[-78.36740875 383.29162598]
[-86.59621429 395.83303833]
[-94.82502747 408.37445068]
[-103.05383301 420.91583252]
[-111.28263855 433.45724487]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 210]
[41 209]
[42 208]
[43 207]
[44 206]
[48 203]
[49 202]
[50 201]
[51 200]
[52 199]
[53 198]
[54 196]
[55 195]
[56 194]
[59 192]
[60 191]
[61 189]
[62 188]
[63 187]
[64 186]
[65 185]
[66 184]
[67 181]
[68 180]
[69 162]
[70 161]
[71 160]
[72 159]
[73 158]
[74 152]
[75 151]
[77 149]
[78 145]
[79 144]
[80 143]
[81 142]
[83 141]
[85 139]
[86 138]
[87 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
