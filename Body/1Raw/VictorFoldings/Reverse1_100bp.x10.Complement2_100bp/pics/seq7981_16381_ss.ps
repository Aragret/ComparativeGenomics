%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[126.27416992 504.92501831]
[123.71139526 490.12597656]
[122.98672485 475.12417603]
[124.11113739 460.14700317]
[127.06758881 445.42153931]
[131.81126404 431.17102051]
[138.27024841 417.61148071]
[146.34661865 404.94848633]
[155.91795349 393.37399292]
[166.83914185 383.06344604]
[178.94462585 374.17318726]
[192.05088806 366.83795166]
[186.38810730 352.94793701]
[180.72532654 339.05789185]
[175.06253052 325.16787720]
[169.29650879 311.32037354]
[163.42753601 297.51620483]
[160.31195068 295.86529541]
[157.84121704 292.62332153]
[156.75440979 288.10977173]
[157.62002563 282.96215820]
[152.37330627 268.90969849]
[147.08874512 263.74295044]
[147.15478516 254.60874939]
[142.11787415 240.47972107]
[137.08094788 226.35069275]
[132.04403687 212.22166443]
[127.00711823 198.09263611]
[121.97020721 183.96360779]
[116.93328857 169.83457947]
[103.40797424 163.70256042]
[98.09855652 149.44548035]
[104.62207794 135.30046082]
[93.06029510 125.91033936]
[95.71430969 110.31332397]
[90.57234955 96.22218323]
[85.32563019 82.16971588]
[80.07891083 68.11724091]
[74.72772980 54.10421753]
[69.27236938 40.13142014]
[63.81701279 26.15862274]
[49.61951065 19.75014114]
[44.28604889 5.50202322]
[50.48305130 -7.99363375]
[45.02769470 -21.96643066]
[39.57233810 -35.93922806]
[34.11698151 -49.91202545]
[28.35094643 -63.75951385]
[22.27711296 -77.47477722]
[16.20327950 -91.19004822]
[10.12944508 -104.90531158]
[3.95367670 -118.57498169]
[-2.32368422 -132.19830322]
[-6.58690739 -135.21028137]
[-9.02471161 -139.16128540]
[-9.58509254 -143.19873047]
[-8.56195736 -146.57298279]
[-14.22474480 -160.46299744]
[-19.88753128 -174.35302734]
[-25.55031776 -188.24305725]
[-30.53016281 -192.59193420]
[-32.30044937 -197.99221802]
[-31.16811943 -202.63192749]
[-36.41483688 -216.68438721]
[-41.66155624 -230.73686218]
[-46.90827179 -244.78933716]
[-61.47513580 -241.14427185]
[-76.35852814 -239.15312195]
[-91.37126923 -238.84092712]
[-106.32456970 -240.21163940]
[-121.03037262 -243.24798584]
[-135.30372620 -247.91180420]
[-148.96514893 -254.14443970]
[-161.84281921 -261.86749268]
[-173.77478027 -270.98388672]
[-184.61099243 -281.37890625]
[-194.21516418 -292.92187500]
[-202.46652222 -305.46759033]
[-209.26129150 -318.85827637]
[-214.51402283 -332.92559814]
[-218.15866089 -347.49255371]
[-220.14936829 -362.37600708]
[-220.46110535 -377.38876343]
[-219.08995056 -392.34201050]
[-216.05316162 -407.04772949]
[-211.38891602 -421.32095337]
[-205.15586853 -434.98217773]
[-197.43241882 -447.85961914]
[-188.31568909 -459.79132080]
[-177.92033386 -470.62719727]
[-166.37709045 -480.23104858]
[-153.83113098 -488.48202515]
[-140.44021606 -495.27639771]
[-126.37276459 -500.52868652]
[-111.80567932 -504.17291260]
[-96.92217255 -506.16314697]
[-81.90940857 -506.47445679]
[-66.95618439 -505.10284424]
[-52.25056839 -502.06561279]
[-37.97748947 -497.40093994]
[-24.31644440 -491.16748047]
[-11.43924046 -483.44366455]
[0.49217963 -474.32656860]
[11.32776642 -463.93090820]
[20.93124962 -452.38735962]
[29.18185616 -439.84115601]
[35.97582626 -426.45004272]
[41.22771835 -412.38241577]
[44.87148285 -397.81524658]
[46.86129379 -382.93167114]
[47.17213440 -367.91888428]
[45.80009079 -352.96572876]
[42.76241684 -338.26019287]
[38.09731674 -323.98724365]
[31.86345673 -310.32638550]
[24.13923836 -297.44943237]
[15.02179718 -285.51828003]
[4.62579679 -274.68298340]
[-6.91802168 -265.07986450]
[-19.46448326 -256.82962036]
[-32.85580063 -250.03605652]
[-27.60908318 -235.98358154]
[-22.36236572 -221.93110657]
[-17.11564827 -207.87864685]
[-11.66029072 -193.90583801]
[-5.99750376 -180.01582336]
[-0.33471739 -166.12579346]
[5.32806921 -152.23576355]
[11.29963207 -138.47566223]
[17.57699203 -124.85234070]
[23.23119164 -120.09294891]
[23.84471130 -110.97914886]
[29.91854668 -97.26387787]
[35.99237823 -83.54861450]
[42.06621552 -69.83334351]
[45.20603180 -68.22901154]
[47.72477341 -65.02417755]
[48.87865067 -60.52730179]
[48.08977890 -55.36738586]
[53.54513550 -41.39458466]
[59.00049210 -27.42178917]
[64.45584869 -13.44899082]
[78.15773773 -7.72239685]
[83.88928986 6.37029362]
[77.78981018 20.70326614]
[83.24517059 34.67606354]
[88.70052338 48.64886093]
[94.06141663 53.73635864]
[94.13138580 62.87052155]
[99.37810516 76.92299652]
[104.62482452 90.97546387]
[110.17043304 96.82514191]
[109.84333801 105.27640533]
[121.76539612 115.67713165]
[118.75110626 130.26354980]
[132.75151062 137.09190369]
[137.65838623 151.49249268]
[131.06231689 164.79766846]
[136.09922791 178.92669678]
[141.13615417 193.05572510]
[146.17306519 207.18475342]
[151.20997620 221.31378174]
[156.24690247 235.44281006]
[161.28381348 249.57183838]
[166.42578125 263.66299438]
[171.67248535 277.71545410]
[177.23171997 291.64724731]
[183.10067749 305.45141602]
[189.33828735 312.12451172]
[188.95256042 319.50509644]
[194.61534119 333.39511108]
[200.27813721 347.28512573]
[205.94091797 361.17517090]
[220.43989563 357.25607300]
[235.31060791 355.14849854]
[250.32759094 354.88436890]
[265.26321411 356.46771240]
[279.89102173 359.87451172]
[293.98931885 365.05310059]
[307.34432983 371.92501831]
[319.75363159 380.38604736]
[331.02905273 390.30795288]
[340.99972534 401.54031372]
[349.51443481 413.91281128]
[356.44415283 427.23794556]
[361.68380737 441.31365967]
[365.15393066 455.92657471]
[366.80197144 470.85519409]
[366.60290527 485.87319946]
[364.55978394 500.75286865]
[360.70355225 515.26867676]
[355.09268188 529.20062256]
[347.81222534 542.33734131]
[338.97256470 554.47985840]
[328.70770264 565.44396973]
[317.17324829 575.06353760]
[304.54406738 583.19268799]
[291.01159668 589.70825195]
[276.78100586 594.51135254]
[262.06802368 597.52923584]
[247.09568787 598.71618652]
[232.09097290 598.05413818]
[217.28137207 595.55316162]
[202.89135742 591.25115967]
[189.13909912 585.21331787]
[176.23306274 577.53125000]
[164.36892700 568.32141113]
[153.72653198 557.72332764]
[144.46720886 545.89776611]
[136.73135376 533.02386475]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 173]
[13 172]
[14 171]
[15 170]
[16 168]
[17 167]
[21 166]
[22 165]
[24 164]
[25 163]
[26 162]
[27 161]
[28 160]
[29 159]
[30 158]
[33 155]
[35 153]
[36 151]
[37 150]
[38 149]
[39 147]
[40 146]
[41 145]
[44 142]
[45 141]
[46 140]
[47 139]
[48 135]
[49 134]
[50 133]
[51 132]
[52 130]
[53 129]
[57 128]
[58 127]
[59 126]
[60 125]
[63 124]
[64 123]
[65 122]
[66 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
