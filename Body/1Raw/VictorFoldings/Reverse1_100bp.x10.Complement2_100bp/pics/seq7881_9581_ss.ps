%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxGGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUU\
) } def
/len { sequence length } bind def

/coor [
[205.73979187 320.80172729]
[211.89468384 307.10739136]
[219.44734192 294.13143921]
[228.31500244 282.01605225]
[238.40049744 270.89398193]
[228.40231323 259.71200562]
[218.40414429 248.53004456]
[208.40597534 237.34806824]
[194.15478516 233.01759338]
[190.72424316 217.57278442]
[176.47306824 213.24230957]
[173.04251099 197.79750061]
[158.79133606 193.46702576]
[155.36077881 178.02223206]
[145.36260986 166.84025574]
[141.88153076 166.27951050]
[138.49909973 164.00482178]
[136.01792908 160.08091736]
[135.18136597 154.92851257]
[125.69245911 143.31124878]
[116.20355988 131.69398499]
[106.71466064 120.07672882]
[94.04196930 120.31411743]
[83.50505829 113.26946259]
[78.88113403 101.46806335]
[81.82774353 89.14041138]
[72.51285553 77.38315582]
[63.19797516 65.62590790]
[48.56355286 59.61390305]
[46.72463989 44.83325195]
[37.40975952 33.07600021]
[28.09487534 21.31875038]
[18.77999115 9.56149864]
[4.14556742 3.54949546]
[2.30665636 -11.23115635]
[-7.00822639 -22.98840714]
[-16.32310867 -34.74565887]
[-25.63799286 -46.50291061]
[-34.95287323 -58.26016235]
[-44.26775742 -70.01741028]
[-53.58264160 -81.77466583]
[-68.21706390 -87.78666687]
[-70.05597687 -102.56732178]
[-79.37085724 -114.32456970]
[-76.23993683 -99.65496826]
[-76.66140747 -84.66088867]
[-80.61145020 -70.19032288]
[-87.86666870 -57.06166077]
[-98.01673126 -46.01737976]
[-110.48761749 -37.68209076]
[-124.57403564 -32.52719879]
[-139.47932434 -30.84423256]
[-154.36051941 -32.72837448]
[-168.37602234 -38.07306671]
[-180.73318481 -46.57604218]
[-190.73313904 -57.75641632]
[-197.81036377 -70.98188782]
[-201.56457520 -85.50447845]
[-201.78349304 -100.50288391]
[-198.45469666 -115.12886047]
[-191.76647949 -128.55523682]
[-182.09707642 -140.02268982]
[-169.99333191 -148.88269043]
[-156.13978577 -154.63414001]
[-141.31991577 -156.95178223]
[-126.37185669 -155.70454407]
[-112.14099884 -150.96295166]
[-99.43216705 -142.99517822]
[-88.96344757 -132.25097656]
[-93.57745361 -146.52371216]
[-98.19146729 -160.79643250]
[-111.98236084 -168.03860474]
[-116.45829773 -182.57891846]
[-109.46900940 -195.68179321]
[-114.08301544 -209.95452881]
[-118.69702911 -224.22726440]
[-123.31103516 -238.50000000]
[-138.19433594 -236.35626221]
[-153.22583008 -236.75883484]
[-167.97305298 -239.69610596]
[-182.01167297 -245.08358765]
[-194.93778992 -252.76625061]
[-206.37950134 -262.52307129]
[-216.00758362 -274.07330322]
[-223.54502869 -287.08465576]
[-228.77497864 -301.18270874]
[-231.54693604 -315.96191406]
[-231.78115845 -330.99697876]
[-229.47090149 -345.85531616]
[-224.68264771 -360.10946655]
[-217.55416870 -373.34927368]
[-208.29054260 -385.19381714]
[-197.15830994 -395.30230713]
[-184.47776794 -403.38388062]
[-170.61376953 -409.20605469]
[-155.96520996 -412.60128784]
[-140.95353699 -413.47186279]
[-126.01069641 -411.79278564]
[-111.56659698 -407.61233521]
[-98.03684235 -401.05081177]
[-85.81069946 -392.29699707]
[-75.23994446 -381.60272217]
[-66.62871552 -369.27572632]
[-60.22477722 -355.67068481]
[-56.21238327 -341.17901611]
[-54.70698166 -326.21765137]
[-55.75187683 -311.21713257]
[-59.31701279 -296.60897827]
[-65.29981232 -282.81353760]
[-73.52813721 -270.22772217]
[-83.76524353 -259.21365356]
[-95.71658325 -250.08824158]
[-109.03829956 -243.11399841]
[-104.42429352 -228.84127808]
[-99.81028748 -214.56854248]
[-95.19627380 -200.29580688]
[-81.85953522 -193.76380920]
[-76.97695160 -179.35496521]
[-83.91873169 -165.41044617]
[-79.30472565 -151.13771057]
[-74.69071198 -136.86497498]
[-67.61360931 -123.63945007]
[-58.29872513 -111.88220215]
[-44.33056259 -106.71115875]
[-41.82538986 -91.08954620]
[-32.51050568 -79.33229828]
[-23.19562340 -67.57504272]
[-13.88074112 -55.81779480]
[-4.56585789 -44.06054306]
[4.74902487 -32.30329132]
[14.06390762 -20.54603958]
[28.03207016 -15.37499332]
[30.53724289 0.24661586]
[39.85212708 12.00386715]
[49.16700745 23.76111794]
[58.48189163 35.51837158]
[72.45005035 40.68941498]
[74.95523071 56.31102371]
[84.27011108 68.06827545]
[93.58499146 79.82553101]
[110.01795197 81.35054016]
[120.36255646 94.20966339]
[118.33192444 110.58782959]
[127.82082367 122.20509338]
[137.30972290 133.82235718]
[146.79862976 145.43962097]
[156.54458618 156.84208679]
[166.54275513 168.02404785]
[181.50907898 173.15434265]
[184.22448730 187.79933167]
[199.19081116 192.92962646]
[201.90621948 207.57461548]
[216.87254333 212.70491028]
[219.58795166 227.34989929]
[229.58612061 238.53187561]
[239.58428955 249.71385193]
[249.58247375 260.89581299]
[261.75915527 252.11253357]
[274.78726196 244.65020752]
[288.52401733 238.59059143]
[302.81893921 234.00006104]
[317.51538086 230.92893982]
[332.45236206 229.41085815]
[347.46618652 229.46246338]
[362.39239502 231.08317566]
[377.06738281 234.25524902]
[391.33041382 238.94392395]
[405.02520752 245.09782410]
[418.00170898 252.64953613]
[430.11773682 261.51629639]
[441.24053955 271.60098267]
[451.24826050 282.79309082]
[460.03121948 294.97000122]
[467.49325562 307.99826050]
[473.55255127 321.73516846]
[478.14270020 336.03021240]
[481.21347046 350.72674561]
[482.73120117 365.66375732]
[482.67922974 380.67758179]
[481.05816650 395.60372925]
[477.88574219 410.27865601]
[473.19671631 424.54156494]
[467.04248047 438.23620605]
[459.49044800 451.21252441]
[450.62338257 463.32833862]
[440.53842163 474.45089722]
[429.34606934 484.45834351]
[417.16897583 493.24102783]
[404.14050293 500.70272827]
[390.40344238 506.76168823]
[376.10830688 511.35150146]
[361.41168213 514.42193604]
[346.47463989 515.93927002]
[331.46081543 515.88696289]
[316.53472900 514.26550293]
[301.85986328 511.09271240]
[287.59707642 506.40335083]
[273.90258789 500.24877930]
[260.92645264 492.69644165]
[248.81085205 483.82910156]
[237.68853760 473.74386597]
[227.68136597 462.55126953]
[218.89897156 450.37396240]
[211.43759155 437.34530640]
[205.37896729 423.60809326]
[200.78948975 409.31283569]
[197.71943665 394.61614990]
[196.20243835 379.67907715]
[196.25514221 364.66525269]
[197.87693787 349.73919678]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 157]
[6 156]
[7 155]
[8 154]
[10 152]
[12 150]
[14 148]
[15 147]
[19 146]
[20 145]
[21 144]
[22 143]
[26 140]
[27 139]
[28 138]
[30 136]
[31 135]
[32 134]
[33 133]
[35 131]
[36 130]
[37 129]
[38 128]
[39 127]
[40 126]
[41 125]
[43 123]
[44 122]
[69 121]
[70 120]
[71 119]
[74 116]
[75 115]
[76 114]
[77 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
