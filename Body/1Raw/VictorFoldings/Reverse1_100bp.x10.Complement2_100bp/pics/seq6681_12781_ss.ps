%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[77.25676727 680.59167480]
[62.39189529 683.10150146]
[47.35839081 681.98022461]
[33.03028488 677.29315186]
[20.24058914 669.31274414]
[9.73288631 658.50292969]
[2.11807728 645.49224854]
[-2.16112304 631.03704834]
[-2.85592675 615.97784424]
[0.07406051 601.19006348]
[6.45849323 587.53344727]
[15.92618942 575.80206299]
[27.92670822 566.67785645]
[41.76235580 560.69134521]
[56.62874985 558.19055176]
[57.74439621 543.23211670]
[58.86004639 528.27368164]
[59.97569656 513.31518555]
[57.33839035 506.41113281]
[61.22093964 498.14288330]
[62.55917358 483.20269775]
[63.89740753 468.26251221]
[65.23564148 453.32232666]
[66.57387543 438.38214111]
[51.05335999 429.88336182]
[40.78477478 415.40750122]
[37.87581635 397.84570312]
[42.95860672 380.73043823]
[55.05304337 367.52484131]
[71.75539398 360.92214966]
[72.42517853 345.93710327]
[73.09496307 330.95205688]
[73.76474762 315.96704102]
[74.43453217 300.98199463]
[65.51992035 285.86590576]
[75.55867767 270.42877197]
[76.00527954 255.43540955]
[73.86653137 252.63218689]
[72.97928619 248.65376282]
[73.88111115 244.09963989]
[76.82150269 239.78674316]
[77.93714905 224.82827759]
[79.05279541 209.86982727]
[80.16844940 194.91137695]
[78.44348907 192.70170593]
[77.48987579 189.67561340]
[77.62295532 186.12347412]
[79.04723358 182.44435120]
[81.82189178 179.10440063]
[83.82590485 164.23887634]
[85.82992554 149.37335205]
[87.83393860 134.50782776]
[89.83795166 119.64229584]
[91.84196472 104.77676392]
[89.68861389 99.99376678]
[90.36837769 94.34476471]
[94.13333893 89.50100708]
[81.99060822 98.30748749]
[67.01968384 97.37393188]
[56.06507874 87.12715149]
[54.13508224 72.25183105]
[62.11206818 59.54877090]
[76.34906006 54.82563782]
[90.33710480 60.24178696]
[97.68135834 73.32285309]
[101.65345764 58.85832596]
[105.62554932 44.39380264]
[109.59764862 29.92927933]
[113.56974030 15.46475506]
[117.54183960 1.00023150]
[104.54882050 8.49565792]
[89.75625610 6.00966978]
[79.92711639 -5.32117176]
[79.55514526 -20.31655884]
[88.81040192 -32.12080383]
[103.46151733 -35.33716202]
[116.81018829 -28.49515915]
[122.75370026 -14.72101879]
[128.20906067 -28.69381714]
[133.66441345 -42.66661453]
[130.46595764 -60.80087280]
[144.58427429 -71.22393036]
[149.83099365 -85.27639771]
[155.07771301 -99.32887268]
[148.36862183 -107.62416840]
[145.72822571 -117.87772369]
[147.56805420 -128.22270203]
[153.49012756 -136.80419922]
[162.37069702 -142.11181641]
[172.57296753 -143.24536133]
[178.44192505 -157.04953003]
[176.72096252 -172.77687073]
[188.82115173 -181.46217346]
[194.69012451 -195.26634216]
[192.96916199 -210.99368286]
[205.06935120 -219.67898560]
[210.93830872 -233.48315430]
[216.80728149 -247.28733826]
[203.98049927 -255.11622620]
[192.43035889 -264.72937012]
[182.40306091 -275.92181396]
[174.11233521 -288.45504761]
[167.73489380 -302.06188965]
[163.40667725 -316.45230103]
[161.21994019 -331.31958008]
[161.22128296 -346.34683228]
[163.41069031 -361.21371460]
[167.74150085 -375.60336304]
[174.12138367 -389.20904541]
[182.41436768 -401.74078369]
[192.44366455 -412.93145752]
[203.99552917 -422.54251099]
[216.82371521 -430.36907959]
[230.65480042 -436.24438477]
[245.19395447 -440.04315186]
[260.13128662 -441.68444824]
[275.14840698 -441.13323975]
[289.92523193 -438.40133667]
[304.14678955 -433.54690552]
[317.50994873 -426.67346191]
[329.72982788 -417.92752075]
[340.54602051 -407.49545288]
[349.72796631 -395.59967041]
[357.07992554 -382.49368286]
[362.44522095 -368.45690918]
[365.70947266 -353.78848267]
[366.80310059 -338.80108643]
[365.70278931 -323.81417847]
[362.43203735 -309.14721680]
[357.06048584 -295.11282349]
[349.70269775 -282.01013184]
[340.51547241 -270.11840820]
[329.69464111 -259.69116211]
[317.47082520 -250.95063782]
[304.10464478 -244.08314514]
[289.88092041 -239.23506165]
[275.10290527 -236.50971985]
[260.08551025 -235.96519470]
[245.14892578 -237.61312866]
[230.61145020 -241.41838074]
[224.74249268 -227.61419678]
[218.87353516 -213.81002808]
[221.01428223 -199.07006836]
[208.49429321 -189.39738464]
[202.62533569 -175.59321594]
[204.76608276 -160.85325623]
[192.24609375 -151.18057251]
[186.37713623 -137.37640381]
[194.97067261 -119.89310455]
[187.82548523 -101.44181824]
[169.13017273 -94.08215332]
[163.88345337 -80.02967834]
[158.63673401 -65.97721100]
[163.37115479 -54.84563446]
[159.11502075 -43.09535217]
[147.63720703 -37.21125793]
[142.18185425 -23.23845863]
[136.72650146 -9.26566124]
[132.00636292 4.97232771]
[128.03427124 19.43685150]
[124.06217194 33.90137482]
[120.09007263 48.36589813]
[116.11798096 62.83042145]
[112.14588165 77.29494476]
[108.93260956 91.94673157]
[106.70748901 106.78077698]
[104.70347595 121.64630890]
[102.69946289 136.51184082]
[100.69544983 151.37736511]
[98.69143677 166.24288940]
[96.68742371 181.10841370]
[95.12689972 196.02702332]
[94.01125336 210.98547363]
[92.89559937 225.94392395]
[91.77995300 240.90238953]
[90.99863434 255.88201904]
[90.55202484 270.87536621]
[98.81257629 280.78121948]
[98.13192749 293.26004028]
[89.41957092 301.65179443]
[88.74978638 316.63681030]
[88.08000183 331.62185669]
[87.41021729 346.60690308]
[86.74043274 361.59194946]
[98.21168518 366.37631226]
[107.64344025 374.43331909]
[114.13582611 384.97448730]
[117.07546234 396.97537231]
[116.19342804 409.27505493]
[111.58972931 420.68835449]
[103.72225952 430.12017822]
[93.36128998 436.67056274]
[81.51406097 439.72036743]
[80.17582703 454.66055298]
[78.83759308 469.60073853]
[77.49935913 484.54092407]
[76.16112518 499.48110962]
[74.93415070 514.43084717]
[73.81849670 529.38928223]
[72.70285034 544.34777832]
[71.58720398 559.30621338]
[85.91815186 563.98461914]
[98.71267700 571.95727539]
[109.22693634 582.76068115]
[116.84962463 595.76678467]
[121.13758850 610.21936035]
[121.84152222 625.27813721]
[118.92050171 640.06774902]
[112.54434967 653.72821045]
[103.08377075 665.46533203]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 201]
[16 200]
[17 199]
[18 198]
[20 197]
[21 196]
[22 195]
[23 194]
[24 193]
[30 184]
[31 183]
[32 182]
[33 181]
[34 180]
[36 177]
[37 176]
[41 175]
[42 174]
[43 173]
[44 172]
[49 171]
[50 170]
[51 169]
[52 168]
[53 167]
[54 166]
[57 165]
[65 164]
[66 163]
[67 162]
[68 161]
[69 160]
[70 159]
[78 158]
[79 157]
[80 156]
[82 153]
[83 152]
[84 151]
[90 148]
[91 147]
[93 145]
[94 144]
[96 142]
[97 141]
[98 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
