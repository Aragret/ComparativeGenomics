%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[42.74124908 539.89739990]
[40.07590103 554.71594238]
[34.38748169 568.65637207]
[25.92466354 581.10925293]
[15.05740356 591.53021240]
[2.26077223 599.46368408]
[-11.90581608 604.56286621]
[-26.82305908 606.60479736]
[-41.83884048 605.50024414]
[-56.29673386 601.29754639]
[-69.56469727 594.18029785]
[-81.06272125 584.45977783]
[-90.28816223 572.56079102]
[-96.83771515 559.00360107]
[-100.42506409 544.38085938]
[-100.89337921 529.33184814]
[-98.22220612 514.51434326]
[-92.52830505 500.57611084]
[-84.06058502 488.12655640]
[-73.18922424 477.70989990]
[-60.38947678 469.78146362]
[-46.22088242 464.68786621]
[-31.30283737 462.65179443]
[-16.28749084 463.76223755]
[-12.10048008 449.35845947]
[-7.91346884 434.95468140]
[-3.83380222 420.52011108]
[-9.54243946 409.85531616]
[-6.35159969 397.77218628]
[4.55549288 390.88754272]
[8.74250412 376.48376465]
[12.92951488 362.07998657]
[7.38029337 351.33135986]
[10.75067997 339.29708862]
[21.75906563 332.57559204]
[26.16006279 318.23574829]
[30.56106186 303.89590454]
[34.96205902 289.55606079]
[39.36305618 275.21621704]
[33.97447968 264.38616943]
[37.52366638 252.40338135]
[48.63090515 245.84655762]
[53.24491501 231.57382202]
[57.85892487 217.30108643]
[62.25992203 202.96124268]
[66.44692993 188.55744934]
[70.63394165 174.15367126]
[66.75679779 159.77253723]
[78.03865814 148.68063354]
[82.22566986 134.27685547]
[86.41268158 119.87307739]
[76.19635773 103.59735107]
[81.14691162 85.02951813]
[98.11001587 76.00036621]
[101.64968872 61.42399216]
[105.18935394 46.84761810]
[108.72902679 32.27124405]
[112.26869965 17.69486809]
[102.11796570 28.73853111]
[88.83423615 35.70578003]
[73.97807312 37.77810669]
[59.29477310 34.71206284]
[46.50930786 26.86783791]
[37.12370300 15.16696644]
[32.24056625 0.98405385]
[32.43357086 -14.01470470]
[37.68003464 -28.06727028]
[47.36361694 -39.52276230]
[60.34669495 -47.03539658]
[75.10402679 -49.72260284]
[89.90194702 -47.26868820]
[103.00199890 -39.96193314]
[112.86520386 -28.66073418]
[118.33284760 -14.69273853]
[118.76236725 0.30265585]
[125.64177704 -13.02677345]
[132.52119446 -26.35620308]
[131.97474670 -42.16796875]
[144.68740845 -49.92924881]
[151.56681824 -63.25867844]
[146.99156189 -78.14842987]
[154.15815735 -91.56836700]
[168.38145447 -95.83841705]
[175.26086426 -109.16784668]
[182.14027405 -122.49727631]
[181.59382629 -138.30903625]
[194.30648804 -146.07031250]
[201.18589783 -159.39974976]
[200.93812561 -164.61373901]
[202.55357361 -168.96617126]
[205.39205933 -171.89157104]
[208.68174744 -173.16055298]
[216.14949036 -186.16950989]
[209.96910095 -200.28010559]
[213.24427795 -215.15043640]
[224.51431274 -225.12289429]
[239.31829834 -226.53002930]
[246.78604126 -239.53898621]
[254.25378418 -252.54792786]
[261.72152710 -265.55688477]
[249.80505371 -274.70462036]
[239.21421814 -285.35910034]
[230.13804626 -297.33016968]
[222.73849487 -310.40420532]
[217.14762878 -324.34783936]
[213.46520996 -338.91229248]
[211.75697327 -353.83761597]
[212.05339050 -368.85748291]
[214.34916687 -383.70376587]
[218.60334778 -398.11160278]
[224.74000549 -411.82382202]
[232.64962769 -424.59570312]
[242.19105530 -436.19937134]
[253.19400024 -446.42770386]
[265.46209717 -455.09814453]
[278.77645874 -462.05599976]
[292.89941406 -467.17709351]
[307.57894897 -470.37002563]
[322.55307007 -471.57781982]
[337.55456543 -470.77890015]
[352.31573486 -467.98754883]
[366.57312012 -463.25357056]
[380.07226562 -456.66143799]
[392.57229614 -448.32882690]
[403.85012817 -438.40438843]
[413.70449829 -427.06530762]
[421.95953369 -414.51388550]
[428.46789551 -400.97415161]
[433.11346436 -386.68771362]
[435.81332397 -371.90954590]
[436.51931763 -356.90338135]
[435.21878052 -341.93704224]
[431.93499756 -327.27755737]
[426.72650146 -313.18658447]
[419.68630981 -299.91561890]
[410.94003296 -287.70144653]
[400.64373779 -276.76205444]
[388.98120117 -267.29272461]
[376.16055298 -259.46237183]
[362.41058350 -253.41076660]
[347.97668457 -249.24591064]
[333.11645508 -247.04214478]
[318.09506226 -246.83877563]
[303.18060303 -248.63945007]
[288.63922119 -252.41200256]
[274.73046875 -258.08914185]
[267.26272583 -245.08020020]
[259.79498291 -232.07124329]
[252.32725525 -219.06228638]
[258.57766724 -205.56895447]
[255.64952087 -190.80786133]
[244.46012878 -180.48065186]
[229.15844727 -178.70176697]
[221.69070435 -165.69281006]
[214.51533508 -152.52033997]
[207.63592529 -139.19090271]
[208.67443848 -124.33255005]
[195.46971130 -115.61785889]
[188.59030151 -102.28842926]
[181.71087646 -88.95899963]
[186.47023010 -74.89187622]
[179.68341064 -61.27593613]
[164.89625549 -56.37926483]
[158.01683044 -43.04983521]
[159.05534363 -28.19147873]
[145.85061646 -19.47678947]
[138.97120667 -6.14736080]
[132.09179688 7.18206835]
[126.84507751 21.23453903]
[123.30540466 35.81091690]
[119.76573181 50.38729095]
[116.22605896 64.96366882]
[112.68638611 79.54003906]
[119.99974060 86.59982300]
[123.74744415 96.04864502]
[123.26134491 106.20193481]
[118.62811279 115.24951935]
[110.67377472 121.57834625]
[100.81645966 124.06008911]
[96.62944794 138.46386719]
[92.44244385 152.86764526]
[96.02010345 168.27903748]
[85.03772736 178.34068298]
[80.85071564 192.74446106]
[76.66370392 207.14825439]
[77.86637115 213.64941406]
[75.90041351 218.98158264]
[72.13166046 221.91510010]
[67.51764679 236.18782043]
[62.90363693 250.46055603]
[67.17579651 268.37228394]
[53.70290375 279.61721802]
[49.30190659 293.95706177]
[44.90090942 308.29690552]
[40.49991226 322.63674927]
[36.09891129 336.97659302]
[40.63727951 354.82272339]
[27.33329773 366.26699829]
[23.14628601 380.67077637]
[18.95927429 395.07455444]
[23.76284027 412.85116577]
[10.63072205 424.49221802]
[11.37594128 433.59619141]
[6.49031305 439.14169312]
[2.30330181 453.54547119]
[-1.88370931 467.94924927]
[11.38705730 475.06124878]
[22.88890457 484.77728271]
[32.11901855 496.67257690]
[38.67390442 510.22720337]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 206]
[25 205]
[26 204]
[27 202]
[30 200]
[31 199]
[32 198]
[35 196]
[36 195]
[37 194]
[38 193]
[39 192]
[42 190]
[43 189]
[44 188]
[45 185]
[46 184]
[47 183]
[49 181]
[50 180]
[51 179]
[54 173]
[55 172]
[56 171]
[57 170]
[58 169]
[75 168]
[76 167]
[77 166]
[79 164]
[80 163]
[83 160]
[84 159]
[85 158]
[87 156]
[88 155]
[92 154]
[93 153]
[97 149]
[98 148]
[99 147]
[100 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
