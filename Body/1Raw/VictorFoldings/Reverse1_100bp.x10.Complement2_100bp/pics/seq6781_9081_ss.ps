%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxGAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUU\
) } def
/len { sequence length } bind def

/coor [
[132.67015076 278.36373901]
[141.62443542 266.29031372]
[152.35723877 255.76637268]
[164.60429382 247.05108643]
[157.92410278 233.62071228]
[151.24391174 220.19033813]
[144.56372070 206.75996399]
[137.88351440 193.32958984]
[133.72129822 190.98759460]
[130.98611450 186.00604248]
[131.21109009 179.39840698]
[124.93372345 165.77508545]
[118.65636444 152.15177917]
[112.37900543 138.52845764]
[105.49958801 125.19902802]
[98.03185272 112.19007874]
[98.66781616 127.17658997]
[94.91628265 141.69987488]
[87.10179138 154.50354004]
[75.90037537 164.47991943]
[62.28106689 170.76597595]
[47.42207718 172.81788635]
[32.60885239 170.45816040]
[19.12288475 163.89091492]
[8.13084793 153.68429565]
[0.58366317 140.72126770]
[-2.86576366 126.12326813]
[-1.91902244 111.15317535]
[3.34198427 97.10604858]
[12.46212673 85.19710541]
[24.65242195 76.45658112]
[38.85828400 71.64062500]
[53.85076904 71.16587067]
[68.33287811 75.07337952]
[81.05175781 83.02511597]
[90.90520477 94.33020782]
[87.36553192 79.75383759]
[83.82585907 65.17745972]
[80.28618622 50.60108566]
[76.74651337 36.02470779]
[73.20684052 21.44833374]
[69.66716766 6.87195778]
[63.90113449 -6.97552776]
[56.04937744 -19.75637054]
[48.19762421 -32.53721237]
[40.34586716 -45.31805420]
[32.49411011 -58.09889603]
[24.64235497 -70.87973785]
[9.35026169 -70.56493378]
[-3.95834446 -77.89826965]
[-11.75759983 -90.82258606]
[-12.03864574 -105.81514740]
[-4.82612371 -118.84761047]
[-12.67787933 -131.62844849]
[-20.52963448 -144.40930176]
[-28.38138962 -157.19013977]
[-42.19770813 -164.89857483]
[-42.26718903 -179.79301453]
[-50.11894608 -192.57385254]
[-63.69958115 -186.16842651]
[-77.90245056 -181.29588318]
[-92.55514526 -178.01538086]
[-107.47979736 -176.36672974]
[-122.49523163 -176.36994934]
[-137.41917419 -178.02499390]
[-152.07044983 -181.31179810]
[-166.27124023 -186.19042969]
[-179.84912109 -192.60166931]
[-192.63929749 -200.46772766]
[-204.48649597 -209.69306946]
[-215.24690247 -220.16574097]
[-224.78990173 -231.75860596]
[-232.99963379 -244.33093262]
[-239.77645874 -257.73010254]
[-245.03811646 -271.79345703]
[-248.72071838 -286.35031128]
[-250.77957153 -301.22390747]
[-251.18966675 -316.23373413]
[-249.94604492 -331.19760132]
[-247.06379700 -345.93380737]
[-242.57791138 -360.26348877]
[-236.54284668 -374.01272583]
[-229.03184509 -387.01455688]
[-220.13610840 -399.11120605]
[-209.96359253 -410.15582275]
[-198.63781738 -420.01431274]
[-186.29623413 -428.56701660]
[-173.08868408 -435.71011353]
[-159.17549133 -441.35687256]
[-144.72552490 -445.43878174]
[-129.91423035 -447.90628052]
[-114.92137146 -448.72937012]
[-99.92897034 -447.89813232]
[-85.11900330 -445.42260742]
[-70.67126465 -441.33288574]
[-56.76113129 -435.67855835]
[-43.55745316 -428.52832031]
[-31.22052002 -419.96890259]
[-19.90008545 -410.10427856]
[-9.73357010 -399.05416870]
[-0.84438801 -386.95269775]
[6.65955544 -373.94677734]
[12.68717003 -360.19427490]
[17.16528511 -345.86215210]
[20.03953934 -331.12438965]
[21.27504539 -316.15988159]
[20.85680199 -301.15026855]
[18.78988647 -286.27777100]
[15.09939194 -271.72293091]
[9.83011436 -257.66241455]
[3.04602075 -244.26692200]
[-5.17053795 -231.69905090]
[-14.71982002 -220.11137390]
[-25.48590469 -209.64453125]
[-37.33810425 -200.42561340]
[-29.48634720 -187.64476013]
[-16.23163795 -180.85050964]
[-15.60054779 -165.04190063]
[-7.74879217 -152.26104736]
[0.10296329 -139.48020935]
[7.95471859 -126.69937134]
[22.83996964 -127.24240112]
[36.08657837 -120.21507263]
[44.09004593 -107.41621399]
[44.61603165 -92.23002625]
[37.42319870 -78.73149872]
[45.27495575 -65.95065308]
[53.12670898 -53.16981125]
[60.97846603 -40.38896942]
[68.83022308 -27.60812569]
[76.68197632 -14.82728291]
[75.44272614 -29.77600479]
[78.22827148 -44.51509094]
[84.83752441 -57.98052216]
[94.79335022 -69.20021057]
[107.37704468 -77.36419678]
[121.68016815 -81.88312531]
[136.67016602 -82.43075562]
[151.26490784 -78.96756744]
[164.41076660 -71.74356842]
[175.15875244 -61.28025436]
[182.73294067 -48.33299637]
[186.58656311 -33.83645630]
[186.44142151 -18.83716011]
[182.30796814 -4.41791439]
[174.48463440 8.38034058]
[163.53616333 18.63368797]
[150.25296021 25.60193062]
[135.59393311 28.78202248]
[120.61734009 27.94439507]
[106.40434265 23.14951134]
[93.98101044 14.74352360]
[84.24354553 3.33228540]
[87.78321075 17.90866089]
[91.32288361 32.48503494]
[94.86255646 47.06141281]
[98.40222931 61.63778687]
[101.94190216 76.21416473]
[105.48157501 90.79053497]
[111.04080200 104.72233582]
[118.50854492 117.73128510]
[123.46205139 103.57279968]
[136.91586304 96.93993378]
[151.16302490 101.63230133]
[158.04212952 114.96189880]
[153.61248779 129.29292297]
[140.41162109 136.41592407]
[126.00231934 132.25109863]
[132.27967834 145.87442017]
[138.55703735 159.49772644]
[144.83439636 173.12104797]
[151.31390381 186.64939880]
[157.99409485 200.07977295]
[164.67428589 213.51014709]
[171.35447693 226.94052124]
[178.03468323 240.37089539]
[192.37406921 235.86222839]
[207.24226379 233.65235901]
[222.27310181 233.79571533]
[237.09642029 236.28878784]
[251.34721375 241.07014465]
[264.67453003 248.02206421]
[276.75015259 256.97335815]
[287.27676392 267.70355225]
[295.99505615 279.94845581]
[302.69039917 293.40649414]
[307.19790649 307.74627686]
[309.40652466 322.61465454]
[309.26193237 337.64547729]
[306.76763916 352.46859741]
[301.98510742 366.71899414]
[295.03210449 380.04571533]
[286.07980347 392.12063599]
[275.34872437 402.64633179]
[263.10311890 411.36361694]
[249.64451599 418.05786133]
[235.30438232 422.56417847]
[220.43582153 424.77157593]
[205.40501404 424.62573242]
[190.58209229 422.13021851]
[176.33209229 417.34649658]
[163.00593567 410.39239502]
[150.93176270 401.43911743]
[140.40695190 390.70715332]
[131.69065857 378.46081543]
[124.99754333 365.00167847]
[120.49241638 350.66116333]
[118.28623199 335.79241943]
[118.43331146 320.76162720]
[120.93004608 305.93893433]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 176]
[5 175]
[6 174]
[7 173]
[8 172]
[11 171]
[12 170]
[13 169]
[14 168]
[15 161]
[16 160]
[36 159]
[37 158]
[38 157]
[39 156]
[40 155]
[41 154]
[42 153]
[43 131]
[44 130]
[45 129]
[46 128]
[47 127]
[48 126]
[53 121]
[54 120]
[55 119]
[56 118]
[58 116]
[59 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
