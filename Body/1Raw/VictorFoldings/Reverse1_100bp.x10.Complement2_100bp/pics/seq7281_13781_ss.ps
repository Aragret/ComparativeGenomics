%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[215.89308167 636.65118408]
[224.82777405 624.53692627]
[236.01838684 614.46936035]
[249.00668335 606.86090088]
[244.18069458 592.65844727]
[239.35469055 578.45599365]
[234.52870178 564.25354004]
[220.98693848 562.48211670]
[209.47424316 555.01312256]
[202.26837158 543.25622559]
[200.82417297 529.47607422]
[205.48017883 516.35595703]
[215.38150024 506.47531128]
[210.76748657 492.20257568]
[206.15347290 477.92984009]
[201.53947449 463.65710449]
[197.77070618 460.72360229]
[195.80474854 455.39141846]
[197.00743103 448.89025879]
[192.82041931 434.48648071]
[188.63340759 420.08270264]
[174.57955933 415.22189331]
[165.98107910 402.87158203]
[166.30747986 387.64834595]
[175.64311218 375.39468384]
[171.45611572 360.99090576]
[167.26910400 346.58712769]
[163.08209229 332.18334961]
[158.89508057 317.77957153]
[154.70806885 303.37579346]
[150.52105713 288.97198486]
[146.33404541 274.56820679]
[130.47030640 275.64682007]
[114.75471497 273.18585205]
[99.96755219 267.30453491]
[86.84364319 258.29190063]
[76.03587341 246.59271240]
[68.08272552 232.78544617]
[63.38139725 217.55371094]
[62.16802597 201.65242004]
[64.50579071 185.87039185]
[70.28163147 170.99113464]
[79.21175385 157.75404358]
[90.85549927 146.81758118]
[104.63716125 138.72662354]
[100.02315521 124.45388794]
[95.40914154 110.18115234]
[90.68901062 95.94316101]
[85.86301422 81.74070740]
[81.03701019 67.53825378]
[76.21101379 53.33579636]
[71.38501740 39.13333893]
[66.55902100 24.93088341]
[61.73302460 10.72842789]
[56.90702438 -3.47402763]
[52.08102798 -17.67648315]
[47.25503159 -31.87893867]
[42.21633530 -17.75054359]
[30.40444946 -8.50503826]
[15.47941685 -7.00724173]
[2.06591988 -13.72126389]
[-5.67972374 -26.56669044]
[-5.35744190 -41.56322861]
[2.93290329 -54.06403351]
[16.62245750 -60.19560242]
[31.46936417 -58.05799484]
[42.87328720 -48.31335831]
[39.98801804 -63.03324890]
[37.10274506 -77.75314331]
[34.21747208 -92.47303009]
[31.33219910 -107.19292450]
[18.49961662 -116.02256775]
[15.78322983 -130.99172974]
[24.28002739 -143.17121887]
[21.39475441 -157.89111328]
[18.50948143 -172.61100769]
[13.51775646 -158.46594238]
[3.55022168 -147.25665283]
[-9.91449928 -140.64596558]
[-24.87899590 -139.61451721]
[-39.12337112 -144.31533813]
[-50.53456116 -154.05108643]
[-57.41977692 -167.37751770]
[-58.75764465 -182.31773376]
[-54.34969711 -196.65545654]
[-44.84982681 -208.26374817]
[-31.66728210 -215.42059326]
[-16.75761604 -217.06433105]
[-2.33258939 -212.95111084]
[9.46793175 -203.69110107]
[16.89280128 -190.65979004]
[9.36182308 -204.57362366]
[17.28775597 -217.18429565]
[17.51108360 -232.18263245]
[17.73441124 -247.18096924]
[17.95773888 -262.17929077]
[18.18106651 -277.17764282]
[18.40439415 -292.17599487]
[4.32377672 -297.84173584]
[-6.75663328 -308.21423340]
[-13.33830070 -321.89071655]
[-14.53110981 -337.02154541]
[-10.17374229 -351.56036377]
[-0.85549670 -363.54095459]
[12.16341114 -371.34304810]
[27.12228012 -373.91143799]
[41.99804688 -370.89880371]
[54.77888489 -362.71255493]
[63.73629379 -350.45983887]
[67.65885162 -335.79769897]
[66.01607513 -320.70910645]
[59.03012466 -307.23464966]
[47.64579773 -297.19665527]
[33.40273285 -291.95266724]
[33.17940521 -276.95431519]
[32.95607758 -261.95596313]
[32.73274994 -246.95764160]
[32.50942230 -231.95930481]
[32.28609467 -216.96096802]
[39.83304596 -204.11990356]
[31.89113808 -190.43646240]
[33.22937393 -175.49627686]
[36.11464691 -160.77638245]
[38.99991989 -146.05648804]
[51.46595764 -137.98596191]
[54.60172653 -123.09900665]
[46.05208969 -110.07819366]
[48.93736267 -95.35830688]
[51.82263565 -80.63841248]
[54.70790863 -65.91851807]
[57.59318161 -51.19863129]
[61.45748520 -36.70493698]
[66.28348541 -22.50248146]
[71.10948181 -8.30002499]
[75.93547821 5.90243053]
[80.76147461 20.10488510]
[85.58747101 34.30734253]
[90.41347504 48.50979614]
[95.23947144 62.71225357]
[100.06546783 76.91471100]
[104.89146423 91.11716461]
[110.26045227 97.12936401]
[109.68187714 105.56713867]
[114.29588318 119.83987427]
[118.90989685 134.11260986]
[132.96981812 132.59666443]
[147.04881287 133.86747742]
[160.60011292 137.87368774]
[173.09780884 144.45770264]
[184.05728149 153.36192322]
[193.05406189 164.23886108]
[199.74017334 176.66464233]
[203.85762024 190.15556335]
[205.24839783 204.18688965]
[203.86047363 218.21331787]
[199.74980164 231.69010925]
[193.07800293 244.09426880]
[184.10607910 254.94485474]
[173.18415833 263.82159424]
[160.73782349 270.38119507]
[164.92483521 284.78497314]
[169.11184692 299.18878174]
[173.29885864 313.59255981]
[177.48587036 327.99633789]
[181.67288208 342.40011597]
[185.85989380 356.80389404]
[190.04690552 371.20767212]
[204.49667358 376.54721069]
[212.93304443 389.22320557]
[212.29522705 404.25839233]
[203.03718567 415.89569092]
[207.22419739 430.29946899]
[211.41120911 444.70324707]
[215.81221008 459.04309082]
[220.42620850 473.31582642]
[225.04022217 487.58856201]
[229.65423584 501.86129761]
[245.85716248 505.15628052]
[258.11724854 516.11004639]
[263.15136719 531.66241455]
[259.67562866 547.53924561]
[248.73115540 559.42755127]
[253.55714417 573.63000488]
[258.38314819 587.83245850]
[263.20913696 602.03491211]
[278.14404297 600.15509033]
[293.15161133 601.32043457]
[307.61727905 605.48333740]
[320.94869995 612.47314453]
[332.59994507 622.00378418]
[342.09393311 633.68493652]
[349.04187012 647.03826904]
[353.15924072 661.51696777]
[354.27743530 676.52807617]
[352.35070801 691.45703125]
[347.45788574 705.69238281]
[339.79940796 718.65124512]
[329.68881226 729.80297852]
[317.54016113 738.69091797]
[303.85092163 744.95104980]
[289.18167114 748.32708740]
[274.13308716 748.68078613]
[259.32141113 745.99768066]
[245.35316467 740.38757324]
[232.80035400 732.08026123]
[222.17700195 721.41583252]
[213.91812134 708.83111572]
[208.36190796 694.84136963]
[205.73590088 680.01947021]
[206.14761353 664.97235107]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 185]
[5 184]
[6 183]
[7 182]
[13 177]
[14 176]
[15 175]
[16 174]
[19 173]
[20 172]
[21 171]
[25 167]
[26 166]
[27 165]
[28 164]
[29 163]
[30 162]
[31 161]
[32 160]
[45 145]
[46 144]
[47 143]
[48 141]
[49 140]
[50 139]
[51 138]
[52 137]
[53 136]
[54 135]
[55 134]
[56 133]
[57 132]
[67 131]
[68 130]
[69 129]
[70 128]
[71 127]
[74 124]
[75 123]
[76 122]
[91 121]
[93 119]
[94 118]
[95 117]
[96 116]
[97 115]
[98 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
