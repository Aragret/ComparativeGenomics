%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAGACUCCAUUAUUUAUCCUAAUAGGGCAUAGCUUCCGGAAAAACCUGUCCACCACACACCACCGGAACCAUACACGAAAGAGCACAAUGUAGCGxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[100.21457672 788.19311523]
[85.86544800 783.79766846]
[71.88983917 778.32958984]
[58.36779785 771.82025146]
[45.37678528 764.30688477]
[32.99120712 755.83251953]
[21.28201103 746.44567871]
[10.31626606 736.20019531]
[0.15678458 725.15472412]
[-9.13824081 713.37255859]
[-17.51556778 700.92114258]
[-24.92721367 687.87182617]
[-31.33072090 674.29931641]
[-36.68941116 660.28143311]
[-40.97259521 645.89837646]
[-44.15573120 631.23260498]
[-46.22059250 616.36810303]
[-47.15534592 601.38995361]
[-46.95464325 586.38409424]
[-45.61962891 571.43634033]
[-43.15795517 556.63238525]
[-39.58371735 542.05694580]
[-34.91738892 527.79364014]
[-29.18570328 513.92407227]
[-22.42148781 500.52767944]
[-14.66348743 487.68124390]
[-5.95614052 475.45834351]
[3.65067649 463.92895508]
[14.10193729 453.15917969]
[25.33777618 443.21063232]
[37.29383469 434.14035034]
[49.90163040 426.00027466]
[63.08894730 418.83703613]
[76.78024292 412.69165039]
[90.89709473 407.59930420]
[105.35865021 403.58923340]
[120.08206940 400.68432617]
[118.29959869 385.79061890]
[116.51713562 370.89688110]
[114.73467255 356.00317383]
[112.95220184 341.10946655]
[111.16973877 326.21572876]
[109.38727570 311.32202148]
[100.19239807 299.60437012]
[106.23498535 284.98254395]
[97.04011536 273.26489258]
[103.08270264 258.64306641]
[101.30023956 243.74934387]
[99.51776886 228.85562134]
[97.73530579 213.96189880]
[93.81923676 207.69403076]
[96.03887939 198.83338928]
[94.47835541 183.91477966]
[84.21602631 194.85482788]
[69.22872162 195.47184753]
[58.10184860 185.41238403]
[57.20939255 170.43894958]
[67.06258392 159.12902832]
[82.01707458 157.96142578]
[93.50580597 167.60418701]
[93.28247833 152.60585022]
[93.05915070 137.60751343]
[92.83582306 122.60916901]
[92.61249542 107.61083221]
[91.71968079 92.63742828]
[90.15915680 77.71881866]
[88.59863281 62.80021667]
[87.03810883 47.88161469]
[85.47758484 32.96300888]
[74.96167755 27.41753578]
[68.49461365 17.58503914]
[67.58633423 5.97172976]
[72.34715271 -4.52828312]
[81.48898315 -11.35420990]
[80.37332916 -26.31266212]
[79.25768280 -41.27111816]
[78.03070831 -56.22084808]
[76.69247437 -71.16103363]
[74.06970978 -74.62153625]
[72.81113434 -78.36059570]
[72.83679962 -81.91513062]
[73.92458344 -84.89562225]
[75.74649048 -87.02606964]
[75.29988861 -102.01941681]
[74.85327911 -117.01277161]
[66.70852661 -130.57646179]
[74.06346130 -143.52845764]
[73.61685181 -158.52180481]
[73.17024994 -173.51515198]
[58.32833099 -176.00587463]
[44.25762177 -181.34455872]
[31.49896240 -189.32595825]
[20.54276085 -199.64331055]
[11.81014442 -211.90005493]
[5.63677120 -225.62506104]
[2.25992966 -240.29077148]
[1.80941641 -255.33348083]
[4.30254793 -270.17498779]
[9.64349461 -284.24484253]
[17.62696648 -297.00219727]
[27.94609642 -307.95675659]
[40.20425034 -316.68737793]
[53.93025208 -322.85852051]
[68.59651184 -326.23300171]
[83.63929749 -326.68106079]
[98.48040771 -324.18554688]
[112.54938507 -318.84231567]
[125.30546570 -310.85678101]
[136.25833130 -300.53588867]
[144.98696899 -288.27630615]
[151.15589905 -274.54931641]
[154.52799988 -259.88250732]
[154.97363281 -244.83964539]
[152.47570801 -229.99893188]
[147.13020325 -215.93081665]
[139.14260864 -203.17604065]
[128.81993103 -192.22485352]
[116.55894470 -183.49818420]
[102.83094788 -177.33148193]
[88.16359711 -173.96176147]
[88.61020660 -158.96841431]
[89.05680847 -143.97505188]
[97.16961670 -131.48379517]
[89.84663391 -117.45937347]
[90.29323578 -102.46602631]
[90.73984528 -87.47267151]
[91.63265991 -72.49926758]
[92.97089386 -57.55908585]
[96.69860077 -51.17739487]
[94.21613312 -42.38676453]
[95.33178711 -27.42831230]
[96.44743347 -12.46985817]
[111.01264191 -1.38065839]
[112.87880707 17.15121651]
[100.39619446 31.40248489]
[101.95671844 46.32109070]
[103.51723480 61.23969650]
[105.07775879 76.15830231]
[106.63828278 91.07690430]
[116.90061188 80.13686371]
[131.88792419 79.51984406]
[143.01478577 89.57930756]
[143.90724182 104.55273438]
[134.05404663 115.86266327]
[119.09956360 117.03025818]
[107.61083221 107.38750458]
[107.83415985 122.38584137]
[108.05748749 137.38418579]
[108.28081512 152.38252258]
[108.50414276 167.38085938]
[109.39695740 182.35426331]
[110.95748138 197.27287292]
[112.62902069 212.17944336]
[114.41149139 227.07315063]
[116.19395447 241.96687317]
[117.97641754 256.86059570]
[127.29878998 269.64355469]
[121.12870789 283.20007324]
[130.45106506 295.98303223]
[124.28099060 309.53955078]
[126.06345367 324.43328857]
[127.84592438 339.32699585]
[129.62838745 354.22070312]
[131.41085815 369.11444092]
[133.19331360 384.00814819]
[134.97578430 398.90185547]
[149.96887207 398.25030518]
[164.96830750 398.73455811]
[179.88815308 400.35177612]
[194.64297485 403.09277344]
[209.14822388 406.94180298]
[223.32083130 411.87683105]
[237.07962036 417.86956787]
[250.34577942 424.88574219]
[263.04330444 432.88510132]
[275.09948730 441.82186890]
[286.44528198 451.64483643]
[297.01565552 462.29776001]
[306.75009155 473.71957397]
[315.59283447 485.84490967]
[323.49319458 498.60427856]
[330.40597534 511.92459106]
[336.29153442 525.72955322]
[341.11618042 539.94012451]
[344.85229492 554.47485352]
[347.47845459 569.25054932]
[348.97958374 584.18255615]
[349.34716797 599.18530273]
[348.57901001 614.17285156]
[346.67959595 629.05938721]
[343.65972900 643.75970459]
[339.53677368 658.18945312]
[334.33428955 672.26611328]
[328.08212280 685.90893555]
[320.81604004 699.03991699]
[312.57769775 711.58367920]
[303.41427612 723.46850586]
[293.37823486 734.62628174]
[282.52709961 744.99304199]
[270.92303467 754.50952148]
[258.63244629 763.12109375]
[245.72578430 770.77844238]
[232.27697754 777.43780518]
[218.36303711 783.06091309]
[204.06367493 787.61566162]
[189.46078491 791.07592773]
[174.63803101 793.42181396]
[159.68031311 794.64001465]
[144.67330933 794.72344971]
[129.70295715 793.67169189]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 166]
[38 165]
[39 164]
[40 163]
[41 162]
[42 161]
[43 160]
[45 158]
[47 156]
[48 155]
[49 154]
[50 153]
[52 152]
[53 151]
[60 150]
[61 149]
[62 148]
[63 147]
[64 146]
[65 139]
[66 138]
[67 137]
[68 136]
[69 135]
[74 132]
[75 131]
[76 130]
[77 128]
[78 127]
[83 126]
[84 125]
[85 124]
[87 122]
[88 121]
[89 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
