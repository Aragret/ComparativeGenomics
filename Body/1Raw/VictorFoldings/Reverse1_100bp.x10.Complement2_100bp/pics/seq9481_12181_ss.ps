%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAUCGCCCCACUACGGACAACCCCCGGUCACGGGAGGAUUAACCCCCCAUCCCCGAUCCGACCUCACCAUUUUCCGAGUCUUUUUAGGACGCUUCUUUxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[114.75866699 515.92102051]
[103.49673462 505.96768188]
[93.88623810 494.41177368]
[86.15246582 481.52420044]
[80.47672272 467.60708618]
[76.99203491 452.98663330]
[75.78010559 438.00561523]
[76.86933136 423.01513672]
[80.23418427 408.36663818]
[85.79579163 394.40353394]
[93.42378235 381.45306396]
[102.93933105 369.81887817]
[114.11939240 359.77365112]
[126.70188904 351.55285645]
[140.39186096 345.34924316]
[154.86840820 341.30816650]
[153.08595276 326.41445923]
[151.30348206 311.52075195]
[149.41018677 296.64071655]
[147.40617371 281.77517700]
[145.40216064 266.90966797]
[142.40739441 252.21165466]
[138.43528748 237.74713135]
[134.46319580 223.28260803]
[130.49110413 208.81808472]
[126.51900482 194.35356140]
[122.54690552 179.88903809]
[118.57481384 165.42451477]
[113.64321899 151.25837708]
[107.77425385 137.45419312]
[101.90529633 123.65001678]
[96.03633118 109.84584045]
[89.35614014 96.41546631]
[81.88839722 83.40651703]
[74.22779846 70.51018524]
[66.37604523 57.72934341]
[58.52429199 44.94850159]
[50.67253494 32.16765976]
[34.28092194 23.77739334]
[34.48670197 6.22961330]
[26.44552803 -6.43291187]
[18.40435410 -19.09543610]
[3.11864233 -18.55298615]
[-10.29767132 -25.68736267]
[-18.28848648 -38.49412918]
[-18.79271889 -53.48084641]
[-11.77502918 -66.61924744]
[-19.81620216 -79.28177643]
[-27.85737610 -91.94429779]
[-35.89854813 -104.60682678]
[-43.93972015 -117.26934814]
[-57.26326752 -110.35758209]
[-71.13851929 -104.63335419]
[-85.45986938 -100.14022827]
[-100.11833191 -96.91239166]
[-115.00233459 -94.97442627]
[-129.99861145 -94.34107208]
[-144.99301147 -95.01715088]
[-159.87144470 -96.99752045]
[-174.52064514 -100.26709747]
[-188.82914734 -104.80101013]
[-202.68801880 -110.56475067]
[-215.99182129 -117.51445007]
[-228.63928223 -125.59721375]
[-240.53414917 -134.75152588]
[-251.58589172 -144.90773010]
[-261.71041870 -155.98849487]
[-270.83062744 -167.90953064]
[-278.87713623 -180.58007812]
[-285.78872681 -193.90373230]
[-291.51275635 -207.77905273]
[-296.00567627 -222.10046387]
[-299.23330688 -236.75897217]
[-301.17108154 -251.64300537]
[-301.80422974 -266.63928223]
[-301.12792969 -281.63369751]
[-299.14736938 -296.51208496]
[-295.87756348 -311.16125488]
[-291.34344482 -325.46966553]
[-285.57952881 -339.32849121]
[-278.62963867 -352.63217163]
[-270.54669189 -365.27954102]
[-261.39221191 -377.17425537]
[-251.23587036 -388.22586060]
[-240.15493774 -398.35021973]
[-228.23377991 -407.47027588]
[-215.56312561 -415.51663208]
[-202.23937988 -422.42800903]
[-188.36396790 -428.15185547]
[-174.04249573 -432.64459229]
[-159.38394165 -435.87200928]
[-144.49987793 -437.80953979]
[-129.50358582 -438.44247437]
[-114.50920105 -437.76599121]
[-99.63082886 -435.78521729]
[-84.98171997 -432.51519775]
[-70.67335510 -427.98089600]
[-56.81462860 -422.21676636]
[-43.51102448 -415.26669312]
[-30.86379051 -407.18359375]
[-18.96917915 -398.02893066]
[-7.91771936 -387.87243652]
[2.20648026 -376.79135132]
[11.32636642 -364.87008667]
[19.37253189 -352.19931030]
[26.28373528 -338.87545776]
[32.00738144 -324.99996948]
[36.49990845 -310.67843628]
[39.72712326 -296.01983643]
[41.66446304 -281.13574219]
[42.29718781 -266.13943481]
[41.62047958 -251.14506531]
[39.63948441 -236.26672363]
[36.36928940 -221.61766052]
[31.83477211 -207.30935669]
[26.07044983 -193.45071411]
[19.12019348 -180.14720154]
[11.03689671 -167.50009155]
[1.88208091 -155.60560608]
[-8.27457905 -144.55429077]
[-19.35578346 -134.43023682]
[-31.27719688 -125.31052399]
[-23.23602295 -112.64799500]
[-15.19484997 -99.98547363]
[-7.15367746 -87.32294464]
[0.88749564 -74.66042328]
[15.76301193 -75.42501831]
[29.11277771 -68.59568787]
[37.30591583 -55.91740417]
[38.05794144 -40.74073792]
[31.06687927 -27.13661003]
[39.10805130 -14.47408485]
[47.14922714 -1.81155980]
[58.88296127 1.12885237]
[65.68582153 11.61240101]
[63.45337677 24.31590462]
[71.30513000 37.09674454]
[79.15689087 49.87759018]
[87.00864410 62.65843201]
[91.36321259 64.61975098]
[94.53192139 69.33740997]
[94.89735413 75.93877411]
[102.36508942 88.94772339]
[105.30820465 74.23928833]
[116.25611877 63.98535538]
[131.12553406 62.01038361]
[144.37052917 69.05099487]
[151.05104065 82.48120880]
[148.67541504 97.29189301]
[138.12968445 107.95903015]
[123.34716034 110.50403595]
[109.84051514 103.97688293]
[115.70947266 117.78105927]
[121.57843018 131.58523560]
[127.44739532 145.38941956]
[131.42131042 130.92538452]
[142.51283264 120.82696533]
[157.28512573 118.22324371]
[171.16082764 123.92102051]
[179.84042358 136.15476990]
[180.63442993 151.13374329]
[173.29681396 164.21653748]
[160.10121155 171.34930420]
[145.13644409 170.32186890]
[133.03933716 161.45240784]
[137.01142883 175.91693115]
[140.98352051 190.38145447]
[144.95562744 204.84597778]
[148.92771912 219.31050110]
[152.89981079 233.77502441]
[156.87191772 248.23954773]
[162.74261475 234.43611145]
[175.08386230 225.91006470]
[190.07157898 225.30326843]
[203.06166077 232.80377197]
[210.02900696 246.08746338]
[208.81468201 261.03823853]
[199.79498291 273.02340698]
[185.76473999 278.32928467]
[171.07138062 275.31176758]
[160.26768494 264.90563965]
[162.27169800 279.77117920]
[164.27571106 294.63668823]
[168.52359009 302.72332764]
[166.19720459 309.73828125]
[167.97966003 324.63198853]
[169.76213074 339.52572632]
[184.78343201 340.03649902]
[199.55070496 342.83438110]
[213.71777344 347.85379028]
[226.95254517 354.97708130]
[238.94477844 364.03726196]
[249.41336060 374.82192993]
[258.11288452 387.07830811]
[264.83944702 400.51904297]
[269.43533325 414.82913208]
[271.79281616 429.67306519]
[271.85665894 444.70291138]
[269.62533569 459.56634521]
[265.15118408 473.91494751]
[258.53903198 487.41235352]
[249.94392395 499.74218750]
[239.56733704 510.61538696]
[227.65248108 519.77709961]
[214.47869873 527.01257324]
[200.35478210 532.15209961]
[185.61180115 535.07537842]
[170.59538269 535.71368408]
[155.65751648 534.05218506]
[141.14836121 530.12982178]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 187]
[17 186]
[18 185]
[19 183]
[20 182]
[21 181]
[22 171]
[23 170]
[24 169]
[25 168]
[26 167]
[27 166]
[28 165]
[29 155]
[30 154]
[31 153]
[32 152]
[33 143]
[34 142]
[35 139]
[36 138]
[37 137]
[38 136]
[40 133]
[41 132]
[42 131]
[47 126]
[48 125]
[49 124]
[50 123]
[51 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
