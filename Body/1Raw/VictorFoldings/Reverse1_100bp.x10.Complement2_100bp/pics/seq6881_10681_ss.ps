%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[229.28872681 560.02233887]
[232.33012390 545.31500244]
[237.12217712 531.08142090]
[243.59500122 517.52929688]
[251.65419006 504.85623169]
[261.18222046 493.24703979]
[272.04013062 482.87097168]
[284.06964111 473.87936401]
[276.60189819 460.87039185]
[269.13415527 447.86145020]
[261.66641235 434.85250854]
[258.99887085 433.99090576]
[256.51187134 432.02078247]
[254.62936401 429.00555420]
[253.74453735 425.16085815]
[254.16787720 420.83941650]
[247.48768616 407.40905762]
[240.80747986 393.97866821]
[234.12728882 380.54830933]
[227.44709778 367.11791992]
[220.66709900 353.73764038]
[213.78768921 340.40823364]
[206.90827942 327.07879639]
[200.02886963 313.74935913]
[193.14945984 300.41992188]
[186.27005005 287.09051514]
[179.39062500 273.76107788]
[166.67796326 265.99978638]
[167.22441101 250.18803406]
[160.34500122 236.85859680]
[153.46559143 223.52917480]
[146.58618164 210.19973755]
[133.87351990 202.43846130]
[134.41996765 186.62669373]
[127.54055023 173.29725647]
[120.66114044 159.96783447]
[116.46450806 157.68806458]
[113.65545654 152.74780273]
[113.78202820 146.13754272]
[107.30252838 132.60919189]
[100.82303619 119.08084869]
[87.19206238 114.16732025]
[80.93307495 101.09937286]
[85.64862061 87.39864349]
[79.16912079 73.87030029]
[72.63976288 67.48239899]
[72.69554901 60.09195709]
[66.41819000 46.46863937]
[51.19703674 44.96404266]
[38.85415649 36.10119247]
[32.64597321 22.34165764]
[34.14850235 7.42192602]
[42.85858154 -4.66112423]
[36.58121872 -18.28444099]
[30.30385971 -31.90775681]
[24.02649879 -45.53107452]
[17.74913788 -59.15438843]
[11.47177696 -72.77770233]
[5.19441652 -86.40102386]
[-1.23911715 -92.88542175]
[-1.07330275 -100.27421570]
[-7.14713669 -113.98948669]
[-13.22097111 -127.70475006]
[-28.34468842 -138.20973206]
[-25.79635620 -155.57270813]
[-32.07371521 -169.19602966]
[-38.35107803 -182.81933594]
[-51.15349960 -192.11495972]
[-49.45256805 -206.91212463]
[-55.72992706 -220.53544617]
[-70.14765167 -216.29905701]
[-85.02857208 -214.20713806]
[-100.05549622 -214.30427551]
[-114.90812683 -216.58842468]
[-129.26986694 -221.01086426]
[-142.83462524 -227.47735596]
[-155.31323242 -235.85005188]
[-166.43972778 -245.95050049]
[-175.97694397 -257.56338501]
[-183.72158813 -270.44122314]
[-189.50860596 -284.30947876]
[-193.21461487 -298.87255859]
[-194.76063538 -313.82003784]
[-194.11372375 -328.83334351]
[-191.28765869 -343.59246826]
[-186.34268188 -357.78277588]
[-179.38418579 -371.10183716]
[-170.56050110 -383.26571655]
[-160.05970764 -394.01519775]
[-148.10562134 -403.12112427]
[-134.95304871 -410.38937378]
[-120.88233948 -415.66506958]
[-106.19340515 -418.83575439]
[-91.19934845 -419.83380127]
[-76.21977234 -418.63800049]
[-61.57395172 -415.27380371]
[-47.57407761 -409.81289673]
[-34.51855087 -402.37173462]
[-22.68565178 -393.10888672]
[-12.32760239 -382.22177124]
[-3.66518235 -369.94253540]
[3.11696696 -356.53280640]
[7.87428427 -342.27847290]
[10.50536633 -327.48336792]
[10.95413303 -312.46282959]
[9.21101761 -297.53704834]
[5.31317425 -283.02413940]
[-0.65631312 -269.23342896]
[-8.57020473 -256.45892334]
[-18.25981712 -244.97288513]
[-29.51861191 -235.02012634]
[-42.10660934 -226.81280518]
[-35.82925034 -213.18948364]
[-23.47582626 -204.86830139]
[-24.72776222 -189.09671021]
[-18.45040131 -175.47338867]
[-12.17304039 -161.85006714]
[-0.93733716 -157.36837769]
[4.40392971 -146.06994629]
[0.49429604 -133.77857971]
[6.56813002 -120.06331635]
[12.64196396 -106.34805298]
[18.81773186 -92.67838287]
[25.09509277 -79.05506897]
[31.37245369 -65.43174744]
[37.64981461 -51.80843353]
[43.92717361 -38.18511581]
[50.20453644 -24.56180191]
[56.48189545 -10.93848515]
[71.32621002 -9.70884228]
[83.64389038 -1.15719724]
[90.06974792 12.50203896]
[88.78741455 27.64312363]
[80.04150391 40.19128036]
[86.31886292 53.81459808]
[92.69747162 67.39080048]
[99.17696381 80.91915131]
[112.80793762 85.83267975]
[119.06692505 98.90062714]
[114.35137939 112.60135651]
[120.83087921 126.12969971]
[127.31037140 139.65805054]
[133.99057007 153.08842468]
[140.86997986 166.41784668]
[147.74938965 179.74728394]
[160.95411682 188.46197510]
[159.91560364 203.32032776]
[166.79501343 216.64974976]
[173.67443848 229.97918701]
[180.55384827 243.30860901]
[193.75857544 252.02330017]
[192.72006226 266.88165283]
[199.59947205 280.21109009]
[206.47888184 293.54052734]
[213.35829163 306.86993408]
[220.23771667 320.19937134]
[227.11712646 333.52880859]
[233.99653625 346.85824585]
[240.71319580 353.04888916]
[240.87747192 360.43771362]
[247.55766296 373.86810303]
[254.23786926 387.29849243]
[260.91806030 400.72885132]
[267.59826660 414.15924072]
[274.67535400 427.38476562]
[282.14309692 440.39370728]
[289.61083984 453.40264893]
[297.07858276 466.41162109]
[310.90948486 460.55813599]
[325.34515381 456.41452026]
[340.17498779 454.04119873]
[355.18280029 453.47274780]
[370.14968872 454.71749878]
[384.85742188 457.75723267]
[399.09149170 462.54769897]
[412.64434814 469.01901245]
[425.31832886 477.07675171]
[436.92861938 486.60348511]
[447.30590820 497.46026611]
[456.29885864 509.48873901]
[463.77633667 522.51348877]
[469.62927246 536.34466553]
[473.77233887 550.78045654]
[476.14514160 565.61041260]
[476.71301270 580.61822510]
[475.46771240 595.58508301]
[472.42742920 610.29266357]
[467.63641357 624.52655029]
[461.16461182 638.07916260]
[453.10638428 650.75286865]
[443.57922363 662.36279297]
[432.72207642 672.73968506]
[420.69326782 681.73217773]
[407.66821289 689.20916748]
[393.83685303 695.06158447]
[379.40087891 699.20410156]
[364.57086182 701.57635498]
[349.56301880 702.14367676]
[334.59622192 700.89782715]
[319.88870239 697.85693359]
[305.65499878 693.06542969]
[292.10263062 686.59313965]
[279.42926025 678.53442383]
[267.81967163 669.00683594]
[257.44320679 658.14929199]
[248.45115662 646.12011719]
[240.97465515 633.09478760]
[235.12274170 619.26324463]
[230.98074341 604.82708740]
[228.60906982 589.99700928]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 168]
[9 167]
[10 166]
[11 165]
[16 164]
[17 163]
[18 162]
[19 161]
[20 160]
[21 158]
[22 157]
[23 156]
[24 155]
[25 154]
[26 153]
[27 152]
[29 150]
[30 149]
[31 148]
[32 147]
[34 145]
[35 144]
[36 143]
[39 142]
[40 141]
[41 140]
[44 137]
[45 136]
[47 135]
[48 134]
[53 129]
[54 128]
[55 127]
[56 126]
[57 125]
[58 124]
[59 123]
[61 122]
[62 121]
[63 120]
[65 117]
[66 116]
[67 115]
[69 113]
[70 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
