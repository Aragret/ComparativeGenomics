%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAUUCCUCUAAACAUCCCUCUAAUCAUAUCUCUCCAUCUCAAAAAAAGCACUAUCACCAAGUGACCUAUUCACCGCAACCGAACGGUACUAACACUCxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[11.31511593 439.45581055]
[16.38702774 453.72305298]
[16.54906464 468.86413574]
[11.78365326 483.23666382]
[2.60770798 495.28161621]
[-9.98343277 503.69244385]
[-24.62397575 507.55679321]
[-39.72582626 506.45550537]
[-53.65084839 500.50799561]
[-64.88855743 490.35949707]
[-72.21997070 477.11074829]
[-74.84983063 462.19891357]
[-72.49287415 447.24151611]
[-65.40476990 433.86105347]
[-54.35437012 423.50888062]
[-40.54034424 417.30795288]
[-25.46113968 415.93090820]
[-21.92146873 401.35452271]
[-18.38179588 386.77813721]
[-14.84212303 372.20178223]
[-11.30245018 357.62539673]
[-7.76277828 343.04901123]
[-9.10437107 340.58767700]
[-9.55182266 337.44659424]
[-8.84135342 333.96368408]
[-6.83626032 330.56600952]
[-3.55415368 327.72317505]
[0.84684443 313.38333130]
[5.24784231 299.04348755]
[-0.14073348 288.21343994]
[3.40845203 276.23065186]
[14.51569080 269.67382812]
[19.12969971 255.40107727]
[23.74370956 241.12835693]
[28.35771751 226.85562134]
[32.75871658 212.51577759]
[36.94572830 198.11198425]
[41.13274002 183.70820618]
[30.78154564 194.56420898]
[17.71977997 201.93919373]
[3.07741570 205.19512939]
[-11.87883759 204.05035400]
[-25.85511398 198.60392761]
[-37.64232635 189.32698059]
[-46.22076035 177.02207947]
[-50.84829712 162.75373840]
[-51.12461090 147.75627136]
[-47.02579498 133.32714844]
[-38.90643692 120.71461487]
[-27.46894646 111.00978088]
[-13.70277691 105.05221558]
[1.20115829 103.35730743]
[15.95351982 106.07167816]
[29.27808189 112.96051788]
[40.02213669 123.42785645]
[47.25621414 136.56819153]
[50.35449219 151.24472046]
[49.04976273 166.18437195]
[57.09093857 153.52185059]
[65.13211060 140.85932922]
[73.17328644 128.19679260]
[81.21445465 115.53427124]
[89.25563049 102.87174988]
[74.41815948 105.07391357]
[62.28769684 96.25054169]
[59.81311798 81.45606995]
[68.41197968 69.16543579]
[83.15845490 66.41928101]
[95.60510254 74.79071808]
[98.62208557 89.48328400]
[107.76088715 77.58864594]
[116.89968872 65.69401550]
[125.86038208 53.66463852]
[134.64099121 41.50318146]
[143.42158508 29.34172630]
[152.20219421 17.18027115]
[160.89201355 4.95378542]
[169.49058533 -7.33705235]
[168.01821899 -20.15090942]
[175.43301392 -30.21095848]
[187.32096863 -32.44775391]
[196.10156250 -44.60920715]
[204.88217163 -56.77066422]
[213.66278076 -68.93212128]
[220.73988342 -82.15764618]
[225.98660278 -96.21012115]
[231.23332214 -110.26258850]
[236.48002625 -124.31506348]
[223.04020691 -131.00749207]
[210.37356567 -139.06813049]
[198.61888123 -148.40864563]
[187.90496826 -158.92672729]
[178.34921265 -170.50709534]
[170.05628967 -183.02290344]
[163.11708069 -196.33699036]
[157.60760498 -210.30349731]
[153.58824158 -224.76940918]
[151.10301208 -239.57620239]
[150.17915344 -254.56167603]
[150.82679749 -269.56161499]
[153.03883362 -284.41168213]
[156.79103088 -298.94918823]
[162.04226685 -313.01483154]
[168.73503113 -326.45449829]
[176.79597473 -339.12094116]
[186.13677979 -350.87536621]
[196.65510559 -361.58905029]
[208.23571777 -371.14453125]
[220.75170898 -379.43713379]
[234.06597900 -386.37600708]
[248.03262329 -391.88516235]
[262.49862671 -395.90417480]
[277.30548096 -398.38903809]
[292.29098511 -399.31253052]
[307.29089355 -398.66452026]
[322.14093018 -396.45214844]
[336.67831421 -392.69958496]
[350.74383545 -387.44799805]
[364.18334961 -380.75491333]
[376.84957886 -372.69366455]
[388.60382080 -363.35256958]
[399.31719971 -352.83398438]
[408.87240601 -341.25314331]
[417.16473389 -328.73693848]
[424.10327148 -315.42251587]
[429.61209106 -301.45571899]
[433.63073730 -286.98962402]
[436.11526489 -272.18270874]
[437.03839111 -257.19720459]
[436.39001465 -242.19728088]
[434.17724609 -227.34732056]
[430.42434692 -212.81001282]
[425.17242432 -198.74462891]
[418.47900391 -185.30528259]
[410.41744995 -172.63922119]
[401.07608032 -160.88523865]
[390.55722046 -150.17208862]
[378.97616577 -140.61717224]
[366.45974731 -132.32516479]
[353.14514160 -125.38692474]
[339.17825317 -119.87847137]
[324.71203613 -115.86015320]
[309.90505981 -113.37600708]
[294.91952515 -112.45324707]
[279.91964722 -113.10197449]
[265.06973267 -115.31508636]
[250.53250122 -119.06834412]
[245.28578186 -105.01586914]
[240.03906250 -90.96340179]
[234.79234314 -76.91092682]
[245.99401855 -86.88703156]
[259.70483398 -92.97088623]
[274.61801147 -94.58259583]
[289.31207275 -91.56856537]
[302.38650513 -84.21605682]
[312.59512329 -73.22587585]
[318.96490479 -59.64552689]
[320.88873291 -44.76940918]
[318.18322754 -30.01541710]
[311.10629272 -16.78980827]
[300.33239746 -6.35316038]
[286.88851929 0.29976922]
[272.05596924 2.53486633]
[257.24853516 0.13909554]
[243.87753296 -6.65919352]
[233.21743774 -17.21203041]
[226.28428650 -30.51358795]
[223.73890686 -45.29604340]
[225.82423401 -60.15151596]
[217.04362488 -47.99006271]
[208.26301575 -35.82860565]
[199.48242188 -23.66715050]
[198.64337158 -6.13823271]
[181.78141785 1.26151156]
[173.18286133 13.55234909]
[171.92433167 20.83506203]
[164.36364746 25.96087456]
[155.58305359 38.12232971]
[146.80244446 50.28378677]
[138.02183533 62.44524002]
[137.88511658 67.21916962]
[134.74800110 71.95788574]
[128.79432678 74.83281708]
[119.65551758 86.72745514]
[110.51671600 98.62208557]
[101.91815186 110.91292572]
[93.87698364 123.57544708]
[85.83580780 136.23797607]
[77.79463196 148.90049744]
[69.75346375 161.56301880]
[61.71228790 174.22554016]
[55.53652191 187.89521790]
[51.34951019 202.29899597]
[47.16249847 216.70277405]
[48.36516953 223.20394897]
[46.39921188 228.53611755]
[42.63045120 231.46961975]
[38.01644135 245.74235535]
[33.40243149 260.01510620]
[28.78842354 274.28784180]
[33.06058502 292.19955444]
[19.58769035 303.44445801]
[15.18669128 317.78433228]
[10.78569317 332.12417603]
[6.81359720 346.58868408]
[3.27392483 361.16506958]
[-0.26574755 375.74145508]
[-3.80541992 390.31781006]
[-7.34509230 404.89419556]
[-10.88476467 419.47058105]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 210]
[18 209]
[19 208]
[20 207]
[21 206]
[22 205]
[27 204]
[28 203]
[29 202]
[32 200]
[33 199]
[34 198]
[35 197]
[36 194]
[37 193]
[38 192]
[58 191]
[59 190]
[60 189]
[61 188]
[62 187]
[63 186]
[70 185]
[71 184]
[72 183]
[73 180]
[74 179]
[75 178]
[76 177]
[77 175]
[78 174]
[81 172]
[82 171]
[83 170]
[84 169]
[85 150]
[86 149]
[87 148]
[88 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
