%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUGGCUAUAGCGGCUAUGCCAACAUAUCCUAACGAACUUACCGACGACACAACCGUAGACGAGCCCGCAUAGUAGUUGACUACUCGUUCUUCCUAUAUUxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[95.38102722 545.73706055]
[84.56872559 535.28405762]
[75.73599243 523.11218262]
[69.15123749 509.59136963]
[65.01456451 495.13250732]
[63.45168304 480.17495728]
[64.51008606 465.17324829]
[68.15760803 450.58328247]
[74.28340912 436.84844971]
[82.70133209 424.38613892]
[93.15556335 413.57501221]
[105.32841492 404.74365234]
[118.84996796 398.16043091]
[133.30931091 394.02542114]
[131.74879456 379.10681152]
[130.18826294 364.18820190]
[121.16886902 352.33493042]
[127.42848206 337.80471802]
[118.40908813 325.95144653]
[124.66870880 311.42120361]
[123.10818481 296.50259399]
[121.21488953 281.62255859]
[118.98977661 266.78851318]
[116.76465607 251.95448303]
[101.28892517 249.54035950]
[87.29932404 242.45329285]
[76.17072296 231.37629700]
[69.00097656 217.38520813]
[66.50260162 201.84410095]
[68.93203735 186.27241516]
[76.06333160 172.19628906]
[87.20910645 160.99906921]
[101.28683472 153.78530884]
[98.84111023 138.98603821]
[96.39537811 124.18676758]
[93.94965363 109.38749695]
[91.39382172 94.60684204]
[88.72802734 79.84562683]
[85.29696655 65.24330139]
[81.10995483 50.83951950]
[76.92294312 36.43573761]
[72.73593140 22.03195763]
[68.54891968 7.62817478]
[64.36190796 -6.77560711]
[60.17489624 -21.17938995]
[44.69234085 -29.32247162]
[39.98210907 -45.81879044]
[48.48927689 -60.32626724]
[44.08827591 -74.66611481]
[39.68727875 -89.00596619]
[24.57531166 -89.29901886]
[10.31313992 -94.24198914]
[-1.70661783 -103.33890533]
[-10.31442356 -115.68882751]
[-14.67761230 -130.07511902]
[-14.38092518 -145.08520508]
[-9.46599865 -159.24937439]
[-0.42605612 -171.18460083]
[11.84356213 -179.72962952]
[7.44256401 -194.06947327]
[3.04156613 -208.40931702]
[-1.35943198 -222.74916077]
[-5.76042986 -237.08900452]
[-19.52866936 -249.31672668]
[-14.93513298 -266.25384521]
[-19.54914284 -280.52658081]
[-24.16315269 -294.79931641]
[-28.77716064 -309.07205200]
[-33.39117050 -323.34478760]
[-48.12677383 -320.44680786]
[-63.10170746 -319.31201172]
[-78.10574341 -319.95635986]
[-92.92825317 -322.37081909]
[-107.36115265 -326.52145386]
[-121.20182037 -332.35003662]
[-134.25596619 -339.77471924]
[-146.34031677 -348.69125366]
[-157.28521729 -358.97451782]
[-166.93705750 -370.48010254]
[-175.16030884 -383.04650879]
[-181.83952332 -396.49731445]
[-186.88096619 -410.64370728]
[-190.21383667 -425.28707886]
[-191.79136658 -440.22186279]
[-191.59140015 -455.23840332]
[-189.61672974 -470.12585449]
[-185.89511108 -484.67529297]
[-180.47875977 -498.68243408]
[-173.44371033 -511.95059204]
[-164.88874817 -524.29357910]
[-154.93395996 -535.53808594]
[-143.71910095 -545.52618408]
[-131.40159607 -554.11779785]
[-118.15438080 -561.19226074]
[-104.16341400 -566.65020752]
[-89.62510681 -570.41503906]
[-74.74355316 -572.43389893]
[-59.72768021 -572.67846680]
[-44.78827667 -571.14532471]
[-30.13506699 -567.85601807]
[-15.97376537 -562.85662842]
[-2.50317025 -556.21734619]
[10.08761120 -548.03149414]
[21.62182236 -538.41387939]
[31.93754387 -527.49957275]
[40.88995743 -515.44177246]
[48.35338593 -502.40975952]
[54.22305298 -488.58645630]
[58.41655731 -474.16595459]
[60.87503052 -459.35067749]
[61.56396103 -444.34863281]
[60.47367477 -429.37039185]
[57.61947632 -414.62625122]
[53.04143524 -400.32315063]
[46.80382156 -386.66195679]
[38.99420166 -373.83441162]
[29.72220993 -362.02056885]
[19.11800957 -351.38632202]
[7.33046722 -342.08093262]
[-5.47493744 -334.23504639]
[-19.11843681 -327.95880127]
[-14.50442791 -313.68606567]
[-9.89041805 -299.41333008]
[-5.27640915 -285.14059448]
[-0.66239995 -270.86785889]
[9.96112823 -265.08279419]
[13.92194462 -253.22969055]
[8.57941723 -241.49000549]
[12.98041534 -227.15016174]
[17.38141251 -212.81031799]
[21.78241158 -198.47047424]
[26.18340874 -184.13061523]
[41.13414764 -183.93971252]
[55.31306839 -179.13052368]
[67.32754517 -170.16209412]
[75.99343109 -157.90267944]
[80.45178223 -143.54560852]
[80.25394440 -128.49316406]
[75.40673065 -114.21966553]
[66.37291718 -102.12699127]
[54.02712631 -93.40695953]
[58.42812347 -79.06711578]
[62.82912445 -64.72726440]
[74.94530487 -60.34232712]
[82.43545532 -49.61946869]
[82.38134766 -36.34514999]
[74.57867432 -25.36639977]
[78.76568604 -10.96261787]
[82.95269775 3.44116378]
[87.13970947 17.84494591]
[91.32672119 32.24872589]
[95.51373291 46.65251160]
[99.70074463 61.05629349]
[106.84804535 47.86856461]
[120.75342560 42.24359512]
[135.05953979 46.75304031]
[143.22583008 59.33524704]
[141.51875305 74.23779297]
[130.71879578 84.64743805]
[115.76352692 85.80503845]
[103.48924255 77.17983246]
[106.15503693 91.94104767]
[110.57276917 98.68316650]
[108.74892426 106.94177246]
[111.19464874 121.74104309]
[113.64038086 136.54031372]
[116.08610535 151.33958435]
[130.35897827 153.23060608]
[143.50564575 159.06135559]
[154.46374512 168.35086060]
[162.35057068 180.33901978]
[166.53410339 194.04884338]
[166.68368530 208.36605835]
[162.79618835 222.12966919]
[155.19544983 234.22608948]
[144.50537109 243.67924500]
[131.59869385 249.72935486]
[133.82382202 264.56341553]
[136.04893494 279.39746094]
[139.30195618 283.47970581]
[140.54000854 287.95416260]
[139.95112610 291.98754883]
[138.02679443 294.94207764]
[139.58731079 309.86068726]
[148.71832275 322.78103638]
[142.34709167 336.24417114]
[151.47810364 349.16452026]
[145.10687256 362.62768555]
[146.66738892 377.54629517]
[148.22792053 392.46487427]
[163.22996521 393.51818848]
[177.82116699 397.16073608]
[191.55807495 403.28186035]
[204.02326965 411.69555664]
[214.83793640 422.14611816]
[223.67343140 434.31594849]
[230.26126099 447.83526611]
[234.40121460 462.29321289]
[235.96748352 477.25039673]
[234.91249084 492.25234985]
[231.26828003 506.84310913]
[225.14558411 520.57934570]
[216.73049927 533.04357910]
[206.27871704 543.85705566]
[194.10786438 552.69116211]
[180.58781433 559.27746582]
[166.12940979 563.41577148]
[151.17202759 564.98034668]
[136.17021179 563.92364502]
[121.57984161 560.27777100]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 190]
[15 189]
[16 188]
[18 186]
[20 184]
[21 183]
[22 179]
[23 178]
[24 177]
[33 167]
[34 166]
[35 165]
[36 164]
[37 162]
[38 161]
[39 153]
[40 152]
[41 151]
[42 150]
[43 149]
[44 148]
[45 147]
[48 143]
[49 142]
[50 141]
[59 132]
[60 131]
[61 130]
[62 129]
[63 128]
[65 125]
[66 124]
[67 123]
[68 122]
[69 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
