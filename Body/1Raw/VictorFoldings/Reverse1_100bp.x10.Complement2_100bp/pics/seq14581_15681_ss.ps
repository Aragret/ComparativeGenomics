%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCUUAUUACUACAUACGAAACAAAGACAACUCACACCCAAAUCAUUACCCCAAACACCCCAAAAGAAGAUUCGGAAGAGGAUAAAUACCCCCAAAUCAxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[198.83111572 401.57092285]
[209.51568604 390.98739624]
[221.87585449 382.42016602]
[215.59849548 368.79684448]
[209.32112122 355.17352295]
[203.04376221 341.55020142]
[196.76640320 327.92691040]
[190.48904419 314.30358887]
[184.21168518 300.68026733]
[171.85826111 292.35906982]
[173.11019897 276.58749390]
[166.83283997 262.96417236]
[154.47941589 254.64297485]
[155.73133850 238.87138367]
[149.45397949 225.24806213]
[137.10055542 216.92687988]
[138.35249329 201.15527344]
[132.07513428 187.53196716]
[125.79777527 173.90864563]
[110.01807404 177.63795471]
[93.80857086 178.03640747]
[77.86470032 175.08689880]
[62.87048340 168.91598511]
[49.46921158 159.78840637]
[38.23583984 148.09576416]
[29.65229607 134.33969116]
[24.08684158 119.11035919]
[21.77824593 103.06114960]
[22.82555389 86.88060760]
[27.18383408 71.26292419]
[34.66610336 56.87813187]
[44.95135880 44.34336853]
[57.59833145 34.19641113]
[50.71892166 20.86698341]
[43.83950806 7.53755426]
[36.96009445 -5.79187489]
[29.88298988 -19.01740265]
[22.60976028 -32.13609695]
[15.33653069 -45.25479126]
[3.17549109 -49.55268860]
[-2.61232328 -60.62901306]
[0.59245193 -72.29331970]
[-6.48465347 -85.51884460]
[-13.56175900 -98.74436951]
[-20.63886452 -111.96990204]
[-27.71596909 -125.19542694]
[-31.48361206 -127.35385895]
[-34.10480881 -130.30239868]
[-35.47195053 -133.58360291]
[-35.63704681 -136.75209045]
[-34.79395294 -139.42555237]
[-41.07131195 -153.04885864]
[-47.34867477 -166.67218018]
[-54.91305161 -179.62518311]
[-63.69365692 -191.78663635]
[-72.47425842 -203.94808960]
[-81.25485992 -216.10954285]
[-90.03546906 -228.27099609]
[-103.14861298 -220.95240784]
[-117.02274323 -215.20565796]
[-131.47023010 -211.10850525]
[-146.29568481 -208.71633911]
[-161.29859924 -208.06152344]
[-176.27610779 -209.15289307]
[-191.02561951 -211.97570801]
[-205.34768677 -216.49177551]
[-219.04861450 -222.64004517]
[-231.94311523 -230.33735657]
[-243.85679626 -239.47959900]
[-254.62854004 -249.94314575]
[-264.11270142 -261.58648682]
[-272.18096924 -274.25216675]
[-278.72424316 -287.76889038]
[-283.65405273 -301.95388794]
[-286.90374756 -316.61526489]
[-288.42932129 -331.55477905]
[-288.21017456 -346.57037354]
[-286.24926758 -361.45901489]
[-282.57312012 -376.01931763]
[-277.23144531 -390.05438232]
[-270.29647827 -403.37438965]
[-261.86199951 -415.79922485]
[-252.04211426 -427.16085815]
[-240.96960449 -437.30557251]
[-228.79418945 -446.09625244]
[-215.68055725 -453.41400146]
[-201.80604553 -459.15979004]
[-187.35829163 -463.25598145]
[-172.53266907 -465.64715576]
[-157.52970886 -466.30099487]
[-142.55227661 -465.20861816]
[-127.80294800 -462.38482666]
[-113.48118591 -457.86779785]
[-99.78067017 -451.71859741]
[-86.88668823 -444.02044678]
[-74.97361755 -434.87741089]
[-64.20256042 -424.41311646]
[-54.71919632 -412.76913452]
[-46.65176773 -400.10293579]
[-40.10938263 -386.58575439]
[-35.18051147 -372.40045166]
[-31.93181992 -357.73886108]
[-30.40723991 -342.79925537]
[-30.62738991 -327.78366089]
[-32.58929062 -312.89514160]
[-36.26641083 -298.33508301]
[-41.60902405 -284.30038452]
[-48.54487228 -270.98083496]
[-56.98016357 -258.55657959]
[-66.80081177 -247.19560242]
[-77.87400818 -237.05160522]
[-69.09340668 -224.89015198]
[-60.31280518 -212.72869873]
[-51.53219986 -200.56723022]
[-42.75159836 -188.40577698]
[-43.86656570 -203.36428833]
[-38.87773132 -217.51036072]
[-28.62579727 -228.46015930]
[-14.83839893 -234.36842346]
[0.16104722 -234.23951721]
[13.84487057 -228.09518433]
[23.90710640 -216.97080994]
[28.65209198 -202.74108887]
[27.28021240 -187.80395508]
[20.02265549 -174.67658997]
[8.10244560 -165.57116699]
[-6.47165251 -162.02212524]
[-21.24364662 -164.62754822]
[-33.72535706 -172.94953918]
[-27.44799805 -159.32621765]
[-21.17063713 -145.70291138]
[-14.49044228 -132.27253723]
[-7.41333675 -119.04700470]
[-0.33623138 -105.82147980]
[6.74087381 -92.59594727]
[13.81797981 -79.37042236]
[29.20225716 -70.92702484]
[28.45522499 -52.52801895]
[35.72845459 -39.40932465]
[43.00168228 -26.29063225]
[47.26433182 -24.13682747]
[50.21922684 -19.28238297]
[50.28952408 -12.67128754]
[57.16893768 0.65814173]
[64.04834747 13.98757076]
[70.92776489 27.31699944]
[84.11373138 23.34727669]
[97.79129791 21.74953651]
[111.53721619 22.57321930]
[124.92610931 25.79284096]
[137.54368591 31.30876732]
[148.99948120 38.95031357]
[158.93901062 48.48101425]
[167.05470276 59.60594559]
[173.09542847 71.98085785]
[176.87423706 85.22280121]
[178.27420044 98.92201996]
[177.25201416 112.65460205]
[173.83930969 125.99559021]
[168.14166260 138.53215027]
[160.33541870 149.87635803]
[150.66210938 159.67716980]
[139.42109680 167.63128662]
[145.69845581 181.25460815]
[151.97581482 194.87791443]
[164.77822876 204.17353821]
[163.07730103 218.97070312]
[169.35466003 232.59402466]
[182.15708923 241.88963318]
[180.45614624 256.68679810]
[186.73350525 270.31011963]
[199.53593445 279.60574341]
[197.83500671 294.40289307]
[204.11236572 308.02621460]
[210.38972473 321.64953613]
[216.66708374 335.27285767]
[222.94444275 348.89617920]
[229.22180176 362.51947021]
[235.49916077 376.14279175]
[250.04244995 372.31344604]
[265.02975464 371.06784058]
[280.00567627 372.44390869]
[294.51504517 376.39974976]
[308.11700439 382.81521606]
[320.39816284 391.49533081]
[330.98532104 402.17630005]
[339.55673218 414.53356934]
[345.85195923 428.19155884]
[349.67968750 442.73529053]
[350.92358398 457.72274780]
[349.54583740 472.69848633]
[345.58831787 487.20742798]
[339.17129517 500.80865479]
[330.48980713 513.08880615]
[319.80764771 523.67474365]
[307.44940186 532.24481201]
[293.79067993 538.53845215]
[279.24652100 542.36456299]
[264.25894165 543.60675049]
[249.28335571 542.22729492]
[234.77485657 538.26812744]
[221.17437744 531.84954834]
[208.89518738 523.16668701]
[198.31044006 512.48333740]
[189.74182129 500.12411499]
[183.44969177 486.46469116]
[179.62527466 471.92010498]
[178.38478088 456.93234253]
[179.76593018 441.95690918]
[183.72673035 427.44888306]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 179]
[4 178]
[5 177]
[6 176]
[7 175]
[8 174]
[9 173]
[11 171]
[12 170]
[14 168]
[15 167]
[17 165]
[18 164]
[19 163]
[33 146]
[34 145]
[35 144]
[36 143]
[37 140]
[38 139]
[39 138]
[42 136]
[43 135]
[44 134]
[45 133]
[46 132]
[51 131]
[52 130]
[53 129]
[54 115]
[55 114]
[56 113]
[57 112]
[58 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
