%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUAAUCAGUAACAACCCACCACUAAUCAGCCAACAACUACUCUAUAAACCUCCACCCCUAGUUAUCUCCCCCUUUAUCUUACUAGUCAUGACGCCxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[130.72088623 611.78729248]
[117.34831238 604.87652588]
[105.64082336 595.41503906]
[96.07783508 583.79028320]
[89.05094147 570.47839355]
[84.84790039 556.02435303]
[83.64081573 541.02008057]
[85.47911835 526.08001709]
[90.28753662 511.81591797]
[97.86915588 498.81192017]
[107.91352844 487.60052490]
[120.00933075 478.64080811]
[133.66125488 472.29971313]
[148.31025696 468.83682251]
[147.86366272 453.84347534]
[147.41705322 438.85012817]
[146.97044373 423.85678101]
[134.24806213 412.85769653]
[133.40043640 395.72305298]
[145.43989563 383.03167725]
[144.77011108 368.04663086]
[144.10032654 353.06158447]
[135.80244446 340.69250488]
[142.91581726 326.56060791]
[141.13334656 311.66690063]
[138.24807739 296.94699097]
[135.36280823 282.22711182]
[132.47752380 267.50723267]
[129.59225464 252.78732300]
[126.70698547 238.06742859]
[123.49371338 223.41564941]
[119.95404053 208.83927917]
[116.41436768 194.26289368]
[103.63466644 182.23600769]
[108.96537781 164.61030579]
[105.20907593 150.08824158]
[101.45277405 135.56619263]
[97.69647217 121.04412842]
[86.08751678 115.95632935]
[79.46580505 105.14862823]
[80.20503235 92.49527740]
[88.04020691 82.53217316]
[84.50053406 67.95579529]
[80.96086121 53.37942123]
[77.42119598 38.80304337]
[73.88152313 24.22666931]
[68.58577728 38.26073837]
[57.43620682 48.29503250]
[42.92364502 52.08786011]
[28.29023743 48.79189682]
[16.80512428 39.14346695]
[11.03410912 25.29805756]
[12.26645279 10.34876633]
[20.22684479 -2.36469722]
[33.13691330 -10.00211239]
[48.11251831 -10.85726070]
[61.80807114 -4.73909950]
[71.16395569 6.98557758]
[70.04830933 -7.97287607]
[68.93265533 -22.93132973]
[67.81700897 -37.88978195]
[66.70136261 -52.84823608]
[65.36312866 -67.78842163]
[63.80260468 -82.70702362]
[51.80893326 -92.64632416]
[50.43886185 -107.79814148]
[59.98838043 -119.17102051]
[58.42785645 -134.08963013]
[54.42263794 -142.29913330]
[56.95685577 -149.24171448]
[55.61862183 -164.18190002]
[54.28038788 -179.12208557]
[52.94215393 -194.06227112]
[43.56300735 -202.91633606]
[42.75596619 -215.38760376]
[50.40938950 -224.75518799]
[49.29374313 -239.71363831]
[48.17809296 -254.67208862]
[47.06244659 -269.63055420]
[45.94679642 -284.58898926]
[44.83114624 -299.54745483]
[43.71549988 -314.50592041]
[28.72670937 -315.58016968]
[14.05408287 -318.82546997]
[0.01036963 -324.17260742]
[-13.10508919 -331.50762939]
[-25.01273727 -340.67419434]
[-35.45876312 -351.47689819]
[-44.22050476 -363.68548584]
[-51.11120987 -377.03973389]
[-55.98400116 -391.25500488]
[-58.73501205 -406.02828979]
[-59.30561066 -421.04467773]
[-57.68362808 -435.98413086]
[-53.90364075 -450.52819824]
[-48.04621887 -464.36685181]
[-40.23621368 -477.20513916]
[-30.64009476 -488.76940918]
[-19.46240425 -498.81317139]
[-6.94139767 -507.12234497]
[6.65604210 -513.51977539]
[21.04008293 -517.86920166]
[35.90412903 -520.07781982]
[50.93135071 -520.09857178]
[65.80144501 -517.93103027]
[80.19745636 -513.62139893]
[93.81252289 -507.26156616]
[106.35644531 -498.98703003]
[117.56185150 -488.97421265]
[127.18989563 -477.43649292]
[135.03535461 -464.61984253]
[140.93099976 -450.79742432]
[144.75117493 -436.26388550]
[146.41444397 -421.32897949]
[145.88534546 -406.31106567]
[143.17518616 -391.53024292]
[138.34170532 -377.30154419]
[131.48793030 -363.92831421]
[122.75996399 -351.69555664]
[112.34383392 -340.86401367]
[100.46157074 -331.66458130]
[87.36643219 -324.29333496]
[73.33755493 -318.90737915]
[58.67395020 -315.62155151]
[59.78960037 -300.66311646]
[60.90525055 -285.70465088]
[62.02089691 -270.74618530]
[63.13654709 -255.78775024]
[64.25219727 -240.82928467]
[65.36784363 -225.87083435]
[76.01555634 -211.92117310]
[67.88233948 -195.40051270]
[69.22057343 -180.46032715]
[70.55880737 -165.52014160]
[71.89704132 -150.57995605]
[73.34645844 -135.65014648]
[74.90698242 -120.73154449]
[86.60329437 -111.58103180]
[88.39840698 -96.47367859]
[78.72120667 -84.26754761]
[80.28173065 -69.34894562]
[83.36184692 -65.69902039]
[84.18180847 -60.07543945]
[81.65981293 -53.96388626]
[82.77545929 -39.00543213]
[83.89111328 -24.04697800]
[85.00675964 -9.08852482]
[86.12240601 5.86992884]
[88.45789337 20.68699646]
[91.99756622 35.26337051]
[95.53723907 49.83974838]
[99.07691193 64.41612244]
[102.61658478 78.99250031]
[116.90313721 87.25458527]
[120.91690063 103.26263428]
[112.21853638 117.28782654]
[115.97483826 131.80989075]
[119.73113251 146.33195496]
[123.48743439 160.85400391]
[134.18470764 168.06033325]
[137.01437378 180.23312378]
[130.99073792 190.72322083]
[134.53041077 205.29960632]
[138.07008362 219.87597656]
[141.67433167 223.65174866]
[143.30664062 227.99787903]
[143.07994080 232.06773376]
[141.42687988 235.18215942]
[144.31214905 249.90205383]
[147.19741821 264.62194824]
[150.08268738 279.34182739]
[152.96797180 294.06173706]
[155.85324097 308.78161621]
[162.20767212 295.19409180]
[174.44767761 286.52331543]
[189.37373352 285.03579712]
[203.08422852 291.12042236]
[211.99523926 303.18664551]
[213.77748108 318.08038330]
[207.96507263 331.90847778]
[196.07734680 341.05624390]
[181.22174072 343.13253784]
[167.28147888 337.59460449]
[157.90084839 325.89083862]
[166.24664307 339.33175659]
[159.08535767 352.39181519]
[159.75514221 367.37686157]
[160.42492676 382.36187744]
[171.34497070 390.24652100]
[175.66699219 402.79763794]
[172.02497864 415.36019897]
[161.96379089 423.41018677]
[162.41040039 438.40353394]
[162.85700989 453.39688110]
[163.30361938 468.39022827]
[178.13276672 470.97503662]
[192.13790894 476.49234009]
[204.74555969 484.71618652]
[215.43943787 495.30987549]
[223.78163147 507.83953857]
[229.43054199 521.79211426]
[232.15483093 536.59631348]
[231.84295654 551.64581299]
[228.50767517 566.32440186]
[222.28558350 580.03094482]
[213.43147278 592.20428467]
[202.30789185 602.34582520]
[189.37036133 610.04028320]
[175.14866638 614.97265625]
[160.22515869 616.94091797]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 195]
[15 194]
[16 193]
[17 192]
[20 188]
[21 187]
[22 186]
[24 184]
[25 173]
[26 172]
[27 171]
[28 170]
[29 169]
[30 168]
[31 164]
[32 163]
[33 162]
[35 159]
[36 158]
[37 157]
[38 156]
[42 153]
[43 152]
[44 151]
[45 150]
[46 149]
[58 148]
[59 147]
[60 146]
[61 145]
[62 144]
[63 141]
[64 140]
[67 137]
[68 136]
[70 135]
[71 134]
[72 133]
[73 132]
[76 130]
[77 129]
[78 128]
[79 127]
[80 126]
[81 125]
[82 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
