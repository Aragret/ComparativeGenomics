%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[107.19044495 815.91320801]
[92.18821716 815.24261475]
[77.36528015 812.83496094]
[62.92209625 808.72265625]
[49.05399704 802.96136475]
[35.94853210 795.62902832]
[23.78293610 786.82476807]
[12.72173595 776.66766357]
[2.91452098 765.29510498]
[-5.50607681 752.86090088]
[-12.42617893 739.53314209]
[-17.75219727 725.49212646]
[-21.41210556 710.92773438]
[-23.35640907 696.03692627]
[-23.55880928 681.02105713]
[-22.01657104 666.08325195]
[-18.75055122 651.42553711]
[-13.80491924 637.24603271]
[-7.24655914 623.73663330]
[0.83583486 611.07995605]
[10.33295822 599.44720459]
[21.11637115 588.99566650]
[33.04024506 579.86669922]
[45.94331741 572.18377686]
[59.65108871 566.05084229]
[73.97818756 561.55072021]
[88.73084259 558.74438477]
[103.70954132 557.66967773]
[104.37933350 542.68463135]
[105.04911804 527.69958496]
[105.71890259 512.71453857]
[96.80428314 497.59848022]
[106.84304047 482.16134644]
[107.28964996 467.16799927]
[107.73625183 452.17465210]
[108.18286133 437.18127441]
[108.62946320 422.18792725]
[108.40613556 407.18960571]
[107.51332092 392.21618652]
[106.62050629 377.24279785]
[96.18166351 363.13613892]
[104.55995178 346.73840332]
[103.44429779 331.77993774]
[102.32865143 316.82150269]
[101.21300507 301.86303711]
[92.25465393 293.73440552]
[91.20276642 281.28140259]
[99.16472626 271.13400269]
[98.27190399 256.16058350]
[97.37908936 241.18717957]
[96.48627472 226.21377563]
[93.57220459 222.42996216]
[93.00417328 216.77537537]
[95.79654694 210.78253174]
[95.34993744 195.78918457]
[94.90333557 180.79583740]
[79.33780670 178.27525330]
[64.55614471 172.78512573]
[51.11912918 164.53373718]
[39.53652191 153.83410645]
[30.24773598 141.09214783]
[23.60516548 126.79125977]
[19.86080933 111.47399139]
[19.15671730 95.72142792]
[21.51960373 80.13118744]
[26.85982513 65.29470825]
[34.97478867 51.77486038]
[45.55663300 40.08454132]
[58.20391083 30.66725540]
[72.43682098 23.88026619]
[87.71540833 19.98105621]
[86.82259369 5.00765133]
[85.92977905 -9.96575451]
[74.39188385 -20.43068504]
[73.69974518 -35.62856674]
[83.74755859 -46.56369400]
[82.85474396 -61.53709793]
[81.96192932 -76.51050568]
[68.66745758 -87.88048553]
[67.72788239 -105.01033783]
[79.23693848 -117.27330780]
[78.12129211 -132.23176575]
[66.50421143 -122.74263763]
[51.81070709 -125.75939178]
[44.87227249 -139.05819702]
[50.80366898 -152.83566284]
[65.23249054 -156.93554688]
[77.52153015 -148.33702087]
[77.52153015 -163.33702087]
[77.52153015 -178.33702087]
[77.52153015 -193.33702087]
[66.62697601 -204.47013855]
[66.84066010 -219.68228149]
[77.52153015 -229.99995422]
[77.52153015 -244.99995422]
[69.78423309 -258.80014038]
[77.52153015 -271.52740479]
[77.52153015 -286.52740479]
[63.46434402 -292.31219482]
[52.69447327 -303.03967285]
[46.85424042 -317.07391357]
[46.83424377 -332.27484131]
[52.63753128 -346.32440186]
[63.37914276 -357.08013916]
[77.42106628 -362.90191650]
[92.62200165 -362.90191650]
[106.66391754 -357.08013916]
[117.40553284 -346.32440186]
[123.20881653 -332.27484131]
[123.18881989 -317.07391357]
[117.34859467 -303.03967285]
[106.57872009 -292.31219482]
[92.52153015 -286.52740479]
[92.52153015 -271.52740479]
[100.25883484 -258.80014038]
[92.52153015 -244.99995422]
[92.52153015 -229.99995422]
[103.20240021 -219.68228149]
[103.41608429 -204.47013855]
[92.52153015 -193.33702087]
[92.52153015 -178.33702087]
[92.52153015 -163.33702087]
[92.52153015 -148.33702087]
[93.07974243 -133.34741211]
[94.19538879 -118.38896179]
[105.03945923 -111.42938232]
[109.96864319 -99.31388855]
[106.97583008 -86.38123322]
[96.93533325 -77.40332031]
[97.82814789 -62.42991257]
[98.72096252 -47.45650864]
[109.99701691 -37.79285812]
[111.11576080 -22.62041283]
[100.90318298 -10.85857010]
[101.79599762 4.11483526]
[102.68881226 19.08824158]
[116.78555298 20.80285454]
[130.36581421 24.95428276]
[143.01174927 31.41478729]
[154.33427429 39.98558807]
[163.98497009 50.40296555]
[171.66693115 62.34639359]
[177.14376831 75.44838715]
[180.24697876 89.30580139]
[180.88105774 103.49227142]
[179.02653503 117.57128143]
[174.74043274 131.10964966]
[168.15464783 143.69079590]
[159.47181702 154.92762756]
[148.95910645 164.47439575]
[136.93997192 172.03735352]
[123.78424072 177.38380432]
[109.89668274 180.34922791]
[110.34329224 195.34257507]
[110.78989410 210.33592224]
[111.45967865 225.32096863]
[112.35249329 240.29437256]
[113.24531555 255.26777649]
[114.13813019 270.24118042]
[124.63205719 285.37255859]
[116.17145538 300.74740601]
[117.28710175 315.70584106]
[118.40275574 330.66430664]
[119.51840210 345.62274170]
[128.76467896 354.61547852]
[129.38595581 367.09738159]
[121.59391022 376.34997559]
[122.48673248 391.32339478]
[123.37954712 406.29678345]
[134.12013245 395.82589722]
[149.12004089 395.87869263]
[159.78663635 406.42498779]
[160.00961304 421.42330933]
[149.66122437 432.28201294]
[134.66950989 432.78067017]
[123.62281799 422.63455200]
[123.17620850 437.62789917]
[122.72960663 452.62124634]
[122.28299713 467.61459351]
[121.83639526 482.60794067]
[130.09693909 492.51379395]
[129.41629028 504.99261475]
[120.70394135 513.38433838]
[120.03415680 528.36938477]
[119.36437225 543.35443115]
[118.69458008 558.33947754]
[133.51768494 560.74621582]
[147.96113586 564.85754395]
[161.82962036 570.61785889]
[174.93557739 577.94934082]
[187.10176086 586.75280762]
[198.16363525 596.90911865]
[207.97160339 608.28106689]
[216.39303589 620.71472168]
[223.31402588 634.04199219]
[228.64099121 648.08264160]
[232.30186462 662.64678955]
[234.24716187 677.53747559]
[234.45056152 692.55328369]
[232.90931702 707.49121094]
[229.64428711 722.14916992]
[224.69960022 736.32897949]
[218.14213562 749.83880615]
[210.06059265 762.49603271]
[200.56423950 774.12945557]
[189.78152466 784.58172607]
[177.85826111 793.71142578]
[164.95570374 801.39520264]
[151.24833679 807.52911377]
[136.92153931 812.03015137]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 186]
[29 185]
[30 184]
[31 183]
[33 180]
[34 179]
[35 178]
[36 177]
[37 176]
[38 169]
[39 168]
[40 167]
[42 164]
[43 163]
[44 162]
[45 161]
[48 159]
[49 158]
[50 157]
[51 156]
[54 155]
[55 154]
[56 153]
[71 136]
[72 135]
[73 134]
[76 131]
[77 130]
[78 129]
[81 125]
[82 124]
[88 123]
[89 122]
[90 121]
[91 120]
[94 117]
[95 116]
[97 114]
[98 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
