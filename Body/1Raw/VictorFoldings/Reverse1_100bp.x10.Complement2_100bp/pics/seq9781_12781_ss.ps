%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[58.02043152 451.14541626]
[51.33351898 464.59030151]
[43.18327332 477.20196533]
[33.67219162 488.82174683]
[22.91989136 499.30352783]
[11.06158924 508.51553345]
[-1.75358164 516.34185791]
[-15.36445808 522.68408203]
[-29.59986687 527.46246338]
[-44.28078461 530.61694336]
[-59.22258377 532.10778809]
[-74.23735809 531.91632080]
[-89.13626862 530.04486084]
[-103.73196411 526.51696777]
[-117.84087372 521.37707520]
[-131.28556824 514.68975830]
[-143.89695740 506.53915405]
[-155.51646423 497.02770996]
[-165.99794006 486.27511597]
[-175.20956421 474.41653442]
[-183.03550720 461.60113525]
[-189.37734985 447.99005127]
[-194.15531921 433.75451660]
[-197.30935669 419.07348633]
[-198.79975891 404.13165283]
[-198.60780334 389.11688232]
[-196.73591614 374.21801758]
[-193.20761108 359.62243652]
[-188.06727600 345.51367188]
[-181.37956238 332.06918335]
[-173.22856140 319.45803833]
[-163.71678162 307.83880615]
[-152.96386719 297.35766602]
[-141.10501099 288.14639282]
[-128.28936768 280.32083130]
[-114.67811584 273.97940063]
[-100.44241333 269.20184326]
[-85.76130676 266.04824829]
[-70.81941986 264.55828857]
[-55.80466080 264.75070190]
[-40.90585709 266.62304688]
[-26.31037903 270.15176392]
[-12.20177650 275.29254150]
[-5.52158165 261.86215210]
[1.15861309 248.43177795]
[7.83880758 235.00140381]
[14.51900196 221.57102966]
[21.19919777 208.14065552]
[27.87939072 194.71028137]
[14.98680305 202.37716675]
[0.05227475 203.77711487]
[-14.04056931 198.63983154]
[-24.57062149 187.95722961]
[-29.50469589 173.79194641]
[-27.89009666 158.87910461]
[-20.03857994 146.09811401]
[-7.46615028 137.91679382]
[7.39965391 135.91482544]
[21.68847847 140.47875977]
[32.64137268 150.72737122]
[38.14350891 164.68182373]
[37.13214493 179.64892578]
[38.53016663 164.82008362]
[52.97910309 158.37501526]
[61.93980026 146.34564209]
[70.35441589 133.92814636]
[78.20617676 121.14730835]
[86.05792999 108.36646271]
[86.08281708 91.59220886]
[100.91963196 83.76628876]
[108.58023071 70.86996460]
[116.24082947 57.97363663]
[123.90142822 45.07730865]
[131.56202698 32.18098450]
[139.02976990 19.17202950]
[146.30299377 6.05333614]
[153.57621765 -7.06535769]
[160.84945679 -20.18405151]
[168.12268066 -33.30274582]
[175.39591980 -46.42144012]
[182.66914368 -59.54013443]
[177.41125488 -67.69396210]
[175.49574280 -77.14600372]
[177.14440918 -86.58944702]
[182.08926392 -94.73430634]
[189.61495972 -100.48358154]
[198.66207886 -103.08098602]
[207.97616577 -102.21023560]
[216.01734924 -114.87275696]
[224.05851746 -127.53528595]
[232.09968567 -140.19779968]
[240.14086914 -152.86033630]
[242.09954834 -161.78228760]
[248.39720154 -165.65028381]
[256.62600708 -178.19168091]
[263.80136108 -191.36415100]
[269.87521362 -205.07942200]
[275.94903564 -218.79469299]
[282.02288818 -232.50994873]
[269.34085083 -240.57371521]
[258.00241089 -250.43763733]
[248.26080322 -261.88137817]
[240.33369446 -274.64923096]
[234.39817810 -288.45602417]
[230.58683777 -302.99325562]
[228.98484802 -317.93618774]
[229.62797546 -332.95098877]
[232.50184631 -347.70220947]
[237.54228210 -361.86032104]
[244.63665771 -375.10897827]
[253.62649536 -387.15225220]
[264.31094360 -397.72109985]
[276.45132446 -406.57934570]
[289.77642822 -413.52914429]
[303.98852539 -418.41522217]
[318.77014160 -421.12844849]
[333.79104614 -421.60815430]
[348.71566772 -419.84365845]
[363.21057129 -415.87435913]
[376.95193481 -409.78897095]
[389.63281250 -401.72341919]
[400.96987915 -391.85787964]
[410.70983887 -380.41275024]
[418.63513184 -367.64373779]
[424.56869507 -353.83612061]
[428.37792969 -339.29833984]
[429.97781372 -324.35516357]
[429.33255005 -309.34048462]
[426.45657349 -294.58966064]
[421.41412354 -280.43228149]
[414.31787109 -267.18463135]
[405.32629395 -255.14262390]
[394.64035034 -244.57531738]
[382.49871826 -235.71878052]
[369.17263794 -228.77087402]
[354.95983887 -223.88682556]
[340.17782593 -221.17572021]
[325.15686035 -220.69815063]
[310.23248291 -222.46476746]
[295.73815918 -226.43612671]
[289.66430664 -212.72085571]
[283.59048462 -199.00558472]
[277.51663208 -185.29031372]
[290.26632690 -193.19255066]
[305.22109985 -194.35658264]
[319.04000854 -188.52236938]
[328.63586426 -176.99330139]
[331.86492920 -162.34498596]
[328.00585938 -147.84989929]
[317.92071533 -136.74629211]
[303.86260986 -131.51472473]
[288.97210693 -133.32394409]
[276.57583618 -141.76977539]
[269.44308472 -154.96537781]
[269.16741943 -169.96287537]
[260.93859863 -157.42147827]
[252.80339050 -144.81915283]
[244.76220703 -132.15663147]
[236.72103882 -119.49411011]
[228.67987061 -106.83158112]
[220.63870239 -94.16905975]
[226.75216675 -74.66477203]
[216.33491516 -56.73781967]
[195.78784180 -52.26690292]
[188.51460266 -39.14820862]
[181.24137878 -26.02951622]
[173.96815491 -12.91082191]
[166.69491577 0.20787176]
[159.42169189 13.32656574]
[152.14845276 26.44525909]
[152.58000183 31.20160484]
[150.02821350 36.27953720]
[144.45835876 39.84157944]
[136.79776001 52.73790741]
[129.13716125 65.63423157]
[121.47656250 78.53056335]
[113.81596375 91.42688751]
[116.00519562 102.86579132]
[109.98287201 112.83438110]
[98.83876801 116.21821594]
[90.98701477 128.99905396]
[83.13526154 141.77990723]
[97.93830109 139.35707092]
[110.19878387 147.99887085]
[112.89335632 162.75485229]
[104.47843933 175.17214966]
[89.77448273 178.13755798]
[77.20457458 169.95236206]
[73.96917725 155.30633545]
[65.00848389 167.33572388]
[62.96953201 183.02499390]
[49.16152191 188.60963440]
[41.30976868 201.39047241]
[34.62957382 214.82084656]
[27.94937897 228.25122070]
[21.26918411 241.68159485]
[14.58898926 255.11196899]
[7.90879440 268.54235840]
[1.22859979 281.97271729]
[13.84048462 290.12258911]
[25.46055412 299.63333130]
[35.94266891 310.38531494]
[45.15501022 322.24334717]
[52.98171997 335.05828857]
[59.32437134 348.66897583]
[64.10320282 362.90423584]
[67.25810242 377.58505249]
[68.74940491 392.52682495]
[68.55834961 407.54159546]
[66.68734741 422.44055176]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 199]
[44 198]
[45 197]
[46 196]
[47 195]
[48 194]
[49 193]
[62 192]
[64 190]
[65 189]
[66 182]
[67 181]
[68 180]
[70 177]
[71 176]
[72 175]
[73 174]
[74 173]
[75 170]
[76 169]
[77 168]
[78 167]
[79 166]
[80 165]
[81 164]
[88 161]
[89 160]
[90 159]
[91 158]
[92 157]
[94 156]
[95 155]
[96 143]
[97 142]
[98 141]
[99 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
