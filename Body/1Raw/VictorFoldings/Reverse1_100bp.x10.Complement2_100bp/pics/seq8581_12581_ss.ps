%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUAAUCAGUAACAACCCACCACUAAUCAGCCAACAACUACUCUAUAAACCUCCACCCCUAGUUAUCUCCCCCUUUAUCUUACUAGUCAUGACGCCxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[74.40647888 630.02648926]
[63.97035217 640.93475342]
[50.97762680 648.62188721]
[36.39245224 652.51739502]
[21.29714394 652.33227539]
[6.81187582 648.08032227]
[-5.98845100 640.07690430]
[-16.15396690 628.91601562]
[-22.93032074 615.42590332]
[-25.81466484 600.60760498]
[-24.59296227 585.56066895]
[-19.35586739 571.40173340]
[-10.49201202 559.18145752]
[1.34084904 549.80670166]
[15.26463890 543.97314453]
[30.24612045 542.11358643]
[32.47123718 527.27954102]
[34.69635391 512.44549561]
[36.92147064 497.61148071]
[39.03609467 482.76129150]
[41.04010773 467.89575195]
[43.04412460 453.03021240]
[45.04813766 438.16470337]
[37.96584702 428.35818481]
[39.51376343 415.95706177]
[49.40328598 407.67697144]
[51.62840271 392.84292603]
[53.85351944 378.00888062]
[39.69218826 373.12042236]
[26.66683197 365.71096802]
[15.22177315 356.03161621]
[5.74774313 344.41088867]
[-1.43146527 331.24359131]
[-6.07006359 316.97750854]
[-8.00868225 302.09799194]
[-7.17984343 287.11166382]
[-3.61031246 272.52893066]
[2.57976770 258.84683228]
[11.18091679 246.53193665]
[21.90140915 236.00447083]
[34.37716293 227.62400818]
[48.18410873 221.67720032]
[62.85261154 218.36791992]
[77.88342285 217.81030273]
[80.10853577 202.97625732]
[82.33365631 188.14221191]
[84.55876923 173.30816650]
[86.78388977 158.47412109]
[88.56635284 143.58039856]
[89.90458679 128.64021301]
[91.24282074 113.70003510]
[83.79475403 98.66998291]
[93.59378052 85.05545807]
[94.70942688 70.09700012]
[95.82508087 55.13854980]
[96.94072723 40.18009567]
[85.28447723 27.13589287]
[86.64189148 10.03407192]
[99.68611145 -0.58134145]
[100.57892609 -15.55474758]
[99.57466888 -30.52109146]
[96.68939972 -45.24098206]
[93.80412292 -59.96087265]
[90.91885376 -74.68076324]
[88.03357697 -89.40065765]
[77.78627777 -101.45484161]
[82.93098450 -115.43273163]
[80.04571533 -130.15261841]
[77.16043854 -144.87251282]
[74.27516937 -159.59240723]
[59.83893967 -164.64636230]
[49.93608093 -176.17156982]
[47.15017700 -191.00750732]
[52.13100052 -205.15132141]
[63.44643021 -214.83773804]
[60.56115723 -229.55763245]
[57.56638336 -244.25563049]
[54.46227264 -258.93093872]
[51.35816193 -273.60623169]
[48.25405121 -288.28152466]
[45.14994431 -302.95684814]
[42.04583359 -317.63214111]
[38.94172287 -332.30743408]
[23.89341927 -332.12081909]
[9.09791374 -334.87387085]
[-4.87609529 -340.46075439]
[-17.49148369 -348.66674805]
[-28.26335144 -359.17639160]
[-36.77765656 -371.58578491]
[-42.70712662 -385.41790771]
[-45.82385635 -400.14108276]
[-46.00804138 -415.18942261]
[-43.25260544 -429.98449707]
[-37.66345596 -443.95758057]
[-29.45543098 -456.57165527]
[-18.94402122 -467.34182739]
[-6.53325605 -475.85412598]
[7.29982471 -481.78134155]
[22.02351570 -484.89569092]
[37.07187653 -485.07745361]
[51.86649323 -482.31961060]
[65.83869171 -476.72821045]
[78.45142365 -468.51812744]
[89.21988678 -458.00497437]
[97.73017120 -445.59283447]
[103.65516663 -431.75878906]
[106.76712799 -417.03460693]
[106.94644928 -401.98620605]
[104.18621826 -387.19204712]
[98.59255219 -373.22076416]
[90.38043976 -360.60934448]
[79.86553955 -349.84259033]
[67.45202637 -341.33432007]
[53.61702347 -335.41156006]
[56.72113419 -320.73623657]
[59.82524490 -306.06094360]
[62.92935562 -291.38565063]
[66.03346252 -276.71035767]
[69.13757324 -262.03503418]
[72.24168396 -247.35974121]
[76.70132446 -241.46623230]
[75.28105164 -232.44290161]
[78.16632080 -217.72300720]
[92.30123901 -213.02516174]
[102.25304413 -201.80831909]
[105.27414703 -187.01847839]
[100.45506287 -172.60760498]
[88.99505615 -162.47767639]
[91.88033295 -147.75778198]
[94.76560211 -133.03788757]
[97.65087891 -118.31800079]
[107.69180298 -107.31668091]
[102.75347137 -92.28592682]
[105.63874054 -77.56604004]
[108.52401733 -62.84614563]
[111.40928650 -48.12625504]
[114.29456329 -33.40636444]
[118.74187469 -47.73191452]
[127.54648590 -59.87600327]
[139.77922058 -68.55702972]
[154.14912415 -72.85887909]
[169.13970947 -72.32755280]
[183.16897583 -67.01912689]
[194.75640869 -57.49381256]
[202.67913818 -44.75683975]
[206.10104370 -30.15237236]
[204.66104126 -15.22165394]
[198.51106262 -1.54035771]
[188.30015564 9.44769573]
[175.10589600 16.58291054]
[160.32069397 19.11229134]
[145.50486755 16.76890755]
[132.22198486 9.80005836]
[121.87379456 -1.05881321]
[115.55233765 -14.66193104]
[114.65952301 0.31147444]
[124.47657013 8.65743446]
[127.74291992 21.32286072]
[123.04912567 33.73973465]
[111.89917755 41.29574585]
[110.78353119 56.25419617]
[109.66788483 71.21265411]
[108.55223083 86.17110443]
[115.60665894 95.43805695]
[114.65399170 107.04553986]
[106.18300629 115.03826904]
[104.84477234 129.97845459]
[103.50653839 144.91864014]
[105.47254944 148.79017639]
[106.04658508 152.69337463]
[105.38961792 156.18676758]
[103.78945923 158.92649841]
[101.61793518 160.69923401]
[99.39281464 175.53327942]
[97.16769409 190.36732483]
[94.94258118 205.20137024]
[92.71746063 220.03541565]
[106.92315674 224.97853088]
[119.97515106 232.44590759]
[131.42965698 242.18196106]
[140.89752197 253.85397339]
[148.05744934 267.06350708]
[152.66687012 281.36001587]
[154.57019043 296.25613403]
[153.70407104 311.24435425]
[150.09944153 325.81433105]
[143.88049316 339.47018433]
[135.26037598 351.74746704]
[124.53383636 362.22888184]
[112.06723785 370.55850220]
[98.28595734 376.45388794]
[83.65991974 379.71560669]
[68.68756104 380.23397827]
[66.46244812 395.06802368]
[64.23732758 409.90206909]
[71.37280273 426.87753296]
[59.91366577 440.16870117]
[57.90965271 455.03424072]
[55.90563583 469.89978027]
[53.90162277 484.76528931]
[55.85646439 493.68811035]
[51.75551605 499.83660889]
[49.53039932 514.67065430]
[47.30528259 529.50469971]
[45.08016586 544.33874512]
[58.85672379 550.51196289]
[70.45615387 560.17407227]
[79.01770020 572.60797119]
[83.90603638 586.89105225]
[84.75841522 601.96343994]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 205]
[17 204]
[18 203]
[19 202]
[20 200]
[21 199]
[22 198]
[23 197]
[26 195]
[27 194]
[28 193]
[44 177]
[45 176]
[46 175]
[47 174]
[48 173]
[49 168]
[50 167]
[51 166]
[53 163]
[54 162]
[55 161]
[56 160]
[59 156]
[60 155]
[61 137]
[62 136]
[63 135]
[64 134]
[65 133]
[67 131]
[68 130]
[69 129]
[70 128]
[75 123]
[76 122]
[77 120]
[78 119]
[79 118]
[80 117]
[81 116]
[82 115]
[83 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
