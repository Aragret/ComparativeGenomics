%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[127.70051575 370.81506348]
[125.69650269 355.94952393]
[116.32818604 344.37005615]
[122.15241241 329.65988159]
[120.14839935 314.79437256]
[110.78008270 303.21490479]
[116.60430908 288.50473022]
[114.60029602 273.63922119]
[112.48567200 258.78900146]
[110.26055145 243.95497131]
[108.03543091 229.12092590]
[104.79541016 225.61218262]
[103.72516632 220.03082275]
[105.97174835 213.81274414]
[104.18927765 198.91902161]
[102.40681458 184.02531433]
[100.62435150 169.13159180]
[98.84188080 154.23786926]
[97.05941772 139.34416199]
[95.27695465 124.45043945]
[93.49448395 109.55672455]
[86.56858826 122.86205292]
[74.30562592 131.50033569]
[59.44519043 133.54174805]
[45.30712891 128.53022766]
[35.04992676 117.58538055]
[30.96506691 103.15229797]
[33.96511841 88.45536804]
[43.37986374 76.77793121]
[57.10601807 70.72874451]
[72.07713318 71.65922546]
[84.94861603 79.36148834]
[92.84495544 92.11486053]
[84.73280334 82.08711243]
[85.59916687 69.61982727]
[94.43549347 61.35872650]
[95.32831573 46.38531876]
[96.22113037 31.41191483]
[97.11394501 16.43850899]
[98.00675964 1.46510327]
[89.38526917 -14.80607891]
[99.61292267 -29.06657982]
[100.28270721 -44.05162048]
[100.95249176 -59.03665924]
[98.20939636 -67.74948120]
[101.74545288 -74.23932648]
[102.63826752 -89.21273041]
[93.16725922 -96.39859772]
[88.38991547 -107.15396118]
[89.38732147 -118.75995636]
[95.79644775 -128.34321594]
[105.92889404 -133.58723450]
[107.26712799 -148.52742004]
[108.60536194 -163.46760559]
[109.94359589 -178.40779114]
[111.28182983 -193.34797668]
[112.62006378 -208.28816223]
[113.95829773 -223.22834778]
[115.29653168 -238.16853333]
[116.63476562 -253.10871887]
[114.28344727 -261.93533325]
[118.10576630 -268.26080322]
[119.66628265 -283.17941284]
[121.22680664 -298.09802246]
[106.44544983 -300.68490601]
[91.87777710 -304.28543091]
[77.59323120 -308.88241577]
[63.65986633 -314.45394897]
[50.14409256 -320.97351074]
[37.11031342 -328.41000366]
[24.62064934 -336.72799683]
[12.73461151 -345.88781738]
[1.50884807 -355.84588623]
[-9.00314713 -366.55468750]
[-18.75127792 -377.96322632]
[-27.68909073 -390.01712036]
[-35.77399063 -402.65890503]
[-42.96745300 -415.82836914]
[-49.23519135 -429.46273804]
[-54.54734421 -443.49703979]
[-58.87858963 -457.86441040]
[-62.20829010 -472.49636841]
[-64.52057648 -487.32315063]
[-65.80443573 -502.27416992]
[-66.05374146 -517.27807617]
[-65.26731110 -532.26348877]
[-63.44888687 -547.15893555]
[-60.60713959 -561.89343262]
[-56.75560760 -576.39672852]
[-51.91265106 -590.59979248]
[-46.10134125 -604.43487549]
[-39.34938049 -617.83605957]
[-31.68894005 -630.73950195]
[-23.15652466 -643.08361816]
[-13.79279995 -654.80975342]
[-3.64238524 -665.86187744]
[7.24634647 -676.18737793]
[18.82150459 -685.73706055]
[31.02792931 -694.46539307]
[43.80744934 -702.33081055]
[57.09916306 -709.29577637]
[70.83972931 -715.32714844]
[84.96367645 -720.39617920]
[99.40367889 -724.47869873]
[114.09093475 -727.55523682]
[128.95545959 -729.61114502]
[143.92639160 -730.63665771]
[158.93241882 -730.62683105]
[173.90199280 -729.58178711]
[188.76380920 -727.50640869]
[203.44703674 -724.41064453]
[217.88168335 -720.30926514]
[231.99897766 -715.22174072]
[245.73165894 -709.17242432]
[259.01425171 -702.19006348]
[271.78347778 -694.30798340]
[283.97845459 -685.56365967]
[295.54110718 -675.99884033]
[306.41635132 -665.65911865]
[316.55227661 -654.59368896]
[325.90066528 -642.85534668]
[334.41693115 -630.50006104]
[342.06048584 -617.58660889]
[348.79492188 -604.17663574]
[354.58810425 -590.33392334]
[359.41250610 -576.12457275]
[363.24505615 -561.61621094]
[366.06753540 -546.87805176]
[367.86645508 -531.98022461]
[368.63330078 -516.99383545]
[368.36434937 -501.99020386]
[367.06094360 -487.04089355]
[364.72927856 -472.21713257]
[361.38043213 -457.58956909]
[357.03039551 -443.22787476]
[351.69989014 -429.20053101]
[345.41433716 -415.57437134]
[338.20364380 -402.41433716]
[330.10220337 -389.78311157]
[321.14865112 -377.74093628]
[311.38558960 -366.34515381]
[300.85958862 -355.65011597]
[289.62081909 -345.70675659]
[277.72280884 -336.56243896]
[265.22229004 -328.26080322]
[252.17878723 -320.84136963]
[238.65449524 -314.33950806]
[224.71385193 -308.78619385]
[210.42330933 -304.20791626]
[195.85093689 -300.62643433]
[181.06620789 -298.05889893]
[166.13957214 -296.51745605]
[151.14215088 -296.00952148]
[136.14541626 -296.53750610]
[134.58488464 -281.61889648]
[133.02436829 -266.70028687]
[131.57495117 -251.77047729]
[130.23670959 -236.83029175]
[128.89848328 -221.89010620]
[127.56024933 -206.94992065]
[126.22201538 -192.00973511]
[124.88378143 -177.06954956]
[123.54554749 -162.12936401]
[122.20730591 -147.18919373]
[120.86907196 -132.24900818]
[133.43128967 -118.93335724]
[132.25088501 -100.34520721]
[117.61167145 -88.31991577]
[116.71885681 -73.34651184]
[115.93753052 -58.36687469]
[115.26774597 -43.38183594]
[114.59796143 -28.39679527]
[122.52690125 -19.26123619]
[122.09153748 -6.77147102]
[112.98016357 2.35791922]
[112.08734894 17.33132553]
[111.19453430 32.30472946]
[110.30171967 47.27813721]
[109.40890503 62.25154114]
[118.09747314 77.49869537]
[107.82999420 92.78464508]
[108.38820648 107.77425385]
[110.17066956 122.66797638]
[111.95313263 137.56169128]
[113.73560333 152.45541382]
[115.51806641 167.34912109]
[117.30052948 182.24284363]
[119.08300018 197.13656616]
[120.86546326 212.03027344]
[122.86947632 226.89581299]
[125.09459686 241.72984314]
[127.31970978 256.56390381]
[131.68751526 264.58636475]
[129.46582031 271.63519287]
[131.46983337 286.50073242]
[140.98149109 299.14346313]
[135.01393127 312.79034424]
[137.01794434 327.65588379]
[146.52958679 340.29861450]
[140.56202698 353.94552612]
[142.56604004 368.81103516]
[156.80426025 374.57028198]
[166.24263000 386.68692017]
[168.34228516 401.90161133]
[162.53845215 416.12170410]
[150.39228821 425.52206421]
[135.17109680 427.57400513]
[120.96926117 421.72561646]
[111.60703278 409.55004883]
[109.60279083 394.32250977]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 201]
[2 200]
[4 198]
[5 197]
[7 195]
[8 194]
[9 192]
[10 191]
[11 190]
[14 189]
[15 188]
[16 187]
[17 186]
[18 185]
[19 184]
[20 183]
[21 182]
[33 181]
[36 179]
[37 178]
[38 177]
[39 176]
[40 175]
[42 172]
[43 171]
[44 170]
[46 169]
[47 168]
[52 165]
[53 164]
[54 163]
[55 162]
[56 161]
[57 160]
[58 159]
[59 158]
[60 157]
[62 156]
[63 155]
[64 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
