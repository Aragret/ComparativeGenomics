%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAGACUCCAUUAUUUAUCCUAAUAGGGCAUAGCUUCCGGAAAAACCUGUCCACCACACACCACCGGAACCAUACACGAAAGAGCACAAUGUAGCGxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[50.36774063 493.70465088]
[35.57325745 490.09310913]
[23.53073883 480.77120972]
[16.32662773 467.35403442]
[15.20907593 452.16616821]
[20.37170792 437.83901978]
[30.92006683 426.85485840]
[45.02658463 421.11672974]
[45.47319031 406.12338257]
[45.91979599 391.13003540]
[46.36640167 376.13668823]
[43.80152893 372.10797119]
[43.74023819 366.42526245]
[47.05612946 360.70544434]
[47.94894791 345.73202515]
[48.84176254 330.75863647]
[49.73457718 315.78521729]
[50.62739563 300.81182861]
[51.52021027 285.83840942]
[52.41302490 270.86499023]
[40.72266769 258.77474976]
[41.40710068 241.63279724]
[54.53081512 230.06614685]
[55.20059967 215.08110046]
[55.87038803 200.09606934]
[48.59492493 213.21351624]
[38.32304001 224.14459229]
[25.68285751 232.22084045]
[11.44733143 236.94841003]
[-3.51302838 238.03819275]
[-18.28339195 235.42353821]
[-31.96054649 229.26437378]
[-43.70812607 219.93728638]
[-52.80776596 208.01268005]
[-58.70301819 194.21969604]
[-61.03338242 179.40182495]
[-59.65636063 164.46516418]
[-54.65615463 150.32310486]
[-46.33853149 137.84043884]
[-35.21211624 127.78047180]
[-21.95729065 120.75838470]
[-7.38459730 117.20358276]
[7.61484051 117.33344269]
[22.12380219 121.14002991]
[35.25505447 128.39054871]
[46.20562363 138.64164734]
[54.30587387 151.26646423]
[59.06047058 165.49298096]
[60.17867279 180.45127869]
[65.84146118 166.56124878]
[71.40068054 152.62945557]
[76.85604095 138.65666199]
[82.31140137 124.68386078]
[87.76675415 110.71105957]
[83.74172211 99.78218079]
[88.05809784 88.96505737]
[98.50133514 83.80947876]
[104.16412354 69.91944885]
[109.82690430 56.02942276]
[96.91316223 47.54097366]
[85.90042877 36.70608902]
[77.20809174 23.93992424]
[71.16669464 9.73113632]
[68.00534058 -5.37682724]
[67.84300995 -20.80650902]
[70.68410492 -35.96850967]
[76.41831970 -50.28401184]
[84.82495117 -63.20686722]
[95.58136749 -74.24443817]
[108.27540588 -82.97637939]
[122.42115021 -89.07063293]
[137.47756958 -92.29608154]
[152.86915588 -92.53128052]
[168.00794983 -89.76905060]
[173.46331787 -103.74185181]
[178.91867065 -117.71464539]
[184.37402344 -131.68743896]
[189.82937622 -145.66024780]
[195.28474426 -159.63304138]
[193.09628296 -175.30215454]
[204.93251038 -184.34388733]
[210.38787842 -198.31668091]
[215.84323120 -212.28947449]
[221.29858398 -226.26226807]
[226.75395203 -240.23507690]
[231.68554688 -254.40121460]
[236.08653259 -268.74105835]
[232.73872375 -284.20401001]
[243.86968994 -294.10101318]
[240.52188110 -309.56396484]
[251.65283203 -319.46099854]
[256.05383301 -333.80084229]
[260.45483398 -348.14068604]
[264.85583496 -362.48052979]
[251.26399231 -368.88699341]
[238.72227478 -377.16262817]
[227.48602295 -387.13897705]
[217.78399658 -398.61291504]
[209.81369019 -411.35083008]
[203.73738098 -425.09344482]
[199.67878723 -439.56094360]
[197.72053528 -454.45880127]
[197.90248108 -469.48370361]
[200.22091675 -484.32977295]
[204.62866211 -498.69476318]
[211.03594971 -512.28619385]
[219.31237793 -524.82739258]
[229.28941345 -536.06304932]
[240.76394653 -545.76434326]
[253.50238037 -553.73388672]
[267.24536133 -559.80932617]
[281.71310425 -563.86700439]
[296.61108398 -565.82434082]
[311.63598633 -565.64147949]
[326.48190308 -563.32214355]
[340.84661865 -558.91351318]
[354.43765259 -552.50537109]
[366.97833252 -544.22814941]
[378.21334839 -534.25042725]
[387.91397095 -522.77526855]
[395.88269043 -510.03637695]
[401.95730591 -496.29299927]
[406.01409912 -481.82501221]
[407.97052002 -466.92691040]
[407.78671265 -451.90203857]
[405.46643066 -437.05624390]
[401.05691528 -422.69180298]
[394.64794922 -409.10116577]
[386.36996460 -396.56100464]
[376.39154053 -385.32659912]
[364.91580200 -375.62667847]
[352.17639160 -367.65875244]
[338.43264771 -361.58499146]
[323.96438599 -357.52908325]
[309.06616211 -355.57360840]
[294.04132080 -355.75833130]
[279.19567871 -358.07952881]
[274.79467773 -343.73968506]
[270.39367676 -329.39984131]
[265.99267578 -315.05999756]
[269.65527344 -300.62271118]
[258.20953369 -289.70001221]
[261.87213135 -275.26275635]
[250.42639160 -264.34005737]
[246.02539062 -250.00021362]
[260.29803467 -254.61450195]
[272.88815308 -246.46043396]
[274.51480103 -231.54890442]
[263.97885132 -220.87211609]
[249.04702759 -222.30059814]
[240.72674561 -234.77970886]
[235.27139282 -220.80691528]
[229.81602478 -206.83412170]
[224.36067200 -192.86132812]
[218.90531921 -178.88851929]
[221.48397827 -164.21884155]
[209.25753784 -154.17768860]
[203.80218506 -140.20487976]
[198.34681702 -126.23208618]
[192.89146423 -112.25929260]
[187.43611145 -98.28649139]
[181.98075867 -84.31369019]
[194.33915710 -76.58612823]
[205.06449890 -66.71025085]
[213.78820801 -55.02338028]
[220.21012878 -41.92508316]
[224.10882568 -27.86354256]
[225.34922791 -13.32021046]
[223.88732910 1.20667303]
[219.77169800 15.21915150]
[213.14192200 28.23661995]
[204.22383118 39.81230545]
[193.32182312 49.54861069]
[180.80847168 57.11075974]
[167.11180115 62.23830795]
[152.70062256 64.75412750]
[138.06852722 64.57050323]
[123.71693420 61.69220734]
[118.05414581 75.58223724]
[112.39135742 89.47225952]
[115.10182190 106.02610016]
[101.73955536 116.16641998]
[96.28419495 130.13922119]
[90.82884216 144.11201477]
[85.37348175 158.08480835]
[85.16752625 167.21691895]
[79.73148346 172.22404480]
[74.06869507 186.11405945]
[70.85542297 200.76585388]
[70.18563843 215.75088501]
[69.51585388 230.73593140]
[79.68891144 239.56335449]
[82.87393951 252.45002747]
[78.12567902 264.63757324]
[67.38642883 271.75781250]
[66.49361420 286.73123169]
[65.60079956 301.70462036]
[64.70798492 316.67803955]
[63.81516647 331.65142822]
[62.92235184 346.62484741]
[62.02953720 361.59826660]
[61.35975266 376.58328247]
[60.91314697 391.57662964]
[60.46654129 406.56997681]
[60.01993179 421.56335449]
[73.75990295 428.13092041]
[83.63576508 439.72348022]
[87.93647766 454.33248901]
[85.91691589 469.42691040]
[77.92697144 482.39151001]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 205]
[9 204]
[10 203]
[11 202]
[14 201]
[15 200]
[16 199]
[17 198]
[18 197]
[19 196]
[20 195]
[23 191]
[24 190]
[25 189]
[49 188]
[50 187]
[51 185]
[52 184]
[53 183]
[54 182]
[57 180]
[58 179]
[59 178]
[74 162]
[75 161]
[76 160]
[77 159]
[78 158]
[79 157]
[81 155]
[82 154]
[83 153]
[84 152]
[85 151]
[86 145]
[87 144]
[89 142]
[91 140]
[92 139]
[93 138]
[94 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
