%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCAUUUUCCUCCCGUUAAAGAUCUAGUUUAUUAUUCUUCCAUUAUCGAUGAUUCUUCUUAAAAUACCUCUUUCCCUGCGCCCGCCCCCUAUAUCCCAGxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[247.12222290 613.01434326]
[242.93521118 598.61059570]
[238.74819946 584.20678711]
[234.56118774 569.80303955]
[230.37417603 555.39923096]
[226.18716431 540.99548340]
[209.31037903 535.79492188]
[198.84170532 521.37762451]
[199.12557983 503.40545654]
[210.23710632 489.07742310]
[205.62309265 474.80471802]
[201.00907898 460.53198242]
[196.39506531 446.25924683]
[182.75625610 435.21615601]
[186.76126099 417.24279785]
[181.93525696 403.04034424]
[177.10926819 388.83789062]
[172.28326416 374.63543701]
[167.45726013 360.43298340]
[162.63127136 346.23052979]
[160.17926025 344.87191772]
[158.11767578 342.46020508]
[156.85031128 339.13916016]
[156.72154236 335.19607544]
[157.96820068 331.03677368]
[153.99610901 316.57226562]
[150.02401733 302.10772705]
[134.48458862 302.32315063]
[119.40657806 298.51263428]
[105.81581116 290.92950439]
[94.63844299 280.08395386]
[86.63788605 266.70867920]
[82.36264801 251.70947266]
[82.10871887 236.10379028]
[85.89911652 220.95182800]
[93.48189545 207.28439331]
[104.34691620 196.03285217]
[117.76013947 187.96566772]
[113.57313538 173.56188965]
[109.38612366 159.15809631]
[105.19911194 144.75431824]
[101.01210022 130.35054016]
[96.82508850 115.94675446]
[84.42077637 104.65475464]
[88.59729004 88.40874481]
[84.19628906 74.06889343]
[72.75054169 63.14619446]
[76.41314697 48.70892715]
[72.01214600 34.36907959]
[67.61114502 20.02923393]
[62.99713898 5.75649977]
[58.17114258 -8.44595528]
[53.34514236 -22.64841080]
[51.38761902 -7.77669001]
[46.09766769 6.25956440]
[37.75279617 18.72403908]
[26.79075813 28.96286964]
[13.78659630 36.43895340]
[-0.57751375 40.76010132]
[-15.54806042 41.69964218]
[-30.33971786 39.20828629]
[-44.17654800 33.41672897]
[-56.33269501 24.62877655]
[-66.17047119 13.30543232]
[-73.17381287 0.04069565]
[-76.97533417 -14.46959209]
[-77.37561035 -29.46425056]
[-74.35365295 -44.15668869]
[-68.06797791 -57.77617264]
[-58.84832764 -69.60825348]
[-47.17834473 -79.03223419]
[-33.67021179 -85.55376434]
[-19.03253746 -88.83072662]
[-4.03318596 -88.69122314]
[10.54100609 -85.14257812]
[23.92550659 -78.37093353]
[35.41819382 -68.73152161]
[44.41617584 -56.73001480]
[50.44793701 -42.99439240]
[51.11772156 -57.97943115]
[51.78750610 -72.96446991]
[51.22929382 -87.95407867]
[49.44683075 -102.84779358]
[47.66436386 -117.74151611]
[38.34199524 -130.52447510]
[44.51208115 -144.08099365]
[42.72961426 -158.97471619]
[40.94714737 -173.86843872]
[39.16468048 -188.76214600]
[37.38221741 -203.65586853]
[22.44555092 -205.79092407]
[8.57081699 -211.72001648]
[-3.29598570 -221.03889465]
[-12.34575748 -233.11216736]
[-17.96146965 -247.11668396]
[-19.76023483 -262.09756470]
[-17.61940956 -277.03338623]
[-11.68495941 -290.90585327]
[-2.36150455 -302.76904297]
[9.71526718 -311.81414795]
[23.72193909 -317.42446899]
[38.70351791 -319.21743774]
[53.63852692 -317.07086182]
[67.50868225 -311.13104248]
[79.36827850 -301.80300903]
[88.40872955 -289.72274780]
[94.01362610 -275.71389771]
[95.80081940 -260.73162842]
[93.64846039 -245.79745483]
[87.70330048 -231.92959595]
[78.37068939 -220.07359314]
[66.28693390 -211.03782654]
[52.27593231 -205.43833923]
[54.05839920 -190.54461670]
[55.84086609 -175.65089417]
[57.62332916 -160.75718689]
[59.40579605 -145.86346436]
[68.60066986 -134.14579773]
[62.55808258 -119.52397919]
[64.34054565 -104.63026428]
[66.12301636 -89.73654175]
[73.04891205 -103.04187775]
[85.31187439 -111.68016052]
[100.17230988 -113.72156525]
[114.31037140 -108.71005249]
[124.56757355 -97.76520538]
[128.65243530 -83.33211517]
[125.65238190 -68.63519287]
[116.23764038 -56.95774841]
[102.51148224 -50.90856934]
[87.54036713 -51.83904648]
[74.66888428 -59.54131317]
[66.77254486 -72.29468536]
[66.10276031 -57.30964661]
[65.43297577 -42.32460785]
[67.54759979 -27.47440910]
[72.37359619 -13.27195358]
[77.19959259 0.93050230]
[81.01161194 3.80757809]
[83.05673981 9.10988712]
[81.95099640 15.62823486]
[86.35198975 29.96808243]
[90.75299072 44.30792999]
[101.88394928 54.20494843]
[98.53614044 69.66789246]
[102.93714142 84.00774384]
[112.87877655 90.07446289]
[116.21287537 101.23354340]
[111.22886658 111.75974274]
[115.41587830 126.16352844]
[119.60289001 140.56730652]
[123.78990173 154.97108459]
[127.97691345 169.37487793]
[132.16392517 183.77865601]
[146.65838623 183.28585815]
[160.83903503 186.28034973]
[173.87973022 192.58303833]
[185.02185059 201.82223511]
[193.61842346 213.45559692]
[199.17170715 226.80187988]
[201.36199951 241.08094788]
[200.06602478 255.45927429]
[195.36387634 269.09866333]
[187.53413391 281.20504761]
[177.03723145 291.07482910]
[164.48854065 298.13565063]
[168.46063232 312.60015869]
[172.43272400 327.06469727]
[176.83372498 341.40454102]
[181.65972900 355.60699463]
[186.48571777 369.80944824]
[191.31172180 384.01190186]
[196.13771057 398.21435547]
[200.96371460 412.41680908]
[212.16734314 418.80755615]
[215.89454651 430.73614502]
[210.66780090 441.64523315]
[215.28181458 455.91796875]
[219.89582825 470.19070435]
[224.50982666 484.46343994]
[236.80081177 486.74368286]
[246.89743042 493.99121094]
[252.91941833 504.78079224]
[253.77754211 517.03497314]
[249.37016296 528.42388916]
[240.59094238 536.80847168]
[244.77795410 551.21221924]
[248.96496582 565.61602783]
[253.15197754 580.01977539]
[257.33898926 594.42358398]
[261.52600098 608.82733154]
[276.63150024 608.85443115]
[291.11709595 613.13751221]
[303.80847168 621.32922363]
[313.67687988 632.76568604]
[319.92224121 646.51965332]
[322.03833008 661.47619629]
[319.85357666 676.42291260]
[313.54510498 690.14807129]
[303.62432861 701.53906250]
[290.89541626 709.67242432]
[276.39031982 713.88891602]
[261.28485107 713.84661865]
[246.80357361 709.54901123]
[234.12040710 701.34454346]
[224.26351929 689.89819336]
[218.03196716 676.13793945]
[215.93090820 661.17926025]
[218.13066101 646.23480225]
[224.45292664 632.51599121]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 191]
[2 190]
[3 189]
[4 188]
[5 187]
[6 186]
[10 180]
[11 179]
[12 178]
[13 177]
[15 174]
[16 173]
[17 172]
[18 171]
[19 170]
[20 169]
[25 168]
[26 167]
[27 166]
[38 154]
[39 153]
[40 152]
[41 151]
[42 150]
[43 149]
[45 146]
[46 145]
[48 143]
[49 142]
[50 141]
[51 138]
[52 137]
[53 136]
[79 135]
[80 134]
[81 133]
[82 121]
[83 120]
[84 119]
[86 117]
[87 116]
[88 115]
[89 114]
[90 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
