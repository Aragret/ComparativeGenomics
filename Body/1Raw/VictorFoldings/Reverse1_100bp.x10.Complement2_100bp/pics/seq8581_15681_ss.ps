%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUAAUCAGUAACAACCCACCACUAAUCAGCCAACAACUACUCUAUAAACCUCCACCCCUAGUUAUCUCCCCCUUUAUCUUACUAGUCAUGACGCCxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[48.63145447 675.10400391]
[33.71213913 677.13073730]
[18.69749069 676.01086426]
[4.24388838 671.79339600]
[-9.01682091 664.66271973]
[-20.50493431 654.93041992]
[-29.71824265 643.02209473]
[-36.25397873 629.45825195]
[-39.82642746 614.83184814]
[-40.27941895 599.78234863]
[-37.59314728 584.96752930]
[-31.88504410 571.03515625]
[-23.40464783 558.59423828]
[-12.52268124 548.18865967]
[0.28514075 540.27325439]
[14.45891666 535.19409180]
[29.37902832 533.17321777]
[30.49467850 518.21478271]
[31.61032677 503.25631714]
[32.72597504 488.29788208]
[19.35825920 481.64703369]
[9.52867031 470.35437012]
[4.75857210 456.12020874]
[5.80437994 441.10375977]
[12.53779411 427.59542847]
[23.96061897 417.66760254]
[38.35262299 412.85656738]
[39.46827316 397.89813232]
[40.58392334 382.93966675]
[38.57247162 380.04373169]
[37.86376190 376.02966309]
[38.96804047 371.52035522]
[42.09807587 367.34304810]
[43.88054276 352.44934082]
[45.55208206 337.54275513]
[47.11260605 322.62414551]
[48.67313004 307.70553589]
[50.23365402 292.78692627]
[38.63661957 302.30056763]
[23.63667679 302.25973511]
[12.09159184 292.68316650]
[9.27962303 277.94909668]
[16.48636436 264.79373169]
[30.41699219 259.23159790]
[44.70261002 263.80554199]
[52.81244278 276.42630005]
[55.91655350 261.75097656]
[59.02066040 247.07568359]
[57.32939529 239.88113403]
[62.28177643 232.20574951]
[65.60403442 217.57827759]
[57.47363663 205.15121460]
[60.63450623 190.26956177]
[73.72428894 181.82589722]
[77.04654694 167.19844055]
[80.36881256 152.57098389]
[83.69107056 137.94352722]
[87.01332855 123.31606293]
[90.33558655 108.68860626]
[93.22086334 93.96871185]
[95.66658783 79.16944122]
[97.78121185 64.31924438]
[99.56367493 49.42552567]
[101.34614563 34.53181076]
[103.01768494 19.62523460]
[104.57820892 4.70663023]
[106.13873291 -10.21197510]
[107.69925690 -25.13057899]
[107.69925690 -40.13058090]
[106.13873291 -55.04918289]
[104.57820892 -69.96778870]
[95.44719696 -82.88813019]
[101.81842804 -96.35128784]
[100.25790405 -111.26988983]
[98.69738007 -126.18849182]
[89.56636810 -139.10884094]
[95.93760681 -152.57199097]
[94.37708282 -167.49060059]
[92.81655884 -182.40919495]
[91.25603485 -197.32780457]
[89.69551086 -212.24641418]
[88.13498688 -227.16502380]
[76.14131927 -237.10430908]
[74.77124786 -252.25613403]
[84.32076263 -263.62899780]
[82.76023865 -278.54760742]
[81.19972229 -293.46621704]
[66.21939087 -294.94091797]
[51.84267426 -299.40127563]
[38.65828323 -306.66467285]
[27.20610428 -316.43362427]
[17.95510292 -328.30813599]
[11.28410149 -341.80194092]
[7.46627235 -356.36245728]
[6.65795279 -371.39346313]
[8.89224339 -386.27947998]
[14.07765198 -400.41085815]
[22.00183868 -413.20901489]
[32.34031296 -424.14978027]
[44.66971970 -432.78521729]
[58.48517990 -438.76165771]
[73.22095490 -441.83441162]
[88.27363586 -441.87762451]
[103.02680969 -438.88952637]
[116.87635040 -432.99246216]
[129.25512695 -424.42794800]
[139.65623474 -413.54669189]
[147.65376282 -400.79428101]
[152.92019653 -386.69287109]
[155.23991394 -371.81994629]
[154.51788330 -356.78454590]
[150.78370667 -342.20233154]
[144.19027710 -328.67047119]
[135.00759888 -316.74304199]
[123.61167908 -306.90850830]
[110.46920013 -299.56954956]
[96.11832428 -295.02673340]
[97.67884827 -280.10812378]
[99.23937225 -265.18954468]
[110.93568420 -256.03903198]
[112.73079681 -240.93167114]
[103.05359650 -228.72554016]
[104.61411285 -213.80693054]
[106.17463684 -198.88833618]
[107.73516083 -183.96972656]
[109.29568481 -169.05111694]
[110.85620880 -154.13252258]
[119.87560272 -142.27925110]
[113.61598969 -127.74901581]
[115.17651367 -112.83041382]
[116.73703003 -97.91181183]
[125.75643158 -86.05854797]
[119.49681091 -71.52831268]
[121.05733490 -56.60970688]
[122.61785889 -41.69110107]
[128.85163879 -55.33441544]
[139.77946472 -65.60974884]
[153.78027344 -70.99282074]
[168.77711487 -70.68508148]
[182.54530334 -64.73217773]
[193.04240417 -54.01720047]
[198.71124268 -40.12964249]
[198.71087646 -25.12964249]
[193.04136658 -11.24236107]
[182.54373169 -0.52789575]
[168.77525330 5.42432737]
[153.77839661 5.73133135]
[139.77784729 0.34757417]
[128.85052490 -9.92829609]
[122.61785889 -23.57005692]
[121.05733490 -8.65145206]
[119.49681091 6.26715326]
[117.93628693 21.18575859]
[120.36685944 28.16530609]
[116.23986053 36.31427383]
[114.45739746 51.20799255]
[112.67492676 66.10170746]
[114.55506134 69.08456421]
[115.08383179 73.12628174]
[113.77930450 77.58178711]
[110.46585846 81.61516571]
[108.02013397 96.41443634]
[109.57867432 99.03369141]
[110.21862030 102.27791595]
[109.70666504 105.80797577]
[107.93803406 109.20330048]
[104.96305084 112.01086426]
[101.64079285 126.63832092]
[98.31852722 141.26577759]
[94.99626923 155.89324951]
[91.67401123 170.52070618]
[88.35175323 185.14816284]
[96.50991821 198.41775513]
[92.93230438 213.20475769]
[80.23149872 220.90054321]
[76.90924072 235.52799988]
[73.69596100 250.17979431]
[70.59185791 264.85510254]
[67.48774719 279.53039551]
[65.15225983 294.34747314]
[63.59173584 309.26608276]
[62.03121185 324.18466187]
[60.47068787 339.10327148]
[62.69032669 347.96392822]
[58.77426147 354.23178101]
[56.99179459 369.12551880]
[55.54237366 384.05532837]
[54.42672729 399.01376343]
[53.31107712 413.97222900]
[66.83018494 420.86492920]
[76.65392303 432.37741089]
[81.30899811 446.73513794]
[80.11567688 461.74060059]
[73.28684235 475.10964966]
[61.89083862 484.81924438]
[47.68442917 489.41351318]
[46.56877899 504.37197876]
[45.45313263 519.33044434]
[44.33748245 534.28887939]
[58.79274368 538.50067139]
[72.05625916 545.62615967]
[83.54820251 555.35388184]
[92.76618958 567.25860596]
[99.30725861 580.81988525]
[102.88546753 595.44488525]
[103.34437561 610.49426270]
[100.66393280 625.31005859]
[94.96131134 639.24468994]
[86.48580933 651.68896484]
[75.60794067 662.09881592]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 199]
[18 198]
[19 197]
[20 196]
[27 189]
[28 188]
[29 187]
[33 186]
[34 185]
[35 183]
[36 182]
[37 181]
[38 180]
[46 179]
[47 178]
[48 177]
[50 176]
[51 175]
[54 172]
[55 171]
[56 170]
[57 169]
[58 168]
[59 167]
[60 162]
[61 161]
[62 157]
[63 156]
[64 155]
[65 153]
[66 152]
[67 151]
[68 150]
[69 135]
[70 134]
[71 133]
[73 131]
[74 130]
[75 129]
[77 127]
[78 126]
[79 125]
[80 124]
[81 123]
[82 122]
[85 119]
[86 118]
[87 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
