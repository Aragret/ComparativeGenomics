%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[96.91271210 429.68731689]
[102.68732452 415.67199707]
[112.90950012 404.47900391]
[126.34486389 397.45999146]
[124.34085083 382.59445190]
[122.33683777 367.72891235]
[120.33282471 352.86340332]
[108.36924744 344.06518555]
[106.12512970 329.01797485]
[115.43462372 316.52911377]
[113.43061066 301.66360474]
[111.42659760 286.79806519]
[102.05828094 275.21859741]
[107.88249969 260.50845337]
[105.87848663 245.64291382]
[103.87447357 230.77738953]
[94.50616455 219.19792175]
[100.33038330 204.48774719]
[88.87125397 191.19657898]
[96.00672150 174.22111511]
[93.78160858 159.38706970]
[86.82679749 172.67732239]
[74.21183014 180.79289246]
[59.23423767 181.61242676]
[45.80911636 174.92167664]
[37.44576645 162.46960449]
[36.33034134 147.51112366]
[42.75441742 133.95637512]
[55.03875351 125.34852600]
[69.97225189 123.93764496]
[83.65133667 130.09252930]
[92.50000000 142.20350647]
[92.50000000 127.20349884]
[92.50000000 112.20349884]
[85.67605591 100.00000000]
[92.50000000 87.79650116]
[92.50000000 72.79650116]
[81.94292450 64.43212128]
[78.18565369 51.70053482]
[82.38497162 39.31312943]
[92.79557800 31.72044373]
[93.01890564 16.72210693]
[93.24223328 1.72376883]
[85.71125031 -12.19007111]
[93.63718414 -24.80073547]
[93.86051178 -39.79907227]
[94.08383942 -54.79740906]
[91.53995514 -59.35544968]
[91.04802704 -63.97186661]
[92.28666687 -67.85527039]
[94.66698456 -70.45650482]
[95.55979919 -85.42991638]
[96.45261383 -100.40332031]
[89.00865936 -87.38073730]
[78.70024109 -76.48411560]
[66.11034393 -68.32969666]
[51.95099258 -63.37866211]
[37.02296448 -61.91101074]
[22.17051506 -64.00975037]
[8.23361874 -69.55618286]
[-3.99952388 -78.23663330]
[-13.83706856 -89.56018066]
[-20.72265625 -102.88642120]
[-24.26687050 -117.46169281]
[-24.26927376 -132.46168518]
[-20.72972488 -147.03810120]
[-13.84840488 -160.36654663]
[-4.01448584 -171.69323730]
[8.21587658 -180.37760925]
[22.15099525 -185.92849731]
[37.00277328 -188.03199768]
[51.93127060 -186.56912231]
[66.09220886 -181.62261963]
[78.68471527 -173.47224426]
[88.99662018 -162.57891846]
[96.44474792 -149.55871582]
[100.60785675 -135.14801025]
[101.25042725 -120.16071320]
[107.32425690 -133.87597656]
[113.39809418 -147.59124756]
[119.47193146 -161.30651855]
[125.23796082 -175.15399170]
[130.69331360 -189.12680054]
[136.14868164 -203.09959412]
[141.60403442 -217.07238770]
[147.05938721 -231.04519653]
[150.92369080 -245.53887939]
[153.14881897 -260.37292480]
[155.37393188 -275.20697021]
[157.59904480 -290.04101562]
[159.82415771 -304.87506104]
[145.49008179 -309.40057373]
[132.04046631 -316.11285400]
[119.80654144 -324.84655762]
[109.08958435 -335.38662720]
[100.15349579 -347.47351074]
[93.21834564 -360.80957031]
[88.45491028 -375.06637573]
[85.98049927 -389.89282227]
[85.85604095 -404.92382812]
[88.08460999 -419.78921509]
[92.61131287 -434.12292480]
[99.32468414 -447.57199097]
[108.05940247 -459.80517578]
[118.60036469 -470.52127075]
[130.68798828 -479.45635986]
[144.02461243 -486.39041138]
[158.28179932 -491.15267944]
[173.10845947 -493.62585449]
[188.13946533 -493.74908447]
[203.00468445 -491.51928711]
[217.33802795 -486.99139404]
[230.78652954 -480.27691650]
[243.01899719 -471.54119873]
[253.73422241 -460.99932861]
[262.66830444 -448.91098022]
[269.60125732 -435.57379150]
[274.36236572 -421.31622314]
[276.83432007 -406.48934937]
[276.95629883 -391.45831299]
[274.72528076 -376.59329224]
[270.19619751 -362.26031494]
[263.48062134 -348.81237793]
[254.74386597 -336.58062744]
[244.20114136 -325.86627197]
[232.11204529 -316.93316650]
[218.77427673 -310.00131226]
[204.51631165 -305.24142456]
[189.68923950 -302.77069092]
[174.65820312 -302.64993286]
[172.43309021 -287.81588745]
[170.20797729 -272.98184204]
[167.98284912 -258.14779663]
[165.75773621 -243.31376648]
[175.03215027 -255.10298157]
[187.90173340 -262.80841064]
[202.67329407 -265.41625977]
[217.40338135 -262.58346558]
[230.15397644 -254.68270874]
[239.24754333 -242.75344849]
[243.48765564 -228.36520386]
[242.31645203 -213.41099548]
[235.88803101 -199.85830688]
[225.04815674 -189.49023438]
[211.22299194 -183.67085266]
[196.23150635 -183.16581726]
[182.04605103 -188.04158020]
[170.53298950 -197.65664673]
[163.20706177 -210.74597168]
[161.03218079 -225.58982849]
[155.57682800 -211.61703491]
[150.12147522 -197.64424133]
[144.66612244 -183.67143250]
[139.21075439 -169.69863892]
[140.28401184 -166.33999634]
[139.78381348 -162.29464722]
[137.40510559 -158.30780029]
[133.18719482 -155.23268127]
[127.11335754 -141.51741028]
[121.03952789 -127.80214691]
[114.96569061 -114.08687592]
[111.42601776 -99.51050568]
[110.53320312 -84.53709412]
[109.64038849 -69.56369019]
[109.08217621 -54.57408142]
[108.85884857 -39.57574463]
[108.63552094 -24.57740784]
[116.18247223 -11.73634911]
[108.24057007 1.94709647]
[108.01724243 16.94543457]
[107.79391479 31.94377136]
[120.01246643 43.49996567]
[120.09414673 60.65538025]
[107.50000000 72.79650116]
[107.50000000 87.79650116]
[114.32394409 100.00000000]
[107.50000000 112.20349884]
[107.50000000 127.20349884]
[107.50000000 142.20350647]
[108.61564636 157.16195679]
[110.84076691 171.99600220]
[120.73028564 180.27610779]
[122.27819824 192.67721558]
[115.19591522 202.48373413]
[124.70756531 215.12648010]
[118.74000549 228.77337646]
[120.74401855 243.63890076]
[122.74803162 258.50442505]
[132.25968933 271.14718628]
[126.29212189 284.79406738]
[128.29614258 299.65957642]
[130.30015564 314.52511597]
[142.58442688 324.10290527]
[144.40501404 339.20721436]
[135.19834900 350.85937500]
[137.20236206 365.72491455]
[139.20637512 380.59042358]
[141.21038818 395.45596313]
[156.02482605 398.66665649]
[168.84605408 406.75317383]
[178.12586975 418.73901367]
[182.74368286 433.17687988]
[182.14186096 448.32327271]
[176.39309692 462.34924316]
[166.19157410 473.56103516]
[152.76916504 480.60482788]
[137.74668884 482.62997437]
[122.93820190 479.39199829]
[110.13189697 471.28189087]
[100.87418365 459.27893066]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 198]
[5 197]
[6 196]
[7 195]
[10 192]
[11 191]
[12 190]
[14 188]
[15 187]
[16 186]
[18 184]
[20 181]
[21 180]
[32 179]
[33 178]
[34 177]
[36 175]
[37 174]
[41 171]
[42 170]
[43 169]
[45 167]
[46 166]
[47 165]
[51 164]
[52 163]
[53 162]
[78 161]
[79 160]
[80 159]
[81 158]
[82 154]
[83 153]
[84 152]
[85 151]
[86 150]
[87 134]
[88 133]
[89 132]
[90 131]
[91 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
