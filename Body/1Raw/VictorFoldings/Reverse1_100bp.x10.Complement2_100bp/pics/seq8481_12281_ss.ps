%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[-14.12659264 355.72613525]
[-8.02035999 369.46527100]
[-4.25894308 384.02209473]
[-2.94495606 398.99951172]
[-4.11424541 413.98895264]
[-7.73491192 428.58142090]
[-13.70818138 442.37887573]
[-21.87109947 455.00491333]
[-32.00097275 466.11508179]
[-43.82145691 475.40625000]
[-57.01007462 482.62500000]
[-71.20703125 487.57437134]
[-86.02502441 490.11932373]
[-101.05981445 490.19049072]
[-115.90122986 487.78585815]
[-130.14439392 482.97109985]
[-143.40074158 475.87750244]
[-155.30862427 466.69860840]
[-165.54319763 455.68481445]
[-173.82524109 443.13659668]
[-179.92883301 429.39630127]
[-183.68743896 414.83874512]
[-184.99855042 399.86105347]
[-183.82637024 384.87185669]
[-180.20289612 370.28005981]
[-174.22695923 356.48376465]
[-166.06161499 343.85931396]
[-155.92959595 332.75109863]
[-144.10733032 323.46218872]
[-130.91732788 316.24600220]
[-116.71940613 311.29937744]
[-101.90092468 308.75723267]
[-86.86612701 308.68899536]
[-72.02516937 311.09646606]
[-57.78293228 315.91400146]
[-50.70582962 302.68847656]
[-51.52300262 287.81628418]
[-38.18999481 279.29916382]
[-31.11288834 266.07363892]
[-24.03578377 252.84811401]
[-17.15637016 239.51869202]
[-10.47617626 226.08831787]
[-3.79598117 212.65794373]
[-16.24708748 221.02273560]
[-30.86289787 224.39588928]
[-45.72045135 222.33357239]
[-58.86497879 215.10713196]
[-68.56709290 203.66732788]
[-73.55031586 189.51927185]
[-73.15901184 174.52438354]
[-67.44467163 160.65548706]
[-57.15911484 149.73727417]
[-43.65557861 143.20623779]
[-28.71068573 141.92163086]
[-14.29069710 146.05249023]
[-2.29280758 155.05529785]
[5.70445299 167.74560547]
[8.64890766 182.45376587]
[6.15234709 197.24691772]
[15.64124584 185.62965393]
[25.13014412 174.01239014]
[34.61904144 162.39512634]
[34.63093948 158.86920166]
[36.35124588 155.17385864]
[39.84098434 152.11198425]
[44.80029678 150.48339844]
[54.79846954 139.30142212]
[64.79663849 128.11944580]
[74.79481506 116.93746948]
[84.79298401 105.75550079]
[84.84492493 94.10910034]
[92.67226410 85.48506165]
[104.25914001 84.30800629]
[114.42269135 73.27612305]
[124.58623505 62.24424744]
[134.74978638 51.21237183]
[144.91333008 40.18049240]
[155.07687378 29.14861679]
[163.94776917 17.05286598]
[171.41551208 4.04391289]
[178.88325500 -8.96503925]
[186.15647888 -22.08373451]
[193.23359680 -35.30926132]
[200.31069946 -48.53479004]
[207.38780212 -61.76031494]
[214.46490479 -74.98584747]
[221.54200745 -88.21137238]
[228.61911011 -101.43689728]
[235.69622803 -114.66242981]
[241.04740906 -128.67544556]
[244.58708191 -143.25183105]
[236.62738037 -156.64140320]
[240.42475891 -171.37350464]
[253.23873901 -178.87934875]
[256.77841187 -193.45571899]
[260.31808472 -208.03208923]
[263.85775757 -222.60847473]
[250.13851929 -228.78076172]
[237.78715515 -237.36904907]
[227.22438049 -248.08082581]
[218.80993652 -260.55126953]
[212.83041382 -274.35562134]
[209.48947144 -289.02371216]
[208.90092468 -304.05593872]
[211.08479309 -318.94033813]
[215.96670532 -333.16995239]
[223.38038635 -346.26010132]
[233.07331848 -357.76495361]
[244.71537781 -367.29263306]
[257.91003418 -374.51867676]
[272.20788574 -379.19696045]
[287.12194824 -381.16812134]
[302.14425659 -380.36502075]
[316.76315308 -376.81500244]
[330.48071289 -370.63903809]
[342.82974243 -362.04739380]
[353.38964844 -351.33276367]
[361.80072021 -338.86007690]
[367.77651978 -325.05410767]
[371.11352539 -310.38513184]
[371.69802856 -295.35272217]
[369.51013184 -280.46893311]
[364.62438965 -266.24063110]
[357.20718384 -253.15248108]
[347.51113892 -241.65025330]
[335.86651611 -232.12568665]
[322.66992188 -224.90319824]
[308.37081909 -220.22877502]
[293.45620728 -218.26164246]
[278.43411255 -219.06880188]
[274.89443970 -204.49241638]
[271.35476685 -189.91604614]
[267.81512451 -175.33967590]
[275.75958252 -162.79292297]
[272.37750244 -147.95997620]
[259.16345215 -139.71215820]
[255.62377930 -125.13578033]
[265.65805054 -136.28538513]
[278.73675537 -143.63024902]
[293.47970581 -146.39526367]
[308.33105469 -144.28862000]
[321.72344971 -137.53263855]
[332.24362183 -126.84028625]
[338.78131104 -113.33996582]
[340.64657593 -98.45639801]
[337.64260864 -83.76026917]
[330.08639526 -70.80250549]
[318.77536011 -60.95057297]
[304.90319824 -55.24415970]
[289.93386841 -54.28548431]
[275.44711304 -58.17572021]
[262.97177124 -66.50431061]
[253.82435608 -78.39233398]
[248.97026062 -92.58521271]
[248.92175293 -107.58531952]
[241.84465027 -94.35979462]
[234.76753235 -81.13426971]
[227.69042969 -67.90873718]
[220.61332703 -54.68321228]
[213.53622437 -41.45768356]
[206.45912170 -28.23215485]
[199.38201904 -15.00662804]
[199.88432312 -10.25723553]
[197.40841675 -5.14187193]
[191.89221191 -1.49729848]
[184.42446899 11.51165390]
[176.95672607 24.52060699]
[189.88363647 16.91173744]
[204.67431641 14.41452312]
[219.38276672 17.35751724]
[232.07386780 25.35351944]
[241.07786560 37.35051346]
[245.21014404 51.77009583]
[243.92703247 66.71511078]
[237.39733887 80.21929932]
[226.48014832 90.50594330]
[212.61181641 96.22165680]
[197.61695862 96.61444855]
[183.46841431 91.63262939]
[172.02764893 81.93164825]
[164.79991150 68.78784180]
[162.73611450 53.93049240]
[166.10874939 39.31216431]
[155.94520569 50.34403992]
[145.78166199 61.37591934]
[135.61811829 72.40779877]
[125.45456696 83.43967438]
[115.29102325 94.47154999]
[112.04004669 110.92778015]
[95.97496033 115.75366974]
[85.97678375 126.93564606]
[75.97861481 138.11761475]
[65.98044586 149.29959106]
[55.98227310 160.48156738]
[46.23630524 171.88403320]
[36.74740601 183.50129700]
[27.25850868 195.11856079]
[17.76961136 206.73582458]
[9.63439465 219.33813477]
[2.95420003 232.76850891]
[-3.72599459 246.19888306]
[-3.69785428 252.81028748]
[-6.58014727 257.70819092]
[-10.81025600 259.92523193]
[-17.88736153 273.15075684]
[-24.96446609 286.37628174]
[-24.65349197 302.19442749]
[-37.48030090 309.76556396]
[-44.55740738 322.99108887]
[-32.64775085 332.16769409]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 209]
[36 208]
[38 206]
[39 205]
[40 204]
[41 201]
[42 200]
[43 199]
[59 198]
[60 197]
[61 196]
[62 195]
[66 194]
[67 193]
[68 192]
[69 191]
[70 190]
[73 188]
[74 187]
[75 186]
[76 185]
[77 184]
[78 183]
[79 167]
[80 166]
[81 165]
[82 162]
[83 161]
[84 160]
[85 159]
[86 158]
[87 157]
[88 156]
[89 155]
[90 137]
[91 136]
[94 133]
[95 132]
[96 131]
[97 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
