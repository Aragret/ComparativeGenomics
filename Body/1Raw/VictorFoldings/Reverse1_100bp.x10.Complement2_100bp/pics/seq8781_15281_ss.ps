%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[108.60697937 662.31341553]
[94.00479126 658.79498291]
[79.95874023 653.47412109]
[66.69034576 646.43469238]
[54.40888596 637.78778076]
[43.30804062 627.66973877]
[33.56289673 616.24017334]
[25.32714272 603.67932129]
[18.73067284 590.18524170]
[13.87751865 575.97082520]
[10.84422493 561.26019287]
[9.67862892 546.28540039]
[10.39911556 531.28259277]
[12.99431992 516.48840332]
[17.42331314 502.13613892]
[23.61624336 488.45217896]
[31.47543716 475.65231323]
[40.87694931 463.93844604]
[51.67249680 453.49530029]
[63.69182205 444.48757935]
[76.74536896 437.05734253]
[90.62725067 431.32180786]
[105.11853790 427.37139893]
[119.99068451 425.26840210]
[119.76735687 410.27008057]
[119.54402924 395.27172852]
[119.32070160 380.27340698]
[109.52217102 365.71472168]
[118.62429047 349.70742798]
[118.17768860 334.71408081]
[117.73107910 319.72073364]
[117.28447723 304.72738647]
[116.83786774 289.73403931]
[115.61089325 274.78430176]
[113.60688019 259.91876221]
[111.60286713 245.05323792]
[109.48824310 230.20304871]
[107.26312256 215.36900330]
[103.16217804 209.22050476]
[105.11701965 200.29769897]
[103.11300659 185.43217468]
[101.10899353 170.56665039]
[91.68270111 162.98564148]
[89.89146423 150.61732483]
[97.23531342 140.01399231]
[95.45285034 125.12027740]
[93.67038727 110.22656250]
[91.66637421 95.36103058]
[89.44125366 80.52698517]
[87.21613312 65.69294739]
[84.99102020 50.85890198]
[82.76589966 36.02485657]
[80.54078674 21.19081306]
[65.07454681 20.28721809]
[50.13722610 16.19791222]
[36.37743759 9.10289478]
[24.39216423 -0.68737411]
[14.70085144 -12.74555683]
[7.72289562 -26.54608917]
[3.75949621 -41.48809052]
[2.98065352 -56.92151642]
[5.41787958 -72.17545319]
[10.96292973 -86.58727264]
[19.37260818 -99.53142548]
[30.27943039 -110.44657898]
[43.20768738 -118.85997772]
[57.59418488 -124.40789795]
[55.14846039 -139.20716858]
[52.70273209 -154.00643921]
[38.29752731 -163.93162537]
[35.58094788 -180.87078857]
[45.75177383 -194.26455688]
[38.67300415 -181.03991699]
[25.62031555 -173.64889526]
[10.63822365 -174.38166809]
[-1.63090420 -183.01116943]
[-7.38534641 -196.86347961]
[-4.84202671 -211.64630127]
[5.21097994 -222.77899170]
[19.65863991 -226.81199646]
[34.02418900 -222.49563599]
[43.85641479 -211.16714478]
[43.18662643 -226.15217590]
[42.51684189 -241.13722229]
[41.84705734 -256.12225342]
[41.06573486 -271.10189819]
[40.17292023 -286.07528687]
[39.28010559 -301.04870605]
[38.38728714 -316.02212524]
[37.27164078 -330.98056030]
[35.93340683 -345.92074585]
[34.59516907 -360.86093140]
[33.25693512 -375.80111694]
[18.50564194 -379.15588379]
[5.51404762 -386.90661621]
[-4.44506311 -398.29394531]
[-10.39599705 -412.20227051]
[-11.75574398 -427.26901245]
[-8.39108753 -442.01803589]
[-0.63166445 -455.00442505]
[10.76233673 -464.95590210]
[24.67464828 -470.89752197]
[39.74228287 -472.24719238]
[54.48907089 -468.87265015]
[67.47026825 -461.10452271]
[77.41410828 -449.70385742]
[83.34639740 -435.78756714]
[84.68595123 -420.71902466]
[81.30152893 -405.97451782]
[73.52471161 -392.99850464]
[62.11738205 -383.06231689]
[48.19712067 -377.13934326]
[49.53535461 -362.19915771]
[50.87358856 -347.25897217]
[52.21182251 -332.31878662]
[55.23725891 -328.62341309]
[55.97339630 -322.98825073]
[53.36069489 -316.91491699]
[54.25350952 -301.94152832]
[55.14632416 -286.96810913]
[56.03914261 -271.99472046]
[59.57519150 -265.50485229]
[56.83209610 -256.79205322]
[57.50188065 -241.80700684]
[58.17166519 -226.82196045]
[58.84145355 -211.83692932]
[60.51299286 -196.93035889]
[72.02225494 -191.13670349]
[78.18512726 -179.59976196]
[76.55400085 -166.42591858]
[67.50199890 -156.45216370]
[69.94773102 -141.65289307]
[72.39345551 -126.85362244]
[86.92532349 -126.35136414]
[101.08291626 -123.01450348]
[114.31855774 -116.97012329]
[126.11984253 -108.45008850]
[136.02949524 -97.78214264]
[143.66304016 -85.37730408]
[148.72377014 -71.71403503]
[151.01425171 -57.31978607]
[150.44403076 -42.75061798]
[147.03320312 -28.56974983]
[140.91171265 -15.32576180]
[132.31440735 -3.53138781]
[121.57201385 6.35634327]
[109.09844971 13.95381260]
[95.37483215 18.96569633]
[97.59994507 33.79973984]
[99.82506561 48.63378525]
[102.05017853 63.46782684]
[104.27529907 78.30187225]
[106.50041199 93.13591766]
[109.90326691 97.12772369]
[110.82735443 102.74193573]
[108.56410217 108.44409180]
[110.34656525 123.33781433]
[112.12903595 138.23153687]
[123.50498962 152.71148682]
[115.97451782 168.56263733]
[117.97853088 183.42816162]
[119.98254395 198.29368591]
[122.09716797 213.14389038]
[124.32228851 227.97793579]
[128.69007874 236.00041199]
[126.46839905 243.04922485]
[128.47241211 257.91476440]
[130.47642517 272.78027344]
[139.50093079 260.79870605]
[154.08688354 257.29870605]
[167.56578064 263.88046265]
[173.77525330 277.53485107]
[169.87641907 292.01928711]
[157.65176392 300.71166992]
[142.69023132 299.63800049]
[131.83122253 289.28741455]
[132.27783203 304.28079224]
[132.72442627 319.27413940]
[133.17103577 334.26748657]
[133.61764526 349.26083374]
[142.45315552 358.65744019]
[142.51646423 371.15463257]
[134.31904602 380.05007935]
[134.54237366 395.04840088]
[134.76570129 410.04675293]
[134.98902893 425.04507446]
[149.91719055 426.70431519]
[164.51966858 430.22152710]
[178.56617737 435.54122925]
[191.83515930 442.57949829]
[204.11735535 451.22537231]
[215.21903992 461.34246826]
[224.96514893 472.77120972]
[233.20196533 485.33139038]
[239.79956055 498.82492065]
[244.65391541 513.03894043]
[247.68844604 527.74932861]
[248.85530090 542.72399902]
[248.13607788 557.72686768]
[245.54212952 572.52130127]
[241.11433411 586.87390137]
[234.92256165 600.55841064]
[227.06443787 613.35888672]
[217.66392517 625.07354736]
[206.86924744 635.51763916]
[194.85067749 644.52636719]
[181.79776001 651.95770264]
[167.91636658 657.69439697]
[153.42539978 661.64605713]
[138.55343628 663.75024414]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 186]
[25 185]
[26 184]
[27 183]
[29 180]
[30 179]
[31 178]
[32 177]
[33 176]
[34 168]
[35 167]
[36 166]
[37 164]
[38 163]
[40 162]
[41 161]
[42 160]
[45 158]
[46 157]
[47 156]
[48 153]
[49 152]
[50 151]
[51 150]
[52 149]
[53 148]
[67 133]
[68 132]
[69 131]
[72 127]
[82 126]
[83 125]
[84 124]
[85 123]
[86 121]
[87 120]
[88 119]
[89 118]
[90 115]
[91 114]
[92 113]
[93 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
