%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[12.30742264 393.95837402]
[15.29859066 408.68136597]
[16.25704765 423.67453003]
[15.16493607 438.65856934]
[12.04260349 453.35430908]
[6.94821596 467.48797607]
[-0.02332073 480.79629517]
[-8.74213123 493.03134155]
[-19.04578972 503.96514893]
[-30.74234581 513.39404297]
[-43.61389923 521.14239502]
[-57.42065811 527.06585693]
[-71.90541840 531.05401611]
[-86.79832458 533.03265381]
[-101.82194519 532.96484375]
[-116.69639587 530.85192871]
[-131.14456177 526.73315430]
[-144.89730835 520.68536377]
[-157.69841003 512.82116699]
[-169.30938721 503.28707886]
[-179.51394653 492.26071167]
[-188.12197876 479.94747925]
[-194.97312927 466.57678223]
[-199.93974304 452.39770508]
[-202.92932129 437.67437744]
[-203.88615417 422.68109131]
[-202.79241943 407.69720459]
[-199.66850281 393.00180054]
[-194.57258606 378.86865234]
[-187.59960938 365.56109619]
[-178.87947083 353.32699585]
[-168.57463074 342.39428711]
[-156.87704468 332.96664429]
[-144.00465393 325.21969604]
[-130.19725037 319.29776001]
[-115.71206665 315.31115723]
[-100.81893921 313.33413696]
[-85.79532623 313.40356445]
[-70.92111206 315.51812744]
[-56.47338104 319.63842773]
[-42.72129822 325.68771362]
[-34.86954498 312.90689087]
[-27.01778793 300.12603760]
[-19.16603279 287.34518433]
[-19.63304710 269.80242920]
[-3.36817098 261.16903687]
[4.29242659 248.27272034]
[5.00580502 240.91656494]
[12.16430187 235.24261475]
[20.01605797 222.46177673]
[20.83887863 215.11706543]
[28.08106041 209.55032349]
[36.12223434 196.88780212]
[43.87862396 184.04885864]
[51.34636688 171.03990173]
[58.71705627 157.97572327]
[65.99028778 144.85702515]
[73.26351166 131.73832703]
[73.75755310 124.36420441]
[80.74394226 118.47962952]
[88.21168518 105.47068024]
[95.28878784 92.24515533]
[101.96898651 78.81477356]
[108.64917755 65.38439941]
[115.32937622 51.95402527]
[121.50514221 38.28435516]
[127.16793060 24.39432716]
[132.72715759 10.46252823]
[138.18251038 -3.51026988]
[135.99404907 -19.17938614]
[147.83029175 -28.22111130]
[153.28564453 -42.19390869]
[153.49160767 -51.32601547]
[158.92764282 -56.33313751]
[164.59043884 -70.22316742]
[157.93493652 -80.07409668]
[156.87194824 -91.79463196]
[161.55035400 -102.46264648]
[170.70196533 -109.47433472]
[181.98284912 -111.17958832]
[188.05668640 -124.89485931]
[194.13050842 -138.61012268]
[200.20434570 -152.32539368]
[185.48451233 -149.43981934]
[173.95254517 -159.03221130]
[174.10939026 -174.03138733]
[185.83941650 -183.38052368]
[200.49569702 -180.18778992]
[207.27410889 -166.80839539]
[214.35122681 -180.03392029]
[221.42832947 -193.25944519]
[228.50543213 -206.48497009]
[235.58253479 -219.71051025]
[242.65963745 -232.93603516]
[249.73674011 -246.16156006]
[256.81384277 -259.38708496]
[244.50296021 -267.98812866]
[233.29576111 -277.98489380]
[223.34962463 -289.23703003]
[214.80413818 -301.58657837]
[207.77929688 -314.86016846]
[202.37370300 -328.87142944]
[198.66325378 -343.42373657]
[196.70002747 -358.31271362]
[196.51159668 -373.32940674]
[198.10058594 -388.26296997]
[201.44471741 -402.90377808]
[206.49700928 -417.04629517]
[213.18656921 -430.49197388]
[221.41947937 -443.05203247]
[231.08013916 -454.55020142]
[242.03294373 -464.82504272]
[254.12414551 -473.73233032]
[267.18399048 -481.14697266]
[281.02911377 -486.96490479]
[295.46520996 -491.10446167]
[310.28958130 -493.50750732]
[325.29409790 -494.14035034]
[340.26815796 -492.99404907]
[355.00152588 -490.08474731]
[369.28738403 -485.45324707]
[382.92517090 -479.16461182]
[395.72341919 -471.30706787]
[407.50250244 -461.99096680]
[418.09704590 -451.34707642]
[427.35827637 -439.52484131]
[435.15621948 -426.69018555]
[441.38140869 -413.02331543]
[445.94644165 -398.71606445]
[448.78723145 -383.96932983]
[449.86389160 -368.99011230]
[449.16131592 -353.98867798]
[446.68939209 -339.17565918]
[442.48275757 -324.75897217]
[436.60052490 -310.94104004]
[429.12524414 -297.91580200]
[420.16186523 -285.86614990]
[409.83624268 -274.96121216]
[398.29327393 -265.35409546]
[385.69506836 -257.17968750]
[372.21844482 -250.55268860]
[358.05258179 -245.56619263]
[343.39639282 -242.29016113]
[328.45559692 -240.77059937]
[313.43997192 -241.02883911]
[298.56024170 -243.06126404]
[284.02539062 -246.83930969]
[270.03936768 -252.30998230]
[262.96228027 -239.08445740]
[255.88516235 -225.85893250]
[248.80805969 -212.63339233]
[241.73095703 -199.40786743]
[234.65385437 -186.18234253]
[227.57675171 -172.95681763]
[220.49963379 -159.73129272]
[213.91961670 -146.25155640]
[207.84577942 -132.53628540]
[201.77194214 -118.82102203]
[195.69810486 -105.10575867]
[203.30831909 -88.45642090]
[196.21025085 -71.23636627]
[178.48045349 -64.56037903]
[172.81767273 -50.67034912]
[167.25845337 -36.73855209]
[161.80308533 -22.76575470]
[164.38174438 -8.09606457]
[152.15530396 1.94508719]
[146.69995117 15.91788483]
[147.19552612 23.29190636]
[141.05795288 30.05711365]
[135.39517212 43.94713974]
[150.02256775 40.62459183]
[161.83502197 49.86937332]
[162.12483215 64.86656952]
[150.67835999 74.56081390]
[135.93351746 71.80586243]
[128.75975037 58.63421631]
[122.07955933 72.06459045]
[115.39936066 85.49497223]
[108.71916962 98.92534637]
[109.44062805 101.88659668]
[109.10055542 105.17580414]
[107.57540894 108.40029907]
[104.88843536 111.12727356]
[101.22064209 112.93842316]
[93.75289917 125.94737244]
[86.38220978 139.01155090]
[79.10897827 152.13024902]
[71.83574677 165.24894714]
[70.41158295 174.27166748]
[64.35531616 178.50764465]
[56.88757706 191.51660156]
[56.90229416 196.73645020]
[55.09410858 201.01240540]
[52.12782669 203.80815125]
[48.78475571 204.92897034]
[40.74358368 217.59149170]
[32.79690170 230.31352234]
[24.94514465 243.09437561]
[17.18875313 255.93331909]
[9.52815628 268.82965088]
[11.94949245 281.49850464]
[5.30346584 292.08215332]
[-6.38519001 295.19696045]
[-14.23694515 307.97778320]
[-22.08870125 320.75863647]
[-29.94045639 333.53948975]
[-18.32844353 343.07229614]
[-8.12268925 354.09756470]
[0.48667577 366.40985107]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 207]
[42 206]
[43 205]
[44 204]
[46 201]
[47 200]
[49 199]
[50 198]
[52 197]
[53 196]
[54 192]
[55 191]
[56 189]
[57 188]
[58 187]
[60 186]
[61 185]
[62 180]
[63 179]
[64 178]
[65 177]
[66 171]
[67 170]
[68 168]
[69 167]
[71 165]
[72 164]
[74 163]
[75 162]
[80 159]
[81 158]
[82 157]
[83 156]
[89 155]
[90 154]
[91 153]
[92 152]
[93 151]
[94 150]
[95 149]
[96 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
