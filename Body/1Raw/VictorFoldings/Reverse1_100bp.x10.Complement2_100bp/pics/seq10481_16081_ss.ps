%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAAUAAGGAAGAUCCGUAUCAUCCCUCCUAUACUCCACACUCGCUAUAUGAUCAUAAGGAUCUUCACUCUACCAUUUACGAUCAUAUUAUAAAUACAUxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[115.94555664 567.15258789]
[103.10086060 574.96350098]
[89.16948700 580.61267090]
[74.51230621 583.95379639]
[59.50896835 584.90032959]
[44.54809189 583.42779541]
[30.01720619 579.57427979]
[16.29269218 573.43963623]
[3.73004842 565.18273926]
[-7.34532166 555.01751709]
[-16.64653969 543.20721436]
[-23.93268204 530.05773926]
[-29.01501846 515.90972900]
[-31.76190758 501.12963867]
[-32.10219574 486.10034180]
[-30.02706718 471.21109009]
[-25.59027672 456.84753418]
[-18.90674591 443.38177490]
[-10.14959431 431.16259766]
[0.45434758 420.50650024]
[12.63041115 411.68948364]
[26.06320763 404.93997192]
[40.40479279 400.43273926]
[55.28369141 398.28457642]
[70.31449890 398.55108643]
[72.98029327 383.78988647]
[75.64608765 369.02865601]
[64.18769836 359.51177979]
[58.99684525 345.44369507]
[61.56155396 330.56793213]
[71.29171753 318.89657593]
[85.65110016 313.62823486]
[88.31690216 298.86700439]
[90.98269653 284.10580444]
[93.64849091 269.34457397]
[95.65250397 254.47904968]
[96.99073792 239.53886414]
[98.32897186 224.59867859]
[99.66720581 209.65849304]
[101.00543976 194.71830750]
[101.00543976 179.71830750]
[99.66720581 164.77813721]
[84.93850708 153.90701294]
[82.79663849 135.40498352]
[95.06568909 120.96943665]
[93.28322601 106.07572174]
[90.61996460 103.28656006]
[89.19905090 99.33702087]
[89.51116180 94.80826569]
[91.76907349 90.47909546]
[90.65341949 75.52064514]
[89.53777313 60.56219101]
[78.38782501 53.00617981]
[73.69403076 40.58930588]
[76.96038055 27.92388153]
[86.77743530 19.57792091]
[85.88462067 4.60451508]
[84.99179840 -10.36889076]
[84.09898376 -25.34229660]
[83.20616913 -40.31570053]
[75.50060272 -27.44619560]
[62.74522400 -19.55313492]
[47.78962708 -18.39985275]
[33.97492218 -24.24399376]
[24.38735580 -35.77996063]
[21.16880989 -50.43059158]
[25.03832054 -64.92289734]
[35.13142395 -76.01925659]
[49.19329834 -81.24072266]
[64.08248901 -79.42079163]
[76.47270203 -70.96605682]
[83.59594727 -57.76530075]
[85.15647125 -72.68390656]
[86.71699524 -87.60250854]
[88.27751923 -102.52111816]
[89.83803558 -117.43972015]
[91.39855957 -132.35832214]
[89.27146912 -137.12513733]
[89.19335938 -141.76704407]
[90.77352142 -145.52444458]
[93.37641144 -147.90295410]
[95.60153198 -162.73699951]
[97.82665253 -177.57104492]
[99.71994019 -192.45108032]
[101.28046417 -207.36967468]
[102.84098816 -222.28828430]
[104.40151215 -237.20689392]
[93.40541077 -227.00463867]
[78.52685547 -225.09974670]
[65.31518555 -232.20266724]
[58.69800949 -245.66421509]
[61.14338684 -260.46353149]
[71.73924255 -271.08087158]
[86.53359222 -273.55621338]
[100.00849915 -266.96630859]
[107.13838196 -253.76789856]
[110.46063995 -268.39535522]
[113.78289795 -283.02282715]
[117.10516357 -297.65026855]
[120.42742157 -312.27774048]
[106.89448547 -318.90771484]
[95.25569153 -328.48031616]
[86.13870239 -340.47937012]
[80.03519440 -354.25775146]
[77.27430725 -369.07241821]
[78.00493622 -384.12442017]
[82.18769073 -398.60205078]
[89.59698486 -411.72451782]
[99.83325958 -422.78414917]
[112.34447479 -431.18450928]
[126.45591736 -436.47259521]
[141.40657043 -438.36322021]
[156.39018250 -436.75442505]
[170.59869385 -431.73297119]
[183.26585388 -423.56967163]
[193.70854187 -412.70471191]
[201.36360168 -399.72409058]
[205.81819153 -385.32778931]
[206.83210754 -370.29220581]
[204.35063171 -355.42819214]
[198.50762939 -341.53732300]
[189.61817932 -329.36874390]
[178.16168213 -319.57867432]
[164.75598145 -312.69509888]
[150.12402344 -309.08920288]
[135.05488586 -308.95547485]
[131.73262024 -294.32803345]
[128.41035461 -279.70056152]
[125.08810425 -265.07308960]
[121.76584625 -250.44563293]
[119.32011414 -235.64636230]
[117.75959015 -220.72776794]
[116.19906616 -205.80915833]
[114.63854980 -190.89054871]
[116.56288147 -187.93601990]
[117.15176392 -183.90261841]
[115.91371918 -179.42819214]
[112.66069031 -175.34591675]
[110.43557739 -160.51188660]
[108.21045685 -145.67784119]
[106.31716919 -130.79780579]
[104.75664520 -115.87919617]
[103.19612122 -100.96059418]
[101.63559723 -86.04198456]
[100.07507324 -71.12338257]
[98.51454926 -56.20477676]
[98.17957306 -41.20851898]
[99.07238770 -26.23511314]
[99.96520996 -11.26170635]
[100.85802460 3.71169901]
[101.75083923 18.68510437]
[114.79505920 29.30051804]
[116.15247345 46.40233994]
[104.49622345 59.44654083]
[105.61187744 74.40499878]
[106.72752380 89.36344910]
[108.17694092 104.29325867]
[109.95941162 119.18697357]
[120.55671692 124.57526398]
[127.16945648 134.31039429]
[128.25053406 145.90888977]
[123.64657593 156.47862244]
[114.60739136 163.43989563]
[115.94562531 178.38008118]
[122.91760254 165.09883118]
[134.90985107 156.08851624]
[149.60685730 153.08886719]
[164.17086792 156.67907715]
[175.78979492 166.16593933]
[182.22019958 179.71769714]
[182.22047424 194.71769714]
[175.79057312 208.26968384]
[164.17201233 217.75697327]
[149.60813904 221.34774780]
[134.91101074 218.34864807]
[122.91842651 209.33877563]
[115.94562531 196.05654907]
[114.60739136 210.99673462]
[113.26915741 225.93692017]
[111.93092346 240.87710571]
[110.59268951 255.81729126]
[122.76771545 247.05551147]
[137.59382629 249.33285522]
[146.57797241 261.34472656]
[144.57359314 276.21020508]
[132.72891235 285.41366577]
[117.82910156 283.68295288]
[108.40970612 272.01037598]
[105.74391174 286.77160645]
[103.07811737 301.53280640]
[100.41232300 316.29403687]
[112.02187347 326.25222778]
[117.05497742 340.58975220]
[114.25440979 355.42291260]
[104.47071075 366.78668213]
[90.40730286 371.69445801]
[87.74150848 386.45568848]
[85.07571411 401.21688843]
[99.25027466 406.22470093]
[112.43789673 413.44152832]
[124.29700470 422.68045044]
[134.52041626 433.70214844]
[142.84330750 446.22116089]
[149.05010986 459.91320801]
[152.98004150 474.42361450]
[154.53131104 489.37652588]
[153.66374207 504.38464355]
[150.39981079 519.05920410]
[144.82405090 533.02014160]
[137.08087158 545.90576172]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 198]
[26 197]
[27 196]
[32 191]
[33 190]
[34 189]
[35 188]
[36 181]
[37 180]
[38 179]
[39 178]
[40 177]
[41 164]
[42 163]
[45 158]
[46 157]
[50 156]
[51 155]
[52 154]
[56 151]
[57 150]
[58 149]
[59 148]
[60 147]
[72 146]
[73 145]
[74 144]
[75 143]
[76 142]
[77 141]
[81 140]
[82 139]
[83 138]
[84 134]
[85 133]
[86 132]
[87 131]
[96 130]
[97 129]
[98 128]
[99 127]
[100 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
