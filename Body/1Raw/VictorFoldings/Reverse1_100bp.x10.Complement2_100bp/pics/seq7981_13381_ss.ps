%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[113.80533600 507.87881470]
[115.84860229 492.93640137]
[121.54447174 478.97186279]
[130.53488159 466.86306763]
[142.25471497 457.37115479]
[155.96722412 451.09277344]
[153.30142212 436.33157349]
[140.95692444 428.07632446]
[138.04315186 413.14431763]
[146.78570557 400.25225830]
[144.11990356 385.49102783]
[141.45411682 370.72982788]
[137.17192078 364.70614624]
[138.86022949 355.72909546]
[136.41450500 340.92984009]
[133.96876526 326.13055420]
[124.25984955 314.83514404]
[129.64350891 299.95809937]
[127.19778442 285.15884399]
[124.75205231 270.35955811]
[122.30632782 255.56028748]
[112.59740448 244.26489258]
[117.98107147 229.38783264]
[115.53533936 214.58856201]
[98.90854645 204.43652344]
[95.04894257 185.03016663]
[106.88557434 168.79521179]
[103.78146362 154.11991882]
[93.57785797 143.26930237]
[98.29186249 128.16668701]
[95.18775177 113.49139404]
[85.98612213 102.96421051]
[90.13694763 89.61271667]
[87.03283691 74.93741608]
[83.92872620 60.26211548]
[80.22759247 74.79833221]
[73.42549133 88.16738129]
[63.85432434 99.71695709]
[51.98107529 108.88352966]
[38.38507843 115.21984100]
[23.72970772 118.41672516]
[8.73003197 118.31820679]
[-5.88208246 114.92909241]
[-19.39367676 108.41474152]
[-31.14549255 99.09299469]
[-40.56412888 87.41869354]
[-47.19003296 73.96145630]
[-50.69990921 59.37787628]
[-50.92250824 44.37952805]
[-47.84696198 29.69821167]
[-41.62334061 16.05026245]
[-32.55530167 4.10159445]
[-21.08529663 -5.56479120]
[-7.77297497 -12.47725105]
[6.73212671 -16.29850960]
[21.72227287 -16.84211922]
[36.46606064 -14.08155537]
[50.24411011 -8.15151405]
[62.38415527 0.65866673]
[72.29386139 11.91911793]
[79.48970795 25.08041573]
[83.61948395 39.49386978]
[86.28527832 24.73265457]
[88.95108032 9.97143650]
[91.17619324 -4.86260700]
[92.95865631 -19.75632477]
[94.74112701 -34.65004349]
[96.52359009 -49.54375839]
[98.30606079 -64.43747711]
[99.42170715 -79.39592743]
[99.86830902 -94.38928223]
[100.31491852 -109.38262939]
[100.42658234 -124.38221741]
[100.20325470 -139.38055420]
[99.97992706 -154.37889099]
[99.75659943 -169.37722778]
[99.53327179 -184.37556458]
[98.75195312 -199.35519409]
[97.41371918 -214.29537964]
[96.07548523 -229.23556519]
[94.73725128 -244.17575073]
[93.28783417 -259.10556030]
[91.72731018 -274.02416992]
[82.59629059 -286.94451904]
[88.96752930 -300.40765381]
[87.40700531 -315.32626343]
[85.84648132 -330.24487305]
[84.28595734 -345.16348267]
[82.72543335 -360.08209229]
[81.16491699 -375.00070190]
[79.60439301 -389.91928101]
[78.04386902 -404.83789062]
[63.21129227 -407.75097656]
[49.89711761 -414.90811157]
[39.28524017 -425.67282104]
[32.31925583 -439.08798218]
[29.61857414 -453.96069336]
[31.42333984 -468.96850586]
[37.57307434 -482.77691650]
[47.52094650 -494.15811157]
[60.38240051 -502.10003662]
[75.01380157 -505.89654541]
[90.11413574 -505.21005249]
[104.34069824 -500.10159302]
[116.42845917 -491.02539062]
[125.30259705 -478.78851318]
[130.17402649 -464.47906494]
[130.60957336 -449.36938477]
[126.57051849 -434.80310059]
[118.41600800 -422.07534790]
[106.87113953 -412.31790161]
[92.96247101 -406.39843750]
[94.52299500 -391.47982788]
[96.08351898 -376.56121826]
[97.64404297 -361.64260864]
[99.20456696 -346.72399902]
[100.76509094 -331.80538940]
[102.32560730 -316.88677979]
[103.88613129 -301.96820068]
[112.90552521 -290.11492920]
[106.64591217 -275.58468628]
[108.20643616 -260.66607666]
[112.02874756 -254.34060669]
[109.67743683 -245.51399231]
[111.01567078 -230.57380676]
[112.35390472 -215.63362122]
[113.69213867 -200.69343567]
[125.16664886 -210.35447693]
[139.90344238 -207.55680847]
[147.03910828 -194.36279297]
[141.31349182 -180.49853516]
[126.94731140 -176.18428040]
[114.53160858 -184.59889221]
[114.75493622 -169.60055542]
[114.97826385 -154.60221863]
[115.20159149 -139.60388184]
[115.42491913 -124.60554504]
[117.68671417 -121.90061188]
[118.75071716 -117.96577454]
[118.05313873 -113.37593079]
[115.30826569 -108.93602753]
[114.86166382 -93.94267273]
[114.41505432 -78.94932556]
[126.04698944 -88.42023468]
[140.98236084 -87.02940369]
[150.66552734 -75.57356262]
[149.54953003 -60.61513519]
[138.27365112 -50.72299194]
[123.29723358 -51.56379700]
[113.19977570 -62.65501022]
[111.41730499 -47.76129150]
[109.63484192 -32.86757660]
[107.85237885 -17.97385788]
[106.06990814 -3.08014131]
[107.69448090 -0.79564881]
[108.51202393 2.27000594]
[108.22046661 5.81266022]
[106.63332367 9.42451763]
[103.71229553 12.63723183]
[101.04650116 27.39844894]
[98.38069916 42.15966797]
[98.60402679 57.15800476]
[101.70813751 71.83330536]
[104.81224823 86.50860596]
[114.01387787 97.03578949]
[109.86305237 110.38728333]
[112.96716309 125.06258392]
[123.39279175 136.96287537]
[118.45677185 151.01580811]
[121.56088257 165.69110107]
[131.67140198 169.09713745]
[139.39704895 176.33740234]
[143.38964844 186.05659485]
[142.99076843 196.47550964]
[138.33935547 205.71672058]
[130.33460999 212.14283752]
[132.78033447 226.94210815]
[142.66419983 239.29605103]
[137.10560608 253.11456299]
[139.55133057 267.91384888]
[141.99705505 282.71310425]
[144.44277954 297.51239014]
[154.32664490 309.86633301]
[148.76803589 323.68484497]
[151.21377563 338.48410034]
[153.65950012 353.28338623]
[156.21533203 368.06402588]
[158.88111877 382.82525635]
[161.54692078 397.58645630]
[174.24661255 406.60617065]
[176.73983765 421.61413574]
[168.06265259 433.66577148]
[170.72843933 448.42697144]
[185.77081299 449.51239014]
[200.07040405 454.30532837]
[212.72834778 462.50454712]
[222.94892883 473.59466553]
[230.08970642 486.87847900]
[233.70179749 501.52102661]
[233.55812073 516.60180664]
[229.66772461 531.17285156]
[222.27517700 544.31823730]
[211.84513855 555.21160889]
[199.03329468 563.16821289]
[184.64497375 567.68786621]
[169.58467102 568.48645020]
[154.79905701 565.51379395]
[141.21759033 558.95678711]
[129.69400024 549.22760010]
[120.95267487 536.93774414]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 193]
[7 192]
[10 189]
[11 188]
[12 187]
[14 186]
[15 185]
[16 184]
[18 182]
[19 181]
[20 180]
[21 179]
[23 177]
[24 176]
[27 170]
[28 169]
[30 167]
[31 166]
[33 164]
[34 163]
[35 162]
[62 161]
[63 160]
[64 159]
[65 154]
[66 153]
[67 152]
[68 151]
[69 150]
[70 143]
[71 142]
[72 141]
[73 137]
[74 136]
[75 135]
[76 134]
[77 133]
[78 127]
[79 126]
[80 125]
[81 124]
[82 122]
[83 121]
[85 119]
[86 118]
[87 117]
[88 116]
[89 115]
[90 114]
[91 113]
[92 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
