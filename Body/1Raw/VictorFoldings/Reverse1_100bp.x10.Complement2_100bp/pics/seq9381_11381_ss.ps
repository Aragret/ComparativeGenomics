%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAGACUCCAUUAUUUAUCCUAAUAGGGCAUAGCUUCCGGAAAAACCUGUCCACCACACACCACCGGAACCAUACACGAAAGAGCACAAUGUAGCGxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[66.95609283 592.32415771]
[53.55298996 585.56854248]
[40.78025818 577.68572998]
[28.73245621 568.73413086]
[17.49879074 558.77990723]
[7.16242695 547.89685059]
[-2.20010352 536.16552734]
[-10.51948357 523.67272949]
[-17.73411942 510.51101685]
[-23.79059219 496.77783203]
[-28.64406586 482.57482910]
[-32.25860214 468.00717163]
[-34.60744095 453.18270874]
[-35.67319489 438.21124268]
[-35.44797134 423.20355225]
[-33.93343735 408.27078247]
[-31.14080429 393.52346802]
[-27.09075165 379.07086182]
[-21.81326485 365.01989746]
[-15.34741402 351.47460938]
[-7.74107456 338.53533936]
[0.94944006 326.29782104]
[10.65978622 314.85272217]
[21.31807137 304.28472900]
[32.84538269 294.67211914]
[45.15637589 286.08602905]
[58.15990448 278.59002686]
[71.75968933 272.23965454]
[85.85504150 267.08190918]
[100.34160614 263.15496826]
[97.67581177 248.39375305]
[95.01001740 233.63252258]
[84.45012665 229.31338501]
[77.21158600 220.34014893]
[75.18271637 208.86941528]
[78.98146820 197.73072815]
[87.77361298 189.72854614]
[85.54850006 174.89450073]
[83.32337952 160.06047058]
[78.73546600 174.34159851]
[70.90513611 187.13558960]
[60.27525330 197.71885681]
[47.44697189 205.49285889]
[33.14580154 210.01795959]
[18.18053818 211.03822327]
[3.39754486 208.49597168]
[-10.36713123 202.53495789]
[-22.33502960 193.49230957]
[-31.82930946 181.87944031]
[-38.31302261 168.35311890]
[-41.41948318 153.67831421]
[-40.97300339 138.68495178]
[-36.99883652 124.22100067]
[-29.72174263 111.10445404]
[-19.55327415 100.07711029]
[-7.06850672 91.76262665]
[7.02648354 86.63123322]
[21.93455696 84.97312164]
[36.81259155 86.88208008]
[50.81916046 92.25012970]
[63.16212463 100.77370453]
[73.14343262 111.97073364]
[80.19858551 125.20798492]
[83.92872620 139.73788452]
[87.03283691 125.06258392]
[90.13694763 110.38728333]
[85.98612213 97.03578949]
[95.18775177 86.50860596]
[98.29186249 71.83330536]
[101.39597321 57.15800476]
[88.91893768 48.52091599]
[80.72134399 35.79918289]
[78.02619934 20.94826126]
[81.21356201 6.23675823]
[89.76729584 -6.10011721]
[102.35835266 -14.20016193]
[117.05120087 -16.85524559]
[120.15531158 -31.53054810]
[123.25942230 -46.20584869]
[118.54542542 -61.30846024]
[128.74902344 -72.15906525]
[131.85313416 -86.83437347]
[134.95724487 -101.50967407]
[138.06135559 -116.18497467]
[141.16546631 -130.86027527]
[126.91454315 -135.59219360]
[113.28304291 -141.88999939]
[100.44240570 -149.67446899]
[88.55410767 -158.84770203]
[77.76765442 -169.29435730]
[68.21871185 -180.88304138]
[60.02735519 -193.46801758]
[53.29660416 -206.89102173]
[48.11110306 -220.98324585]
[44.53606796 -235.56745911]
[42.61645508 -250.46023560]
[42.37640762 -265.47430420]
[43.81894684 -280.42086792]
[46.92592621 -295.11190796]
[51.65827560 -309.36267090]
[57.95647812 -322.99398804]
[65.74133301 -335.83441162]
[74.91493225 -347.72241211]
[85.36190796 -358.50854492]
[96.95087433 -368.05715942]
[109.53610229 -376.24813843]
[122.95930481 -382.97848511]
[137.05168152 -388.16357422]
[151.63598633 -391.73815918]
[166.52883911 -393.65734863]
[181.54292297 -393.89694214]
[196.48941040 -392.45394897]
[211.18035889 -389.34652710]
[225.43099976 -384.61373901]
[239.06213379 -378.31515503]
[251.90229797 -370.52990723]
[263.79006958 -361.35595703]
[274.57586670 -350.90866089]
[284.12414551 -339.31939697]
[292.31472778 -326.73391724]
[299.04467773 -313.31051636]
[304.22933960 -299.21798706]
[307.80349731 -284.63357544]
[309.72222900 -269.74066162]
[309.96136475 -254.72657776]
[308.51794434 -239.78012085]
[305.41009521 -225.08927917]
[300.67687988 -210.83877563]
[294.37786865 -197.20783997]
[286.59225464 -184.36788940]
[277.41793823 -172.48042297]
[266.97030640 -161.69490051]
[255.38076782 -152.14700317]
[242.79505920 -143.95677185]
[229.37144470 -137.22723389]
[215.27876282 -132.04298401]
[200.69424438 -128.46926880]
[185.80128479 -126.55098724]
[170.78718567 -126.31228638]
[155.84077454 -127.75616455]
[152.73666382 -113.08086395]
[149.63255310 -98.40556335]
[146.52844238 -83.73026276]
[143.42433167 -69.05495453]
[148.36035156 -55.00202560]
[137.93472290 -43.10173798]
[134.83061218 -28.42643738]
[131.72650146 -13.75113487]
[144.08583069 -5.37399530]
[152.31858826 7.13068867]
[155.14422607 21.87452126]
[152.10157776 36.61663437]
[143.62380981 49.10426712]
[130.97700500 57.41701126]
[116.07127380 60.26211548]
[112.96716309 74.93741608]
[109.86305237 89.61271667]
[114.01387787 102.96421051]
[104.81224823 113.49139404]
[101.70813751 128.16668701]
[98.60402679 142.84199524]
[98.15742493 157.83534241]
[100.38254547 172.66938782]
[102.60765839 187.50343323]
[118.26134491 198.17472839]
[121.09539795 216.58345032]
[109.77123260 230.96673584]
[112.43702698 245.72795105]
[115.10282135 260.48916626]
[130.04786682 259.10092163]
[145.05691528 259.00259399]
[160.01887512 260.19485474]
[174.82293701 262.66894531]
[189.35951233 266.40649414]
[203.52098083 271.37988281]
[217.20246887 277.55224609]
[230.30271912 284.87786865]
[242.72471619 293.30258179]
[254.37649536 302.76394653]
[265.17178345 313.19195557]
[275.03067017 324.50936890]
[283.88012695 336.63241577]
[291.65469360 349.47131348]
[298.29675293 362.93106079]
[303.75717163 376.91195679]
[307.99548340 391.31048584]
[310.98031616 406.02008057]
[312.68960571 420.93182373]
[313.11065674 435.93530273]
[312.24038696 450.91943359]
[310.08520508 465.77325439]
[306.66107178 480.38684082]
[301.99337769 494.65197754]
[296.11663818 508.46304321]
[289.07437134 521.71777344]
[280.91873169 534.31805420]
[271.71008301 546.17059326]
[261.51663208 557.18762207]
[250.41383362 567.28753662]
[238.48387146 576.39569092]
[225.81509399 584.44451904]
[212.50129700 591.37445068]
[198.64105225 597.13421631]
[184.33697510 601.68115234]
[169.69496155 604.98162842]
[154.82342529 607.01116943]
[139.83248901 607.75476074]
[124.83310699 607.20684814]
[109.93635559 605.37158203]
[95.25252533 602.26245117]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 169]
[31 168]
[32 167]
[37 164]
[38 163]
[39 162]
[64 161]
[65 160]
[66 159]
[68 157]
[69 156]
[70 155]
[77 148]
[78 147]
[79 146]
[81 144]
[82 143]
[83 142]
[84 141]
[85 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
