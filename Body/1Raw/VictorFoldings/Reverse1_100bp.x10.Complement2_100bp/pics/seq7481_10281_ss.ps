%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[51.78306198 222.46519470]
[52.68522263 237.44625854]
[52.37897873 252.45135498]
[50.86631012 267.38311768]
[48.15702820 282.14477539]
[44.26870346 296.64053345]
[39.22655869 310.77642822]
[33.06328583 324.46072388]
[25.81886482 337.60473633]
[17.54027367 350.12316895]
[8.28120613 361.93484497]
[-1.89828908 372.96319580]
[-12.93219376 383.13665771]
[-24.74894714 392.38925171]
[-37.27191162 400.66098022]
[-50.41987228 407.89822388]
[-64.10755920 414.05401611]
[-78.24619293 419.08840942]
[-92.74408722 422.96881104]
[-107.50720978 425.67001343]
[-122.43981934 427.17449951]
[-137.44506836 427.47253418]
[-152.42564392 426.56216431]
[-167.28437805 424.44934082]
[-181.92492676 421.14767456]
[-196.25231934 416.67868042]
[-210.17364502 411.07125854]
[-223.59860229 404.36181641]
[-236.44015503 396.59387207]
[-248.61499023 387.81777954]
[-260.04415894 378.09048462]
[-270.65356445 367.47506714]
[-280.37435913 356.04037476]
[-289.14349365 343.86053467]
[-296.90411377 331.01455688]
[-303.60592651 317.58578491]
[-309.20541382 303.66125488]
[-313.66625977 289.33132935]
[-316.95956421 274.68890381]
[-319.06396484 259.82894897]
[-319.96578979 244.84786987]
[-319.65921021 229.84280396]
[-318.14620972 214.91104126]
[-315.43661499 200.14945984]
[-311.54797363 185.65377808]
[-306.50552368 171.51802063]
[-300.34194946 157.83383179]
[-293.09722900 144.69000244]
[-284.81835938 132.17175293]
[-275.55905151 120.36026001]
[-265.37930298 109.33215332]
[-254.34516907 99.15893555]
[-242.52821350 89.90659332]
[-230.00506592 81.63513184]
[-216.85694885 74.39819336]
[-203.16912842 68.24271393]
[-189.03038025 63.20861053]
[-174.53239441 59.32854080]
[-159.76921082 56.62766266]
[-144.83657837 55.12349319]
[-129.83131409 54.82579041]
[-114.85076904 55.73648071]
[-99.99207306 57.84966278]
[-85.35160065 61.15162659]
[-71.02430725 65.62095642]
[-57.10310745 71.22867584]
[-43.67828369 77.93840790]
[-30.83691025 85.70663452]
[-18.66226387 94.48298645]
[-7.23330355 104.21053314]
[3.37584758 114.82619476]
[13.09638405 126.26111603]
[21.86526489 138.44114685]
[34.70420456 130.68475342]
[47.54314423 122.92836761]
[60.38208389 115.17197418]
[73.22102356 107.41558075]
[74.10525513 89.92198944]
[85.27915955 76.43305206]
[102.30261993 72.30880737]
[118.41109467 79.18808746]
[131.01341248 71.05287170]
[143.61572266 62.91765213]
[156.21803284 54.78243637]
[168.82034302 46.64722061]
[181.42265320 38.51200485]
[178.11019897 23.73861694]
[180.04843140 8.75144577]
[186.98425293 -4.64312792]
[198.06341553 -14.83734131]
[211.93569946 -20.61502075]
[226.91934204 -21.29665565]
[241.20507812 -16.81925583]
[253.07444763 -7.74163675]
[265.67675781 -15.87685204]
[278.27908325 -24.01206779]
[290.88137817 -32.14728546]
[283.69558716 -45.32192993]
[277.50238037 -58.99129105]
[272.33560181 -73.08071136]
[268.22348022 -87.51323700]
[265.18847656 -102.21003723]
[263.24719238 -117.09085083]
[262.41015625 -132.07438660]
[262.68200684 -147.07884216]
[264.06124878 -162.02223206]
[266.54031372 -176.82295227]
[270.10568237 -191.40017700]
[274.73791504 -205.67427063]
[280.41165161 -219.56727600]
[287.09594727 -233.00332642]
[294.75427246 -245.90902710]
[303.34481812 -258.21389771]
[312.82064819 -269.85073853]
[323.13003540 -280.75598145]
[334.21661377 -290.87005615]
[346.01989746 -300.13772583]
[358.47540283 -308.50839233]
[371.51507568 -315.93630981]
[385.06768799 -322.38095093]
[399.05929565 -327.80706787]
[413.41339111 -332.18505859]
[428.05163574 -335.49099731]
[442.89404297 -337.70681763]
[457.85958862 -338.82046509]
[472.86648560 -338.82580566]
[487.83279419 -337.72280884]
[502.67678833 -335.51754761]
[517.31738281 -332.22201538]
[531.67456055 -327.85424805]
[545.67004395 -322.43807983]
[559.22723389 -316.00308228]
[572.27221680 -308.58444214]
[584.73364258 -300.22262573]
[596.54351807 -290.96334839]
[607.63732910 -280.85717773]
[617.95440674 -269.95928955]
[627.43853760 -258.32919312]
[636.03784180 -246.03044128]
[643.70532227 -233.13018799]
[650.39923096 -219.69889832]
[656.08282471 -205.80992126]
[660.72521973 -191.53912354]
[664.30096436 -176.96444702]
[666.79052734 -162.16549683]
[668.18041992 -147.22308350]
[668.46295166 -132.21884155]
[667.63659668 -117.23470306]
[665.70587158 -102.35251617]
[662.68133545 -87.65355682]
[658.57946777 -73.21810913]
[653.42272949 -59.12502289]
[647.23925781 -45.45125580]
[640.06280518 -32.27149963]
[631.93261719 -19.65773773]
[622.89306641 -7.67886019]
[612.99346924 3.59970593]
[602.28802490 14.11636066]
[590.83508301 23.81366539]
[578.69726562 32.63865662]
[565.94085693 40.54313660]
[552.63549805 47.48392487]
[538.85388184 53.42312622]
[524.67126465 58.32828903]
[510.16510010 62.17263412]
[495.41464233 64.93515778]
[480.50045776 66.60076904]
[465.50399780 67.16037750]
[450.50714111 66.61093140]
[435.59182739 64.95542145]
[420.83953857 62.20288849]
[406.33078003 58.36837387]
[392.14483643 53.47281647]
[378.35919189 47.54295731]
[365.04913330 40.61117935]
[352.28735352 32.71534729]
[340.14355469 23.89858055]
[328.68408203 14.20903587]
[317.97146606 3.69963574]
[308.06427002 -7.57222176]
[299.01660156 -19.54497147]
[286.41427612 -11.40975666]
[273.81198120 -3.27454066]
[261.20965576 4.86067533]
[264.59536743 19.41479111]
[262.79397583 34.27696228]
[256.00375366 47.65109634]
[245.02703857 57.91427994]
[231.17544556 63.81371307]
[216.11322021 64.61962128]
[201.65722656 60.21545792]
[189.55787659 51.11431885]
[176.95556641 59.24953461]
[164.35324097 67.38475037]
[151.75093079 75.51996613]
[139.14862061 83.65518188]
[126.54631042 91.79039764]
[127.52437592 103.80960083]
[123.31851196 115.11130524]
[114.72084045 123.56694794]
[103.35066223 127.58400726]
[91.34941101 126.40589905]
[80.97741699 120.25452423]
[68.13847351 128.01091003]
[55.29953766 135.76730347]
[42.46059418 143.52369690]
[29.62165451 151.28009033]
[36.32374191 164.70872498]
[41.92353439 178.63311768]
[46.38471222 192.96295166]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[73 207]
[74 206]
[75 205]
[76 204]
[77 203]
[81 197]
[82 196]
[83 195]
[84 194]
[85 193]
[86 192]
[94 184]
[95 183]
[96 182]
[97 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
