%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[222.38496399 443.51129150]
[223.10981750 428.51577759]
[225.34805298 413.67053223]
[229.07669067 399.12789917]
[234.25746155 385.03710938]
[240.83723450 371.54275513]
[248.74844360 358.78329468]
[257.90994263 346.88967896]
[268.22772217 335.98397827]
[279.59588623 326.17803955]
[270.99731445 313.88720703]
[262.39874268 301.59637451]
[253.80018616 289.30554199]
[245.20161438 277.01470947]
[236.60305786 264.72387695]
[227.20089722 253.03628540]
[217.03735352 242.00440979]
[206.87380981 230.97253418]
[196.71026611 219.94064331]
[186.54672241 208.90876770]
[176.38316345 197.87689209]
[166.21961975 186.84501648]
[151.90554810 182.72720337]
[148.24542236 167.33518982]
[138.08187866 156.30331421]
[127.91833496 145.27142334]
[125.12621307 145.02206421]
[122.26462555 143.65167236]
[119.76106262 141.12828064]
[118.04666901 137.57505798]
[117.50236511 133.26718140]
[108.01346588 121.64992523]
[98.52457428 110.03266144]
[91.39178467 106.27821350]
[88.98242950 98.17106628]
[79.32162476 86.69636536]
[69.32344818 75.51438904]
[59.32527924 64.33241272]
[44.35895920 59.20212936]
[41.64354706 44.55713654]
[33.59063339 40.24571228]
[31.58127785 33.13344955]
[21.75069618 21.80385590]
[8.29509544 22.40500069]
[-2.88672304 15.25116253]
[-7.83331108 3.14276242]
[-4.94615269 -9.41485786]
[-14.60696316 -20.88955688]
[-24.26777458 -32.36425781]
[-33.92858505 -43.83895874]
[-43.58939362 -55.31365967]
[-53.25020599 -66.78836060]
[-65.66818237 -58.35047150]
[-78.88793945 -51.23415375]
[-92.76934814 -45.51484299]
[-107.16526031 -41.25317001]
[-121.92305756 -38.49430847]
[-136.88630676 -37.26750183]
[-151.89640808 -37.58575821]
[-166.79420471 -39.44570160]
[-181.42181396 -42.82761765]
[-195.62414551 -47.69565201]
[-209.25065613 -53.99820709]
[-222.15689087 -61.66846848]
[-234.20605469 -70.62512970]
[-245.27041626 -80.77323914]
[-255.23266602 -92.00522614]
[-263.98721313 -104.20202637]
[-271.44125366 -117.23433685]
[-277.51577759 -130.96401978]
[-282.14636230 -145.24552917]
[-285.28396606 -159.92747498]
[-286.89529419 -174.85421753]
[-286.96328735 -189.86753845]
[-285.48721313 -204.80825806]
[-282.48272705 -219.51802063]
[-277.98165894 -233.84088135]
[-272.03170776 -247.62501526]
[-264.69601440 -260.72430420]
[-256.05227661 -272.99987793]
[-246.19216919 -284.32165527]
[-235.22018433 -294.56954956]
[-223.25262451 -303.63494873]
[-210.41638184 -311.42178345]
[-196.84750366 -317.84750366]
[-182.68984985 -322.84396362]
[-168.09347534 -326.35821533]
[-153.21311951 -328.35302734]
[-138.20652771 -328.80718994]
[-123.23278046 -327.71597290]
[-108.45059967 -325.09088135]
[-94.01668549 -320.95974731]
[-80.08404541 -315.36639404]
[-66.80037689 -308.37008667]
[-54.30649567 -300.04501343]
[-42.73483658 -290.47943115]
[-32.20807266 -279.77468872]
[-22.83778572 -268.04431152]
[-14.72331429 -255.41262817]
[-7.95067167 -242.01354980]
[-2.59165335 -227.98910522]
[1.29693246 -213.48797607]
[3.67386460 -198.66386414]
[4.51394653 -183.67391968]
[3.80827236 -168.67706299]
[1.56432307 -153.83222961]
[-2.19411445 -139.29682922]
[-7.42719841 -125.22490692]
[-14.07945538 -111.76565552]
[-22.08036804 -99.06173706]
[-31.34512138 -87.24783325]
[-41.77550507 -76.44916534]
[-32.11469269 -64.97447205]
[-22.45388412 -53.49976730]
[-12.79307365 -42.02506638]
[-3.13226318 -30.55036736]
[6.52854729 -19.07566833]
[23.33090591 -18.35490227]
[34.63577652 -5.45084047]
[33.08029175 11.97327423]
[42.91086960 23.30286789]
[52.82552338 34.55896378]
[67.07670593 38.88944244]
[70.50725555 54.33424377]
[80.50542450 65.51622009]
[90.50359344 76.69819641]
[93.29170227 76.98909760]
[96.13256073 78.40193939]
[98.59827423 80.96234131]
[100.25957489 84.54068756]
[100.73968506 88.85618591]
[110.14183807 100.54376221]
[119.63072968 112.16102600]
[129.11962891 123.77828979]
[138.95021057 135.10787964]
[149.11375427 146.13975525]
[159.27731323 157.17163086]
[174.31834412 162.07853699]
[177.25149536 176.68147278]
[187.41505432 187.71334839]
[197.57859802 198.74522400]
[207.74214172 209.77709961]
[217.90568542 220.80897522]
[228.06922913 231.84085083]
[238.23278809 242.87274170]
[237.11901855 227.91413879]
[244.17552185 214.67761230]
[257.21575928 207.26461792]
[272.19903564 207.97216797]
[284.48269653 216.58100891]
[290.26043701 230.42361450]
[287.74200439 245.21069336]
[277.70776367 256.36029053]
[263.26690674 260.41760254]
[248.89389038 256.12530518]
[257.49246216 268.41613770]
[266.09103394 280.70697021]
[274.68957520 292.99780273]
[283.28814697 305.28866577]
[291.88671875 317.57949829]
[304.99545288 310.26156616]
[318.77728271 304.30743408]
[333.09078979 299.77810669]
[347.78909302 296.72015381]
[362.72134399 295.16488647]
[377.73434448 295.12829590]
[392.67398071 296.61077881]
[407.38699341 299.59704590]
[421.72241211 304.05654907]
[435.53311157 309.94345093]
[448.67736816 317.19738770]
[461.02029419 325.74392700]
[472.43527222 335.49530029]
[482.80511475 346.35153198]
[492.02340698 358.20114136]
[499.99560547 370.92260742]
[506.63989258 384.38531494]
[511.88803101 398.45114136]
[515.68621826 412.97576904]
[517.99548340 427.81015015]
[518.79211426 442.80203247]
[518.06793213 457.79757690]
[515.83032227 472.64291382]
[512.10235596 487.18572998]
[506.92218018 501.27673340]
[500.34301758 514.77136230]
[492.43234253 527.53118896]
[483.27136230 539.42517090]
[472.95407104 550.33135986]
[461.58636475 560.13781738]
[449.28485107 568.74383545]
[436.17578125 576.06115723]
[422.39367676 582.01470947]
[408.07995605 586.54339600]
[393.38153076 589.60070801]
[378.44921875 591.15527344]
[363.43624878 591.19122314]
[348.49664307 589.70812988]
[333.78375244 586.72119141]
[319.44854736 582.26104736]
[305.63809204 576.37353516]
[292.49417114 569.11901855]
[280.15161133 560.57196045]
[268.73709106 550.82006836]
[258.36770630 539.96337891]
[249.14991760 528.11334229]
[241.17828369 515.39154053]
[234.53460693 501.92855835]
[229.28707886 487.86248779]
[225.48951721 473.33767700]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 160]
[11 159]
[12 158]
[13 157]
[14 156]
[15 155]
[16 145]
[17 144]
[18 143]
[19 142]
[20 141]
[21 140]
[22 139]
[24 137]
[25 136]
[26 135]
[31 134]
[32 133]
[33 132]
[35 131]
[36 126]
[37 125]
[38 124]
[40 122]
[42 121]
[43 120]
[47 117]
[48 116]
[49 115]
[50 114]
[51 113]
[52 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
