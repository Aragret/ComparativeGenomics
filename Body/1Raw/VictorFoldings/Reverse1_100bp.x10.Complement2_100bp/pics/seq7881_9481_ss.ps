%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxAAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUA\
) } def
/len { sequence length } bind def

/coor [
[176.67526245 587.17016602]
[186.79524231 575.90673828]
[200.02532959 568.54174805]
[197.35952759 553.78051758]
[194.69374084 539.01928711]
[192.02793884 524.25805664]
[189.36215210 509.49685669]
[186.69635010 494.73565674]
[182.41415405 488.71197510]
[184.10246277 479.73492432]
[181.65673828 464.93563843]
[169.43652344 456.49752808]
[166.74537659 441.52380371]
[175.67890930 428.76333618]
[173.23316956 413.96405029]
[170.78744507 399.16479492]
[166.92314148 384.67111206]
[161.67642212 370.61862183]
[156.42970276 356.56616211]
[152.53372192 353.80386353]
[150.33163452 348.56478882]
[151.24281311 342.01641846]
[146.41680908 327.81396484]
[141.59080505 313.61151123]
[136.76481628 299.40902710]
[131.93881226 285.20657349]
[127.11281586 271.00411987]
[119.52840424 283.94540405]
[105.04998779 287.86654663]
[91.97145081 280.52133179]
[87.78479004 266.11746216]
[94.88829803 252.90609741]
[109.21277618 248.45532227]
[122.55188751 255.31402588]
[119.01221466 240.73764038]
[115.47254181 226.16127014]
[111.93286896 211.58489990]
[108.39319611 197.00851440]
[104.85352325 182.43214417]
[96.14479065 194.64517212]
[81.37428284 197.25897217]
[69.00320435 188.77624512]
[66.11828613 174.05628967]
[74.37213135 161.53135681]
[89.03656769 158.37629700]
[101.71058655 166.39770508]
[92.17247009 158.95788574]
[90.19728088 146.61759949]
[97.38245392 135.90611267]
[95.37844086 121.04058075]
[93.37442780 106.17504883]
[90.66993713 103.42584991]
[89.19037628 99.49790192]
[89.43502808 94.96500397]
[91.62822723 90.60269928]
[90.28999329 75.66251373]
[88.95175934 60.72232819]
[87.61352539 45.78214264]
[78.67588806 32.72729111]
[85.24686432 19.36048126]
[83.90863037 4.42029667]
[82.57039642 -10.51988792]
[78.68785095 -18.78812027]
[81.32515717 -25.69220734]
[80.20950317 -40.65066147]
[79.09385681 -55.60911560]
[67.40143585 -65.90110016]
[66.48310089 -81.08699799]
[76.36698914 -92.17050171]
[64.74991608 -82.68138123]
[50.05640793 -85.69813538]
[43.11797714 -98.99694061]
[49.04937363 -112.77440643]
[63.47819519 -116.87429810]
[75.76723480 -108.27576447]
[75.76723480 -123.27576447]
[75.76723480 -138.27575684]
[68.02993774 -152.07594299]
[75.76723480 -164.80320740]
[75.76723480 -179.80320740]
[75.76723480 -194.80320740]
[75.76723480 -209.80320740]
[62.33338547 -213.30580139]
[50.14149475 -219.92541504]
[39.90195465 -229.27091980]
[32.21009827 -240.79252625]
[27.51158714 -253.81411743]
[26.07659912 -267.57290649]
[27.98427963 -281.26416016]
[33.11841202 -294.08819580]
[41.17446899 -305.29721069]
[51.67768478 -314.23876953]
[64.01101685 -320.39376831]
[77.45142365 -323.40673828]
[77.89803314 -338.40008545]
[70.57504272 -352.42453003]
[78.68785095 -364.91577148]
[79.13446045 -379.90911865]
[65.04177094 -385.49230957]
[53.71060181 -395.56109619]
[46.50924683 -408.89962769]
[44.30730057 -423.89721680]
[47.37066269 -438.74279785]
[55.32941055 -451.64373779]
[67.22249603 -461.04217529]
[81.61376190 -465.80316162]
[96.76540375 -465.35183716]
[110.84777069 -459.74270630]
[122.16036987 -449.65304565]
[129.33712769 -436.30126953]
[131.51142883 -421.29965210]
[128.42071533 -406.45974731]
[120.43820953 -393.57348633]
[108.52782440 -384.19702148]
[94.12780762 -379.46252441]
[93.68119812 -364.46917725]
[101.03613281 -351.51718140]
[92.89138031 -337.95349121]
[92.44477081 -322.96014404]
[107.89245605 -318.15985107]
[121.38005066 -309.20382690]
[131.81596375 -296.80746460]
[138.35296631 -281.96499634]
[140.45690918 -265.86975098]
[137.95040894 -249.81813049]
[131.02777100 -235.10528564]
[120.23992157 -222.92056274]
[106.45061493 -214.25137329]
[90.76723480 -209.80320740]
[90.76723480 -194.80320740]
[90.76723480 -179.80320740]
[90.76723480 -164.80320740]
[98.50453186 -152.07594299]
[90.76723480 -138.27575684]
[90.76723480 -123.27576447]
[90.76723480 -108.27576447]
[91.32544708 -93.28615570]
[102.74412537 -83.79145813]
[104.08864594 -68.63735199]
[94.05230713 -56.72476196]
[95.16796112 -41.76630783]
[96.28360748 -26.80785561]
[97.51058197 -11.85812283]
[98.84881592 3.08206272]
[100.18704987 18.02224731]
[109.02896881 30.00848007]
[102.55371094 44.44390869]
[103.89194489 59.38409424]
[105.23017883 74.32427979]
[106.56841278 89.26446533]
[108.23995972 104.17103577]
[110.24397278 119.03656769]
[112.24798584 133.90209961]
[123.83826447 148.21107483]
[116.54462433 164.17257690]
[119.42990112 178.89247131]
[122.96957397 193.46884155]
[126.50924683 208.04522705]
[130.04891968 222.62159729]
[133.58859253 237.19796753]
[137.12826538 251.77435303]
[141.31527710 266.17813110]
[146.14126587 280.38058472]
[150.96726990 294.58303833]
[155.79325867 308.78549194]
[160.61926270 322.98794556]
[165.44526672 337.19039917]
[170.48217773 351.31942749]
[175.72889709 365.37191772]
[180.97561646 379.42437744]
[183.86155701 364.70462036]
[192.41827393 352.38461304]
[205.20379639 344.54049683]
[220.06355286 342.49414062]
[234.49340820 346.59036255]
[246.06169128 356.13894653]
[252.81890869 369.53073120]
[253.62638855 384.50897217]
[248.34803772 398.54959106]
[237.87335205 409.28649902]
[223.96749878 414.91030884]
[208.97386169 414.47332764]
[195.41912842 408.04922485]
[185.58671570 396.71905518]
[188.03244019 411.51834106]
[190.47817993 426.31759644]
[203.04217529 435.52542114]
[205.31167603 450.56881714]
[196.45600891 462.48992920]
[198.90173340 477.28918457]
[201.45756531 492.06985474]
[204.12336731 506.83105469]
[206.78915405 521.59228516]
[209.45495605 536.35351562]
[212.12075806 551.11474609]
[214.78654480 565.87591553]
[229.75704956 568.14807129]
[243.17750549 575.16021729]
[253.59213257 586.15179443]
[259.87124634 599.93041992]
[261.33377075 615.00158691]
[257.82098389 629.73046875]
[249.71398926 642.51934814]
[237.89215088 651.98095703]
[223.63781738 657.08911133]
[208.49719238 657.28955078]
[194.11262512 652.56060791]
[182.04441833 643.41528320]
[173.60166931 630.84552002]
[169.70018005 616.21484375]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 196]
[4 195]
[5 194]
[6 193]
[7 192]
[8 191]
[10 190]
[11 189]
[14 186]
[15 185]
[16 184]
[17 170]
[18 169]
[19 168]
[22 167]
[23 166]
[24 165]
[25 164]
[26 163]
[27 162]
[34 161]
[35 160]
[36 159]
[37 158]
[38 157]
[39 156]
[46 155]
[49 153]
[50 152]
[51 151]
[55 150]
[56 149]
[57 148]
[58 147]
[60 145]
[61 144]
[62 143]
[64 142]
[65 141]
[66 140]
[69 137]
[75 136]
[76 135]
[77 134]
[79 132]
[80 131]
[81 130]
[82 129]
[94 119]
[95 118]
[97 116]
[98 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
