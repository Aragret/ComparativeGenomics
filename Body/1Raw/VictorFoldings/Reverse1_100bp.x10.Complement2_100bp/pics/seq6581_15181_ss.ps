%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[75.49243927 642.52368164]
[63.96264267 632.83465576]
[54.78562164 620.89324951]
[48.39060593 607.25811768]
[45.07670593 592.56689453]
[44.99891281 577.50671387]
[48.16086578 562.78204346]
[54.41468048 549.08154297]
[63.46784592 537.04602051]
[74.89693451 527.23834229]
[88.16738892 520.11730957]
[102.65852356 516.01599121]
[101.76570892 501.04257202]
[100.87288666 486.06915283]
[99.98007202 471.09573364]
[99.08725739 456.12234497]
[84.74774933 451.91952515]
[72.68876648 443.04763794]
[64.37719727 430.56195068]
[60.83226013 415.95870972]
[62.50056076 400.99584961]
[69.19992828 387.48147583]
[80.13908386 377.05520630]
[94.01105499 370.98944092]
[93.11824036 356.01602173]
[92.22542572 341.04263306]
[91.33261108 326.06921387]
[90.21696472 311.11077881]
[88.87873077 296.17059326]
[87.54049683 281.23040771]
[86.20226288 266.29022217]
[84.86402130 251.35002136]
[70.86575317 246.20085144]
[60.44847107 235.44029236]
[55.71686935 221.16539001]
[57.66027451 206.19064331]
[65.94635010 193.49307251]
[78.97644806 185.62046814]
[77.63821411 170.68028259]
[76.29998016 155.74009705]
[70.86472321 169.72073364]
[62.84053040 182.39402771]
[52.52737808 193.28616333]
[40.31083298 201.98995972]
[26.64761925 208.18000793]
[12.04854965 211.62487793]
[-2.94058132 212.19580078]
[-17.75939369 209.87139893]
[-31.85387611 204.73861694]
[-44.69709396 196.98930359]
[-55.80889893 186.91320801]
[-64.77386475 174.88700867]
[-71.25682068 161.36032104]
[-75.01541901 146.83885193]
[-75.90911865 131.86550903]
[-73.90451813 117.00005341]
[-69.07656097 102.79826355]
[-61.60574722 89.79107666]
[-51.77137375 78.46477509]
[-39.94110489 69.24280548]
[-26.55722809 62.46993256]
[-12.12010479 58.39936829]
[2.83051920 57.18328857]
[17.73570442 58.86716461]
[32.03821182 63.38804245]
[45.20332718 70.57690430]
[56.73886871 80.16498566]
[66.21356964 91.79383087]
[73.27320862 105.02868652]
[77.65385437 119.37476349]
[79.19170380 134.28962708]
[84.43842316 120.23715210]
[89.68514252 106.18467712]
[94.72205353 92.05564880]
[99.54805756 77.85319519]
[104.37405396 63.65073776]
[109.09418488 49.41275024]
[113.70819855 35.14001465]
[118.32220459 20.86728287]
[122.93621063 6.59454870]
[127.55022430 -7.67818451]
[122.38307190 -19.49611092]
[126.51992798 -31.28891373]
[137.22840881 -36.91518784]
[142.05441284 -51.11764526]
[146.13407898 -65.55220032]
[149.45632935 -80.17965698]
[152.77859497 -94.80712128]
[156.10084534 -109.43457794]
[159.42311096 -124.06204224]
[162.74537659 -138.68949890]
[166.06762695 -153.31695557]
[169.38989258 -167.94441223]
[172.71214294 -182.57188416]
[176.03440857 -197.19934082]
[179.35667419 -211.82679749]
[182.56994629 -226.47859192]
[185.67405701 -241.15388489]
[171.91107178 -247.25915527]
[159.71844482 -256.09280396]
[149.62916565 -267.26867676]
[142.08428955 -280.29818726]
[137.41365051 -294.61178589]
[135.82144165 -309.58370972]
[137.37724304 -324.55944824]
[142.01307678 -338.88436890]
[149.52624512 -351.93218994]
[159.58833313 -363.13256836]
[171.75946045 -371.99581909]
[185.50755310 -378.13452148]
[200.23159790 -381.28030396]
[215.28794861 -381.29565430]
[230.01837158 -378.17987061]
[243.77894592 -372.06918335]
[255.96810913 -363.23074341]
[266.05297852 -352.05090332]
[273.59274292 -339.01843262]
[278.25775146 -324.70300293]
[279.84405518 -309.73043823]
[278.28234863 -294.75531006]
[273.64089966 -280.43222046]
[266.12258911 -267.38735962]
[256.05612183 -256.19094849]
[243.88150024 -247.33247375]
[230.13099670 -241.19918823]
[215.40570068 -238.05918884]
[200.34934998 -238.04977417]
[197.24523926 -223.37448120]
[198.93650818 -216.17993164]
[193.98413086 -208.50454712]
[190.66186523 -193.87707520]
[187.33961487 -179.24961853]
[184.01734924 -164.62216187]
[180.69508362 -149.99470520]
[177.37283325 -135.36723328]
[174.05056763 -120.73977661]
[170.72831726 -106.11231995]
[167.40605164 -91.48485565]
[164.08378601 -76.85739899]
[160.76153564 -62.22993851]
[173.40690613 -70.29805756]
[188.29571533 -68.47507477]
[198.62100220 -57.59442520]
[199.66218567 -42.63060379]
[190.94323730 -30.42486572]
[176.45036316 -26.55750847]
[162.80949402 -32.79663849]
[156.25686646 -46.29164886]
[151.43086243 -32.08919144]
[155.77172852 -15.08554935]
[141.82295227 -3.06417537]
[137.20895386 11.20855808]
[132.59494019 25.48129082]
[127.98092651 39.75402451]
[123.36692047 54.02676010]
[124.30052948 61.35820770]
[118.57650757 68.47673798]
[113.75051117 82.67919159]
[108.92451477 96.88164520]
[110.11763000 101.98952484]
[108.36396790 107.40229034]
[103.73760986 111.43139648]
[98.49089050 125.48387146]
[93.24417877 139.53634644]
[91.24015808 154.40187073]
[92.57839966 169.34205627]
[93.91663361 184.28224182]
[108.13842010 189.71382141]
[118.54919434 200.73664856]
[123.12297058 215.12763977]
[121.00362396 230.01620483]
[112.66453552 242.45681763]
[99.80420685 250.01179504]
[101.14244080 264.95196533]
[102.48067474 279.89215088]
[103.81890869 294.83233643]
[105.15715027 309.77252197]
[108.64186859 315.39108276]
[108.74980164 321.07312012]
[106.30601501 325.17639160]
[107.19882965 340.14981079]
[108.09164429 355.12319946]
[108.98446655 370.09661865]
[123.47895050 374.47097778]
[135.57955933 383.52346802]
[143.83738708 396.14599609]
[147.27191162 410.80459595]
[145.48741150 425.72561646]
[138.71842957 439.11050415]
[127.79914093 449.35250854]
[114.06066132 455.22952271]
[114.95348358 470.20294189]
[115.84629822 485.17633057]
[116.73911285 500.14974976]
[117.63192749 515.12316895]
[132.50775146 517.47344971]
[146.53038025 522.96710205]
[159.04394531 531.34710693]
[169.46315002 542.22155762]
[177.30070496 555.08184814]
[182.19000244 569.32647705]
[183.90237427 584.28912354]
[182.35772705 599.27008057]
[177.62831116 613.56854248]
[169.93531799 626.51586914]
[159.63856506 637.50634766]
[147.21966553 646.02600098]
[133.25946045 651.67639160]
[118.41090393 654.19317627]
[103.36847687 653.45867920]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 195]
[13 194]
[14 193]
[15 192]
[16 191]
[24 183]
[25 182]
[26 181]
[27 180]
[28 177]
[29 176]
[30 175]
[31 174]
[32 173]
[38 167]
[39 166]
[40 165]
[71 164]
[72 163]
[73 162]
[74 159]
[75 158]
[76 157]
[77 155]
[78 154]
[79 153]
[80 152]
[81 151]
[84 149]
[85 148]
[86 140]
[87 139]
[88 138]
[89 137]
[90 136]
[91 135]
[92 134]
[93 133]
[94 132]
[95 131]
[96 130]
[97 128]
[98 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
