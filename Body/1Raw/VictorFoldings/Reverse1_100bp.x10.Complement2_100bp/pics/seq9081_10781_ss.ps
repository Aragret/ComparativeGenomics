%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[138.15708923 643.12377930]
[124.88746643 636.08489990]
[112.62693787 627.40692139]
[101.57681274 617.23229980]
[91.91856384 605.72808838]
[83.81076813 593.08325195]
[77.38658142 579.50543213]
[72.75148010 565.21752930]
[69.98159027 550.45416260]
[69.12239075 535.45782471]
[70.18798065 520.47473145]
[73.16087341 505.75094604]
[77.99224854 491.52822876]
[84.60277557 478.04010010]
[92.88388824 465.50808716]
[102.69962311 454.13793945]
[113.88877869 444.11642456]
[126.26763153 435.60806274]
[139.63290405 428.75256348]
[153.76512146 423.66250610]
[168.43223572 420.42150879]
[167.09400940 405.48132324]
[165.75576782 390.54113770]
[164.41754150 375.60095215]
[163.07929993 360.66076660]
[161.74107361 345.72058105]
[160.29165649 330.79077148]
[158.73112488 315.87216187]
[157.17060852 300.95355225]
[153.63093567 286.37716675]
[148.17556763 272.40438843]
[142.72021484 258.43157959]
[137.26486206 244.45878601]
[126.31583405 239.31628418]
[121.65653229 227.71995544]
[126.29082489 215.68309021]
[121.04410553 201.63063049]
[115.79739380 187.57815552]
[109.65074158 201.26094055]
[96.20223999 207.90457153]
[81.60035706 204.47164917]
[72.52087402 192.53167725]
[73.11480713 177.54344177]
[83.11062622 166.35935974]
[97.93836975 164.09265137]
[110.82017517 171.78105164]
[107.06387329 157.25898743]
[103.30757141 142.73693848]
[99.55126953 128.21487427]
[95.79496765 113.69281006]
[86.13245392 103.58700562]
[89.68296814 90.06348419]
[85.92666626 75.54142761]
[82.17036438 61.01936722]
[71.22376251 49.59648132]
[75.52736664 35.33716202]
[71.77106476 20.81510162]
[68.01476288 6.29304266]
[64.25846100 -8.22901630]
[60.50216293 -22.75107574]
[55.88815308 -37.02380753]
[50.43279648 -50.99660873]
[44.97743988 -64.96940613]
[39.52207947 -78.94219971]
[27.29564095 -88.98335266]
[29.87430191 -103.65304565]
[17.64786339 -113.69419861]
[20.22652435 -128.36389160]
[14.77116680 -142.33668518]
[2.54472685 -152.37783813]
[5.12338829 -167.04753113]
[-0.33196890 -181.02032471]
[-5.78732586 -194.99311829]
[-11.24268341 -208.96591187]
[-16.69804001 -222.93872070]
[-31.42734909 -219.91291809]
[-46.45615768 -219.42007446]
[-61.35205841 -221.47438049]
[-75.68647003 -226.01670837]
[-89.04695129 -232.91638184]
[-101.04910278 -241.97486877]
[-111.34760284 -252.93156433]
[-119.64613342 -265.47119141]
[-125.70594025 -279.23297119]
[-129.35266113 -293.82098389]
[-130.48136902 -308.81542969]
[-129.05960083 -323.78497314]
[-125.12825775 -338.29882812]
[-118.80045319 -351.93945312]
[-110.25824738 -364.31439209]
[-99.74742126 -375.06756592]
[-87.57038879 -383.88955688]
[-74.07751465 -390.52661133]
[-59.65700912 -394.78771973]
[-44.72377777 -396.55026245]
[-29.70748138 -395.76358032]
[-15.04016972 -392.45028687]
[-1.14385045 -386.70568848]
[11.58165169 -378.69509888]
[22.77020073 -368.64898682]
[32.09987640 -356.85638428]
[39.30224609 -343.65661621]
[44.17008591 -329.42947388]
[46.56333542 -314.58425903]
[46.41313934 -299.54809570]
[43.72381592 -284.75366211]
[38.57274246 -270.62658691]
[31.10812569 -257.57333374]
[21.54474068 -245.96946716]
[10.15774250 -236.14886475]
[-2.72524214 -228.39407349]
[2.73011470 -214.42127991]
[8.18547153 -200.44847107]
[13.64082909 -186.47567749]
[19.09618568 -172.50288391]
[30.93242264 -163.46115112]
[28.74396515 -147.79203796]
[34.19932175 -133.81924438]
[46.03555679 -124.77751923]
[43.84709930 -109.10839844]
[55.68333817 -100.06667328]
[53.49488068 -84.39756012]
[58.95023727 -70.42475891]
[64.40559387 -56.45196533]
[69.86094666 -42.47916794]
[74.95336914 -56.58828735]
[87.30123901 -65.10475159]
[102.29911041 -64.85211945]
[114.35314941 -55.92462921]
[118.96749878 -41.65200806]
[114.42111969 -27.35758781]
[102.40969086 -18.37283707]
[87.41319275 -18.04884529]
[75.02422333 -26.50737572]
[78.78052521 -11.98531723]
[82.53681946 2.53674197]
[86.29312134 17.05880165]
[90.04942322 31.58086014]
[100.72735596 41.96503067]
[96.69242859 57.26306915]
[100.44873047 71.78512573]
[104.20503235 86.30718994]
[113.86754608 96.41299438]
[110.31703186 109.93651581]
[114.07333374 124.45857239]
[117.82963562 138.98063660]
[121.58592987 153.50268555]
[125.34223175 168.02474976]
[129.84986877 182.33143616]
[135.09657288 196.38391113]
[140.34329224 210.43638611]
[154.81494141 221.82292175]
[151.23765564 239.00343323]
[156.69300842 252.97622681]
[162.14837646 266.94903564]
[167.60372925 280.92181396]
[169.30465698 266.01858521]
[175.47044373 252.34439087]
[185.51339722 241.20263672]
[198.47630310 233.65522766]
[213.12361145 230.42156982]
[228.05921936 231.80987549]
[241.85958862 237.68778992]
[253.20933533 247.49510193]
[261.02667236 260.29702759]
[264.56652832 274.87335205]
[263.49145508 289.83477783]
[257.90399170 303.75527954]
[248.33662415 315.30801392]
[235.70130920 323.39187622]
[221.20234680 327.23635864]
[206.22167969 326.47500610]
[192.18717957 321.18041992]
[180.43650818 311.85723877]
[172.08920288 299.39303589]
[173.64973450 314.31164551]
[175.21025085 329.23025513]
[179.21546936 337.43975830]
[176.68125916 344.38235474]
[178.01948547 359.32250977]
[179.35772705 374.26269531]
[180.69595337 389.20288086]
[182.03419495 404.14306641]
[183.37242126 419.08325195]
[198.38204956 419.66604614]
[213.19389343 422.16348267]
[227.56477356 426.53457642]
[241.25866699 432.70755005]
[254.05073547 440.58102417]
[265.73089600 450.02569580]
[276.10739136 460.88650513]
[285.00976562 472.98507690]
[292.29190063 486.12277222]
[297.83416748 500.08383179]
[301.54559326 514.63903809]
[303.36520386 529.54931641]
[303.26315308 544.56994629]
[301.24108887 559.45410156]
[297.33221436 573.95751953]
[291.60073853 587.84204102]
[284.14074707 600.87951660]
[275.07476807 612.85601807]
[264.55163574 623.57482910]
[252.74421692 632.85992432]
[239.84632874 640.55877686]
[226.06980896 646.54510498]
[211.64086914 650.72052002]
[196.79644775 653.01641846]
[181.78028870 653.39520264]
[166.83898926 651.85058594]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 184]
[22 183]
[23 182]
[24 181]
[25 180]
[26 179]
[27 177]
[28 176]
[29 175]
[30 156]
[31 155]
[32 154]
[33 153]
[36 151]
[37 150]
[38 149]
[46 148]
[47 147]
[48 146]
[49 145]
[50 144]
[52 142]
[53 141]
[54 140]
[56 138]
[57 137]
[58 136]
[59 135]
[60 134]
[61 125]
[62 124]
[63 123]
[64 122]
[66 120]
[68 118]
[69 117]
[71 115]
[72 114]
[73 113]
[74 112]
[75 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
