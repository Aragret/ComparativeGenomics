%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[64.86135864 650.48883057]
[52.75095367 659.38366699]
[39.49790192 666.46447754]
[25.37202072 671.58697510]
[10.66089249 674.64697266]
[-4.33598375 675.58209229]
[-19.31328964 674.37335205]
[-33.96610641 671.04534912]
[-47.99612427 665.66577148]
[-61.11770248 658.34423828]
[-73.06371307 649.22979736]
[-83.59094238 638.50793457]
[-92.48507690 626.39697266]
[-99.56503296 613.14349365]
[-104.68668365 599.01727295]
[-107.74574280 584.30596924]
[-108.67995453 569.30902100]
[-107.47027588 554.33178711]
[-104.14134979 539.67919922]
[-98.76094818 525.64953613]
[-91.43859863 512.52838135]
[-82.32338715 500.58294678]
[-71.60088348 490.05636597]
[-59.48937607 481.16299438]
[-46.23545074 474.08386230]
[-32.10893631 468.96307373]
[-17.39742851 465.90490723]
[-2.40043616 464.97164917]
[12.57672024 466.18225098]
[15.89897919 451.55477905]
[19.22123909 436.92733765]
[22.54349899 422.29986572]
[25.86575890 407.67239380]
[29.07903290 393.02062988]
[32.18314362 378.34530640]
[35.28725052 363.67001343]
[38.39136124 348.99472046]
[33.45533752 334.94177246]
[43.88097000 323.04150391]
[46.98508072 308.36618042]
[50.08919144 293.69088745]
[53.19329834 279.01559448]
[48.25727463 264.96264648]
[58.68290710 253.06236267]
[61.78701782 238.38706970]
[55.45372009 228.08094788]
[57.91970062 215.82931519]
[68.39767456 208.30769348]
[71.71993256 193.68022156]
[75.04219818 179.05276489]
[78.36445618 164.42530823]
[81.68671417 149.79785156]
[84.89998627 135.14605713]
[88.00409698 120.47075653]
[91.10820770 105.79545593]
[93.33332825 90.96141052]
[94.67156219 76.02122498]
[96.00979614 61.08103943]
[97.34803009 46.14085770]
[98.68626404 31.20067024]
[84.30712891 26.74876976]
[71.17303467 19.40723038]
[59.85687637 9.49908066]
[50.85169601 -2.54075623]
[44.54917145 -16.18455696]
[41.22257996 -30.83491898]
[41.01495743 -45.85092926]
[43.93294907 -60.57619095]
[49.84661865 -74.36753082]
[58.49523926 -86.62306976]
[69.49879456 -96.80851746]
[82.37464905 -104.48045349]
[96.55875397 -109.30560303]
[111.43032837 -111.07537842]
[104.95507050 -125.51080322]
[113.79698944 -137.49703979]
[115.13522339 -152.43722534]
[105.27735901 -164.49790955]
[106.84735107 -179.63032532]
[118.40612793 -188.95396423]
[119.74436188 -203.89414978]
[121.08259583 -218.83433533]
[122.42082977 -233.77452087]
[114.76453400 -244.15449524]
[116.18672180 -256.57064819]
[125.38311768 -264.42895508]
[126.94364166 -279.34756470]
[128.50416565 -294.26617432]
[130.06469727 -309.18478394]
[128.15653992 -313.08514404]
[127.64067841 -316.99645996]
[128.34957886 -320.47967529]
[129.99035645 -323.19528198]
[132.18803406 -324.93551636]
[134.63375854 -339.73477173]
[129.25010681 -354.61181641]
[138.95903015 -365.90722656]
[141.40475464 -380.70651245]
[143.85047913 -395.50576782]
[146.29620361 -410.30505371]
[132.61308289 -416.68270874]
[121.15879059 -426.51641846]
[112.78331757 -439.07644653]
[108.10818481 -453.43072510]
[107.48030090 -468.51409912]
[110.94627380 -483.20730591]
[118.24890900 -496.41995239]
[128.84628296 -507.17160034]
[141.95202637 -514.66442871]
[156.59358215 -518.34240723]
[171.68444824 -517.93255615]
[186.10481262 -513.46533203]
[198.78456116 -505.27227783]
[208.78277588 -493.96130371]
[215.35754395 -480.37176514]
[218.02093506 -465.51214600]
[216.57534790 -450.48507690]
[211.12802124 -436.40567017]
[202.08320618 -424.31872559]
[190.11209106 -415.12121582]
[176.10298157 -409.49557495]
[161.09547424 -407.85931396]
[158.64974976 -393.06005859]
[156.20402527 -378.26077271]
[153.75830078 -363.46148682]
[159.31689453 -349.64300537]
[149.43302917 -337.28903198]
[146.98730469 -322.48977661]
[144.98329163 -307.62423706]
[143.42277527 -292.70562744]
[141.86224365 -277.78704834]
[140.30172729 -262.86843872]
[148.30081177 -247.24851990]
[137.36102295 -232.43627930]
[136.02278137 -217.49609375]
[134.68455505 -202.55590820]
[133.34631348 -187.61572266]
[143.06410217 -176.38629150]
[141.91976929 -161.21575928]
[130.07540894 -151.09898376]
[128.73716736 -136.15879822]
[135.30815125 -122.79199219]
[126.37051392 -109.73714447]
[140.69082642 -105.35256958]
[153.79161072 -98.08343506]
[165.09904480 -88.24533844]
[174.11727905 -76.26647949]
[180.45016479 -62.66900253]
[183.81871033 -48.04623032]
[184.07327271 -33.03679276]
[181.20031738 -18.29672050]
[175.32302856 -4.47077608]
[166.69606018 7.83574724]
[155.69451904 18.08352661]
[142.79762268 25.82284546]
[128.56787109 30.71332741]
[113.62644958 32.53890610]
[112.28821564 47.47909164]
[110.94998169 62.41927338]
[109.61174774 77.35945892]
[108.27351379 92.29964447]
[119.11649323 81.93481445]
[133.96504211 79.80860901]
[147.28100586 86.71404266]
[154.09785461 100.07556915]
[151.87309265 114.90966797]
[141.43649292 125.68358612]
[126.68063354 128.37890625]
[113.10910797 121.99036407]
[105.78350830 108.89956665]
[102.67939758 123.57486725]
[99.57528687 138.25016785]
[100.86106873 147.29365540]
[96.31417084 153.12010193]
[92.99191284 167.74757385]
[89.66965485 182.37503052]
[86.34739685 197.00248718]
[83.02513885 211.62994385]
[88.87826538 229.08911133]
[76.46231842 241.49118042]
[73.35820770 256.16647339]
[78.07220459 271.26907349]
[67.86859894 282.11968994]
[64.76449585 296.79498291]
[61.66038132 311.47030640]
[58.55627060 326.14559937]
[63.27027130 341.24819946]
[53.06666565 352.09881592]
[49.96255493 366.77410889]
[46.85844421 381.44943237]
[43.75433350 396.12472534]
[45.04011154 405.16821289]
[40.49321747 410.99465942]
[37.17095947 425.62213135]
[33.84869766 440.24957275]
[30.52643967 454.87704468]
[27.20417976 469.50451660]
[41.23486328 474.88229370]
[54.35734940 482.20220947]
[66.30448914 491.31521606]
[76.83304596 502.03576660]
[85.72867584 514.14562988]
[92.81027222 527.39825439]
[97.93367004 541.52380371]
[100.99455261 556.23474121]
[101.93061829 571.23156738]
[100.72279358 586.20892334]
[97.39568329 600.86193848]
[92.01701355 614.89227295]
[84.69629669 628.01434326]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 197]
[30 196]
[31 195]
[32 194]
[33 193]
[34 191]
[35 190]
[36 189]
[37 188]
[39 186]
[40 185]
[41 184]
[42 183]
[44 181]
[45 180]
[48 178]
[49 177]
[50 176]
[51 175]
[52 174]
[53 172]
[54 171]
[55 170]
[56 161]
[57 160]
[58 159]
[59 158]
[60 157]
[74 143]
[76 141]
[77 140]
[80 137]
[81 136]
[82 135]
[83 134]
[86 132]
[87 131]
[88 130]
[89 129]
[94 128]
[95 127]
[97 125]
[98 124]
[99 123]
[100 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
