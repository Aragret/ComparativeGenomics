%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[85.21211243 861.42651367]
[70.23914337 860.47863770]
[55.32945633 858.80847168]
[40.51787186 856.41992188]
[25.83898163 853.31854248]
[11.32707119 849.51159668]
[-2.98396778 845.00799561]
[-17.06070900 839.81823730]
[-30.87027740 833.95446777]
[-44.38042068 827.43035889]
[-57.55958176 820.26110840]
[-70.37698364 812.46350098]
[-82.80268860 804.05578613]
[-94.80767059 795.05749512]
[-106.36389923 785.48974609]
[-117.44438934 775.37487793]
[-128.02323914 764.73645020]
[-138.07577515 753.59936523]
[-147.57849121 741.98956299]
[-156.50920105 729.93426514]
[-164.84704590 717.46154785]
[-172.57255554 704.60058594]
[-179.66769409 691.38134766]
[-186.11587524 677.83483887]
[-191.90203857 663.99255371]
[-197.01269531 649.88690186]
[-201.43586731 635.55078125]
[-205.16127014 621.01770020]
[-208.18016052 606.32165527]
[-210.48551941 591.49688721]
[-212.07194519 576.57806396]
[-212.93574524 561.60003662]
[-213.07489014 546.59771729]
[-212.48905945 531.60620117]
[-211.17962646 516.66052246]
[-209.14964294 501.79556274]
[-206.40385437 487.04602051]
[-202.94865417 472.44635010]
[-198.79214478 458.03067017]
[-193.94401550 443.83267212]
[-188.41558838 429.88543701]
[-182.21978760 416.22161865]
[-175.37107849 402.87307739]
[-167.88543701 389.87103271]
[-159.78038025 377.24578857]
[-151.07479858 365.02691650]
[-141.78906250 353.24288940]
[-131.94483948 341.92123413]
[-121.56513214 331.08843994]
[-110.67416382 320.76974487]
[-99.29738617 310.98928833]
[-87.46137238 301.76992798]
[-75.19375610 293.13314819]
[-62.52318954 285.09915161]
[-49.47927475 277.68670654]
[-36.09246826 270.91308594]
[-22.39403915 264.79415894]
[-8.41597939 259.34420776]
[5.80906296 254.57592773]
[20.24786568 250.50048828]
[34.86670685 247.12739563]
[49.63143921 244.46452332]
[64.50758362 242.51809692]
[79.46039581 241.29266357]
[94.45494843 240.79107666]
[94.67827606 225.79273987]
[94.90160370 210.79440308]
[95.12493134 195.79606628]
[95.34825897 180.79772949]
[87.80130768 167.95666504]
[95.74321747 154.27322388]
[95.29660797 139.27987671]
[94.18096161 124.32141876]
[93.06531525 109.36296844]
[85.89636993 122.53894043]
[73.77130127 131.36972046]
[59.03125763 134.15020752]
[44.52231598 130.34355164]
[33.04592514 120.68475342]
[26.81799698 107.03877258]
[27.04104424 92.04042816]
[33.67200089 78.58567810]
[45.43053436 69.27241516]
[60.04625702 65.89888000]
[74.69709778 69.11646271]
[86.55421448 78.30389404]
[93.32849121 91.68845367]
[94.88901520 76.76985168]
[96.44953156 61.85124588]
[97.89895630 46.92143631]
[99.23719025 31.98125267]
[100.57542419 17.04106712]
[101.80239868 2.09133434]
[102.91804504 -12.86711884]
[103.36465454 -27.86046982]
[103.14132690 -42.85880661]
[102.91799927 -57.85714340]
[88.67493439 -63.10114288]
[77.29060364 -73.13914490]
[70.30465698 -86.61360168]
[68.66187286 -101.70220184]
[72.58443451 -116.36432648]
[81.54183960 -128.61705017]
[94.32267761 -136.80329895]
[109.19844818 -139.81593323]
[124.15731812 -137.24754333]
[137.17622375 -129.44544983]
[146.49447632 -117.46485901]
[150.85183716 -102.92601776]
[149.65902710 -87.79520416]
[143.07736206 -74.11872101]
[131.99694824 -63.74621582]
[117.91633606 -58.08047104]
[118.13966370 -43.08213425]
[118.36299133 -28.08379745]
[129.56042480 -38.06465530]
[144.54301453 -37.34210968]
[154.72804260 -26.33007050]
[154.28108215 -11.33673191]
[143.45816040 -0.95095879]
[128.45913696 -1.12219429]
[117.87649536 -11.75147057]
[116.76084900 3.20698309]
[119.39815521 10.11107063]
[115.51560974 18.37930298]
[114.17737579 33.31948853]
[112.83914185 48.25967026]
[115.37335968 55.20225906]
[111.36814117 63.41176987]
[109.80761719 78.33037567]
[108.24709320 93.24897766]
[108.02376556 108.24731445]
[109.13941193 123.20577240]
[110.25506592 138.16423035]
[120.83856964 127.53457642]
[135.83760071 127.36405945]
[146.66003418 137.75035095]
[147.10627747 152.74371338]
[136.92071533 163.75526428]
[121.93808746 164.47709656]
[110.74155426 154.49655151]
[118.27252960 168.41038513]
[110.34659576 181.02105713]
[110.12326813 196.01939392]
[109.89994049 211.01773071]
[109.67661285 226.01606750]
[109.45328522 241.01440430]
[124.42626190 241.96220398]
[139.33595276 243.63229370]
[154.14755249 246.02078247]
[168.82646179 249.12207031]
[183.33839417 252.92892456]
[197.64944458 257.43246460]
[211.72621155 262.62216187]
[225.53581238 268.48587036]
[239.04598999 275.00994873]
[252.22517395 282.17913818]
[265.04260254 289.97665405]
[277.46835327 298.38433838]
[289.47338867 307.38253784]
[301.02966309 316.95022583]
[312.11019897 327.06509399]
[322.68911743 337.70346069]
[332.74169922 348.84051514]
[342.24444580 360.45022583]
[351.17523193 372.50549316]
[359.51312256 384.97817993]
[367.23870850 397.83911133]
[374.33389282 411.05828857]
[380.78213501 424.60479736]
[386.56838989 438.44705200]
[391.67910767 452.55267334]
[396.10235596 466.88876343]
[399.82781982 481.42178345]
[402.84677124 496.11785889]
[405.15219116 510.94259644]
[406.73870850 525.86145020]
[407.60256958 540.83947754]
[407.74179077 555.84179688]
[407.15603638 570.83325195]
[405.84664917 585.77899170]
[403.81674194 600.64398193]
[401.07101440 615.39349365]
[397.61590576 629.99316406]
[393.45947266 644.40887451]
[388.61138916 658.60693359]
[383.08303833 672.55413818]
[376.88729858 686.21801758]
[370.03863525 699.56658936]
[362.55307007 712.56866455]
[354.44805908 725.19390869]
[345.74255371 737.41284180]
[336.45687866 749.19696045]
[326.61270142 760.51861572]
[316.23303223 771.35150146]
[305.34213257 781.67022705]
[293.96539307 791.45074463]
[282.12942505 800.67016602]
[269.86184692 809.30700684]
[257.19131470 817.34106445]
[244.14744568 824.75354004]
[230.76066589 831.52722168]
[217.06227112 837.64624023]
[203.08422852 843.09625244]
[188.85922241 847.86462402]
[174.42042542 851.94012451]
[159.80160522 855.31329346]
[145.03688049 857.97619629]
[130.16075134 859.92272949]
[115.20794678 861.14819336]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[65 147]
[66 146]
[67 145]
[68 144]
[69 143]
[71 141]
[72 134]
[73 133]
[74 132]
[87 131]
[88 130]
[89 129]
[90 127]
[91 126]
[92 125]
[93 123]
[94 122]
[95 115]
[96 114]
[97 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
