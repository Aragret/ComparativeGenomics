%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[60.48904037 639.24969482]
[45.45463562 639.70404053]
[30.58074570 637.46636963]
[16.34550476 632.60864258]
[3.20651841 625.28698730]
[-8.41384983 615.73675537]
[-18.14205360 604.26495361]
[-25.66537094 591.24035645]
[-30.74195862 577.08172607]
[-33.20862579 562.24407959]
[-32.98608017 547.20446777]
[-30.08147240 532.44628906]
[-24.58817482 518.44403076]
[-16.68277740 505.64776611]
[-6.61940145 494.46884155]
[5.27845430 485.26663208]
[18.62832451 478.33691406]
[33.00106430 473.90249634]
[47.93465042 472.10589600]
[48.82746506 457.13250732]
[41.86142349 443.96725464]
[50.40640640 430.65206909]
[51.29922485 415.67868042]
[52.19203949 400.70526123]
[53.08485413 385.73187256]
[41.40662766 381.80059814]
[31.00333023 375.17642212]
[22.48550224 366.24176025]
[16.35453224 355.51492310]
[12.97315598 343.61978149]
[12.54399300 331.24978638]
[15.09741306 319.12728882]
[20.48945427 307.96148682]
[28.40992737 298.40692139]
[38.40025711 291.02511597]
[49.88003540 286.25149536]
[62.18072510 284.36981201]
[63.96319199 269.47610474]
[65.74565887 254.58239746]
[67.52812195 239.68867493]
[69.31058502 224.79495239]
[71.09305573 209.90124512]
[58.66255569 218.29663086]
[43.91081619 215.57887268]
[35.28830338 203.30482483]
[37.73438644 188.50561523]
[49.84783554 179.65890503]
[64.68951416 181.83248901]
[73.75719452 193.78031921]
[67.42653656 177.41299438]
[79.84795380 163.81924438]
[82.73323059 149.09934998]
[85.61849976 134.37947083]
[88.50376892 119.65957642]
[80.48533630 111.74052429]
[77.24552155 100.94652557]
[79.57769012 89.92075348]
[86.91074371 81.36312103]
[97.44901276 77.36917114]
[100.77127075 62.74171066]
[86.88135529 68.40476990]
[73.71962738 61.20970535]
[70.98842621 46.46044922]
[80.70108795 35.02960587]
[95.69779968 35.34356689]
[104.92318726 47.16927719]
[109.32418823 32.82942963]
[113.72518158 18.48958206]
[104.64500427 8.11937809]
[101.89643860 -5.27703476]
[106.09265137 -18.17902756]
[116.03588104 -27.24966049]
[129.05683899 -30.19866562]
[133.67085266 -44.47139740]
[138.28486633 -58.74413300]
[142.89886475 -73.01686859]
[147.51287842 -87.28959656]
[151.48497009 -101.75411987]
[154.80723572 -116.38158417]
[158.12950134 -131.00904846]
[161.45175171 -145.63650513]
[164.77401733 -160.26396179]
[168.09626770 -174.89141846]
[171.41853333 -189.51889038]
[174.41329956 -204.21688843]
[177.07910156 -218.97810364]
[179.74490356 -233.73931885]
[182.41069031 -248.50053406]
[185.07649231 -263.26174927]
[170.79266357 -267.91860962]
[157.27601624 -274.47711182]
[144.77836609 -282.81512451]
[133.53251648 -292.77728271]
[123.74797821 -304.17800903]
[115.60702515 -316.80490112]
[109.26133728 -330.42276001]
[104.82910919 -344.77786255]
[102.39292145 -359.60281372]
[101.99816132 -374.62139893]
[103.65217590 -389.55383301]
[107.32415771 -404.12197876]
[112.94569397 -418.05438232]
[120.41206360 -431.09152222]
[129.58416748 -442.99050903]
[140.29113770 -453.52969360]
[152.33352661 -462.51275635]
[165.48695374 -469.77227783]
[179.50640869 -475.17306519]
[194.13072205 -478.61450195]
[209.08743286 -480.03247070]
[224.09790039 -479.40057373]
[238.88252258 -476.73056030]
[253.16583252 -472.07217407]
[266.68176270 -465.51217651]
[279.17852783 -457.17282104]
[290.42330933 -447.20944214]
[300.20660400 -435.80767822]
[308.34619141 -423.17987061]
[314.69039917 -409.56134033]
[319.12106323 -395.20574951]
[321.55566406 -380.38055420]
[321.94879150 -365.36193848]
[320.29315186 -350.42965698]
[316.61959839 -335.86193848]
[310.99655151 -321.93011475]
[303.52877808 -308.89379883]
[294.35537720 -296.99578857]
[283.64727783 -286.45776367]
[271.60391235 -277.47601318]
[258.44970703 -270.21792603]
[244.42965698 -264.81863403]
[229.80497742 -261.37878418]
[214.84811401 -259.96243286]
[199.83770752 -260.59594727]
[197.17190552 -245.83474731]
[194.50611877 -231.07353210]
[191.84031677 -216.31231689]
[189.17453003 -201.55108643]
[190.87377930 -198.46160889]
[191.16104126 -194.39559937]
[189.59362793 -190.02563477]
[186.04598999 -186.19662476]
[182.72373962 -171.56916809]
[179.40147400 -156.94169617]
[176.07920837 -142.31423950]
[172.75695801 -127.68678284]
[169.43469238 -113.05932617]
[166.11244202 -98.43186188]
[179.34889221 -105.48849487]
[193.73785400 -101.25079346]
[201.03663635 -88.14630890]
[197.06419373 -73.68187714]
[184.09611511 -66.14338684]
[169.56109619 -69.84922791]
[161.78561401 -82.67559052]
[157.17160034 -68.40285492]
[152.55758667 -54.13012314]
[147.94358826 -39.85738754]
[143.32957458 -25.58465576]
[153.41824341 -12.63489532]
[153.80407715 3.94258642]
[144.13700867 17.61916733]
[128.06503296 22.89058113]
[123.66403198 37.23042679]
[119.26303864 51.57027435]
[115.39872742 66.06396484]
[112.07646942 80.69142914]
[122.32772064 95.51280975]
[118.59841156 113.14385986]
[103.22366333 122.54484558]
[100.33839417 137.26473999]
[97.45311737 151.98463440]
[94.56784821 166.70451355]
[101.10272217 177.82469177]
[98.39653015 190.02552795]
[88.43250275 196.88442993]
[85.98677063 211.68370056]
[84.20430756 226.57742310]
[82.42183685 241.47114563]
[80.63937378 256.36486816]
[78.85691071 271.25857544]
[77.07444000 286.15228271]
[93.19935608 293.80834961]
[105.72336578 306.49411011]
[113.15203857 322.67269897]
[114.60685730 340.39184570]
[109.92906189 357.51953125]
[99.69685364 372.00042725]
[85.15390015 382.10263062]
[68.05825806 386.62469482]
[67.16544342 401.59808350]
[66.27262878 416.57150269]
[65.37981415 431.54489136]
[72.28199768 445.78112793]
[63.80087280 458.02529907]
[62.90805817 472.99871826]
[77.52233887 476.55715942]
[91.26629639 482.66809082]
[103.69811249 491.13507080]
[114.41815186 501.68591309]
[123.08181763 513.98150635]
[129.41061401 527.62646484]
[133.20108032 542.18231201]
[134.33137512 557.18103027]
[132.76518250 572.14056396]
[128.55281067 586.57995605]
[121.82971191 600.03503418]
[112.81197357 612.07330322]
[101.78949738 622.30780029]
[89.11660004 630.40948486]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 196]
[20 195]
[22 193]
[23 192]
[24 191]
[25 190]
[37 182]
[38 181]
[39 180]
[40 179]
[41 178]
[42 177]
[49 176]
[51 173]
[52 172]
[53 171]
[54 170]
[59 167]
[60 166]
[66 165]
[67 164]
[68 163]
[73 159]
[74 158]
[75 157]
[76 156]
[77 155]
[78 148]
[79 147]
[80 146]
[81 145]
[82 144]
[83 143]
[84 142]
[85 138]
[86 137]
[87 136]
[88 135]
[89 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
