%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[77.13392639 510.54458618]
[70.70907593 496.76815796]
[70.05030060 481.58151245]
[75.25804138 467.30047607]
[85.53816986 456.10281372]
[99.32302856 449.69610596]
[98.65324402 434.71105957]
[97.98345947 419.72601318]
[97.31367493 404.74096680]
[96.64389038 389.75595093]
[85.51296234 379.92547607]
[84.62023163 364.73806763]
[95.00679779 353.12957764]
[94.33701324 338.14453125]
[93.66722870 323.15948486]
[92.99744415 308.17446899]
[90.14003754 304.34768677]
[89.65625763 298.68524170]
[92.53754425 292.73464966]
[92.31421661 277.73629761]
[92.09088898 262.73797607]
[91.86756134 247.73963928]
[91.64423370 232.74130249]
[91.42090607 217.74296570]
[91.19757843 202.74462891]
[90.97425079 187.74629211]
[88.71245575 185.04135132]
[87.64845276 181.10652161]
[88.34603119 176.51667786]
[91.09090424 172.07676697]
[91.53750610 157.08341980]
[91.87248230 142.08715820]
[92.09580994 127.08882141]
[92.31913757 112.09048462]
[85.67764282 99.78673553]
[92.68252563 87.68618774]
[92.90585327 72.68785095]
[93.12918091 57.68951416]
[93.35250854 42.69117737]
[93.46417236 27.69159317]
[93.46417236 12.69159317]
[91.23905945 -2.14245081]
[86.83805847 -16.48229790]
[75.39231110 -27.40499878]
[79.05490875 -41.84226608]
[74.65390778 -56.18210983]
[70.25291443 -70.52195740]
[58.80716324 -81.44465637]
[62.46976471 -95.88192749]
[58.06876755 -110.22177124]
[53.66777039 -124.56162262]
[49.26676941 -138.90147400]
[44.86577225 -153.24131775]
[40.46477509 -167.58116150]
[25.82929802 -164.26226807]
[10.98672199 -162.04637146]
[-3.97994399 -160.94587708]
[-18.98700142 -160.96691895]
[-33.95052338 -162.10939026]
[-48.78682709 -164.36688232]
[-63.41293716 -167.72680664]
[-77.74706268 -172.17033386]
[-91.70904541 -177.67265320]
[-105.22078705 -184.20295715]
[-118.20674133 -191.72474670]
[-130.59426880 -200.19595337]
[-142.31410217 -209.56919861]
[-153.30070496 -219.79205322]
[-163.49261475 -230.80735779]
[-172.83285522 -242.55351257]
[-181.26918030 -254.96482849]
[-188.75440979 -267.97189331]
[-195.24668884 -281.50195312]
[-200.70970154 -295.47933960]
[-205.11289978 -309.82592773]
[-208.43165588 -324.46142578]
[-210.64743042 -339.30401611]
[-211.74778748 -354.27069092]
[-211.72662354 -369.27774048]
[-210.58403015 -384.24127197]
[-208.32638550 -399.07754517]
[-204.96633911 -413.70364380]
[-200.52267456 -428.03771973]
[-195.02024841 -441.99963379]
[-188.48982239 -455.51132202]
[-180.96791077 -468.49722290]
[-172.49659729 -480.88467407]
[-163.12326050 -492.60443115]
[-152.90029907 -503.59094238]
[-141.88490295 -513.78277588]
[-130.13865662 -523.12286377]
[-117.72727966 -531.55908203]
[-104.72015381 -539.04418945]
[-91.19003296 -545.53637695]
[-77.21258545 -550.99926758]
[-62.86597824 -555.40234375]
[-48.23044205 -558.72094727]
[-33.38782883 -560.93658447]
[-18.42114449 -562.03686523]
[-3.41408682 -562.01556396]
[11.54941463 -560.87280273]
[26.38567734 -558.61505127]
[41.01173019 -555.25488281]
[55.34577942 -550.81109619]
[69.30766296 -545.30853271]
[82.81929016 -538.77795410]
[95.80510712 -531.25598145]
[108.19248962 -522.78454590]
[119.91216278 -513.41107178]
[130.89857483 -503.18801880]
[141.09030151 -492.17254639]
[150.43032837 -480.42620850]
[158.86643982 -468.01477051]
[166.35144043 -455.00756836]
[172.84347534 -441.47738647]
[178.30624390 -427.49990845]
[182.70918274 -413.15325928]
[186.02769470 -398.51770020]
[188.24319458 -383.67504883]
[189.34329224 -368.70834351]
[189.32185364 -353.70129395]
[188.17900085 -338.73782349]
[185.92109680 -323.90158081]
[182.56079102 -309.27554321]
[178.11688232 -294.94152832]
[172.61419678 -280.97970581]
[166.08354187 -267.46813965]
[158.56140137 -254.48237610]
[150.08987427 -242.09507751]
[140.71632385 -230.37548828]
[130.49316406 -219.38916016]
[119.47759247 -209.19752502]
[107.73118591 -199.85760498]
[95.31965637 -191.42160034]
[82.31240082 -183.93672180]
[68.78216553 -177.44480896]
[54.80462265 -171.98216248]
[59.20561981 -157.64231873]
[63.60661697 -143.30245972]
[68.00761414 -128.96261597]
[72.40861511 -114.62277222]
[76.80960846 -100.28292084]
[87.94057465 -90.38590240]
[84.59275818 -74.92295837]
[88.99375916 -60.58311081]
[93.39476013 -46.24326324]
[104.52571869 -36.34624481]
[101.17790222 -20.88329697]
[105.57890320 -6.54344893]
[108.19174194 -21.31413269]
[114.80846405 -34.77589035]
[124.90726471 -45.86707306]
[137.69169617 -53.71298218]
[152.15353394 -57.69485474]
[167.15225220 -57.49866867]
[181.50498962 -53.13989258]
[194.07981873 -44.96228027]
[203.88507080 -33.61074829]
[210.14743042 -19.98052788]
[212.37301636 -5.14655638]
[210.38633728 9.72129822]
[204.34405518 23.45049477]
[194.72270203 34.95829391]
[182.28103638 43.33713913]
[168.00027466 47.92623901]
[153.00665283 48.36368179]
[138.48263550 44.61496735]
[125.57364655 36.97573471]
[115.29772949 26.04844666]
[108.46417236 12.69159317]
[108.46417236 27.69159317]
[111.60767365 34.38040543]
[108.35084534 42.91450500]
[108.12751770 57.91284180]
[107.90419006 72.91117859]
[107.68086243 87.90951538]
[114.32235718 100.21326447]
[107.31747437 112.31381226]
[107.09414673 127.31214905]
[106.87081909 142.31048584]
[109.87211609 150.93777466]
[106.53086090 157.53002930]
[106.08425140 172.52337646]
[105.97258759 187.52296448]
[106.19591522 202.52130127]
[106.41924286 217.51963806]
[106.64257050 232.51797485]
[106.86589813 247.51631165]
[107.08922577 262.51464844]
[107.31255341 277.51296997]
[107.53588104 292.51132202]
[107.98248291 307.50466919]
[108.65226746 322.48971558]
[109.32205200 337.47473145]
[109.99183655 352.45977783]
[121.37265015 363.09533691]
[121.83843994 378.30184937]
[111.62892914 389.08615112]
[112.29871368 404.07119751]
[112.96849823 419.05624390]
[113.63828278 434.04125977]
[114.30806732 449.02630615]
[128.60954285 454.17764282]
[139.84767151 464.41351318]
[146.30874634 478.17297363]
[147.00747681 493.35784912]
[141.83732605 507.65252686]
[131.58670044 518.87719727]
[117.81873322 525.32012939]
[102.63296509 525.99890137]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 202]
[7 201]
[8 200]
[9 199]
[10 198]
[13 195]
[14 194]
[15 193]
[16 192]
[19 191]
[20 190]
[21 189]
[22 188]
[23 187]
[24 186]
[25 185]
[26 184]
[30 183]
[31 182]
[32 180]
[33 179]
[34 178]
[36 176]
[37 175]
[38 174]
[39 173]
[40 171]
[41 170]
[42 149]
[43 148]
[45 146]
[46 145]
[47 144]
[49 142]
[50 141]
[51 140]
[52 139]
[53 138]
[54 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
