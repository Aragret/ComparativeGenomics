%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUAAAAUAAAAUUCAAACAACCAAUCCAUCAACUCCAGAUCCCGACAAUCUUCAGGAUCCUUUCACUGUCGCUCCCGACACUCAAAAUCCAUCUCCCCCxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[118.79404449 536.64355469]
[117.23352051 521.72497559]
[115.67299652 506.80636597]
[114.11247253 491.88775635]
[112.55195618 476.96914673]
[98.08372498 469.21365356]
[91.01834106 454.21224976]
[94.31948853 437.79263306]
[106.88040161 426.46481323]
[105.09793854 411.57110596]
[103.31546783 396.67736816]
[101.53300476 381.78366089]
[99.75054169 366.88995361]
[97.63275909 365.05331421]
[96.11487579 362.26718140]
[95.56221008 358.75576782]
[96.25220490 354.87139893]
[98.33261871 351.06008911]
[97.43980408 336.08670044]
[96.54698181 321.11328125]
[82.70822906 315.54962158]
[72.61594391 304.48367310]
[68.31145477 290.07421875]
[70.69985962 275.16397095]
[79.36031342 262.71875000]
[92.61902618 255.23757935]
[91.72621155 240.26417542]
[90.83339691 225.29077148]
[89.94058228 210.31736755]
[79.19998932 220.78826904]
[64.20008087 220.73544312]
[53.53348923 210.18917847]
[53.31052017 195.19082642]
[63.65890121 184.33215332]
[78.65061188 183.83348083]
[89.69731140 193.97961426]
[90.14391327 178.98625183]
[90.59052277 163.99290466]
[91.03712463 148.99955750]
[83.68219757 136.04756165]
[91.82695007 122.48387146]
[92.27355194 107.49052429]
[89.49794006 92.74956512]
[83.62898254 78.94538879]
[77.76001740 65.14120483]
[71.89105988 51.33703232]
[66.02210236 37.53285599]
[51.64008713 31.54992676]
[45.88476944 17.46692276]
[51.67720795 3.79274106]
[45.80824661 -10.01143551]
[39.83668518 -23.77153969]
[33.76285172 -37.48680496]
[27.58708382 -51.15647507]
[21.30972290 -64.77979279]
[8.50729942 -74.07540894]
[10.20823383 -88.87257385]
[5.94501019 -91.88455200]
[3.50720549 -95.83555603]
[2.94682479 -99.87300873]
[3.96995974 -103.24725342]
[-1.69282675 -117.13728333]
[-7.35561323 -131.02731323]
[-13.01840019 -144.91732788]
[-28.15718460 -147.10009766]
[-40.09200668 -156.50523376]
[-45.67960358 -170.52825928]
[-43.51237488 -185.36602783]
[-34.27144623 -197.04809570]
[-39.93423080 -210.93812561]
[-45.59701920 -224.82814026]
[-51.25980377 -238.71817017]
[-56.92259216 -252.60820007]
[-71.55760956 -249.17852783]
[-86.54898071 -248.08062744]
[-101.52751923 -249.34153748]
[-116.12436676 -252.93020630]
[-129.98007202 -258.75823975]
[-142.75340271 -266.68215942]
[-154.12982178 -276.50680542]
[-163.82917786 -287.99020386]
[-171.61260986 -300.84963989]
[-177.28845215 -314.76837158]
[-180.71691895 -329.40368652]
[-181.81356812 -344.39514160]
[-180.55143738 -359.37356567]
[-176.96156311 -373.97012329]
[-171.13237000 -387.82534790]
[-163.20741272 -400.59802246]
[-153.38183594 -411.97363281]
[-141.89761353 -421.67205811]
[-129.03755188 -429.45440674]
[-115.11833954 -435.12911987]
[-100.48275757 -438.55636597]
[-85.49120331 -439.65179443]
[-70.51287842 -438.38839722]
[-55.91662216 -434.79733276]
[-42.06188583 -428.96701050]
[-29.28985405 -421.04098511]
[-17.91505051 -411.21447754]
[-8.21758938 -399.72946167]
[-0.43628016 -386.86874390]
[5.23725605 -372.94906616]
[8.66330338 -358.31320190]
[9.75749207 -343.32156372]
[8.49287701 -328.34332275]
[4.90059996 -313.74737549]
[-0.93087566 -299.89312744]
[-8.85794449 -287.12173462]
[-18.68539429 -275.74774170]
[-30.17121696 -266.05123901]
[-43.03256607 -258.27099609]
[-37.36977768 -244.38096619]
[-31.70699120 -230.49093628]
[-26.04420471 -216.60090637]
[-20.38141823 -202.71087646]
[-5.60681915 -200.81962585]
[6.31672764 -191.72650146]
[12.12625885 -177.79396057]
[10.16912174 -162.72523499]
[0.87162703 -150.58012390]
[6.53441381 -136.69009399]
[12.19719982 -122.80006409]
[17.85998726 -108.91004181]
[23.83154869 -95.14993286]
[36.18497467 -86.82875061]
[34.93303680 -71.05715179]
[41.21039963 -57.43383789]
[46.86459732 -52.67444229]
[47.47811890 -43.56063843]
[53.55195236 -29.84537315]
[59.13466263 -25.00232315]
[59.61242676 -15.88039684]
[65.48138428 -2.07621980]
[79.34770203 3.23987889]
[85.49630737 17.15567207]
[79.82627869 31.66389465]
[85.69523621 45.46807098]
[91.56420135 59.27224731]
[97.43315887 73.07642365]
[103.30211639 86.88059998]
[104.15464783 71.90484619]
[107.96405029 57.39662552]
[114.57859802 43.93379593]
[123.73482513 32.05257416]
[135.06805420 22.22618484]
[148.12689209 14.84601116]
[162.39118958 10.20600224]
[177.29281616 8.49096584]
[192.23825073 9.76921368]
[206.63223267 13.98983288]
[219.90142822 20.98471642]
[231.51733398 30.47526360]
[241.01731873 42.08346558]
[248.02297974 55.34697723]
[252.25529480 69.73751068]
[253.54568481 84.68190765]
[251.84275818 99.58493042]
[247.21434021 113.85299683]
[239.84477234 126.91781616]
[230.02758789 138.25901794]
[218.15380859 147.42491150]
[204.69636536 154.05038452]
[190.19123840 157.87156677]
[175.21618652 158.73626709]
[160.36764526 156.61003113]
[146.23703003 151.57756042]
[133.38716125 143.83927917]
[122.32984161 133.70341492]
[113.50548553 121.57367706]
[107.26690674 107.93713379]
[106.82029724 122.93048096]
[114.14328766 136.95491028]
[106.03047943 149.44616699]
[105.58386993 164.43951416]
[105.13726807 179.43286133]
[104.69065857 194.42620850]
[104.91398621 209.42454529]
[105.80680084 224.39796448]
[106.69961548 239.37136841]
[107.59243774 254.34477234]
[121.64620209 260.19738770]
[131.72416687 271.52529907]
[135.86744690 286.04608154]
[133.30575562 300.86492920]
[124.59995270 313.05175781]
[111.52039337 320.22048950]
[112.41320801 335.19387817]
[113.30602264 350.16729736]
[114.64425659 365.10748291]
[116.42671967 380.00119019]
[118.20919037 394.89489746]
[119.99165344 409.78863525]
[121.77411652 424.68234253]
[134.27572632 430.48757935]
[142.21337891 441.62365723]
[143.60087585 455.11975098]
[138.18217468 467.43972778]
[127.47055817 475.40863037]
[129.03108215 490.32723999]
[130.59159851 505.24584961]
[132.15213013 520.16442871]
[133.71264648 535.08306885]
[147.21386719 542.73138428]
[153.61035156 556.86871338]
[150.44252014 572.05902100]
[138.92846680 582.46124268]
[123.49559784 584.07556152]
[110.07814789 576.28118896]
[103.83540344 562.07531738]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 203]
[2 202]
[3 201]
[4 200]
[5 199]
[9 194]
[10 193]
[11 192]
[12 191]
[13 190]
[18 189]
[19 188]
[20 187]
[26 181]
[27 180]
[28 179]
[29 178]
[36 177]
[37 176]
[38 175]
[39 174]
[41 172]
[42 171]
[43 141]
[44 140]
[45 139]
[46 138]
[47 137]
[50 134]
[51 133]
[52 131]
[53 130]
[54 128]
[55 127]
[57 125]
[61 124]
[62 123]
[63 122]
[64 121]
[69 116]
[70 115]
[71 114]
[72 113]
[73 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
