%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[71.27476501 545.65936279]
[78.55286407 558.86132812]
[82.45935059 573.42169189]
[82.76710510 588.49377441]
[79.45823669 603.20141602]
[72.72512054 616.68951416]
[62.95921326 628.17388916]
[50.72828293 636.98681641]
[36.74342728 642.61596680]
[21.81770515 644.73400879]
[6.81887913 643.21789551]
[-7.38103962 638.15570068]
[-19.95648575 629.84179688]
[-30.17634010 618.75946045]
[-37.44643402 605.55303955]
[-41.34408951 590.99035645]
[-41.64270782 575.91802979]
[-38.32492447 561.21240234]
[-31.58363342 547.72839355]
[-21.81076241 536.25000000]
[-9.57449341 527.44445801]
[4.41377258 521.82379150]
[19.34077644 519.71478271]
[34.33868027 521.23999023]
[39.37559509 507.11096191]
[44.41251373 492.98193359]
[49.44942856 478.85290527]
[54.48634338 464.72387695]
[59.52326202 450.59484863]
[64.56018066 436.46582031]
[68.74719238 422.06204224]
[72.06945038 407.43457031]
[75.39170837 392.80709839]
[78.71396637 378.17965698]
[80.60726166 363.29962158]
[81.05386353 348.30627441]
[81.50047302 333.31292725]
[81.83544922 318.31665039]
[82.05877686 303.31832886]
[74.51182556 290.47726440]
[82.45372772 276.79382324]
[82.67705536 261.79547119]
[82.90038300 246.79713440]
[83.12371063 231.79879761]
[81.27028656 229.69572449]
[80.13825226 226.73175049]
[80.05966949 223.17799377]
[81.26243591 219.42060852]
[83.83338165 215.92144775]
[84.94902802 200.96298218]
[86.06468201 186.00453186]
[87.18032837 171.04608154]
[88.29597473 156.08763123]
[74.18173981 151.14903259]
[61.82605743 142.72653198]
[52.07051086 131.39379883]
[45.57958603 117.92274475]
[42.79538727 103.23091888]
[43.90756607 88.31903076]
[48.84035873 74.20275879]
[57.25778580 61.84362030]
[68.58650970 52.08341980]
[82.05489349 45.58695602]
[96.74556732 42.79672241]
[97.86122131 27.83826828]
[98.97686768 12.87981510]
[100.09251404 -2.07863832]
[101.20816803 -17.03709221]
[102.32381439 -31.99554443]
[103.21662903 -46.96895218]
[103.88641357 -61.95399094]
[104.55619812 -76.93902588]
[105.11441040 -91.92863464]
[105.56101990 -106.92198944]
[97.30046844 -116.82785034]
[97.98110962 -129.30665588]
[106.69347382 -137.69839478]
[107.36325836 -152.68344116]
[108.03304291 -167.66847229]
[107.69806671 -182.66473389]
[106.35983276 -197.60491943]
[97.42219543 -210.65977478]
[103.99317169 -224.02658081]
[102.65493011 -238.96676636]
[101.31669617 -253.90695190]
[89.13786316 -258.20294189]
[79.52333069 -266.75488281]
[73.87792206 -278.26593018]
[73.00857544 -291.01049805]
[77.00919342 -303.09283447]
[85.25189972 -312.72915649]
[96.48532867 -318.51086426]
[95.59251404 -333.48428345]
[94.69969940 -348.45767212]
[93.80688477 -363.43109131]
[92.91406250 -378.40447998]
[78.53748322 -383.34234619]
[67.14819336 -393.40972900]
[60.48298645 -407.07147217]
[59.55825043 -422.24426270]
[64.51500702 -436.61434937]
[74.59738159 -447.99038696]
[88.26788330 -454.63760376]
[103.44187164 -455.54238892]
[117.80541229 -450.56674194]
[129.16816711 -440.46939087]
[135.79740906 -426.79016113]
[136.68223572 -411.61499023]
[131.68768311 -397.25802612]
[121.57541656 -385.90853882]
[107.88747406 -379.29730225]
[108.78028870 -364.32391357]
[109.67310333 -349.35049438]
[110.56591797 -334.37707520]
[111.45873260 -319.40368652]
[127.12500763 -312.26181030]
[137.06732178 -298.09622192]
[138.47282410 -280.75759888]
[130.86441040 -265.01519775]
[116.25688171 -255.24517822]
[117.59511566 -240.30499268]
[118.93334961 -225.36480713]
[127.77526855 -213.37858582]
[121.30001831 -198.94314575]
[122.63825226 -184.00296021]
[130.86863708 -196.54333496]
[144.52867126 -202.74038696]
[159.38565063 -200.67388916]
[170.83595276 -190.98419189]
[175.33161926 -176.67373657]
[171.47958374 -162.17678833]
[160.47344971 -151.98536682]
[145.72358704 -149.25740051]
[131.80041504 -154.83818054]
[123.01808167 -166.99868774]
[122.34829712 -152.01365662]
[121.67851257 -137.02861023]
[130.59312439 -121.91250610]
[120.55436707 -106.47537994]
[120.10775757 -91.48203278]
[123.05072021 -84.70259094]
[119.54123688 -76.26924133]
[118.87145233 -61.28420639]
[118.20166779 -46.29916763]
[120.70627594 -42.23271942]
[120.68295288 -36.54971695]
[117.28226471 -30.87989616]
[116.16661835 -15.92144299]
[115.05097198 -0.96298969]
[113.93531799 13.99546337]
[112.81967163 28.95391655]
[111.70402527 43.91236877]
[125.81826019 48.85096741]
[138.17395020 57.27346802]
[147.92948914 68.60620117]
[154.42041016 82.07725525]
[157.20460510 96.76908112]
[156.09243774 111.68096924]
[151.15963745 125.79724121]
[142.74221802 138.15638733]
[131.41349792 147.91658020]
[117.94510651 154.41304016]
[103.25443268 157.20327759]
[102.13877869 172.16172791]
[101.02313232 187.12017822]
[99.90748596 202.07864380]
[98.79183197 217.03709412]
[98.12204742 232.02212524]
[97.89871979 247.02046204]
[97.67539215 262.01879883]
[97.45206451 277.01715088]
[104.98304749 290.93096924]
[97.05711365 303.54165649]
[96.83378601 318.53997803]
[99.83507538 327.16726685]
[96.49382019 333.75952148]
[96.04721832 348.75286865]
[95.60060883 363.74621582]
[103.82998657 351.20520020]
[116.40455627 343.02716064]
[131.20529175 340.59027100]
[145.73799133 344.30517578]
[157.55364990 353.54586792]
[164.66113281 366.75509644]
[165.86267090 381.70690918]
[160.95582581 395.88162231]
[150.76745605 406.89056396]
[137.01449585 412.87857056]
[122.01455688 412.83651733]
[108.29538727 406.77148438]
[98.16891479 395.70556641]
[93.34143066 381.50192261]
[90.01916504 396.12936401]
[86.69690704 410.75683594]
[83.37464905 425.38427734]
[95.50518036 416.56100464]
[110.50466919 416.43765259]
[122.77868652 425.06021118]
[127.74932098 439.21267700]
[123.56265259 453.61657715]
[111.78020477 462.89956665]
[96.79653931 463.59933472]
[84.20018768 455.45486450]
[78.68920898 441.50271606]
[73.65229034 455.63174438]
[68.61537170 469.76080322]
[63.57845688 483.88983154]
[58.54154205 498.01885986]
[53.50462723 512.14788818]
[48.46770859 526.27691650]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 210]
[25 209]
[26 208]
[27 207]
[28 206]
[29 205]
[30 204]
[31 195]
[32 194]
[33 193]
[34 192]
[35 178]
[36 177]
[37 176]
[38 174]
[39 173]
[41 171]
[42 170]
[43 169]
[44 168]
[49 167]
[50 166]
[51 165]
[52 164]
[53 163]
[64 152]
[65 151]
[66 150]
[67 149]
[68 148]
[69 147]
[70 144]
[71 143]
[72 142]
[73 140]
[74 139]
[77 137]
[78 136]
[79 135]
[80 125]
[81 124]
[83 122]
[84 121]
[85 120]
[92 115]
[93 114]
[94 113]
[95 112]
[96 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
