%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGGAUUCGUAUCACAAUCUCAAACCUAAUCACCCGAUAAAAGACGAUCCCCCACCUUCGCCUACUCAUUCUUCUAAGGACGAUGUUGAUAUCACGAACxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[206.32719421 408.53985596]
[218.33349609 399.48687744]
[211.45408630 386.15744019]
[204.57467651 372.82800293]
[200.37805176 370.54824829]
[197.56900024 365.60797119]
[197.69557190 358.99771118]
[191.21606445 345.46939087]
[184.73657227 331.94104004]
[172.26063538 323.80468750]
[173.27760315 308.01620483]
[166.79811096 294.48785400]
[160.31861877 280.95950317]
[153.83912659 267.43115234]
[146.46868896 280.49548340]
[131.68423462 283.02920532]
[120.38429260 273.16455078]
[120.89878082 258.17337036]
[132.84841919 249.10662842]
[147.42311096 252.64692688]
[141.96775818 238.67413330]
[136.51239014 224.70132446]
[125.56336975 219.55882263]
[120.90406036 207.96250916]
[125.53836060 195.92564392]
[120.29164124 181.87316895]
[115.04492188 167.82069397]
[109.79820251 153.76821899]
[106.75944519 151.97985840]
[104.43592834 148.63078308]
[103.55175018 144.07319641]
[104.64634705 138.96937561]
[100.03234100 124.69664764]
[95.41833496 110.42391205]
[90.16984558 124.47572327]
[78.22161865 133.54434204]
[63.27593994 134.81976318]
[49.96389008 127.90677643]
[42.41035461 114.94745636]
[42.95587540 99.95737457]
[51.43141937 87.58139038]
[65.21074677 81.65431976]
[80.02418518 84.01273346]
[91.28176117 93.92607880]
[88.61596680 79.16486359]
[85.95017242 64.40364838]
[83.28437042 49.64242935]
[80.61857605 34.88121033]
[77.95278168 20.11999512]
[75.28698730 5.35877705]
[72.62119293 -9.40244007]
[69.95539856 -24.16365814]
[59.82373047 -32.14564896]
[57.90727234 -44.49517822]
[64.69444275 -54.50821304]
[62.24871826 -69.30748749]
[59.03544617 -83.95927429]
[55.06334686 -98.42379761]
[51.09125137 -112.88832092]
[47.11915588 -127.35284424]
[36.00369263 -138.61148071]
[40.09451675 -152.93330383]
[35.80039597 -167.30551147]
[31.18638611 -181.57824707]
[26.57237625 -195.85098267]
[21.95836639 -210.12371826]
[17.34435844 -224.39645386]
[15.16563129 -209.55551147]
[9.66729069 -195.59957886]
[1.13776577 -183.26072693]
[-9.97550011 -173.18623352]
[-23.08952713 -165.90460205]
[-37.51638031 -161.79779053]
[-52.49925613 -161.08123779]
[-67.25218201 -163.79254150]
[-81.00125122 -169.78947449]
[-93.02520752 -178.75744629]
[-102.69331360 -190.22599792]
[-109.49838257 -203.59353638]
[-113.08344269 -218.15881348]
[-113.26042938 -233.15777588]
[-110.02005768 -247.80358887]
[-103.53231049 -261.32797241]
[-94.13751984 -273.02148438]
[-82.32851410 -282.27066040]
[-68.72478485 -288.59036255]
[-54.03994370 -291.64901733]
[-39.04433060 -291.28622437]
[-24.52458954 -287.52096558]
[-11.24239159 -280.55081177]
[0.10550264 -270.74136353]
[8.92380619 -258.60720825]
[14.75039291 -244.78330994]
[15.64320946 -259.75671387]
[16.53602409 -274.73013306]
[17.42884064 -289.70352173]
[3.10939288 -294.45913696]
[-9.49075508 -302.75964355]
[-19.51250458 -314.03915405]
[-26.27255440 -327.52856445]
[-29.30999565 -342.30816650]
[-28.41772842 -357.37023926]
[-23.65658951 -371.68783569]
[-15.35120201 -384.28479004]
[-4.06784058 -394.30218506]
[9.42417622 -401.05700684]
[24.20494080 -404.08874512]
[39.26667786 -403.19067383]
[53.58244705 -398.42401123]
[66.17618561 -390.11373901]
[76.18921661 -378.82653809]
[82.93885040 -365.33190918]
[85.96487427 -350.54995728]
[85.06097412 -335.48858643]
[80.28878784 -321.17465210]
[71.97367096 -308.58413696]
[60.68257904 -298.57543945]
[47.18534851 -291.83102417]
[32.40224838 -288.81069946]
[31.50942993 -273.83731079]
[30.61661530 -258.86389160]
[29.72379875 -243.89048767]
[31.61709213 -229.01045227]
[36.23110199 -214.73771667]
[40.84510803 -200.46499634]
[45.45911789 -186.19226074]
[50.07312775 -171.91952515]
[53.02900314 -169.99725342]
[55.20066071 -166.54776001]
[55.88044739 -161.95524597]
[54.55904388 -156.90539551]
[65.39039612 -146.68135071]
[61.58367920 -131.32493591]
[65.55577850 -116.86041260]
[69.52787018 -102.39588928]
[73.49996948 -87.93136597]
[80.84281921 -101.01122284]
[94.83041382 -106.42853546]
[109.06780243 -101.70659637]
[117.04584503 -89.00420380]
[115.11709595 -74.12872314]
[104.16334534 -63.88102341]
[89.19249725 -62.94621658]
[77.04798889 -71.75321198]
[79.49371338 -56.95394135]
[91.34349823 -44.00984573]
[84.71661377 -26.82945251]
[87.38240814 -12.06823540]
[90.04820251 2.69298172]
[92.71399689 17.45419884]
[95.37979889 32.21541595]
[98.04559326 46.97663498]
[100.71138763 61.73785019]
[103.37718201 76.49906921]
[106.04297638 91.26028442]
[109.69106293 105.80990601]
[114.30507660 120.08264160]
[118.91908264 134.35537720]
[123.85067749 148.52151489]
[129.09739685 162.57397461]
[134.34411621 176.62644958]
[139.59083557 190.67892456]
[154.06246948 202.06546021]
[150.48519897 219.24597168]
[155.94055176 233.21876526]
[161.39590454 247.19157410]
[167.36746216 260.95166016]
[173.84696960 274.48001099]
[180.32646179 288.00836182]
[186.80595398 301.53671265]
[199.74536133 310.64068604]
[198.26492310 325.46154785]
[204.74441528 338.98986816]
[211.22390747 352.51821899]
[217.90411377 365.94860840]
[224.78352356 379.27804565]
[231.66293335 392.60745239]
[245.99752808 388.06573486]
[260.89352417 386.01202393]
[275.92230225 386.50549316]
[290.65148926 389.53189087]
[304.65728760 395.00418091]
[317.53671265 402.76486206]
[328.91918945 412.59069824]
[338.47726440 424.19894409]
[345.93588257 437.25564575]
[351.08047485 451.38507080]
[353.76300049 466.18075562]
[353.90631104 481.21694946]
[351.50625610 496.06106567]
[346.63186646 510.28601074]
[339.42346191 523.48248291]
[330.08834839 535.27075195]
[318.89520264 545.31176758]
[306.16601562 553.31652832]
[292.26708984 559.05468750]
[277.59823608 562.36126709]
[262.58160400 563.14111328]
[247.64916992 561.37164307]
[233.23062134 557.10394287]
[219.74078369 550.46075439]
[207.56781006 541.63311768]
[197.06192017 530.87512207]
[188.52539062 518.49627686]
[182.20384216 504.85275269]
[178.27915955 490.33709717]
[176.86425781 475.36691284]
[177.99986267 460.37295532]
[181.65327454 445.78665161]
[187.71939087 432.02764893]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 177]
[3 176]
[4 175]
[7 174]
[8 173]
[9 172]
[11 170]
[12 169]
[13 168]
[14 167]
[20 166]
[21 165]
[22 164]
[25 162]
[26 161]
[27 160]
[28 159]
[32 158]
[33 157]
[34 156]
[44 155]
[45 154]
[46 153]
[47 152]
[48 151]
[49 150]
[50 149]
[51 148]
[52 147]
[55 145]
[56 144]
[57 136]
[58 135]
[59 134]
[60 133]
[62 131]
[63 127]
[64 126]
[65 125]
[66 124]
[67 123]
[93 122]
[94 121]
[95 120]
[96 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
