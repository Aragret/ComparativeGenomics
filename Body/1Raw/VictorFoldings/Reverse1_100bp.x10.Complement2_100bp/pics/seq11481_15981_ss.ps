%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCGAACAAUAUUAAUACGGAGUAUCCCUAUCAUGUUCCUUCCCCAUCCGAUACACAAAACAGUCCCCCAACUCUUACUCACACUCCGCAUAAUAUGGUxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[-31.50112152 265.48464966]
[-29.27730560 280.32809448]
[-28.32032585 295.30670166]
[-28.63707733 310.31246948]
[-30.22527504 325.23733521]
[-33.07347870 339.97372437]
[-37.16116714 354.41549683]
[-42.45888901 368.45858765]
[-48.92846680 382.00177002]
[-56.52329636 394.94754028]
[-65.18864441 407.20254517]
[-74.86208344 418.67855835]
[-85.47391510 429.29281616]
[-96.94767761 438.96890259]
[-109.20069885 447.63708496]
[-122.14469910 455.23489380]
[-135.68641663 461.70761108]
[-149.72827148 467.00854492]
[-164.16909790 471.09957886]
[-178.90484619 473.95117188]
[-193.82933044 475.54281616]
[-208.83503723 475.86303711]
[-223.81384277 474.90948486]
[-238.65782166 472.68908691]
[-253.26002502 469.21783447]
[-267.51522827 464.52072144]
[-281.32073975 458.63159180]
[-294.57705688 451.59286499]
[-307.18872070 443.45529175]
[-319.06478882 434.27746582]
[-330.11975098 424.12554932]
[-340.27395630 413.07266235]
[-349.45419312 401.19845581]
[-357.59436035 388.58847046]
[-364.63580322 375.33358765]
[-370.52777100 361.52926636]
[-375.22778320 347.27502441]
[-378.70205688 332.67355347]
[-380.92547607 317.83001709]
[-381.88208008 302.85140991]
[-381.56494141 287.84564209]
[-379.97634888 272.92080688]
[-377.12777710 258.18447876]
[-373.03970337 243.74282837]
[-367.74160767 229.69989014]
[-361.27169800 216.15684509]
[-353.67654419 203.21128845]
[-345.01086426 190.95649719]
[-335.33712769 179.48075867]
[-324.72500610 168.86674500]
[-313.25100708 159.19096375]
[-300.99777222 150.52310181]
[-288.05355835 142.92562866]
[-274.51168823 136.45327759]
[-260.46969604 131.15267944]
[-246.02876282 127.06203461]
[-231.29293823 124.21081543]
[-216.36840820 122.61956024]
[-201.36268616 122.29974365]
[-186.38391113 123.25365448]
[-171.53999329 125.47443390]
[-156.93788147 128.94607544]
[-142.68280029 133.64355469]
[-128.87744141 139.53305054]
[-115.62129211 146.57211304]
[-103.00986481 154.71002197]
[-91.13401031 163.88813782]
[-80.07930756 174.04035950]
[-69.92540741 185.09350586]
[-60.74546051 196.96795654]
[-48.14315033 188.83273315]
[-35.54083633 180.69752502]
[-22.93852615 172.56230164]
[-10.33621407 164.42709351]
[2.20518613 156.19828796]
[14.68498039 147.87634277]
[27.16477394 139.55439758]
[39.64456558 131.23245239]
[52.12436295 122.91050720]
[64.60415649 114.58856201]
[77.08394623 106.26661682]
[89.56374359 97.94467163]
[101.39001465 88.71757507]
[112.49724579 78.63643646]
[123.60447693 68.55529785]
[134.71171570 58.47415924]
[119.74523926 59.47653580]
[106.56160736 52.32169342]
[99.24590302 39.22663879]
[100.06497192 24.24901772]
[108.76502991 12.02980900]
[122.65025330 6.35526705]
[137.41816711 8.98371029]
[148.49276733 19.10068703]
[152.44247437 33.57134247]
[148.04327393 47.91200256]
[160.39778137 39.40517426]
[172.75228882 30.89834595]
[185.10679626 22.39151955]
[177.60417175 9.39342213]
[171.15795898 -4.15967560]
[165.80892944 -18.18208504]
[161.59089661 -32.58515167]
[158.53053284 -47.27781296]
[156.64718628 -62.16717529]
[155.95277405 -77.15910339]
[156.45166016 -92.15880585]
[158.14071655 -107.07145691]
[161.00924683 -121.80277252]
[165.03912354 -136.25961304]
[170.20486450 -150.35057068]
[176.47381592 -163.98655701]
[183.80635071 -177.08137512]
[192.15608215 -189.55223083]
[201.47024536 -201.32025146]
[211.68994141 -212.31106567]
[222.75054932 -222.45516968]
[234.58215332 -231.68844604]
[247.10995483 -239.95248413]
[260.25473022 -247.19506836]
[273.93338013 -253.37039185]
[288.05941772 -258.43942261]
[302.54354858 -262.37008667]
[317.29418945 -265.13757324]
[332.21804810 -266.72433472]
[347.22082520 -267.12039185]
[362.20764160 -266.32321167]
[377.08374023 -264.33782959]
[391.75506592 -261.17681885]
[406.12890625 -256.86016846]
[420.11428833 -251.41513062]
[433.62289429 -244.87615967]
[446.56924438 -237.28459167]
[458.87152100 -228.68841553]
[470.45193481 -219.14199829]
[481.23727417 -208.70568848]
[491.15936279 -197.44546509]
[500.15542603 -185.43252563]
[508.16860962 -172.74281311]
[515.14825439 -159.45657349]
[521.05029297 -145.65777588]
[525.83728027 -131.43370056]
[529.47906494 -116.87424469]
[531.95257568 -102.07147980]
[533.24212646 -87.11898041]
[533.33966064 -72.11129761]
[532.24450684 -57.14331055]
[529.96362305 -42.30964661]
[526.51135254 -27.70409775]
[521.90960693 -13.41900158]
[516.18743896 0.45532304]
[509.38101196 13.83115864]
[501.53341675 26.62393570]
[492.69421387 38.75277710]
[482.91934204 50.14099503]
[472.27053833 60.71658707]
[460.81515503 70.41269684]
[448.62564087 79.16801453]
[435.77902222 86.92719269]
[422.35656738 93.64116669]
[408.44308472 99.26749420]
[394.12658691 103.77060699]
[379.49758911 107.12202454]
[364.64852905 109.30056000]
[349.67333984 110.29244232]
[334.66668701 110.09140015]
[319.72344971 108.69869995]
[304.93811035 106.12315369]
[290.40411377 102.38105011]
[276.21337891 97.49603271]
[262.45565796 91.49900055]
[249.21784973 84.42785645]
[236.58372498 76.32731628]
[224.63311768 67.24859619]
[213.44160461 57.24908829]
[203.07994080 46.39201736]
[193.61363220 34.74602890]
[181.25912476 43.25285721]
[168.90461731 51.75968170]
[156.55010986 60.26651001]
[144.79284668 69.58139038]
[133.68562317 79.66252899]
[122.57838440 89.74366760]
[111.47115326 99.82480621]
[126.38695526 98.23773956]
[140.13774109 104.23071289]
[149.12908936 116.23719788]
[151.01069641 131.11871338]
[145.29067993 144.98527527]
[133.46427917 154.21220398]
[118.62285614 156.38757324]
[104.64594269 150.94277954]
[95.18705750 139.30107117]
[92.71873474 124.50555420]
[97.88568878 110.42446899]
[85.40589142 118.74641418]
[72.92610168 127.06835175]
[60.44630432 135.39030457]
[47.96651077 143.71224976]
[35.48671722 152.03417969]
[23.00692368 160.35612488]
[10.52713013 168.67807007]
[5.12350464 176.04277039]
[-2.20099831 177.02940369]
[-14.80331039 185.16461182]
[-27.40562248 193.29983521]
[-40.00793457 201.43504333]
[-52.61024475 209.57026672]
[-45.56847382 222.82496643]
[-39.67615509 236.62911987]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[70 208]
[71 207]
[72 206]
[73 205]
[74 204]
[75 202]
[76 201]
[77 200]
[78 199]
[79 198]
[80 197]
[81 196]
[82 195]
[83 184]
[84 183]
[85 182]
[86 181]
[96 180]
[97 179]
[98 178]
[99 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
