%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAUUCCUCUAAACAUCCCUCUAAUCAUAUCUCUCCAUCUCAAAAAAAGCACUAUCACCAAGUGACCUAUUCACCGCAACCGAACGGUACUAACACUCxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[118.07219696 635.55456543]
[103.02082062 638.33209229]
[88.40615082 633.78564453]
[77.58652496 622.96002197]
[73.04821777 608.34283447]
[75.83409882 593.29302979]
[85.30399323 581.26885986]
[99.28179169 575.03350830]
[100.17460632 560.06011963]
[101.06742096 545.08673096]
[101.84874725 530.10705566]
[102.51853180 515.12200928]
[103.18831635 500.13699341]
[89.62850189 493.88711548]
[79.46704865 482.89212036]
[74.27526093 468.80630493]
[74.87351227 453.76535034]
[81.20174408 440.06256104]
[92.32392120 429.79901123]
[106.56629944 424.56161499]
[107.23608398 409.57656860]
[107.90586853 394.59155273]
[108.57565308 379.60650635]
[108.91062927 364.61022949]
[108.91062927 349.61022949]
[108.57565308 334.61398315]
[107.90586853 319.62893677]
[107.23608398 304.64389038]
[106.56629944 289.65887451]
[105.89651489 274.67382812]
[105.22673035 259.68878174]
[103.66620636 244.77018738]
[101.22048187 229.97091675]
[98.77474976 215.17164612]
[94.58271790 209.08488464]
[96.40449524 200.13395691]
[94.17937469 185.29992676]
[91.95426178 170.46588135]
[85.78515625 184.13854980]
[74.35047150 193.84669495]
[59.85806274 197.71580505]
[45.10618210 194.99882507]
[32.94318771 186.22033691]
[25.71756744 173.07536316]
[24.82447052 158.10197449]
[30.43634415 144.19129944]
[41.46961975 134.02928162]
[55.79394913 129.57801819]
[70.64352417 131.69702148]
[83.15112305 139.97709656]
[90.90213776 152.82073975]
[91.34873962 137.82739258]
[91.79534912 122.83404541]
[92.24195099 107.84069824]
[79.70071411 116.06975555]
[65.40078735 111.54072571]
[59.88354492 97.59224701]
[67.21609497 84.50661469]
[81.99314880 81.93007660]
[93.32096100 91.76043701]
[94.88148499 76.84182739]
[96.44200897 61.92322540]
[90.18238831 47.39299011]
[99.20178223 35.53973007]
[100.76230621 20.62112427]
[101.65512085 5.64771843]
[94.12414551 -8.26612091]
[102.05007935 -20.87678528]
[102.27340698 -35.87512207]
[102.49673462 -50.87345886]
[102.27340698 -65.87179565]
[101.60362244 -80.85683441]
[100.93383789 -95.84187317]
[100.26405334 -110.82691193]
[99.59426117 -125.81195068]
[98.92447662 -140.79699707]
[87.54367065 -151.43254089]
[87.07788086 -166.63905334]
[97.28739166 -177.42337036]
[96.61760712 -192.40840149]
[95.94782257 -207.39344788]
[95.27803802 -222.37847900]
[94.60825348 -237.36352539]
[93.93846893 -252.34855652]
[93.26868439 -267.33358765]
[92.37586975 -282.30700684]
[91.26021576 -297.26544189]
[90.14456940 -312.22390747]
[89.02892303 -327.18237305]
[85.62823486 -332.85217285]
[85.60491180 -338.53518677]
[88.10951996 -342.60162354]
[87.43973541 -357.58666992]
[86.76995087 -372.57171631]
[86.10016632 -387.55673218]
[85.43038177 -402.54177856]
[84.76059723 -417.52682495]
[70.57020569 -423.05429077]
[59.85948181 -433.88018799]
[54.48411179 -448.12887573]
[55.37541580 -463.33169556]
[62.37896729 -476.85464478]
[74.28135681 -486.35479736]
[89.02043152 -490.18618774]
[104.04254913 -487.68502808]
[116.74504089 -479.28463745]
[124.92712402 -466.44046021]
[127.17120361 -451.37777710]
[123.08847046 -436.70632935]
[113.38629913 -424.96804810]
[99.74563599 -418.19662476]
[100.41542053 -403.21157837]
[101.08520508 -388.22653198]
[101.75498962 -373.24148560]
[102.42477417 -358.25646973]
[103.09455872 -343.27142334]
[103.98737335 -328.29800415]
[105.10301971 -313.33956909]
[106.21867371 -298.38110352]
[107.33432007 -283.42263794]
[110.30439758 -279.68264771]
[110.95655823 -274.03713989]
[108.25372314 -268.00338745]
[108.92350769 -253.01834106]
[109.59329224 -238.03330994]
[110.26307678 -223.04826355]
[110.93286133 -208.06323242]
[111.60264587 -193.07818604]
[112.27243042 -178.09315491]
[123.40335846 -168.26268005]
[124.29608154 -153.07527161]
[113.90951538 -141.46678162]
[114.57929993 -126.48173523]
[115.24909210 -111.49669647]
[115.91887665 -96.51165771]
[116.58866119 -81.52661896]
[117.25844574 -66.54158020]
[119.23375702 -64.55254364]
[120.54020691 -61.66121292]
[120.83017731 -58.11842728]
[119.85318756 -54.29612350]
[117.49507141 -50.65013123]
[117.27174377 -35.65179443]
[117.04841614 -20.65345764]
[124.59536743 -7.81239939]
[116.65345764 5.87104654]
[128.14309692 -3.77199745]
[143.09753418 -2.60368657]
[152.95018005 8.70671749]
[152.05700684 23.68010139]
[140.92965698 33.73903275]
[125.94238281 33.12129593]
[115.68091583 22.18164825]
[114.12039185 37.10025024]
[120.49162292 50.56341171]
[111.36061096 63.48374939]
[109.80008698 78.40235138]
[108.23956299 93.32096100]
[107.23530579 108.28730011]
[106.78869629 123.28065491]
[106.34209442 138.27400208]
[105.89548492 153.26734924]
[106.78829956 168.24075317]
[109.01342010 183.07479858]
[111.23853302 197.90884399]
[113.57402039 212.72592163]
[116.01975250 227.52519226]
[118.46547699 242.32446289]
[126.36740875 229.57456970]
[140.21038818 223.79774475]
[154.83134460 227.14857483]
[164.77699280 238.37728882]
[166.33786011 253.29585266]
[158.93180847 266.34002686]
[145.32107544 272.64462280]
[130.58215332 269.85821533]
[120.21176910 259.01901245]
[120.88155365 274.00402832]
[121.55133820 288.98907471]
[122.22112274 303.97412109]
[122.89090729 318.95916748]
[123.56069183 333.94418335]
[126.37136841 338.34274292]
[127.13719940 342.92169189]
[126.13189697 346.87194824]
[123.91062927 349.61022949]
[123.91062927 364.61022949]
[126.52209473 369.12991333]
[127.08270264 373.73849487]
[125.90201569 377.63989258]
[123.56069183 380.27627563]
[122.89090729 395.26132202]
[122.22112274 410.24636841]
[121.55133820 425.23141479]
[135.26966858 431.71853638]
[145.43182373 442.93344116]
[150.51231384 457.14617920]
[149.76629639 472.18051147]
[143.33853149 485.74697876]
[132.23667908 495.79156494]
[118.17335510 500.80676270]
[117.50357056 515.79180908]
[116.83378601 530.77685547]
[119.57688141 539.48968506]
[116.04082489 545.97949219]
[115.14801025 560.95294189]
[114.25519562 575.92633057]
[127.39299774 583.77850342]
[135.36695862 596.84277344]
[136.34471130 612.11700439]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 207]
[9 206]
[10 205]
[11 203]
[12 202]
[13 201]
[20 194]
[21 193]
[22 192]
[23 191]
[24 187]
[25 186]
[26 182]
[27 181]
[28 180]
[29 179]
[30 178]
[31 177]
[32 168]
[33 167]
[34 166]
[36 165]
[37 164]
[38 163]
[51 162]
[52 161]
[53 160]
[54 159]
[60 158]
[61 157]
[62 156]
[64 154]
[65 153]
[66 146]
[68 144]
[69 143]
[70 142]
[71 137]
[72 136]
[73 135]
[74 134]
[75 133]
[76 132]
[79 129]
[80 128]
[81 127]
[82 126]
[83 125]
[84 124]
[85 123]
[86 120]
[87 119]
[88 118]
[89 117]
[92 116]
[93 115]
[94 114]
[95 113]
[96 112]
[97 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
