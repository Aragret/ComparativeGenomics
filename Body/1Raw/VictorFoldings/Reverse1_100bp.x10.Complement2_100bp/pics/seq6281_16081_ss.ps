%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[69.92425537 408.41131592]
[68.44579315 423.36019897]
[65.02870178 437.98818970]
[59.73144913 452.04501343]
[52.64468002 465.29013062]
[43.88965988 477.49685669]
[33.61619568 488.45639038]
[22.00007820 497.98114014]
[9.24008083 505.90814209]
[-4.44546127 512.10174561]
[-18.82236862 516.45599365]
[-33.64463425 518.89642334]
[-48.65862656 519.38116455]
[-63.60744476 517.90197754]
[-78.23528290 514.48419189]
[-92.29184723 509.18627930]
[-105.53661346 502.09887695]
[-117.74294281 493.34326172]
[-128.70196533 483.06927490]
[-138.22616577 471.45272827]
[-146.15257263 458.69235229]
[-152.34553528 445.00650024]
[-156.69911194 430.62939453]
[-159.13879395 415.80700684]
[-159.62283325 400.79299927]
[-158.14294434 385.84423828]
[-154.72445679 371.21655273]
[-149.42587280 357.16024780]
[-142.33782959 343.91583252]
[-133.58164978 331.70993042]
[-123.30714417 320.75137329]
[-111.69012451 311.22772217]
[-98.92936707 303.30194092]
[-85.24324036 297.10961914]
[-70.86591339 292.75674438]
[-56.04341888 290.31774902]
[-41.02937698 289.83444214]
[-26.08070374 291.31503296]
[-11.45318890 294.73422241]
[2.60287285 300.03347778]
[9.67997837 286.80795288]
[16.75708389 273.58242798]
[23.73553658 260.30456543]
[30.61494827 246.97514343]
[37.49436188 233.64572144]
[44.37377548 220.31628418]
[51.25318527 206.98686218]
[58.13259888 193.65742493]
[64.10416412 179.89732361]
[69.14107513 165.76829529]
[74.17799377 151.63926697]
[79.21491241 137.51023865]
[84.14650726 123.34410095]
[88.97250366 109.14164734]
[86.43765259 95.39151001]
[96.82504272 86.03235626]
[101.65103912 71.82990265]
[101.44902039 62.69770432]
[106.65605927 57.45284653]
[111.69297791 43.32381821]
[109.03896332 27.72680664]
[120.60074615 18.33668137]
[125.63765717 4.20765257]
[127.86277771 -10.62639141]
[127.19299316 -25.61142921]
[126.52320862 -40.59646988]
[125.85342407 -55.58150864]
[125.18363953 -70.56654358]
[110.18710327 -71.18742371]
[95.29946136 -73.09518433]
[80.63093567 -76.27571106]
[66.29012299 -80.70544434]
[52.38320541 -86.35160065]
[39.01314545 -93.17237091]
[26.27892876 -101.11725616]
[14.27483940 -110.12743378]
[3.08975196 -120.13619232]
[-7.19352055 -131.06942749]
[-16.49884415 -142.84620667]
[-24.75732231 -155.37931824]
[-31.90781403 -168.57598877]
[-37.89737701 -182.33848572]
[-42.68166733 -196.56494141]
[-46.22526169 -211.15002441]
[-48.50192261 -225.98573303]
[-49.49479675 -240.96223450]
[-49.19652939 -255.96864319]
[-47.60933685 -270.89385986]
[-44.74496460 -285.62738037]
[-40.62461853 -300.06015015]
[-35.27880478 -314.08526611]
[-28.74710846 -327.59887695]
[-21.07788277 -340.50100708]
[-12.32791138 -352.69604492]
[-2.56197643 -364.09378052]
[8.14761639 -374.60977173]
[19.72157669 -384.16616821]
[32.07421112 -392.69223022]
[45.11406708 -400.12484741]
[58.74460220 -406.40896606]
[72.86489105 -411.49804688]
[87.37039185 -415.35443115]
[102.15371704 -417.94958496]
[117.10540771 -419.26425171]
[132.11476135 -419.28875732]
[147.07066345 -418.02285767]
[161.86238098 -415.47595215]
[176.38038635 -411.66690063]
[190.51721191 -406.62390137]
[204.16816711 -400.38430786]
[217.23220825 -392.99429321]
[229.61259460 -384.50857544]
[241.21766663 -374.98995972]
[251.96151733 -364.50897217]
[261.76458740 -353.14318848]
[270.55429077 -340.97674561]
[278.26556396 -328.09973145]
[284.84133911 -314.60745239]
[290.23287964 -300.59988403]
[294.40029907 -286.18063354]
[297.31271362 -271.45654297]
[298.94860840 -256.53659058]
[299.29580688 -241.53121948]
[298.35180664 -226.55155945]
[296.12356567 -211.70849609]
[292.62756348 -197.11193848]
[287.88973999 -182.86994934]
[281.94509888 -169.08798218]
[274.83770752 -155.86805725]
[266.62014771 -143.30805969]
[257.35330200 -131.50099182]
[247.10575867 -120.53425598]
[235.95338440 -110.48905945]
[223.97875977 -101.43976593]
[211.27052307 -93.45337677]
[197.92279053 -86.58901978]
[184.03436279 -80.89752197]
[169.70808411 -76.42102051]
[155.05001831 -73.19265747]
[140.16867065 -71.23632812]
[140.83845520 -56.25129318]
[141.50823975 -41.26625443]
[142.17802429 -26.28121567]
[142.84780884 -11.29617596]
[148.86953735 -25.03440475]
[157.76040649 -37.11547852]
[169.08663940 -46.94993210]
[182.29559326 -54.05792236]
[196.74278259 -58.09263611]
[211.72328186 -58.85720825]
[226.50616455 -56.31433487]
[240.37014771 -50.58808517]
[252.63877869 -41.95786285]
[262.71343994 -30.84474754]
[270.10256958 -17.79097939]
[274.44561768 -3.43347573]
[275.53070068 11.52722645]
[273.30484009 26.36116219]
[267.87670898 40.34455109]
[259.51107788 52.79510880]
[248.61618042 63.10535049]
[235.72357178 70.77221680]
[221.46232605 75.42161560]
[206.52828979 76.82670593]
[191.65010071 74.91892242]
[177.55371094 69.79134369]
[164.92692566 61.69417191]
[154.38583374 51.02247238]
[146.44473267 38.29694366]
[141.49110413 24.13849831]
[139.76669312 9.24456882]
[134.72976685 23.37359810]
[137.74406433 37.96000671]
[125.82200623 48.36073303]
[120.78508759 62.48976517]
[115.85349274 76.65589905]
[111.02749634 90.85835266]
[113.56234741 104.60848999]
[103.17495728 113.96764374]
[98.34896088 128.17010498]
[98.55097961 137.30229187]
[93.34394073 142.54714966]
[88.30702209 156.67617798]
[83.27011108 170.80520630]
[78.23319244 184.93423462]
[90.95623016 176.98915100]
[105.95597076 177.07746887]
[118.58457947 185.17179871]
[124.92894745 198.76403809]
[123.02320099 213.64248657]
[113.45786285 225.19688416]
[99.19684601 229.84698486]
[84.65908813 226.15190125]
[74.34927368 215.25659180]
[71.46202850 200.53683472]
[64.58261871 213.86627197]
[57.70320129 227.19569397]
[50.82379150 240.52513123]
[43.94437790 253.85455322]
[37.06496429 267.18399048]
[35.91006851 276.24511719]
[29.98261070 280.65951538]
[22.90550613 293.88504028]
[15.82840061 307.11056519]
[28.03556252 315.86502075]
[38.99556351 326.13796997]
[48.52087021 337.75363159]
[56.44848251 350.51324463]
[62.64275742 364.19848633]
[66.99769592 378.57519531]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 204]
[41 203]
[42 202]
[43 200]
[44 199]
[45 198]
[46 197]
[47 196]
[48 195]
[49 185]
[50 184]
[51 183]
[52 182]
[53 180]
[54 179]
[56 177]
[57 176]
[59 175]
[60 174]
[62 172]
[63 171]
[64 144]
[65 143]
[66 142]
[67 141]
[68 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
