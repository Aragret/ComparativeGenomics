%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACCGACCAACGGAGUAGCCCACUACUAUCGGUUCCACCCCUAUUCACACCAAAGCUUCUUCUAUAUUUUAUACUAAUCAAGACACCGACACUUACAAUxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[94.28047180 554.07366943]
[79.39869690 556.17913818]
[64.36992645 555.98815918]
[49.54645538 553.50518799]
[35.27576828 548.78845215]
[21.89239311 541.94842529]
[9.71005344 533.14550781]
[-0.98568022 522.58605957]
[-9.94408321 510.51763916]
[-16.95515823 497.22308350]
[-21.85455513 483.01406860]
[-24.52742577 468.22366333]
[-24.91111374 453.19857788]
[-22.99662590 438.29101562]
[-18.82883835 423.85043335]
[-12.50545120 410.21536255]
[-4.17469501 397.70541382]
[5.96814728 386.61383057]
[17.68531227 377.20062256]
[30.70213127 369.68646240]
[44.71347427 364.24746704]
[59.39089203 361.01113892]
[74.39032745 360.05334473]
[75.72856140 345.11315918]
[77.06679535 330.17297363]
[74.53257751 323.23037720]
[78.53779602 315.02087402]
[80.09832001 300.10226440]
[73.72708130 286.63909912]
[82.85810089 273.71878052]
[84.41862488 258.80017090]
[85.97914124 243.88156128]
[87.53966522 228.96295166]
[89.10018921 214.04435730]
[81.72906494 204.45304871]
[82.90706635 192.01133728]
[92.54567719 183.44046021]
[94.32814026 168.54673767]
[94.88635254 153.55712891]
[94.21656799 138.57208252]
[93.54678345 123.58705139]
[92.87699890 108.60201263]
[92.09567261 93.62237549]
[91.20285797 78.64897156]
[90.31004333 63.67556381]
[89.41722870 48.70215607]
[88.52440643 33.72875214]
[87.63159180 18.75534630]
[81.79978943 32.57526016]
[73.33979797 44.96189117]
[62.58858490 55.42187881]
[49.97436142 63.53861237]
[35.99954605 68.98880005]
[21.22075272 71.55536652]
[6.22661352 71.13607788]
[-8.38565922 67.74765015]
[-22.03406525 61.52502441]
[-34.17499542 52.71606064]
[-44.32487488 41.67161179]
[-52.07944489 28.83156967]
[-57.12984467 14.70735359]
[-59.27490997 -0.13847728]
[-58.42921066 -15.11461830]
[-54.62643051 -29.62457466]
[-48.01802826 -43.09042358]
[-38.86722183 -54.97582245]
[-27.53847504 -64.80738068]
[-14.48301506 -72.19351196]
[-0.22083113 -76.84002686]
[14.68001747 -78.56185913]
[29.62603569 -77.29043579]
[44.02193069 -73.07637787]
[57.29431915 -66.08755493]
[68.91456604 -56.60230637]
[78.41983795 -44.99843979]
[85.43154907 -31.73812485]
[89.67042542 -17.34952164]
[90.96768951 -2.40989518]
[96.10964966 -16.50103569]
[100.93564606 -30.70349121]
[105.76164246 -44.90594864]
[110.58763885 -59.10840225]
[115.41364288 -73.31085968]
[120.23963928 -87.51331329]
[124.95977020 -101.75130463]
[129.57377625 -116.02404022]
[134.18778992 -130.29676819]
[138.69541931 -144.60345459]
[143.09642029 -158.94329834]
[147.49742126 -173.28315735]
[133.77519226 -179.38710022]
[120.88880920 -187.10061646]
[109.02616119 -196.31120300]
[98.36024475 -206.88455200]
[89.04660797 -218.66645813]
[81.22106934 -231.48513794]
[74.99774933 -245.15362549]
[70.46739197 -259.47259521]
[67.69607544 -274.23327637]
[66.72421265 -289.22036743]
[67.56597137 -304.21530151]
[70.20907593 -318.99948120]
[74.61498260 -333.35723877]
[80.71944427 -347.07922363]
[88.43344116 -359.96533203]
[97.64447021 -371.82763672]
[108.21821594 -382.49313354]
[120.00048065 -391.80633545]
[132.81944275 -399.63140869]
[146.48815918 -405.85421753]
[160.80731201 -410.38403320]
[175.56808472 -413.15478516]
[190.55520630 -414.12609863]
[205.55014038 -413.28378296]
[220.33419800 -410.64013672]
[234.69178772 -406.23367310]
[248.41355896 -400.12869263]
[261.29937744 -392.41421509]
[273.16131592 -383.20275879]
[283.82644653 -372.62860107]
[293.13919067 -360.84600830]
[300.96377563 -348.02673340]
[307.18609619 -334.35778809]
[311.71536255 -320.03845215]
[314.48556519 -305.27758789]
[315.45632935 -290.29043579]
[314.61343384 -275.29553223]
[311.96923828 -260.51156616]
[307.56225586 -246.15414429]
[301.45675659 -232.43261719]
[293.74182129 -219.54708862]
[284.52987671 -207.68547058]
[273.95535278 -197.02075195]
[262.17239380 -187.70843506]
[249.35284424 -179.88432312]
[235.68365479 -173.66253662]
[221.36416626 -169.13378906]
[206.60317993 -166.36413574]
[191.61598206 -165.39395142]
[176.62112427 -166.23739624]
[161.83726501 -168.88215637]
[157.43626404 -154.54231262]
[153.03526306 -140.20245361]
[154.07792664 -132.88572693]
[148.46052551 -125.68276215]
[143.84651184 -111.41002655]
[139.23249817 -97.13729095]
[140.16610718 -89.80583954]
[134.44209290 -82.68731689]
[129.61608887 -68.48486328]
[124.79010010 -54.28240585]
[119.96409607 -40.07994843]
[115.13809967 -25.87749481]
[110.31210327 -11.67503834]
[111.53426361 -8.36767292]
[111.21518707 -4.30402422]
[109.01687622 -0.21492781]
[104.94048309 3.04546189]
[102.60500336 17.86252975]
[103.49781799 32.83593750]
[104.39063263 47.80934143]
[105.28344727 62.78274536]
[106.17626190 77.75614929]
[107.06907654 92.72956085]
[110.65433502 99.94887543]
[107.86203766 107.93222809]
[108.53182220 122.91726685]
[109.20160675 137.90229797]
[109.87139130 152.88734436]
[117.76771545 140.13398743]
[130.63919067 132.43171692]
[145.61030579 131.50122070]
[159.33645630 137.55039978]
[168.75122070 149.22782898]
[171.75128174 163.92475891]
[167.66642761 178.35784912]
[157.40922546 189.30270386]
[143.27117920 194.31422424]
[128.41073608 192.27282715]
[116.14777374 183.63455200]
[109.22185516 170.32920837]
[107.43939209 185.22291565]
[115.07712555 201.97840881]
[104.01879883 215.60487366]
[102.45827484 230.52348328]
[100.89775085 245.44207764]
[99.33722687 260.36068726]
[97.77670288 275.27929688]
[104.03631592 289.80953979]
[95.01692200 301.66278076]
[93.45639801 316.58139038]
[92.00698090 331.51119995]
[90.66874695 346.45138550]
[89.33051300 361.39157104]
[103.92095947 364.99981689]
[117.78957367 370.79309082]
[130.61125183 378.63558960]
[142.08544922 388.34350586]
[151.94317627 399.68923950]
[159.95335388 412.40682983]
[165.92823792 426.19818115]
[169.72773743 440.73999023]
[171.26280212 455.69137573]
[170.49745178 470.70184326]
[167.44961548 485.41958618]
[162.19075012 499.49951172]
[154.84411621 512.61163330]
[145.58195496 524.44854736]
[134.62135315 534.73278809]
[122.21926117 543.22326660]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 194]
[24 193]
[25 192]
[27 191]
[28 190]
[30 188]
[31 187]
[32 186]
[33 185]
[34 184]
[37 182]
[38 181]
[39 169]
[40 168]
[41 167]
[42 166]
[43 164]
[44 163]
[45 162]
[46 161]
[47 160]
[48 159]
[78 158]
[79 154]
[80 153]
[81 152]
[82 151]
[83 150]
[84 149]
[85 147]
[86 146]
[87 145]
[88 143]
[89 142]
[90 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
