%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAACAACAAACCUUCCCCCUACGCCCCCUUUACAACAAUCAUUACUCUUUAGGACGCUUAUCCGAAGGCCGACGGUCCGCAAAUUACCCCAAAUCAUCCCxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[-13.61467075 400.51266479]
[-13.15637589 415.51867676]
[-14.21858883 430.49407959]
[-16.79040909 445.28518677]
[-20.84544563 459.74020386]
[-26.34208870 473.71081543]
[-33.22393036 487.05364990]
[-41.42035675 499.63180542]
[-50.84725189 511.31619263]
[-61.40788651 521.98687744]
[-72.99388885 531.53442383]
[-85.48636627 539.86083984]
[-98.75713348 546.88067627]
[-112.66999817 552.52185059]
[-127.08219910 556.72656250]
[-141.84584045 559.45159912]
[-156.80941772 560.66900635]
[-171.81939697 560.36633301]
[-186.72174072 558.54669189]
[-201.36352539 555.22863770]
[-215.59449768 550.44635010]
[-229.26864624 544.24890137]
[-242.24562073 536.69976807]
[-254.39227295 527.87652588]
[-265.58395386 517.86968994]
[-275.70584106 506.78189087]
[-284.65402222 494.72698975]
[-292.33670044 481.82864380]
[-298.67504883 468.21920776]
[-303.60403442 454.03836060]
[-307.07302856 439.43161011]
[-309.04647827 424.54885864]
[-309.50411987 409.54281616]
[-308.44125366 394.56744385]
[-305.86877441 379.77645874]
[-301.81311035 365.32162476]
[-296.31582642 351.35125732]
[-289.43341064 338.00872803]
[-281.23641968 325.43093872]
[-271.80902100 313.74697876]
[-261.24792480 303.07672119]
[-249.66149902 293.52969360]
[-237.16865540 285.20385742]
[-223.89758301 278.18460083]
[-209.98446655 272.54403687]
[-195.57208252 268.33996582]
[-180.80831909 265.61557007]
[-165.84468079 264.39880371]
[-150.83471680 264.70211792]
[-135.93244934 266.52246094]
[-121.29081726 269.84112549]
[-107.06005096 274.62402344]
[-93.38618469 280.82214355]
[-80.40953827 288.37182617]
[-68.26326752 297.19558716]
[-58.26509857 286.01361084]
[-48.26692581 274.83166504]
[-38.26875305 263.64968872]
[-28.27058220 252.46769714]
[-18.27240944 241.28572083]
[-8.27423763 230.10374451]
[1.72393441 218.92178345]
[11.72210693 207.73980713]
[21.21100426 196.12254333]
[30.08189964 184.02679443]
[38.86250305 171.86532593]
[47.64310837 159.70387268]
[48.82019424 144.85585022]
[63.17156982 138.19638062]
[71.95217133 126.03492737]
[80.73278046 113.87347412]
[89.51338196 101.71202087]
[97.46006775 88.98998260]
[93.10700226 74.03376007]
[100.47259521 60.72201157]
[114.75789642 56.66419983]
[121.83500671 43.43867493]
[128.91210938 30.21314621]
[135.98921204 16.98761940]
[143.06631470 3.76209140]
[150.14341736 -9.46343613]
[157.22053528 -22.68896294]
[164.29763794 -35.91448975]
[171.37474060 -49.14001846]
[178.45184326 -62.36554718]
[179.74151611 -71.40847778]
[185.73403931 -75.73414612]
[193.00727844 -88.85283661]
[200.28050232 -101.97153473]
[207.55374146 -115.09022522]
[214.82696533 -128.20892334]
[222.10018921 -141.32762146]
[226.60781860 -155.63430786]
[228.16835022 -170.55290222]
[229.72886658 -185.47151184]
[223.46925354 -200.00175476]
[232.48864746 -211.85501099]
[234.04916382 -226.77362061]
[235.60969543 -241.69221497]
[221.70101929 -247.61170959]
[210.15615845 -257.36914062]
[202.00164795 -270.09689331]
[197.96260071 -284.66320801]
[198.39814758 -299.77285767]
[203.26957703 -314.08230591]
[212.14370728 -326.31918335]
[224.23147583 -335.39538574]
[238.45802307 -340.50384521]
[253.55836487 -341.19033813]
[268.18975830 -337.39382935]
[281.05120850 -329.45190430]
[290.99908447 -318.07070923]
[297.14883423 -304.26229858]
[298.95358276 -289.25451660]
[296.25289917 -274.38177490]
[289.28692627 -260.96661377]
[278.67504883 -250.20188904]
[265.36087036 -243.04478455]
[250.52830505 -240.13169861]
[248.96777344 -225.21308899]
[247.40725708 -210.29447937]
[253.77848816 -196.83132935]
[244.64747620 -183.91099548]
[243.08694458 -168.99238586]
[241.52642822 -154.07377625]
[249.51789856 -166.76773071]
[260.01965332 -177.47814941]
[272.55395508 -185.71777344]
[286.55056763 -191.11175537]
[301.37271118 -193.41470337]
[316.34613037 -192.52186584]
[330.78958130 -188.47384644]
[344.04602051 -181.45480347]
[355.51235962 -171.78405762]
[364.66693115 -159.90156555]
[371.09329224 -146.34788513]
[374.49908447 -131.73965454]
[374.72933960 -116.74142456]
[371.77362061 -102.03551483]
[365.76638794 -88.29095459]
[356.98089600 -76.13302612]
[345.81686401 -66.11483002]
[332.78216553 -58.69213104]
[318.46978760 -54.20261383]
[303.53082275 -52.85052109]
[288.64495850 -54.69736099]
[274.48937988 -59.65911865]
[261.70803833 -67.51006317]
[250.88241577 -77.89302826]
[242.50502014 -90.33567047]
[236.95693970 -104.27191162]
[234.49061584 -119.06776428]
[235.21888733 -134.05438232]
[227.94566345 -120.93569183]
[220.67242432 -107.81700134]
[213.39920044 -94.69830322]
[206.12597656 -81.57961273]
[198.85273743 -68.46091461]
[191.67736816 -55.28844070]
[184.60026550 -42.06291199]
[177.52316284 -28.83738518]
[170.44606018 -15.61185837]
[163.36895752 -2.38633060]
[156.29183960 10.83919716]
[149.21473694 24.06472397]
[142.13763428 37.29025269]
[135.06053162 50.51577759]
[127.98342133 63.74130630]
[132.53282166 77.87773895]
[125.54402924 91.39112091]
[110.68559265 96.06708527]
[124.44644928 90.09725952]
[139.26713562 92.40966797]
[150.55529785 102.28778839]
[154.81318665 116.67077637]
[150.72145081 131.10191345]
[139.54794312 141.10954285]
[124.75489807 143.59269714]
[110.92611694 137.78195190]
[102.34658813 125.47782135]
[101.67483521 110.49262238]
[92.89423370 122.65407562]
[84.11363220 134.81553650]
[75.33302307 146.97698975]
[73.52789307 162.69488525]
[59.80456161 168.48448181]
[51.02396011 180.64593506]
[42.24335480 192.80738831]
[39.75709915 201.59695435]
[33.24038315 205.08323669]
[48.20054245 203.99073792]
[59.64115906 213.69187927]
[61.00851822 228.62944031]
[51.51934052 240.24647522]
[36.60945892 241.88822937]
[24.81992722 232.61424255]
[22.90408134 217.73797607]
[12.90590858 228.91995239]
[2.90773702 240.10192871]
[-7.09043503 251.28390503]
[-17.08860779 262.46588135]
[-27.08677864 273.64785767]
[-37.08494949 284.82983398]
[-47.08312225 296.01181030]
[-57.08129501 307.19375610]
[-46.95893478 318.28109741]
[-38.01021194 330.33560181]
[-30.32695389 343.23361206]
[-23.98800659 356.84277344]
[-19.05841827 371.02337646]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[55 205]
[56 204]
[57 203]
[58 202]
[59 201]
[60 200]
[61 199]
[62 198]
[63 197]
[64 190]
[65 188]
[66 187]
[67 186]
[69 184]
[70 183]
[71 182]
[72 181]
[73 171]
[76 168]
[77 167]
[78 166]
[79 165]
[80 164]
[81 163]
[82 162]
[83 161]
[84 160]
[85 159]
[87 158]
[88 157]
[89 156]
[90 155]
[91 154]
[92 153]
[93 125]
[94 124]
[95 123]
[97 121]
[98 120]
[99 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
