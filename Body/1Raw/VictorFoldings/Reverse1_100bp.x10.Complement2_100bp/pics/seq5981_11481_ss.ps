%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[87.33909607 728.22979736]
[72.76121521 724.64788818]
[58.58982849 719.69647217]
[44.95328140 713.42041016]
[31.97507095 705.87646484]
[19.77272987 697.13305664]
[8.45677090 687.26928711]
[-1.87032688 676.37451172]
[-11.11503696 664.54742432]
[-19.19363594 651.89508057]
[-26.03296089 638.53216553]
[-31.57107162 624.57958984]
[-35.75781631 610.16375732]
[-38.55527115 595.41522217]
[-39.93811035 580.46759033]
[-39.89380264 565.45617676]
[-38.42275620 550.51690674]
[-35.53828812 535.78515625]
[-31.26652145 521.39428711]
[-25.64614677 507.47467041]
[-18.72805977 494.15234375]
[-10.57491684 481.54794312]
[-1.26055384 469.77560425]
[9.13067436 458.94201660]
[20.50466156 449.14520264]
[32.75839996 440.47396851]
[45.78091812 433.00677490]
[59.45427704 426.81127930]
[73.65464020 421.94360352]
[88.25341797 418.44781494]
[103.11838531 416.35556030]
[102.44860077 401.37051392]
[101.77881622 386.38549805]
[90.64788818 376.55502319]
[89.75515747 361.36761475]
[100.14172363 349.75912476]
[99.47193909 334.77407837]
[98.80215454 319.78903198]
[98.13237000 304.80401611]
[97.46258545 289.81896973]
[96.79280090 274.83392334]
[88.08044434 266.44216919]
[87.39979553 253.96337891]
[95.66034698 244.05751038]
[95.21373749 229.06416321]
[86.62728882 220.54364014]
[86.13250732 208.05609131]
[94.53962708 198.27430725]
[94.31629944 183.27597046]
[94.09297180 168.27763367]
[93.86964417 153.27929688]
[84.07110596 138.72059631]
[93.17323303 122.71332550]
[92.72663116 107.71997833]
[91.61097717 92.76152802]
[89.82851410 77.86780548]
[88.04605103 62.97409058]
[86.26358032 48.08037186]
[74.78736115 41.02976990]
[69.54380798 28.83487129]
[72.24136353 16.03622818]
[81.67594910 7.26023722]
[80.11542511 -7.65836763]
[78.55490875 -22.57697296]
[76.99438477 -37.49557877]
[65.83526611 -52.14329529]
[73.60090637 -67.88056946]
[71.81844330 -82.77428436]
[70.03598022 -97.66800690]
[68.25350952 -112.56172180]
[66.47104645 -127.45543671]
[64.68858337 -142.34915161]
[62.90611267 -157.24287415]
[60.79148865 -172.09307861]
[58.34576035 -186.89234924]
[55.90003586 -201.69161987]
[53.45430756 -216.49089050]
[51.00857925 -231.29016113]
[41.12472153 -243.64410400]
[46.68331909 -257.46261597]
[44.23759460 -272.26187134]
[29.20448494 -272.21917725]
[14.35922050 -274.58862305]
[0.08632934 -279.30886841]
[-13.24448681 -286.25765991]
[-25.28792953 -295.25497437]
[-35.73204041 -306.06774902]
[-44.30629730 -318.41598511]
[-50.78860092 -331.97973633]
[-55.01105118 -346.40774536]
[-56.86426926 -361.32623291]
[-56.30025482 -376.34881592]
[-53.33361816 -391.08636475]
[-48.04119873 -405.15713501]
[-40.56008911 -418.19665527]
[-31.08406448 -429.86718750]
[-19.85857582 -439.86642456]
[-7.17439270 -447.93536377]
[6.63993597 -453.86499023]
[21.22658539 -457.50170898]
[36.20772552 -458.75134277]
[51.19530869 -457.58151245]
[65.80112457 -454.02255249]
[79.64684296 -448.16656494]
[92.37382507 -440.16531372]
[103.65241241 -430.22601318]
[113.19046783 -418.60614014]
[120.74092865 -405.60665894]
[126.10821533 -391.56427002]
[129.15330505 -376.84274292]
[129.79733276 -361.82336426]
[128.02360535 -346.89520264]
[123.87806702 -332.44491577]
[117.46810150 -318.84683228]
[108.95973969 -306.45312500]
[98.57337189 -295.58483887]
[86.57802582 -286.52349854]
[73.28440857 -279.50381470]
[59.03686523 -274.70761108]
[61.48258972 -259.90832520]
[71.19151306 -248.61293030]
[65.80785370 -233.73588562]
[68.25357819 -218.93661499]
[70.69930267 -204.13734436]
[73.14503479 -189.33807373]
[75.59075928 -174.53880310]
[78.22878265 -172.19931030]
[79.86470795 -168.46585083]
[79.85571289 -163.82330322]
[77.79982758 -159.02534485]
[79.58229828 -144.13162231]
[81.36476135 -129.23789978]
[83.14723206 -114.34418488]
[84.92969513 -99.45046997]
[86.71215820 -84.55675507]
[88.49462891 -69.66303253]
[97.80699921 -61.94252777]
[99.41389465 -49.54891586]
[91.91298676 -39.05609894]
[93.47351074 -24.13749504]
[95.03403473 -9.21889019]
[96.59455872 5.69971418]
[110.09976959 15.72208405]
[112.21946716 32.74623871]
[101.15729523 46.29790878]
[102.93976593 61.19162369]
[104.72222900 76.08534241]
[106.50469971 90.97905731]
[116.60301208 79.88743591]
[131.57946777 79.04734802]
[142.85487366 88.94003296]
[143.97016907 103.89851379]
[134.28645325 115.35388947]
[119.35099792 116.74401093]
[107.71997833 107.27336884]
[108.16658020 122.26672363]
[117.00209808 131.66334534]
[117.06540680 144.16053772]
[108.86798096 153.05596924]
[109.09130859 168.05430603]
[109.31463623 183.05264282]
[109.53796387 198.05097961]
[119.34577179 213.63586426]
[110.20709229 228.61755371]
[110.65369415 243.61091614]
[120.69245148 259.04803467]
[111.77783966 274.16415405]
[112.44762421 289.14916992]
[113.11740875 304.13421631]
[113.78719330 319.11926270]
[114.45697784 334.10430908]
[115.12676239 349.08932495]
[126.50756836 359.72488403]
[126.97335815 374.93139648]
[116.76385498 385.71569824]
[117.43363953 400.70074463]
[118.10342407 415.68579102]
[133.09577942 416.44351196]
[147.94821167 418.62292480]
[162.52622986 422.20428467]
[176.69778442 427.15518188]
[190.33456421 433.43078613]
[203.31304932 440.97424316]
[215.51571655 449.71722412]
[226.83203125 459.58056641]
[237.15953064 470.47497559]
[246.40466309 482.30172729]
[254.48373413 494.95373535]
[261.32354736 508.31643677]
[266.86215210 522.26879883]
[271.04943848 536.68444824]
[273.84741211 551.43286133]
[275.23080444 566.38049316]
[275.18704224 581.39190674]
[273.71655273 596.33123779]
[270.83261108 611.06304932]
[266.56137085 625.45410156]
[260.94149780 639.37390137]
[254.02391052 652.69653320]
[245.87121582 665.30120850]
[236.55728149 677.07385254]
[226.16645813 687.90783691]
[214.79281616 697.70507812]
[202.53939819 706.37677002]
[189.51715088 713.84442139]
[175.84402466 720.04040527]
[161.64382935 724.90863037]
[147.04518127 728.40496826]
[132.18029785 730.49774170]
[117.18378448 731.16802979]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 177]
[32 176]
[33 175]
[36 172]
[37 171]
[38 170]
[39 169]
[40 168]
[41 167]
[44 165]
[45 164]
[48 162]
[49 161]
[50 160]
[51 159]
[53 156]
[54 155]
[55 148]
[56 147]
[57 146]
[58 145]
[62 142]
[63 141]
[64 140]
[65 139]
[67 136]
[68 135]
[69 134]
[70 133]
[71 132]
[72 131]
[73 130]
[74 126]
[75 125]
[76 124]
[77 123]
[78 122]
[80 120]
[81 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
