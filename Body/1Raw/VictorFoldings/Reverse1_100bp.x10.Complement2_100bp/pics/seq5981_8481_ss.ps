%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxUUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGC\
) } def
/len { sequence length } bind def

/coor [
[44.03332901 409.89422607]
[46.43590546 424.76171875]
[45.58579636 439.79803467]
[41.52275848 454.29995728]
[34.43682480 467.58920288]
[24.65942192 479.04415894]
[12.64785480 488.12911987]
[-1.03607285 494.41912842]
[-15.75234032 497.61999512]
[-30.81263924 497.58200073]
[-45.51257324 494.30694580]
[-59.16460037 487.94799805]
[-71.13018799 478.80258179]
[-80.84969330 467.29843140]
[-87.86849976 453.97363281]
[-91.85834503 439.45141602]
[-92.63259888 424.41098022]
[-90.15505981 409.55581665]
[-84.54160309 395.58071899]
[-76.05477905 383.13934326]
[-65.09153748 372.81356812]
[-52.16464233 365.08639526]
[-37.87870789 360.31918335]
[-22.90191841 358.73495483]
[-7.93476248 360.40777588]
[-3.10876465 346.20529175]
[1.71723294 332.00283813]
[-1.51389241 317.46292114]
[10.25199223 306.88586426]
[8.98202324 302.28192139]
[10.59073830 296.83132935]
[15.43889236 292.33612061]
[20.68560982 278.28363037]
[25.93232918 264.23117065]
[31.17904663 250.17869568]
[36.42576599 236.12622070]
[41.67248154 222.07374573]
[46.91920090 208.02128601]
[52.16592026 193.96881104]
[51.03359222 189.32910156]
[52.80387497 183.92881775]
[57.78372192 179.57994080]
[63.44650650 165.68991089]
[69.10929108 151.79989624]
[68.11560822 147.12852478]
[70.04589844 141.78334045]
[75.15301514 137.58467102]
[81.22685242 123.86940002]
[87.30068207 110.15412903]
[83.76766205 99.05642700]
[88.56274414 88.44283295]
[99.22577667 83.75870514]
[105.50313568 70.13539124]
[111.78049469 56.51207352]
[100.01905060 47.09114075]
[90.85977173 35.13623047]
[84.83161926 21.34490585]
[82.28103638 6.52057695]
[83.35198975 -8.47430420]
[87.97791290 -22.76841736]
[95.88575745 -35.53219986]
[106.61217499 -46.02600479]
[119.53061676 -53.64294434]
[133.88793945 -57.94399261]
[148.84834290 -58.68330002]
[163.54196167 -55.82222748]
[169.81933594 -69.44554138]
[176.09669495 -83.06885529]
[182.37405396 -96.69217682]
[186.23835754 -111.18586731]
[179.76310730 -125.62129974]
[188.60501099 -137.60752869]
[189.94325256 -152.54771423]
[191.28147888 -167.48789978]
[192.61972046 -182.42808533]
[191.17030334 -197.35789490]
[186.98329163 -211.76167297]
[182.79627991 -226.16545105]
[178.60926819 -240.56924438]
[174.42225647 -254.97302246]
[159.44047546 -253.57916260]
[144.46568298 -255.04608154]
[130.03918457 -259.32073975]
[116.68251038 -266.24862671]
[104.87847900 -275.57931519]
[95.05381012 -286.97546387]
[87.56365967 -300.02514648]
[82.67878723 -314.25662231]
[80.57577515 -329.15539551]
[81.33065796 -344.18292236]
[84.91613007 -358.79595947]
[91.20259094 -372.46624756]
[99.96279144 -384.69964600]
[110.88004303 -395.05386353]
[123.55970001 -403.15466309]
[137.54341125 -408.70913696]
[152.32565308 -411.51657104]
[167.37208557 -411.47543335]
[182.13874817 -408.58721924]
[196.09187317 -402.95635986]
[208.72705078 -394.78634644]
[219.58753967 -384.37258911]
[228.28071594 -372.09149170]
[234.49232483 -358.38702393]
[237.99784851 -343.75460815]
[238.67054749 -328.72317505]
[236.48611450 -313.83612061]
[231.52349854 -299.63156128]
[223.96209717 -286.62304688]
[214.07527161 -275.28079224]
[202.22039795 -266.01480103]
[188.82603455 -259.16003418]
[193.01304626 -244.75625610]
[197.20005798 -230.35246277]
[201.38706970 -215.94868469]
[205.57408142 -201.54490662]
[208.19371033 -216.31439209]
[214.10513306 -230.10043335]
[222.99826050 -242.17985535]
[234.40655518 -251.91899109]
[247.73156738 -258.80694580]
[262.27429199 -262.48239136]
[277.27185059 -262.75253296]
[291.93753052 -259.60317993]
[305.50195312 -253.19955444]
[317.25357056 -243.87756348]
[326.57592773 -232.12623596]
[332.97998047 -218.56201172]
[336.12979126 -203.89645386]
[335.86010742 -188.89888000]
[332.18511963 -174.35603333]
[325.29757690 -161.03080750]
[315.55877686 -149.62220764]
[303.47964478 -140.72871399]
[289.69378662 -134.81686401]
[274.92437744 -132.19676208]
[259.94622803 -133.00588989]
[245.54501343 -137.20176697]
[232.47624207 -144.56430054]
[221.42543030 -154.70727539]
[212.97232056 -167.09860229]
[207.55990601 -181.08984375]
[206.22166443 -166.14967346]
[204.88343811 -151.20948792]
[203.54519653 -136.26930237]
[210.11618042 -122.90248871]
[201.17854309 -109.84763336]
[209.03247070 -122.62714386]
[219.78221130 -133.08865356]
[232.77040100 -140.59242249]
[247.20283508 -144.67962646]
[262.19692993 -145.10029602]
[276.83581543 -141.82873535]
[290.22430420 -135.06498718]
[301.54370117 -125.22265625]
[310.10180664 -112.90361023]
[315.37527466 -98.86116028]
[317.04165649 -83.95401001]
[314.99905396 -69.09373474]
[309.37237549 -55.18904877]
[300.50564575 -43.09022522]
[288.94113159 -33.53711700]
[275.38598633 -27.11389732]
[260.66909790 -24.21334839]
[245.69041443 -25.01283836]
[231.36589050 -29.46348190]
[218.57148743 -37.29311752]
[208.08958435 -48.02296448]
[200.56114197 -60.99687958]
[196.44653320 -75.42150879]
[195.99736023 -90.41481781]
[189.72000122 -76.79149628]
[183.44264221 -63.16818237]
[177.16528320 -49.54486465]
[188.88706970 -40.23422623]
[198.04531860 -28.38151741]
[204.10421753 -14.67306614]
[206.70759583 0.09602980]
[205.69987488 15.06801891]
[201.13528442 29.37231064]
[193.27500916 42.17609787]
[182.57226562 52.73284149]
[169.64614868 60.42580032]
[155.24580383 64.80406952]
[140.20704651 65.60898590]
[125.40380859 62.78943253]
[119.12644958 76.41275024]
[112.84909058 90.03606415]
[114.81768036 106.69442749]
[101.01595306 116.22796631]
[94.94211578 129.94323730]
[88.86827850 143.65849304]
[82.99932098 157.46267700]
[77.33653259 171.35270691]
[71.67375183 185.24273682]
[66.21839142 199.21553040]
[60.97167206 213.26800537]
[55.72495270 227.32046509]
[50.47823715 241.37294006]
[45.23151779 255.42541504]
[39.98479843 269.47787476]
[34.73808289 283.53036499]
[29.49136353 297.58282471]
[24.45444679 311.71185303]
[27.34038544 327.26763916]
[15.91968822 336.82885742]
[11.09369087 351.03131104]
[6.26769304 365.23376465]
[19.15544891 373.02606201]
[30.06647110 383.40698242]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 208]
[26 207]
[27 206]
[29 204]
[32 203]
[33 202]
[34 201]
[35 200]
[36 199]
[37 198]
[38 197]
[39 196]
[42 195]
[43 194]
[44 193]
[47 192]
[48 191]
[49 190]
[52 188]
[53 187]
[54 186]
[66 174]
[67 173]
[68 172]
[69 171]
[70 147]
[72 145]
[73 144]
[74 143]
[75 142]
[76 116]
[77 115]
[78 114]
[79 113]
[80 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
