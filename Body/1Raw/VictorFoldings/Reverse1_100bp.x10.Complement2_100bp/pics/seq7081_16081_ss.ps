%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[-43.33665848 548.03070068]
[-37.58100510 561.93286133]
[-34.56061554 576.67303467]
[-34.38468170 591.71850586]
[-37.05956268 606.52532959]
[-42.48856354 620.55822754]
[-50.47542953 633.30993652]
[-60.73143387 644.31951904]
[-72.88584137 653.18896484]
[-86.49925995 659.59765625]
[-101.07958984 663.31390381]
[-116.09975433 664.20336914]
[-131.01678467 662.23388672]
[-145.29144287 657.47674561]
[-158.40769958 650.10375977]
[-169.89141846 640.38159180]
[-179.32746887 628.66162109]
[-186.37474060 615.36755371]
[-190.77847290 600.97998047]
[-192.37950134 586.01892090]
[-191.11991882 571.02520752]
[-187.04527283 556.54095459]
[-180.30284119 543.08972168]
[-171.13639832 531.15771484]
[-159.87725830 521.17633057]
[-146.93247986 513.50628662]
[-132.76995850 508.42498779]
[-117.90170288 506.11602783]
[-102.86516571 506.66293335]
[-88.20391846 510.04586792]
[-82.13008118 496.33059692]
[-76.05624390 482.61532593]
[-69.98241425 468.90005493]
[-70.14823151 461.51126099]
[-63.71469498 455.02685547]
[-57.43733215 441.40353394]
[-51.15997314 427.78024292]
[-44.88261414 414.15692139]
[-38.60525131 400.53359985]
[-40.30618668 385.73641968]
[-27.50376320 376.44082642]
[-21.22640228 362.81750488]
[-14.94904137 349.19418335]
[-8.67168045 335.57086182]
[-2.39432001 321.94754028]
[3.88304067 308.32424927]
[10.16040134 294.70092773]
[16.43776131 281.07760620]
[11.05502224 267.23703003]
[17.22708893 253.33161926]
[31.78086090 247.77954102]
[38.05822372 234.15623474]
[44.33558273 220.53291321]
[50.10161591 206.68542480]
[55.34833527 192.63296509]
[60.59505463 178.58049011]
[65.84177399 164.52801514]
[64.70944214 159.88830566]
[66.47972870 154.48802185]
[71.45957184 150.13914490]
[77.12236023 136.24913025]
[82.78514862 122.35909271]
[88.44792938 108.46907043]
[86.73600006 94.59243774]
[97.66204071 85.86814117]
[103.32482910 71.97811890]
[106.21009827 57.25822449]
[106.21009827 42.25822449]
[106.21009827 27.25822639]
[106.21009827 12.25822639]
[103.24053955 6.35117674]
[103.63996124 0.68218338]
[106.44007874 -3.18671727]
[106.88668060 -18.18006706]
[104.01416779 -26.85108185]
[107.45320892 -33.39285660]
[108.12299347 -48.37789536]
[108.79277802 -63.36293411]
[100.37759399 -50.94581985]
[87.68265533 -42.95591736]
[72.84728241 -40.73965836]
[58.37150192 -44.67052460]
[46.69473267 -54.08609772]
[39.78470993 -67.39968872]
[38.80590439 -82.36771393]
[43.92325211 -96.46781158]
[54.27439880 -107.32386017]
[68.11499023 -113.10643005]
[83.11264038 -112.84104919]
[96.73999023 -106.57244110]
[106.70058441 -95.35697937]
[111.31606293 -81.08301544]
[114.85573578 -95.65939331]
[118.39540863 -110.23577118]
[121.93508148 -124.81214142]
[120.91912842 -133.88990784]
[125.63748169 -139.57839966]
[129.39378357 -154.10044861]
[133.15008545 -168.62251282]
[136.90638733 -183.14457703]
[123.47476196 -189.95674133]
[111.82186127 -199.49739075]
[102.49271393 -211.32028198]
[95.92366028 -224.87246704]
[92.42194366 -239.52006531]
[92.15135193 -254.57798767]
[95.12453461 -269.34191895]
[101.20243073 -283.12136841]
[110.10076904 -295.27185059]
[121.40335846 -305.22500610]
[134.58155823 -312.51535034]
[149.01899719 -316.80191040]
[164.04040527 -317.88415527]
[178.94320679 -315.71151733]
[193.03038025 -310.38555908]
[205.64303589 -302.15542603]
[216.19125366 -291.40603638]
[224.18167114 -278.64019775]
[229.24058533 -264.45492554]
[231.13134766 -249.51374817]
[229.76554871 -234.51545715]
[225.20706177 -220.16156006]
[217.66909790 -207.12342834]
[207.50421143 -196.01084900]
[195.18783569 -187.34361267]
[181.29603577 -181.52706909]
[166.47856140 -178.83329773]
[151.42845154 -179.38827515]
[147.67214966 -164.86621094]
[143.91584778 -150.34414673]
[140.15954590 -135.82209778]
[136.51145935 -121.27246857]
[132.97178650 -106.69609833]
[129.43211365 -92.11972046]
[125.89244080 -77.54334259]
[123.77781677 -62.69314957]
[123.10803223 -47.70811081]
[122.43824768 -32.72307205]
[121.88003540 -17.73346138]
[121.43342590 -2.74011135]
[121.21009827 12.25822639]
[121.21009827 27.25822639]
[121.21009827 42.25822449]
[121.21009827 57.25822449]
[127.83925629 43.80258179]
[137.26071167 32.13055801]
[149.01477051 22.81165695]
[162.52793884 16.30056572]
[177.14086914 12.91497898]
[192.14057922 12.82008362]
[206.79518127 16.02051163]
[220.38964844 22.36010742]
[232.26066589 31.52954674]
[241.82905579 43.08143234]
[248.62792969 56.45212555]
[252.32554626 70.98923492]
[252.74151611 85.98346710]
[249.85552979 100.70321655]
[243.80839539 114.43027496]
[234.89517212 126.49487305]
[223.55076599 136.30834961]
[210.32867432 143.39187622]
[195.87405396 147.39985657]
[180.89215088 148.13668823]
[166.11399841 145.56646729]
[152.26063538 139.81457520]
[140.00799561 131.16165161]
[129.95393372 120.02991486]
[122.58898163 106.96249390]
[118.27250671 92.59697723]
[117.21485138 77.64090729]
[111.55207062 91.53092957]
[113.26399994 105.40756226]
[102.33795929 114.13185883]
[96.67517090 128.02188110]
[91.01238251 141.91191101]
[85.34960175 155.80194092]
[79.89424133 169.77473450]
[74.64752197 183.82720947]
[69.40080261 197.87966919]
[64.15409088 211.93214417]
[78.67607117 208.17556763]
[90.75853729 217.06454468]
[91.49474335 232.04646301]
[80.34198761 242.07720947]
[65.52165985 239.76249695]
[57.95890045 226.81027222]
[51.68153763 240.43359375]
[45.40417862 254.05691528]
[50.63973236 268.72750854]
[44.07952499 282.45407104]
[30.06107903 287.35494995]
[23.78371811 300.97827148]
[17.50635719 314.60159302]
[11.22899628 328.22491455]
[4.95163536 341.84823608]
[-1.32572520 355.47155762]
[-7.60308599 369.09484863]
[-13.88044643 382.71817017]
[-12.62851143 398.48977661]
[-24.98193550 406.81097412]
[-31.25929642 420.43426514]
[-37.53665543 434.05758667]
[-43.81401825 447.68090820]
[-50.09137726 461.30422974]
[-56.26714706 474.97390747]
[-62.34098053 488.68914795]
[-68.41481781 502.40441895]
[-74.48864746 516.11968994]
[-62.13016891 524.70251465]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 209]
[31 208]
[32 207]
[33 206]
[35 205]
[36 204]
[37 203]
[38 202]
[39 201]
[41 199]
[42 198]
[43 197]
[44 196]
[45 195]
[46 194]
[47 193]
[48 192]
[51 189]
[52 188]
[53 187]
[54 181]
[55 180]
[56 179]
[57 178]
[60 177]
[61 176]
[62 175]
[63 174]
[65 172]
[66 171]
[67 144]
[68 143]
[69 142]
[70 141]
[73 140]
[74 139]
[76 138]
[77 137]
[78 136]
[92 135]
[93 134]
[94 133]
[95 132]
[97 131]
[98 130]
[99 129]
[100 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
