%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxCCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGA\
) } def
/len { sequence length } bind def

/coor [
[147.05984497 473.68600464]
[143.08775330 459.22146606]
[139.11564636 444.75695801]
[135.14355469 430.29241943]
[131.17146301 415.82791138]
[118.03934479 404.18682861]
[122.84290314 386.41024780]
[118.65589142 372.00646973]
[114.14826965 357.69976807]
[109.32226562 343.49731445]
[104.49626923 329.29486084]
[99.67027283 315.09240723]
[88.24958038 305.53118896]
[91.13551331 289.97540283]
[89.17798615 304.84713745]
[83.88803864 318.88339233]
[75.54316711 331.34786987]
[64.58113098 341.58670044]
[51.57696915 349.06277466]
[37.21285629 353.38394165]
[22.24231148 354.32345581]
[7.45065308 351.83212280]
[-6.38617563 346.04055786]
[-18.54232216 337.25259399]
[-28.38010216 325.92926025]
[-35.38344193 312.66452026]
[-39.18495941 298.15423584]
[-39.58523941 283.15957642]
[-36.56327820 268.46713257]
[-30.27760696 254.84765625]
[-21.05795860 243.01557922]
[-9.38797379 233.59158325]
[4.12015963 227.07006836]
[18.75783348 223.79309082]
[33.75718689 223.93260193]
[48.33137894 227.48124695]
[61.71587753 234.25288391]
[73.20856476 243.89230347]
[82.20655060 255.89381409]
[88.23830414 269.62942505]
[88.90809631 254.64439392]
[89.46630096 239.65478516]
[82.11137390 226.70278931]
[90.25612640 213.13909912]
[90.70272827 198.14575195]
[91.14933777 183.15240479]
[91.48431396 168.15614319]
[91.70764160 153.15780640]
[91.93096924 138.15946960]
[92.15429688 123.16113281]
[92.37762451 108.16278839]
[92.48928833 93.16320801]
[92.48928833 78.16320801]
[92.48928833 63.16320801]
[92.48928833 48.16320801]
[91.81950378 33.17816925]
[90.48126984 18.23798370]
[89.14303589 3.29779887]
[87.80480194 -11.64238644]
[86.46656799 -26.58257103]
[77.52893066 -39.63742447]
[84.09990692 -53.00423431]
[82.76167297 -67.94441986]
[81.42343903 -82.88460541]
[79.75189972 -97.79117584]
[70.24024200 -110.43392181]
[76.20780945 -124.08081055]
[73.76207733 -138.88008118]
[70.87680817 -153.59997559]
[67.99153137 -168.31985474]
[65.10626221 -183.03974915]
[62.22098923 -197.75964355]
[59.33571625 -212.47953796]
[56.34094238 -227.17753601]
[53.23683167 -241.85284424]
[50.13272095 -256.52813721]
[47.02861023 -271.20346069]
[43.92449951 -285.87875366]
[39.14392853 -271.66094971]
[29.34438896 -260.30447388]
[15.97958279 -253.49404907]
[1.03210235 -252.23992920]
[-13.28068352 -256.72814941]
[-24.83555794 -266.29293823]
[-31.91842461 -279.51538086]
[-33.47858047 -294.43402100]
[-29.28458786 -308.83575439]
[-19.95860100 -320.58419800]
[-6.88407230 -327.93652344]
[7.99946833 -329.80206299]
[22.48413658 -325.90408325]
[34.42121887 -316.82080078]
[42.03927994 -303.90145874]
[42.03927994 -318.90145874]
[42.03927994 -333.90145874]
[42.03927994 -348.90145874]
[34.30197906 -362.70162964]
[42.03927994 -375.42889404]
[42.03927994 -390.42889404]
[42.03927994 -405.42889404]
[28.69815254 -413.03875732]
[20.96318245 -426.30773926]
[20.91504097 -441.66656494]
[28.56667519 -454.98376465]
[41.85983276 -462.67709351]
[57.21872711 -462.67709351]
[70.51188660 -454.98376465]
[78.16352081 -441.66656494]
[78.11537933 -426.30773926]
[70.38040924 -413.03875732]
[57.03927994 -405.42889404]
[57.03927994 -390.42889404]
[57.03927994 -375.42889404]
[64.77658081 -362.70162964]
[57.03927994 -348.90145874]
[57.03927994 -333.90145874]
[57.03927994 -318.90145874]
[57.03927994 -303.90145874]
[58.59980392 -288.98284912]
[61.70391464 -274.30755615]
[64.80802155 -259.63226318]
[67.91213226 -244.95695496]
[71.01624298 -230.28164673]
[75.47588348 -224.38815308]
[74.05561066 -215.36480713]
[76.94087982 -200.64491272]
[79.82614899 -185.92503357]
[82.71142578 -171.20513916]
[85.59669495 -156.48524475]
[88.48197174 -141.76535034]
[90.73048401 -140.09133911]
[92.45138550 -137.42579651]
[93.26368713 -133.96522522]
[92.86450958 -130.04028320]
[91.07333374 -126.08482361]
[100.44165039 -114.50535583]
[94.61742401 -99.79518890]
[97.18461609 -97.37819672]
[98.70866394 -93.59767914]
[98.56144714 -88.95745850]
[96.36362457 -84.22283936]
[97.70185852 -69.28265381]
[99.04009247 -54.34246826]
[107.88201141 -42.35623550]
[101.40675354 -27.92080498]
[102.74498749 -12.98062038]
[104.08322144 1.95956469]
[105.42145538 16.89974976]
[106.75968933 31.83993530]
[117.18376160 21.05389404]
[132.17858887 20.66008377]
[143.15446472 30.88409424]
[143.82388306 45.86914825]
[133.80339050 57.03112793]
[118.83318329 57.97594452]
[107.48928833 48.16320801]
[107.48928833 63.16320801]
[107.48928833 78.16320801]
[107.48928833 93.16320801]
[110.63848877 100.58312225]
[107.37596130 108.38612366]
[107.15263367 123.38446045]
[106.92930603 138.38279724]
[106.70597839 153.38113403]
[106.48265076 168.37947083]
[109.48394012 177.00675964]
[106.14268494 183.59901428]
[105.69608307 198.59236145]
[105.24947357 213.58570862]
[112.57246399 227.61012268]
[104.45965576 240.10139465]
[107.33216858 248.77239990]
[103.89313507 255.31417847]
[103.22334290 270.29922485]
[105.33796692 285.14941406]
[117.10385132 295.72650146]
[113.87272644 310.26641846]
[118.69873047 324.46887207]
[123.52472687 338.67132568]
[128.35072327 352.87377930]
[132.27746582 356.31292725]
[134.29100037 360.49609375]
[134.42829895 364.56994629]
[133.05967712 367.81945801]
[137.24668884 382.22323608]
[148.15377808 389.10784912]
[151.34461975 401.19100952]
[145.63598633 411.85580444]
[149.60807800 426.32031250]
[153.58016968 440.78485107]
[157.55227661 455.24935913]
[161.52436829 469.71389771]
[176.63342285 470.16958618]
[190.93638611 475.06005859]
[203.16143799 483.95046997]
[212.22152710 496.05032349]
[217.31103516 510.28366089]
[217.97741699 525.38488770]
[214.16142273 540.01123047]
[206.20236206 552.86212158]
[194.80793762 562.79479980]
[180.99134827 568.92614746]
[165.98115540 570.71093750]
[151.11204529 567.99041748]
[137.70617676 561.00659180]
[126.95558929 550.38037109]
[119.81621552 537.05670166]
[116.92288971 522.22021484]
[118.53288269 507.19027710]
[124.50302887 493.30328369]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 192]
[2 191]
[3 190]
[4 189]
[5 188]
[7 185]
[8 184]
[9 180]
[10 179]
[11 178]
[12 177]
[14 175]
[40 174]
[41 173]
[42 171]
[44 169]
[45 168]
[46 167]
[47 165]
[48 164]
[49 163]
[50 162]
[51 161]
[52 159]
[53 158]
[54 157]
[55 156]
[56 149]
[57 148]
[58 147]
[59 146]
[60 145]
[62 143]
[63 142]
[64 141]
[65 137]
[67 135]
[68 130]
[69 129]
[70 128]
[71 127]
[72 126]
[73 125]
[74 123]
[75 122]
[76 121]
[77 120]
[78 119]
[93 118]
[94 117]
[95 116]
[96 115]
[98 113]
[99 112]
[100 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
