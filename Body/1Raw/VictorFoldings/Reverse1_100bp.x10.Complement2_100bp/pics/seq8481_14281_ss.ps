%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[93.17446899 591.59094238]
[95.55799866 576.13610840]
[107.35208893 565.86804199]
[106.90548706 550.87469482]
[106.45887756 535.88134766]
[106.01226807 520.88800049]
[105.56566620 505.89462280]
[105.11905670 490.90127563]
[93.43881989 484.43490601]
[86.42273712 472.94931030]
[85.99470520 459.38882446]
[92.37341309 447.29211426]
[103.98735046 439.86868286]
[103.76402283 424.87036133]
[91.20681763 413.68307495]
[90.61439514 396.53768921]
[102.84146881 384.02697754]
[102.39486694 369.03363037]
[101.94825745 354.04028320]
[101.50164795 339.04693604]
[101.05504608 324.05358887]
[100.60843658 309.06024170]
[92.49562836 296.56896973]
[99.81861877 282.54455566]
[91.70581055 270.05328369]
[99.02880096 256.02886963]
[98.58219147 241.03552246]
[88.56798553 226.62432861]
[97.43077850 210.48330688]
[89.13288879 198.11421204]
[96.24626160 183.98231506]
[95.57647705 168.99728394]
[94.90669250 154.01223755]
[94.23690796 139.02720642]
[85.93902588 126.65811920]
[93.05239868 112.52622223]
[85.69034576 100.63959503]
[91.96256256 88.14356232]
[91.29277802 73.15852356]
[84.88742065 86.72212982]
[74.65003204 97.68551636]
[61.55637741 105.00373077]
[46.85446167 107.97924042]
[31.94557571 106.32843781]
[18.25074005 100.20867920]
[7.07526207 90.20324707]
[-0.51568645 77.26580048]
[-3.79858327 62.62945175]
[-2.46052361 47.68925095]
[3.37095714 33.86920166]
[13.14003944 22.48653603]
[25.91559601 14.62618351]
[40.47994232 11.03734112]
[55.44490051 12.06207371]
[69.38410187 17.60271072]
[80.96895599 27.13115311]
[89.09526062 39.73921204]
[92.98859406 54.22629547]
[96.31085205 39.59883499]
[99.63311005 24.97137642]
[102.95537567 10.34391594]
[89.71891022 17.40054893]
[75.32995605 13.16284752]
[68.03116608 0.05835947]
[72.00360870 -14.40606880]
[84.97169495 -21.94455719]
[99.50671387 -18.23871613]
[107.28219604 -5.41235781]
[111.89620209 -19.68509102]
[116.51021576 -33.95782471]
[121.12422180 -48.23055649]
[120.78626251 -57.35873413]
[125.91463470 -62.68053436]
[130.74063110 -76.88298798]
[127.85469818 -92.43875885]
[139.27539062 -101.99997711]
[144.10139465 -116.20243835]
[148.92738342 -130.40489197]
[153.75338745 -144.60734558]
[147.01998901 -158.65367126]
[152.11654663 -172.98823547]
[165.54907227 -179.32093811]
[170.37506104 -193.52339172]
[175.20106506 -207.72584534]
[177.97666931 -222.46681213]
[178.64645386 -237.45184326]
[170.53430176 -247.47959900]
[171.40066528 -259.94686890]
[180.23699951 -268.20797729]
[181.12982178 -283.18139648]
[182.02262878 -298.15478516]
[182.91545105 -313.12820435]
[183.80827332 -328.10159302]
[184.70108032 -343.07501221]
[185.37086487 -358.06005859]
[185.81747437 -373.05340576]
[171.45269775 -377.72564697]
[158.98689270 -386.25677490]
[149.43061829 -397.95526123]
[143.55854797 -411.87271118]
[141.84671021 -426.88092041]
[144.43386841 -441.76324463]
[151.11029053 -455.31320190]
[161.33477783 -466.43243408]
[174.27844238 -474.21948242]
[188.89201355 -478.04309082]
[203.99082947 -477.59335327]
[218.35090637 -472.90667725]
[230.80813599 -464.36300659]
[240.35266113 -452.65496826]
[246.21073914 -438.73159790]
[247.90750122 -423.72167969]
[245.30538940 -408.84197998]
[238.61535645 -395.29870605]
[228.37971497 -384.18978882]
[215.42822266 -376.41574097]
[200.81082153 -372.60678101]
[200.36421204 -357.61343384]
[202.92909241 -353.58474731]
[202.99038696 -347.90200806]
[199.67448425 -342.18218994]
[198.78167725 -327.20880127]
[197.88885498 -312.23538208]
[196.99603271 -297.26196289]
[196.10322571 -282.28857422]
[195.21040344 -267.31515503]
[203.89898682 -252.06800842]
[193.63150024 -236.78205872]
[192.96171570 -221.79702759]
[200.45878601 -234.78909302]
[211.41133118 -245.03807068]
[224.87184143 -251.65734863]
[239.67585754 -254.07424927]
[254.54264832 -252.07972717]
[268.18612671 -245.84631348]
[279.42599487 -235.91323853]
[287.28985596 -223.13984680]
[291.09744263 -208.63114929]
[290.51934814 -193.64230347]
[285.60556030 -179.46997070]
[276.78121948 -167.34022522]
[264.80969238 -158.30238342]
[250.72662354 -153.13833618]
[235.75035095 -152.29483032]
[221.17648315 -155.84480286]
[208.26579285 -163.48117065]
[198.13519287 -174.54330444]
[191.66107178 -188.07421875]
[189.40351868 -202.89984131]
[184.57751465 -188.69738770]
[179.75152588 -174.49493408]
[186.54495239 -161.28944397]
[181.85302734 -146.81739807]
[167.95584106 -139.78135681]
[163.12983704 -125.57889557]
[158.30384827 -111.37644196]
[153.47784424 -97.17398071]
[156.70896912 -82.63407135]
[144.94308472 -72.05699158]
[140.11709595 -57.85453796]
[135.39695740 -43.61654663]
[130.78294373 -29.34381485]
[126.16893768 -15.07108212]
[121.55493164 -0.79834831]
[117.58283234 13.66617584]
[114.26057434 28.29363632]
[110.93831635 42.92109680]
[107.61605072 57.54855728]
[106.27781677 72.48873901]
[106.94760132 87.47377777]
[114.30965424 99.36040497]
[108.03743744 111.85643768]
[116.38322449 125.29735565]
[109.22194672 138.35742188]
[109.89173126 153.34245300]
[110.56151581 168.32749939]
[111.23130035 183.31253052]
[119.57709503 196.75344849]
[112.41581726 209.81352234]
[121.39025116 219.07756042]
[121.63961792 231.57241821]
[113.57553864 240.58891296]
[114.02214813 255.58226013]
[122.16690063 269.14593506]
[114.81196594 282.09796143]
[122.95671844 295.66162109]
[115.60179138 308.61361694]
[116.04839325 323.60699463]
[116.49500275 338.60034180]
[116.94160461 353.59368896]
[117.38821411 368.58703613]
[117.83481598 383.58038330]
[128.63624573 391.62673950]
[132.77091980 404.24081421]
[128.94229126 416.74774170]
[118.76235962 424.64703369]
[118.98568726 439.64535522]
[132.94740295 449.19348145]
[138.41264343 465.02487183]
[133.41479492 480.83572388]
[120.11241150 490.45468140]
[120.55901337 505.44802856]
[121.00562286 520.44134521]
[121.45222473 535.43469238]
[121.89883423 550.42803955]
[122.34543610 565.42144775]
[134.72978210 574.96929932]
[138.02897644 590.25488281]
[130.68524170 604.06079102]
[116.16604614 609.86834717]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 206]
[4 205]
[5 204]
[6 203]
[7 202]
[8 201]
[13 197]
[14 196]
[17 192]
[18 191]
[19 190]
[20 189]
[21 188]
[22 187]
[24 185]
[26 183]
[27 182]
[29 179]
[31 177]
[32 176]
[33 175]
[34 174]
[36 172]
[38 170]
[39 169]
[58 168]
[59 167]
[60 166]
[61 165]
[68 164]
[69 163]
[70 162]
[71 161]
[73 160]
[74 159]
[76 157]
[77 156]
[78 155]
[79 154]
[82 151]
[83 150]
[84 149]
[85 129]
[86 128]
[89 126]
[90 125]
[91 124]
[92 123]
[93 122]
[94 121]
[95 118]
[96 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
