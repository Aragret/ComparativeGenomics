%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[71.14659882 452.43740845]
[67.24510193 467.06811523]
[58.80235291 479.63787842]
[46.73415756 488.78320312]
[32.34957886 493.51211548]
[17.20895386 493.31167603]
[2.95462155 488.20355225]
[-8.86721420 478.74191284]
[-16.97420883 465.95303345]
[-20.48697853 451.22418213]
[-19.02448082 436.15301514]
[-12.74535847 422.37435913]
[-2.33072376 411.38281250]
[11.08972263 404.37066650]
[26.06023026 402.09851074]
[28.72602463 387.33731079]
[31.39182091 372.57608032]
[34.05761719 357.81484985]
[32.57189941 355.43771362]
[31.93828011 352.32885742]
[32.44018555 348.80981445]
[34.23949051 345.29882812]
[37.34656906 342.26568604]
[40.88624191 327.68930054]
[44.42591476 313.11294556]
[47.96558380 298.53656006]
[51.50525665 283.96017456]
[46.98983002 269.76651001]
[57.76515579 258.18191528]
[61.30482864 243.60554504]
[64.84449768 229.02915955]
[55.48891449 215.05377197]
[59.20891571 198.30633545]
[74.17933655 189.25614929]
[77.50159454 174.62869263]
[80.60570526 159.95338440]
[83.49098206 145.23350525]
[86.37625122 130.51361084]
[89.26152802 115.79371643]
[81.26529694 103.71039581]
[84.05237579 89.49145508]
[96.01858521 81.32101440]
[98.90385437 66.60112000]
[101.12897491 51.76707840]
[102.68949890 36.84847260]
[104.25001526 21.92986870]
[105.81053925 7.01126289]
[94.21350861 16.52487755]
[79.21356964 16.48406219]
[67.66847992 6.90747643]
[64.85651398 -7.82659388]
[72.06325531 -20.98192978]
[85.99388123 -26.54409027]
[100.27950287 -21.97012711]
[108.38932800 -9.34939194]
[111.49343872 -24.02469444]
[114.59754944 -38.69999695]
[102.12051392 -47.33708572]
[93.92292786 -60.05881882]
[91.22778320 -74.90973663]
[94.41514587 -89.62123871]
[102.96887970 -101.95811462]
[115.55993652 -110.05816650]
[130.25277710 -112.71324921]
[133.35688782 -127.38854980]
[136.46099854 -142.06384277]
[123.93715668 -133.80834961]
[109.02285004 -135.40946960]
[98.53671265 -146.13517761]
[97.27285767 -161.08183289]
[105.80911255 -173.41603088]
[120.24280548 -177.49874878]
[133.97505188 -171.46339417]
[140.72787476 -158.06744385]
[137.61065674 -173.57852173]
[148.88774109 -183.30871582]
[153.50173950 -197.58145142]
[158.11575317 -211.85418701]
[162.72976685 -226.12692261]
[167.34378052 -240.39965820]
[171.95777893 -254.67237854]
[176.57179260 -268.94512939]
[162.76792908 -274.84161377]
[149.55744934 -281.96890259]
[137.04983521 -290.26800537]
[125.34873199 -299.67010498]
[114.55110168 -310.09729004]
[104.74639893 -321.46316528]
[96.01589203 -333.67355347]
[88.43192291 -346.62725830]
[82.05732727 -360.21694946]
[76.94493103 -374.33001709]
[73.13710022 -388.84951782]
[70.66539001 -403.65512085]
[69.55027771 -418.62414551]
[69.80100250 -433.63256836]
[71.41548920 -448.55596924]
[74.38037109 -463.27075195]
[78.67105865 -477.65496826]
[84.25201416 -491.58938599]
[91.07698059 -504.95855713]
[99.08940125 -517.65173340]
[108.22289276 -529.56365967]
[118.40176392 -540.59570312]
[129.54167175 -550.65643311]
[141.55029297 -559.66241455]
[154.32814026 -567.53912354]
[167.76931763 -574.22119141]
[181.76243591 -579.65325928]
[196.19154358 -583.79040527]
[210.93708801 -586.59826660]
[225.87687683 -588.05358887]
[240.88711548 -588.14434814]
[255.84339905 -586.86975098]
[270.62182617 -584.24035645]
[285.09991455 -580.27801514]
[299.15768433 -575.01544189]
[312.67864990 -568.49639893]
[325.55078125 -560.77478027]
[337.66741943 -551.91461182]
[348.92813110 -541.98931885]
[359.23965454 -531.08111572]
[368.51647949 -519.28045654]
[376.68179321 -506.68511963]
[383.66787720 -493.39944458]
[389.41690063 -479.53350830]
[393.88119507 -465.20220947]
[397.02374268 -450.52435303]
[398.81854248 -435.62155151]
[399.25070190 -420.61727905]
[398.31665039 -405.63586426]
[396.02410889 -390.80145264]
[392.39212036 -376.23696899]
[387.45071411 -362.06314087]
[381.24087524 -348.39736938]
[373.81408691 -335.35290527]
[365.23184204 -323.03787231]
[355.56527710 -311.55429077]
[344.89447021 -300.99731445]
[333.30789185 -291.45443726]
[320.90155029 -283.00473022]
[307.77819824 -275.71823120]
[294.04663086 -269.65527344]
[279.82061768 -264.86614990]
[265.21804810 -261.39053345]
[250.35990906 -259.25720215]
[235.36933899 -258.48382568]
[220.37055969 -259.07684326]
[205.48783875 -261.03134155]
[190.84452820 -264.33111572]
[186.23051453 -250.05838013]
[181.61650085 -235.78564453]
[177.00250244 -221.51290894]
[172.38848877 -207.24017334]
[167.77447510 -192.96743774]
[163.16047668 -178.69470215]
[166.60771179 -164.20451355]
[155.00061035 -153.45343018]
[151.13630676 -138.95974731]
[148.03219604 -124.28443909]
[144.92808533 -109.60913849]
[157.28741455 -101.23199463]
[165.52015686 -88.72731018]
[168.34580994 -73.98348236]
[165.30316162 -59.24136734]
[156.82537842 -46.75373077]
[144.17858887 -38.44098663]
[129.27285767 -35.59588623]
[126.16874695 -20.92058372]
[123.06463623 -6.24528170]
[120.72914886 8.57178593]
[119.16862488 23.49039078]
[117.60810089 38.40899658]
[116.04757690 53.32759857]
[128.35169983 44.74806595]
[143.14227295 47.24588394]
[151.94657898 59.39019775]
[149.72109985 74.22418976]
[137.74070740 83.25027466]
[122.86830902 81.29790497]
[113.62374878 69.48639679]
[110.73847198 84.20628357]
[118.73470306 96.28960419]
[115.94762421 110.50854492]
[103.98141479 118.67898560]
[101.09614563 133.39888000]
[98.21086884 148.11877441]
[95.32559967 162.83866882]
[97.10347748 169.20660400]
[95.62107086 174.69290161]
[92.12905884 177.95095825]
[88.80680084 192.57841492]
[97.24909973 203.07327271]
[98.09321594 216.32083130]
[91.25457764 227.47050476]
[79.42087555 232.56883240]
[75.88120270 247.14521790]
[72.34152985 261.72158813]
[76.60377502 276.95785522]
[66.08163452 287.49984741]
[62.54196167 302.07623291]
[59.00228882 316.65261841]
[55.46261597 331.22897339]
[51.92294312 345.80535889]
[48.81883240 360.48065186]
[46.15303802 375.24188232]
[43.48724365 390.00308228]
[40.82144547 404.76431274]
[54.05153656 412.12933350]
[64.17150879 423.39276123]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 208]
[16 207]
[17 206]
[18 205]
[23 204]
[24 203]
[25 202]
[26 201]
[27 200]
[29 198]
[30 197]
[31 196]
[34 192]
[35 191]
[36 188]
[37 187]
[38 186]
[39 185]
[42 182]
[43 181]
[44 174]
[45 173]
[46 172]
[47 171]
[55 170]
[56 169]
[57 168]
[64 161]
[65 160]
[66 159]
[74 158]
[76 156]
[77 155]
[78 154]
[79 153]
[80 152]
[81 151]
[82 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
