%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUCAUCUCCCUACUACGAUUAUUAAUCCGACACCCACCAACACAACUAAGUUUAAUACACAAAAAACCUUUCAGUACAGUCACCAUCAUUAUAUUAACxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[190.28999329 583.04589844]
[188.30648804 568.16088867]
[188.03271484 553.14678955]
[189.47222900 538.19940186]
[192.60627747 523.51348877]
[197.39398193 509.28057861]
[203.77294922 495.68621826]
[211.66001892 482.90765381]
[220.95233154 471.11145020]
[231.52877808 460.45138550]
[243.25146484 451.06649780]
[255.96754456 443.07907104]
[249.48805237 429.55072021]
[243.00856018 416.02236938]
[236.52905273 402.49401855]
[230.04956055 388.96566772]
[215.40016174 392.04519653]
[200.43041992 391.52871704]
[186.01065063 387.44189453]
[172.98022461 380.01815796]
[162.09877014 369.68521118]
[154.00175476 357.04055786]
[149.16352844 342.81692505]
[147.86944580 327.83963013]
[150.19903564 312.97897339]
[156.02117920 299.09942627]
[165.00144958 287.00949097]
[176.62133789 277.41448975]
[170.14184570 263.88613892]
[163.66233826 250.35778809]
[157.18284607 236.82943726]
[151.45841980 232.15475464]
[150.70927429 223.05110168]
[144.43191528 209.42778015]
[129.57746887 200.08367920]
[131.41830444 181.76174927]
[124.93881226 168.23339844]
[118.45931244 154.70506287]
[111.97982025 141.17671204]
[105.39978790 127.69697571]
[98.71959686 114.26660156]
[87.17493439 106.37911224]
[87.85002899 92.41358948]
[81.16983032 78.98321533]
[74.48963928 65.55284119]
[58.91193390 55.73364258]
[60.68242645 38.27419662]
[53.80301285 24.94476700]
[47.03567505 26.61584473]
[40.10140228 27.28519058]
[33.14757919 26.93977547]
[26.32182693 25.58812714]
[19.76887703 23.26012039]
[13.62750244 20.00632477]
[8.02757168 15.89689541]
[3.08730841 11.02006912]
[-1.08920538 5.48026705]
[-4.41422272 -0.60413843]
[-6.81817532 -7.10335732]
[-8.25112724 -13.87894630]
[-8.68381310 -20.78676224]
[-8.10823441 -27.68002319]
[-6.53780460 -34.41242981]
[-4.00703764 -40.84127426]
[-0.57079154 -46.83045959]
[3.69692111 -52.25338364]
[8.70452595 -56.99560928]
[14.34485245 -60.95729446]
[20.49742699 -64.05527496]
[16.95775604 -78.63165283]
[13.41808319 -93.20803070]
[9.87841034 -107.78440094]
[6.23032284 -122.33402252]
[2.47402215 -136.85607910]
[-1.28227854 -151.37814331]
[-5.03857946 -165.90020752]
[-8.19047260 -168.88676453]
[-10.04185200 -172.37057495]
[-10.59609318 -175.88172913]
[-10.00883102 -178.99969482]
[-8.55867100 -181.39869690]
[-18.80596924 -193.45288086]
[-13.66126442 -207.43075562]
[-16.54653740 -222.15065002]
[-19.43181038 -236.87054443]
[-22.31708336 -251.59043884]
[-25.20235443 -266.31033325]
[-40.25921249 -267.17163086]
[-54.62858200 -271.75115967]
[-67.40719604 -279.76101685]
[-77.79177094 -290.69772339]
[-85.12953186 -303.87377930]
[-88.95922089 -318.46090698]
[-89.04009247 -333.54214478]
[-85.36707306 -348.16952515]
[-78.17105103 -361.42349243]
[-67.90436554 -372.47094727]
[-55.21239471 -380.61740112]
[-40.89296722 -385.35076904]
[-25.84621429 -386.37350464]
[-11.01798534 -383.62133789]
[2.65960407 -377.26727295]
[14.32676792 -367.71069336]
[23.25009918 -355.55236816]
[28.86867142 -341.55654907]
[30.82929420 -326.60305786]
[29.00872040 -311.63189697]
[23.52139664 -297.58410645]
[14.71225643 -285.34277344]
[3.13505197 -275.67742920]
[-10.48246384 -269.19558716]
[-7.59719133 -254.47570801]
[-4.71191883 -239.75581360]
[-1.82664597 -225.03591919]
[1.05862665 -210.31604004]
[11.09955120 -199.31471252]
[6.16122055 -184.28396606]
[9.48348045 -169.65650940]
[13.23978043 -155.13444519]
[16.99608231 -140.61238098]
[20.75238228 -126.09032440]
[25.47073364 -120.40183258]
[24.45478630 -111.32407379]
[27.99445915 -96.74770355]
[31.53413010 -82.17132568]
[35.07380295 -67.59494781]
[58.90821838 -63.37845612]
[77.58503723 -47.88755798]
[86.17808533 -25.13033485]
[82.38248444 -1.04147804]
[67.13244629 18.06535530]
[74.01185608 31.39478493]
[85.43647003 35.37030411]
[91.27690887 46.41896820]
[87.92001343 58.87264633]
[94.60021210 72.30302429]
[101.28040314 85.73339844]
[112.82506561 93.62088776]
[112.14997101 107.58641052]
[118.83016968 121.01678467]
[125.45391083 127.30676270]
[125.50816345 134.69721985]
[131.98765564 148.22555542]
[138.46714783 161.75390625]
[144.94665527 175.28225708]
[156.83030701 180.29637146]
[161.94859314 191.69755554]
[158.05522156 203.15042114]
[164.33258057 216.77374268]
[170.71119690 230.34994507]
[177.19068909 243.87829590]
[183.67018127 257.40664673]
[190.14967346 270.93499756]
[204.90928650 267.89535522]
[219.95837402 268.47625732]
[234.42230225 272.63964844]
[247.46153259 280.13931274]
[258.32025146 290.53552246]
[266.37026978 303.22088623]
[271.14733887 317.45562744]
[272.37786865 332.41094971]
[269.99465942 347.21716309]
[264.14053345 361.01431274]
[255.15977478 373.00204468]
[243.57791138 382.48617554]
[250.05740356 396.01452637]
[256.53689575 409.54287720]
[263.01638794 423.07122803]
[269.49588013 436.59957886]
[283.69003296 431.69815063]
[298.35040283 428.44671631]
[313.28582764 426.88766479]
[328.30163574 427.04132080]
[343.20202637 428.90570068]
[357.79275513 432.45645142]
[371.88363647 437.64733887]
[385.29092407 444.41064453]
[397.83984375 452.65820312]
[409.36679077 462.28250122]
[419.72149658 473.15808105]
[428.76895142 485.14312744]
[436.39123535 498.08139038]
[442.48892212 511.80419922]
[446.98254395 526.13269043]
[449.81353760 540.88000488]
[450.94497681 555.85388184]
[450.36209106 570.85919189]
[448.07250977 585.70019531]
[444.10607910 600.18347168]
[438.51449585 614.12017822]
[431.37066650 627.32861328]
[422.76773071 639.63659668]
[412.81781006 650.88372803]
[401.65066528 660.92327881]
[389.41186523 669.62438965]
[376.26098633 676.87365723]
[362.36944580 682.57659912]
[347.91836548 686.65875244]
[333.09616089 689.06695557]
[318.09603882 689.76983643]
[303.11355591 688.75823975]
[288.34408569 686.04534912]
[273.98010254 681.66644287]
[260.20895386 675.67877197]
[247.21011353 668.16021729]
[235.15307617 659.20892334]
[224.19502258 648.94158936]
[214.47882080 637.49194336]
[206.13113403 625.00939941]
[199.26078796 611.65667725]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 169]
[13 168]
[14 167]
[15 166]
[16 165]
[28 153]
[29 152]
[30 151]
[31 150]
[33 149]
[34 148]
[36 145]
[37 144]
[38 143]
[39 142]
[40 140]
[41 139]
[43 137]
[44 136]
[45 135]
[47 132]
[48 131]
[69 126]
[70 125]
[71 124]
[72 123]
[73 121]
[74 120]
[75 119]
[76 118]
[81 117]
[83 115]
[84 114]
[85 113]
[86 112]
[87 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
