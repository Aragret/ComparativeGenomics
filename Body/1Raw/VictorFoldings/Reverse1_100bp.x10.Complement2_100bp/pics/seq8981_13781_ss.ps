%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUACCAACUAUAACGAUCCCACCGCGAAGGUUAAUCCACGUACUCAUCCACCGGACGUCAUUACAAUCGCCAAUCCGCAUGCCGGUCCCGAUAACCAxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[33.06830978 748.09356689]
[18.65984154 752.31256104]
[3.89393210 755.02770996]
[-11.07289028 756.21014404]
[-26.08197021 755.84747314]
[-40.97420120 753.94335938]
[-55.59172058 750.51812744]
[-69.77957153 745.60803223]
[-83.38735199 739.26513672]
[-96.27081299 731.55670166]
[-108.29338837 722.56439209]
[-119.32763672 712.38354492]
[-129.25657654 701.12207031]
[-137.97494507 688.89941406]
[-145.39035034 675.84509277]
[-151.42417908 662.09747314]
[-156.01245117 647.80230713]
[-159.10653687 633.11114502]
[-160.67364502 618.17968750]
[-160.69715881 603.16619873]
[-159.17681885 588.22991943]
[-156.12876892 573.52917480]
[-151.58528137 559.21966553]
[-145.59455872 545.45324707]
[-138.22007751 532.37573242]
[-129.54002380 520.12579346]
[-119.64640808 508.83331299]
[-108.64411163 498.61795044]
[-96.64975739 489.58801270]
[-83.79050446 481.83926392]
[-70.20265198 475.45376587]
[-56.03025055 470.49926758]
[-41.42353439 467.02825928]
[-26.53734016 465.07757568]
[-11.52947044 464.66784668]
[3.44098306 465.80343628]
[6.10677862 451.04220581]
[8.77257442 436.28097534]
[11.43836975 421.51977539]
[14.10416508 406.75854492]
[16.76996040 391.99734497]
[3.14676809 398.27496338]
[-10.32310772 391.67477417]
[-13.71017551 377.06219482]
[-4.51761532 365.20904541]
[10.47815990 364.85305786]
[20.22239304 376.25503540]
[23.97869301 361.73297119]
[27.73499298 347.21093750]
[31.27466583 332.63455200]
[34.59692383 318.00708008]
[37.91918564 303.37963867]
[41.24144363 288.75216675]
[44.12671661 274.03228760]
[46.57244492 259.23300171]
[49.01817322 244.43373108]
[37.90966797 254.51347351]
[23.13301468 257.09231567]
[9.26691437 251.37120056]
[0.60793167 239.12284851]
[-0.16085358 224.14256287]
[7.19877481 211.07214355]
[20.40635681 203.96160889]
[35.36937714 205.01422119]
[47.45138168 213.90382385]
[52.90865707 227.87614441]
[57.30965424 213.53630066]
[61.71065140 199.19645691]
[66.11164856 184.85659790]
[70.51264954 170.51675415]
[74.91365051 156.17691040]
[67.73004913 143.17955017]
[71.98900604 128.57420349]
[85.67054749 121.12751007]
[90.07154846 106.78766632]
[94.25856018 92.38388062]
[98.23065186 77.91935730]
[102.20275116 63.45483398]
[106.17485046 48.99031067]
[109.71451569 34.41393661]
[112.81862640 19.73863411]
[111.53285217 10.69515038]
[116.07974243 4.86869669]
[119.40200806 -9.75876331]
[114.91338348 -24.92988205]
[125.27740479 -35.62737274]
[128.59967041 -50.25483322]
[124.11104584 -65.42594910]
[134.47506714 -76.12344360]
[137.79733276 -90.75090027]
[141.11958313 -105.37836456]
[144.44184875 -120.00582123]
[147.76411438 -134.63328552]
[151.08636475 -149.26074219]
[154.40863037 -163.88819885]
[157.07441711 -178.64941406]
[159.07844543 -193.51495361]
[160.97172546 -208.39498901]
[162.75419617 -223.28869629]
[164.53666687 -238.18241882]
[150.79891968 -244.51721191]
[139.69248962 -254.78865051]
[132.30546570 -267.99041748]
[129.36154175 -282.82916260]
[131.14913940 -297.85113525]
[137.49314880 -311.58465576]
[147.77201843 -322.68420410]
[160.97874451 -330.06237793]
[175.81947327 -332.99633789]
[190.84024048 -331.19866943]
[204.56947327 -324.84548950]
[215.66213989 -314.55917358]
[223.03146362 -301.34750366]
[225.95549011 -286.50482178]
[224.14775085 -271.48526001]
[217.78535461 -257.76028442]
[207.49162292 -246.67451477]
[194.27502441 -239.31404114]
[179.43037415 -236.39994812]
[177.64791870 -221.50624084]
[175.86544800 -206.61251831]
[178.19183350 -199.59754944]
[173.94396973 -191.51094055]
[171.93995667 -176.64540100]
[184.49406433 -184.85479736]
[199.20370483 -181.91770935]
[207.64253235 -169.51664734]
[204.97637939 -154.75549316]
[192.73255920 -146.09011841]
[177.92488098 -148.48442078]
[169.03608704 -160.56594849]
[165.71383667 -145.93847656]
[162.39157104 -131.31101990]
[159.06930542 -116.68356323]
[155.74705505 -102.05609894]
[152.42478943 -87.42864227]
[149.10253906 -72.80118561]
[153.82878113 -58.67631531]
[143.22712708 -46.93257141]
[139.90486145 -32.30511093]
[144.63111877 -18.18024635]
[134.02946472 -6.43650389]
[130.70719910 8.19095612]
[127.49393463 22.84274292]
[124.38982391 37.51804733]
[125.80410004 39.93836594]
[126.34487915 43.06473160]
[125.73842621 46.56724930]
[123.83538055 50.02310562]
[120.63937378 52.96240616]
[116.66727448 67.42693329]
[112.69517517 81.89145660]
[108.72308350 96.35597992]
[110.21811676 101.38378906]
[108.78973389 106.89133453]
[104.41139221 111.18865967]
[100.01039886 125.52851105]
[107.15901947 139.36811829]
[102.49150848 153.84806824]
[89.25349426 160.57791138]
[84.85249329 174.91775513]
[80.45149994 189.25759888]
[76.05049896 203.59744263]
[71.64950562 217.93730164]
[67.24850464 232.27714539]
[63.81744385 246.87947083]
[61.37171555 261.67874146]
[58.92598724 276.47799683]
[60.59860229 280.48504639]
[60.88074112 284.42013550]
[59.96576691 287.85498047]
[58.16626740 290.46810913]
[55.86890411 292.07443237]
[52.54664612 306.70190430]
[49.22438431 321.32934570]
[45.90212631 335.95681763]
[47.48962021 342.37487793]
[45.84452438 347.81460571]
[42.25705338 350.96722412]
[38.50075150 365.48928833]
[34.74445343 380.01135254]
[31.53117752 394.66314697]
[28.86538124 409.42434692]
[26.19958687 424.18557739]
[23.53379059 438.94677734]
[20.86799622 453.70800781]
[18.20219994 468.46920776]
[32.62419891 472.64175415]
[46.54072952 478.27505493]
[59.80426407 485.30944824]
[72.27420044 493.67034912]
[83.81835938 503.26913452]
[94.31436157 514.00402832]
[103.65094757 525.76123047]
[111.72913361 538.41613770]
[118.46329498 551.83459473]
[123.78204346 565.87438965]
[127.62899017 580.38659668]
[129.96337891 595.21746826]
[130.76043701 610.20977783]
[130.01171875 625.20458984]
[127.72518158 640.04290771]
[123.92504120 654.56744385]
[118.65159607 668.62426758]
[111.96073914 682.06439209]
[103.92340088 694.74530029]
[94.62477875 706.53253174]
[84.16344452 717.30126953]
[72.65029907 726.93719482]
[60.20738602 735.33825684]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 187]
[37 186]
[38 185]
[39 184]
[40 183]
[41 182]
[47 181]
[48 180]
[49 179]
[50 176]
[51 175]
[52 174]
[53 173]
[54 168]
[55 167]
[56 166]
[66 165]
[67 164]
[68 163]
[69 162]
[70 161]
[71 160]
[74 157]
[75 156]
[76 153]
[77 152]
[78 151]
[79 150]
[80 145]
[81 144]
[83 143]
[84 142]
[86 140]
[87 139]
[89 137]
[90 136]
[91 135]
[92 134]
[93 133]
[94 132]
[95 131]
[96 124]
[97 123]
[98 121]
[99 120]
[100 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
