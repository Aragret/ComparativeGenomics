%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxCUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUA\
) } def
/len { sequence length } bind def

/coor [
[83.22992706 475.70428467]
[74.06156158 487.60153198]
[63.47433090 498.25582886]
[51.63521957 507.49911499]
[38.73094177 515.18566895]
[24.96502304 521.19421387]
[10.55456448 525.42999268]
[-4.27315617 527.82623291]
[-19.28428459 528.34509277]
[-34.24207687 526.97845459]
[-48.91062164 523.74780273]
[-63.05857849 518.70416260]
[-76.46281433 511.92700195]
[-88.91191864 503.52328491]
[-100.20956421 493.62545776]
[-110.17755890 482.38970947]
[-118.65869904 469.99319458]
[-125.51921844 456.63143921]
[-130.65092468 442.51516724]
[-133.97286987 427.86703491]
[-135.43269348 412.91806030]
[-135.00732422 397.90399170]
[-132.70352173 383.06161499]
[-128.55758667 368.62506104]
[-122.63491058 354.82196045]
[-115.02890778 341.87005615]
[-105.85953522 329.97360229]
[-95.27141571 319.32019043]
[-83.43152618 310.07788086]
[-70.52660370 302.39242554]
[-56.76017380 296.38504028]
[-42.34936142 292.15048218]
[-27.52143860 289.75549316]
[-12.51026535 289.23785400]
[2.44741035 290.60577393]
[17.11568451 293.83764648]
[22.15260124 279.70861816]
[27.18951607 265.57958984]
[32.22643280 251.45056152]
[37.26334763 237.32153320]
[36.09056854 233.99633789]
[36.47010803 229.93788147]
[38.72905731 225.88197327]
[42.85353851 222.68263245]
[48.51632309 208.79260254]
[54.17911148 194.90257263]
[59.84189606 181.01255798]
[49.62443924 168.49392700]
[47.09984970 152.43832397]
[53.05073547 137.21322632]
[65.94107056 127.00857544]
[82.31140137 124.68386078]
[87.76675415 110.71105957]
[84.81012726 94.19940948]
[98.01994324 83.86127472]
[103.26666260 69.80880737]
[108.51338196 55.75633240]
[113.76010132 41.70386124]
[119.00682068 27.65139008]
[123.93841553 13.48525524]
[128.55241394 -0.78747857]
[133.16642761 -15.06021214]
[130.04920959 -30.57128906]
[141.32629395 -40.30148697]
[145.94029236 -54.57422256]
[150.55430603 -68.84695435]
[139.04353333 -78.73522186]
[132.21392822 -92.24076080]
[131.07843018 -107.29148102]
[135.77900696 -121.59156036]
[145.56979370 -132.97160339]
[158.93521118 -139.71778870]
[173.82455444 -140.82989502]
[178.43855286 -155.10263062]
[183.05256653 -169.37535095]
[187.66658020 -183.64808655]
[173.78717041 -189.35688782]
[160.39187622 -196.12406921]
[147.56129456 -203.90893555]
[135.37255859 -212.66467285]
[123.89897919 -222.33862305]
[113.20956421 -232.87260437]
[103.36860657 -244.20326233]
[94.43527985 -256.26245117]
[86.46332550 -268.97766113]
[79.50067902 -282.27236938]
[73.58921814 -296.06668091]
[68.76449585 -310.27761841]
[65.05552673 -324.81970215]
[62.48461533 -339.60543823]
[61.06722641 -354.54598999]
[60.81188583 -369.55142212]
[61.72013092 -384.53152466]
[63.78649521 -399.39617920]
[66.99855042 -414.05603027]
[71.33698273 -428.42288208]
[76.77569580 -442.41033936]
[83.28198242 -455.93423462]
[90.81671143 -468.91333008]
[99.33457184 -481.26947021]
[108.78432465 -492.92837524]
[119.10915375 -503.81994629]
[130.24694824 -513.87866211]
[142.13073730 -523.04406738]
[154.68902588 -531.26092529]
[167.84631348 -538.47998047]
[181.52346802 -544.65765381]
[195.63819885 -549.75689697]
[210.10565186 -553.74700928]
[224.83882141 -556.60400391]
[239.74906921 -558.31072998]
[254.74673462 -558.85687256]
[269.74160767 -558.23913574]
[284.64355469 -556.46124268]
[299.36288452 -553.53393555]
[313.81112671 -549.47473145]
[327.90136719 -544.30816650]
[341.54885864 -538.06518555]
[354.67150879 -530.78344727]
[367.19042969 -522.50665283]
[379.03030396 -513.28466797]
[390.11993408 -503.17288208]
[400.39263916 -492.23211670]
[409.78662109 -480.52819824]
[418.24536133 -468.13153076]
[425.71804810 -455.11663818]
[432.15966797 -441.56179810]
[437.53152466 -427.54852295]
[441.80130005 -413.16113281]
[444.94332886 -398.48611450]
[446.93869019 -383.61172485]
[447.77536011 -368.62747192]
[447.44839478 -353.62341309]
[445.95965576 -338.68984985]
[443.31817627 -323.91653442]
[439.53979492 -309.39233398]
[434.64727783 -295.20462036]
[428.67001343 -281.43869019]
[421.64395142 -268.17736816]
[413.61135864 -255.50036621]
[404.62057495 -243.48397827]
[394.72561646 -232.20043945]
[383.98602295 -221.71762085]
[372.46636963 -212.09857178]
[360.23596191 -203.40113831]
[347.36834717 -195.67762756]
[333.94088745 -188.97448730]
[320.03439331 -183.33204651]
[305.73245239 -178.78421021]
[291.12109375 -175.35836792]
[276.28817749 -173.07510376]
[261.32293701 -171.94813538]
[246.31538391 -171.98426819]
[231.35574341 -173.18325806]
[216.53401184 -175.53791809]
[201.93931580 -179.03408813]
[197.32530212 -164.76135254]
[192.71128845 -150.48861694]
[188.09727478 -136.21588135]
[199.51802063 -126.59839630]
[206.40518188 -113.30507660]
[207.68161011 -98.34728241]
[203.12178040 -84.00170898]
[193.39086914 -72.46382141]
[179.94789124 -65.51189423]
[164.82704163 -64.23294830]
[160.21302795 -49.96021271]
[155.59902954 -35.68747711]
[159.04626465 -21.19728279]
[147.43916321 -10.44620228]
[142.82514954 3.82653069]
[138.21115112 18.09926414]
[139.48240662 21.38806725]
[139.22387695 25.45601654]
[137.08668518 29.57738876]
[133.05929565 32.89810944]
[127.81256866 46.95058060]
[122.56585693 61.00305176]
[117.31913757 75.05551910]
[112.07241821 89.10799408]
[116.25971985 99.97573090]
[112.10487366 110.85591888]
[101.73955536 116.16641998]
[96.28419495 130.13922119]
[105.57985687 140.59165955]
[109.44669342 153.96565247]
[107.18484497 167.63540649]
[99.29196167 178.94255066]
[87.35511017 185.71310425]
[73.73192596 186.67533875]
[68.06913757 200.56536865]
[62.40635300 214.45539856]
[56.74356461 228.34541321]
[51.39237976 242.35844421]
[46.35546112 256.48745728]
[41.31854630 270.61651611]
[36.28163147 284.74554443]
[31.24471474 298.87457275]
[44.64952087 305.65057373]
[57.09933472 314.05328369]
[68.39781189 323.95013428]
[78.36675262 335.18505859]
[86.84893036 347.58084106]
[93.71057892 360.94201660]
[98.84346771 375.05786133]
[102.16665649 389.70571899]
[103.62772369 404.65457153]
[103.20363617 419.66867065]
[100.90106964 434.51123047]
[96.75634766 448.94815063]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 198]
[37 197]
[38 196]
[39 195]
[40 194]
[44 193]
[45 192]
[46 191]
[47 190]
[52 184]
[53 183]
[55 180]
[56 179]
[57 178]
[58 177]
[59 176]
[60 172]
[61 171]
[62 170]
[64 168]
[65 167]
[66 166]
[73 159]
[74 158]
[75 157]
[76 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
