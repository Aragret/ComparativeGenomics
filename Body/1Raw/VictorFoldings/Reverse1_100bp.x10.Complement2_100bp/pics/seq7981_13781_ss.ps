%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[277.66635132 273.36740112]
[285.03686523 260.29141235]
[272.68237305 251.78457642]
[260.32785034 243.27774048]
[247.97334290 234.77091980]
[235.61883545 226.26409912]
[223.26432800 217.75726318]
[220.48632812 218.13250732]
[217.39228821 217.42994690]
[214.39201355 215.52371216]
[211.93321228 212.43844604]
[210.44830322 208.35812378]
[198.62203979 199.13102722]
[186.79577637 189.90393066]
[172.00183105 188.17510986]
[165.88105774 173.58584595]
[154.05477905 164.35874939]
[157.59262085 178.93556213]
[152.78875732 193.14552307]
[141.13169861 202.58549500]
[126.23353577 204.33042908]
[112.71061707 197.83961487]
[104.75317383 185.12429810]
[104.82688904 170.12448120]
[112.90893555 157.48800659]
[126.49500275 151.13043213]
[141.37553406 153.02180481]
[130.88803101 142.29742432]
[120.40052795 131.57304382]
[109.91302490 120.84866333]
[99.42552185 110.12428284]
[91.98622131 107.02117157]
[88.86319733 99.16130066]
[78.53652954 88.28195953]
[65.68669128 87.16637421]
[57.30955887 77.89235687]
[57.49124908 65.79717255]
[47.32770157 54.76529312]
[37.16415405 43.73341751]
[24.33235168 42.42663956]
[16.09422493 33.02892303]
[16.45597076 20.93778419]
[6.45779848 9.75580883]
[-3.54037356 -1.42616558]
[-11.59328842 -5.73758936]
[-13.60264301 -12.84985256]
[-23.43322372 -24.17944527]
[-29.54746819 -26.69490814]
[-32.96108246 -31.23850632]
[-33.38170624 -35.99582672]
[-42.87060165 -47.61309052]
[-52.35950089 -59.23035431]
[-61.84840012 -70.84761810]
[-71.33729553 -82.46488190]
[-83.92446136 -74.27887726]
[-97.32290649 -67.50180054]
[-111.37554932 -62.21309662]
[-125.91764069 -58.47478485]
[-140.77867126 -56.33068848]
[-155.78439331 -55.80595016]
[-170.75889587 -56.90671921]
[-185.52658081 -59.62009430]
[-199.91433716 -63.91425705]
[-213.75346375 -69.73886108]
[-226.88168335 -77.02561951]
[-239.14511108 -85.68909454]
[-250.39993286 -95.62771606]
[-260.51419067 -106.72495270]
[-269.36935425 -118.85070038]
[-276.86151123 -131.86279297]
[-282.90289307 -145.60865784]
[-287.42266846 -159.92713928]
[-290.36776733 -174.65037537]
[-291.70376587 -189.60572815]
[-291.41491699 -204.61784363]
[-289.50463867 -219.51072693]
[-285.99533081 -234.10977173]
[-280.92813110 -248.24380493]
[-274.36245728 -261.74710083]
[-266.37530518 -274.46136475]
[-257.06027222 -286.23751831]
[-246.52659607 -296.93746948]
[-234.89779663 -306.43579102]
[-222.31019592 -314.62112427]
[-208.91139221 -321.39746094]
[-194.85845947 -326.68542480]
[-180.31616211 -330.42294312]
[-165.45503235 -332.56625366]
[-150.44926453 -333.09017944]
[-135.47483826 -331.98858643]
[-120.70728302 -329.27444458]
[-106.31976318 -324.97949219]
[-92.48095703 -319.15414429]
[-79.35311890 -311.86666870]
[-67.09016418 -303.20254517]
[-55.83587646 -293.26330566]
[-45.72219849 -282.16552734]
[-36.86771393 -270.03930664]
[-29.37623215 -257.02682495]
[-23.33559036 -243.28062439]
[-18.81661034 -228.96189880]
[-15.87227535 -214.23851013]
[-14.53710556 -199.28309631]
[-14.82675648 -184.27098083]
[-16.73783112 -169.37820435]
[-20.24792290 -154.77934265]
[-25.31587791 -140.64558411]
[-31.88227844 -127.14263916]
[-39.87013245 -114.42881012]
[-49.18579483 -102.65317535]
[-59.72003555 -91.95378113]
[-50.23113632 -80.33651733]
[-40.74223709 -68.71925354]
[-31.25333977 -57.10198975]
[-21.76444244 -45.48472595]
[-12.10363102 -34.01002502]
[-2.27305031 -22.68043327]
[7.64160109 -11.42433739]
[17.63977242 -0.24236308]
[27.63794518 10.93961143]
[44.58020401 15.51419735]
[48.19602966 33.56987000]
[58.35957718 44.60174561]
[68.52312469 55.63362503]
[85.53161621 59.95545959]
[89.41586304 77.95529175]
[99.74253082 88.83462524]
[110.14990234 99.63678741]
[120.63740540 110.36116791]
[131.12490845 121.08554840]
[141.61241150 131.80992126]
[152.09991455 142.53430176]
[163.28189087 152.53247070]
[175.10815430 161.75956726]
[190.74798584 164.14839172]
[196.02287292 178.07766724]
[207.84913635 187.30476379]
[219.67539978 196.53186035]
[231.77116394 205.40275574]
[244.12567139 213.90957642]
[256.48016357 222.41641235]
[268.83468628 230.92323303]
[281.18920898 239.43006897]
[293.54370117 247.93688965]
[303.12991333 236.38652039]
[313.71289062 225.74197388]
[325.20745850 216.08892822]
[337.52105713 207.50512695]
[350.55453491 200.05966187]
[364.20294189 193.81250000]
[378.35641479 188.81394958]
[392.90097046 185.10421753]
[407.71951294 182.71321106]
[422.69274902 181.66015625]
[437.70007324 181.95355225]
[452.62069702 183.59103394]
[467.33447266 186.55940247]
[481.72290039 190.83476257]
[495.67019653 196.38269043]
[509.06402588 203.15853882]
[521.79650879 211.10771179]
[533.76519775 220.16624451]
[544.87371826 230.26116943]
[555.03253174 241.31123352]
[564.15997314 253.22744751]
[572.18249512 265.91387939]
[579.03552246 279.26837158]
[584.66381836 293.18341064]
[589.02215576 307.54696655]
[592.07537842 322.24334717]
[593.79888916 337.15426636]
[594.17889404 352.15966797]
[593.21221924 367.13873291]
[590.90673828 381.97082520]
[587.28100586 396.53652954]
[582.36419678 410.71859741]
[576.19592285 424.40283203]
[568.82580566 437.47906494]
[560.31317139 449.84197998]
[550.72662354 461.39202881]
[540.14331055 472.03628540]
[528.64843750 481.68896484]
[516.33459473 490.27239990]
[503.30087280 497.71746826]
[489.65228271 503.96420288]
[475.49865723 508.96234131]
[460.95397949 512.67163086]
[446.13534546 515.06219482]
[431.16210938 516.11474609]
[416.15478516 515.82092285]
[401.23419189 514.18298340]
[386.52053833 511.21417236]
[372.13220215 506.93835449]
[358.18508911 501.38998413]
[344.79147339 494.61373901]
[332.05923462 486.66418457]
[320.09082031 477.60528564]
[308.98263550 467.51000977]
[298.82409668 456.45965576]
[289.69705200 444.54315186]
[281.67492676 431.85647583]
[274.82232666 418.50177002]
[269.19442749 404.58654785]
[264.83654785 390.22290039]
[261.78378296 375.52639771]
[260.06069946 360.61541748]
[259.68118286 345.61001587]
[260.64828491 330.63098145]
[262.95419312 315.79898071]
[266.58038330 301.23336792]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 144]
[3 143]
[4 142]
[5 141]
[6 140]
[7 139]
[12 138]
[13 137]
[14 136]
[16 134]
[17 133]
[27 132]
[28 131]
[29 130]
[30 129]
[31 128]
[33 127]
[34 126]
[37 124]
[38 123]
[39 122]
[42 120]
[43 119]
[44 118]
[46 117]
[47 116]
[50 115]
[51 114]
[52 113]
[53 112]
[54 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
