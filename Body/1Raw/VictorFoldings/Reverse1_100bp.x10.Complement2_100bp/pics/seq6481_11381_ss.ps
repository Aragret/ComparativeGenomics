%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[52.28925705 657.61132812]
[39.34977722 665.23406982]
[25.59953308 671.27288818]
[11.23156261 675.64300537]
[-3.55243349 678.28302002]
[-18.54491043 679.15594482]
[-33.53539658 678.24951172]
[-48.31344986 675.57641602]
[-62.67161179 671.17419434]
[-76.40830994 665.10461426]
[-89.33071136 657.45294189]
[-101.25739288 648.32659912]
[-112.02093506 637.85363770]
[-121.47023010 626.18115234]
[-129.47262573 613.47296143]
[-135.91578674 599.90747070]
[-140.70924377 585.67517090]
[-143.78570557 570.97576904]
[-145.10200500 556.01574707]
[-144.63964844 541.00494385]
[-142.40512085 526.15429688]
[-138.42980957 511.67211914]
[-132.76951599 497.76177979]
[-125.50368500 484.61856079]
[-116.73433685 472.42697144]
[-106.58457184 461.35815430]
[-95.19687653 451.56750488]
[-82.73110962 443.19247437]
[-69.36228943 436.35061646]
[-55.27807999 431.13800049]
[-40.67620087 427.62780762]
[-25.76164627 425.86929321]
[-10.74378872 425.88714600]
[4.16654348 427.68112183]
[7.70621586 413.10473633]
[11.24588871 398.52838135]
[1.89030385 384.55297852]
[5.61030483 367.80554199]
[20.58072662 358.75537109]
[23.90298653 344.12789917]
[27.22524452 329.50042725]
[30.54750443 314.87298584]
[33.86976242 300.24551392]
[26.69026566 294.24841309]
[22.16030312 285.99755859]
[20.93913269 276.60614014]
[23.23632050 267.35879517]
[28.77721786 259.53607178]
[36.83507156 254.23689270]
[46.32614136 252.22445679]
[50.51315308 237.82067871]
[54.70016479 223.41690063]
[58.88717651 209.01312256]
[55.01003265 194.63198853]
[66.29189301 183.54008484]
[70.47890472 169.13629150]
[74.66591644 154.73251343]
[73.19163513 150.18988037]
[74.55535889 144.67288208]
[79.19795990 139.96566772]
[83.81196594 125.69293976]
[88.42597961 111.42020416]
[83.75758362 100.75027466]
[87.42245483 89.69541931]
[97.54031372 83.92738342]
[102.36631012 69.72492981]
[107.19230652 55.52247238]
[112.01830292 41.32001495]
[116.84430695 27.11756134]
[121.67030334 12.91510487]
[125.85731506 -1.48867679]
[129.39698792 -16.06505203]
[132.93666077 -30.64142799]
[124.97695923 -44.03100967]
[128.77433777 -58.76310349]
[141.58831787 -66.26894379]
[145.12799072 -80.84532166]
[148.66764832 -95.42169952]
[152.09872437 -110.02401733]
[155.42097473 -124.65148163]
[158.74324036 -139.27894592]
[162.06549072 -153.90640259]
[150.20545959 -161.79249573]
[141.76730347 -173.22923279]
[137.74824524 -186.83071899]
[138.61149597 -200.95733643]
[144.23300171 -213.91345215]
[153.91880798 -224.15087891]
[166.49061584 -230.45388794]
[180.42918396 -232.08358765]
[183.96884155 -246.65997314]
[187.50851440 -261.23632812]
[191.04818726 -275.81271362]
[194.15229797 -290.48800659]
[196.81809998 -305.24923706]
[199.48390198 -320.01046753]
[202.14968872 -334.77166748]
[204.81549072 -349.53289795]
[207.48127747 -364.29409790]
[193.71481323 -370.43804932]
[181.81915283 -379.69851685]
[172.48588562 -391.53717041]
[166.25762939 -405.26568604]
[163.49650574 -420.08593750]
[164.36303711 -435.13626099]
[168.80683899 -449.54168701]
[176.56954956 -462.46466064]
[187.19987488 -473.15390015]
[200.07975769 -480.98794556]
[214.46040344 -485.51129150]
[229.50572205 -486.46096802]
[244.34098816 -483.78179932]
[258.10372925 -477.62954712]
[269.99377441 -468.36184692]
[279.31988525 -456.51754761]
[285.53979492 -442.78524780]
[288.29193115 -427.96331787]
[287.41629028 -412.91351318]
[282.96374512 -398.51080322]
[275.19320679 -385.59252930]
[264.55639648 -374.90972900]
[251.67176819 -367.08352661]
[237.28839111 -362.56887817]
[222.24249268 -361.62829590]
[219.57670593 -346.86709595]
[216.91090393 -332.10586548]
[214.24511719 -317.34466553]
[211.57931519 -302.58343506]
[208.91352844 -287.82223511]
[210.39923096 -285.44509888]
[211.03285217 -282.33621216]
[210.53096008 -278.81719971]
[208.73164368 -275.30621338]
[205.62457275 -272.27304077]
[202.08489990 -257.69665527]
[198.54522705 -243.12030029]
[195.00555420 -228.54391479]
[207.94390869 -219.39378357]
[216.40081787 -205.94648743]
[219.05630493 -190.24542236]
[215.47457886 -174.68988037]
[206.17524719 -161.66842651]
[192.55821228 -153.19216919]
[176.69296265 -150.58413696]
[173.37069702 -135.95668030]
[170.04843140 -121.32921600]
[166.72618103 -106.70175934]
[168.31013489 -99.48283386]
[163.24403381 -91.88202667]
[159.70436096 -77.30564880]
[156.16468811 -62.72927475]
[164.10916138 -50.18252563]
[160.72708130 -35.34958649]
[147.51303101 -27.10175514]
[143.97335815 -12.52538013]
[140.43368530 2.05099559]
[153.77374268 -4.80778408]
[168.09800720 -0.35632205]
[175.20088196 12.85538197]
[171.01353455 27.25906372]
[157.93464661 34.60364151]
[143.45642090 30.68180466]
[135.87275696 17.74110222]
[131.04675293 31.94355774]
[126.22076416 46.14601517]
[121.39476776 60.34846878]
[116.56876373 74.55092621]
[111.74276733 88.75337982]
[115.43373108 105.11654663]
[102.69870758 116.03421021]
[98.08470154 130.30694580]
[93.47069550 144.57968140]
[89.06969452 158.91952515]
[84.88268280 173.32330322]
[80.69567108 187.72709656]
[84.27333069 203.13847351]
[73.29096222 213.20013428]
[69.10395050 227.60391235]
[64.91693878 242.00769043]
[60.72992325 256.41146851]
[72.03155518 274.14404297]
[66.64683533 294.16653442]
[48.49722290 303.56777954]
[45.17496490 318.19522095]
[41.85270691 332.82269287]
[38.53044510 347.45016479]
[35.20818710 362.07760620]
[43.65048981 372.57247925]
[44.49460220 385.82003784]
[37.65596771 396.96969604]
[25.82226372 402.06805420]
[22.28259087 416.64440918]
[18.74291801 431.22079468]
[32.81543350 436.46490479]
[46.16892242 443.33663940]
[58.61591721 451.73953247]
[69.98168945 461.55563354]
[80.10666656 472.64709473]
[88.84873199 484.85827637]
[96.08513641 498.01773071]
[101.71430969 511.94067383]
[105.65722656 526.43170166]
[107.85852051 541.28735352]
[108.28730011 556.29913330]
[106.93754578 571.25622559]
[103.82820129 585.94866943]
[99.00292206 600.17022705]
[92.52944183 613.72125244]
[84.49864960 626.41149902]
[75.02326965 638.06286621]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 193]
[35 192]
[36 191]
[39 187]
[40 186]
[41 185]
[42 184]
[43 183]
[50 180]
[51 179]
[52 178]
[53 177]
[55 175]
[56 174]
[57 173]
[60 172]
[61 171]
[62 170]
[65 168]
[66 167]
[67 166]
[68 165]
[69 164]
[70 163]
[71 156]
[72 155]
[73 154]
[76 151]
[77 150]
[78 149]
[79 147]
[80 146]
[81 145]
[82 144]
[90 137]
[91 136]
[92 135]
[93 134]
[94 129]
[95 128]
[96 127]
[97 126]
[98 125]
[99 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
