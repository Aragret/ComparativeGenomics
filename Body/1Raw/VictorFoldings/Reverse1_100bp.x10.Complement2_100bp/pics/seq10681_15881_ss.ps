%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCCUGCUAAUCAAAAUCGUAACCUCAUCCAAAUCCAAUACAUGCAUCAGAUCCGGUAUACACAACCUCUAACUCUGAUCAUCCCGAUCCGGGUGGCGAxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[126.61894989 692.78057861]
[114.64799500 683.71636963]
[103.74684906 673.39031982]
[94.04784393 661.92767334]
[85.66870880 649.46759033]
[78.71117401 636.16131592]
[73.25968933 622.17047119]
[69.38043213 607.66479492]
[67.12048340 592.82043457]
[66.50729370 577.81750488]
[67.54829407 562.83819580]
[70.23085785 548.06433105]
[74.52241516 533.67523193]
[80.37086487 519.84564209]
[87.70522308 506.74331665]
[96.43644714 494.52737427]
[106.45855713 483.34613037]
[117.64988708 473.33526611]
[129.87458801 464.61633301]
[142.98426819 457.29516602]
[156.81977844 451.46060181]
[171.21316528 447.18353271]
[168.54737854 432.42233276]
[165.88157654 417.66110229]
[163.21578979 402.89987183]
[160.54998779 388.13867188]
[146.33674622 379.14852905]
[142.95672607 362.32919312]
[152.98033142 347.99227905]
[150.09506226 333.27239990]
[147.20977783 318.55249023]
[144.32450867 303.83261108]
[141.43923950 289.11273193]
[138.55397034 274.39282227]
[135.44985962 259.71752930]
[131.58555603 245.22383118]
[127.18454742 230.88398743]
[122.78355408 216.54412842]
[118.38255310 202.20428467]
[115.45562744 200.23822021]
[113.33557129 196.75677490]
[112.72423553 192.15464783]
[114.12067413 187.12503052]
[110.36437225 172.60298157]
[106.60807800 158.08091736]
[96.34771729 151.67376709]
[93.09942627 139.60594177]
[99.13124084 128.20506287]
[95.59156799 113.62868500]
[86.08058929 103.38013458]
[89.83205414 89.91098022]
[86.29238129 75.33460999]
[82.75270844 60.75823212]
[75.82095337 74.06051636]
[62.44597244 80.85094452]
[47.61630249 78.59685516]
[36.86304855 68.13896179]
[34.19689941 53.37780762]
[40.61227036 39.81893539]
[53.71638489 32.51947021]
[68.62172699 34.20193100]
[79.76956940 44.23981094]
[77.98710632 29.34609222]
[76.20463562 14.45237446]
[74.42217255 -0.44134274]
[61.03637314 -8.06542015]
[54.77968979 -21.94732475]
[57.86044693 -36.67732620]
[68.89203644 -46.64938736]
[67.10957336 -61.54310226]
[57.78720474 -74.32606506]
[63.95728683 -87.88258362]
[62.17482376 -102.77630615]
[50.69860458 -109.82690430]
[45.45504761 -122.02180481]
[48.15260315 -134.82044983]
[57.58719254 -143.59643555]
[56.02666855 -158.51504517]
[54.46614456 -173.43365479]
[52.90562439 -188.35224915]
[40.91195297 -198.29154968]
[39.54188156 -213.44337463]
[49.09140015 -224.81625366]
[47.53087616 -239.73484802]
[45.97035217 -254.65345764]
[34.60037994 -261.87414551]
[29.53896713 -274.14575195]
[32.42677689 -286.90283203]
[41.99098206 -295.53738403]
[40.65274811 -310.47756958]
[39.31451416 -325.41775513]
[37.97628021 -340.35794067]
[36.63804626 -355.29812622]
[35.29981232 -370.23831177]
[20.64352417 -374.10726929]
[8.19615841 -382.75823975]
[-0.53920388 -395.14648438]
[-4.50772572 -409.77615356]
[-3.23018837 -424.88058472]
[3.13913870 -438.63583374]
[13.83112812 -449.38095093]
[27.55467224 -455.81835938]
[42.65258408 -457.17071533]
[57.30171585 -453.27471924]
[69.73311615 -444.60086060]
[78.44563293 -432.19650269]
[82.38719177 -417.55957031]
[81.08181763 -402.45751953]
[74.68715668 -388.71401978]
[63.97537994 -377.98864746]
[50.23999786 -371.57653809]
[51.57823181 -356.63635254]
[52.91646576 -341.69616699]
[54.25469971 -326.75598145]
[55.59293365 -311.81579590]
[56.93116760 -296.87561035]
[70.28566742 -286.65328979]
[72.15166473 -269.59945679]
[60.88895798 -256.21398926]
[62.44948196 -241.29537964]
[64.01000214 -226.37677002]
[75.70631409 -217.22625732]
[77.50142670 -202.11889648]
[67.82422638 -189.91278076]
[69.38475037 -174.99417114]
[70.94527435 -160.07556152]
[72.50579834 -145.15696716]
[86.01101685 -135.13459778]
[88.13070679 -118.11044312]
[77.06854248 -104.55876923]
[78.85100555 -89.66505432]
[88.04587555 -77.94739532]
[82.00328827 -63.32556915]
[83.78575897 -48.43185043]
[96.85898590 -41.34463501]
[103.32869720 -27.75762367]
[100.52453613 -12.79132557]
[89.31588745 -2.22380877]
[91.09835815 12.66990852]
[92.88082123 27.56362534]
[94.66328430 42.45734406]
[97.32908630 57.21855927]
[100.86875916 71.79493713]
[104.40843201 86.37131500]
[113.91941071 96.61986542]
[110.16794586 110.08901978]
[113.70761871 124.66539001]
[126.72364044 137.69093323]
[121.13013458 154.32461548]
[124.88643646 168.84667969]
[128.64273071 183.36874390]
[132.72239685 197.80328369]
[137.12339783 212.14314270]
[141.52439880 226.48298645]
[145.92539978 240.82283020]
[155.15226746 228.99638367]
[170.14900208 228.68383789]
[179.86058044 240.11560059]
[177.12799072 254.86459351]
[163.96557617 262.05841064]
[150.07731628 256.39526367]
[154.28144836 261.49789429]
[155.14752197 267.11456299]
[153.27384949 271.50753784]
[156.15913391 286.22744751]
[159.04440308 300.94732666]
[161.92967224 315.66723633]
[164.81494141 330.38711548]
[167.70022583 345.10699463]
[179.66905212 351.28451538]
[185.80509949 363.05563354]
[184.06694031 376.01947021]
[175.31120300 385.47286987]
[177.97700500 400.23410034]
[180.64279175 414.99530029]
[183.30859375 429.75653076]
[185.97438049 444.51773071]
[200.95460510 443.49011230]
[215.95697021 444.11666870]
[230.79933167 446.38986206]
[245.30152893 450.28207397]
[259.28753662 455.74603271]
[272.58755493 462.71545410]
[285.04016113 471.10568237]
[296.49414062 480.81494141]
[306.81051636 491.72528076]
[315.86398315 503.70431519]
[323.54473877 516.60662842]
[329.75946045 530.27557373]
[334.43270874 544.54528809]
[337.50781250 559.24243164]
[338.94741821 574.18872070]
[338.73403931 589.20263672]
[336.87026978 604.10192871]
[333.37875366 618.70581055]
[328.30181885 632.83691406]
[321.70117188 646.32373047]
[313.65689087 659.00256348]
[304.26660156 670.71948242]
[293.64437866 681.33221436]
[281.91906738 690.71203613]
[269.23306274 698.74499512]
[255.74037170 705.33361816]
[241.60473633 710.39794922]
[226.99777222 713.87646484]
[212.09680176 715.72692871]
[197.08270264 715.92687988]
[182.13774109 714.47393799]
[167.44331360 711.38574219]
[153.17781067 706.69970703]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 177]
[23 176]
[24 175]
[25 174]
[26 173]
[29 169]
[30 168]
[31 167]
[32 166]
[33 165]
[34 164]
[35 161]
[36 155]
[37 154]
[38 153]
[39 152]
[43 151]
[44 150]
[45 149]
[48 147]
[49 146]
[51 144]
[52 143]
[53 142]
[62 141]
[63 140]
[64 139]
[65 138]
[69 134]
[70 133]
[72 131]
[73 130]
[77 127]
[78 126]
[79 125]
[80 124]
[83 121]
[84 120]
[85 119]
[89 116]
[90 115]
[91 114]
[92 113]
[93 112]
[94 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
