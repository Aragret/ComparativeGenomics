%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[118.23775482 621.03637695]
[103.42226410 627.19116211]
[89.44312286 619.31945801]
[87.02393341 603.45983887]
[98.02048492 591.77844238]
[98.91330719 576.80505371]
[99.80612183 561.83166504]
[92.01407623 552.57904053]
[92.63534546 540.09716797]
[101.88162994 531.10443115]
[102.99727631 516.14599609]
[104.11293030 501.18753052]
[105.22857666 486.22906494]
[106.34422302 471.27059937]
[99.57496643 458.00311279]
[108.31724548 444.81665039]
[109.43289185 429.85818481]
[110.54854584 414.89971924]
[110.21356964 399.90347290]
[108.43109894 385.00976562]
[106.64863586 370.11602783]
[104.86617279 355.22232056]
[103.08370209 340.32861328]
[101.30123901 325.43487549]
[97.38516998 319.16702271]
[99.60481262 310.30636597]
[98.04428864 295.38775635]
[96.48376465 280.46914673]
[94.92324066 265.55056763]
[93.36271667 250.63195801]
[83.98547363 262.33953857]
[69.30178070 265.40368652]
[56.02482224 258.42355347]
[50.22464371 244.59033203]
[54.55300903 230.22839355]
[67.03105164 221.90382385]
[81.95397186 223.42250061]
[92.50000000 234.09179688]
[92.50000000 219.09179688]
[92.50000000 204.09179688]
[84.76270294 191.36451721]
[92.50000000 177.56434631]
[92.50000000 162.56434631]
[92.50000000 147.56434631]
[92.50000000 132.56434631]
[92.50000000 117.56434631]
[82.32884216 107.24475861]
[82.32884216 92.75524139]
[92.50000000 82.43565369]
[92.50000000 67.43565369]
[83.94817352 57.78013229]
[84.25698090 45.28659821]
[92.71562195 36.63917160]
[92.93894958 21.64083481]
[93.16227722 6.64249802]
[93.38560486 -8.35583973]
[86.07002258 4.73928261]
[74.94289398 14.79846191]
[61.17850113 20.76012802]
[46.22943115 21.99513626]
[31.67329025 18.37314796]
[19.04622841 10.27640343]
[9.68080425 -1.44062912]
[4.56537771 -15.54142380]
[4.23979044 -30.53788948]
[8.73840141 -44.84741592]
[17.58646393 -56.95988083]
[29.85021782 -65.59703064]
[44.23544312 -69.84735870]
[59.22402954 -69.26232910]
[73.23419952 -63.90367508]
[84.78742218 -54.33690643]
[92.66445923 -41.57163239]
[96.03404236 -26.95480537]
[100.00614166 -41.41933060]
[103.97823334 -55.88385391]
[107.95033264 -70.34837341]
[111.92243195 -84.81290436]
[115.67872620 -99.33496094]
[119.21839905 -113.91133881]
[122.75807190 -128.48771667]
[118.49582672 -143.72398376]
[129.01797485 -154.26597595]
[127.54679871 -159.27424622]
[128.08955383 -163.88496399]
[130.15754700 -167.39758301]
[133.05487061 -169.40701294]
[137.24188232 -183.81079102]
[128.53732300 -198.98478699]
[133.40441895 -215.43550110]
[148.36303711 -223.12174988]
[152.33514404 -237.58627319]
[156.30723572 -252.05079651]
[160.27932739 -266.51531982]
[164.25141907 -280.97985840]
[160.44470215 -296.33627319]
[171.27606201 -306.56030273]
[157.68441772 -312.99758911]
[145.41720581 -321.69738770]
[134.84718323 -332.39532471]
[126.29558563 -344.76629639]
[120.02227783 -358.43438721]
[116.21789551 -372.98422241]
[114.99805450 -387.97366333]
[116.39981842 -402.94717407]
[120.38059235 -417.44973755]
[126.81940460 -431.04064941]
[135.52059937 -443.30688477]
[146.21972656 -453.87570190]
[158.59169006 -462.42587280]
[172.26048279 -468.69763184]
[186.81076050 -472.50036621]
[201.80032349 -473.71853638]
[216.77368164 -472.31506348]
[231.27580261 -468.33264160]
[244.86598206 -461.89227295]
[257.13122559 -453.18969727]
[267.69882202 -442.48937988]
[276.24761963 -430.11645508]
[282.51782227 -416.44692993]
[286.31890869 -401.89624023]
[287.53533936 -386.90652466]
[286.13018799 -371.93331909]
[282.14611816 -357.43167114]
[275.70422363 -343.84222412]
[267.00024414 -331.57794189]
[256.29870605 -321.01156616]
[243.92481995 -312.46417236]
[230.25460815 -306.19552612]
[215.70347595 -302.39608765]
[200.71362305 -301.18133545]
[185.74058533 -302.58819580]
[189.83142090 -288.26638794]
[178.71594238 -277.00775146]
[174.74385071 -262.54321289]
[170.77175903 -248.07870483]
[166.79966736 -233.61418152]
[162.82756042 -219.14965820]
[170.70498657 -208.95280457]
[171.27964783 -195.88560486]
[164.11790466 -184.70884705]
[151.64566040 -179.62377930]
[147.45864868 -165.22000122]
[143.59434509 -150.72630310]
[148.10977173 -136.53263855]
[137.33444214 -124.94803619]
[133.79478455 -110.37166595]
[130.25511169 -95.79528809]
[131.93075562 -91.32301331]
[130.81472778 -85.75062561]
[126.38695526 -80.84080505]
[122.41485596 -66.37628174]
[118.44275665 -51.91175842]
[114.47066498 -37.44723129]
[110.49856567 -22.98270988]
[108.38394165 -8.13251209]
[108.16061401 6.86582565]
[107.93728638 21.86416245]
[107.71395874 36.86249924]
[117.07468414 51.70648193]
[107.50000000 67.43565369]
[107.50000000 82.43565369]
[117.67115784 92.75524139]
[117.67115784 107.24475861]
[107.50000000 117.56434631]
[107.50000000 132.56434631]
[107.50000000 147.56434631]
[107.50000000 162.56434631]
[107.50000000 177.56434631]
[115.23729706 191.36451721]
[107.50000000 204.09179688]
[107.50000000 219.09179688]
[107.50000000 234.09179688]
[108.28131866 249.07142639]
[109.84184265 263.99002075]
[111.40236664 278.90863037]
[112.96289062 293.82723999]
[114.52341461 308.74584961]
[116.19495392 323.65243530]
[117.97742462 338.54614258]
[119.75988770 353.43984985]
[121.54235077 368.33358765]
[123.32482147 383.22729492]
[125.10728455 398.12100220]
[131.38526917 384.49798584]
[142.60757446 374.54510498]
[156.88305664 369.93960571]
[171.80606079 371.45764160]
[184.86175537 378.84332275]
[193.85006714 390.85208130]
[197.25630188 405.46020508]
[194.50642395 420.20599365]
[186.06385803 432.60452271]
[173.35133362 440.56637573]
[158.51110840 442.74990845]
[144.04402161 438.78710938]
[132.38806152 429.34579468]
[125.50699615 416.01538086]
[124.39134979 430.97384644]
[123.27569580 445.93228149]
[129.96516418 460.26971436]
[121.30268097 472.38626099]
[120.18702698 487.34469604]
[119.07138062 502.30316162]
[117.95573425 517.26159668]
[116.84008026 532.22009277]
[125.21836853 548.61779785]
[114.77952576 562.72448730]
[113.88671112 577.69787598]
[112.99389648 592.67126465]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 210]
[6 209]
[7 208]
[10 206]
[11 205]
[12 204]
[13 203]
[14 202]
[16 200]
[17 199]
[18 198]
[19 184]
[20 183]
[21 182]
[22 181]
[23 180]
[24 179]
[26 178]
[27 177]
[28 176]
[29 175]
[30 174]
[38 173]
[39 172]
[40 171]
[42 169]
[43 168]
[44 167]
[45 166]
[46 165]
[49 162]
[50 161]
[53 159]
[54 158]
[55 157]
[56 156]
[74 155]
[75 154]
[76 153]
[77 152]
[78 151]
[79 148]
[80 147]
[81 146]
[83 144]
[87 143]
[88 142]
[91 138]
[92 137]
[93 136]
[94 135]
[95 134]
[97 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
