%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUUUAAUUCCGCUUCAAAUAAUGAGAAAAAACUUACAACAGUUUUGAUCAAUUAACCUUCAAUUGCCAUGAUAAAUAUGAUUUUCUCAUUCUGGGAGxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[-37.44746017 431.43826294]
[-29.65053749 444.28771973]
[-23.90655518 458.17681885]
[-20.35016060 472.77996826]
[-19.06472015 487.75488281]
[-20.08036804 502.75051880]
[-23.37329292 517.41534424]
[-28.86630630 531.40557861]
[-36.43064117 544.39331055]
[-45.88898468 556.07409668]
[-57.01961136 566.17407227]
[-69.56161499 574.45648193]
[-83.22097778 580.72723389]
[-97.67752075 584.83929443]
[-112.59234619 586.69622803]
[-127.61583710 586.25463867]
[-142.39582825 583.52471924]
[-156.58584595 578.57049561]
[-169.85325623 571.50823975]
[-181.88705444 562.50329590]
[-192.40515137 551.76690674]
[-201.16098022 539.55072021]
[-207.94931030 526.14105225]
[-212.61099243 511.85226440]
[-215.03677368 497.01934814]
[-215.16975403 481.98992920]
[-213.00685120 467.11639404]
[-208.59875488 452.74737549]
[-202.04879761 439.21966553]
[-193.51051331 426.85043335]
[-183.18405151 415.92959595]
[-171.31149292 406.71316528]
[-158.17112732 399.41717529]
[-144.07101440 394.21264648]
[-129.34164429 391.22161865]
[-114.32832336 390.51419067]
[-99.38296509 392.10693359]
[-84.85592651 395.96249390]
[-71.08773041 401.99053955]
[-63.04655457 389.32800293]
[-55.00538254 376.66549683]
[-46.96420670 364.00296021]
[-38.92303467 351.34042358]
[-30.88186264 338.67791748]
[-22.84068871 326.01538086]
[-15.46999931 312.95120239]
[-8.78980541 299.52081299]
[-10.04941845 284.67956543]
[3.02409434 275.76925659]
[9.70428848 262.33886719]
[16.38448334 248.90849304]
[22.86397934 235.38015747]
[29.14134026 221.75683594]
[35.41870117 208.13351440]
[34.63459396 203.42245483]
[36.80163193 198.16877747]
[42.09113693 194.20234680]
[48.77133179 180.77197266]
[55.45152664 167.34158325]
[62.13172150 153.91120911]
[61.36238480 150.47021484]
[62.22150421 146.48562622]
[64.94641876 142.72688293]
[69.42185211 140.04032898]
[76.69508362 126.92163849]
[83.96831512 113.80294800]
[91.24154663 100.68424988]
[90.65303040 97.69374084]
[91.13963318 94.42299652]
[92.80723572 91.26982117]
[95.61330414 88.66554260]
[99.35830688 87.01998138]
[107.39948273 74.35745239]
[115.44065857 61.69493103]
[123.48182678 49.03240585]
[131.52299500 36.36988068]
[132.38938904 20.57241440]
[145.74378967 13.97625256]
[146.61016846 -1.82121408]
[159.96456909 -8.41737556]
[168.00573730 -21.07990074]
[176.04692078 -33.74242401]
[176.26528931 -38.95772934]
[178.26260376 -43.14867783]
[181.35076904 -45.80918884]
[184.74055481 -46.77960968]
[193.33911133 -59.07044983]
[201.93766785 -71.36128998]
[210.53623962 -83.65212250]
[219.13479614 -95.94296265]
[220.70571899 -111.68598938]
[234.34133911 -117.67926025]
[242.93989563 -129.97010803]
[244.51081848 -145.71311951]
[258.14642334 -151.70640564]
[266.74499512 -163.99723816]
[275.34356689 -176.28808594]
[283.94210815 -188.57891846]
[272.65963745 -198.48695374]
[262.53564453 -209.57603455]
[253.69300842 -221.71156311]
[246.23907471 -234.74620056]
[240.26431274 -248.52174377]
[235.84127808 -262.87097168]
[233.02365112 -277.61965942]
[231.84562683 -292.58880615]
[232.32151794 -307.59671021]
[234.44552612 -322.46115112]
[238.19189453 -337.00170898]
[243.51513672 -351.04187012]
[250.35063171 -364.41122437]
[258.61538696 -376.94744873]
[268.20910645 -388.49835205]
[279.01531982 -398.92376709]
[290.90283203 -408.09710693]
[303.72735596 -415.90701294]
[317.33322144 -422.25869751]
[331.55523682 -427.07504272]
[346.22079468 -430.29757690]
[361.15182495 -431.88720703]
[376.16714478 -431.82461548]
[391.08441162 -430.11056519]
[405.72259521 -426.76586914]
[419.90396118 -421.83114624]
[433.45639038 -415.36624146]
[446.21536255 -407.44967651]
[458.02600098 -398.17755127]
[468.74490356 -387.66244507]
[478.24200439 -376.03192139]
[486.40197754 -363.42724609]
[493.12576294 -350.00137329]
[498.33175659 -335.91732788]
[501.95678711 -321.34603882]
[503.95681763 -306.46438599]
[504.30755615 -291.45306396]
[503.00479126 -276.49426270]
[500.06430054 -261.76956177]
[495.52178955 -247.45771790]
[489.43237305 -233.73246765]
[481.87005615 -220.76040649]
[472.92654419 -208.69903564]
[462.71044922 -197.69473267]
[451.34576416 -187.88110352]
[438.97045898 -179.37725830]
[425.73477173 -172.28645325]
[411.79934692 -166.69473267]
[397.33337402 -162.66999817]
[382.51242065 -160.26109314]
[367.51644897 -159.49726868]
[352.52743530 -160.38778687]
[337.72738647 -162.92184448]
[323.29592896 -167.06867981]
[309.40826416 -172.77795410]
[296.23294067 -179.98034668]
[287.63439941 -167.68951416]
[279.03582764 -155.39868164]
[270.43725586 -143.10783386]
[269.48138428 -128.24394226]
[255.23072815 -121.37153625]
[246.63217163 -109.08069611]
[245.67628479 -94.21679688]
[231.42564392 -87.34439850]
[222.82707214 -75.05355835]
[214.22851562 -62.76272202]
[205.62994385 -50.47188568]
[197.03138733 -38.18104553]
[188.70944214 -25.70125198]
[180.66827393 -13.03872776]
[172.62709045 -0.37620300]
[172.33586121 14.51555443]
[158.40631104 22.01742554]
[158.11508179 36.90918350]
[144.18553162 44.41105270]
[136.14434814 57.07357788]
[128.10317993 69.73610687]
[120.06200409 82.39862823]
[112.02083588 95.06114960]
[104.36023712 107.95748138]
[97.08700562 121.07617188]
[89.81378174 134.19487000]
[82.54055023 147.31356812]
[75.56209564 160.59141541]
[68.88190460 174.02178955]
[62.20170593 187.45216370]
[55.52151108 200.88253784]
[49.04201508 214.41088867]
[42.76465607 228.03419495]
[36.48729706 241.65751648]
[36.71226883 248.26515198]
[33.97708130 253.24670410]
[29.81485939 255.58869934]
[23.13466454 269.01907349]
[16.45446968 282.44943237]
[17.23627090 298.25131226]
[4.64057064 306.20101929]
[-2.03962374 319.63137817]
[12.15252304 314.77517700]
[26.19066620 320.06008911]
[33.65675354 333.07000732]
[31.13739395 347.85690308]
[19.78440285 357.66046143]
[4.78821373 357.99859619]
[-6.99511576 348.71673584]
[-10.17816448 334.05654907]
[-18.21933746 346.71908569]
[-26.26050949 359.38159180]
[-34.30168152 372.04412842]
[-42.34285736 384.70666504]
[-50.38402939 397.36917114]
[-58.42520142 410.03170776]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 210]
[40 209]
[41 208]
[42 207]
[43 206]
[44 205]
[45 204]
[46 196]
[47 195]
[49 193]
[50 192]
[51 191]
[52 188]
[53 187]
[54 186]
[57 185]
[58 184]
[59 183]
[60 182]
[64 181]
[65 180]
[66 179]
[67 178]
[72 177]
[73 176]
[74 175]
[75 174]
[76 173]
[78 171]
[80 169]
[81 168]
[82 167]
[86 166]
[87 165]
[88 164]
[89 163]
[90 162]
[92 160]
[93 159]
[95 157]
[96 156]
[97 155]
[98 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
