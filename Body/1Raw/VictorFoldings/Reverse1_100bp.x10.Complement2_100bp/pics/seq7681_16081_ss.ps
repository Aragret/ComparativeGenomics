%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[48.67811966 207.86970520]
[55.37789536 221.30955505]
[60.47206497 235.43634033]
[63.89173126 250.05900574]
[65.59065247 264.97979736]
[65.54584503 279.99694824]
[63.75792313 294.90731812]
[60.25106430 309.50933838]
[55.07269287 323.60546875]
[48.29284286 337.00509644]
[40.00320053 349.52700806]
[30.31587601 361.00186157]
[19.36187935 371.27447510]
[7.28935099 380.20590210]
[-5.73844242 387.67538452]
[-19.54531479 393.58190918]
[-33.94454575 397.84555054]
[-48.74139786 400.40869141]
[-63.73576355 401.23663330]
[-78.72486115 400.31823730]
[-93.50598145 397.66586304]
[-107.87921906 393.31539917]
[-121.65019989 387.32571411]
[-134.63269043 379.77774048]
[-146.65110779 370.77362061]
[-157.54292297 360.43511963]
[-167.16082764 348.90200806]
[-175.37477112 336.33032227]
[-182.07365417 322.89001465]
[-187.16687012 308.76290894]
[-190.58557129 294.14001465]
[-192.28349304 279.21908569]
[-192.23768616 264.20196533]
[-190.44876099 249.29168701]
[-186.94093323 234.68991089]
[-181.76161194 220.59413147]
[-174.98088074 207.19494629]
[-166.69039917 194.67358398]
[-157.00230408 183.19937134]
[-146.04762268 172.92750549]
[-133.97450256 163.99687195]
[-120.94620514 156.52825928]
[-107.13893890 150.62268066]
[-92.73942566 146.35998535]
[-77.94240570 143.79783630]
[-62.94798279 142.97087097]
[-47.95894623 143.89028931]
[-33.17800522 146.54365540]
[-18.80505371 150.89506531]
[-5.03447151 156.88568115]
[7.94751215 164.43450928]
[19.96533012 173.43942261]
[30.29199791 162.56008911]
[40.61866760 151.68075562]
[43.76890945 137.12310791]
[58.88134384 132.44068909]
[69.20800781 121.56135559]
[79.53468323 110.68202209]
[89.86135101 99.80268860]
[92.68547058 92.25305939]
[100.42367554 88.83969879]
[101.06029510 75.95725250]
[110.01614380 67.24079895]
[122.10971069 66.97224426]
[132.75572205 56.40519714]
[143.40173340 45.83815002]
[154.04774475 35.27110291]
[164.69374084 24.70405579]
[156.80229187 10.43942547]
[153.24095154 -5.45449066]
[154.28916931 -21.69475937]
[159.85458374 -36.97275162]
[169.48120117 -50.05958176]
[182.38671875 -59.90496445]
[197.52601624 -65.72149658]
[213.67591858 -67.04763031]
[229.53392029 -63.78428268]
[243.82328796 -56.20220184]
[254.14994812 -67.08153534]
[264.47662354 -77.96086884]
[274.80328369 -88.84020233]
[285.12997437 -99.71953583]
[295.45663452 -110.59887695]
[285.26483154 -121.61187744]
[275.80728149 -133.26148987]
[267.12365723 -145.49887085]
[259.25036621 -158.27267456]
[252.22041321 -171.52932739]
[246.06332397 -185.21324158]
[240.80491638 -199.26698303]
[236.46722412 -213.63165283]
[233.06845093 -228.24694824]
[230.62286377 -243.05162048]
[229.14071655 -257.98352051]
[228.62820435 -272.98007202]
[229.08750916 -287.97833252]
[230.51669312 -302.91540527]
[232.90974426 -317.72866821]
[236.25663757 -332.35592651]
[240.54335022 -346.73590088]
[245.75187683 -360.80819702]
[251.86038208 -374.51385498]
[258.84326172 -387.79537964]
[266.67117310 -400.59704590]
[275.31134033 -412.86514282]
[284.72750854 -424.54824829]
[294.88018799 -435.59732056]
[305.72677612 -445.96606445]
[317.22177124 -455.61093140]
[329.31698608 -464.49151611]
[341.96166992 -472.57055664]
[355.10278320 -479.81417847]
[368.68521118 -486.19195557]
[382.65200806 -491.67718506]
[396.94458008 -496.24682617]
[411.50296021 -499.88174438]
[426.26608276 -502.56665039]
[441.17205811 -504.29031372]
[456.15832520 -505.04550171]
[471.16207886 -504.82907104]
[486.12033081 -503.64187622]
[500.97036743 -501.48889160]
[515.64990234 -498.37921143]
[530.09735107 -494.32586670]
[544.25213623 -489.34579468]
[558.05487061 -483.45996094]
[571.44769287 -476.69299316]
[584.37438965 -469.07330322]
[596.78076172 -460.63287354]
[608.61474609 -451.40704346]
[619.82672119 -441.43457031]
[630.36968994 -430.75726318]
[640.19934082 -419.41989136]
[649.27459717 -407.47003174]
[657.55725098 -394.95776367]
[665.01263428 -381.93563843]
[671.60943604 -368.45819092]
[677.32000732 -354.58203125]
[682.12042236 -340.36532593]
[685.99053955 -325.86767578]
[688.91406250 -311.14996338]
[690.87878418 -296.27383423]
[691.87646484 -281.30175781]
[691.90295410 -266.29647827]
[690.95800781 -251.32095337]
[689.04571533 -236.43801880]
[686.17407227 -221.71006775]
[682.35510254 -207.19888306]
[677.60485840 -192.96533203]
[671.94317627 -179.06912231]
[665.39392090 -165.56854248]
[657.98449707 -152.52018738]
[649.74597168 -139.97883606]
[640.71295166 -127.99704742]
[630.92327881 -116.62510681]
[620.41796875 -105.91069794]
[609.24121094 -95.89876556]
[597.43981934 -86.63130188]
[585.06329346 -78.14717865]
[572.16351318 -70.48198700]
[558.79467773 -63.66786575]
[545.01275635 -57.73340607]
[530.87561035 -52.70349503]
[516.44250488 -48.59923172]
[501.77404785 -45.43783188]
[486.93167114 -43.23255157]
[471.97769165 -41.99264145]
[456.97482300 -41.72330475]
[441.98596191 -42.42567062]
[427.07403564 -44.09679413]
[412.30151367 -46.72966385]
[397.73040771 -50.31323242]
[383.42184448 -54.83247757]
[369.43579102 -60.26844025]
[355.83096313 -66.59832001]
[342.66439819 -73.79556274]
[329.99133301 -81.82998657]
[317.86489868 -90.66789246]
[306.33596802 -100.27220154]
[296.00930786 -89.39286804]
[285.68261719 -78.51353455]
[275.35595703 -67.63420105]
[265.02929688 -56.75486755]
[254.70262146 -45.87553406]
[262.03256226 -34.21387482]
[266.35260010 -21.12446213]
[267.40570068 -7.37092781]
[265.12551880 6.24314308]
[259.64068604 18.92117119]
[251.26745605 29.92018700]
[240.49147034 38.59437943]
[227.93965149 44.43300247]
[214.34370422 47.09045410]
[200.49742126 46.40673065]
[187.21044922 42.41704941]
[175.26078796 35.35006332]
[164.61479187 45.91711044]
[153.96878052 56.48415756]
[143.32276917 67.05120850]
[132.67675781 77.61825562]
[128.99087524 94.77579498]
[111.14805603 99.32720184]
[100.74068451 110.12935638]
[90.41401672 121.00868988]
[80.08734894 131.88803101]
[69.76067352 142.76736450]
[65.87180328 158.10317993]
[51.49800110 162.00741577]
[41.17133331 172.88676453]
[30.84466362 183.76609802]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 210]
[53 209]
[54 208]
[56 206]
[57 205]
[58 204]
[59 203]
[61 202]
[64 200]
[65 199]
[66 198]
[67 197]
[68 196]
[78 184]
[79 183]
[80 182]
[81 181]
[82 180]
[83 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
