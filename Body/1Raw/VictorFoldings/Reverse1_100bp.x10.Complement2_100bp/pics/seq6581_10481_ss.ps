%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxAUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[41.35184860 616.90478516]
[40.14487076 631.96203613]
[34.74338913 646.06878662]
[25.58527184 658.08148193]
[13.41293144 667.02636719]
[-0.78687775 672.17828369]
[-15.86303902 673.11956787]
[-30.59339714 669.77392578]
[-43.78382492 662.41259766]
[-54.36503983 651.63232422]
[-61.47926331 638.30700684]
[-64.54978180 623.51684570]
[-63.32767487 608.46081543]
[-57.91202545 594.35949707]
[-48.74184418 582.35601807]
[-36.56052399 573.42333984]
[-22.35554504 568.28570557]
[-7.27844620 567.35955811]
[-3.95618653 552.73211670]
[-0.63392699 538.10467529]
[2.68833256 523.47717285]
[6.01059198 508.84973145]
[9.33285141 494.22225952]
[12.65511131 479.59481812]
[15.97737026 464.96734619]
[2.87271976 451.64215088]
[0.42758811 432.96194458]
[9.80948544 416.45166016]
[27.38470078 408.87225342]
[30.05049706 394.11105347]
[24.69825172 380.21130371]
[34.76494598 368.00588989]
[29.41270065 354.10614014]
[39.47939682 341.90072632]
[42.14519119 327.13949585]
[44.81098557 312.37829590]
[47.47677994 297.61706543]
[50.14257812 282.85586548]
[52.80837250 268.09463501]
[50.86950302 263.73004150]
[51.65187073 258.10110474]
[55.77956009 252.93643188]
[58.88367081 238.26112366]
[61.98778152 223.58583069]
[65.09188843 208.91052246]
[68.19599915 194.23522949]
[71.30010986 179.55992126]
[74.40422058 164.88461304]
[77.50833130 150.20932007]
[64.37839508 157.46223450]
[49.92795181 153.43923950]
[42.43486023 140.44487000]
[46.19150925 125.92289734]
[59.04591751 118.19216919]
[73.63449860 121.68119812]
[81.60009003 134.39036560]
[86.00108337 120.05052185]
[90.40208435 105.71067047]
[94.69620514 91.33846283]
[98.88321686 76.93467712]
[103.07022858 62.53089523]
[107.25724030 48.12711334]
[103.67958069 32.71572495]
[114.66195679 22.65407944]
[118.84896851 8.25029755]
[123.03598022 -6.15348434]
[125.48170471 -20.95275497]
[126.15148926 -35.93779373]
[126.82127380 -50.92283249]
[127.49105835 -65.90787506]
[128.16084290 -80.89291382]
[121.04747009 -95.02481079]
[129.34535217 -107.39389801]
[130.01513672 -122.37893677]
[130.68492126 -137.36396790]
[120.31557465 -126.52531433]
[105.57678223 -123.73820496]
[91.96575165 -130.04217529]
[84.55906677 -143.08598328]
[86.11923981 -158.00462341]
[96.06435394 -169.23381042]
[110.68513489 -172.58532715]
[124.52839661 -166.80915833]
[132.43121338 -154.05851746]
[134.87695312 -168.85778809]
[137.32267761 -183.65705872]
[139.76840210 -198.45632935]
[142.21412659 -213.25559998]
[140.37452698 -218.14057922]
[140.57284546 -222.77890015]
[142.37385559 -226.43559265]
[145.11370850 -228.65495300]
[148.21781921 -243.33024597]
[151.32192993 -258.00555420]
[154.42604065 -272.68084717]
[140.47534180 -278.29772949]
[127.71205139 -286.25195312]
[116.52402496 -296.30178833]
[107.25125122 -308.14181519]
[100.17552185 -321.41229248]
[95.51186371 -335.70989990]
[93.40199280 -350.60012817]
[93.91003418 -365.63055420]
[97.02054596 -380.34432983]
[102.63899994 -394.29440308]
[110.59465790 -407.05679321]
[120.64575958 -418.24368286]
[132.48686218 -427.51510620]
[145.75813293 -434.58932495]
[160.05625916 -439.25137329]
[174.94674683 -441.35955811]
[189.97709656 -440.84979248]
[204.69053650 -437.73760986]
[218.63995361 -432.11758423]
[231.40144348 -424.16049194]
[242.58720398 -414.10812378]
[251.85728455 -402.26596069]
[258.92999268 -388.99389648]
[263.59042358 -374.69522095]
[265.69689941 -359.80450439]
[265.18545532 -344.77420044]
[262.07162476 -330.06112671]
[256.44998169 -316.11233521]
[248.49143982 -303.35174561]
[238.43780518 -292.16714478]
[226.59458923 -282.89840698]
[213.32173157 -275.82717896]
[199.02253723 -271.16839600]
[184.13157654 -269.06359863]
[169.10133362 -269.57675171]
[165.99722290 -254.90144348]
[162.89312744 -240.22613525]
[159.78901672 -225.55084229]
[157.01339722 -210.80987549]
[154.56767273 -196.01060486]
[152.12194824 -181.21133423]
[149.67622375 -166.41206360]
[147.23048401 -151.61279297]
[145.66996765 -136.69418335]
[145.00018311 -121.70915222]
[144.33039856 -106.72411346]
[151.49168396 -93.66404724]
[143.14588928 -80.22312927]
[142.47610474 -65.23808289]
[141.80632019 -50.25304794]
[141.13652039 -35.26800919]
[140.46673584 -20.28297043]
[148.30366516 -33.07291412]
[159.99917603 -42.46520233]
[174.17929077 -47.35643768]
[189.17816162 -47.17200470]
[203.23371887 -41.93356323]
[214.69473267 -32.25653076]
[222.21478271 -19.27774620]
[224.91043091 -4.52194834]
[222.46496582 10.27736664]
[215.16569519 23.38158989]
[203.87013245 33.25125122]
[189.90525818 38.72687149]
[174.91166687 39.16518021]
[160.65077209 34.51468658]
[148.79795837 25.32172775]
[140.74565125 12.66627979]
[137.43975830 -1.96647334]
[133.25274658 12.43730831]
[129.06573486 26.84109116]
[132.94288635 41.22222519]
[121.66102600 52.31412506]
[117.47401428 66.71791077]
[113.28700256 81.12168884]
[109.09999084 95.52547455]
[110.05286407 103.52951050]
[104.74192810 110.11167145]
[100.34093475 124.45151520]
[95.93993378 138.79136658]
[92.18363190 153.31343079]
[89.07952118 167.98872375]
[85.97541046 182.66403198]
[82.87129974 197.33932495]
[79.76719666 212.01463318]
[76.66308594 226.68994141]
[73.55897522 241.36523438]
[70.45486450 256.04052734]
[67.56958771 270.76043701]
[64.90379333 285.52163696]
[62.23799896 300.28286743]
[59.57220459 315.04409790]
[56.90640640 329.80529785]
[54.24061203 344.56652832]
[59.40217972 359.52209473]
[49.52616119 370.67169189]
[54.68773270 385.62722778]
[44.81171417 396.77682495]
[42.14591980 411.53805542]
[51.39440155 418.31152344]
[57.42012787 428.00332642]
[59.38508224 439.19308472]
[57.04310608 450.25762939]
[50.77000427 459.60638428]
[41.50383759 465.91003418]
[30.60483170 468.28961182]
[27.28257179 482.91708374]
[23.96031189 497.54452515]
[20.63805199 512.17199707]
[17.31579208 526.79943848]
[13.99353313 541.42694092]
[10.67127323 556.05438232]
[7.34901428 570.68182373]
[20.54683304 578.02990723]
[31.13886833 588.79956055]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 208]
[19 207]
[20 206]
[21 205]
[22 204]
[23 203]
[24 202]
[25 201]
[29 194]
[30 193]
[32 191]
[34 189]
[35 188]
[36 187]
[37 186]
[38 185]
[39 184]
[42 183]
[43 182]
[44 181]
[45 180]
[46 179]
[47 178]
[48 177]
[49 176]
[56 175]
[57 174]
[58 173]
[59 171]
[60 170]
[61 169]
[62 168]
[64 166]
[65 165]
[66 164]
[67 147]
[68 146]
[69 145]
[70 144]
[71 143]
[73 141]
[74 140]
[75 139]
[84 138]
[85 137]
[86 136]
[87 135]
[88 134]
[92 133]
[93 132]
[94 131]
[95 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
