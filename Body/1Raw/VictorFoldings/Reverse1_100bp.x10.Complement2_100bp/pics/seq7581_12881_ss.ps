%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[25.13658142 576.86431885]
[14.44711018 587.42279053]
[2.39216638 596.39074707]
[-10.79359627 603.59362793]
[-24.85351372 608.89123535]
[-39.51390457 612.18048096]
[-54.48940277 613.39733887]
[-69.48850250 612.51800537]
[-84.21923828 609.55975342]
[-98.39488220 604.58007812]
[-111.73949432 597.67590332]
[-123.99332428 588.98162842]
[-134.91783142 578.66656494]
[-144.30038452 566.93139648]
[-151.95834351 554.00463867]
[-157.74264526 540.13781738]
[-161.54069519 525.60095215]
[-163.27856445 510.67694092]
[-162.92242432 495.65631104]
[-160.47920227 480.83142090]
[-155.99645996 466.49087524]
[-149.56144714 452.91381836]
[-141.29943848 440.36450195]
[-131.37126160 429.08721924]
[-119.97014618 419.30145264]
[-107.31803894 411.19775391]
[-93.66120148 404.93380737]
[-79.26548004 400.63156128]
[-64.41108704 398.37475586]
[-49.38717270 398.20730591]
[-34.48617554 400.13250732]
[-30.51407814 385.66796875]
[-26.54198265 371.20346069]
[-22.56988525 356.73892212]
[-18.59778976 342.27441406]
[-20.13953781 337.75421143]
[-18.85810089 332.21752930]
[-14.28610134 327.44171143]
[-9.88510323 313.10186768]
[-5.48410511 298.76202393]
[-1.08310711 284.42218018]
[3.31789088 270.08233643]
[-8.15209579 279.74874878]
[-22.65851021 283.56500244]
[-37.40039062 280.79428101]
[-49.53131485 271.97155762]
[-56.70898819 258.80032349]
[-57.54751205 243.82377625]
[-51.88498688 229.93365479]
[-40.81475067 219.81188965]
[-26.47429848 215.41287231]
[-11.63254261 217.58596802]
[0.84480315 225.91157532]
[8.54856110 238.78216553]
[9.99109554 253.71389771]
[16.87050819 240.38446045]
[23.74991989 227.05503845]
[20.37183571 215.43974304]
[25.99409866 204.27847290]
[38.08980179 199.79998779]
[45.16690826 186.57446289]
[52.24401093 173.34893799]
[59.32111740 160.12339783]
[66.39822388 146.89787292]
[73.47532654 133.67234802]
[80.55243683 120.44682312]
[87.62953949 107.22129822]
[87.37055206 93.24185944]
[99.14493561 85.70159912]
[98.83396149 69.88344574]
[111.66076660 62.31230164]
[118.73787689 49.08677673]
[125.81497955 35.86124802]
[125.50400543 20.04309845]
[138.33081055 12.47195148]
[145.40791321 -0.75357574]
[152.48503113 -13.97910309]
[159.56213379 -27.20462990]
[166.63923645 -40.43015671]
[173.71633911 -53.65568542]
[180.79344177 -66.88121033]
[187.87054443 -80.10674286]
[173.23796082 -76.80712128]
[160.48484802 -84.70382690]
[156.91676331 -99.27326965]
[164.57766724 -112.16941833]
[179.07905579 -116.00476074]
[192.11386108 -108.58224487]
[196.21527100 -94.15476990]
[204.44407654 -106.69616699]
[212.67289734 -119.23757172]
[220.90170288 -131.77897644]
[209.17694092 -141.15258789]
[198.38146973 -151.58293152]
[188.61016846 -162.97837830]
[179.94889832 -175.23875427]
[172.47377014 -188.25631714]
[166.25048828 -201.91667175]
[161.33375549 -216.09976196]
[157.76675415 -230.68095398]
[155.58085632 -245.53208923]
[154.79525757 -260.52267456]
[155.41685486 -275.52093506]
[157.44021606 -290.39508057]
[160.84751892 -305.01440430]
[165.60885620 -319.25042725]
[171.68235779 -332.97802734]
[179.01466370 -346.07656860]
[187.54133606 -358.43093872]
[197.18743896 -369.93255615]
[207.86817932 -380.48034668]
[219.48971558 -389.98162842]
[231.94992065 -398.35290527]
[245.13926697 -405.52056885]
[258.94186401 -411.42166138]
[273.23638916 -416.00430298]
[287.89724731 -419.22824097]
[302.79559326 -421.06512451]
[317.80047607 -421.49884033]
[332.78002930 -420.52554321]
[347.60263062 -418.15377808]
[362.13800049 -414.40444946]
[376.25839233 -409.31042480]
[389.83972168 -402.91653442]
[402.76263428 -395.27896118]
[414.91357422 -386.46481323]
[426.18572998 -376.55154419]
[436.48004150 -365.62628174]
[445.70605469 -353.78503418]
[453.78271484 -341.13186646]
[460.63897705 -327.77798462]
[466.21463013 -313.84075928]
[470.46066284 -299.44265747]
[473.33975220 -284.71017456]
[474.82662964 -269.77285767]
[474.90820312 -254.76193237]
[473.58374023 -239.80934143]
[470.86489868 -225.04646301]
[466.77557373 -210.60305786]
[461.35171509 -196.60604858]
[454.64096069 -183.17846680]
[446.70230103 -170.43827820]
[437.60549927 -158.49748230]
[427.43051147 -147.46098328]
[416.26675415 -137.42581177]
[404.21234131 -128.48013306]
[391.37316895 -120.70256042]
[377.86212158 -114.16146088]
[363.79791260 -108.91431427]
[349.30413818 -105.00723267]
[334.50820923 -102.47454834]
[319.54010010 -101.33853149]
[304.53140259 -101.60914612]
[289.61398315 -103.28402710]
[274.91897583 -106.34845734]
[260.57546997 -110.77549744]
[246.70956421 -116.52624512]
[233.44309998 -123.55016327]
[225.21429443 -111.00876617]
[216.98548889 -98.46736145]
[208.75668335 -85.92596436]
[201.09608459 -73.02963257]
[194.01896667 -59.80410767]
[186.94186401 -46.57857895]
[179.86476135 -33.35305405]
[172.78765869 -20.12752533]
[165.71055603 -6.90199804]
[158.63345337 6.32352972]
[151.55633545 19.54905701]
[152.37351990 34.42123032]
[139.04051208 42.93835449]
[131.96339417 56.16387939]
[124.88629150 69.38941193]
[125.70346832 84.26158142]
[112.37046051 92.77870178]
[112.62944794 106.75814056]
[100.85506439 114.29840088]
[93.77796173 127.52392578]
[86.70085907 140.74945068]
[79.62374878 153.97497559]
[72.54664612 167.20051575]
[65.46954346 180.42604065]
[58.39243317 193.65156555]
[51.31533051 206.87709045]
[52.33621216 225.26293945]
[37.07934952 233.93444824]
[30.19993782 247.26387024]
[23.32052422 260.59329224]
[17.65773773 274.48333740]
[13.25673962 288.82318115]
[8.85574150 303.16302490]
[4.45474386 317.50286865]
[0.05374582 331.84271240]
[-4.13326550 346.24649048]
[-8.10536194 360.71102905]
[-12.07745743 375.17553711]
[-16.04955482 389.64007568]
[-20.02165031 404.10458374]
[-6.22723055 410.05944824]
[6.60414934 417.87619019]
[18.22272301 427.40274048]
[28.40233040 438.45361328]
[36.94482422 450.81369019]
[43.68391800 464.24243164]
[48.48844147 478.47839355]
[51.26486588 493.24450684]
[51.95914841 508.25329590]
[50.55777740 523.21264648]
[47.08802795 537.83135986]
[41.61744308 551.82489014]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 198]
[32 197]
[33 196]
[34 195]
[35 194]
[38 193]
[39 192]
[40 191]
[41 190]
[42 189]
[55 188]
[56 187]
[57 186]
[60 184]
[61 183]
[62 182]
[63 181]
[64 180]
[65 179]
[66 178]
[67 177]
[69 175]
[71 173]
[72 172]
[73 171]
[75 169]
[76 168]
[77 167]
[78 166]
[79 165]
[80 164]
[81 163]
[82 162]
[89 161]
[90 160]
[91 159]
[92 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
