%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[-112.99283600 444.64904785]
[-105.77438354 457.82183838]
[-100.29973602 471.80957031]
[-96.65880585 486.38253784]
[-94.91136932 501.30148315]
[-95.08612823 516.32141113]
[-97.18021393 531.19561768]
[-101.15923309 545.67999268]
[-106.95784760 559.53656006]
[-114.48084259 572.53778076]
[-123.60468292 584.47027588]
[-134.17955017 595.13800049]
[-146.03178406 604.36584473]
[-158.96676636 612.00219727]
[-172.77210999 617.92175293]
[-187.22108459 622.02728271]
[-202.07644653 624.25134277]
[-217.09426880 624.55743408]
[-232.02790833 622.94049072]
[-246.63217163 619.42712402]
[-260.66723633 614.07501221]
[-273.90264893 606.97204590]
[-286.12103271 598.23480225]
[-297.12176514 588.00677490]
[-306.72424316 576.45599365]
[-314.77075195 563.77203369]
[-321.12915039 550.16326904]
[-325.69503784 535.85308838]
[-328.39343262 521.07653809]
[-329.18005371 506.07620239]
[-328.04196167 491.09844971]
[-324.99783325 476.38922119]
[-320.09768677 462.19003296]
[-313.42196655 448.73406982]
[-305.08029175 436.24227905]
[-295.20965576 424.91979980]
[-283.97210693 414.95254517]
[-271.55221558 406.50418091]
[-258.15393066 399.71343994]
[-243.99723816 394.69186401]
[-229.31460571 391.52188110]
[-214.34715271 390.25552368]
[-199.34065247 390.91363525]
[-184.54151917 393.48538208]
[-170.19276428 397.92855835]
[-156.53001404 404.17016602]
[-143.77763367 412.10772705]
[-134.28872681 400.49044800]
[-132.22996521 385.73883057]
[-117.50764465 379.94537354]
[-108.01874542 368.32812500]
[-98.52985382 356.71084595]
[-89.04095459 345.09359741]
[-94.71269989 332.66989136]
[-94.47713470 318.94860840]
[-88.32321167 306.60848999]
[-77.40087891 298.08319092]
[-63.80657578 295.08135986]
[-50.18095779 298.24447632]
[-40.52014542 286.76977539]
[-30.85933685 275.29507446]
[-21.19852638 263.82037354]
[-11.53771496 252.34567261]
[-1.87690473 240.87097168]
[7.78390551 229.39627075]
[17.44471550 217.92156982]
[26.22531891 205.76011658]
[34.07707596 192.97927856]
[41.92882919 180.19842529]
[41.99831009 165.30398560]
[55.81463242 157.59556580]
[63.66638565 144.81471252]
[71.51814270 132.03387451]
[79.36989594 119.25302887]
[87.22164917 106.47219086]
[87.79519653 92.50212860]
[99.99750519 85.67605591]
[85.42870331 89.24675751]
[71.91803741 82.73047638]
[65.64240265 69.10636139]
[69.47093964 54.60317993]
[81.65328979 45.85158920]
[96.61985016 46.85269928]
[107.52809906 57.14881516]
[109.39054108 72.03450012]
[118.52934265 60.13986588]
[120.80165863 44.48268890]
[134.69128418 39.10425186]
[137.43814087 30.39261627]
[144.05575562 27.10190201]
[153.37065125 15.34465122]
[162.59774780 3.51838112]
[165.34458923 -5.19325590]
[171.96221924 -8.48396873]
[181.27709961 -20.24122047]
[190.59199524 -31.99847221]
[199.90687561 -43.75572205]
[189.12602234 -54.20330429]
[179.43901062 -65.67240906]
[170.94209290 -78.04904175]
[163.71974182 -91.21020508]
[157.84373474 -105.02509308]
[153.37245178 -119.35639954]
[150.35034180 -134.06169128]
[148.80744934 -148.99481201]
[148.75910950 -164.00733948]
[150.20578003 -178.95008850]
[153.13310242 -193.67454529]
[157.51199341 -208.03434753]
[163.29890442 -221.88679504]
[170.43634033 -235.09419250]
[178.85334778 -247.52531433]
[188.46629333 -259.05657959]
[199.17962646 -269.57336426]
[210.88687134 -278.97119141]
[223.47166443 -287.15664673]
[236.80894470 -294.04833984]
[250.76614380 -299.57781982]
[265.20455933 -303.69012451]
[279.98068237 -306.34436035]
[294.94763184 -307.51416016]
[309.95672607 -307.18789673]
[324.85870361 -305.36880493]
[339.50552368 -302.07498169]
[353.75161743 -297.33917236]
[367.45535278 -291.20840454]
[380.48056030 -283.74365234]
[392.69775391 -275.01907349]
[403.98556519 -265.12139893]
[414.23178101 -254.14898682]
[423.33456421 -242.21089172]
[431.20343018 -229.42576599]
[437.76019287 -215.92068481]
[442.93969727 -201.82984924]
[446.69046021 -187.29333496]
[448.97515869 -172.45558167]
[449.77114868 -157.46408081]
[449.07049561 -142.46783447]
[446.88012695 -127.61585999]
[443.22186279 -113.05578613]
[438.13204956 -98.93231964]
[431.66128540 -85.38581848]
[423.87384033 -72.55093384]
[414.84713745 -60.55521774]
[404.67086792 -49.51789093]
[393.44622803 -39.54865646]
[381.28469849 -30.74659157]
[368.30722046 -23.19917679]
[354.64273071 -16.98142815]
[340.42706299 -12.15513802]
[325.80148315 -8.76827431]
[310.91134644 -6.85449982]
[295.90463257 -6.43283319]
[280.93054199 -7.50746632]
[266.13784790 -10.06771755]
[251.67359924 -14.08814240]
[237.68151855 -19.52878380]
[224.30070496 -26.33556557]
[211.66412354 -34.44084167]
[202.34924316 -22.68358803]
[193.03436279 -10.92633724]
[183.71946716 0.83091366]
[174.49237061 12.65718365]
[172.90991211 19.87643623]
[165.12789917 24.65953445]
[155.81301880 36.41678619]
[146.58592224 48.24305344]
[144.96726990 63.04944611]
[130.42398071 69.27867126]
[121.28517151 81.17330170]
[112.77835083 93.52780914]
[112.20480347 107.49787140]
[100.00249481 114.32394409]
[92.15074158 127.10478973]
[84.29898071 139.88563538]
[76.44722748 152.66647339]
[68.59547424 165.44731140]
[67.96438599 181.25593567]
[54.70967102 188.05018616]
[46.85791779 200.83102417]
[39.00616074 213.61187744]
[52.88608932 207.92437744]
[67.76316071 209.84083557]
[79.74854279 218.86029053]
[85.70928192 232.62507629]
[84.08726501 247.53712463]
[75.30648041 259.69845581]
[61.66220093 265.93011475]
[46.72100830 264.60317993]
[34.38849640 256.06448364]
[27.88835335 242.54605103]
[28.91941643 227.58238220]
[19.25860596 239.05708313]
[9.59779549 250.53178406]
[-0.06301507 262.00646973]
[-9.72382545 273.48117065]
[-19.38463593 284.95587158]
[-29.04544640 296.43057251]
[-38.70625687 307.90527344]
[-32.91687012 323.39318848]
[-35.71203995 339.59448242]
[-46.23554611 352.10339355]
[-61.54266739 357.56671143]
[-77.42369080 354.58248901]
[-86.91259003 366.19973755]
[-96.40148163 377.81701660]
[-105.89038086 389.43426514]
[-108.62786102 405.01684570]
[-122.67146301 409.97937012]
[-132.16036987 421.59661865]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 210]
[48 209]
[50 207]
[51 206]
[52 205]
[53 204]
[59 199]
[60 198]
[61 197]
[62 196]
[63 195]
[64 194]
[65 193]
[66 192]
[67 181]
[68 180]
[69 179]
[71 177]
[72 176]
[73 175]
[74 174]
[75 173]
[77 171]
[85 170]
[86 169]
[88 167]
[90 166]
[91 165]
[92 163]
[94 162]
[95 161]
[96 160]
[97 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
