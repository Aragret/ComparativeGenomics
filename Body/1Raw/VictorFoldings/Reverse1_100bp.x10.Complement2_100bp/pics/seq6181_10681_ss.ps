%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[36.47060013 682.64111328]
[25.03354454 692.36798096]
[12.64239502 700.84600830]
[-0.56708109 707.98236084]
[-14.45015526 713.69885254]
[-28.85471725 717.93280029]
[-43.62294006 720.63781738]
[-58.59301758 721.78430176]
[-73.60092926 721.35974121]
[-88.48223877 719.36865234]
[-103.07390594 715.83300781]
[-117.21604156 710.79138184]
[-130.75370789 704.29913330]
[-143.53857422 696.42736816]
[-155.43057251 687.26232910]
[-166.29939270 676.90441895]
[-176.02595520 665.46710205]
[-184.50369263 653.07574463]
[-191.63970947 639.86608887]
[-197.35585022 625.98291016]
[-201.58944702 611.57824707]
[-204.29412842 596.80993652]
[-205.44026184 581.83984375]
[-205.01530457 566.83190918]
[-203.02388000 551.95068359]
[-199.48783875 537.35906982]
[-194.44590759 523.21704102]
[-187.95332336 509.67956543]
[-180.08123779 496.89486694]
[-170.91589355 485.00311279]
[-160.55770874 474.13455200]
[-149.12017822 464.40826416]
[-136.72862244 455.93081665]
[-123.51879883 448.79510498]
[-109.63545227 443.07931519]
[-95.23068237 438.84606934]
[-80.46232605 436.14175415]
[-65.49219513 434.99597168]
[-50.48430252 435.42129517]
[-35.60308838 437.41308594]
[-21.01159668 440.94949341]
[-15.97468090 426.82046509]
[-10.93776417 412.69143677]
[-5.90084791 398.56240845]
[-1.07485044 384.35992432]
[3.53915882 370.08721924]
[8.15316772 355.81448364]
[12.76717758 341.54174805]
[17.38118744 327.26901245]
[21.99519539 312.99627686]
[26.60920525 298.72354126]
[31.22321510 284.45080566]
[22.39255905 274.43774414]
[19.64065933 261.26309204]
[23.79100990 248.34626770]
[33.86135101 239.09388733]
[47.29367447 236.00138855]
[52.11967468 221.79893494]
[56.94567108 207.59648132]
[47.05092621 194.49795532]
[46.91194153 177.91656494]
[56.78157425 164.38542175]
[72.93024445 159.35388184]
[77.54425812 145.08114624]
[82.15826416 130.80841064]
[78.71102142 116.31822205]
[90.31812286 105.56713867]
[94.82575226 91.26045227]
[99.22675323 76.92060852]
[103.62774658 62.58076096]
[108.02874756 48.24091339]
[102.68621826 36.50122833]
[106.64703369 24.64813995]
[117.27056122 18.86305618]
[121.88457489 4.59032202]
[126.49858093 -9.68241119]
[131.11259460 -23.95514488]
[126.84043121 -41.86687851]
[140.31332397 -53.11178970]
[144.71432495 -67.45163727]
[149.11532593 -81.79148102]
[153.51631165 -96.13133240]
[157.91731262 -110.47117615]
[157.44348145 -119.59330750]
[162.49206543 -124.99087524]
[167.10606384 -139.26361084]
[171.72007751 -153.53634644]
[158.40533447 -146.62855530]
[143.73852539 -149.77259827]
[134.42514038 -161.53102112]
[134.72311401 -176.52806091]
[144.49623108 -187.90727234]
[159.27635193 -190.46621704]
[172.30619812 -183.03498840]
[177.62872314 -169.00918579]
[183.70256042 -182.72445679]
[189.77639771 -196.43972778]
[176.99488831 -204.33572388]
[165.40763855 -213.89865112]
[155.23052979 -224.95034790]
[146.65312195 -237.28492737]
[139.83525085 -250.67262268]
[134.90388489 -264.86401367]
[131.95091248 -279.59472656]
[131.03135681 -294.59030151]
[132.16233826 -309.57147217]
[135.32278442 -324.25906372]
[140.45381165 -338.37945557]
[147.45985413 -351.66967773]
[156.21037292 -363.88204956]
[166.54235840 -374.78909302]
[178.26333618 -384.18762207]
[191.15495300 -391.90255737]
[204.97702026 -397.79016113]
[219.47207642 -401.74075317]
[234.37007141 -403.68072510]
[249.39346313 -403.57397461]
[264.26239014 -401.42242432]
[278.69982910 -397.26623535]
[292.43682861 -391.18276978]
[305.21749878 -383.28536987]
[316.80368042 -373.72119141]
[326.97961426 -362.66839600]
[335.55566406 -350.33288574]
[342.37210083 -336.94445801]
[347.30194092 -322.75253296]
[350.25329590 -308.02151489]
[351.17123413 -293.02581787]
[350.03863525 -278.04479980]
[346.87661743 -263.35754395]
[341.74404907 -249.23768616]
[334.73657227 -235.94824219]
[325.98474121 -223.73681641]
[315.65155029 -212.83088684]
[303.92956543 -203.43360901]
[291.03710938 -195.72007751]
[277.21441650 -189.83396912]
[262.71893311 -185.88494873]
[247.82072449 -183.94657898]
[232.79733276 -184.05497742]
[217.92864990 -186.20811462]
[203.49166870 -190.36589050]
[197.41783142 -176.65061951]
[191.34399414 -162.93536377]
[185.99281311 -148.92233276]
[181.37879944 -134.64959717]
[176.76478577 -120.37686920]
[172.25717163 -106.07018280]
[167.85617065 -91.73033142]
[163.45516968 -77.39048767]
[159.05416870 -63.05064011]
[154.65316772 -48.71079254]
[160.04174805 -37.88074875]
[156.49256897 -25.89796829]
[145.38533020 -19.34113503]
[140.77131653 -5.06840229]
[136.15730286 9.20433140]
[131.54328918 23.47706413]
[136.13684082 40.41419220]
[122.36859131 52.64191055]
[117.96759796 66.98175812]
[113.56659698 81.32160950]
[109.16559601 95.66145325]
[109.99919891 103.67878723]
[104.59085846 110.18115234]
[107.70807648 125.69223022]
[96.43099976 135.42242432]
[91.81698608 149.69515991]
[87.20298004 163.96789551]
[96.12775421 174.47213745]
[98.67656708 187.90798950]
[94.28872681 200.74607849]
[84.21155548 209.66766357]
[71.14812469 212.42248535]
[66.32212830 226.62493896]
[61.49613190 240.82739258]
[71.44095612 254.50936890]
[71.27276611 271.25668335]
[61.25592041 284.47125244]
[45.49594879 289.06481934]
[40.88193893 303.33755493]
[36.26792908 317.61029053]
[31.65391922 331.88302612]
[27.03991127 346.15576172]
[22.42590141 360.42846680]
[17.81189156 374.70120239]
[13.19788265 388.97393799]
[14.20645618 395.50802612]
[12.08261204 400.77929688]
[8.22818184 403.59930420]
[3.19126511 417.72833252]
[-1.84565103 431.85736084]
[-6.88256741 445.98638916]
[6.65541458 452.47799683]
[19.44066429 460.34915161]
[31.33310127 469.51361084]
[42.20242691 479.87100220]
[51.92954636 491.30783081]
[60.40788651 503.69876099]
[67.54455566 516.90808105]
[73.26135254 530.79101562]
[77.49565125 545.19549561]
[80.20105743 559.96362305]
[81.34792328 574.93365479]
[80.92368317 589.94158936]
[78.93299103 604.82293701]
[75.39765167 619.41473389]
[70.35640717 633.55694580]
[63.86448669 647.09478760]
[55.99301910 659.87988281]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 193]
[42 192]
[43 191]
[44 190]
[45 187]
[46 186]
[47 185]
[48 184]
[49 183]
[50 182]
[51 181]
[52 180]
[57 176]
[58 175]
[59 174]
[63 169]
[64 168]
[65 167]
[67 165]
[68 163]
[69 162]
[70 161]
[71 160]
[74 158]
[75 157]
[76 156]
[77 155]
[79 152]
[80 151]
[81 150]
[82 149]
[83 148]
[85 147]
[86 146]
[87 145]
[95 144]
[96 143]
[97 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
