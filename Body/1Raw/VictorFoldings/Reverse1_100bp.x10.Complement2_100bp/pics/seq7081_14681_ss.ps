%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[134.58357239 629.00982666]
[126.26469421 616.38891602]
[122.03707886 601.87622070]
[122.27664948 586.76220703]
[126.96208954 572.39074707]
[135.67678833 560.03979492]
[147.64582825 550.80761719]
[161.80494690 545.51507568]
[160.91213989 530.54168701]
[160.01931763 515.56829834]
[159.12649536 500.59487915]
[158.23368835 485.62145996]
[149.75256348 473.37728882]
[156.65473938 459.14105225]
[155.76193237 444.16766357]
[154.86911011 429.19424438]
[153.97630310 414.22082520]
[153.08348083 399.24743652]
[152.19065857 384.27401733]
[151.29785156 369.30062866]
[149.18322754 354.45043945]
[145.86096191 339.82296753]
[142.53871155 325.19549561]
[139.21644592 310.56805420]
[135.89418030 295.94058228]
[121.62566376 291.66567993]
[111.34429932 280.75009155]
[107.88419342 266.05676270]
[112.27207184 251.50880432]
[123.42539215 241.04216003]
[120.10313416 226.41470337]
[115.55623627 220.58824158]
[116.84201050 211.54475403]
[113.73790741 196.86946106]
[110.63379669 182.19415283]
[107.52968597 167.51885986]
[104.31640625 152.86706543]
[100.99414825 138.23960876]
[97.67189026 123.61214447]
[94.34963226 108.98468781]
[90.16262054 94.58090210]
[85.12570190 80.45187378]
[80.08879089 66.32284546]
[68.16673279 55.92211914]
[71.18102264 41.33570862]
[66.14410400 27.20668030]
[61.10718918 13.07765007]
[56.07027054 -1.05137956]
[42.46058273 -0.53156781]
[29.27169228 -3.86164927]
[17.56901741 -10.76285076]
[8.29515839 -20.66831589]
[2.19398665 -32.76965714]
[-0.24902073 -46.08292389]
[1.15460110 -59.52861023]
[6.28180170 -72.01917267]
[14.70873928 -82.54701233]
[25.74580193 -90.26574707]
[21.13179207 -104.53847504]
[16.51778412 -118.81121063]
[11.90377426 -133.08393860]
[7.28976488 -147.35667419]
[2.67575550 -161.62940979]
[-11.11513710 -168.87158203]
[-15.59107876 -183.41189575]
[-8.60178757 -196.51477051]
[-13.21579647 -210.78750610]
[-24.82289886 -221.53858948]
[-21.37565422 -236.02877808]
[-25.98966408 -250.30151367]
[-30.60367393 -264.57424927]
[-35.21768188 -278.84698486]
[-39.83169174 -293.11972046]
[-44.55182648 -307.35769653]
[-49.37782288 -321.56015015]
[-64.19103241 -319.00765991]
[-79.22117615 -318.80401611]
[-94.09810638 -320.95422363]
[-108.45547485 -325.40533447]
[-121.93971252 -332.04776001]
[-134.21876526 -340.71789551]
[-144.99024963 -351.20223999]
[-153.98890686 -363.24264526]
[-160.99313354 -376.54254150]
[-165.83044434 -390.77441406]
[-168.38171387 -405.58786011]
[-168.58412170 -420.61801147]
[-166.43269348 -435.49475098]
[-161.98037720 -449.85174561]
[-155.33685303 -463.33544922]
[-146.66569519 -475.61380005]
[-136.18045044 -486.38439941]
[-124.13933563 -495.38208008]
[-110.83885956 -502.38519287]
[-96.60655975 -507.22134399]
[-81.79292297 -509.77139282]
[-66.76275635 -509.97256470]
[-51.88618088 -507.81988525]
[-37.52954865 -503.36639404]
[-24.04640198 -496.72177124]
[-11.76877975 -488.04959106]
[-0.99902797 -477.56344604]
[7.99763870 -465.52160645]
[14.99966908 -452.22055054]
[19.83463287 -437.98785400]
[22.38346291 -423.17401123]
[22.58339310 -408.14382935]
[20.42950058 -393.26742554]
[15.97482586 -378.91116333]
[9.32906914 -365.42855835]
[0.65588921 -353.15164185]
[-9.83113003 -342.38275146]
[-21.87373543 -333.38708496]
[-35.17536926 -326.38616943]
[-30.34937096 -312.18368530]
[-25.22099686 -306.86190796]
[-25.55895805 -297.73373413]
[-20.94495010 -283.46099854]
[-16.33094025 -269.18826294]
[-11.71693039 -254.91552734]
[-7.10292149 -240.64279175]
[4.17415667 -230.91258240]
[1.05693674 -215.40150452]
[5.67094612 -201.12878418]
[19.00768852 -194.59678650]
[23.89027023 -180.18792725]
[16.94848824 -166.24342346]
[21.56249809 -151.97068787]
[26.17650795 -137.69795227]
[30.79051590 -123.42522430]
[35.40452576 -109.15248871]
[40.01853561 -94.87975311]
[56.47507095 -94.60269165]
[71.86623383 -88.69911957]
[84.32551575 -77.86612701]
[92.33551025 -63.39976883]
[94.91274261 -47.03995895]
[91.72834778 -30.76125145]
[83.14994812 -16.53451157]
[70.19930267 -6.08829594]
[75.23621368 8.04073334]
[80.27313232 22.16976357]
[85.31005096 36.29879379]
[96.87183380 45.68891907]
[94.21781921 61.28593063]
[99.25473022 75.41495514]
[104.29164886 89.54399109]
[109.80188751 75.59274292]
[122.39785004 67.44770050]
[137.38154602 68.14675903]
[149.16444397 77.42918396]
[153.35179138 91.83286285]
[148.38183594 105.98558807]
[136.10823059 114.60872650]
[121.10872650 114.48607635]
[108.97708893 105.66242981]
[112.29935455 120.28988647]
[115.62161255 134.91734314]
[118.94387054 149.54479980]
[123.89625549 157.22019958]
[122.20498657 164.41474915]
[125.30909729 179.09004211]
[128.41320801 193.76535034]
[131.51731873 208.44065857]
[134.73059082 223.09243774]
[138.05285645 237.71989441]
[152.63314819 242.34179688]
[162.87477112 253.56704712]
[166.10116577 268.31347656]
[161.54365540 282.59930420]
[150.52165222 292.61831665]
[153.84390259 307.24578857]
[157.16616821 321.87322998]
[160.48841858 336.50070190]
[163.81068420 351.12817383]
[169.31478882 337.17449951]
[180.61251831 327.30731201]
[195.17993164 323.73098755]
[209.76264954 327.24444580]
[221.10284424 337.06280518]
[226.66708374 350.99258423]
[225.21229553 365.92187500]
[217.06350708 378.51541138]
[204.04115295 385.95977783]
[189.05448914 386.59185791]
[175.45153809 380.27047729]
[166.27125549 368.40780640]
[167.16406250 383.38122559]
[168.05688477 398.35461426]
[168.94970703 413.32803345]
[169.84251404 428.30142212]
[170.73533630 443.27484131]
[171.62814331 458.24822998]
[180.17312622 471.56341553]
[173.20709229 484.72866821]
[174.09989929 499.70205688]
[174.99272156 514.67547607]
[175.88554382 529.64886475]
[176.77835083 544.62225342]
[191.46606445 548.19476318]
[204.44737244 555.93927002]
[214.56799316 567.16711426]
[220.92800903 580.87994385]
[222.96189880 595.85839844]
[220.48880005 610.77062988]
[213.72862244 624.29064941]
[203.28247070 635.21630859]
[190.07922363 642.57604980]
[175.29289246 645.71545410]
[160.23826599 644.35534668]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 199]
[9 198]
[10 197]
[11 196]
[12 195]
[14 193]
[15 192]
[16 191]
[17 190]
[18 189]
[19 188]
[20 187]
[21 175]
[22 174]
[23 173]
[24 172]
[25 171]
[30 166]
[31 165]
[33 164]
[34 163]
[35 162]
[36 161]
[37 159]
[38 158]
[39 157]
[40 156]
[41 147]
[42 146]
[43 145]
[45 143]
[46 142]
[47 141]
[48 140]
[58 132]
[59 131]
[60 130]
[61 129]
[62 128]
[63 127]
[66 124]
[67 123]
[69 121]
[70 120]
[71 119]
[72 118]
[73 117]
[74 115]
[75 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
