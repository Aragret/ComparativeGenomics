%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[126.31291199 675.60021973]
[125.67055511 660.53863525]
[128.65202332 645.76116943]
[135.08398438 632.12689209]
[144.59246826 620.42852783]
[156.62469482 611.34613037]
[170.48110962 605.40783691]
[168.03538513 590.60858154]
[165.58964539 575.80932617]
[163.14392090 561.01007080]
[160.69819641 546.21075439]
[158.25247192 531.41149902]
[155.80674744 516.61224365]
[153.36100769 501.81295776]
[150.80517578 487.03231812]
[148.13938904 472.27108765]
[145.47358704 457.50988770]
[142.80780029 442.74865723]
[140.14199829 427.98745728]
[130.26597595 416.83786011]
[135.42755127 401.88229370]
[132.76174927 387.12106323]
[130.09596252 372.35986328]
[117.09461212 371.93548584]
[104.42591095 368.95800781]
[92.58646393 363.54177856]
[82.04080963 355.89691162]
[73.20321655 346.32101440]
[66.42137909 335.18753052]
[61.96276474 322.93127441]
[60.00405884 310.03146362]
[60.62414932 296.99291992]
[63.80096436 284.32632446]
[69.41225433 272.52819824]
[77.24028778 262.06152344]
[86.98030090 253.33749390]
[98.25235748 246.69938660]
[110.61617279 242.40905762]
[108.83370972 227.51533508]
[107.05123901 212.62161255]
[105.26877594 197.72790527]
[103.48631287 182.83418274]
[101.59301758 167.95414734]
[99.58900452 153.08862305]
[97.58499146 138.22309875]
[95.58097839 123.35756683]
[93.57696533 108.49203491]
[90.36368561 93.84024811]
[85.96269226 79.50040436]
[81.56169128 65.16055298]
[77.16069794 50.82070923]
[72.44055939 36.58271790]
[67.40364075 22.45368958]
[62.26168442 8.36254787]
[56.49565125 -5.48493767]
[50.21828842 -19.10825348]
[43.94092941 -32.73157120]
[37.66357040 -46.35488510]
[31.38620758 -59.97820282]
[25.10884666 -73.60151672]
[18.83148766 -87.22483063]
[3.55304170 -97.50348663]
[5.84258270 -114.90247345]
[-0.63691318 -128.43081665]
[-7.11640882 -141.95916748]
[-7.31815958 -126.96052551]
[-10.40260029 -112.28107452]
[-16.25441742 -98.46961975]
[-24.65483665 -86.04251862]
[-35.28980255 -75.46435547]
[-47.76171875 -67.13060760]
[-61.60431290 -61.35284042]
[-76.30007172 -58.34706116]
[-91.29957581 -58.22563934]
[-106.04206848 -60.99311447]
[-119.97638702 -66.54602051]
[-132.58158875 -74.67676544]
[-143.38641357 -85.08137512]
[-151.98690796 -97.37085724]
[-158.06155396 -111.08576202]
[-161.38323975 -125.71334839]
[-161.82777405 -140.70675659]
[-159.37855530 -155.50546265]
[-154.12713623 -169.55616760]
[-146.26983643 -182.33360291]
[-136.10041809 -193.36007690]
[-123.99907684 -202.22334290]
[-110.41822815 -208.59205627]
[-95.86559296 -212.22808838]
[-80.88523865 -212.99554443]
[-66.03721619 -210.86570740]
[-51.87662506 -205.91819763]
[-38.93288040 -198.33801270]
[-27.68988228 -188.40850830]
[-18.56796455 -176.50091553]
[-11.91032314 -163.06611633]
[-11.91032314 -178.06611633]
[-11.91032314 -193.06611633]
[-11.91032314 -208.06611633]
[-25.68419075 -214.64208984]
[-35.23411942 -226.54846191]
[-38.66395950 -241.42121887]
[-35.29271317 -256.30737305]
[-25.78974724 -268.25125122]
[-12.04188156 -274.88140869]
[3.22123575 -274.88140869]
[16.96910095 -268.25125122]
[26.47206688 -256.30737305]
[29.84331131 -241.42121887]
[26.41347313 -226.54846191]
[16.86354637 -214.64208984]
[3.08967710 -208.06611633]
[3.08967710 -193.06611633]
[3.08967710 -178.06611633]
[3.08967710 -163.06611633]
[6.41193676 -148.43865967]
[12.89143276 -134.91032410]
[19.37092781 -121.38197327]
[30.67211151 -117.06806183]
[36.18100357 -105.85040283]
[32.45480347 -93.50219727]
[38.73216248 -79.87887573]
[45.00952530 -66.25556183]
[51.28688431 -52.63224792]
[57.56424713 -39.00893021]
[63.84160614 -25.38561440]
[70.11896515 -11.76229858]
[77.68309021 -24.71544647]
[92.50363922 -27.02876472]
[103.65544891 -16.99696159]
[102.91782379 -2.01510811]
[90.83451843 6.87272978]
[76.31415558 3.11582994]
[81.59870911 8.28258133]
[81.53267670 17.41677284]
[86.56958771 31.54580307]
[89.58139038 33.37921906]
[91.85478973 36.76251602]
[92.67100525 41.33275604]
[91.50054169 46.41970825]
[95.90154266 60.75955582]
[100.30253601 75.09940338]
[104.70353699 89.43924713]
[109.15456390 75.11485291]
[119.68711853 64.43471527]
[133.94819641 59.78480911]
[148.75184631 62.20393372]
[160.79087830 71.15164948]
[167.37574768 84.62902069]
[167.03538513 99.62515259]
[159.84582520 112.78988647]
[147.41323853 121.18218231]
[132.51507568 122.92717743]
[118.47965240 117.63504028]
[108.44248962 106.48802185]
[110.44650269 121.35355377]
[112.45051575 136.21908569]
[114.45452881 151.08460999]
[116.45854187 165.95013428]
[120.70641327 174.03675842]
[118.38002777 181.05171204]
[120.16249084 195.94543457]
[121.94496155 210.83915710]
[123.72742462 225.73286438]
[125.50988770 240.62658691]
[142.48286438 242.78501892]
[158.32467651 249.22200012]
[171.97677612 259.50183105]
[182.52833557 272.93228149]
[189.27705383 288.61105347]
[191.77589417 305.48654175]
[189.86267090 322.42834473]
[183.67057800 338.30285645]
[173.61891174 352.04931641]
[160.38471985 362.75048828]
[144.85717773 369.69406128]
[147.52297974 384.45529175]
[150.18876648 399.21649170]
[160.25546265 411.42190552]
[154.90321350 425.32165527]
[157.56901550 440.08285522]
[160.23480225 454.84408569]
[162.90060425 469.60531616]
[165.56640625 484.36651611]
[170.17111206 492.25540161]
[168.16027832 499.36724854]
[170.60601807 514.16650391]
[173.05174255 528.96575928]
[175.49746704 543.76507568]
[177.94319153 558.56433105]
[180.38891602 573.36358643]
[182.83465576 588.16284180]
[185.28038025 602.96215820]
[200.31059265 604.12664795]
[214.62516785 608.85491943]
[227.39184570 616.87207031]
[237.86840820 627.71203613]
[245.44577026 640.74456787]
[249.68338013 655.21203613]
[250.33485413 670.27319336]
[247.36235046 685.05249023]
[240.93865967 698.69067383]
[231.43727112 710.39477539]
[219.41055298 719.48443604]
[205.55773926 725.43109131]
[190.68421936 727.88909912]
[175.65470886 726.71551514]
[161.34301758 721.97857666]
[148.58119202 713.95367432]
[138.11119080 703.10729980]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 193]
[8 192]
[9 191]
[10 190]
[11 189]
[12 188]
[13 187]
[14 186]
[15 184]
[16 183]
[17 182]
[18 181]
[19 180]
[21 178]
[22 177]
[23 176]
[38 165]
[39 164]
[40 163]
[41 162]
[42 161]
[43 159]
[44 158]
[45 157]
[46 156]
[47 155]
[48 143]
[49 142]
[50 141]
[51 140]
[52 136]
[53 135]
[54 133]
[55 127]
[56 126]
[57 125]
[58 124]
[59 123]
[60 122]
[61 121]
[63 118]
[64 117]
[65 116]
[96 115]
[97 114]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
