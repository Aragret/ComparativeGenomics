%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCGGCGUGAGCAUUCCCCACCUAAAAAGAUACAUCGGCAACUCAACACCAUCAGUUUUACAUUAUUAAUAAUCAUCAUUCCGAUCCUCCCACAACUAAxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[67.34111786 539.92242432]
[72.46424103 525.63543701]
[82.40541840 514.16644287]
[95.82019806 507.06655884]
[94.03772736 492.17285156]
[92.25526428 477.27914429]
[83.06039429 465.56146240]
[89.10298157 450.93963623]
[87.32051086 436.04592896]
[83.40444946 429.77804565]
[85.62408447 420.91741943]
[84.06356049 405.99880981]
[82.50303650 391.08020020]
[71.17363739 400.91101074]
[56.39682770 398.33306885]
[49.06551743 385.24673462]
[54.58407593 371.29879761]
[68.88442993 366.77111816]
[81.42403412 374.99993896]
[80.97742462 360.00659180]
[80.53082275 345.01324463]
[80.08421326 330.01989746]
[71.12200928 342.04815674]
[57.11733246 347.42114258]
[42.40970230 344.47402954]
[31.55642700 334.11996460]
[27.92051888 319.56729126]
[32.62859726 305.32531738]
[44.22182083 295.80706787]
[59.10789490 293.96185303]
[72.67420959 300.36148071]
[80.71717072 313.02316284]
[82.27769470 298.10455322]
[83.83821869 283.18594360]
[85.28763580 268.25613403]
[86.62586975 253.31594849]
[87.96410370 238.37576294]
[89.30233765 223.43557739]
[90.64057159 208.49539185]
[91.64483643 193.52905273]
[92.31462097 178.54402161]
[85.15333557 165.48394775]
[93.49913025 152.04302979]
[93.61080170 137.04344177]
[93.16419220 122.05009460]
[92.71759033 107.05674744]
[89.34886932 99.73388672]
[92.37762451 91.83721161]
[92.15429688 76.83886719]
[91.93096924 61.84053421]
[91.70764160 46.84219742]
[91.48431396 31.84385872]
[82.78968048 22.31673050]
[82.91243744 9.81998253]
[91.24139404 1.04758048]
[91.24139404 -13.95241928]
[91.24139404 -28.95241928]
[91.24139404 -43.95241928]
[91.24139404 -58.95241928]
[91.24139404 -73.95242310]
[81.66670990 -89.68159485]
[91.02743530 -104.52557373]
[79.96833801 -115.49526215]
[79.95550537 -130.70889282]
[90.48158264 -141.18444824]
[90.25825500 -156.18278503]
[90.03492737 -171.18112183]
[89.81159973 -186.17945862]
[89.14181519 -201.16450500]
[80.39953613 -214.35096741]
[87.16879272 -227.61846924]
[86.05314636 -242.57691956]
[84.93749237 -257.53536987]
[83.82184601 -272.49383545]
[82.70619965 -287.45227051]
[81.59054565 -302.41073608]
[67.45120239 -308.05346680]
[57.20569611 -319.23007202]
[52.84668350 -333.68756104]
[55.18746567 -348.54290771]
[63.71085358 -360.85800171]
[76.68223572 -368.22067261]
[75.56658936 -383.17910767]
[74.45093536 -398.13757324]
[73.33528900 -413.09600830]
[62.75178146 -402.46636963]
[47.75275040 -402.29586792]
[36.93032455 -412.68215942]
[36.48407745 -427.67550659]
[46.66964340 -438.68707275]
[61.65226364 -439.40887451]
[72.84880066 -429.42834473]
[73.07212830 -444.42669678]
[73.29545593 -459.42501831]
[63.95601273 -475.29501343]
[73.53670502 -489.99798584]
[73.53670502 -504.99798584]
[59.28403854 -510.15908813]
[47.65810776 -519.88604736]
[40.06280518 -533.00427246]
[37.41530228 -547.92962646]
[40.03529739 -562.85980225]
[47.60641098 -575.99200439]
[59.21439362 -585.74035645]
[73.45752716 -590.92773438]
[88.61589050 -590.92773438]
[102.85902405 -585.74035645]
[114.46700287 -575.99200439]
[122.03811646 -562.85980225]
[124.65811157 -547.92962646]
[122.01061249 -533.00427246]
[114.41530609 -519.88604736]
[102.78937531 -510.15908813]
[88.53670502 -504.99798584]
[88.53670502 -489.99798584]
[96.86566162 -481.22555542]
[96.98842621 -468.72882080]
[88.29379272 -459.20169067]
[88.07046509 -444.20336914]
[87.84713745 -429.20501709]
[88.29374695 -414.21166992]
[89.40939331 -399.25320435]
[90.52503967 -384.29476929]
[91.64068604 -369.33630371]
[105.56074524 -363.97930908]
[115.81666565 -353.06484985]
[120.33521271 -338.72106934]
[118.16906738 -323.77691650]
[109.69487000 -311.20413208]
[96.54900360 -303.52639771]
[97.66464996 -288.56793213]
[98.78029633 -273.60946655]
[99.89595032 -258.65103149]
[101.01159668 -243.69256592]
[102.12724304 -228.73411560]
[110.78972626 -216.61756897]
[104.10026550 -202.28015137]
[106.13392639 -200.35079956]
[107.52587891 -197.49964905]
[107.92120361 -193.96707153]
[107.05844879 -190.11737061]
[104.80993652 -186.40278625]
[105.03326416 -171.40444946]
[105.25659180 -156.40611267]
[105.47991943 -141.40777588]
[116.31322479 -131.25025940]
[116.75336456 -116.04299164]
[106.02577209 -104.74890137]
[114.48441315 -96.10147858]
[114.79322052 -83.60794067]
[106.24139404 -73.95242310]
[106.24139404 -58.95241928]
[106.24139404 -43.95241928]
[106.24139404 -28.95241928]
[106.24139404 -13.95241928]
[106.24139404 1.04758048]
[115.82209015 15.75054741]
[106.48265076 31.62053108]
[106.70597839 46.61886978]
[106.92930603 61.61720657]
[107.15263367 76.61553955]
[107.37596130 91.61387634]
[107.71093750 106.61013794]
[108.15753937 121.60349274]
[108.60414886 136.59683228]
[120.63334656 127.63590240]
[135.17749023 131.30575562]
[141.51518250 144.90110779]
[134.97450256 158.39997864]
[120.37700653 161.85150146]
[108.48416901 152.71281433]
[115.59754181 166.84471130]
[107.29965973 179.21380615]
[106.62987518 194.19883728]
[109.03691864 198.83059692]
[109.39118195 203.45960999]
[108.03746796 207.30441284]
[105.58075714 209.83363342]
[104.24252319 224.77381897]
[102.90428925 239.71400452]
[101.56605530 254.65419006]
[100.22782135 269.59436035]
[102.57913208 278.42098999]
[98.75682068 284.74645996]
[97.19629669 299.66506958]
[95.63578033 314.58367920]
[95.07756805 329.57330322]
[95.52416992 344.56665039]
[95.97077942 359.55999756]
[96.41738129 374.55334473]
[97.42164612 389.51968384]
[98.98217010 404.43829346]
[100.54268646 419.35690308]
[102.21423340 434.26345825]
[103.99669647 449.15719604]
[113.31906128 461.94015503]
[107.14897919 475.49667358]
[108.93144989 490.39038086]
[110.71391296 505.28408813]
[125.42524719 509.01788330]
[137.79209900 517.81701660]
[146.14195251 530.49157715]
[149.34556580 545.32739258]
[146.96966553 560.31805420]
[139.33557129 573.43615723]
[127.47573853 582.90765381]
[112.99411011 587.45153809]
[97.84921265 586.45330811]
[84.08926392 580.04797363]
[73.57518005 569.10186768]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 199]
[5 198]
[6 197]
[8 195]
[9 194]
[11 193]
[12 192]
[13 191]
[19 190]
[20 189]
[21 188]
[22 187]
[32 186]
[33 185]
[34 184]
[35 182]
[36 181]
[37 180]
[38 179]
[39 178]
[40 174]
[41 173]
[43 171]
[44 165]
[45 164]
[46 163]
[48 162]
[49 161]
[50 160]
[51 159]
[52 158]
[55 156]
[56 155]
[57 154]
[58 153]
[59 152]
[60 151]
[62 148]
[65 145]
[66 144]
[67 143]
[68 142]
[69 137]
[71 135]
[72 134]
[73 133]
[74 132]
[75 131]
[76 130]
[82 124]
[83 123]
[84 122]
[85 121]
[92 120]
[93 119]
[94 118]
[96 115]
[97 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
